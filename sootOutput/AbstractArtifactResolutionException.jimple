public class AbstractArtifactResolutionException extends java.lang.Exception
{
    private java.lang.String groupId;
    private java.lang.String artifactId;
    private java.lang.String version;
    private java.lang.String type;
    private java.lang.String classifier;
    private org.apache.maven.artifact.Artifact artifact;
    private java.util.List remoteRepositories;
    private final java.lang.String originalMessage;
    private final java.lang.String path;
    static final java.lang.String LS;

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List)
    {
        AbstractArtifactResolutionException this;
        java.lang.String message, groupId, artifactId, version, type, classifier;
        java.util.List remoteRepositories, path;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        message := @parameter0: java.lang.String;

        groupId := @parameter1: java.lang.String;

        artifactId := @parameter2: java.lang.String;

        version := @parameter3: java.lang.String;

        type := @parameter4: java.lang.String;

        classifier := @parameter5: java.lang.String;

        remoteRepositories := @parameter6: java.util.List;

        path := @parameter7: java.util.List;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        specialinvoke $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.Throwable)>(message, groupId, artifactId, version, type, classifier, remoteRepositories, path, null);

        return;
    }

    protected void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List, java.lang.Throwable)
    {
        AbstractArtifactResolutionException this;
        java.lang.String message, groupId, artifactId, version, type, $stack10, classifier, $stack11;
        java.util.List remoteRepositories, path;
        java.lang.Throwable t;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: AbstractArtifactResolutionException;

        message := @parameter0: java.lang.String;

        groupId := @parameter1: java.lang.String;

        artifactId := @parameter2: java.lang.String;

        version := @parameter3: java.lang.String;

        type := @parameter4: java.lang.String;

        classifier := @parameter5: java.lang.String;

        remoteRepositories := @parameter6: java.util.List;

        path := @parameter7: java.util.List;

        t := @parameter8: java.lang.Throwable;

        $stack10 = staticinvoke <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String constructMessageBase(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)>(message, groupId, artifactId, version, type, remoteRepositories, path);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack10, t);

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String originalMessage> = message;

        $r1 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $r1.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String groupId> = groupId;

        $r2 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $r2.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String artifactId> = artifactId;

        $r3 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $r3.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String type> = type;

        $r4 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $r4.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String classifier> = classifier;

        $r5 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $r5.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String version> = version;

        $r6 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $r6.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.util.List remoteRepositories> = remoteRepositories;

        $stack11 = staticinvoke <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String constructArtifactPath(java.util.List,java.lang.String)>(path, "");

        $r7 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $r7.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String path> = $stack11;

        return;
    }

    protected void <init>(java.lang.String, org.apache.maven.artifact.Artifact)
    {
        AbstractArtifactResolutionException this;
        java.lang.String message;
        org.apache.maven.artifact.Artifact artifact;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        message := @parameter0: java.lang.String;

        artifact := @parameter1: org.apache.maven.artifact.Artifact;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        specialinvoke $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: void <init>(java.lang.String,org.apache.maven.artifact.Artifact,java.util.List)>(message, artifact, null);

        return;
    }

    protected void <init>(java.lang.String, org.apache.maven.artifact.Artifact, java.util.List)
    {
        AbstractArtifactResolutionException this;
        java.lang.String message;
        org.apache.maven.artifact.Artifact artifact;
        java.util.List remoteRepositories;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        message := @parameter0: java.lang.String;

        artifact := @parameter1: org.apache.maven.artifact.Artifact;

        remoteRepositories := @parameter2: java.util.List;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        specialinvoke $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: void <init>(java.lang.String,org.apache.maven.artifact.Artifact,java.util.List,java.lang.Throwable)>(message, artifact, remoteRepositories, null);

        return;
    }

    protected void <init>(java.lang.String, org.apache.maven.artifact.Artifact, java.util.List, java.lang.Throwable)
    {
        AbstractArtifactResolutionException this;
        java.lang.String message, $stack5, $stack6, $stack7, $stack8, $stack9;
        org.apache.maven.artifact.Artifact artifact;
        java.util.List remoteRepositories, $stack10;
        java.lang.Throwable t;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0, $r1;

        this := @this: AbstractArtifactResolutionException;

        message := @parameter0: java.lang.String;

        artifact := @parameter1: org.apache.maven.artifact.Artifact;

        remoteRepositories := @parameter2: java.util.List;

        t := @parameter3: java.lang.Throwable;

        $stack5 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $stack6 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack7 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        $stack8 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        $stack9 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        $stack10 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.util.List getDependencyTrail()>();

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        specialinvoke $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.Throwable)>(message, $stack5, $stack6, $stack7, $stack8, $stack9, remoteRepositories, $stack10, t);

        $r1 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $r1.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: org.apache.maven.artifact.Artifact artifact> = artifact;

        return;
    }

    public org.apache.maven.artifact.Artifact getArtifact()
    {
        AbstractArtifactResolutionException this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: org.apache.maven.artifact.Artifact artifact>;

        return $stack1;
    }

    public java.lang.String getGroupId()
    {
        AbstractArtifactResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String groupId>;

        return $stack1;
    }

    public java.lang.String getArtifactId()
    {
        AbstractArtifactResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String artifactId>;

        return $stack1;
    }

    public java.lang.String getVersion()
    {
        AbstractArtifactResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String version>;

        return $stack1;
    }

    public java.lang.String getType()
    {
        AbstractArtifactResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String type>;

        return $stack1;
    }

    public java.lang.String getClassifier()
    {
        AbstractArtifactResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String classifier>;

        return $stack1;
    }

    public java.lang.String getPath()
    {
        AbstractArtifactResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String path>;

        return $stack1;
    }

    public java.util.List getRemoteRepositories()
    {
        AbstractArtifactResolutionException this;
        java.util.List $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.util.List remoteRepositories>;

        return $stack1;
    }

    public java.lang.String getOriginalMessage()
    {
        AbstractArtifactResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String originalMessage>;

        return $stack1;
    }

    protected static java.lang.String constructArtifactPath(java.util.List, java.lang.String)
    {
        java.lang.StringBuilder $stack5;
        java.util.List path;
        java.lang.String $stack6, $stack7, indentation, $stack11, $stack21, $stack23;
        java.util.Iterator i;
        boolean $stack14;
        java.lang.Object $stack20;
        int num;

        path := @parameter0: java.util.List;

        indentation := @parameter1: java.lang.String;

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        if path == null goto label2;

        $stack7 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indentation);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Path to dependency: ");

        $stack11 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        num = 1;

        i = interfaceinvoke path.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack14 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();

        if $stack14 == 0 goto label2;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indentation);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(num);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $stack20 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();

        $stack21 = (java.lang.String) $stack20;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        num = num + 1;

        goto label1;

     label2:
        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack6;
    }

    private static java.lang.String constructMessageBase(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List, java.util.List)
    {
        java.lang.StringBuilder $stack12, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack35, $stack56, $stack58, $stack60, $stack66;
        java.lang.String message, $stack14, groupId, artifactId, type, version, $stack24, $stack26, $stack28, $stack31, $stack34, $stack46, $stack49, $stack57, $stack30;
        java.util.List remoteRepositories, path;
        boolean $stack37, $stack54, $stack61, $stack67, $stack73, $stack39;
        java.util.Iterator i;
        java.lang.Object $stack45;
        org.apache.maven.artifact.repository.ArtifactRepository remoteRepository;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy releases, snapshots;

        message := @parameter0: java.lang.String;

        groupId := @parameter1: java.lang.String;

        artifactId := @parameter2: java.lang.String;

        version := @parameter3: java.lang.String;

        type := @parameter4: java.lang.String;

        remoteRepositories := @parameter5: java.util.List;

        path := @parameter6: java.util.List;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        if message == null goto label1;

        $stack73 = virtualinvoke message.<java.lang.String: boolean contains(java.lang.CharSequence)>("from the specified remote repositories:");

        if $stack73 != 0 goto label8;

     label1:
        $stack14 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(groupId);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(artifactId);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        $stack24 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        if remoteRepositories == null goto label7;

        $stack31 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31);

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from the specified remote repositories:");

        $stack34 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        $stack35 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $stack37 = interfaceinvoke remoteRepositories.<java.util.List: boolean isEmpty()>();

        if $stack37 == 0 goto label2;

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(none)");

     label2:
        i = interfaceinvoke remoteRepositories.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack39 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();

        if $stack39 == 0 goto label7;

        $stack45 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();

        remoteRepository = (org.apache.maven.artifact.repository.ArtifactRepository) $stack45;

        $stack46 = interfaceinvoke remoteRepository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46);

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $stack49 = interfaceinvoke remoteRepository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getUrl()>();

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49);

        releases = interfaceinvoke remoteRepository.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getReleases()>();

        if releases == null goto label4;

        $stack66 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", releases=");

        $stack67 = virtualinvoke releases.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean isEnabled()>();

        virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack67);

     label4:
        snapshots = interfaceinvoke remoteRepository.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getSnapshots()>();

        if snapshots == null goto label5;

        $stack60 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", snapshots=");

        $stack61 = virtualinvoke snapshots.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean isEnabled()>();

        virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack61);

     label5:
        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $stack54 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();

        if $stack54 == 0 goto label6;

        $stack56 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $stack57 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57);

        virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

     label6:
        goto label3;

     label7:
        $stack26 = staticinvoke <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String constructArtifactPath(java.util.List,java.lang.String)>(path, "");

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26);

        $stack28 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28);

     label8:
        $stack30 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack30;
    }

    protected static java.lang.String constructMissingArtifactMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.List)
    {
        java.lang.StringBuilder $stack10;
        java.lang.String message, type, $stack11, indentation, downloadUrl, $stack18, $stack20, $stack24, $stack26, $stack30, groupId, artifactId, version, classifier, $stack111, $stack113, $stack117, $stack42, $stack44, $stack48, $stack61, $stack13, $stack15, $stack17;
        boolean $stack12, $stack68, $stack80;
        java.util.List path;

        message := @parameter0: java.lang.String;

        indentation := @parameter1: java.lang.String;

        groupId := @parameter2: java.lang.String;

        artifactId := @parameter3: java.lang.String;

        version := @parameter4: java.lang.String;

        type := @parameter5: java.lang.String;

        classifier := @parameter6: java.lang.String;

        downloadUrl := @parameter7: java.lang.String;

        path := @parameter8: java.util.List;

        $stack10 = new java.lang.StringBuilder;

        specialinvoke $stack10.<java.lang.StringBuilder: void <init>(java.lang.String)>(message);

        $stack11 = "pom";

        $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(type);

        if $stack12 != 0 goto label5;

        if downloadUrl == null goto label1;

        $stack111 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack111);

        $stack113 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack113);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indentation);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try downloading the file manually from: ");

        $stack117 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack117);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indentation);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(downloadUrl);

        goto label2;

     label1:
        $stack18 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indentation);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Try downloading the file manually from the project website.");

     label2:
        $stack24 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        $stack26 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indentation);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Then, install it using the command: ");

        $stack30 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indentation);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mvn install:install-file -DgroupId=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(groupId);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -DartifactId=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(artifactId);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Dversion=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        if classifier == null goto label3;

        $stack80 = virtualinvoke classifier.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack80 != 0 goto label3;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Dclassifier=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(classifier);

     label3:
        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Dpackaging=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Dfile=/path/to/file");

        $stack42 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42);

        $stack44 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indentation);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Alternatively, if you host your own repository you can deploy the file there: ");

        $stack48 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(indentation);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    mvn deploy:deploy-file -DgroupId=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(groupId);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -DartifactId=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(artifactId);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Dversion=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        if classifier == null goto label4;

        $stack68 = virtualinvoke classifier.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack68 != 0 goto label4;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Dclassifier=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(classifier);

     label4:
        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Dpackaging=");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Dfile=/path/to/file");

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -Durl=[url] -DrepositoryId=[id]");

        $stack61 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack61);

     label5:
        $stack13 = staticinvoke <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String constructArtifactPath(java.util.List,java.lang.String)>(path, indentation);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack17;
    }

    public java.lang.String getArtifactPath()
    {
        AbstractArtifactResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.artifact.resolver.AbstractArtifactResolutionException $r0;

        this := @this: AbstractArtifactResolutionException;

        $r0 = (org.apache.maven.artifact.resolver.AbstractArtifactResolutionException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String path>;

        return $stack1;
    }

    static void <clinit>()
    {
        java.lang.String $stack0;

        $stack0 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        <org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: java.lang.String LS> = $stack0;

        return;
    }
}
