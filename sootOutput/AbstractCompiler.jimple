public interface  AbstractCompiler extends java.lang.Object
{

    public abstract void setExecutable(java.lang.String);

    public abstract void setOutputPath(java.lang.String);

    public abstract void addIncludePath(java.lang.String);

    public abstract void addLibraryPath(java.lang.String);

    public abstract void addDynamicLibrary(java.lang.String);

    public abstract void setCompileOnly();

    public abstract void setDebugEnabled();

    public abstract void addObjectFile(java.lang.String);

    public abstract void defineSymbol(java.lang.String);

    public abstract void undefineSymbol(java.lang.String);

    public abstract void setFatArchitectures(java.lang.String[]);

    public abstract void setOSXSDKAndDeploymentTarget(java.lang.String);

    public abstract void addOption(java.lang.String);

    public abstract int launch() throws java.io.IOException, java.lang.InterruptedException;

    public abstract boolean supportsDeclInFor();

    public abstract boolean supportsVLAs();

    public abstract void reset();

    public abstract java.lang.String getCommandLine();

    public abstract org.ooc.frontend.compilers.AbstractCompiler clone();
}
