abstract enum class AbstractMavenTransferListener$FileSizeFormat$ScaleUnit extends java.lang.Enum
{
    public static final enum org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE;
    public static final enum org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE;
    public static final enum org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE;
    public static final enum org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE;
    private static final org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit[] $VALUES;

    public static org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit[] values()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit[] $stack0, $stack2;
        java.lang.Object $stack1;

        $stack0 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit[] $VALUES>;

        $stack1 = virtualinvoke $stack0.<java.lang.Object: java.lang.Object clone()>();

        $stack2 = (org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit[]) $stack1;

        return $stack2;
    }

    public static org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit valueOf(java.lang.String)
    {
        java.lang.String name;
        java.lang.Enum $stack1;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit $stack2;

        name := @parameter0: java.lang.String;

        $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/maven/cli/transfer/AbstractMavenTransferListener$FileSizeFormat$ScaleUnit;", name);

        $stack2 = (org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit) $stack1;

        return $stack2;
    }

    private void <init>(java.lang.String, int)
    {
        AbstractMavenTransferListener$FileSizeFormat$ScaleUnit this;
        java.lang.String l1;
        int l2;

        this := @this: AbstractMavenTransferListener$FileSizeFormat$ScaleUnit;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }

    public abstract long bytes();

    public abstract java.lang.String symbol();

    public static org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit getScaleUnit(long)
    {
        long size, $stack4, $stack7, $stack10;
        byte $stack2, $stack5, $stack8, $stack11;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit $stack3, $stack6, $stack9, $stack12, $stack13, $stack14, $stack15;
        boolean $stack16;

        size := @parameter0: long;

        $stack2 = size cmp 0L;

        if $stack2 < 0 goto label1;

        $stack16 = 1;

        goto label2;

     label1:
        $stack16 = 0;

     label2:
        staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,long)>($stack16, "file size cannot be negative: %s", size);

        $stack3 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack4 = virtualinvoke $stack3.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: long bytes()>();

        $stack5 = size cmp $stack4;

        if $stack5 < 0 goto label3;

        $stack15 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        return $stack15;

     label3:
        $stack6 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack7 = virtualinvoke $stack6.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: long bytes()>();

        $stack8 = size cmp $stack7;

        if $stack8 < 0 goto label4;

        $stack14 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        return $stack14;

     label4:
        $stack9 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack10 = virtualinvoke $stack9.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: long bytes()>();

        $stack11 = size cmp $stack10;

        if $stack11 < 0 goto label5;

        $stack13 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        return $stack13;

     label5:
        $stack12 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        return $stack12;
    }

    void <init>(java.lang.String, int, org.apache.maven.cli.transfer.AbstractMavenTransferListener$1)
    {
        AbstractMavenTransferListener$FileSizeFormat$ScaleUnit this;
        java.lang.String x0;
        int x1;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$1 x2;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit $r0;

        this := @this: AbstractMavenTransferListener$FileSizeFormat$ScaleUnit;

        x0 := @parameter0: java.lang.String;

        x1 := @parameter1: int;

        x2 := @parameter2: org.apache.maven.cli.transfer.AbstractMavenTransferListener$1;

        $r0 = (org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit) this;

        specialinvoke $r0.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: void <init>(java.lang.String,int)>(x0, x1);

        return;
    }

    static void <clinit>()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit[] $stack4;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit $stack5, $stack6, $stack7, $stack8, $r0, $r1, $r2, $r3;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$1 $u0;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$2 $u1;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$3 $u2;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$4 $u3;

        $u0 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$1;

        specialinvoke $u0.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$1: void <init>(java.lang.String,int)>("BYTE", 0);

        $r0 = (org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit) $u0;

        <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE> = $r0;

        $u1 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$2;

        specialinvoke $u1.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$2: void <init>(java.lang.String,int)>("KILOBYTE", 1);

        $r1 = (org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit) $u1;

        <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE> = $r1;

        $u2 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$3;

        specialinvoke $u2.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$3: void <init>(java.lang.String,int)>("MEGABYTE", 2);

        $r2 = (org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit) $u2;

        <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE> = $r2;

        $u3 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$4;

        specialinvoke $u3.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit$4: void <init>(java.lang.String,int)>("GIGABYTE", 3);

        $r3 = (org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit) $u3;

        <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE> = $r3;

        $stack4 = newarray (org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)[4];

        $stack5 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack4[0] = $stack5;

        $stack6 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack4[1] = $stack6;

        $stack7 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack4[2] = $stack7;

        $stack8 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack4[3] = $stack8;

        <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit[] $VALUES> = $stack4;

        return;
    }
}
