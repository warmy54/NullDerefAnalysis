public abstract class AbstractProjectInheritanceTestCase extends org.apache.maven.project.AbstractMavenProjectTestCase
{

    public void <init>()
    {
        AbstractProjectInheritanceTestCase this;

        this := @this: AbstractProjectInheritanceTestCase;

        specialinvoke this.<org.apache.maven.project.AbstractMavenProjectTestCase: void <init>()>();

        return;
    }

    protected java.lang.String getTestSeries()
    {
        AbstractProjectInheritanceTestCase this;
        java.lang.Class $stack2;
        java.lang.Package $stack3;
        java.lang.String className, $stack7;
        int $stack5, $stack6;

        this := @this: AbstractProjectInheritanceTestCase;

        $stack2 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.Package getPackage()>();

        className = virtualinvoke $stack3.<java.lang.Package: java.lang.String getName()>();

        $stack5 = virtualinvoke className.<java.lang.String: int lastIndexOf(int)>(46);

        $stack6 = $stack5 + 1;

        $stack7 = virtualinvoke className.<java.lang.String: java.lang.String substring(int)>($stack6);

        return $stack7;
    }

    protected java.io.File projectFile(java.lang.String)
    {
        AbstractProjectInheritanceTestCase this;
        java.lang.String name;
        java.io.File $stack2;
        org.apache.maven.project.inheritance.AbstractProjectInheritanceTestCase $r0;

        this := @this: AbstractProjectInheritanceTestCase;

        name := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.inheritance.AbstractProjectInheritanceTestCase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.project.inheritance.AbstractProjectInheritanceTestCase: java.io.File projectFile(java.lang.String,java.lang.String)>("maven", name);

        return $stack2;
    }

    protected java.io.File projectFile(java.lang.String, java.lang.String)
    {
        AbstractProjectInheritanceTestCase this;
        java.io.File $stack4, $u1;
        java.lang.StringBuilder $stack6, $stack7, $stack8, $stack9, $stack10, $u0;
        java.lang.String groupId, artifactId, $stack11;
        org.apache.maven.project.inheritance.AbstractProjectInheritanceTestCase $r0;

        this := @this: AbstractProjectInheritanceTestCase;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        $u1 = new java.io.File;

        $r0 = (org.apache.maven.project.inheritance.AbstractProjectInheritanceTestCase) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.project.inheritance.AbstractProjectInheritanceTestCase: java.io.File getLocalRepositoryPath()>();

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack6 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(groupId);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/poms/");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(artifactId);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-1.0.pom");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack4, $stack11);

        return $u1;
    }

    protected java.io.File getLocalRepositoryPath()
    {
        java.lang.StringBuilder $stack2, $stack4, $u0;
        AbstractProjectInheritanceTestCase this;
        java.lang.String $stack3, $stack5;
        java.io.File $stack6;
        org.apache.maven.project.inheritance.AbstractProjectInheritanceTestCase $r0;

        this := @this: AbstractProjectInheritanceTestCase;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src/test/resources/inheritance-repo/");

        $r0 = (org.apache.maven.project.inheritance.AbstractProjectInheritanceTestCase) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.project.inheritance.AbstractProjectInheritanceTestCase: java.lang.String getTestSeries()>();

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack6 = staticinvoke <org.codehaus.plexus.testing.PlexusExtension: java.io.File getTestFile(java.lang.String)>($stack5);

        return $stack6;
    }
}
