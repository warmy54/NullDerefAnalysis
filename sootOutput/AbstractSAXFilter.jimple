public class AbstractSAXFilter extends org.xml.sax.helpers.XMLFilterImpl implements org.xml.sax.ext.LexicalHandler
{
    private org.xml.sax.ext.LexicalHandler lexicalHandler;

    public void <init>()
    {
        AbstractSAXFilter this;

        this := @this: AbstractSAXFilter;

        specialinvoke this.<org.xml.sax.helpers.XMLFilterImpl: void <init>()>();

        return;
    }

    public void <init>(org.apache.maven.model.transform.sax.AbstractSAXFilter)
    {
        AbstractSAXFilter this;
        org.apache.maven.model.transform.sax.AbstractSAXFilter parent;
        org.xml.sax.XMLReader $r0;

        this := @this: AbstractSAXFilter;

        parent := @parameter0: org.apache.maven.model.transform.sax.AbstractSAXFilter;

        $r0 = (org.xml.sax.XMLReader) parent;

        specialinvoke this.<org.xml.sax.helpers.XMLFilterImpl: void <init>(org.xml.sax.XMLReader)>($r0);

        virtualinvoke parent.<org.apache.maven.model.transform.sax.AbstractSAXFilter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>(this);

        return;
    }

    public org.xml.sax.ext.LexicalHandler getLexicalHandler()
    {
        AbstractSAXFilter this;
        org.xml.sax.ext.LexicalHandler $stack1;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r0;

        this := @this: AbstractSAXFilter;

        $r0 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        return $stack1;
    }

    public void setLexicalHandler(org.xml.sax.ext.LexicalHandler)
    {
        AbstractSAXFilter this;
        org.xml.sax.ext.LexicalHandler lexicalHandler;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r0;

        this := @this: AbstractSAXFilter;

        lexicalHandler := @parameter0: org.xml.sax.ext.LexicalHandler;

        $r0 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $r0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler> = lexicalHandler;

        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        AbstractSAXFilter this;
        org.xml.sax.ext.LexicalHandler $stack4, $stack5;
        java.lang.String name, publicId, systemId;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r0, $r1;

        this := @this: AbstractSAXFilter;

        name := @parameter0: java.lang.String;

        publicId := @parameter1: java.lang.String;

        systemId := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack4 = $r0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $stack4 == null goto label1;

        $r1 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack5 = $r1.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack5.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(name, publicId, systemId);

     label1:
        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        AbstractSAXFilter this;
        org.xml.sax.ext.LexicalHandler $stack1, $stack2;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r0, $r1;

        this := @this: AbstractSAXFilter;

        $r0 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack2 = $r1.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack2.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

     label1:
        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        AbstractSAXFilter this;
        org.xml.sax.ext.LexicalHandler $stack2, $stack3;
        java.lang.String name;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r0, $r1;

        this := @this: AbstractSAXFilter;

        name := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack2 = $r0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack3 = $r1.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack3.<org.xml.sax.ext.LexicalHandler: void startEntity(java.lang.String)>(name);

     label1:
        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        AbstractSAXFilter this;
        org.xml.sax.ext.LexicalHandler $stack2, $stack3;
        java.lang.String name;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r0, $r1;

        this := @this: AbstractSAXFilter;

        name := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack2 = $r0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack3 = $r1.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack3.<org.xml.sax.ext.LexicalHandler: void endEntity(java.lang.String)>(name);

     label1:
        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        AbstractSAXFilter this;
        org.xml.sax.ext.LexicalHandler $stack1, $stack2;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r0, $r1;

        this := @this: AbstractSAXFilter;

        $r0 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack2 = $r1.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack2.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

     label1:
        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        AbstractSAXFilter this;
        org.xml.sax.ext.LexicalHandler $stack1, $stack2;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r0, $r1;

        this := @this: AbstractSAXFilter;

        $r0 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack2 = $r1.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack2.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

     label1:
        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        AbstractSAXFilter this;
        org.xml.sax.ext.LexicalHandler $stack4, $stack5;
        char[] ch;
        int start, length;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r0, $r1;

        this := @this: AbstractSAXFilter;

        ch := @parameter0: char[];

        start := @parameter1: int;

        length := @parameter2: int;

        $r0 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack4 = $r0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        if $stack4 == null goto label1;

        $r1 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) this;

        $stack5 = $r1.<org.apache.maven.model.transform.sax.AbstractSAXFilter: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack5.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(ch, start, length);

     label1:
        return;
    }

    protected static java.lang.String nullSafeAppend(java.lang.String, java.lang.String)
    {
        java.lang.String originalValue, charSegment, $stack5;
        java.lang.StringBuilder $stack2, $stack3, $stack4;

        originalValue := @parameter0: java.lang.String;

        charSegment := @parameter1: java.lang.String;

        if originalValue != null goto label1;

        return charSegment;

     label1:
        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack3 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(originalValue);

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(charSegment);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack5;
    }
}
