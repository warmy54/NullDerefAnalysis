class AbstractStringBasedModelInterpolator$2 extends org.codehaus.plexus.interpolation.AbstractValueSource
{
    final java.io.File val$projectDir;
    final org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator this$0;

    void <init>(org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator, boolean, java.io.File)
    {
        AbstractStringBasedModelInterpolator$2 this;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator this$0;
        java.io.File l3;
        boolean usesFeedback;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2 $r0, $r1;

        this := @this: AbstractStringBasedModelInterpolator$2;

        this$0 := @parameter0: org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator;

        usesFeedback := @parameter1: boolean;

        l3 := @parameter2: java.io.File;

        $r0 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2) this;

        $r0.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2: org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator this$0> = this$0;

        $r1 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2) this;

        $r1.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2: java.io.File val$projectDir> = l3;

        specialinvoke this.<org.codehaus.plexus.interpolation.AbstractValueSource: void <init>(boolean)>(usesFeedback);

        return;
    }

    public java.lang.Object getValue(java.lang.String)
    {
        java.lang.String expression, $stack2, $stack8;
        boolean $stack3;
        AbstractStringBasedModelInterpolator$2 this;
        java.io.File $stack4, $stack5;
        java.nio.file.Path $stack6;
        java.net.URI $stack7;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2 $r0;

        this := @this: AbstractStringBasedModelInterpolator$2;

        expression := @parameter0: java.lang.String;

        $stack2 = "baseUri";

        $stack3 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>(expression);

        if $stack3 == 0 goto label1;

        $r0 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2) this;

        $stack4 = $r0.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2: java.io.File val$projectDir>;

        $stack5 = virtualinvoke $stack4.<java.io.File: java.io.File getAbsoluteFile()>();

        $stack6 = virtualinvoke $stack5.<java.io.File: java.nio.file.Path toPath()>();

        $stack7 = interfaceinvoke $stack6.<java.nio.file.Path: java.net.URI toUri()>();

        $stack8 = virtualinvoke $stack7.<java.net.URI: java.lang.String toASCIIString()>();

        return $stack8;

     label1:
        return null;
    }
}
