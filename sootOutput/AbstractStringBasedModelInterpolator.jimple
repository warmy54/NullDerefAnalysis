public abstract class AbstractStringBasedModelInterpolator extends java.lang.Object implements org.apache.maven.model.interpolation.ModelInterpolator
{
    public static final java.lang.String SHA1_PROPERTY;
    public static final java.lang.String CHANGELIST_PROPERTY;
    public static final java.lang.String REVISION_PROPERTY;
    private static final java.util.List PROJECT_PREFIXES;
    private static final java.util.Collection TRANSLATED_PATH_EXPRESSIONS;
    private org.apache.maven.model.path.PathTranslator pathTranslator;
    private org.apache.maven.model.path.UrlNormalizer urlNormalizer;

    public void <init>()
    {
        AbstractStringBasedModelInterpolator this;

        this := @this: AbstractStringBasedModelInterpolator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator setPathTranslator(org.apache.maven.model.path.PathTranslator)
    {
        AbstractStringBasedModelInterpolator this;
        org.apache.maven.model.path.PathTranslator pathTranslator;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator $r0, $r1;

        this := @this: AbstractStringBasedModelInterpolator;

        pathTranslator := @parameter0: org.apache.maven.model.path.PathTranslator;

        $r0 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator) this;

        $r0.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: org.apache.maven.model.path.PathTranslator pathTranslator> = pathTranslator;

        $r1 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator) this;

        return $r1;
    }

    public org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator setUrlNormalizer(org.apache.maven.model.path.UrlNormalizer)
    {
        AbstractStringBasedModelInterpolator this;
        org.apache.maven.model.path.UrlNormalizer urlNormalizer;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator $r0, $r1;

        this := @this: AbstractStringBasedModelInterpolator;

        urlNormalizer := @parameter0: org.apache.maven.model.path.UrlNormalizer;

        $r0 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator) this;

        $r0.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: org.apache.maven.model.path.UrlNormalizer urlNormalizer> = urlNormalizer;

        $r1 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator) this;

        return $r1;
    }

    protected java.util.List createValueSources(org.apache.maven.model.Model, java.io.File, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        org.apache.maven.model.Model model;
        java.util.Properties modelProperties, $stack20, $stack22, $stack24, $stack26, $stack31, $stack37, $stack52, $stack58;
        java.util.List $stack13, $stack65, $stack69;
        org.apache.maven.model.building.ModelBuildingRequest config;
        int $stack14, $stack16;
        java.io.File projectDir;
        boolean $stack23, $stack25, $stack27;
        AbstractStringBasedModelInterpolator this;
        java.lang.Object $stack38, $stack53, $stack59, modelValueSource1, modelValueSource2;
        java.util.Date $stack72;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.codehaus.plexus.interpolation.PrefixedObjectValueSource $u0;
        org.apache.maven.model.interpolation.ProblemDetectingValueSource $u1, $u3;
        org.codehaus.plexus.interpolation.ObjectBasedValueSource $u2;
        java.util.ArrayList $u4;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$1 $u5;
        org.codehaus.plexus.interpolation.PrefixedValueSourceWrapper $u6, $u8;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2 $u7;
        org.apache.maven.model.interpolation.BuildTimestampValueSource $u9;
        org.codehaus.plexus.interpolation.MapBasedValueSource $u10, $u11, $u12;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$3 $u13;
        org.codehaus.plexus.interpolation.ValueSource $r0, $r1, $r3, $r5;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator $r2, $r4, $r6;

        this := @this: AbstractStringBasedModelInterpolator;

        model := @parameter0: org.apache.maven.model.Model;

        projectDir := @parameter1: java.io.File;

        config := @parameter2: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter3: org.apache.maven.model.building.ModelProblemCollector;

        modelProperties = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        $u0 = new org.codehaus.plexus.interpolation.PrefixedObjectValueSource;

        $stack13 = <org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: java.util.List PROJECT_PREFIXES>;

        specialinvoke $u0.<org.codehaus.plexus.interpolation.PrefixedObjectValueSource: void <init>(java.util.List,java.lang.Object,boolean)>($stack13, model, 0);

        modelValueSource1 = $u0;

        $stack14 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack14 < 20 goto label1;

        $u1 = new org.apache.maven.model.interpolation.ProblemDetectingValueSource;

        $r0 = (org.codehaus.plexus.interpolation.ValueSource) $u0;

        specialinvoke $u1.<org.apache.maven.model.interpolation.ProblemDetectingValueSource: void <init>(org.codehaus.plexus.interpolation.ValueSource,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector)>($r0, "pom.", "project.", problems);

        modelValueSource1 = $u1;

     label1:
        $u2 = new org.codehaus.plexus.interpolation.ObjectBasedValueSource;

        specialinvoke $u2.<org.codehaus.plexus.interpolation.ObjectBasedValueSource: void <init>(java.lang.Object)>(model);

        modelValueSource2 = $u2;

        $stack16 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack16 < 20 goto label2;

        $u3 = new org.apache.maven.model.interpolation.ProblemDetectingValueSource;

        $r1 = (org.codehaus.plexus.interpolation.ValueSource) $u2;

        specialinvoke $u3.<org.apache.maven.model.interpolation.ProblemDetectingValueSource: void <init>(org.codehaus.plexus.interpolation.ValueSource,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector)>($r1, "", "project.", problems);

        modelValueSource2 = $u3;

     label2:
        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>(int)>(9);

        if projectDir == null goto label3;

        $u6 = new org.codehaus.plexus.interpolation.PrefixedValueSourceWrapper;

        $u5 = new org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$1;

        $r2 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator) this;

        specialinvoke $u5.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$1: void <init>(org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator,boolean,java.io.File)>($r2, 0, projectDir);

        $stack65 = <org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: java.util.List PROJECT_PREFIXES>;

        $r3 = (org.codehaus.plexus.interpolation.ValueSource) $u5;

        specialinvoke $u6.<org.codehaus.plexus.interpolation.PrefixedValueSourceWrapper: void <init>(org.codehaus.plexus.interpolation.ValueSource,java.util.List,boolean)>($r3, $stack65, 1);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($u6);

        $u8 = new org.codehaus.plexus.interpolation.PrefixedValueSourceWrapper;

        $u7 = new org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2;

        $r4 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator) this;

        specialinvoke $u7.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$2: void <init>(org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator,boolean,java.io.File)>($r4, 0, projectDir);

        $stack69 = <org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: java.util.List PROJECT_PREFIXES>;

        $r5 = (org.codehaus.plexus.interpolation.ValueSource) $u7;

        specialinvoke $u8.<org.codehaus.plexus.interpolation.PrefixedValueSourceWrapper: void <init>(org.codehaus.plexus.interpolation.ValueSource,java.util.List,boolean)>($r5, $stack69, 0);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($u8);

        $u9 = new org.apache.maven.model.interpolation.BuildTimestampValueSource;

        $stack72 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Date getBuildStartTime()>();

        specialinvoke $u9.<org.apache.maven.model.interpolation.BuildTimestampValueSource: void <init>(java.util.Date,java.util.Properties)>($stack72, modelProperties);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($u9);

     label3:
        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>(modelValueSource1);

        $u10 = new org.codehaus.plexus.interpolation.MapBasedValueSource;

        $stack20 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getUserProperties()>();

        specialinvoke $u10.<org.codehaus.plexus.interpolation.MapBasedValueSource: void <init>(java.util.Map)>($stack20);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($u10);

        $stack22 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        $stack23 = virtualinvoke $stack22.<java.util.Properties: boolean containsKey(java.lang.Object)>("revision");

        if $stack23 == 0 goto label4;

        $stack58 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        $stack59 = virtualinvoke $stack58.<java.util.Properties: java.lang.Object get(java.lang.Object)>("revision");

        virtualinvoke modelProperties.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("revision", $stack59);

     label4:
        $stack24 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        $stack25 = virtualinvoke $stack24.<java.util.Properties: boolean containsKey(java.lang.Object)>("changelist");

        if $stack25 == 0 goto label5;

        $stack52 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        $stack53 = virtualinvoke $stack52.<java.util.Properties: java.lang.Object get(java.lang.Object)>("changelist");

        virtualinvoke modelProperties.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("changelist", $stack53);

     label5:
        $stack26 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        $stack27 = virtualinvoke $stack26.<java.util.Properties: boolean containsKey(java.lang.Object)>("sha1");

        if $stack27 == 0 goto label6;

        $stack37 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        $stack38 = virtualinvoke $stack37.<java.util.Properties: java.lang.Object get(java.lang.Object)>("sha1");

        virtualinvoke modelProperties.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("sha1", $stack38);

     label6:
        $u11 = new org.codehaus.plexus.interpolation.MapBasedValueSource;

        specialinvoke $u11.<org.codehaus.plexus.interpolation.MapBasedValueSource: void <init>(java.util.Map)>(modelProperties);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($u11);

        $u12 = new org.codehaus.plexus.interpolation.MapBasedValueSource;

        $stack31 = interfaceinvoke config.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        specialinvoke $u12.<org.codehaus.plexus.interpolation.MapBasedValueSource: void <init>(java.util.Map)>($stack31);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($u12);

        $u13 = new org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$3;

        $r6 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator) this;

        specialinvoke $u13.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator$3: void <init>(org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator,boolean,org.apache.maven.model.building.ModelBuildingRequest)>($r6, 0, config);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($u13);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>(modelValueSource2);

        return $u4;
    }

    protected java.util.List createPostProcessors(org.apache.maven.model.Model, java.io.File, org.apache.maven.model.building.ModelBuildingRequest)
    {
        java.io.File projectDir;
        AbstractStringBasedModelInterpolator this;
        org.apache.maven.model.path.UrlNormalizer $stack7;
        org.apache.maven.model.path.PathTranslator $stack10;
        java.util.Collection $stack11;
        java.util.List $stack12;
        org.apache.maven.model.Model model;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.ArrayList $u0;
        org.apache.maven.model.interpolation.PathTranslatingPostProcessor $u1;
        org.apache.maven.model.interpolation.UrlNormalizingPostProcessor $u2;
        org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator $r0, $r1;

        this := @this: AbstractStringBasedModelInterpolator;

        model := @parameter0: org.apache.maven.model.Model;

        projectDir := @parameter1: java.io.File;

        config := @parameter2: org.apache.maven.model.building.ModelBuildingRequest;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(int)>(2);

        if projectDir == null goto label1;

        $u1 = new org.apache.maven.model.interpolation.PathTranslatingPostProcessor;

        $stack12 = <org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: java.util.List PROJECT_PREFIXES>;

        $stack11 = <org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: java.util.Collection TRANSLATED_PATH_EXPRESSIONS>;

        $r0 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator) this;

        $stack10 = $r0.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: org.apache.maven.model.path.PathTranslator pathTranslator>;

        specialinvoke $u1.<org.apache.maven.model.interpolation.PathTranslatingPostProcessor: void <init>(java.util.List,java.util.Collection,java.io.File,org.apache.maven.model.path.PathTranslator)>($stack12, $stack11, projectDir, $stack10);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u1);

     label1:
        $u2 = new org.apache.maven.model.interpolation.UrlNormalizingPostProcessor;

        $r1 = (org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator) this;

        $stack7 = $r1.<org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: org.apache.maven.model.path.UrlNormalizer urlNormalizer>;

        specialinvoke $u2.<org.apache.maven.model.interpolation.UrlNormalizingPostProcessor: void <init>(org.apache.maven.model.path.UrlNormalizer)>($stack7);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u2);

        return $u0;
    }

    protected org.codehaus.plexus.interpolation.RecursionInterceptor createRecursionInterceptor()
    {
        java.util.List $stack2;
        AbstractStringBasedModelInterpolator this;
        org.codehaus.plexus.interpolation.PrefixAwareRecursionInterceptor $u0;
        org.codehaus.plexus.interpolation.RecursionInterceptor $r0;

        this := @this: AbstractStringBasedModelInterpolator;

        $u0 = new org.codehaus.plexus.interpolation.PrefixAwareRecursionInterceptor;

        $stack2 = <org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: java.util.List PROJECT_PREFIXES>;

        specialinvoke $u0.<org.codehaus.plexus.interpolation.PrefixAwareRecursionInterceptor: void <init>(java.util.Collection)>($stack2);

        $r0 = (org.codehaus.plexus.interpolation.RecursionInterceptor) $u0;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $stack1;
        java.util.List $stack2;
        java.util.HashSet $stack3;

        <AbstractStringBasedModelInterpolator: java.lang.String REVISION_PROPERTY> = "revision";

        <AbstractStringBasedModelInterpolator: java.lang.String CHANGELIST_PROPERTY> = "changelist";

        <AbstractStringBasedModelInterpolator: java.lang.String SHA1_PROPERTY> = "sha1";

        $stack1 = newarray (java.lang.String)[2];

        $stack1[0] = "pom.";

        $stack1[1] = "project.";

        $stack2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack1);

        <org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: java.util.List PROJECT_PREFIXES> = $stack2;

        $stack3 = new java.util.HashSet;

        specialinvoke $stack3.<java.util.HashSet: void <init>()>();

        interfaceinvoke $stack3.<java.util.Collection: boolean add(java.lang.Object)>("build.directory");

        interfaceinvoke $stack3.<java.util.Collection: boolean add(java.lang.Object)>("build.outputDirectory");

        interfaceinvoke $stack3.<java.util.Collection: boolean add(java.lang.Object)>("build.testOutputDirectory");

        interfaceinvoke $stack3.<java.util.Collection: boolean add(java.lang.Object)>("build.sourceDirectory");

        interfaceinvoke $stack3.<java.util.Collection: boolean add(java.lang.Object)>("build.testSourceDirectory");

        interfaceinvoke $stack3.<java.util.Collection: boolean add(java.lang.Object)>("build.scriptSourceDirectory");

        interfaceinvoke $stack3.<java.util.Collection: boolean add(java.lang.Object)>("reporting.outputDirectory");

        <org.apache.maven.model.interpolation.AbstractStringBasedModelInterpolator: java.util.Collection TRANSLATED_PATH_EXPRESSIONS> = $stack3;

        return;
    }
}
