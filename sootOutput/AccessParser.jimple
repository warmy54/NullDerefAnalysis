public class AccessParser extends java.lang.Object
{

    public void <init>()
    {
        AccessParser this;

        this := @this: AccessParser;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.ooc.frontend.model.VariableAccess parse(org.ooc.frontend.model.Module, org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader)
    {
        org.ooc.frontend.model.tokens.TokenReader reader;
        int mark, $stack14;
        java.lang.Object $stack8;
        org.ooc.frontend.model.tokens.Token token;
        boolean $stack9;
        org.ooc.frontend.model.Module module;
        org.ubi.SourceReader sReader;
        org.ooc.frontend.model.Type type;
        java.lang.String name;
        org.ooc.frontend.model.NodeList $stack13;
        org.ooc.frontend.model.TypeAccess $u0;
        org.ooc.frontend.model.VariableAccess $u1, $r0;

        module := @parameter0: org.ooc.frontend.model.Module;

        sReader := @parameter1: org.ubi.SourceReader;

        reader := @parameter2: org.ooc.frontend.model.tokens.TokenReader;

        mark = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: int mark()>();

        $stack8 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        token = (org.ooc.frontend.model.tokens.Token) $stack8;

        $stack9 = virtualinvoke token.<org.ooc.frontend.model.tokens.Token: boolean isNameToken()>();

        if $stack9 == 0 goto label2;

        type = staticinvoke <org.ooc.frontend.parser.TypeParser: org.ooc.frontend.model.Type parse(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader)>(module, sReader, reader);

        if type == null goto label1;

        $stack13 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack14 = virtualinvoke $stack13.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack14 <= 0 goto label1;

        $u0 = new org.ooc.frontend.model.TypeAccess;

        specialinvoke $u0.<org.ooc.frontend.model.TypeAccess: void <init>(org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>(type, token);

        $r0 = (org.ooc.frontend.model.VariableAccess) $u0;

        return $r0;

     label1:
        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void reset(int)>(mark);

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        name = virtualinvoke token.<org.ooc.frontend.model.tokens.Token: java.lang.String get(org.ubi.SourceReader)>(sReader);

        $u1 = new org.ooc.frontend.model.VariableAccess;

        specialinvoke $u1.<org.ooc.frontend.model.VariableAccess: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>(name, token);

        return $u1;

     label2:
        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void reset(int)>(mark);

        return null;
    }
}
