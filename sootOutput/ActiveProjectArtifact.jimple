public class ActiveProjectArtifact extends java.lang.Object implements org.apache.maven.artifact.Artifact
{
    private final org.apache.maven.artifact.Artifact artifact;
    private final org.apache.maven.project.MavenProject project;

    public void <init>(org.apache.maven.project.MavenProject, org.apache.maven.artifact.Artifact)
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact artifact, $stack3;
        org.apache.maven.project.MavenProject project;
        java.io.File $stack4;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0, $r1;

        this := @this: ActiveProjectArtifact;

        project := @parameter0: org.apache.maven.project.MavenProject;

        artifact := @parameter1: org.apache.maven.artifact.Artifact;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact> = artifact;

        $r1 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $r1.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.project.MavenProject project> = project;

        $stack3 = virtualinvoke project.<org.apache.maven.project.MavenProject: org.apache.maven.artifact.Artifact getArtifact()>();

        $stack4 = interfaceinvoke $stack3.<org.apache.maven.artifact.Artifact: java.io.File getFile()>();

        interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: void setFile(java.io.File)>($stack4);

        interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: void setResolved(boolean)>(1);

        return;
    }

    public java.io.File getFile()
    {
        ActiveProjectArtifact this;
        org.apache.maven.project.MavenProject $stack1;
        org.apache.maven.artifact.Artifact $stack2;
        java.io.File $stack3;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.project.MavenProject project>;

        $stack2 = virtualinvoke $stack1.<org.apache.maven.project.MavenProject: org.apache.maven.artifact.Artifact getArtifact()>();

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: java.io.File getFile()>();

        return $stack3;
    }

    public java.lang.String getGroupId()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        return $stack2;
    }

    public java.lang.String getArtifactId()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        return $stack2;
    }

    public java.lang.String getVersion()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        return $stack2;
    }

    public void setVersion(java.lang.String)
    {
        ActiveProjectArtifact this;
        java.lang.String version;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        version := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setVersion(java.lang.String)>(version);

        return;
    }

    public java.lang.String getScope()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        return $stack2;
    }

    public java.lang.String getType()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        return $stack2;
    }

    public java.lang.String getClassifier()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        return $stack2;
    }

    public boolean hasClassifier()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        boolean $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: boolean hasClassifier()>();

        return $stack2;
    }

    public void setFile(java.io.File)
    {
        ActiveProjectArtifact this;
        java.io.File destination;
        org.apache.maven.artifact.Artifact $stack2, $stack4;
        org.apache.maven.project.MavenProject $stack3;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0, $r1;

        this := @this: ActiveProjectArtifact;

        destination := @parameter0: java.io.File;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setFile(java.io.File)>(destination);

        $r1 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack3 = $r1.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.project.MavenProject project>;

        $stack4 = virtualinvoke $stack3.<org.apache.maven.project.MavenProject: org.apache.maven.artifact.Artifact getArtifact()>();

        interfaceinvoke $stack4.<org.apache.maven.artifact.Artifact: void setFile(java.io.File)>(destination);

        return;
    }

    public java.lang.String getBaseVersion()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getBaseVersion()>();

        return $stack2;
    }

    public void setBaseVersion(java.lang.String)
    {
        ActiveProjectArtifact this;
        java.lang.String baseVersion;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        baseVersion := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setBaseVersion(java.lang.String)>(baseVersion);

        return;
    }

    public java.lang.String getId()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getId()>();

        return $stack2;
    }

    public java.lang.String getDependencyConflictId()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getDependencyConflictId()>();

        return $stack2;
    }

    public void addMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata)
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.metadata.ArtifactMetadata metadata;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        metadata := @parameter0: org.apache.maven.artifact.metadata.ArtifactMetadata;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void addMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata)>(metadata);

        return;
    }

    public java.util.Collection getMetadataList()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.util.Collection $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.util.Collection getMetadataList()>();

        return $stack2;
    }

    public void setRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.repository.ArtifactRepository remoteRepository;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        remoteRepository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setRepository(org.apache.maven.artifact.repository.ArtifactRepository)>(remoteRepository);

        return;
    }

    public org.apache.maven.artifact.repository.ArtifactRepository getRepository()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.artifact.repository.ArtifactRepository $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.repository.ArtifactRepository getRepository()>();

        return $stack2;
    }

    public void updateVersion(java.lang.String, org.apache.maven.artifact.repository.ArtifactRepository)
    {
        ActiveProjectArtifact this;
        java.lang.String version;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        org.apache.maven.artifact.Artifact $stack3;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        version := @parameter0: java.lang.String;

        localRepository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack3 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack3.<org.apache.maven.artifact.Artifact: void updateVersion(java.lang.String,org.apache.maven.artifact.repository.ArtifactRepository)>(version, localRepository);

        return;
    }

    public java.lang.String getDownloadUrl()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.lang.String $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.lang.String getDownloadUrl()>();

        return $stack2;
    }

    public void setDownloadUrl(java.lang.String)
    {
        ActiveProjectArtifact this;
        java.lang.String downloadUrl;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        downloadUrl := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setDownloadUrl(java.lang.String)>(downloadUrl);

        return;
    }

    public org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter()>();

        return $stack2;
    }

    public void setDependencyFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter)
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter artifactFilter;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        artifactFilter := @parameter0: org.apache.maven.artifact.resolver.filter.ArtifactFilter;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setDependencyFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter)>(artifactFilter);

        return;
    }

    public org.apache.maven.artifact.handler.ArtifactHandler getArtifactHandler()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.artifact.handler.ArtifactHandler $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.handler.ArtifactHandler getArtifactHandler()>();

        return $stack2;
    }

    public java.util.List getDependencyTrail()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.util.List $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.util.List getDependencyTrail()>();

        return $stack2;
    }

    public void setDependencyTrail(java.util.List)
    {
        ActiveProjectArtifact this;
        java.util.List dependencyTrail;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        dependencyTrail := @parameter0: java.util.List;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setDependencyTrail(java.util.List)>(dependencyTrail);

        return;
    }

    public void setScope(java.lang.String)
    {
        ActiveProjectArtifact this;
        java.lang.String scope;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        scope := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setScope(java.lang.String)>(scope);

        return;
    }

    public org.apache.maven.artifact.versioning.VersionRange getVersionRange()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.artifact.versioning.VersionRange $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.versioning.VersionRange getVersionRange()>();

        return $stack2;
    }

    public void setVersionRange(org.apache.maven.artifact.versioning.VersionRange)
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.versioning.VersionRange newRange;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        newRange := @parameter0: org.apache.maven.artifact.versioning.VersionRange;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setVersionRange(org.apache.maven.artifact.versioning.VersionRange)>(newRange);

        return;
    }

    public void selectVersion(java.lang.String)
    {
        ActiveProjectArtifact this;
        java.lang.String version;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        version := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void selectVersion(java.lang.String)>(version);

        return;
    }

    public void setGroupId(java.lang.String)
    {
        ActiveProjectArtifact this;
        java.lang.String groupId;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        groupId := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setGroupId(java.lang.String)>(groupId);

        return;
    }

    public void setArtifactId(java.lang.String)
    {
        ActiveProjectArtifact this;
        java.lang.String artifactId;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        artifactId := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setArtifactId(java.lang.String)>(artifactId);

        return;
    }

    public boolean isSnapshot()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        boolean $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: boolean isSnapshot()>();

        return $stack2;
    }

    public int compareTo(org.apache.maven.artifact.Artifact)
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact a, $stack2;
        int $stack3;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        a := @parameter0: org.apache.maven.artifact.Artifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: int compareTo(java.lang.Object)>(a);

        return $stack3;
    }

    public void setResolved(boolean)
    {
        ActiveProjectArtifact this;
        boolean resolved;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        resolved := @parameter0: boolean;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setResolved(boolean)>(resolved);

        return;
    }

    public boolean isResolved()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        boolean $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: boolean isResolved()>();

        return $stack2;
    }

    public void setResolvedVersion(java.lang.String)
    {
        ActiveProjectArtifact this;
        java.lang.String version;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        version := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setResolvedVersion(java.lang.String)>(version);

        return;
    }

    public void setArtifactHandler(org.apache.maven.artifact.handler.ArtifactHandler)
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.handler.ArtifactHandler handler;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        handler := @parameter0: org.apache.maven.artifact.handler.ArtifactHandler;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setArtifactHandler(org.apache.maven.artifact.handler.ArtifactHandler)>(handler);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack2, $stack4, $stack5, $stack7, $stack8, $u0;
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack3;
        org.apache.maven.project.MavenProject $stack6;
        java.lang.String $stack9;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0, $r1;

        this := @this: ActiveProjectArtifact;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("active project artifact[artifact: ");

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack3 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", project: ");

        $r1 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack6 = $r1.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.project.MavenProject project>;

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack9;
    }

    public boolean isRelease()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        boolean $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: boolean isRelease()>();

        return $stack2;
    }

    public void setRelease(boolean)
    {
        ActiveProjectArtifact this;
        boolean release;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        release := @parameter0: boolean;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setRelease(boolean)>(release);

        return;
    }

    public java.util.List getAvailableVersions()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        java.util.List $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: java.util.List getAvailableVersions()>();

        return $stack2;
    }

    public void setAvailableVersions(java.util.List)
    {
        ActiveProjectArtifact this;
        java.util.List versions;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        versions := @parameter0: java.util.List;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setAvailableVersions(java.util.List)>(versions);

        return;
    }

    public boolean isOptional()
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        boolean $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: boolean isOptional()>();

        return $stack2;
    }

    public org.apache.maven.artifact.versioning.ArtifactVersion getSelectedVersion() throws org.apache.maven.artifact.versioning.OverConstrainedVersionException
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.artifact.versioning.ArtifactVersion $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.versioning.ArtifactVersion getSelectedVersion()>();

        return $stack2;
    }

    public boolean isSelectedVersionKnown() throws org.apache.maven.artifact.versioning.OverConstrainedVersionException
    {
        ActiveProjectArtifact this;
        org.apache.maven.artifact.Artifact $stack1;
        boolean $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.Artifact: boolean isSelectedVersionKnown()>();

        return $stack2;
    }

    public void setOptional(boolean)
    {
        ActiveProjectArtifact this;
        boolean optional;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        optional := @parameter0: boolean;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack2 = $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: org.apache.maven.artifact.Artifact artifact>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.Artifact: void setOptional(boolean)>(optional);

        return;
    }

    public int hashCode()
    {
        ActiveProjectArtifact this;
        int $stack2, $stack4, $stack5, $stack7, $stack8, $stack10, $stack12, $stack18, $stack20, result#2, $stack15;
        java.lang.String $stack3, $stack6, $stack9, $stack11, $stack13, $stack14, $stack19;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: ActiveProjectArtifact;

        $stack2 = 37 * 17;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getGroupId()>();

        $stack4 = virtualinvoke $stack3.<java.lang.String: int hashCode()>();

        result#2 = $stack2 + $stack4;

        $stack5 = 37 * result#2;

        $r1 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack6 = virtualinvoke $r1.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getArtifactId()>();

        $stack7 = virtualinvoke $stack6.<java.lang.String: int hashCode()>();

        result#2 = $stack5 + $stack7;

        $stack8 = 37 * result#2;

        $r2 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack9 = virtualinvoke $r2.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getType()>();

        $stack10 = virtualinvoke $stack9.<java.lang.String: int hashCode()>();

        result#2 = $stack8 + $stack10;

        $r3 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack11 = virtualinvoke $r3.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getVersion()>();

        if $stack11 == null goto label1;

        $stack18 = 37 * result#2;

        $r4 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack19 = virtualinvoke $r4.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getVersion()>();

        $stack20 = virtualinvoke $stack19.<java.lang.String: int hashCode()>();

        result#2 = $stack18 + $stack20;

     label1:
        $stack12 = 37 * result#2;

        $r5 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack13 = virtualinvoke $r5.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getClassifier()>();

        if $stack13 == null goto label2;

        $r6 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack14 = virtualinvoke $r6.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getClassifier()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: int hashCode()>();

        goto label3;

     label2:
        $stack15 = 0;

     label3:
        result#2 = $stack12 + $stack15;

        return result#2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object o;
        ActiveProjectArtifact this;
        boolean $stack3, $stack6, $stack9, $stack12, $stack15, $stack19;
        org.apache.maven.artifact.Artifact a;
        java.lang.String $stack4, $stack5, $stack7, $stack8, $stack10, $stack11, $stack13, $stack14, $stack16, $stack17, $stack18, $stack20;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: ActiveProjectArtifact;

        o := @parameter0: java.lang.Object;

        if o != this goto label1;

        return 1;

     label1:
        $stack3 = o instanceof org.apache.maven.artifact.Artifact;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        a = (org.apache.maven.artifact.Artifact) o;

        $stack4 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getGroupId()>();

        $stack6 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>($stack5);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack7 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $r1 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack8 = virtualinvoke $r1.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getArtifactId()>();

        $stack9 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>($stack8);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack10 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        $r2 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack11 = virtualinvoke $r2.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getVersion()>();

        $stack12 = virtualinvoke $stack10.<java.lang.String: boolean equals(java.lang.Object)>($stack11);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        $stack13 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        $r3 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack14 = virtualinvoke $r3.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getType()>();

        $stack15 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>($stack14);

        if $stack15 != 0 goto label6;

        return 0;

     label6:
        $stack16 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        if $stack16 != null goto label7;

        $r4 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack20 = virtualinvoke $r4.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getClassifier()>();

        if $stack20 == null goto label9;

        goto label8;

     label7:
        $stack17 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        $r5 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack18 = virtualinvoke $r5.<org.apache.maven.project.artifact.ActiveProjectArtifact: java.lang.String getClassifier()>();

        $stack19 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>($stack18);

        if $stack19 != 0 goto label9;

     label8:
        return 0;

     label9:
        return 1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ActiveProjectArtifact this;
        java.lang.Object l1;
        org.apache.maven.artifact.Artifact $stack2;
        int $stack3;
        org.apache.maven.project.artifact.ActiveProjectArtifact $r0;

        this := @this: ActiveProjectArtifact;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.apache.maven.artifact.Artifact) l1;

        $r0 = (org.apache.maven.project.artifact.ActiveProjectArtifact) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.project.artifact.ActiveProjectArtifact: int compareTo(org.apache.maven.artifact.Artifact)>($stack2);

        return $stack3;
    }
}
