public class AlphabeticalSortedWrapper extends java.lang.Object implements sortpom.wrapper.content.Wrapper
{
    private final org.jdom.Element element;

    public void <init>(org.jdom.Element)
    {
        AlphabeticalSortedWrapper this;
        org.jdom.Element element;
        sortpom.wrapper.content.AlphabeticalSortedWrapper $r0;

        this := @this: AlphabeticalSortedWrapper;

        element := @parameter0: org.jdom.Element;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (sortpom.wrapper.content.AlphabeticalSortedWrapper) this;

        $r0.<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element element> = element;

        return;
    }

    public org.jdom.Element getContent()
    {
        AlphabeticalSortedWrapper this;
        org.jdom.Element $stack1;
        sortpom.wrapper.content.AlphabeticalSortedWrapper $r0;

        this := @this: AlphabeticalSortedWrapper;

        $r0 = (sortpom.wrapper.content.AlphabeticalSortedWrapper) this;

        $stack1 = $r0.<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element element>;

        return $stack1;
    }

    public boolean isBefore(sortpom.wrapper.content.Wrapper)
    {
        sortpom.wrapper.content.Wrapper wrapper;
        boolean $stack2, $stack4, $stack5;
        AlphabeticalSortedWrapper this;
        sortpom.wrapper.content.AlphabeticalSortedWrapper $stack3, $r0;

        this := @this: AlphabeticalSortedWrapper;

        wrapper := @parameter0: sortpom.wrapper.content.Wrapper;

        $stack2 = wrapper instanceof sortpom.wrapper.content.AlphabeticalSortedWrapper;

        if $stack2 == 0 goto label1;

        $stack3 = (sortpom.wrapper.content.AlphabeticalSortedWrapper) wrapper;

        $r0 = (sortpom.wrapper.content.AlphabeticalSortedWrapper) this;

        $stack4 = specialinvoke $r0.<sortpom.wrapper.content.AlphabeticalSortedWrapper: boolean isBeforeAlphabeticalSortedWrapper(sortpom.wrapper.content.AlphabeticalSortedWrapper)>($stack3);

        if $stack4 == 0 goto label1;

        $stack5 = 1;

        goto label2;

     label1:
        $stack5 = 0;

     label2:
        return $stack5;
    }

    private boolean isBeforeAlphabeticalSortedWrapper(sortpom.wrapper.content.AlphabeticalSortedWrapper)
    {
        sortpom.wrapper.content.AlphabeticalSortedWrapper wrapper, $r0;
        org.jdom.Element $stack2, $stack4;
        java.lang.String $stack3, $stack5;
        AlphabeticalSortedWrapper this;
        int $stack6;
        boolean $stack7;

        this := @this: AlphabeticalSortedWrapper;

        wrapper := @parameter0: sortpom.wrapper.content.AlphabeticalSortedWrapper;

        $stack2 = virtualinvoke wrapper.<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element getContent()>();

        $stack3 = virtualinvoke $stack2.<org.jdom.Element: java.lang.String getName()>();

        $r0 = (sortpom.wrapper.content.AlphabeticalSortedWrapper) this;

        $stack4 = virtualinvoke $r0.<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element getContent()>();

        $stack5 = virtualinvoke $stack4.<org.jdom.Element: java.lang.String getName()>();

        $stack6 = virtualinvoke $stack3.<java.lang.String: int compareTo(java.lang.String)>($stack5);

        if $stack6 <= 0 goto label1;

        $stack7 = 1;

        goto label2;

     label1:
        $stack7 = 0;

     label2:
        return $stack7;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack2, $stack4, $stack5, $u0;
        AlphabeticalSortedWrapper this;
        org.jdom.Element $stack3;
        java.lang.String $stack6;
        sortpom.wrapper.content.AlphabeticalSortedWrapper $r0;

        this := @this: AlphabeticalSortedWrapper;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AlphabeticalSortedWrapper{element=");

        $r0 = (sortpom.wrapper.content.AlphabeticalSortedWrapper) this;

        $stack3 = $r0.<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element element>;

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack6;
    }

    public volatile org.jdom.Content getContent()
    {
        AlphabeticalSortedWrapper this;
        org.jdom.Element $stack1;
        sortpom.wrapper.content.AlphabeticalSortedWrapper $r0;
        org.jdom.Content $r1;

        this := @this: AlphabeticalSortedWrapper;

        $r0 = (sortpom.wrapper.content.AlphabeticalSortedWrapper) this;

        $stack1 = virtualinvoke $r0.<sortpom.wrapper.content.AlphabeticalSortedWrapper: org.jdom.Element getContent()>();

        $r1 = (org.jdom.Content) $stack1;

        return $r1;
    }
}
