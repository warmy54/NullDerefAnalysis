public class AndArtifactFilter extends java.lang.Object implements org.apache.maven.artifact.resolver.filter.ArtifactFilter
{
    private java.util.Set filters;

    public void <init>()
    {
        AndArtifactFilter this;
        java.util.LinkedHashSet $u0;
        org.apache.maven.artifact.resolver.filter.AndArtifactFilter $r0;

        this := @this: AndArtifactFilter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.LinkedHashSet;

        specialinvoke $u0.<java.util.LinkedHashSet: void <init>()>();

        $r0 = (org.apache.maven.artifact.resolver.filter.AndArtifactFilter) this;

        $r0.<org.apache.maven.artifact.resolver.filter.AndArtifactFilter: java.util.Set filters> = $u0;

        return;
    }

    public void <init>(java.util.List)
    {
        AndArtifactFilter this;
        java.util.List filters;
        java.util.LinkedHashSet $u0;
        org.apache.maven.artifact.resolver.filter.AndArtifactFilter $r0;

        this := @this: AndArtifactFilter;

        filters := @parameter0: java.util.List;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.LinkedHashSet;

        specialinvoke $u0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(filters);

        $r0 = (org.apache.maven.artifact.resolver.filter.AndArtifactFilter) this;

        $r0.<org.apache.maven.artifact.resolver.filter.AndArtifactFilter: java.util.Set filters> = $u0;

        return;
    }

    public boolean include(org.apache.maven.artifact.Artifact)
    {
        AndArtifactFilter this;
        java.util.Set $stack5;
        java.util.Iterator i;
        boolean $stack7, $stack10, include;
        java.lang.Object $stack9;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter filter;
        org.apache.maven.artifact.Artifact artifact;
        org.apache.maven.artifact.resolver.filter.AndArtifactFilter $r0;

        this := @this: AndArtifactFilter;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        include = 1;

        $r0 = (org.apache.maven.artifact.resolver.filter.AndArtifactFilter) this;

        $stack5 = $r0.<org.apache.maven.artifact.resolver.filter.AndArtifactFilter: java.util.Set filters>;

        i = interfaceinvoke $stack5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke i.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        if include == 0 goto label3;

        $stack9 = interfaceinvoke i.<java.util.Iterator: java.lang.Object next()>();

        filter = (org.apache.maven.artifact.resolver.filter.ArtifactFilter) $stack9;

        $stack10 = interfaceinvoke filter.<org.apache.maven.artifact.resolver.filter.ArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>(artifact);

        if $stack10 != 0 goto label2;

        include = 0;

     label2:
        goto label1;

     label3:
        return include;
    }

    public void add(org.apache.maven.artifact.resolver.filter.ArtifactFilter)
    {
        AndArtifactFilter this;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter artifactFilter;
        java.util.Set $stack2;
        org.apache.maven.artifact.resolver.filter.AndArtifactFilter $r0;

        this := @this: AndArtifactFilter;

        artifactFilter := @parameter0: org.apache.maven.artifact.resolver.filter.ArtifactFilter;

        $r0 = (org.apache.maven.artifact.resolver.filter.AndArtifactFilter) this;

        $stack2 = $r0.<org.apache.maven.artifact.resolver.filter.AndArtifactFilter: java.util.Set filters>;

        interfaceinvoke $stack2.<java.util.Set: boolean add(java.lang.Object)>(artifactFilter);

        return;
    }

    public java.util.List getFilters()
    {
        AndArtifactFilter this;
        java.util.Set $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.artifact.resolver.filter.AndArtifactFilter $r0;

        this := @this: AndArtifactFilter;

        $u0 = new java.util.ArrayList;

        $r0 = (org.apache.maven.artifact.resolver.filter.AndArtifactFilter) this;

        $stack2 = $r0.<org.apache.maven.artifact.resolver.filter.AndArtifactFilter: java.util.Set filters>;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>($stack2);

        return $u0;
    }

    public int hashCode()
    {
        AndArtifactFilter this;
        java.util.Set $stack2;
        int $stack3, $stack4, hash#2;
        org.apache.maven.artifact.resolver.filter.AndArtifactFilter $r0;

        this := @this: AndArtifactFilter;

        $stack3 = 17 * 31;

        $r0 = (org.apache.maven.artifact.resolver.filter.AndArtifactFilter) this;

        $stack2 = $r0.<org.apache.maven.artifact.resolver.filter.AndArtifactFilter: java.util.Set filters>;

        $stack4 = interfaceinvoke $stack2.<java.util.Set: int hashCode()>();

        hash#2 = $stack3 + $stack4;

        return hash#2;
    }

    public boolean equals(java.lang.Object)
    {
        AndArtifactFilter this;
        java.lang.Object obj;
        boolean $stack3, $stack6;
        org.apache.maven.artifact.resolver.filter.AndArtifactFilter other, $r0;
        java.util.Set $stack4, $stack5;

        this := @this: AndArtifactFilter;

        obj := @parameter0: java.lang.Object;

        if this != obj goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.apache.maven.artifact.resolver.filter.AndArtifactFilter;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        other = (org.apache.maven.artifact.resolver.filter.AndArtifactFilter) obj;

        $r0 = (org.apache.maven.artifact.resolver.filter.AndArtifactFilter) this;

        $stack5 = $r0.<org.apache.maven.artifact.resolver.filter.AndArtifactFilter: java.util.Set filters>;

        $stack4 = other.<org.apache.maven.artifact.resolver.filter.AndArtifactFilter: java.util.Set filters>;

        $stack6 = interfaceinvoke $stack5.<java.util.Set: boolean equals(java.lang.Object)>($stack4);

        return $stack6;
    }
}
