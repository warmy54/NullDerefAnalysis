public class ArgumentParser extends java.lang.Object
{

    public void <init>()
    {
        ArgumentParser this;

        this := @this: ArgumentParser;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean fill(org.ooc.frontend.model.Module, org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader, boolean, org.ooc.frontend.model.NodeList)
    {
        org.ooc.frontend.model.tokens.TokenReader reader;
        java.lang.Object $stack6, $stack16, $stack19, $stack24;
        org.ooc.frontend.model.tokens.Token $stack7, $stack9, $stack20;
        byte $stack8, $stack10, $stack21;
        org.ooc.frontend.model.Module module;
        org.ubi.SourceReader sReader;
        boolean acceptTypeArgs, $stack11, comma, $stack14;
        org.ooc.frontend.model.NodeList args;
        org.ubi.Locatable $stack17, $stack25;
        org.ubi.FileLocation $stack18, $stack26;
        org.ubi.CompilationFailedError $u0, $u1;
        java.lang.Throwable $r0, $r1;

        module := @parameter0: org.ooc.frontend.model.Module;

        sReader := @parameter1: org.ubi.SourceReader;

        reader := @parameter2: org.ooc.frontend.model.tokens.TokenReader;

        acceptTypeArgs := @parameter3: boolean;

        args := @parameter4: org.ooc.frontend.model.NodeList;

        $stack6 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack7 = (org.ooc.frontend.model.tokens.Token) $stack6;

        $stack8 = $stack7.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack8 != 82 goto label8;

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        comma = 0;

     label1:
        $stack9 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: org.ooc.frontend.model.tokens.Token peekWhiteless()>();

        $stack10 = $stack9.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack10 != 83 goto label2;

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: boolean skipWhitespace()>();

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        goto label7;

     label2:
        if comma == 0 goto label3;

        $stack19 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object read()>();

        $stack20 = (org.ooc.frontend.model.tokens.Token) $stack19;

        $stack21 = $stack20.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack21 == 45 goto label4;

        $u0 = new org.ubi.CompilationFailedError;

        $stack24 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object prev(int)>(2);

        $stack25 = (org.ubi.Locatable) $stack24;

        $stack26 = virtualinvoke sReader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(org.ubi.Locatable)>($stack25);

        specialinvoke $u0.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack26, "Did you forget to close the parenthesis here?");

        $r0 = (java.lang.Throwable) $u0;

        throw $r0;

     label3:
        $stack11 = staticinvoke <org.ooc.frontend.parser.ArgumentParser: boolean parseInto(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,boolean,org.ooc.frontend.model.NodeList)>(module, sReader, reader, acceptTypeArgs, args);

        if $stack11 != 0 goto label4;

        $u1 = new org.ubi.CompilationFailedError;

        $stack16 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack17 = (org.ubi.Locatable) $stack16;

        $stack18 = virtualinvoke sReader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(org.ubi.Locatable)>($stack17);

        specialinvoke $u1.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack18, "Expected argument specification of a function definition");

        $r1 = (java.lang.Throwable) $u1;

        throw $r1;

     label4:
        if comma != 0 goto label5;

        $stack14 = 1;

        goto label6;

     label5:
        $stack14 = 0;

     label6:
        comma = $stack14;

        goto label1;

     label7:
        return 1;

     label8:
        return 0;
    }

    public static boolean parseInto(org.ooc.frontend.model.Module, org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader, boolean, org.ooc.frontend.model.NodeList)
    {
        org.ooc.frontend.model.tokens.TokenReader reader;
        int mark;
        java.lang.Object $stack11, $stack22;
        org.ooc.frontend.model.tokens.Token startToken, $stack19, varArg#2;
        byte $stack12;
        org.ooc.frontend.model.Module module;
        org.ubi.SourceReader sReader;
        org.ooc.frontend.model.NodeList args;
        boolean $stack14, $stack15, $stack16, acceptTypeArgs;
        org.ooc.frontend.model.Type type;
        org.ubi.Locatable $stack23;
        org.ubi.FileLocation $stack24;
        org.ooc.frontend.model.VarArg $u0;
        org.ubi.CompilationFailedError $u1;
        org.ooc.frontend.parser.TypeArgument $u2;
        org.ooc.frontend.model.Node $r0, $r2;
        java.lang.Throwable $r1;

        module := @parameter0: org.ooc.frontend.model.Module;

        sReader := @parameter1: org.ubi.SourceReader;

        reader := @parameter2: org.ooc.frontend.model.tokens.TokenReader;

        acceptTypeArgs := @parameter3: boolean;

        args := @parameter4: org.ooc.frontend.model.NodeList;

        mark = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: int mark()>();

        $stack11 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        startToken = (org.ooc.frontend.model.tokens.Token) $stack11;

        $stack12 = startToken.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack12 != 48 goto label1;

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        $u0 = new org.ooc.frontend.model.VarArg;

        specialinvoke $u0.<org.ooc.frontend.model.VarArg: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.Node) $u0;

        virtualinvoke args.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r0);

        return 1;

     label1:
        varArg#2 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: org.ooc.frontend.model.tokens.Token readWhiteless()>();

        $stack14 = staticinvoke <org.ooc.frontend.parser.ArgumentParser: boolean tryRegular(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,org.ooc.frontend.model.NodeList,int,org.ooc.frontend.model.tokens.Token)>(module, sReader, reader, args, mark, varArg#2);

        if $stack14 == 0 goto label2;

        return 1;

     label2:
        $stack15 = staticinvoke <org.ooc.frontend.parser.ArgumentParser: boolean tryAssign(org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,org.ooc.frontend.model.NodeList,org.ooc.frontend.model.tokens.Token)>(sReader, reader, args, varArg#2);

        if $stack15 == 0 goto label3;

        return 1;

     label3:
        $stack16 = staticinvoke <org.ooc.frontend.parser.ArgumentParser: boolean tryMember(org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,org.ooc.frontend.model.NodeList,org.ooc.frontend.model.tokens.Token)>(sReader, reader, args, varArg#2);

        if $stack16 == 0 goto label4;

        return 1;

     label4:
        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void reset(int)>(mark);

        if acceptTypeArgs == 0 goto label6;

        type = staticinvoke <org.ooc.frontend.parser.TypeParser: org.ooc.frontend.model.Type parse(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader)>(module, sReader, reader);

        if type != null goto label5;

        $u1 = new org.ubi.CompilationFailedError;

        $stack22 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack23 = (org.ubi.Locatable) $stack22;

        $stack24 = virtualinvoke sReader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(org.ubi.Locatable)>($stack23);

        specialinvoke $u1.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack24, "Expected argument type in extern func definition \':\'");

        $r1 = (java.lang.Throwable) $u1;

        throw $r1;

     label5:
        $u2 = new org.ooc.frontend.parser.TypeArgument;

        $stack19 = type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u2.<org.ooc.frontend.parser.TypeArgument: void <init>(org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>(type, $stack19);

        $r2 = (org.ooc.frontend.model.Node) $u2;

        virtualinvoke args.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r2);

        return 1;

     label6:
        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void reset()>();

        return 0;
    }

    protected static boolean tryMember(org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader, org.ooc.frontend.model.NodeList, org.ooc.frontend.model.tokens.Token) throws org.ubi.CompilationFailedError
    {
        org.ooc.frontend.model.tokens.Token token, t2;
        byte $stack6, $stack8;
        org.ooc.frontend.model.tokens.TokenReader reader;
        java.lang.Object $stack7;
        org.ubi.SourceReader sReader;
        java.lang.String $stack10;
        org.ooc.frontend.model.NodeList args;
        org.ubi.FileLocation $stack13;
        org.ubi.CompilationFailedError $u0;
        org.ooc.frontend.model.MemberArgument $u1;
        org.ubi.Locatable $r0;
        java.lang.Throwable $r1;
        org.ooc.frontend.model.Node $r2;

        sReader := @parameter0: org.ubi.SourceReader;

        reader := @parameter1: org.ooc.frontend.model.tokens.TokenReader;

        args := @parameter2: org.ooc.frontend.model.NodeList;

        token := @parameter3: org.ooc.frontend.model.tokens.Token;

        $stack6 = token.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack6 == 46 goto label1;

        return 0;

     label1:
        $stack7 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object read()>();

        t2 = (org.ooc.frontend.model.tokens.Token) $stack7;

        $stack8 = t2.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack8 == 39 goto label2;

        $u0 = new org.ubi.CompilationFailedError;

        $r0 = (org.ubi.Locatable) t2;

        $stack13 = virtualinvoke sReader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(org.ubi.Locatable)>($r0);

        specialinvoke $u0.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack13, "Expecting member variable name in member-assign-argument");

        $r1 = (java.lang.Throwable) $u0;

        throw $r1;

     label2:
        $u1 = new org.ooc.frontend.model.MemberArgument;

        $stack10 = virtualinvoke t2.<org.ooc.frontend.model.tokens.Token: java.lang.String get(org.ubi.SourceReader)>(sReader);

        specialinvoke $u1.<org.ooc.frontend.model.MemberArgument: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack10, token);

        $r2 = (org.ooc.frontend.model.Node) $u1;

        virtualinvoke args.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r2);

        return 1;
    }

    protected static boolean tryAssign(org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader, org.ooc.frontend.model.NodeList, org.ooc.frontend.model.tokens.Token) throws org.ubi.CompilationFailedError
    {
        org.ooc.frontend.model.tokens.Token token, t2;
        byte $stack6, $stack8;
        org.ooc.frontend.model.tokens.TokenReader reader;
        java.lang.Object $stack7;
        org.ubi.SourceReader sReader;
        java.lang.String $stack10;
        org.ooc.frontend.model.NodeList args;
        org.ubi.FileLocation $stack13;
        org.ubi.CompilationFailedError $u0;
        org.ooc.frontend.model.MemberAssignArgument $u1;
        org.ubi.Locatable $r0;
        java.lang.Throwable $r1;
        org.ooc.frontend.model.Node $r2;

        sReader := @parameter0: org.ubi.SourceReader;

        reader := @parameter1: org.ooc.frontend.model.tokens.TokenReader;

        args := @parameter2: org.ooc.frontend.model.NodeList;

        token := @parameter3: org.ooc.frontend.model.tokens.Token;

        $stack6 = token.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack6 == 68 goto label1;

        return 0;

     label1:
        $stack7 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object read()>();

        t2 = (org.ooc.frontend.model.tokens.Token) $stack7;

        $stack8 = t2.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack8 == 39 goto label2;

        $u0 = new org.ubi.CompilationFailedError;

        $r0 = (org.ubi.Locatable) t2;

        $stack13 = virtualinvoke sReader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(org.ubi.Locatable)>($r0);

        specialinvoke $u0.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack13, "Expecting member variable name in member-assign-argument");

        $r1 = (java.lang.Throwable) $u0;

        throw $r1;

     label2:
        $u1 = new org.ooc.frontend.model.MemberAssignArgument;

        $stack10 = virtualinvoke t2.<org.ooc.frontend.model.tokens.Token: java.lang.String get(org.ubi.SourceReader)>(sReader);

        specialinvoke $u1.<org.ooc.frontend.model.MemberAssignArgument: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack10, token);

        $r2 = (org.ooc.frontend.model.Node) $u1;

        virtualinvoke args.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r2);

        return 1;
    }

    protected static boolean tryRegular(org.ooc.frontend.model.Module, org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader, org.ooc.frontend.model.NodeList, int, org.ooc.frontend.model.tokens.Token)
    {
        org.ooc.frontend.model.tokens.Token token, $stack18, $stack21, $stack29, $stack38, subToken;
        boolean $stack11;
        org.ubi.SourceReader sReader;
        java.lang.String $stack14, $stack27, $stack41;
        org.ooc.frontend.model.tokens.TokenReader reader;
        java.lang.Object $stack17, $stack20, $stack26, $stack28, $stack34, $stack37, $stack40;
        byte $stack19, $stack22, $stack39;
        int mark, $stack24, i;
        org.ooc.frontend.model.Module module;
        org.ooc.frontend.model.NodeList args;
        org.ubi.Locatable $stack35;
        org.ubi.FileLocation $stack36;
        org.ooc.frontend.model.Type subToken#2;
        java.util.ArrayList $u0, $u1;
        org.ubi.CompilationFailedError $u2;
        org.ooc.frontend.model.RegularArgument $u3;
        java.lang.Throwable $r0;
        org.ooc.frontend.model.Node $r1;

        module := @parameter0: org.ooc.frontend.model.Module;

        sReader := @parameter1: org.ubi.SourceReader;

        reader := @parameter2: org.ooc.frontend.model.tokens.TokenReader;

        args := @parameter3: org.ooc.frontend.model.NodeList;

        mark := @parameter4: int;

        token := @parameter5: org.ooc.frontend.model.tokens.Token;

        $stack11 = virtualinvoke token.<org.ooc.frontend.model.tokens.Token: boolean isNameToken()>();

        if $stack11 != 0 goto label1;

        return 0;

     label1:
        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        $stack14 = virtualinvoke token.<org.ooc.frontend.model.tokens.Token: java.lang.String get(org.ubi.SourceReader)>(sReader);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($stack14);

        interfaceinvoke $u1.<java.util.List: boolean add(java.lang.Object)>(token);

     label2:
        $stack17 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack18 = (org.ooc.frontend.model.tokens.Token) $stack17;

        $stack19 = $stack18.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack19 != 45 goto label4;

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        $stack37 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack38 = (org.ooc.frontend.model.tokens.Token) $stack37;

        $stack39 = $stack38.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack39 == 39 goto label3;

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void reset(int)>(mark);

        return 0;

     label3:
        $stack40 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object read()>();

        subToken = (org.ooc.frontend.model.tokens.Token) $stack40;

        $stack41 = virtualinvoke subToken.<org.ooc.frontend.model.tokens.Token: java.lang.String get(org.ubi.SourceReader)>(sReader);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($stack41);

        interfaceinvoke $u1.<java.util.List: boolean add(java.lang.Object)>(subToken);

        goto label2;

     label4:
        $stack20 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack21 = (org.ooc.frontend.model.tokens.Token) $stack20;

        $stack22 = $stack21.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack22 != 50 goto label8;

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        subToken#2 = staticinvoke <org.ooc.frontend.parser.TypeParser: org.ooc.frontend.model.Type parse(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,boolean)>(module, sReader, reader, 0);

        if subToken#2 != null goto label5;

        $u2 = new org.ubi.CompilationFailedError;

        $stack34 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack35 = (org.ubi.Locatable) $stack34;

        $stack36 = virtualinvoke sReader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(org.ubi.Locatable)>($stack35);

        specialinvoke $u2.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack36, "Expected argument type after its name and \':\'");

        $r0 = (java.lang.Throwable) $u2;

        throw $r0;

     label5:
        i = 0;

     label6:
        $stack24 = interfaceinvoke $u0.<java.util.List: int size()>();

        if i >= $stack24 goto label7;

        $u3 = new org.ooc.frontend.model.RegularArgument;

        $stack26 = interfaceinvoke $u0.<java.util.List: java.lang.Object get(int)>(i);

        $stack27 = (java.lang.String) $stack26;

        $stack28 = interfaceinvoke $u1.<java.util.List: java.lang.Object get(int)>(i);

        $stack29 = (org.ooc.frontend.model.tokens.Token) $stack28;

        specialinvoke $u3.<org.ooc.frontend.model.RegularArgument: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.tokens.Token)>(subToken#2, $stack27, $stack29);

        $r1 = (org.ooc.frontend.model.Node) $u3;

        virtualinvoke args.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r1);

        i = i + 1;

        goto label6;

     label7:
        return 1;

     label8:
        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void reset(int)>(mark);

        return 0;
    }
}
