public class ArrayAccessWriter extends java.lang.Object
{

    public void <init>()
    {
        ArrayAccessWriter this;

        this := @this: ArrayAccessWriter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void write(org.ooc.frontend.model.ArrayAccess, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.ArrayAccess arrayAccess;
        org.ooc.frontend.model.Expression $stack4, index;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.frontend.model.NodeList $stack5;
        java.util.Iterator l2;
        boolean $stack7;
        java.lang.Object $stack8;
        org.ooc.backend.cdirty.AwesomeWriter $stack9, $stack11;
        org.ooc.frontend.Visitor $r0, $r1;

        arrayAccess := @parameter0: org.ooc.frontend.model.ArrayAccess;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack4 = virtualinvoke arrayAccess.<org.ooc.frontend.model.ArrayAccess: org.ooc.frontend.model.Expression getVariable()>();

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack4.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r0);

        $stack5 = virtualinvoke arrayAccess.<org.ooc.frontend.model.ArrayAccess: org.ooc.frontend.model.NodeList getIndices()>();

        l2 = virtualinvoke $stack5.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label2;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        index = (org.ooc.frontend.model.Expression) $stack8;

        $stack9 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack9.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(91);

        $r1 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke index.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r1);

        $stack11 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack11.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(93);

        goto label1;

     label2:
        return;
    }
}
