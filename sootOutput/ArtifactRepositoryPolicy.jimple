public class ArtifactRepositoryPolicy extends java.lang.Object
{
    public static final java.lang.String UPDATE_POLICY_NEVER;
    public static final java.lang.String UPDATE_POLICY_ALWAYS;
    public static final java.lang.String UPDATE_POLICY_DAILY;
    public static final java.lang.String UPDATE_POLICY_INTERVAL;
    public static final java.lang.String CHECKSUM_POLICY_FAIL;
    public static final java.lang.String CHECKSUM_POLICY_WARN;
    public static final java.lang.String CHECKSUM_POLICY_IGNORE;
    public static final java.lang.String DEFAULT_CHECKSUM_POLICY;
    private boolean enabled;
    private java.lang.String updatePolicy;
    private java.lang.String checksumPolicy;

    public void <init>()
    {
        ArtifactRepositoryPolicy this;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0;

        this := @this: ArtifactRepositoryPolicy;

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        specialinvoke $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: void <init>(boolean,java.lang.String,java.lang.String)>(1, null, null);

        return;
    }

    public void <init>(org.apache.maven.artifact.repository.ArtifactRepositoryPolicy)
    {
        ArtifactRepositoryPolicy this;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy policy, $r0;
        boolean $stack2;
        java.lang.String $stack3, $stack4;

        this := @this: ArtifactRepositoryPolicy;

        policy := @parameter0: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;

        $stack2 = virtualinvoke policy.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean isEnabled()>();

        $stack3 = virtualinvoke policy.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack4 = virtualinvoke policy.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getChecksumPolicy()>();

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        specialinvoke $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: void <init>(boolean,java.lang.String,java.lang.String)>($stack2, $stack3, $stack4);

        return;
    }

    public void <init>(boolean, java.lang.String, java.lang.String)
    {
        ArtifactRepositoryPolicy this;
        boolean enabled;
        java.lang.String updatePolicy, checksumPolicy;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0, $r1, $r2;

        this := @this: ArtifactRepositoryPolicy;

        enabled := @parameter0: boolean;

        updatePolicy := @parameter1: java.lang.String;

        checksumPolicy := @parameter2: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean enabled> = enabled;

        if updatePolicy != null goto label1;

        updatePolicy = "daily";

     label1:
        $r1 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $r1.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String updatePolicy> = updatePolicy;

        if checksumPolicy != null goto label2;

        checksumPolicy = "fail";

     label2:
        $r2 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $r2.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String checksumPolicy> = checksumPolicy;

        return;
    }

    public void setEnabled(boolean)
    {
        ArtifactRepositoryPolicy this;
        boolean enabled;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0;

        this := @this: ArtifactRepositoryPolicy;

        enabled := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean enabled> = enabled;

        return;
    }

    public void setUpdatePolicy(java.lang.String)
    {
        java.lang.String updatePolicy;
        ArtifactRepositoryPolicy this;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0;

        this := @this: ArtifactRepositoryPolicy;

        updatePolicy := @parameter0: java.lang.String;

        if updatePolicy == null goto label1;

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String updatePolicy> = updatePolicy;

     label1:
        return;
    }

    public void setChecksumPolicy(java.lang.String)
    {
        java.lang.String checksumPolicy;
        ArtifactRepositoryPolicy this;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0;

        this := @this: ArtifactRepositoryPolicy;

        checksumPolicy := @parameter0: java.lang.String;

        if checksumPolicy == null goto label1;

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String checksumPolicy> = checksumPolicy;

     label1:
        return;
    }

    public boolean isEnabled()
    {
        ArtifactRepositoryPolicy this;
        boolean $stack1;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0;

        this := @this: ArtifactRepositoryPolicy;

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean enabled>;

        return $stack1;
    }

    public java.lang.String getUpdatePolicy()
    {
        ArtifactRepositoryPolicy this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0;

        this := @this: ArtifactRepositoryPolicy;

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String updatePolicy>;

        return $stack1;
    }

    public java.lang.String getChecksumPolicy()
    {
        ArtifactRepositoryPolicy this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0;

        this := @this: ArtifactRepositoryPolicy;

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String checksumPolicy>;

        return $stack1;
    }

    public boolean checkOutOfDate(java.util.Date)
    {
        ArtifactRepositoryPolicy this;
        java.lang.String $stack6, $stack7, $stack9, $stack10, $stack12, $stack14, $stack15, cal;
        boolean $stack8, $stack11, $stack13, $stack23, $stack27, checkForUpdates;
        int $stack16, $stack17, minutes, $stack21;
        java.util.Calendar cal;
        java.util.Date $stack22, lastModified, $stack26;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0, $r1, $r2, $r3;

        this := @this: ArtifactRepositoryPolicy;

        lastModified := @parameter0: java.util.Date;

        checkForUpdates = 0;

        $stack7 = "always";

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack6 = $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String updatePolicy>;

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>($stack6);

        if $stack8 == 0 goto label1;

        checkForUpdates = 1;

        goto label4;

     label1:
        $stack10 = "daily";

        $r1 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack9 = $r1.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String updatePolicy>;

        $stack11 = virtualinvoke $stack10.<java.lang.String: boolean equals(java.lang.Object)>($stack9);

        if $stack11 == 0 goto label3;

        cal = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke cal.<java.util.Calendar: void set(int,int)>(11, 0);

        virtualinvoke cal.<java.util.Calendar: void set(int,int)>(12, 0);

        virtualinvoke cal.<java.util.Calendar: void set(int,int)>(13, 0);

        virtualinvoke cal.<java.util.Calendar: void set(int,int)>(14, 0);

        $stack26 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();

        $stack27 = virtualinvoke $stack26.<java.util.Date: boolean after(java.util.Date)>(lastModified);

        if $stack27 == 0 goto label2;

        checkForUpdates = 1;

     label2:
        goto label4;

     label3:
        $r2 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack12 = $r2.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String updatePolicy>;

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean startsWith(java.lang.String)>("interval");

        if $stack13 == 0 goto label4;

        $r3 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack15 = $r3.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String updatePolicy>;

        $stack14 = "interval";

        $stack16 = virtualinvoke $stack14.<java.lang.String: int length()>();

        $stack17 = $stack16 + 1;

        cal = virtualinvoke $stack15.<java.lang.String: java.lang.String substring(int)>($stack17);

        minutes = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(cal);

        cal = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $stack21 = neg minutes;

        virtualinvoke cal.<java.util.Calendar: void add(int,int)>(12, $stack21);

        $stack22 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();

        $stack23 = virtualinvoke $stack22.<java.util.Date: boolean after(java.util.Date)>(lastModified);

        if $stack23 == 0 goto label4;

        checkForUpdates = 1;

     label4:
        return checkForUpdates;
    }

    public java.lang.String toString()
    {
        ArtifactRepositoryPolicy this;
        boolean $stack4;
        java.lang.String $stack7, $stack10, $stack13;
        java.lang.StringBuilder $u0;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $r0, $r1, $r2;

        this := @this: ArtifactRepositoryPolicy;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{enabled=");

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack4 = $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean enabled>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack4);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", checksums=");

        $r1 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack7 = $r1.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String checksumPolicy>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", updates=");

        $r2 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack10 = $r2.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String updatePolicy>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $stack13 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack13;
    }

    public void merge(org.apache.maven.artifact.repository.ArtifactRepositoryPolicy)
    {
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy policy, $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $stack2;
        ArtifactRepositoryPolicy this;
        java.lang.String $stack3, $stack5, $stack7, $stack9, $stack11, $stack12;
        int $stack4, $stack6, $stack8, $stack10;

        this := @this: ArtifactRepositoryPolicy;

        policy := @parameter0: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;

        if policy == null goto label2;

        $stack2 = virtualinvoke policy.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean isEnabled()>();

        if $stack2 == 0 goto label2;

        $r0 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        virtualinvoke $r0.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: void setEnabled(boolean)>(1);

        $stack3 = virtualinvoke policy.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getChecksumPolicy()>();

        $r1 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack4 = specialinvoke $r1.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: int ordinalOfCksumPolicy(java.lang.String)>($stack3);

        $r2 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack5 = virtualinvoke $r2.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getChecksumPolicy()>();

        $r3 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack6 = specialinvoke $r3.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: int ordinalOfCksumPolicy(java.lang.String)>($stack5);

        if $stack4 >= $stack6 goto label1;

        $stack12 = virtualinvoke policy.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getChecksumPolicy()>();

        $r4 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        virtualinvoke $r4.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: void setChecksumPolicy(java.lang.String)>($stack12);

     label1:
        $stack7 = virtualinvoke policy.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $r5 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack8 = specialinvoke $r5.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: int ordinalOfUpdatePolicy(java.lang.String)>($stack7);

        $r6 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack9 = virtualinvoke $r6.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $r7 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        $stack10 = specialinvoke $r7.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: int ordinalOfUpdatePolicy(java.lang.String)>($stack9);

        if $stack8 >= $stack10 goto label2;

        $stack11 = virtualinvoke policy.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $r8 = (org.apache.maven.artifact.repository.ArtifactRepositoryPolicy) this;

        virtualinvoke $r8.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: void setUpdatePolicy(java.lang.String)>($stack11);

     label2:
        return;
    }

    private int ordinalOfCksumPolicy(java.lang.String)
    {
        java.lang.String policy, $stack2, $stack4;
        boolean $stack3, $stack5;
        ArtifactRepositoryPolicy this;

        this := @this: ArtifactRepositoryPolicy;

        policy := @parameter0: java.lang.String;

        $stack2 = "fail";

        $stack3 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>(policy);

        if $stack3 == 0 goto label1;

        return 2;

     label1:
        $stack4 = "ignore";

        $stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>(policy);

        if $stack5 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    private int ordinalOfUpdatePolicy(java.lang.String)
    {
        java.lang.String policy, $stack3, $stack5, $stack9, s;
        boolean $stack4, $stack6, $stack7;
        int $stack10, $stack11, $stack13;
        ArtifactRepositoryPolicy this;

        this := @this: ArtifactRepositoryPolicy;

        policy := @parameter0: java.lang.String;

        $stack3 = "daily";

        $stack4 = virtualinvoke $stack3.<java.lang.String: boolean equals(java.lang.Object)>(policy);

        if $stack4 == 0 goto label1;

        return 1440;

     label1:
        $stack5 = "always";

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(policy);

        if $stack6 == 0 goto label2;

        return 0;

     label2:
        if policy == null goto label3;

        $stack7 = virtualinvoke policy.<java.lang.String: boolean startsWith(java.lang.String)>("interval");

        if $stack7 == 0 goto label3;

        $stack9 = "interval";

        $stack10 = virtualinvoke $stack9.<java.lang.String: int length()>();

        $stack11 = $stack10 + 1;

        s = virtualinvoke policy.<java.lang.String: java.lang.String substring(int)>($stack11);

        $stack13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(s);

        return $stack13;

     label3:
        return 2147483647;
    }

    public static void <clinit>()
    {
        <ArtifactRepositoryPolicy: java.lang.String DEFAULT_CHECKSUM_POLICY> = "fail";

        <ArtifactRepositoryPolicy: java.lang.String CHECKSUM_POLICY_IGNORE> = "ignore";

        <ArtifactRepositoryPolicy: java.lang.String CHECKSUM_POLICY_WARN> = "warn";

        <ArtifactRepositoryPolicy: java.lang.String CHECKSUM_POLICY_FAIL> = "fail";

        <ArtifactRepositoryPolicy: java.lang.String UPDATE_POLICY_INTERVAL> = "interval";

        <ArtifactRepositoryPolicy: java.lang.String UPDATE_POLICY_DAILY> = "daily";

        <ArtifactRepositoryPolicy: java.lang.String UPDATE_POLICY_ALWAYS> = "always";

        <ArtifactRepositoryPolicy: java.lang.String UPDATE_POLICY_NEVER> = "never";

        return;
    }
}
