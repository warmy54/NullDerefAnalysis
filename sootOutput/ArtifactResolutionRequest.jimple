public class ArtifactResolutionRequest extends java.lang.Object implements org.apache.maven.artifact.repository.RepositoryRequest
{
    private static final java.lang.String LS;
    private org.apache.maven.artifact.Artifact artifact;
    private java.util.Set artifactDependencies;
    private org.apache.maven.artifact.repository.ArtifactRepository localRepository;
    private java.util.List remoteRepositories;
    private org.apache.maven.artifact.resolver.filter.ArtifactFilter collectionFilter;
    private org.apache.maven.artifact.resolver.filter.ArtifactFilter resolutionFilter;
    private java.util.List listeners;
    private java.util.Map managedVersionMap;
    private boolean resolveRoot;
    private boolean resolveTransitively;
    private boolean offline;
    private boolean forceUpdate;
    private java.util.List servers;
    private java.util.List mirrors;
    private java.util.List proxies;

    public void <init>()
    {
        ArtifactResolutionRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1, $r2;

        this := @this: ArtifactResolutionRequest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List listeners> = $u0;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r1.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean resolveRoot> = 1;

        $r2 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r2.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean resolveTransitively> = 0;

        return;
    }

    public void <init>(org.apache.maven.artifact.repository.RepositoryRequest)
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.repository.RepositoryRequest request;
        org.apache.maven.artifact.repository.ArtifactRepository $stack3;
        java.util.List $stack5;
        boolean $stack7, $stack9;
        java.util.ArrayList $u0;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: ArtifactResolutionRequest;

        request := @parameter0: org.apache.maven.artifact.repository.RepositoryRequest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List listeners> = $u0;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r1.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean resolveRoot> = 1;

        $r2 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r2.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean resolveTransitively> = 0;

        $stack3 = interfaceinvoke request.<org.apache.maven.artifact.repository.RepositoryRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        $r3 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        virtualinvoke $r3.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.ArtifactResolutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>($stack3);

        $stack5 = interfaceinvoke request.<org.apache.maven.artifact.repository.RepositoryRequest: java.util.List getRemoteRepositories()>();

        $r4 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        virtualinvoke $r4.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.ArtifactResolutionRequest setRemoteRepositories(java.util.List)>($stack5);

        $stack7 = interfaceinvoke request.<org.apache.maven.artifact.repository.RepositoryRequest: boolean isOffline()>();

        $r5 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        virtualinvoke $r5.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.ArtifactResolutionRequest setOffline(boolean)>($stack7);

        $stack9 = interfaceinvoke request.<org.apache.maven.artifact.repository.RepositoryRequest: boolean isForceUpdate()>();

        $r6 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        virtualinvoke $r6.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.ArtifactResolutionRequest setForceUpdate(boolean)>($stack9);

        return;
    }

    public org.apache.maven.artifact.Artifact getArtifact()
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.Artifact artifact>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setArtifact(org.apache.maven.artifact.Artifact)
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.Artifact artifact;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.Artifact artifact> = artifact;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setArtifactDependencies(java.util.Set)
    {
        ArtifactResolutionRequest this;
        java.util.Set artifactDependencies;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        artifactDependencies := @parameter0: java.util.Set;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.Set artifactDependencies> = artifactDependencies;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public java.util.Set getArtifactDependencies()
    {
        ArtifactResolutionRequest this;
        java.util.Set $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.Set artifactDependencies>;

        return $stack1;
    }

    public org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.repository.ArtifactRepository localRepository>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        localRepository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.repository.ArtifactRepository localRepository> = localRepository;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public java.util.List getRemoteRepositories()
    {
        ArtifactResolutionRequest this;
        java.util.List $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List remoteRepositories>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setRemoteRepositories(java.util.List)
    {
        ArtifactResolutionRequest this;
        java.util.List remoteRepositories;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        remoteRepositories := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List remoteRepositories> = remoteRepositories;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public org.apache.maven.artifact.resolver.filter.ArtifactFilter getCollectionFilter()
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.filter.ArtifactFilter collectionFilter>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setCollectionFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter)
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter filter;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        filter := @parameter0: org.apache.maven.artifact.resolver.filter.ArtifactFilter;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.filter.ArtifactFilter collectionFilter> = filter;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public org.apache.maven.artifact.resolver.filter.ArtifactFilter getResolutionFilter()
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.filter.ArtifactFilter resolutionFilter>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setResolutionFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter)
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter filter;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        filter := @parameter0: org.apache.maven.artifact.resolver.filter.ArtifactFilter;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.filter.ArtifactFilter resolutionFilter> = filter;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public java.util.List getListeners()
    {
        ArtifactResolutionRequest this;
        java.util.List $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List listeners>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setListeners(java.util.List)
    {
        ArtifactResolutionRequest this;
        java.util.List listeners;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        listeners := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List listeners> = listeners;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest addListener(org.apache.maven.artifact.resolver.ResolutionListener)
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.resolver.ResolutionListener listener;
        java.util.List $stack2;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        listener := @parameter0: org.apache.maven.artifact.resolver.ResolutionListener;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack2 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List listeners>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(listener);

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public java.util.Map getManagedVersionMap()
    {
        ArtifactResolutionRequest this;
        java.util.Map $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.Map managedVersionMap>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setManagedVersionMap(java.util.Map)
    {
        ArtifactResolutionRequest this;
        java.util.Map managedVersionMap;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        managedVersionMap := @parameter0: java.util.Map;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.Map managedVersionMap> = managedVersionMap;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setResolveRoot(boolean)
    {
        ArtifactResolutionRequest this;
        boolean resolveRoot;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        resolveRoot := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean resolveRoot> = resolveRoot;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public boolean isResolveRoot()
    {
        ArtifactResolutionRequest this;
        boolean $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean resolveRoot>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setResolveTransitively(boolean)
    {
        ArtifactResolutionRequest this;
        boolean resolveDependencies;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        resolveDependencies := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean resolveTransitively> = resolveDependencies;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public boolean isResolveTransitively()
    {
        ArtifactResolutionRequest this;
        boolean $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean resolveTransitively>;

        return $stack1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack3, $stack5, $stack6, $stack8, $stack10, $stack12, $stack14, $stack15, $stack17, $stack19, $stack20, sb, $u0;
        java.lang.String $stack4, $stack9, $stack13, $stack18, $stack23;
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.Artifact $stack7;
        java.util.Set $stack11;
        org.apache.maven.artifact.repository.ArtifactRepository $stack16;
        java.util.List $stack21;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1, $r2, $r3;

        this := @this: ArtifactResolutionRequest;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack3 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("REQUEST: ");

        $stack4 = <org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.lang.String LS>;

        $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("artifact: ");

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack7 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.Artifact artifact>;

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack7);

        $stack9 = <org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.lang.String LS>;

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack11 = $r1.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.Set artifactDependencies>;

        $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack11);

        $stack13 = <org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.lang.String LS>;

        $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("localRepository: ");

        $r2 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack16 = $r2.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.repository.ArtifactRepository localRepository>;

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack16);

        $stack18 = <org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.lang.String LS>;

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remoteRepositories: ");

        $r3 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack21 = $r3.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List remoteRepositories>;

        sb = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack21);

        $stack23 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack23;
    }

    public boolean isOffline()
    {
        ArtifactResolutionRequest this;
        boolean $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean offline>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setOffline(boolean)
    {
        ArtifactResolutionRequest this;
        boolean offline;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        offline := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean offline> = offline;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public boolean isForceUpdate()
    {
        ArtifactResolutionRequest this;
        boolean $stack1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean forceUpdate>;

        return $stack1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setForceUpdate(boolean)
    {
        ArtifactResolutionRequest this;
        boolean forceUpdate;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        forceUpdate := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: boolean forceUpdate> = forceUpdate;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setServers(java.util.List)
    {
        ArtifactResolutionRequest this;
        java.util.List servers;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        servers := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List servers> = servers;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public java.util.List getServers()
    {
        ArtifactResolutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1, $r2;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List servers>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r1.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List servers> = $u0;

     label1:
        $r2 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack2 = $r2.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List servers>;

        return $stack2;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setMirrors(java.util.List)
    {
        ArtifactResolutionRequest this;
        java.util.List mirrors;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        mirrors := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List mirrors> = mirrors;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public java.util.List getMirrors()
    {
        ArtifactResolutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1, $r2;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List mirrors>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r1.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List mirrors> = $u0;

     label1:
        $r2 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack2 = $r2.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List mirrors>;

        return $stack2;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setProxies(java.util.List)
    {
        ArtifactResolutionRequest this;
        java.util.List proxies;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1;

        this := @this: ArtifactResolutionRequest;

        proxies := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List proxies> = proxies;

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r1;
    }

    public java.util.List getProxies()
    {
        ArtifactResolutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0, $r1, $r2;

        this := @this: ArtifactResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List proxies>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $r1.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List proxies> = $u0;

     label1:
        $r2 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack2 = $r2.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List proxies>;

        return $stack2;
    }

    public org.apache.maven.artifact.resolver.ArtifactResolutionRequest setCache(org.apache.maven.artifact.repository.RepositoryCache)
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.repository.RepositoryCache cache;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $r0;

        this := @this: ArtifactResolutionRequest;

        cache := @parameter0: org.apache.maven.artifact.repository.RepositoryCache;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        return $r0;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setRemoteRepositories(java.util.List)
    {
        ArtifactResolutionRequest this;
        java.util.List l1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: ArtifactResolutionRequest;

        l1 := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.ArtifactResolutionRequest setRemoteRepositories(java.util.List)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        ArtifactResolutionRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository l1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: ArtifactResolutionRequest;

        l1 := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.ArtifactResolutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setForceUpdate(boolean)
    {
        ArtifactResolutionRequest this;
        boolean l1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: ArtifactResolutionRequest;

        l1 := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.ArtifactResolutionRequest setForceUpdate(boolean)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setOffline(boolean)
    {
        ArtifactResolutionRequest this;
        boolean l1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: ArtifactResolutionRequest;

        l1 := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.resolver.ArtifactResolutionRequest setOffline(boolean)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.String $stack0;

        $stack0 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        <org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.lang.String LS> = $stack0;

        return;
    }
}
