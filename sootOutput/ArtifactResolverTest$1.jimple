class ArtifactResolverTest$1 extends java.lang.Object implements org.apache.maven.artifact.metadata.ArtifactMetadataSource
{
    final org.apache.maven.artifact.resolver.ArtifactResolverTest this$0;

    void <init>(org.apache.maven.artifact.resolver.ArtifactResolverTest)
    {
        ArtifactResolverTest$1 this;
        org.apache.maven.artifact.resolver.ArtifactResolverTest this$0;
        org.apache.maven.artifact.resolver.ArtifactResolverTest$1 $r0;

        this := @this: ArtifactResolverTest$1;

        this$0 := @parameter0: org.apache.maven.artifact.resolver.ArtifactResolverTest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolverTest$1) this;

        $r0.<org.apache.maven.artifact.resolver.ArtifactResolverTest$1: org.apache.maven.artifact.resolver.ArtifactResolverTest this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List)
    {
        java.util.HashSet $stack5;
        org.apache.maven.artifact.metadata.ResolutionGroup $stack6;
        org.apache.maven.artifact.Artifact artifact;
        java.util.List remoteRepositories;
        ArtifactResolverTest$1 this;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;

        this := @this: ArtifactResolverTest$1;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        localRepository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        remoteRepositories := @parameter2: java.util.List;

        $stack5 = new java.util.HashSet;

        specialinvoke $stack5.<java.util.HashSet: void <init>()>();

        $stack6 = new org.apache.maven.artifact.metadata.ResolutionGroup;

        specialinvoke $stack6.<org.apache.maven.artifact.metadata.ResolutionGroup: void <init>(org.apache.maven.artifact.Artifact,java.util.Set,java.util.List)>(artifact, $stack5, remoteRepositories);

        return $stack6;
    }

    public java.util.List retrieveAvailableVersions(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List)
    {
        java.lang.UnsupportedOperationException $stack4;
        ArtifactResolverTest$1 this;
        org.apache.maven.artifact.Artifact artifact;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        java.util.List remoteRepositories;

        this := @this: ArtifactResolverTest$1;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        localRepository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        remoteRepositories := @parameter2: java.util.List;

        $stack4 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get available versions in this test case");

        throw $stack4;
    }

    public java.util.List retrieveAvailableVersionsFromDeploymentRepository(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository)
    {
        java.lang.UnsupportedOperationException $stack4;
        ArtifactResolverTest$1 this;
        org.apache.maven.artifact.Artifact artifact;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository, remoteRepository;

        this := @this: ArtifactResolverTest$1;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        localRepository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        remoteRepository := @parameter2: org.apache.maven.artifact.repository.ArtifactRepository;

        $stack4 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot get available versions in this test case");

        throw $stack4;
    }

    public org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest)
    {
        ArtifactResolverTest$1 this;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest request;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.artifact.repository.ArtifactRepository $stack3;
        java.util.List $stack4;
        org.apache.maven.artifact.metadata.ResolutionGroup $stack5;
        org.apache.maven.artifact.resolver.ArtifactResolverTest$1 $r0;

        this := @this: ArtifactResolverTest$1;

        request := @parameter0: org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest;

        $stack2 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.artifact.Artifact getArtifact()>();

        $stack3 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        $stack4 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: java.util.List getRemoteRepositories()>();

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolverTest$1) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.artifact.resolver.ArtifactResolverTest$1: org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.artifact.Artifact,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>($stack2, $stack3, $stack4);

        return $stack5;
    }

    public java.util.List retrieveAvailableVersions(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest)
    {
        ArtifactResolverTest$1 this;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest request;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.artifact.repository.ArtifactRepository $stack3;
        java.util.List $stack4, $stack5;
        org.apache.maven.artifact.resolver.ArtifactResolverTest$1 $r0;

        this := @this: ArtifactResolverTest$1;

        request := @parameter0: org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest;

        $stack2 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.artifact.Artifact getArtifact()>();

        $stack3 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        $stack4 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: java.util.List getRemoteRepositories()>();

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolverTest$1) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.artifact.resolver.ArtifactResolverTest$1: java.util.List retrieveAvailableVersions(org.apache.maven.artifact.Artifact,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>($stack2, $stack3, $stack4);

        return $stack5;
    }

    public volatile org.apache.maven.repository.legacy.metadata.ResolutionGroup retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List) throws org.apache.maven.repository.legacy.metadata.ArtifactMetadataRetrievalException
    {
        ArtifactResolverTest$1 this;
        org.apache.maven.artifact.Artifact l1;
        org.apache.maven.artifact.repository.ArtifactRepository l2;
        java.util.List l3;
        org.apache.maven.artifact.metadata.ResolutionGroup $stack4;
        org.apache.maven.artifact.resolver.ArtifactResolverTest$1 $r0;
        org.apache.maven.repository.legacy.metadata.ResolutionGroup $r1;

        this := @this: ArtifactResolverTest$1;

        l1 := @parameter0: org.apache.maven.artifact.Artifact;

        l2 := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        l3 := @parameter2: java.util.List;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolverTest$1) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.artifact.resolver.ArtifactResolverTest$1: org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.artifact.Artifact,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>(l1, l2, l3);

        $r1 = (org.apache.maven.repository.legacy.metadata.ResolutionGroup) $stack4;

        return $r1;
    }

    public volatile org.apache.maven.repository.legacy.metadata.ResolutionGroup retrieve(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) throws org.apache.maven.repository.legacy.metadata.ArtifactMetadataRetrievalException
    {
        ArtifactResolverTest$1 this;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest l1;
        org.apache.maven.artifact.metadata.ResolutionGroup $stack2;
        org.apache.maven.artifact.resolver.ArtifactResolverTest$1 $r0;
        org.apache.maven.repository.legacy.metadata.ResolutionGroup $r1;

        this := @this: ArtifactResolverTest$1;

        l1 := @parameter0: org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest;

        $r0 = (org.apache.maven.artifact.resolver.ArtifactResolverTest$1) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.resolver.ArtifactResolverTest$1: org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest)>(l1);

        $r1 = (org.apache.maven.repository.legacy.metadata.ResolutionGroup) $stack2;

        return $r1;
    }
}
