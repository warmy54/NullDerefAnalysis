public final class ArtifactStatus extends java.lang.Object implements java.lang.Comparable
{
    public static final org.apache.maven.artifact.ArtifactStatus NONE;
    public static final org.apache.maven.artifact.ArtifactStatus GENERATED;
    public static final org.apache.maven.artifact.ArtifactStatus CONVERTED;
    public static final org.apache.maven.artifact.ArtifactStatus PARTNER;
    public static final org.apache.maven.artifact.ArtifactStatus DEPLOYED;
    public static final org.apache.maven.artifact.ArtifactStatus VERIFIED;
    private final int rank;
    private final java.lang.String key;
    private static java.util.Map map;

    private void <init>(java.lang.String, int)
    {
        ArtifactStatus this;
        int rank;
        java.lang.String key;
        java.util.Map $stack3, $stack4;
        java.util.HashMap $u0;
        org.apache.maven.artifact.ArtifactStatus $r0, $r1;

        this := @this: ArtifactStatus;

        key := @parameter0: java.lang.String;

        rank := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.artifact.ArtifactStatus) this;

        $r0.<org.apache.maven.artifact.ArtifactStatus: int rank> = rank;

        $r1 = (org.apache.maven.artifact.ArtifactStatus) this;

        $r1.<org.apache.maven.artifact.ArtifactStatus: java.lang.String key> = key;

        $stack3 = <org.apache.maven.artifact.ArtifactStatus: java.util.Map map>;

        if $stack3 != null goto label1;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        <org.apache.maven.artifact.ArtifactStatus: java.util.Map map> = $u0;

     label1:
        $stack4 = <org.apache.maven.artifact.ArtifactStatus: java.util.Map map>;

        interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, this);

        return;
    }

    public static org.apache.maven.artifact.ArtifactStatus valueOf(java.lang.String)
    {
        java.lang.String status;
        java.util.Map $stack3;
        java.lang.Object $stack4;
        org.apache.maven.artifact.ArtifactStatus retVal, $stack2;

        status := @parameter0: java.lang.String;

        retVal = null;

        if status == null goto label1;

        $stack3 = <org.apache.maven.artifact.ArtifactStatus: java.util.Map map>;

        $stack4 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>(status);

        retVal = (org.apache.maven.artifact.ArtifactStatus) $stack4;

     label1:
        if retVal == null goto label2;

        $stack2 = retVal;

        goto label3;

     label2:
        $stack2 = <org.apache.maven.artifact.ArtifactStatus: org.apache.maven.artifact.ArtifactStatus NONE>;

     label3:
        return $stack2;
    }

    public boolean equals(java.lang.Object)
    {
        ArtifactStatus this;
        java.lang.Object o;
        java.lang.Class $stack3, $stack4;
        org.apache.maven.artifact.ArtifactStatus that, $r0;
        int $stack5, $stack6;
        boolean $stack7;

        this := @this: ArtifactStatus;

        o := @parameter0: java.lang.Object;

        if this != o goto label1;

        return 1;

     label1:
        if o == null goto label2;

        $stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack4 = virtualinvoke o.<java.lang.Object: java.lang.Class getClass()>();

        if $stack3 == $stack4 goto label3;

     label2:
        return 0;

     label3:
        that = (org.apache.maven.artifact.ArtifactStatus) o;

        $r0 = (org.apache.maven.artifact.ArtifactStatus) this;

        $stack6 = $r0.<org.apache.maven.artifact.ArtifactStatus: int rank>;

        $stack5 = that.<org.apache.maven.artifact.ArtifactStatus: int rank>;

        if $stack6 != $stack5 goto label4;

        $stack7 = 1;

        goto label5;

     label4:
        $stack7 = 0;

     label5:
        return $stack7;
    }

    public int hashCode()
    {
        ArtifactStatus this;
        int $stack1;
        org.apache.maven.artifact.ArtifactStatus $r0;

        this := @this: ArtifactStatus;

        $r0 = (org.apache.maven.artifact.ArtifactStatus) this;

        $stack1 = $r0.<org.apache.maven.artifact.ArtifactStatus: int rank>;

        return $stack1;
    }

    public java.lang.String toString()
    {
        ArtifactStatus this;
        java.lang.String $stack1;
        org.apache.maven.artifact.ArtifactStatus $r0;

        this := @this: ArtifactStatus;

        $r0 = (org.apache.maven.artifact.ArtifactStatus) this;

        $stack1 = $r0.<org.apache.maven.artifact.ArtifactStatus: java.lang.String key>;

        return $stack1;
    }

    public int compareTo(org.apache.maven.artifact.ArtifactStatus)
    {
        ArtifactStatus this;
        org.apache.maven.artifact.ArtifactStatus s, $r0;
        int $stack2, $stack3, $stack4;

        this := @this: ArtifactStatus;

        s := @parameter0: org.apache.maven.artifact.ArtifactStatus;

        $r0 = (org.apache.maven.artifact.ArtifactStatus) this;

        $stack3 = $r0.<org.apache.maven.artifact.ArtifactStatus: int rank>;

        $stack2 = s.<org.apache.maven.artifact.ArtifactStatus: int rank>;

        $stack4 = $stack3 - $stack2;

        return $stack4;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ArtifactStatus this;
        java.lang.Object l1;
        org.apache.maven.artifact.ArtifactStatus $stack2, $r0;
        int $stack3;

        this := @this: ArtifactStatus;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.apache.maven.artifact.ArtifactStatus) l1;

        $r0 = (org.apache.maven.artifact.ArtifactStatus) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.artifact.ArtifactStatus: int compareTo(org.apache.maven.artifact.ArtifactStatus)>($stack2);

        return $stack3;
    }

    static void <clinit>()
    {
        org.apache.maven.artifact.ArtifactStatus $stack0, $stack1, $stack2, $stack3, $stack4, $stack5;

        $stack0 = new org.apache.maven.artifact.ArtifactStatus;

        specialinvoke $stack0.<org.apache.maven.artifact.ArtifactStatus: void <init>(java.lang.String,int)>("none", 0);

        <org.apache.maven.artifact.ArtifactStatus: org.apache.maven.artifact.ArtifactStatus NONE> = $stack0;

        $stack1 = new org.apache.maven.artifact.ArtifactStatus;

        specialinvoke $stack1.<org.apache.maven.artifact.ArtifactStatus: void <init>(java.lang.String,int)>("generated", 1);

        <org.apache.maven.artifact.ArtifactStatus: org.apache.maven.artifact.ArtifactStatus GENERATED> = $stack1;

        $stack2 = new org.apache.maven.artifact.ArtifactStatus;

        specialinvoke $stack2.<org.apache.maven.artifact.ArtifactStatus: void <init>(java.lang.String,int)>("converted", 2);

        <org.apache.maven.artifact.ArtifactStatus: org.apache.maven.artifact.ArtifactStatus CONVERTED> = $stack2;

        $stack3 = new org.apache.maven.artifact.ArtifactStatus;

        specialinvoke $stack3.<org.apache.maven.artifact.ArtifactStatus: void <init>(java.lang.String,int)>("partner", 3);

        <org.apache.maven.artifact.ArtifactStatus: org.apache.maven.artifact.ArtifactStatus PARTNER> = $stack3;

        $stack4 = new org.apache.maven.artifact.ArtifactStatus;

        specialinvoke $stack4.<org.apache.maven.artifact.ArtifactStatus: void <init>(java.lang.String,int)>("deployed", 4);

        <org.apache.maven.artifact.ArtifactStatus: org.apache.maven.artifact.ArtifactStatus DEPLOYED> = $stack4;

        $stack5 = new org.apache.maven.artifact.ArtifactStatus;

        specialinvoke $stack5.<org.apache.maven.artifact.ArtifactStatus: void <init>(java.lang.String,int)>("verified", 5);

        <org.apache.maven.artifact.ArtifactStatus: org.apache.maven.artifact.ArtifactStatus VERIFIED> = $stack5;

        return;
    }
}
