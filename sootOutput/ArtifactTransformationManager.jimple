public interface  ArtifactTransformationManager extends java.lang.Object
{
    public static final java.lang.String ROLE;

    public abstract void transformForResolve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.RepositoryRequest) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.resolver.ArtifactNotFoundException;

    public abstract void transformForResolve(org.apache.maven.artifact.Artifact, java.util.List, org.apache.maven.artifact.repository.ArtifactRepository) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.resolver.ArtifactNotFoundException;

    public abstract void transformForInstall(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository) throws org.apache.maven.artifact.installer.ArtifactInstallationException;

    public abstract void transformForDeployment(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository) throws org.apache.maven.artifact.deployer.ArtifactDeploymentException;

    public abstract java.util.List getArtifactTransformations();

    static void <clinit>()
    {
        java.lang.Class $stack0;
        java.lang.String $stack1;

        $stack0 = class "Lorg/apache/maven/repository/legacy/resolver/transform/ArtifactTransformationManager;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: java.lang.String getName()>();

        <org.apache.maven.repository.legacy.resolver.transform.ArtifactTransformationManager: java.lang.String ROLE> = $stack1;

        return;
    }
}
