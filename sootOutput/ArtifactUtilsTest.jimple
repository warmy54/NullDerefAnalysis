public class ArtifactUtilsTest extends java.lang.Object
{

    public void <init>()
    {
        ArtifactUtilsTest this;

        this := @this: ArtifactUtilsTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private org.apache.maven.artifact.Artifact newArtifact(java.lang.String)
    {
        java.lang.String aid;
        org.apache.maven.artifact.versioning.VersionRange $stack4;
        ArtifactUtilsTest this;
        org.apache.maven.artifact.DefaultArtifact $u0;
        org.apache.maven.artifact.Artifact $r0;

        this := @this: ArtifactUtilsTest;

        aid := @parameter0: java.lang.String;

        $u0 = new org.apache.maven.artifact.DefaultArtifact;

        $stack4 = staticinvoke <org.apache.maven.artifact.versioning.VersionRange: org.apache.maven.artifact.versioning.VersionRange createFromVersion(java.lang.String)>("1.0");

        specialinvoke $u0.<org.apache.maven.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,org.apache.maven.artifact.versioning.VersionRange,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.artifact.handler.ArtifactHandler)>("group", aid, $stack4, "test", "jar", "tests", null);

        $r0 = (org.apache.maven.artifact.Artifact) $u0;

        return $r0;
    }

    public void testIsSnapshot()
    {
        java.lang.Boolean $stack1, $stack3, $stack4, $stack6, $stack7, $stack9, $stack10, $stack12, $stack13, $stack15, $stack16, $stack18, $stack19, $stack21;
        boolean $stack2, $stack5, $stack8, $stack11, $stack14, $stack17, $stack20;
        ArtifactUtilsTest this;

        this := @this: ArtifactUtilsTest;

        $stack1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack2 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: boolean isSnapshot(java.lang.String)>(null);

        $stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack2);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack1, $stack3);

        $stack4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack5 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: boolean isSnapshot(java.lang.String)>("");

        $stack6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack5);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack4, $stack6);

        $stack7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack8 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: boolean isSnapshot(java.lang.String)>("1.2.3");

        $stack9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack8);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack7, $stack9);

        $stack10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack11 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: boolean isSnapshot(java.lang.String)>("1.2.3-SNAPSHOT");

        $stack12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack11);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack10, $stack12);

        $stack13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack14 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: boolean isSnapshot(java.lang.String)>("1.2.3-snapshot");

        $stack15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack14);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack13, $stack15);

        $stack16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack17 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: boolean isSnapshot(java.lang.String)>("1.2.3-20090413.094722-2");

        $stack18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack17);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack16, $stack18);

        $stack19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack20 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: boolean isSnapshot(java.lang.String)>("1.2.3-20090413X094722-2");

        $stack21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack20);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack19, $stack21);

        return;
    }

    public void testToSnapshotVersion()
    {
        java.lang.String $stack2, $stack4, $stack6, $stack8;
        ArtifactUtilsTest this;

        this := @this: ArtifactUtilsTest;

        $stack2 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String toSnapshotVersion(java.lang.String)>("1.2.3");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.2.3", $stack2);

        $stack4 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String toSnapshotVersion(java.lang.String)>("1.2.3-SNAPSHOT");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.2.3-SNAPSHOT", $stack4);

        $stack6 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String toSnapshotVersion(java.lang.String)>("1.2.3-20090413.094722-2");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.2.3-SNAPSHOT", $stack6);

        $stack8 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String toSnapshotVersion(java.lang.String)>("1.2.3-20090413X094722-2");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.2.3-20090413X094722-2", $stack8);

        return;
    }

    public void testArtifactMapByVersionlessIdOrdering() throws java.lang.Exception
    {
        ArtifactUtilsTest this;
        org.apache.maven.artifact.Artifact $stack4, $stack6, $stack8, $stack10, $stack12;
        java.util.Map map;
        java.util.Collection $stack16;
        java.util.ArrayList $u0, $u1;
        org.apache.maven.artifact.ArtifactUtilsTest $r0, $r1, $r2, $r3, $r4;

        this := @this: ArtifactUtilsTest;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.artifact.ArtifactUtilsTest) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.artifact.ArtifactUtilsTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("b");

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($stack4);

        $r1 = (org.apache.maven.artifact.ArtifactUtilsTest) this;

        $stack6 = specialinvoke $r1.<org.apache.maven.artifact.ArtifactUtilsTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("a");

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($stack6);

        $r2 = (org.apache.maven.artifact.ArtifactUtilsTest) this;

        $stack8 = specialinvoke $r2.<org.apache.maven.artifact.ArtifactUtilsTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("c");

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($stack8);

        $r3 = (org.apache.maven.artifact.ArtifactUtilsTest) this;

        $stack10 = specialinvoke $r3.<org.apache.maven.artifact.ArtifactUtilsTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("e");

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($stack10);

        $r4 = (org.apache.maven.artifact.ArtifactUtilsTest) this;

        $stack12 = specialinvoke $r4.<org.apache.maven.artifact.ArtifactUtilsTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("d");

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($stack12);

        map = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.util.Map artifactMapByVersionlessId(java.util.Collection)>($u0);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(map);

        $u1 = new java.util.ArrayList;

        $stack16 = interfaceinvoke map.<java.util.Map: java.util.Collection values()>();

        specialinvoke $u1.<java.util.ArrayList: void <init>(java.util.Collection)>($stack16);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($u0, $u1);

        return;
    }
}
