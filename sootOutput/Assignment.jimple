public class Assignment extends org.ooc.frontend.model.BinaryOperation
{
    protected boolean dead;
    protected org.ooc.frontend.model.Assignment$Mode mode;

    public void <init>(org.ooc.frontend.model.Expression, org.ooc.frontend.model.Expression, org.ooc.frontend.model.tokens.Token)
    {
        Assignment this;
        org.ooc.frontend.model.Expression left, right;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Assignment$Mode $stack4;
        org.ooc.frontend.model.Assignment $r0;

        this := @this: Assignment;

        left := @parameter0: org.ooc.frontend.model.Expression;

        right := @parameter1: org.ooc.frontend.model.Expression;

        startToken := @parameter2: org.ooc.frontend.model.tokens.Token;

        $stack4 = <org.ooc.frontend.model.Assignment$Mode: org.ooc.frontend.model.Assignment$Mode REGULAR>;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        specialinvoke $r0.<org.ooc.frontend.model.Assignment: void <init>(org.ooc.frontend.model.Assignment$Mode,org.ooc.frontend.model.Expression,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($stack4, left, right, startToken);

        return;
    }

    public void <init>(org.ooc.frontend.model.Assignment$Mode, org.ooc.frontend.model.Expression, org.ooc.frontend.model.Expression, org.ooc.frontend.model.tokens.Token)
    {
        Assignment this;
        org.ooc.frontend.model.Expression lvalue, rvalue;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Assignment$Mode mode;
        org.ooc.frontend.model.Assignment $r0, $r1, $r2, $r3;

        this := @this: Assignment;

        mode := @parameter0: org.ooc.frontend.model.Assignment$Mode;

        lvalue := @parameter1: org.ooc.frontend.model.Expression;

        rvalue := @parameter2: org.ooc.frontend.model.Expression;

        startToken := @parameter3: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.BinaryOperation: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>(lvalue, rvalue, startToken);

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $r0.<org.ooc.frontend.model.Assignment: boolean dead> = 0;

        $r1 = (org.ooc.frontend.model.Assignment) this;

        $r1.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Assignment$Mode mode> = mode;

        $r2 = (org.ooc.frontend.model.Assignment) this;

        $r2.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left> = lvalue;

        $r3 = (org.ooc.frontend.model.Assignment) this;

        $r3.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right> = rvalue;

        return;
    }

    public org.ooc.frontend.model.Assignment$Mode getMode()
    {
        Assignment this;
        org.ooc.frontend.model.Assignment$Mode $stack1;
        org.ooc.frontend.model.Assignment $r0;

        this := @this: Assignment;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $stack1 = $r0.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Assignment$Mode mode>;

        return $stack1;
    }

    public org.ooc.frontend.model.Type getType()
    {
        Assignment this;
        org.ooc.frontend.model.Expression $stack1;
        org.ooc.frontend.model.Type $stack2;
        org.ooc.frontend.model.Assignment $r0;

        this := @this: Assignment;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $stack1 = $r0.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack2 = virtualinvoke $stack1.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        return $stack2;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        Assignment this;
        org.ooc.frontend.model.Assignment $r0;

        this := @this: Assignment;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.Assignment)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        Assignment this;

        this := @this: Assignment;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        Assignment this;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.Expression $stack2, $stack3;
        org.ooc.frontend.model.Assignment $r0, $r1;

        this := @this: Assignment;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $stack2 = $r0.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        virtualinvoke $stack2.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>(visitor);

        $r1 = (org.ooc.frontend.model.Assignment) this;

        $stack3 = $r1.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        virtualinvoke $stack3.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        org.ooc.frontend.model.Node oldie, kiddo;
        Assignment this;
        org.ooc.frontend.model.Expression $stack3, $stack4, $stack5, $r2;
        org.ooc.frontend.model.Access $stack6;
        org.ooc.frontend.model.Assignment $r0, $r1, $r3, $r4;

        this := @this: Assignment;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $stack3 = $r0.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        if oldie != $stack3 goto label1;

        $stack6 = (org.ooc.frontend.model.Access) kiddo;

        $r1 = (org.ooc.frontend.model.Assignment) this;

        $r2 = (org.ooc.frontend.model.Expression) $stack6;

        $r1.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left> = $r2;

        return 1;

     label1:
        $r3 = (org.ooc.frontend.model.Assignment) this;

        $stack4 = $r3.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        if oldie != $stack4 goto label2;

        $stack5 = (org.ooc.frontend.model.Expression) kiddo;

        $r4 = (org.ooc.frontend.model.Assignment) this;

        $r4.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right> = $stack5;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String getSymbol()
    {
        Assignment this;
        org.ooc.frontend.model.Assignment$Mode $stack1;
        int[] $stack2;
        int $stack3, $stack4;
        org.ooc.frontend.model.Assignment $r0;

        this := @this: Assignment;

        $stack2 = <org.ooc.frontend.model.Assignment$1: int[] $SwitchMap$org$ooc$frontend$model$Assignment$Mode>;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $stack1 = $r0.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Assignment$Mode mode>;

        $stack3 = virtualinvoke $stack1.<org.ooc.frontend.model.Assignment$Mode: int ordinal()>();

        $stack4 = $stack2[$stack3];

        tableswitch($stack4)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            default: goto label11;
        };

     label01:
        return "+=";

     label02:
        return "/=";

     label03:
        return "*=";

     label04:
        return "-=";

     label05:
        return "&=";

     label06:
        return "<<=";

     label07:
        return "|=";

     label08:
        return ">>=";

     label09:
        return "^=";

     label10:
        return "=";

     label11:
        return "unknown";
    }

    public org.ooc.frontend.model.OpDecl$OpType getOpType()
    {
        Assignment this;
        org.ooc.frontend.model.Assignment$Mode $stack1;
        int[] $stack2;
        int $stack3, $stack4;
        org.ooc.frontend.model.OpDecl$OpType $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14;
        org.ooc.frontend.model.Assignment $r0;

        this := @this: Assignment;

        $stack2 = <org.ooc.frontend.model.Assignment$1: int[] $SwitchMap$org$ooc$frontend$model$Assignment$Mode>;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $stack1 = $r0.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Assignment$Mode mode>;

        $stack3 = virtualinvoke $stack1.<org.ooc.frontend.model.Assignment$Mode: int ordinal()>();

        $stack4 = $stack2[$stack3];

        tableswitch($stack4)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label06;
            case 8: goto label09;
            case 9: goto label05;
            case 10: goto label10;
            default: goto label11;
        };

     label01:
        $stack14 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType ADD_ASS>;

        return $stack14;

     label02:
        $stack13 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType DIV_ASS>;

        return $stack13;

     label03:
        $stack12 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType MUL_ASS>;

        return $stack12;

     label04:
        $stack11 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType SUB_ASS>;

        return $stack11;

     label05:
        $stack6 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType B_XOR_ASS>;

        return $stack6;

     label06:
        $stack8 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType B_OR_ASS>;

        return $stack8;

     label07:
        $stack10 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType B_AND_ASS>;

        return $stack10;

     label08:
        $stack9 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType B_LSHIFT_ASS>;

        return $stack9;

     label09:
        $stack7 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType B_RSHIFT_ASS>;

        return $stack7;

     label10:
        $stack5 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType ASS>;

        return $stack5;

     label11:
        return null;
    }

    public java.lang.String toString()
    {
        Assignment this;
        org.ooc.frontend.model.Expression $stack1, $stack3;
        java.lang.String $stack2, $stack4, $stack5;
        org.ooc.frontend.model.Assignment $r0, $r1;

        this := @this: Assignment;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $stack1 = $r0.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack2 = virtualinvoke $stack1.<org.ooc.frontend.model.Expression: java.lang.String toString()>();

        $r1 = (org.ooc.frontend.model.Assignment) this;

        $stack3 = $r1.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $stack4 = virtualinvoke $stack3.<org.ooc.frontend.model.Expression: java.lang.String toString()>();

        $stack5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack2, $stack4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Assignment: \u0001 = \u0001");

        return $stack5;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        Assignment this;
        boolean $stack8, $stack10, fatal, $stack21, $stack31, $stack36, $stack37, $stack38, $stack39, result, $stack63, $stack71, $stack75, $stack77, $stack83, $stack101;
        org.ooc.frontend.model.NodeList stack, $stack50, $stack54, $stack58;
        org.ooc.frontend.model.Node $stack9, $stack60, $stack65, $stack81, $stack100, $stack103, $stack107, $r1, $r7, $r13, $r23, $r26, $r27, $r28, $r37, $r39, $r40, $r41, $r42, $r44;
        org.ooc.frontend.model.Expression $stack11, $stack15, $stack16, $stack19, $stack22, $stack26, $stack27, $stack29, $stack32, $stack34, $stack43, $stack51, $stack52, $stack55, $stack56, $stack79, $stack80, $stack90, $stack91, $stack93, $stack109, realRight, $r21, $r34;
        org.ooc.frontend.model.Type $stack12, $stack20, $stack23, $stack30, $stack33, $stack35, $stack44, $stack74, $stack76, $stack92;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack13, $stack24, $stack40, $stack62, $stack72, $stack84, $stack114;
        java.lang.String $stack17, $stack18, $stack28, $stack45, $stack67, $stack68, $stack69, $stack105, $stack106;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.model.tokens.Token $stack46, $stack47, $stack49, $stack94;
        java.lang.Class $stack66, $stack104;
        org.ooc.frontend.model.Cast $stack87, $u3;
        org.ooc.frontend.model.For $stack108;
        org.ooc.frontend.model.FunctionCall fCall, $u8;
        org.ooc.frontend.model.FunctionDecl fDecl;
        org.ooc.middle.OocCompilationError $u0, $u1, $u2, $u4, $u5, $u9;
        org.ooc.frontend.model.VariableAccess $u6;
        org.ooc.frontend.model.MemberAccess $u7;
        org.ooc.frontend.model.Assignment $r0, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r25, $r30, $r31, $r32, $r33, $r35, $r36, $r38, $r43;
        java.lang.Throwable $r2, $r8, $r14, $r24, $r29, $r45;

        this := @this: Assignment;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $stack8 = $r0.<org.ooc.frontend.model.Assignment: boolean dead>;

        if $stack8 == 0 goto label01;

        $stack114 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack114;

     label01:
        $stack9 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $stack10 = $stack9 instanceof org.ooc.frontend.model.Line;

        if $stack10 != 0 goto label03;

        $stack100 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $stack101 = $stack100 instanceof org.ooc.frontend.model.For;

        if $stack101 == 0 goto label02;

        $stack107 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $stack108 = (org.ooc.frontend.model.For) $stack107;

        $stack109 = virtualinvoke $stack108.<org.ooc.frontend.model.For: org.ooc.frontend.model.Expression getTest()>();

        if $stack109 != this goto label03;

     label02:
        $u0 = new org.ooc.middle.OocCompilationError;

        $stack103 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $stack104 = virtualinvoke $stack103.<java.lang.Object: java.lang.Class getClass()>();

        $stack105 = virtualinvoke $stack104.<java.lang.Class: java.lang.String getSimpleName()>();

        $stack106 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack105) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("It\'s illegal to use an assignment as an expression (here, in a \u0001) Did you mean \'==\' ?");

        $r1 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r1, stack, $stack106);

        $r2 = (java.lang.Throwable) $u0;

        throw $r2;

     label03:
        $r3 = (org.ooc.frontend.model.Assignment) this;

        $stack11 = $r3.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack12 = virtualinvoke $stack11.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack12 == null goto label04;

        $r4 = (org.ooc.frontend.model.Assignment) this;

        $stack19 = $r4.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack20 = virtualinvoke $stack19.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack21 = virtualinvoke $stack20.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack21 != 0 goto label06;

     label04:
        if fatal == 0 goto label05;

        $u1 = new org.ooc.middle.OocCompilationError;

        $r5 = (org.ooc.frontend.model.Assignment) this;

        $stack15 = $r5.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $r6 = (org.ooc.frontend.model.Assignment) this;

        $stack16 = $r6.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack17 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: java.lang.String toString(boolean)>(1);

        $stack18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Expression,java.lang.String)>($stack16, $stack17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Left type of assignment unresolved: \u0001 (btw, stack = \u0001");

        $r7 = (org.ooc.frontend.model.Node) $stack15;

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r7, stack, $stack18);

        $r8 = (java.lang.Throwable) $u1;

        throw $r8;

     label05:
        $stack13 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack13;

     label06:
        $r9 = (org.ooc.frontend.model.Assignment) this;

        $stack22 = $r9.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $stack23 = virtualinvoke $stack22.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack23 == null goto label07;

        $r10 = (org.ooc.frontend.model.Assignment) this;

        $stack29 = $r10.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack30 = virtualinvoke $stack29.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack31 = virtualinvoke $stack30.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack31 != 0 goto label09;

     label07:
        if fatal == 0 goto label08;

        $u2 = new org.ooc.middle.OocCompilationError;

        $r11 = (org.ooc.frontend.model.Assignment) this;

        $stack27 = $r11.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $r12 = (org.ooc.frontend.model.Assignment) this;

        $stack26 = $r12.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $stack28 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Expression)>($stack26) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Right type of assignment unresolved: \u0001");

        $r13 = (org.ooc.frontend.model.Node) $stack27;

        specialinvoke $u2.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r13, stack, $stack28);

        $r14 = (java.lang.Throwable) $u2;

        throw $r14;

     label08:
        $stack24 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack24;

     label09:
        $r15 = (org.ooc.frontend.model.Assignment) this;

        $stack32 = $r15.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack33 = virtualinvoke $stack32.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $r16 = (org.ooc.frontend.model.Assignment) this;

        $stack34 = $r16.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $stack35 = virtualinvoke $stack34.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack36 = virtualinvoke $stack33.<org.ooc.frontend.model.Type: boolean isSuperOf(org.ooc.frontend.model.Type)>($stack35);

        if $stack36 == 0 goto label10;

        $u3 = new org.ooc.frontend.model.Cast;

        $r17 = (org.ooc.frontend.model.Assignment) this;

        $stack91 = $r17.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $r18 = (org.ooc.frontend.model.Assignment) this;

        $stack90 = $r18.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack92 = virtualinvoke $stack90.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $r19 = (org.ooc.frontend.model.Assignment) this;

        $stack93 = $r19.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $stack94 = $stack93.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u3.<org.ooc.frontend.model.Cast: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>($stack91, $stack92, $stack94);

        $r20 = (org.ooc.frontend.model.Assignment) this;

        $r21 = (org.ooc.frontend.model.Expression) $u3;

        $r20.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right> = $r21;

     label10:
        $r22 = (org.ooc.frontend.model.Assignment) this;

        realRight = $r22.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $stack37 = realRight instanceof org.ooc.frontend.model.Cast;

        if $stack37 == 0 goto label11;

        $stack87 = (org.ooc.frontend.model.Cast) realRight;

        realRight = $stack87.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Expression inner>;

     label11:
        $stack38 = realRight instanceof org.ooc.frontend.model.FunctionCall;

        if $stack38 == 0 goto label16;

        fCall = (org.ooc.frontend.model.FunctionCall) realRight;

        fDecl = virtualinvoke fCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl getImpl()>();

        if fDecl == null goto label12;

        $stack74 = virtualinvoke fDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack75 = virtualinvoke $stack74.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack75 != 0 goto label14;

     label12:
        $stack71 = res.<org.ooc.middle.hobgoblins.Resolver: boolean fatal>;

        if $stack71 == 0 goto label13;

        $u4 = new org.ooc.middle.OocCompilationError;

        $r23 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u4.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r23, stack, "Need more info on fDecl");

        $r24 = (java.lang.Throwable) $u4;

        throw $r24;

     label13:
        $stack72 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack72;

     label14:
        $stack76 = virtualinvoke fDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack77 = virtualinvoke $stack76.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack77 == 0 goto label16;

        $r25 = (org.ooc.frontend.model.Assignment) this;

        $stack79 = $r25.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack80 = virtualinvoke $stack79.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Expression getGenericOperand()>();

        virtualinvoke fCall.<org.ooc.frontend.model.FunctionCall: void setReturnArg(org.ooc.frontend.model.Expression)>($stack80);

        $stack81 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $r26 = (org.ooc.frontend.model.Node) this;

        $r27 = (org.ooc.frontend.model.Node) fCall;

        virtualinvoke $stack81.<org.ooc.frontend.model.Node: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r26, $r27);

        $stack83 = res.<org.ooc.middle.hobgoblins.Resolver: boolean fatal>;

        if $stack83 == 0 goto label15;

        $u5 = new org.ooc.middle.OocCompilationError;

        $r28 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u5.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r28, stack, "Just replaced ourselves with fCall, need to restart");

        $r29 = (java.lang.Throwable) $u5;

        throw $r29;

     label15:
        $stack84 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack84;

     label16:
        $r30 = (org.ooc.frontend.model.Assignment) this;

        $stack39 = virtualinvoke $r30.<org.ooc.frontend.model.Assignment: boolean isGeneric()>();

        if $stack39 == 0 goto label18;

        $u7 = new org.ooc.frontend.model.MemberAccess;

        $u6 = new org.ooc.frontend.model.VariableAccess;

        $r31 = (org.ooc.frontend.model.Assignment) this;

        $stack43 = $r31.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack44 = virtualinvoke $stack43.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack45 = virtualinvoke $stack44.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $r32 = (org.ooc.frontend.model.Assignment) this;

        $stack46 = $r32.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u6.<org.ooc.frontend.model.VariableAccess: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack45, $stack46);

        $r33 = (org.ooc.frontend.model.Assignment) this;

        $stack47 = $r33.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.tokens.Token startToken>;

        $r34 = (org.ooc.frontend.model.Expression) $u6;

        specialinvoke $u7.<org.ooc.frontend.model.MemberAccess: void <init>(org.ooc.frontend.model.Expression,java.lang.String,org.ooc.frontend.model.tokens.Token)>($r34, "size", $stack47);

        $u8 = new org.ooc.frontend.model.FunctionCall;

        $r35 = (org.ooc.frontend.model.Assignment) this;

        $stack49 = $r35.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u8.<org.ooc.frontend.model.FunctionCall: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>("memcpy", $stack49);

        $stack50 = virtualinvoke $u8.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        $r36 = (org.ooc.frontend.model.Assignment) this;

        $stack51 = $r36.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack52 = virtualinvoke $stack51.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Expression getGenericOperand()>();

        $r37 = (org.ooc.frontend.model.Node) $stack52;

        virtualinvoke $stack50.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r37);

        $stack54 = virtualinvoke $u8.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        $r38 = (org.ooc.frontend.model.Assignment) this;

        $stack55 = $r38.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $stack56 = virtualinvoke $stack55.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Expression getGenericOperand()>();

        $r39 = (org.ooc.frontend.model.Node) $stack56;

        virtualinvoke $stack54.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r39);

        $stack58 = virtualinvoke $u8.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        $r40 = (org.ooc.frontend.model.Node) $u7;

        virtualinvoke $stack58.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r40);

        $stack60 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $r41 = (org.ooc.frontend.model.Node) this;

        $r42 = (org.ooc.frontend.model.Node) $u8;

        result = virtualinvoke $stack60.<org.ooc.frontend.model.Node: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r41, $r42);

        if result != 0 goto label17;

        $stack63 = res.<org.ooc.middle.hobgoblins.Resolver: boolean fatal>;

        if $stack63 == 0 goto label17;

        $u9 = new org.ooc.middle.OocCompilationError;

        $stack65 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $stack66 = virtualinvoke $stack65.<java.lang.Object: java.lang.Class getClass()>();

        $stack67 = virtualinvoke $stack66.<java.lang.Class: java.lang.String getName()>();

        $stack68 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: java.lang.String toString(boolean)>(1);

        $r43 = (org.ooc.frontend.model.Assignment) this;

        $stack69 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Assignment,java.lang.String,java.lang.String)>($r43, $stack67, $stack68) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t replace ourselves (\u0001) with a memcpy/assignment in a \u0001! trail = \u0001");

        $r44 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u9.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r44, stack, $stack69);

        $r45 = (java.lang.Throwable) $u9;

        throw $r45;

     label17:
        $stack62 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack62;

     label18:
        $stack40 = specialinvoke this.<org.ooc.frontend.model.BinaryOperation: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        return $stack40;
    }

    private boolean isGeneric()
    {
        Assignment this;
        org.ooc.frontend.model.Expression $stack1, $stack4, $stack7, $stack11;
        org.ooc.frontend.model.Type $stack2, $stack5, $stack8, $stack12;
        boolean $stack3, $stack6, $stack10;
        int $stack9, $stack13;
        org.ooc.frontend.model.Assignment $r0, $r1, $r2, $r3;

        this := @this: Assignment;

        $r0 = (org.ooc.frontend.model.Assignment) this;

        $stack1 = $r0.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack2 = virtualinvoke $stack1.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack3 = virtualinvoke $stack2.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack3 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.Assignment) this;

        $stack11 = $r1.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression left>;

        $stack12 = virtualinvoke $stack11.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack13 = virtualinvoke $stack12.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        if $stack13 == 0 goto label2;

     label1:
        $r2 = (org.ooc.frontend.model.Assignment) this;

        $stack4 = $r2.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $stack5 = virtualinvoke $stack4.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack6 = virtualinvoke $stack5.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack6 == 0 goto label3;

        $r3 = (org.ooc.frontend.model.Assignment) this;

        $stack7 = $r3.<org.ooc.frontend.model.Assignment: org.ooc.frontend.model.Expression right>;

        $stack8 = virtualinvoke $stack7.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack9 = virtualinvoke $stack8.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        if $stack9 != 0 goto label3;

     label2:
        $stack10 = 1;

        goto label4;

     label3:
        $stack10 = 0;

     label4:
        return $stack10;
    }

    public int getPriority()
    {
        Assignment this;

        this := @this: Assignment;

        return 120;
    }
}
