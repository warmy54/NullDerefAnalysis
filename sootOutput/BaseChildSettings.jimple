public class BaseChildSettings extends java.beans.beancontext.BeanContextChildSupport implements java.lang.Comparable
{

    public void <init>()
    {
        BaseChildSettings this;

        this := @this: BaseChildSettings;

        specialinvoke this.<java.beans.beancontext.BeanContextChildSupport: void <init>()>();

        return;
    }

    public void addPropertyChangeListener(java.beans.PropertyChangeListener)
    {
        BaseChildSettings this;
        java.beans.PropertyChangeListener listener;
        java.beans.PropertyChangeSupport $stack2;
        org.bytedeco.javacv.BaseChildSettings $r0;

        this := @this: BaseChildSettings;

        listener := @parameter0: java.beans.PropertyChangeListener;

        $r0 = (org.bytedeco.javacv.BaseChildSettings) this;

        $stack2 = $r0.<org.bytedeco.javacv.BaseChildSettings: java.beans.PropertyChangeSupport pcSupport>;

        virtualinvoke $stack2.<java.beans.PropertyChangeSupport: void addPropertyChangeListener(java.beans.PropertyChangeListener)>(listener);

        return;
    }

    public void removePropertyChangeListener(java.beans.PropertyChangeListener)
    {
        BaseChildSettings this;
        java.beans.PropertyChangeListener listener;
        java.beans.PropertyChangeSupport $stack2;
        org.bytedeco.javacv.BaseChildSettings $r0;

        this := @this: BaseChildSettings;

        listener := @parameter0: java.beans.PropertyChangeListener;

        $r0 = (org.bytedeco.javacv.BaseChildSettings) this;

        $stack2 = $r0.<org.bytedeco.javacv.BaseChildSettings: java.beans.PropertyChangeSupport pcSupport>;

        virtualinvoke $stack2.<java.beans.PropertyChangeSupport: void removePropertyChangeListener(java.beans.PropertyChangeListener)>(listener);

        return;
    }

    public int compareTo(org.bytedeco.javacv.BaseChildSettings)
    {
        BaseChildSettings this;
        java.lang.String $stack2, $stack3;
        org.bytedeco.javacv.BaseChildSettings o, $r0;
        int $stack4;

        this := @this: BaseChildSettings;

        o := @parameter0: org.bytedeco.javacv.BaseChildSettings;

        $r0 = (org.bytedeco.javacv.BaseChildSettings) this;

        $stack2 = virtualinvoke $r0.<org.bytedeco.javacv.BaseChildSettings: java.lang.String getName()>();

        $stack3 = virtualinvoke o.<org.bytedeco.javacv.BaseChildSettings: java.lang.String getName()>();

        $stack4 = virtualinvoke $stack2.<java.lang.String: int compareTo(java.lang.String)>($stack3);

        return $stack4;
    }

    protected java.lang.String getName()
    {
        BaseChildSettings this;

        this := @this: BaseChildSettings;

        return "";
    }

    public volatile int compareTo(java.lang.Object)
    {
        BaseChildSettings this;
        java.lang.Object l1;
        org.bytedeco.javacv.BaseChildSettings $stack2, $r0;
        int $stack3;

        this := @this: BaseChildSettings;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.bytedeco.javacv.BaseChildSettings) l1;

        $r0 = (org.bytedeco.javacv.BaseChildSettings) this;

        $stack3 = virtualinvoke $r0.<org.bytedeco.javacv.BaseChildSettings: int compareTo(org.bytedeco.javacv.BaseChildSettings)>($stack2);

        return $stack3;
    }
}
