public final enum class BinaryCombination$BinaryComp extends java.lang.Enum
{
    public static final enum org.ooc.frontend.model.BinaryCombination$BinaryComp LOGICAL_OR;
    public static final enum org.ooc.frontend.model.BinaryCombination$BinaryComp LOGICAL_AND;
    public static final enum org.ooc.frontend.model.BinaryCombination$BinaryComp BITWISE_OR;
    public static final enum org.ooc.frontend.model.BinaryCombination$BinaryComp BITWISE_AND;
    public static final enum org.ooc.frontend.model.BinaryCombination$BinaryComp BITWISE_XOR;
    public static final enum org.ooc.frontend.model.BinaryCombination$BinaryComp LSHIFT;
    public static final enum org.ooc.frontend.model.BinaryCombination$BinaryComp RSHIFT;
    private static final org.ooc.frontend.model.BinaryCombination$BinaryComp[] $VALUES;

    public static org.ooc.frontend.model.BinaryCombination$BinaryComp[] values()
    {
        org.ooc.frontend.model.BinaryCombination$BinaryComp[] $stack0, $stack2;
        java.lang.Object $stack1;

        $stack0 = <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp[] $VALUES>;

        $stack1 = virtualinvoke $stack0.<java.lang.Object: java.lang.Object clone()>();

        $stack2 = (org.ooc.frontend.model.BinaryCombination$BinaryComp[]) $stack1;

        return $stack2;
    }

    public static org.ooc.frontend.model.BinaryCombination$BinaryComp valueOf(java.lang.String)
    {
        java.lang.String name;
        java.lang.Enum $stack1;
        org.ooc.frontend.model.BinaryCombination$BinaryComp $stack2;

        name := @parameter0: java.lang.String;

        $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/ooc/frontend/model/BinaryCombination$BinaryComp;", name);

        $stack2 = (org.ooc.frontend.model.BinaryCombination$BinaryComp) $stack1;

        return $stack2;
    }

    private void <init>(java.lang.String, int)
    {
        BinaryCombination$BinaryComp this;
        java.lang.String l1;
        int l2;

        this := @this: BinaryCombination$BinaryComp;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }

    static void <clinit>()
    {
        org.ooc.frontend.model.BinaryCombination$BinaryComp $stack0, $stack1, $stack2, $stack3, $stack4, $stack5, $stack6, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14;
        org.ooc.frontend.model.BinaryCombination$BinaryComp[] $stack7;

        $stack0 = new org.ooc.frontend.model.BinaryCombination$BinaryComp;

        specialinvoke $stack0.<org.ooc.frontend.model.BinaryCombination$BinaryComp: void <init>(java.lang.String,int)>("LOGICAL_OR", 0);

        <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp LOGICAL_OR> = $stack0;

        $stack1 = new org.ooc.frontend.model.BinaryCombination$BinaryComp;

        specialinvoke $stack1.<org.ooc.frontend.model.BinaryCombination$BinaryComp: void <init>(java.lang.String,int)>("LOGICAL_AND", 1);

        <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp LOGICAL_AND> = $stack1;

        $stack2 = new org.ooc.frontend.model.BinaryCombination$BinaryComp;

        specialinvoke $stack2.<org.ooc.frontend.model.BinaryCombination$BinaryComp: void <init>(java.lang.String,int)>("BITWISE_OR", 2);

        <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp BITWISE_OR> = $stack2;

        $stack3 = new org.ooc.frontend.model.BinaryCombination$BinaryComp;

        specialinvoke $stack3.<org.ooc.frontend.model.BinaryCombination$BinaryComp: void <init>(java.lang.String,int)>("BITWISE_AND", 3);

        <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp BITWISE_AND> = $stack3;

        $stack4 = new org.ooc.frontend.model.BinaryCombination$BinaryComp;

        specialinvoke $stack4.<org.ooc.frontend.model.BinaryCombination$BinaryComp: void <init>(java.lang.String,int)>("BITWISE_XOR", 4);

        <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp BITWISE_XOR> = $stack4;

        $stack5 = new org.ooc.frontend.model.BinaryCombination$BinaryComp;

        specialinvoke $stack5.<org.ooc.frontend.model.BinaryCombination$BinaryComp: void <init>(java.lang.String,int)>("LSHIFT", 5);

        <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp LSHIFT> = $stack5;

        $stack6 = new org.ooc.frontend.model.BinaryCombination$BinaryComp;

        specialinvoke $stack6.<org.ooc.frontend.model.BinaryCombination$BinaryComp: void <init>(java.lang.String,int)>("RSHIFT", 6);

        <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp RSHIFT> = $stack6;

        $stack7 = newarray (org.ooc.frontend.model.BinaryCombination$BinaryComp)[7];

        $stack8 = <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp LOGICAL_OR>;

        $stack7[0] = $stack8;

        $stack9 = <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp LOGICAL_AND>;

        $stack7[1] = $stack9;

        $stack10 = <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp BITWISE_OR>;

        $stack7[2] = $stack10;

        $stack11 = <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp BITWISE_AND>;

        $stack7[3] = $stack11;

        $stack12 = <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp BITWISE_XOR>;

        $stack7[4] = $stack12;

        $stack13 = <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp LSHIFT>;

        $stack7[5] = $stack13;

        $stack14 = <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp RSHIFT>;

        $stack7[6] = $stack14;

        <org.ooc.frontend.model.BinaryCombination$BinaryComp: org.ooc.frontend.model.BinaryCombination$BinaryComp[] $VALUES> = $stack7;

        return;
    }
}
