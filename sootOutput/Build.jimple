public class Build extends org.apache.maven.model.BuildBase implements java.io.Serializable, java.lang.Cloneable
{
    private java.lang.String sourceDirectory;
    private java.lang.String scriptSourceDirectory;
    private java.lang.String testSourceDirectory;
    private java.lang.String outputDirectory;
    private java.lang.String testOutputDirectory;
    private java.util.List extensions;

    public void <init>()
    {
        Build this;

        this := @this: Build;

        specialinvoke this.<org.apache.maven.model.BuildBase: void <init>()>();

        return;
    }

    public void addExtension(org.apache.maven.model.Extension)
    {
        Build this;
        java.util.List $stack2;
        org.apache.maven.model.Extension extension;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        extension := @parameter0: org.apache.maven.model.Extension;

        $r0 = (org.apache.maven.model.Build) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(extension);

        return;
    }

    public org.apache.maven.model.Build clone()
    {
        Build this;
        org.apache.maven.model.BuildBase $stack4;
        java.util.List $stack5, $stack7, $stack12;
        java.util.Iterator l2;
        boolean $stack9;
        java.lang.Object $stack11;
        org.apache.maven.model.Extension item, $stack13;
        java.lang.Exception $stack16;
        java.lang.Class $stack19;
        java.lang.String $stack20, $stack23;
        java.lang.StringBuilder $stack21, $stack22, $u1;
        java.lang.Throwable $stack24;
        java.lang.RuntimeException $stack25;
        org.apache.maven.model.Build copy, $r0, $r1;
        java.util.ArrayList $u0;
        java.lang.UnsupportedOperationException $u2;

        this := @this: Build;

     label1:
        $stack4 = specialinvoke this.<org.apache.maven.model.BuildBase: org.apache.maven.model.BuildBase clone()>();

        copy = (org.apache.maven.model.Build) $stack4;

        $r0 = (org.apache.maven.model.Build) this;

        $stack5 = $r0.<org.apache.maven.model.Build: java.util.List extensions>;

        if $stack5 == null goto label3;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.model.Build: java.util.List extensions> = $u0;

        $r1 = (org.apache.maven.model.Build) this;

        $stack7 = $r1.<org.apache.maven.model.Build: java.util.List extensions>;

        l2 = interfaceinvoke $stack7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack9 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack11 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.model.Extension) $stack11;

        $stack12 = copy.<org.apache.maven.model.Build: java.util.List extensions>;

        $stack13 = virtualinvoke item.<org.apache.maven.model.Extension: org.apache.maven.model.Extension clone()>();

        interfaceinvoke $stack12.<java.util.List: boolean add(java.lang.Object)>($stack13);

        goto label2;

     label3:
        return copy;

     label4:
        $stack16 := @caughtexception;

        $u2 = new java.lang.UnsupportedOperationException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack20 = virtualinvoke $stack19.<java.lang.Class: java.lang.String getName()>();

        $stack21 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support clone()");

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack23);

        $stack24 = virtualinvoke $u2.<java.lang.UnsupportedOperationException: java.lang.Throwable initCause(java.lang.Throwable)>($stack16);

        $stack25 = (java.lang.RuntimeException) $stack24;

        throw $stack25;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public java.util.List getExtensions()
    {
        Build this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.model.Build $r0, $r1, $r2;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = $r0.<org.apache.maven.model.Build: java.util.List extensions>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.model.Build) this;

        $r1.<org.apache.maven.model.Build: java.util.List extensions> = $u0;

     label1:
        $r2 = (org.apache.maven.model.Build) this;

        $stack2 = $r2.<org.apache.maven.model.Build: java.util.List extensions>;

        return $stack2;
    }

    public java.lang.String getOutputDirectory()
    {
        Build this;
        java.lang.String $stack1;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = $r0.<org.apache.maven.model.Build: java.lang.String outputDirectory>;

        return $stack1;
    }

    public java.lang.String getScriptSourceDirectory()
    {
        Build this;
        java.lang.String $stack1;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = $r0.<org.apache.maven.model.Build: java.lang.String scriptSourceDirectory>;

        return $stack1;
    }

    public java.lang.String getSourceDirectory()
    {
        Build this;
        java.lang.String $stack1;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = $r0.<org.apache.maven.model.Build: java.lang.String sourceDirectory>;

        return $stack1;
    }

    public java.lang.String getTestOutputDirectory()
    {
        Build this;
        java.lang.String $stack1;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = $r0.<org.apache.maven.model.Build: java.lang.String testOutputDirectory>;

        return $stack1;
    }

    public java.lang.String getTestSourceDirectory()
    {
        Build this;
        java.lang.String $stack1;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = $r0.<org.apache.maven.model.Build: java.lang.String testSourceDirectory>;

        return $stack1;
    }

    public void removeExtension(org.apache.maven.model.Extension)
    {
        Build this;
        java.util.List $stack2;
        org.apache.maven.model.Extension extension;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        extension := @parameter0: org.apache.maven.model.Extension;

        $r0 = (org.apache.maven.model.Build) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(extension);

        return;
    }

    public void setExtensions(java.util.List)
    {
        Build this;
        java.util.List extensions;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        extensions := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.Build) this;

        $r0.<org.apache.maven.model.Build: java.util.List extensions> = extensions;

        return;
    }

    public void setOutputDirectory(java.lang.String)
    {
        Build this;
        java.lang.String outputDirectory;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        outputDirectory := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.Build) this;

        $r0.<org.apache.maven.model.Build: java.lang.String outputDirectory> = outputDirectory;

        return;
    }

    public void setScriptSourceDirectory(java.lang.String)
    {
        Build this;
        java.lang.String scriptSourceDirectory;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        scriptSourceDirectory := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.Build) this;

        $r0.<org.apache.maven.model.Build: java.lang.String scriptSourceDirectory> = scriptSourceDirectory;

        return;
    }

    public void setSourceDirectory(java.lang.String)
    {
        Build this;
        java.lang.String sourceDirectory;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        sourceDirectory := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.Build) this;

        $r0.<org.apache.maven.model.Build: java.lang.String sourceDirectory> = sourceDirectory;

        return;
    }

    public void setTestOutputDirectory(java.lang.String)
    {
        Build this;
        java.lang.String testOutputDirectory;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        testOutputDirectory := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.Build) this;

        $r0.<org.apache.maven.model.Build: java.lang.String testOutputDirectory> = testOutputDirectory;

        return;
    }

    public void setTestSourceDirectory(java.lang.String)
    {
        Build this;
        java.lang.String testSourceDirectory;
        org.apache.maven.model.Build $r0;

        this := @this: Build;

        testSourceDirectory := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.Build) this;

        $r0.<org.apache.maven.model.Build: java.lang.String testSourceDirectory> = testSourceDirectory;

        return;
    }

    public volatile org.apache.maven.model.BuildBase clone()
    {
        Build this;
        org.apache.maven.model.Build $stack1, $r0;
        org.apache.maven.model.BuildBase $r1;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.Build: org.apache.maven.model.Build clone()>();

        $r1 = (org.apache.maven.model.BuildBase) $stack1;

        return $r1;
    }

    public volatile org.apache.maven.model.PluginConfiguration clone()
    {
        Build this;
        org.apache.maven.model.Build $stack1, $r0;
        org.apache.maven.model.PluginConfiguration $r1;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.Build: org.apache.maven.model.Build clone()>();

        $r1 = (org.apache.maven.model.PluginConfiguration) $stack1;

        return $r1;
    }

    public volatile org.apache.maven.model.PluginContainer clone()
    {
        Build this;
        org.apache.maven.model.Build $stack1, $r0;
        org.apache.maven.model.PluginContainer $r1;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.Build: org.apache.maven.model.Build clone()>();

        $r1 = (org.apache.maven.model.PluginContainer) $stack1;

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        Build this;
        org.apache.maven.model.Build $stack1, $r0;

        this := @this: Build;

        $r0 = (org.apache.maven.model.Build) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.Build: org.apache.maven.model.Build clone()>();

        return $stack1;
    }
}
