public class BuildBase extends org.apache.maven.model.PluginConfiguration implements java.io.Serializable, java.lang.Cloneable
{
    private java.lang.String defaultGoal;
    private java.util.List resources;
    private java.util.List testResources;
    private java.lang.String directory;
    private java.lang.String finalName;
    private java.util.List filters;

    public void <init>()
    {
        BuildBase this;

        this := @this: BuildBase;

        specialinvoke this.<org.apache.maven.model.PluginConfiguration: void <init>()>();

        return;
    }

    public void addFilter(java.lang.String)
    {
        BuildBase this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(string);

        return;
    }

    public void addResource(org.apache.maven.model.Resource)
    {
        BuildBase this;
        java.util.List $stack2;
        org.apache.maven.model.Resource resource;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        resource := @parameter0: org.apache.maven.model.Resource;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(resource);

        return;
    }

    public void addTestResource(org.apache.maven.model.Resource)
    {
        BuildBase this;
        java.util.List $stack2;
        org.apache.maven.model.Resource resource;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        resource := @parameter0: org.apache.maven.model.Resource;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(resource);

        return;
    }

    public org.apache.maven.model.BuildBase clone()
    {
        BuildBase this;
        org.apache.maven.model.PluginConfiguration $stack4;
        java.util.List $stack5, $stack6, $stack7, $stack9, $stack10, $stack14, $stack19, $stack24, $stack29;
        boolean $stack16, $stack26;
        java.lang.Object $stack18, $stack28;
        org.apache.maven.model.Resource $stack20, $stack30, item;
        java.lang.Exception $stack33;
        java.lang.Class $stack36;
        java.lang.String $stack37, $stack40;
        java.lang.StringBuilder $stack38, $stack39, $u3;
        java.lang.Throwable $stack41;
        java.lang.RuntimeException $stack42;
        org.apache.maven.model.BuildBase copy, $r0, $r1, $r2, $r3, $r4, $r5;
        java.util.Iterator l2;
        java.util.ArrayList $u0, $u1, $u2;
        java.lang.UnsupportedOperationException $u4;

        this := @this: BuildBase;

     label1:
        $stack4 = specialinvoke this.<org.apache.maven.model.PluginConfiguration: org.apache.maven.model.PluginConfiguration clone()>();

        copy = (org.apache.maven.model.BuildBase) $stack4;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack5 = $r0.<org.apache.maven.model.BuildBase: java.util.List resources>;

        if $stack5 == null goto label3;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.model.BuildBase: java.util.List resources> = $u0;

        $r1 = (org.apache.maven.model.BuildBase) this;

        $stack24 = $r1.<org.apache.maven.model.BuildBase: java.util.List resources>;

        l2 = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack26 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack26 == 0 goto label3;

        $stack28 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.model.Resource) $stack28;

        $stack29 = copy.<org.apache.maven.model.BuildBase: java.util.List resources>;

        $stack30 = virtualinvoke item.<org.apache.maven.model.Resource: org.apache.maven.model.Resource clone()>();

        interfaceinvoke $stack29.<java.util.List: boolean add(java.lang.Object)>($stack30);

        goto label2;

     label3:
        $r2 = (org.apache.maven.model.BuildBase) this;

        $stack6 = $r2.<org.apache.maven.model.BuildBase: java.util.List testResources>;

        if $stack6 == null goto label5;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.model.BuildBase: java.util.List testResources> = $u1;

        $r3 = (org.apache.maven.model.BuildBase) this;

        $stack14 = $r3.<org.apache.maven.model.BuildBase: java.util.List testResources>;

        l2 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack16 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label5;

        $stack18 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.model.Resource) $stack18;

        $stack19 = copy.<org.apache.maven.model.BuildBase: java.util.List testResources>;

        $stack20 = virtualinvoke item.<org.apache.maven.model.Resource: org.apache.maven.model.Resource clone()>();

        interfaceinvoke $stack19.<java.util.List: boolean add(java.lang.Object)>($stack20);

        goto label4;

     label5:
        $r4 = (org.apache.maven.model.BuildBase) this;

        $stack7 = $r4.<org.apache.maven.model.BuildBase: java.util.List filters>;

        if $stack7 == null goto label6;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.model.BuildBase: java.util.List filters> = $u2;

        $stack10 = copy.<org.apache.maven.model.BuildBase: java.util.List filters>;

        $r5 = (org.apache.maven.model.BuildBase) this;

        $stack9 = $r5.<org.apache.maven.model.BuildBase: java.util.List filters>;

        interfaceinvoke $stack10.<java.util.List: boolean addAll(java.util.Collection)>($stack9);

     label6:
        return copy;

     label7:
        $stack33 := @caughtexception;

        $u4 = new java.lang.UnsupportedOperationException;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack36 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack37 = virtualinvoke $stack36.<java.lang.Class: java.lang.String getName()>();

        $stack38 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support clone()");

        $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack40);

        $stack41 = virtualinvoke $u4.<java.lang.UnsupportedOperationException: java.lang.Throwable initCause(java.lang.Throwable)>($stack33);

        $stack42 = (java.lang.RuntimeException) $stack41;

        throw $stack42;

        catch java.lang.Exception from label1 to label6 with label7;
    }

    public java.lang.String getDefaultGoal()
    {
        BuildBase this;
        java.lang.String $stack1;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack1 = $r0.<org.apache.maven.model.BuildBase: java.lang.String defaultGoal>;

        return $stack1;
    }

    public java.lang.String getDirectory()
    {
        BuildBase this;
        java.lang.String $stack1;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack1 = $r0.<org.apache.maven.model.BuildBase: java.lang.String directory>;

        return $stack1;
    }

    public java.util.List getFilters()
    {
        BuildBase this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.model.BuildBase $r0, $r1, $r2;

        this := @this: BuildBase;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack1 = $r0.<org.apache.maven.model.BuildBase: java.util.List filters>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.model.BuildBase) this;

        $r1.<org.apache.maven.model.BuildBase: java.util.List filters> = $u0;

     label1:
        $r2 = (org.apache.maven.model.BuildBase) this;

        $stack2 = $r2.<org.apache.maven.model.BuildBase: java.util.List filters>;

        return $stack2;
    }

    public java.lang.String getFinalName()
    {
        BuildBase this;
        java.lang.String $stack1;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack1 = $r0.<org.apache.maven.model.BuildBase: java.lang.String finalName>;

        return $stack1;
    }

    public java.util.List getResources()
    {
        BuildBase this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.model.BuildBase $r0, $r1, $r2;

        this := @this: BuildBase;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack1 = $r0.<org.apache.maven.model.BuildBase: java.util.List resources>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.model.BuildBase) this;

        $r1.<org.apache.maven.model.BuildBase: java.util.List resources> = $u0;

     label1:
        $r2 = (org.apache.maven.model.BuildBase) this;

        $stack2 = $r2.<org.apache.maven.model.BuildBase: java.util.List resources>;

        return $stack2;
    }

    public java.util.List getTestResources()
    {
        BuildBase this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.model.BuildBase $r0, $r1, $r2;

        this := @this: BuildBase;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack1 = $r0.<org.apache.maven.model.BuildBase: java.util.List testResources>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.model.BuildBase) this;

        $r1.<org.apache.maven.model.BuildBase: java.util.List testResources> = $u0;

     label1:
        $r2 = (org.apache.maven.model.BuildBase) this;

        $stack2 = $r2.<org.apache.maven.model.BuildBase: java.util.List testResources>;

        return $stack2;
    }

    public void removeFilter(java.lang.String)
    {
        BuildBase this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(string);

        return;
    }

    public void removeResource(org.apache.maven.model.Resource)
    {
        BuildBase this;
        java.util.List $stack2;
        org.apache.maven.model.Resource resource;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        resource := @parameter0: org.apache.maven.model.Resource;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(resource);

        return;
    }

    public void removeTestResource(org.apache.maven.model.Resource)
    {
        BuildBase this;
        java.util.List $stack2;
        org.apache.maven.model.Resource resource;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        resource := @parameter0: org.apache.maven.model.Resource;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(resource);

        return;
    }

    public void setDefaultGoal(java.lang.String)
    {
        BuildBase this;
        java.lang.String defaultGoal;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        defaultGoal := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $r0.<org.apache.maven.model.BuildBase: java.lang.String defaultGoal> = defaultGoal;

        return;
    }

    public void setDirectory(java.lang.String)
    {
        BuildBase this;
        java.lang.String directory;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        directory := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $r0.<org.apache.maven.model.BuildBase: java.lang.String directory> = directory;

        return;
    }

    public void setFilters(java.util.List)
    {
        BuildBase this;
        java.util.List filters;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        filters := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $r0.<org.apache.maven.model.BuildBase: java.util.List filters> = filters;

        return;
    }

    public void setFinalName(java.lang.String)
    {
        BuildBase this;
        java.lang.String finalName;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        finalName := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $r0.<org.apache.maven.model.BuildBase: java.lang.String finalName> = finalName;

        return;
    }

    public void setResources(java.util.List)
    {
        BuildBase this;
        java.util.List resources;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        resources := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $r0.<org.apache.maven.model.BuildBase: java.util.List resources> = resources;

        return;
    }

    public void setTestResources(java.util.List)
    {
        BuildBase this;
        java.util.List testResources;
        org.apache.maven.model.BuildBase $r0;

        this := @this: BuildBase;

        testResources := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $r0.<org.apache.maven.model.BuildBase: java.util.List testResources> = testResources;

        return;
    }

    public volatile org.apache.maven.model.PluginConfiguration clone()
    {
        BuildBase this;
        org.apache.maven.model.BuildBase $stack1, $r0;
        org.apache.maven.model.PluginConfiguration $r1;

        this := @this: BuildBase;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.BuildBase: org.apache.maven.model.BuildBase clone()>();

        $r1 = (org.apache.maven.model.PluginConfiguration) $stack1;

        return $r1;
    }

    public volatile org.apache.maven.model.PluginContainer clone()
    {
        BuildBase this;
        org.apache.maven.model.BuildBase $stack1, $r0;
        org.apache.maven.model.PluginContainer $r1;

        this := @this: BuildBase;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.BuildBase: org.apache.maven.model.BuildBase clone()>();

        $r1 = (org.apache.maven.model.PluginContainer) $stack1;

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        BuildBase this;
        org.apache.maven.model.BuildBase $stack1, $r0;

        this := @this: BuildBase;

        $r0 = (org.apache.maven.model.BuildBase) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.BuildBase: org.apache.maven.model.BuildBase clone()>();

        return $stack1;
    }
}
