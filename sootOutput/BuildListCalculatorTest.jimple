public class BuildListCalculatorTest extends java.lang.Object
{

    public void <init>()
    {
        BuildListCalculatorTest this;

        this := @this: BuildListCalculatorTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testCalculateProjectBuilds() throws java.lang.Exception
    {
        org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator lifecycleTaskSegmentCalculator;
        org.apache.maven.lifecycle.internal.BuildListCalculator $stack9;
        org.apache.maven.execution.MavenSession session;
        java.util.List taskSegments;
        org.apache.maven.lifecycle.internal.ProjectBuildList buildList, segments;
        java.lang.Object $stack13;
        org.apache.maven.lifecycle.internal.TaskSegment $stack14;
        int $stack17, $stack19;
        org.apache.maven.lifecycle.internal.ProjectSegment build;
        BuildListCalculatorTest this;

        this := @this: BuildListCalculatorTest;

        lifecycleTaskSegmentCalculator = staticinvoke <org.apache.maven.lifecycle.internal.BuildListCalculatorTest: org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator getTaskSegmentCalculator()>();

        $stack9 = new org.apache.maven.lifecycle.internal.BuildListCalculator;

        specialinvoke $stack9.<org.apache.maven.lifecycle.internal.BuildListCalculator: void <init>()>();

        session = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.execution.MavenSession getMavenSession()>();

        taskSegments = interfaceinvoke lifecycleTaskSegmentCalculator.<org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator: java.util.List calculateTaskSegments(org.apache.maven.execution.MavenSession)>(session);

        buildList = virtualinvoke $stack9.<org.apache.maven.lifecycle.internal.BuildListCalculator: org.apache.maven.lifecycle.internal.ProjectBuildList calculateProjectBuilds(org.apache.maven.execution.MavenSession,java.util.List)>(session, taskSegments);

        $stack13 = interfaceinvoke taskSegments.<java.util.List: java.lang.Object get(int)>(0);

        $stack14 = (org.apache.maven.lifecycle.internal.TaskSegment) $stack13;

        segments = virtualinvoke buildList.<org.apache.maven.lifecycle.internal.ProjectBuildList: org.apache.maven.lifecycle.internal.ProjectBuildList getByTaskSegment(org.apache.maven.lifecycle.internal.TaskSegment)>($stack14);

        $stack17 = interfaceinvoke taskSegments.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(3, $stack17, "Stub data contains 3 segments");

        $stack19 = virtualinvoke segments.<org.apache.maven.lifecycle.internal.ProjectBuildList: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(6, $stack19, "Stub data contains 6 items");

        build = virtualinvoke segments.<org.apache.maven.lifecycle.internal.ProjectBuildList: org.apache.maven.lifecycle.internal.ProjectSegment get(int)>(0);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(build);

        return;
    }

    private static org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator getTaskSegmentCalculator()
    {
        org.apache.maven.lifecycle.internal.stub.LifecycleTaskSegmentCalculatorStub $u0;
        org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator $r0;

        $u0 = new org.apache.maven.lifecycle.internal.stub.LifecycleTaskSegmentCalculatorStub;

        specialinvoke $u0.<org.apache.maven.lifecycle.internal.stub.LifecycleTaskSegmentCalculatorStub: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator) $u0;

        return $r0;
    }
}
