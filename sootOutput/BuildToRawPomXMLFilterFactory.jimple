public class BuildToRawPomXMLFilterFactory extends java.lang.Object
{
    private final boolean consume;
    private final java.util.function.Consumer lexicalHandlerConsumer;

    public void <init>(java.util.function.Consumer)
    {
        BuildToRawPomXMLFilterFactory this;
        java.util.function.Consumer lexicalHandlerConsumer;
        org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory $r0;

        this := @this: BuildToRawPomXMLFilterFactory;

        lexicalHandlerConsumer := @parameter0: java.util.function.Consumer;

        $r0 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        specialinvoke $r0.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: void <init>(java.util.function.Consumer,boolean)>(lexicalHandlerConsumer, 0);

        return;
    }

    public void <init>(java.util.function.Consumer, boolean)
    {
        BuildToRawPomXMLFilterFactory this;
        java.util.function.Consumer lexicalHandlerConsumer;
        boolean consume;
        org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory $r0, $r1;

        this := @this: BuildToRawPomXMLFilterFactory;

        lexicalHandlerConsumer := @parameter0: java.util.function.Consumer;

        consume := @parameter1: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $r0.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.function.Consumer lexicalHandlerConsumer> = lexicalHandlerConsumer;

        $r1 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $r1.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: boolean consume> = consume;

        return;
    }

    public final org.apache.maven.model.transform.BuildToRawPomXMLFilter get(java.nio.file.Path) throws org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException, javax.xml.transform.TransformerConfigurationException
    {
        BuildToRawPomXMLFilterFactory this;
        org.xml.sax.XMLReader $stack5, $r6, $r11, $r18;
        java.util.function.Consumer $stack6, $stack13, $stack16, $stack19, $stack37;
        java.util.function.BiFunction $stack7, $stack35;
        java.util.function.Function $stack8, $stack24;
        boolean $stack10, $stack20;
        java.util.Optional $stack11, $stack14, $stack17;
        java.nio.file.Path projectFile, $stack25;
        java.lang.Object parent;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $u0, $r1, $r7, $r12, $r19, $r21;
        org.apache.maven.model.transform.ReactorDependencyXMLFilter $u1;
        org.apache.maven.model.transform.ParentXMLFilter $u2;
        org.apache.maven.model.transform.CiFriendlyXMLFilter $u3;
        org.apache.maven.model.transform.BuildToRawPomXMLFilter $u4;
        org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory $r0, $r2, $r3, $r4, $r5, $r9, $r10, $r14, $r15, $r16, $r17;
        org.xml.sax.ext.LexicalHandler $r8, $r13, $r20;

        this := @this: BuildToRawPomXMLFilterFactory;

        projectFile := @parameter0: java.nio.file.Path;

        $u0 = new org.apache.maven.model.transform.sax.AbstractSAXFilter;

        specialinvoke $u0.<org.apache.maven.model.transform.sax.AbstractSAXFilter: void <init>()>();

        parent = $u0;

        $r0 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack5 = specialinvoke $r0.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: org.xml.sax.XMLReader getXMLReader()>();

        $r1 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) $u0;

        virtualinvoke $r1.<org.apache.maven.model.transform.sax.AbstractSAXFilter: void setParent(org.xml.sax.XMLReader)>($stack5);

        $r2 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack6 = $r2.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.function.Consumer lexicalHandlerConsumer>;

        if $stack6 == null goto label1;

        $r3 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack37 = $r3.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.function.Consumer lexicalHandlerConsumer>;

        interfaceinvoke $stack37.<java.util.function.Consumer: void accept(java.lang.Object)>($u0);

     label1:
        $r4 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack7 = virtualinvoke $r4.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.function.BiFunction getDependencyKeyToVersionMapper()>();

        if $stack7 == null goto label2;

        $u1 = new org.apache.maven.model.transform.ReactorDependencyXMLFilter;

        $r5 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack35 = virtualinvoke $r5.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.function.BiFunction getDependencyKeyToVersionMapper()>();

        specialinvoke $u1.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: void <init>(java.util.function.BiFunction)>($stack35);

        $r6 = (org.xml.sax.XMLReader) $u0;

        virtualinvoke $u1.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: void setParent(org.xml.sax.XMLReader)>($r6);

        $r7 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) $u0;

        $r8 = (org.xml.sax.ext.LexicalHandler) $u1;

        virtualinvoke $r7.<org.apache.maven.model.transform.sax.AbstractSAXFilter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>($r8);

        parent = $u1;

     label2:
        $r9 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack8 = virtualinvoke $r9.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.function.Function getRelativePathMapper()>();

        if $stack8 == null goto label3;

        $u2 = new org.apache.maven.model.transform.ParentXMLFilter;

        $r10 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack24 = virtualinvoke $r10.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.function.Function getRelativePathMapper()>();

        specialinvoke $u2.<org.apache.maven.model.transform.ParentXMLFilter: void <init>(java.util.function.Function)>($stack24);

        $stack25 = interfaceinvoke projectFile.<java.nio.file.Path: java.nio.file.Path getParent()>();

        virtualinvoke $u2.<org.apache.maven.model.transform.ParentXMLFilter: void setProjectPath(java.nio.file.Path)>($stack25);

        $r11 = (org.xml.sax.XMLReader) parent;

        virtualinvoke $u2.<org.apache.maven.model.transform.ParentXMLFilter: void setParent(org.xml.sax.XMLReader)>($r11);

        $r12 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) parent;

        $r13 = (org.xml.sax.ext.LexicalHandler) $u2;

        virtualinvoke $r12.<org.apache.maven.model.transform.sax.AbstractSAXFilter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>($r13);

        parent = $u2;

     label3:
        $u3 = new org.apache.maven.model.transform.CiFriendlyXMLFilter;

        $r14 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack10 = $r14.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: boolean consume>;

        specialinvoke $u3.<org.apache.maven.model.transform.CiFriendlyXMLFilter: void <init>(boolean)>($stack10);

        $r15 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack11 = virtualinvoke $r15.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.Optional getChangelist()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($u3);

        $stack13 = staticinvoke <BuildToRawPomXMLFilterFactory$setChangelist__310: java.util.function.Consumer bootstrap$(org.apache.maven.model.transform.CiFriendlyXMLFilter)>($u3);

        virtualinvoke $stack11.<java.util.Optional: void ifPresent(java.util.function.Consumer)>($stack13);

        $r16 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack14 = virtualinvoke $r16.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.Optional getRevision()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($u3);

        $stack16 = staticinvoke <BuildToRawPomXMLFilterFactory$setRevision__311: java.util.function.Consumer bootstrap$(org.apache.maven.model.transform.CiFriendlyXMLFilter)>($u3);

        virtualinvoke $stack14.<java.util.Optional: void ifPresent(java.util.function.Consumer)>($stack16);

        $r17 = (org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory) this;

        $stack17 = virtualinvoke $r17.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: java.util.Optional getSha1()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($u3);

        $stack19 = staticinvoke <BuildToRawPomXMLFilterFactory$setSha1__312: java.util.function.Consumer bootstrap$(org.apache.maven.model.transform.CiFriendlyXMLFilter)>($u3);

        virtualinvoke $stack17.<java.util.Optional: void ifPresent(java.util.function.Consumer)>($stack19);

        $stack20 = virtualinvoke $u3.<org.apache.maven.model.transform.CiFriendlyXMLFilter: boolean isSet()>();

        if $stack20 == 0 goto label4;

        $r18 = (org.xml.sax.XMLReader) parent;

        virtualinvoke $u3.<org.apache.maven.model.transform.CiFriendlyXMLFilter: void setParent(org.xml.sax.XMLReader)>($r18);

        $r19 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) parent;

        $r20 = (org.xml.sax.ext.LexicalHandler) $u3;

        virtualinvoke $r19.<org.apache.maven.model.transform.sax.AbstractSAXFilter: void setLexicalHandler(org.xml.sax.ext.LexicalHandler)>($r20);

        parent = $u3;

     label4:
        $u4 = new org.apache.maven.model.transform.BuildToRawPomXMLFilter;

        $r21 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) parent;

        specialinvoke $u4.<org.apache.maven.model.transform.BuildToRawPomXMLFilter: void <init>(org.apache.maven.model.transform.sax.AbstractSAXFilter)>($r21);

        return $u4;
    }

    private org.xml.sax.XMLReader getXMLReader() throws org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        org.xml.sax.XMLReader xmlReader;
        BuildToRawPomXMLFilterFactory this;

        this := @this: BuildToRawPomXMLFilterFactory;

        xmlReader = staticinvoke <org.apache.maven.model.transform.sax.Factories: org.xml.sax.XMLReader newXMLReader()>();

        interfaceinvoke xmlReader.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 1);

        return xmlReader;
    }

    protected java.util.function.Function getRelativePathMapper()
    {
        BuildToRawPomXMLFilterFactory this;

        this := @this: BuildToRawPomXMLFilterFactory;

        return null;
    }

    protected java.util.function.BiFunction getDependencyKeyToVersionMapper()
    {
        BuildToRawPomXMLFilterFactory this;

        this := @this: BuildToRawPomXMLFilterFactory;

        return null;
    }

    protected java.util.Optional getChangelist()
    {
        java.util.Optional $stack1;
        BuildToRawPomXMLFilterFactory this;

        this := @this: BuildToRawPomXMLFilterFactory;

        $stack1 = staticinvoke <java.util.Optional: java.util.Optional empty()>();

        return $stack1;
    }

    protected java.util.Optional getRevision()
    {
        java.util.Optional $stack1;
        BuildToRawPomXMLFilterFactory this;

        this := @this: BuildToRawPomXMLFilterFactory;

        $stack1 = staticinvoke <java.util.Optional: java.util.Optional empty()>();

        return $stack1;
    }

    protected java.util.Optional getSha1()
    {
        java.util.Optional $stack1;
        BuildToRawPomXMLFilterFactory this;

        this := @this: BuildToRawPomXMLFilterFactory;

        $stack1 = staticinvoke <java.util.Optional: java.util.Optional empty()>();

        return $stack1;
    }
}
