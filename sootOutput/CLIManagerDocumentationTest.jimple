public class CLIManagerDocumentationTest extends java.lang.Object
{
    private static final java.lang.String LS;

    public void <init>()
    {
        CLIManagerDocumentationTest this;

        this := @this: CLIManagerDocumentationTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getOptionsAsHtml()
    {
        java.lang.StringBuilder $stack5, $stack14, $stack15, $stack46, $stack48;
        org.apache.maven.cli.CLIManagerDocumentationTest$CLIManagerExtension $stack7;
        java.util.Collection $stack8;
        java.util.Iterator l3;
        boolean $stack10, $stack29, $stack37, a, $stack69;
        java.lang.String $stack12, $stack17, $stack20, $stack23, $stack26, $stack47, $stack31, $stack34;
        java.lang.Object $stack13;
        org.apache.commons.cli.Option option;
        CLIManagerDocumentationTest this;
        char $stack50;

        this := @this: CLIManagerDocumentationTest;

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>(int)>(512);

        a = 1;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<table border=\'1\' class=\'zebra-striped\'><tr class=\'a\'><th><b>Options</b></th><th><b>Description</b></th></tr>");

        $stack7 = new org.apache.maven.cli.CLIManagerDocumentationTest$CLIManagerExtension;

        specialinvoke $stack7.<org.apache.maven.cli.CLIManagerDocumentationTest$CLIManagerExtension: void <init>(org.apache.maven.cli.CLIManagerDocumentationTest$1)>(null);

        $stack8 = virtualinvoke $stack7.<org.apache.maven.cli.CLIManagerDocumentationTest$CLIManagerExtension: java.util.Collection getOptions()>();

        l3 = interfaceinvoke $stack8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label8;

        $stack13 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        option = (org.apache.commons.cli.Option) $stack13;

        if a != 0 goto label2;

        $stack69 = 1;

        goto label3;

     label2:
        $stack69 = 0;

     label3:
        a = $stack69;

        $stack14 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<tr class=\'");

        if $stack69 == 0 goto label4;

        $stack50 = 97;

        goto label5;

     label4:
        $stack50 = 98;

     label5:
        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack50);

        virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'><td><code>-<a name=\'");

        $stack17 = virtualinvoke option.<org.apache.commons.cli.Option: java.lang.String getOpt()>();

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'>");

        $stack20 = virtualinvoke option.<org.apache.commons.cli.Option: java.lang.String getOpt()>();

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a>,--<a name=\'");

        $stack23 = virtualinvoke option.<org.apache.commons.cli.Option: java.lang.String getLongOpt()>();

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'>");

        $stack26 = virtualinvoke option.<org.apache.commons.cli.Option: java.lang.String getLongOpt()>();

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a>");

        $stack29 = virtualinvoke option.<org.apache.commons.cli.Option: boolean hasArg()>();

        if $stack29 == 0 goto label7;

        $stack37 = virtualinvoke option.<org.apache.commons.cli.Option: boolean hasArgName()>();

        if $stack37 == 0 goto label6;

        $stack46 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" &lt;");

        $stack47 = virtualinvoke option.<org.apache.commons.cli.Option: java.lang.String getArgName()>();

        $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47);

        virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&gt;");

        goto label7;

     label6:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label7:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</code></td><td>");

        $stack31 = virtualinvoke option.<org.apache.commons.cli.Option: java.lang.String getDescription()>();

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31);

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td></tr>");

        $stack34 = <org.apache.maven.cli.CLIManagerDocumentationTest: java.lang.String LS>;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        goto label1;

     label8:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</table>");

        $stack12 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack12;
    }

    public void testOptionsAsHtml() throws java.io.IOException
    {
        CLIManagerDocumentationTest this;
        java.lang.String $stack4;
        java.io.File $u0;
        org.apache.maven.cli.CLIManagerDocumentationTest $r0;

        this := @this: CLIManagerDocumentationTest;

        $u0 = new java.io.File;

        specialinvoke $u0.<java.io.File: void <init>(java.lang.String)>("target/test-classes/options.html");

        $r0 = (org.apache.maven.cli.CLIManagerDocumentationTest) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.cli.CLIManagerDocumentationTest: java.lang.String getOptionsAsHtml()>();

        staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.io.File,java.lang.String,java.lang.String)>($u0, "UTF-8", $stack4);

        return;
    }

    static void <clinit>()
    {
        java.lang.String $stack0;

        $stack0 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        <org.apache.maven.cli.CLIManagerDocumentationTest: java.lang.String LS> = $stack0;

        return;
    }
}
