public class CallWriter extends java.lang.Object
{
    public static org.ooc.frontend.model.FunctionCall bypassPrelude;

    public void <init>()
    {
        CallWriter this;

        this := @this: CallWriter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void write(org.ooc.frontend.model.FunctionCall, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionCall functionCall;
        org.ooc.frontend.model.FunctionDecl impl;
        org.ooc.backend.cdirty.CGenerator cgen;
        java.lang.String $stack6, $stack16, $stack27, $stack33, $stack37, $stack52, $stack68, $stack69;
        boolean $stack7, $stack8, $stack9, $stack30, $stack46, $stack49, $stack50;
        org.ooc.backend.cdirty.AwesomeWriter $stack10, $stack15, $stack25, $stack31, $stack35, $stack36, $stack39, $stack47, $stack51, $stack54, $stack11, $stack13;
        org.ooc.frontend.model.TypeDecl $stack26, $stack29;
        int $stack34, $stack43, $stack65, $stack67;
        org.ooc.frontend.model.NodeList $stack42, $stack44, $stack64, $stack66;
        org.ooc.frontend.model.Node $stack45, $r0, $r2;
        org.ooc.frontend.model.Expression arg;
        org.ooc.frontend.model.VariableAccess varAcc;
        org.ooc.frontend.model.TypeAccess $stack56;
        org.ooc.frontend.model.Type $stack57;
        org.ooc.frontend.model.Module $stack61, $stack63;
        org.ooc.middle.OocCompilationError $u0, $u1;
        java.lang.Throwable $r1, $r3;
        org.ooc.frontend.Visitor $r4, $r5;
        java.lang.Appendable $r6;

        functionCall := @parameter0: org.ooc.frontend.model.FunctionCall;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        impl = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl getImpl()>();

        staticinvoke <org.ooc.backend.cdirty.CallWriter: void writePrelude(org.ooc.backend.cdirty.CGenerator,org.ooc.frontend.model.FunctionDecl,org.ooc.frontend.model.FunctionCall)>(cgen, impl, functionCall);

        $stack6 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: java.lang.String getName()>();

        $stack7 = virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>("sizeof");

        if $stack7 == 0 goto label08;

        $stack42 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        $stack43 = virtualinvoke $stack42.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack43 == 1 goto label03;

        $u0 = new org.ooc.middle.OocCompilationError;

        $stack63 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.model.Module module>;

        $stack64 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        $stack65 = virtualinvoke $stack64.<org.ooc.frontend.model.NodeList: int size()>();

        $stack66 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        $stack67 = virtualinvoke $stack66.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack67 <= 1 goto label01;

        $stack69 = " is too many|";

        goto label02;

     label01:
        $stack69 = " isn\'t enough|";

     label02:
        $stack68 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,java.lang.String)>($stack65, $stack69) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("sizeof needs exactly one argument! \u0001\u0001");

        $r0 = (org.ooc.frontend.model.Node) functionCall;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.Module,java.lang.String)>($r0, $stack63, $stack68);

        $r1 = (java.lang.Throwable) $u0;

        throw $r1;

     label03:
        $stack44 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        $stack45 = virtualinvoke $stack44.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node getFirst()>();

        arg = (org.ooc.frontend.model.Expression) $stack45;

        $stack46 = arg instanceof org.ooc.frontend.model.VariableAccess;

        if $stack46 != 0 goto label04;

        $u1 = new org.ooc.middle.OocCompilationError;

        $stack61 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.model.Module module>;

        $r2 = (org.ooc.frontend.model.Node) arg;

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.Module,java.lang.String)>($r2, $stack61, "You can only call sizeof() on a type! What are you doing?");

        $r3 = (java.lang.Throwable) $u1;

        throw $r3;

     label04:
        $stack47 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack47.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("sizeof(");

        $stack49 = arg instanceof org.ooc.frontend.model.MemberAccess;

        if $stack49 == 0 goto label05;

        $r4 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke arg.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r4);

        goto label07;

     label05:
        $stack50 = arg instanceof org.ooc.frontend.model.TypeAccess;

        if $stack50 == 0 goto label06;

        $stack56 = (org.ooc.frontend.model.TypeAccess) arg;

        $stack57 = virtualinvoke $stack56.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type getType()>();

        $r5 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack57.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r5);

        goto label07;

     label06:
        varAcc = (org.ooc.frontend.model.VariableAccess) arg;

        $stack51 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack52 = virtualinvoke varAcc.<org.ooc.frontend.model.VariableAccess: java.lang.String getUnderName()>();

        virtualinvoke $stack51.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack52);

     label07:
        $stack54 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack54.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(")");

        return;

     label08:
        $stack8 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: boolean isConstructorCall()>();

        if $stack8 == 0 goto label11;

        $stack25 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack26 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl getTypeDecl()>();

        $stack27 = virtualinvoke $stack26.<org.ooc.frontend.model.TypeDecl: java.lang.String getUnderName()>();

        virtualinvoke $stack25.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack27);

        $stack29 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl getTypeDecl()>();

        $stack30 = $stack29 instanceof org.ooc.frontend.model.ClassDecl;

        if $stack30 == 0 goto label09;

        $stack39 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack39.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("_init");

        goto label10;

     label09:
        $stack31 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack31.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("_new");

     label10:
        $stack33 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getSuffix()>();

        $stack34 = virtualinvoke $stack33.<java.lang.String: int length()>();

        if $stack34 <= 0 goto label13;

        $stack35 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack36 = virtualinvoke $stack35.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(95);

        $stack37 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getSuffix()>();

        virtualinvoke $stack36.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack37);

        goto label13;

     label11:
        $stack9 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: boolean isFromPointer()>();

        if $stack9 == 0 goto label12;

        $stack15 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack16 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: java.lang.String getFullName()>();

        virtualinvoke $stack15.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack16);

        goto label13;

     label12:
        $stack10 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $r6 = (java.lang.Appendable) $stack10;

        virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: void writeFullName(java.lang.Appendable)>($r6);

     label13:
        $stack11 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack11.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(40);

        staticinvoke <org.ooc.backend.cdirty.CallWriter: void writeCallArgs(org.ooc.frontend.model.FunctionCall,org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(functionCall, impl, cgen);

        $stack13 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack13.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(41);

        return;
    }

    private static void writePrelude(org.ooc.backend.cdirty.CGenerator, org.ooc.frontend.model.FunctionDecl, org.ooc.frontend.model.FunctionCall) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionCall $stack3, call, $stack17;
        org.ooc.frontend.model.FunctionDecl impl;
        org.ooc.frontend.model.Type $stack4, $stack7, $stack11;
        boolean $stack5, $stack6, $stack8;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack9, $stack12;
        org.ooc.frontend.model.Module $stack15;
        java.lang.String $stack16;
        org.ooc.middle.OocCompilationError $u0;
        org.ooc.frontend.model.Node $r0;
        java.lang.Throwable $r1;
        org.ooc.frontend.Visitor $r2;

        cgen := @parameter0: org.ooc.backend.cdirty.CGenerator;

        impl := @parameter1: org.ooc.frontend.model.FunctionDecl;

        call := @parameter2: org.ooc.frontend.model.FunctionCall;

        $stack3 = <org.ooc.backend.cdirty.CallWriter: org.ooc.frontend.model.FunctionCall bypassPrelude>;

        if $stack3 == null goto label1;

        $stack17 = <org.ooc.backend.cdirty.CallWriter: org.ooc.frontend.model.FunctionCall bypassPrelude>;

        if call != $stack17 goto label1;

        <org.ooc.backend.cdirty.CallWriter: org.ooc.frontend.model.FunctionCall bypassPrelude> = null;

        return;

     label1:
        $stack4 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack5 = virtualinvoke $stack4.<org.ooc.frontend.model.Type: boolean isVoid()>();

        if $stack5 == 0 goto label2;

        $u0 = new org.ooc.middle.OocCompilationError;

        $stack15 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.model.Module module>;

        $stack16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.FunctionCall)>(call) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to use void function \u0001 as an expression!");

        $r0 = (org.ooc.frontend.model.Node) call;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.Module,java.lang.String)>($r0, $stack15, $stack16);

        $r1 = (java.lang.Throwable) $u0;

        throw $r1;

     label2:
        $stack6 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: boolean isExternWithName()>();

        if $stack6 == 0 goto label3;

        $stack7 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack8 = virtualinvoke $stack7.<org.ooc.frontend.model.Type: boolean isVoid()>();

        if $stack8 != 0 goto label3;

        $stack9 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack9.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(40);

        $stack11 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $r2 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack11.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r2);

        $stack12 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack12.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(") ");

     label3:
        return;
    }

    public static void writeCallArgs(org.ooc.frontend.model.FunctionCall, org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionCall functionCall;
        org.ooc.frontend.model.FunctionDecl impl;
        org.ooc.backend.cdirty.CGenerator cgen;

        functionCall := @parameter0: org.ooc.frontend.model.FunctionCall;

        impl := @parameter1: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter2: org.ooc.backend.cdirty.CGenerator;

        staticinvoke <org.ooc.backend.cdirty.CallWriter: void writeCallArgs(org.ooc.frontend.model.FunctionCall,org.ooc.frontend.model.FunctionDecl,boolean,org.ooc.backend.cdirty.CGenerator)>(functionCall, impl, 1, cgen);

        return;
    }

    public static void writeCallArgs(org.ooc.frontend.model.FunctionCall, org.ooc.frontend.model.FunctionDecl, boolean, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionCall functionCall;
        org.ooc.frontend.model.NodeList callArgs;
        boolean isFirstParam, $stack11, $stack15, $stack29, isFirst, $stack12, $stack13, $stack16;
        org.ooc.frontend.model.FunctionDecl $stack9, impl;
        org.ooc.frontend.model.Type $stack10, $stack34;
        org.ooc.backend.cdirty.CGenerator cgen;
        java.util.Iterator iter;
        java.lang.Object $stack17;
        org.ooc.frontend.model.Expression $stack18, $stack39, $stack42;
        org.ooc.backend.cdirty.AwesomeWriter $stack20, $stack31, $stack35, $stack37, $stack40, $stack44, $stack46;
        org.ooc.frontend.model.TypeDecl $stack28, $stack33;
        byte $stack27;
        int argIndex;
        org.ooc.frontend.Visitor $r0, $r1;

        functionCall := @parameter0: org.ooc.frontend.model.FunctionCall;

        impl := @parameter1: org.ooc.frontend.model.FunctionDecl;

        isFirstParam := @parameter2: boolean;

        cgen := @parameter3: org.ooc.backend.cdirty.CGenerator;

        callArgs = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        isFirst = isFirstParam;

        $stack9 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl getImpl()>();

        $stack10 = virtualinvoke $stack9.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack11 = virtualinvoke $stack10.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack11 == 0 goto label03;

        if isFirstParam != 0 goto label01;

        $stack46 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack46.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(", ");

     label01:
        isFirst = 0;

        $stack39 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression getReturnArg()>();

        if $stack39 != null goto label02;

        $stack44 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack44.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("NULL");

        goto label03;

     label02:
        $stack40 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack40.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("(uint8_t*) ");

        $stack42 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression getReturnArg()>();

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack42.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r0);

     label03:
        $stack12 = virtualinvoke functionCall.<org.ooc.frontend.model.FunctionCall: boolean isConstructorCall()>();

        if $stack12 == 0 goto label04;

        $stack28 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl getTypeDecl()>();

        $stack29 = $stack28 instanceof org.ooc.frontend.model.ClassDecl;

        if $stack29 == 0 goto label04;

        isFirst = 0;

        $stack31 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack31.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(40);

        $stack33 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl getTypeDecl()>();

        $stack34 = virtualinvoke $stack33.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getInstanceType()>();

        $r1 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack34.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r1);

        $stack35 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack35.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(41);

        $stack37 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack37.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(" this");

     label04:
        $stack13 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: boolean isGeneric()>();

        if $stack13 != 0 goto label10;

        iter = virtualinvoke callArgs.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

        $stack15 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack15 == 0 goto label05;

        $stack27 = 0;

        goto label06;

     label05:
        $stack27 = -1;

     label06:
        argIndex = $stack27;

     label07:
        $stack16 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label09;

        argIndex = argIndex + 1;

        if isFirst != 0 goto label08;

        $stack20 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack20.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(", ");

     label08:
        isFirst = 0;

        $stack17 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        $stack18 = (org.ooc.frontend.model.Expression) $stack17;

        staticinvoke <org.ooc.backend.cdirty.CallWriter: void writeCallArg(org.ooc.frontend.model.Expression,org.ooc.frontend.model.FunctionDecl,int,org.ooc.backend.cdirty.CGenerator)>($stack18, impl, argIndex, cgen);

        goto label07;

     label09:
        goto label11;

     label10:
        staticinvoke <org.ooc.backend.cdirty.CallWriter: void writeGenericCallArgs(org.ooc.frontend.model.FunctionCall,org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator,boolean)>(functionCall, impl, cgen, isFirst);

     label11:
        return;
    }

    private static void writeCallArg(org.ooc.frontend.model.Expression, org.ooc.frontend.model.FunctionDecl, int, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionDecl impl;
        org.ooc.frontend.model.NodeList implArgs;
        int argIndex, $stack15;
        org.ooc.frontend.model.Expression callArg;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack11, $stack24, $stack27;
        org.ooc.frontend.model.Access $stack13;
        boolean $stack17, $stack23, $stack29, $stack33, shouldCast, $stack30, $stack10;
        org.ooc.frontend.model.Node $stack18;
        org.ooc.frontend.model.Argument arg;
        org.ooc.frontend.model.Type $stack19, implType, $stack21, callType, $stack26;
        java.lang.String $stack32;
        org.ooc.frontend.Visitor $r0, $r1;

        callArg := @parameter0: org.ooc.frontend.model.Expression;

        impl := @parameter1: org.ooc.frontend.model.FunctionDecl;

        argIndex := @parameter2: int;

        cgen := @parameter3: org.ooc.backend.cdirty.CGenerator;

        implArgs = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        shouldCast = 0;

        if argIndex == -1 goto label4;

        $stack15 = virtualinvoke implArgs.<org.ooc.frontend.model.NodeList: int size()>();

        if argIndex >= $stack15 goto label4;

        $stack17 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: boolean isExtern()>();

        if $stack17 != 0 goto label1;

        $stack32 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("init");

        if $stack33 == 0 goto label4;

     label1:
        $stack18 = virtualinvoke implArgs.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(argIndex);

        arg = (org.ooc.frontend.model.Argument) $stack18;

        $stack19 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        implType = virtualinvoke $stack19.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type getGroundType()>();

        $stack21 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        callType = virtualinvoke $stack21.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type getGroundType()>();

        $stack23 = arg instanceof org.ooc.frontend.model.VarArg;

        if $stack23 != 0 goto label2;

        $stack29 = virtualinvoke callType.<org.ooc.frontend.model.Type: boolean equals(java.lang.Object)>(implType);

        if $stack29 != 0 goto label2;

        $stack30 = 1;

        goto label3;

     label2:
        $stack30 = 0;

     label3:
        shouldCast = $stack30;

        if $stack30 == 0 goto label4;

        $stack24 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack24.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("((");

        $stack26 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack26.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r0);

        $stack27 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack27.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(") (");

     label4:
        $stack10 = callArg instanceof org.ooc.frontend.model.VariableAccess;

        if $stack10 == 0 goto label5;

        $stack13 = (org.ooc.frontend.model.Access) callArg;

        staticinvoke <org.ooc.backend.cdirty.AccessWriter: void write(org.ooc.frontend.model.Access,boolean,org.ooc.backend.cdirty.CGenerator)>($stack13, 0, cgen);

        goto label6;

     label5:
        $r1 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke callArg.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r1);

     label6:
        if shouldCast == 0 goto label7;

        $stack11 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack11.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("))");

     label7:
        return;
    }

    public static void writeGenericCallArgs(org.ooc.frontend.model.FunctionCall, org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator, boolean) throws java.io.IOException
    {
        boolean isFirstArg, $stack18, $stack25, $stack46, isFirst, $stack17, $stack21;
        org.ooc.frontend.model.FunctionDecl impl;
        org.ooc.frontend.model.NodeList implArgs, $stack15, $stack19;
        java.util.LinkedHashMap $stack12;
        java.util.Collection $stack13;
        java.util.Iterator implTypeParams, argIndex, expr#11;
        org.ooc.frontend.model.FunctionCall call;
        java.lang.Object $stack22, $stack44, $stack45;
        org.ooc.frontend.model.Node $stack23;
        org.ooc.frontend.model.Argument implArg;
        org.ooc.frontend.model.Type $stack24;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack27, $stack33, $stack48;
        org.ooc.frontend.model.Expression expr, implTypeParam#16;
        org.ooc.frontend.model.TypeParam implTypeParam;
        byte $stack42;
        int argIndex#10;
        org.ooc.frontend.Visitor $r0;

        call := @parameter0: org.ooc.frontend.model.FunctionCall;

        impl := @parameter1: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter2: org.ooc.backend.cdirty.CGenerator;

        isFirstArg := @parameter3: boolean;

        isFirst = isFirstArg;

        implArgs = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        $stack12 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack13 = virtualinvoke $stack12.<java.util.LinkedHashMap: java.util.Collection values()>();

        implTypeParams = interfaceinvoke $stack13.<java.util.Collection: java.util.Iterator iterator()>();

        $stack15 = virtualinvoke call.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getTypeParams()>();

        argIndex = virtualinvoke $stack15.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label01:
        $stack17 = interfaceinvoke argIndex.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label04;

        $stack44 = interfaceinvoke argIndex.<java.util.Iterator: java.lang.Object next()>();

        expr = (org.ooc.frontend.model.Expression) $stack44;

        $stack45 = interfaceinvoke implTypeParams.<java.util.Iterator: java.lang.Object next()>();

        implTypeParam = (org.ooc.frontend.model.TypeParam) $stack45;

        $stack46 = virtualinvoke implTypeParam.<org.ooc.frontend.model.TypeParam: boolean isGhost()>();

        if $stack46 == 0 goto label02;

        goto label01;

     label02:
        if isFirst != 0 goto label03;

        $stack48 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack48.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(", ");

     label03:
        isFirst = 0;

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke expr.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r0);

        goto label01;

     label04:
        $stack18 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack18 == 0 goto label05;

        $stack42 = 0;

        goto label06;

     label05:
        $stack42 = -1;

     label06:
        argIndex#10 = $stack42;

        $stack19 = virtualinvoke call.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        expr#11 = virtualinvoke $stack19.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label07:
        $stack21 = interfaceinvoke expr#11.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label10;

        argIndex#10 = argIndex#10 + 1;

        if isFirst != 0 goto label08;

        $stack33 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack33.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(", ");

     label08:
        isFirst = 0;

        $stack22 = interfaceinvoke expr#11.<java.util.Iterator: java.lang.Object next()>();

        implTypeParam#16 = (org.ooc.frontend.model.Expression) $stack22;

        $stack23 = virtualinvoke implArgs.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(argIndex#10);

        implArg = (org.ooc.frontend.model.Argument) $stack23;

        $stack24 = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack25 = virtualinvoke $stack24.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack25 == 0 goto label09;

        $stack27 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack27.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("(uint8_t*) ");

     label09:
        staticinvoke <org.ooc.backend.cdirty.CallWriter: void writeCallArg(org.ooc.frontend.model.Expression,org.ooc.frontend.model.FunctionDecl,int,org.ooc.backend.cdirty.CGenerator)>(implTypeParam#16, impl, argIndex#10, cgen);

        goto label07;

     label10:
        return;
    }

    public static void writeMember(org.ooc.frontend.model.MemberCall, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.MemberCall memberCall;
        org.ooc.frontend.model.FunctionDecl impl, $stack41;
        org.ooc.backend.cdirty.CGenerator cgen;
        boolean $stack7, $stack8, $stack19, $stack20, $stack64, isArrow, expression#22, $stack13;
        org.ooc.backend.cdirty.AwesomeWriter $stack9, $stack28, $stack31, $stack34, $stack38, $stack40, $stack44, $stack55, $stack57, $stack60, $stack10, $stack14;
        org.ooc.frontend.model.Type $stack16, $stack18, $stack30, $stack52;
        org.ooc.frontend.model.Expression $stack17, $stack27, $stack51, expression;
        org.ooc.frontend.model.TypeDecl $stack35, isArrow#19;
        java.lang.String $stack36, $stack42, $stack58;
        org.ooc.frontend.model.Declaration $stack53;
        org.ooc.frontend.model.Dereference deref;
        org.ooc.frontend.model.FunctionCall $r0, $r5;
        org.ooc.frontend.Visitor $r1, $r3, $r4;
        java.lang.Appendable $r2;

        memberCall := @parameter0: org.ooc.frontend.model.MemberCall;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        impl = virtualinvoke memberCall.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl getImpl()>();

        $r0 = (org.ooc.frontend.model.FunctionCall) memberCall;

        staticinvoke <org.ooc.backend.cdirty.CallWriter: void writePrelude(org.ooc.backend.cdirty.CGenerator,org.ooc.frontend.model.FunctionDecl,org.ooc.frontend.model.FunctionCall)>(cgen, impl, $r0);

        $stack7 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: boolean isFromPointer()>();

        if $stack7 == 0 goto label4;

        $stack51 = virtualinvoke memberCall.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression getExpression()>();

        $stack52 = virtualinvoke $stack51.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack53 = virtualinvoke $stack52.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        isArrow = $stack53 instanceof org.ooc.frontend.model.ClassDecl;

        expression = virtualinvoke memberCall.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression getExpression()>();

        if isArrow != 0 goto label1;

        $stack64 = expression instanceof org.ooc.frontend.model.Dereference;

        if $stack64 == 0 goto label1;

        deref = (org.ooc.frontend.model.Dereference) expression;

        expression = virtualinvoke deref.<org.ooc.frontend.model.Dereference: org.ooc.frontend.model.Expression getExpression()>();

        isArrow = 1;

     label1:
        $r1 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke expression.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r1);

        if isArrow == 0 goto label2;

        $stack60 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack60.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("->");

        goto label3;

     label2:
        $stack55 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack55.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(".");

     label3:
        $stack57 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack58 = virtualinvoke memberCall.<org.ooc.frontend.model.MemberCall: java.lang.String getName()>();

        virtualinvoke $stack57.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack58);

        goto label6;

     label4:
        $stack8 = virtualinvoke memberCall.<org.ooc.frontend.model.MemberCall: boolean isSuperCall()>();

        if $stack8 == 0 goto label5;

        $stack34 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack35 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl getTypeDecl()>();

        $stack36 = virtualinvoke $stack35.<org.ooc.frontend.model.TypeDecl: java.lang.String getUnderName()>();

        virtualinvoke $stack34.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.TabbedWriter append(java.lang.String)>($stack36);

        $stack38 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack38.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.TabbedWriter append(java.lang.String)>("_");

        $stack40 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack41 = virtualinvoke memberCall.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl getImpl()>();

        $stack42 = virtualinvoke $stack41.<org.ooc.frontend.model.FunctionDecl: java.lang.String getSuffixedName()>();

        virtualinvoke $stack40.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack42);

        $stack44 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack44.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.TabbedWriter append(java.lang.String)>("_impl");

        goto label6;

     label5:
        $stack9 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $r2 = (java.lang.Appendable) $stack9;

        virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: void writeFullName(java.lang.Appendable)>($r2);

     label6:
        $stack10 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack10.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(40);

        isArrow#19 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl getTypeDecl()>();

        expression#22 = 1;

        $stack13 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: boolean isStatic()>();

        if $stack13 != 0 goto label8;

        $stack16 = virtualinvoke isArrow#19.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getInstanceType()>();

        $stack17 = virtualinvoke memberCall.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression getExpression()>();

        $stack18 = virtualinvoke $stack17.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack19 = virtualinvoke $stack16.<org.ooc.frontend.model.Type: boolean equals(java.lang.Object)>($stack18);

        if $stack19 != 0 goto label7;

        $stack28 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack28.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(40);

        $stack30 = virtualinvoke isArrow#19.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getInstanceType()>();

        $r3 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack30.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r3);

        $stack31 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack31.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(") ");

     label7:
        $stack20 = virtualinvoke impl.<org.ooc.frontend.model.FunctionDecl: boolean isFromPointer()>();

        if $stack20 != 0 goto label8;

        expression#22 = 0;

        $stack27 = virtualinvoke memberCall.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression getExpression()>();

        $r4 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack27.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r4);

     label8:
        $r5 = (org.ooc.frontend.model.FunctionCall) memberCall;

        staticinvoke <org.ooc.backend.cdirty.CallWriter: void writeCallArgs(org.ooc.frontend.model.FunctionCall,org.ooc.frontend.model.FunctionDecl,boolean,org.ooc.backend.cdirty.CGenerator)>($r5, impl, expression#22, cgen);

        $stack14 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack14.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(41);

        return;
    }

    static void <clinit>()
    {
        <org.ooc.backend.cdirty.CallWriter: org.ooc.frontend.model.FunctionCall bypassPrelude> = null;

        return;
    }
}
