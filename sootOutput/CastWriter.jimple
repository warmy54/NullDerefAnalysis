public class CastWriter extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        CastWriter this;

        this := @this: CastWriter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void write(org.ooc.frontend.model.Cast, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.Cast cast;
        org.ooc.frontend.model.Type $stack4, $stack6, $stack9, $stack20, $stack37, $stack49, $stack66, $stack13;
        org.ooc.frontend.model.Expression $stack5, $stack8, $stack19, expr, $stack40, $stack46, $stack71, $stack16;
        boolean $stack7, $stack10, $stack33, $stack34, $stack43;
        org.ooc.backend.cdirty.CGenerator cgen;
        int $stack21, $stack55;
        org.ooc.backend.cdirty.AwesomeWriter $stack35, $stack38, $stack41, $stack47, $stack48, $stack52, $stack64, $stack67, $stack69, $stack11, $stack14, $stack17;
        org.ooc.frontend.model.NodeList $stack44, $stack54;
        org.ooc.frontend.model.Node $stack45;
        java.lang.String $stack50;
        org.ooc.frontend.model.VariableAccess access;
        org.ooc.frontend.model.ArrayAccess access#2;
        java.lang.AssertionError $u0;
        org.ooc.frontend.Visitor $r0, $r1, $r3, $r4, $r5, $r6, $r7;
        org.ooc.frontend.model.Access $r2;

        cast := @parameter0: org.ooc.frontend.model.Cast;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack4 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Type getType()>();

        $stack5 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Expression getInner()>();

        $stack6 = virtualinvoke $stack5.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack7 = virtualinvoke $stack4.<org.ooc.frontend.model.Type: boolean equals(java.lang.Object)>($stack6);

        if $stack7 == 0 goto label1;

        $stack71 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Expression getInner()>();

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack71.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r0);

        return;

     label1:
        $stack8 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Expression getInner()>();

        $stack9 = virtualinvoke $stack8.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack10 = virtualinvoke $stack9.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack10 == 0 goto label4;

        $stack19 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Expression getInner()>();

        $stack20 = virtualinvoke $stack19.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack21 = virtualinvoke $stack20.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        if $stack21 != 0 goto label4;

        expr = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Expression getInner()>();

        $stack33 = expr instanceof org.ooc.frontend.model.VariableAccess;

        if $stack33 == 0 goto label2;

        access = (org.ooc.frontend.model.VariableAccess) expr;

        $stack64 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack64.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("*((");

        $stack66 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Type getType()>();

        $r1 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack66.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r1);

        $stack67 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack67.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("*)(");

        $r2 = (org.ooc.frontend.model.Access) access;

        staticinvoke <org.ooc.backend.cdirty.AccessWriter: void write(org.ooc.frontend.model.Access,boolean,org.ooc.backend.cdirty.CGenerator)>($r2, 0, cgen);

        $stack69 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack69.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("))");

        return;

     label2:
        $stack34 = expr instanceof org.ooc.frontend.model.ArrayAccess;

        if $stack34 == 0 goto label4;

        access#2 = (org.ooc.frontend.model.ArrayAccess) expr;

        $stack35 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack35.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("*((");

        $stack37 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Type getType()>();

        $r3 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack37.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r3);

        $stack38 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack38.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("*) (");

        $stack40 = virtualinvoke access#2.<org.ooc.frontend.model.ArrayAccess: org.ooc.frontend.model.Expression getVariable()>();

        $r4 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack40.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r4);

        $stack41 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack41.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(" + ");

        $stack43 = <org.ooc.backend.cdirty.CastWriter: boolean $assertionsDisabled>;

        if $stack43 != 0 goto label3;

        $stack54 = virtualinvoke access#2.<org.ooc.frontend.model.ArrayAccess: org.ooc.frontend.model.NodeList getIndices()>();

        $stack55 = virtualinvoke $stack54.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack55 == 1 goto label3;

        $u0 = new java.lang.AssertionError;

        specialinvoke $u0.<java.lang.AssertionError: void <init>()>();

        throw $u0;

     label3:
        $stack44 = virtualinvoke access#2.<org.ooc.frontend.model.ArrayAccess: org.ooc.frontend.model.NodeList getIndices()>();

        $stack45 = virtualinvoke $stack44.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node getFirst()>();

        $stack46 = (org.ooc.frontend.model.Expression) $stack45;

        $r5 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack46.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r5);

        $stack47 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack48 = virtualinvoke $stack47.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(" * ");

        $stack49 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Type getType()>();

        $stack50 = virtualinvoke $stack49.<org.ooc.frontend.model.Type: java.lang.String getMangledName()>();

        virtualinvoke $stack48.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack50);

        $stack52 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack52.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("_class()->size))");

        return;

     label4:
        $stack11 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack11.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("((");

        $stack13 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Type getType()>();

        $r6 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack13.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r6);

        $stack14 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack14.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(") (");

        $stack16 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Expression getInner()>();

        $r7 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack16.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r7);

        $stack17 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack17.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("))");

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack2;

        $stack0 = class "Lorg/ooc/backend/cdirty/CastWriter;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        <org.ooc.backend.cdirty.CastWriter: boolean $assertionsDisabled> = $stack2;

        return;
    }
}
