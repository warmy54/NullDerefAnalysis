public class ClasspathContainer extends java.lang.Object implements java.lang.Iterable
{
    private java.util.List classpath;
    private org.apache.maven.artifact.ArtifactScopeEnum scope;

    public void <init>(org.apache.maven.artifact.ArtifactScopeEnum)
    {
        ClasspathContainer this;
        org.apache.maven.artifact.ArtifactScopeEnum scope, $stack2;
        org.apache.maven.repository.metadata.ClasspathContainer $r0;

        this := @this: ClasspathContainer;

        scope := @parameter0: org.apache.maven.artifact.ArtifactScopeEnum;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = staticinvoke <org.apache.maven.artifact.ArtifactScopeEnum: org.apache.maven.artifact.ArtifactScopeEnum checkScope(org.apache.maven.artifact.ArtifactScopeEnum)>(scope);

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $r0.<org.apache.maven.repository.metadata.ClasspathContainer: org.apache.maven.artifact.ArtifactScopeEnum scope> = $stack2;

        return;
    }

    public void <init>(java.util.List, org.apache.maven.artifact.ArtifactScopeEnum)
    {
        ClasspathContainer this;
        org.apache.maven.artifact.ArtifactScopeEnum scope;
        java.util.List classpath;
        org.apache.maven.repository.metadata.ClasspathContainer $r0, $r1;

        this := @this: ClasspathContainer;

        classpath := @parameter0: java.util.List;

        scope := @parameter1: org.apache.maven.artifact.ArtifactScopeEnum;

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        specialinvoke $r0.<org.apache.maven.repository.metadata.ClasspathContainer: void <init>(org.apache.maven.artifact.ArtifactScopeEnum)>(scope);

        $r1 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $r1.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath> = classpath;

        return;
    }

    public java.util.Iterator iterator()
    {
        ClasspathContainer this;
        java.util.List $stack1, $stack2;
        java.util.Iterator $stack3;
        org.apache.maven.repository.metadata.ClasspathContainer $r0, $r1;

        this := @this: ClasspathContainer;

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack1 = $r0.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        if $stack1 != null goto label1;

        $stack3 = null;

        goto label2;

     label1:
        $r1 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack2 = $r1.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        return $stack3;
    }

    public org.apache.maven.repository.metadata.ClasspathContainer add(org.apache.maven.repository.metadata.ArtifactMetadata)
    {
        ClasspathContainer this;
        java.util.List $stack2, $stack3;
        org.apache.maven.repository.metadata.ArtifactMetadata md;
        java.util.ArrayList $u0;
        org.apache.maven.repository.metadata.ClasspathContainer $r0, $r1, $r2, $r3;

        this := @this: ClasspathContainer;

        md := @parameter0: org.apache.maven.repository.metadata.ArtifactMetadata;

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack2 = $r0.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        if $stack2 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(int)>(16);

        $r1 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $r1.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath> = $u0;

     label1:
        $r2 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack3 = $r2.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>(md);

        $r3 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        return $r3;
    }

    public java.util.List getClasspath()
    {
        ClasspathContainer this;
        java.util.List $stack1;
        org.apache.maven.repository.metadata.ClasspathContainer $r0;

        this := @this: ClasspathContainer;

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack1 = $r0.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        return $stack1;
    }

    public org.apache.maven.repository.metadata.MetadataTreeNode getClasspathAsTree() throws org.apache.maven.repository.metadata.MetadataResolutionException
    {
        ClasspathContainer this;
        java.util.List $stack6, $stack7, $stack9;
        int $stack8;
        java.util.Iterator l3;
        boolean $stack11, $stack14;
        java.lang.Object $stack12;
        org.apache.maven.repository.metadata.ArtifactMetadata md;
        org.apache.maven.artifact.ArtifactScopeEnum $stack15;
        org.apache.maven.repository.metadata.MetadataTreeNode tree, parent, $u0;
        org.apache.maven.repository.metadata.ClasspathContainer $r0, $r1, $r2;

        this := @this: ClasspathContainer;

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack6 = $r0.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        if $stack6 == null goto label1;

        $r1 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack7 = $r1.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        $stack8 = interfaceinvoke $stack7.<java.util.List: int size()>();

        if $stack8 >= 1 goto label2;

     label1:
        return null;

     label2:
        tree = null;

        parent = null;

        $r2 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack9 = $r2.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        l3 = interfaceinvoke $stack9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack11 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label6;

        $stack12 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        md = (org.apache.maven.repository.metadata.ArtifactMetadata) $stack12;

        $u0 = new org.apache.maven.repository.metadata.MetadataTreeNode;

        $stack14 = virtualinvoke md.<org.apache.maven.repository.metadata.ArtifactMetadata: boolean isResolved()>();

        $stack15 = virtualinvoke md.<org.apache.maven.repository.metadata.ArtifactMetadata: org.apache.maven.artifact.ArtifactScopeEnum getArtifactScope()>();

        specialinvoke $u0.<org.apache.maven.repository.metadata.MetadataTreeNode: void <init>(org.apache.maven.repository.metadata.ArtifactMetadata,org.apache.maven.repository.metadata.MetadataTreeNode,boolean,org.apache.maven.artifact.ArtifactScopeEnum)>(md, parent, $stack14, $stack15);

        if tree != null goto label4;

        tree = $u0;

     label4:
        if parent == null goto label5;

        virtualinvoke parent.<org.apache.maven.repository.metadata.MetadataTreeNode: void setNChildren(int)>(1);

        virtualinvoke parent.<org.apache.maven.repository.metadata.MetadataTreeNode: void addChild(int,org.apache.maven.repository.metadata.MetadataTreeNode)>(0, $u0);

     label5:
        parent = $u0;

        goto label3;

     label6:
        return tree;
    }

    public void setClasspath(java.util.List)
    {
        ClasspathContainer this;
        java.util.List classpath;
        org.apache.maven.repository.metadata.ClasspathContainer $r0;

        this := @this: ClasspathContainer;

        classpath := @parameter0: java.util.List;

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $r0.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath> = classpath;

        return;
    }

    public org.apache.maven.artifact.ArtifactScopeEnum getScope()
    {
        ClasspathContainer this;
        org.apache.maven.artifact.ArtifactScopeEnum $stack1;
        org.apache.maven.repository.metadata.ClasspathContainer $r0;

        this := @this: ClasspathContainer;

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack1 = $r0.<org.apache.maven.repository.metadata.ClasspathContainer: org.apache.maven.artifact.ArtifactScopeEnum scope>;

        return $stack1;
    }

    public void setScope(org.apache.maven.artifact.ArtifactScopeEnum)
    {
        ClasspathContainer this;
        org.apache.maven.artifact.ArtifactScopeEnum scope;
        org.apache.maven.repository.metadata.ClasspathContainer $r0;

        this := @this: ClasspathContainer;

        scope := @parameter0: org.apache.maven.artifact.ArtifactScopeEnum;

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $r0.<org.apache.maven.repository.metadata.ClasspathContainer: org.apache.maven.artifact.ArtifactScopeEnum scope> = scope;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack5, $stack19, $stack21, $stack22, $stack24, $u0;
        ClasspathContainer this;
        org.apache.maven.artifact.ArtifactScopeEnum $stack6;
        java.lang.String $stack7, $stack11, $stack20, $stack23;
        java.util.List $stack9, $stack12;
        java.util.Iterator l2;
        boolean $stack14;
        java.lang.Object $stack18;
        org.apache.maven.repository.metadata.ArtifactMetadata md;
        org.apache.maven.repository.metadata.ClasspathContainer $r0, $r1, $r2;

        this := @this: ClasspathContainer;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(256);

        $stack5 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[scope=");

        $r0 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack6 = $r0.<org.apache.maven.repository.metadata.ClasspathContainer: org.apache.maven.artifact.ArtifactScopeEnum scope>;

        $stack7 = virtualinvoke $stack6.<org.apache.maven.artifact.ArtifactScopeEnum: java.lang.String getScope()>();

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        $r1 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack9 = $r1.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        if $stack9 == null goto label2;

        $r2 = (org.apache.maven.repository.metadata.ClasspathContainer) this;

        $stack12 = $r2.<org.apache.maven.repository.metadata.ClasspathContainer: java.util.List classpath>;

        l2 = interfaceinvoke $stack12.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack14 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack14 == 0 goto label2;

        $stack18 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        md = (org.apache.maven.repository.metadata.ArtifactMetadata) $stack18;

        $stack19 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack20 = virtualinvoke md.<org.apache.maven.repository.metadata.ArtifactMetadata: java.lang.String toString()>();

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $stack23 = virtualinvoke md.<org.apache.maven.repository.metadata.ArtifactMetadata: java.lang.String getArtifactUri()>();

        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        goto label1;

     label2:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $stack11 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack11;
    }
}
