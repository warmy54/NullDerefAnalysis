public class CliRequest extends java.lang.Object
{
    java.lang.String[] args;
    org.apache.commons.cli.CommandLine commandLine;
    org.codehaus.plexus.classworlds.ClassWorld classWorld;
    java.lang.String workingDirectory;
    java.io.File multiModuleProjectDirectory;
    boolean verbose;
    boolean quiet;
    boolean showErrors;
    java.util.Properties userProperties;
    java.util.Properties systemProperties;
    org.apache.maven.execution.MavenExecutionRequest request;

    void <init>(java.lang.String[], org.codehaus.plexus.classworlds.ClassWorld)
    {
        CliRequest this;
        java.lang.String[] args;
        org.codehaus.plexus.classworlds.ClassWorld classWorld;
        java.util.Properties $u0, $u1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $u2;
        org.apache.maven.cli.CliRequest $r0, $r1, $r2, $r3, $r4, $r5;
        org.apache.maven.execution.MavenExecutionRequest $r6;

        this := @this: CliRequest;

        args := @parameter0: java.lang.String[];

        classWorld := @parameter1: org.codehaus.plexus.classworlds.ClassWorld;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $r0.<org.apache.maven.cli.CliRequest: boolean showErrors> = 1;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r1 = (org.apache.maven.cli.CliRequest) this;

        $r1.<org.apache.maven.cli.CliRequest: java.util.Properties userProperties> = $u0;

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        $r2 = (org.apache.maven.cli.CliRequest) this;

        $r2.<org.apache.maven.cli.CliRequest: java.util.Properties systemProperties> = $u1;

        $r3 = (org.apache.maven.cli.CliRequest) this;

        $r3.<org.apache.maven.cli.CliRequest: java.lang.String[] args> = args;

        $r4 = (org.apache.maven.cli.CliRequest) this;

        $r4.<org.apache.maven.cli.CliRequest: org.codehaus.plexus.classworlds.ClassWorld classWorld> = classWorld;

        $u2 = new org.apache.maven.execution.DefaultMavenExecutionRequest;

        specialinvoke $u2.<org.apache.maven.execution.DefaultMavenExecutionRequest: void <init>()>();

        $r5 = (org.apache.maven.cli.CliRequest) this;

        $r6 = (org.apache.maven.execution.MavenExecutionRequest) $u2;

        $r5.<org.apache.maven.cli.CliRequest: org.apache.maven.execution.MavenExecutionRequest request> = $r6;

        return;
    }

    public java.lang.String[] getArgs()
    {
        CliRequest this;
        java.lang.String[] $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: java.lang.String[] args>;

        return $stack1;
    }

    public org.apache.commons.cli.CommandLine getCommandLine()
    {
        CliRequest this;
        org.apache.commons.cli.CommandLine $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: org.apache.commons.cli.CommandLine commandLine>;

        return $stack1;
    }

    public org.codehaus.plexus.classworlds.ClassWorld getClassWorld()
    {
        CliRequest this;
        org.codehaus.plexus.classworlds.ClassWorld $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: org.codehaus.plexus.classworlds.ClassWorld classWorld>;

        return $stack1;
    }

    public java.lang.String getWorkingDirectory()
    {
        CliRequest this;
        java.lang.String $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: java.lang.String workingDirectory>;

        return $stack1;
    }

    public java.io.File getMultiModuleProjectDirectory()
    {
        CliRequest this;
        java.io.File $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: java.io.File multiModuleProjectDirectory>;

        return $stack1;
    }

    public boolean isVerbose()
    {
        CliRequest this;
        boolean $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: boolean verbose>;

        return $stack1;
    }

    public boolean isQuiet()
    {
        CliRequest this;
        boolean $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: boolean quiet>;

        return $stack1;
    }

    public boolean isShowErrors()
    {
        CliRequest this;
        boolean $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: boolean showErrors>;

        return $stack1;
    }

    public java.util.Properties getUserProperties()
    {
        CliRequest this;
        java.util.Properties $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: java.util.Properties userProperties>;

        return $stack1;
    }

    public java.util.Properties getSystemProperties()
    {
        CliRequest this;
        java.util.Properties $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: java.util.Properties systemProperties>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest getRequest()
    {
        CliRequest this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack1 = $r0.<org.apache.maven.cli.CliRequest: org.apache.maven.execution.MavenExecutionRequest request>;

        return $stack1;
    }

    public void setUserProperties(java.util.Properties)
    {
        CliRequest this;
        java.util.Properties properties, $stack2;
        org.apache.maven.cli.CliRequest $r0;

        this := @this: CliRequest;

        properties := @parameter0: java.util.Properties;

        $r0 = (org.apache.maven.cli.CliRequest) this;

        $stack2 = $r0.<org.apache.maven.cli.CliRequest: java.util.Properties userProperties>;

        virtualinvoke $stack2.<java.util.Properties: void putAll(java.util.Map)>(properties);

        return;
    }
}
