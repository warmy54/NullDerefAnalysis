public class CommentRenormalizer extends java.lang.Object implements org.xml.sax.ext.LexicalHandler
{
    private final org.xml.sax.ext.LexicalHandler lexicalHandler;
    private final java.lang.String lineSeparator;

    public void <init>(org.xml.sax.ext.LexicalHandler)
    {
        CommentRenormalizer this;
        org.xml.sax.ext.LexicalHandler lexicalHandler;
        java.lang.String $stack2;
        org.apache.maven.model.transform.sax.CommentRenormalizer $r0;

        this := @this: CommentRenormalizer;

        lexicalHandler := @parameter0: org.xml.sax.ext.LexicalHandler;

        $stack2 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        specialinvoke $r0.<org.apache.maven.model.transform.sax.CommentRenormalizer: void <init>(org.xml.sax.ext.LexicalHandler,java.lang.String)>(lexicalHandler, $stack2);

        return;
    }

    void <init>(org.xml.sax.ext.LexicalHandler, java.lang.String)
    {
        CommentRenormalizer this;
        org.xml.sax.ext.LexicalHandler lexicalHandler;
        java.lang.String lineSeparator;
        org.apache.maven.model.transform.sax.CommentRenormalizer $r0, $r1;

        this := @this: CommentRenormalizer;

        lexicalHandler := @parameter0: org.xml.sax.ext.LexicalHandler;

        lineSeparator := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $r0.<org.apache.maven.model.transform.sax.CommentRenormalizer: org.xml.sax.ext.LexicalHandler lexicalHandler> = lexicalHandler;

        $r1 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $r1.<org.apache.maven.model.transform.sax.CommentRenormalizer: java.lang.String lineSeparator> = lineSeparator;

        return;
    }

    public void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        CommentRenormalizer this;
        java.lang.String $stack5, $stack6, $stack9, $stack10, $u0;
        boolean $stack7;
        char[] ch, ca;
        int start, length, $stack12;
        org.xml.sax.ext.LexicalHandler $stack13, $stack14;
        org.apache.maven.model.transform.sax.CommentRenormalizer $r0, $r1, $r2, $r3;

        this := @this: CommentRenormalizer;

        ch := @parameter0: char[];

        start := @parameter1: int;

        length := @parameter2: int;

        $stack6 = "\n";

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack5 = $r0.<org.apache.maven.model.transform.sax.CommentRenormalizer: java.lang.String lineSeparator>;

        $stack7 = virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>($stack5);

        if $stack7 == 0 goto label1;

        $r1 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack14 = $r1.<org.apache.maven.model.transform.sax.CommentRenormalizer: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack14.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(ch, start, length);

        goto label2;

     label1:
        $u0 = new java.lang.String;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>(ch, start, length);

        $r2 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack9 = $r2.<org.apache.maven.model.transform.sax.CommentRenormalizer: java.lang.String lineSeparator>;

        $stack10 = virtualinvoke $u0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\n", $stack9);

        ca = virtualinvoke $stack10.<java.lang.String: char[] toCharArray()>();

        $r3 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack13 = $r3.<org.apache.maven.model.transform.sax.CommentRenormalizer: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        $stack12 = lengthof ca;

        interfaceinvoke $stack13.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(ca, 0, $stack12);

     label2:
        return;
    }

    public void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        CommentRenormalizer this;
        java.lang.String name, publicId, systemId;
        org.xml.sax.ext.LexicalHandler $stack4;
        org.apache.maven.model.transform.sax.CommentRenormalizer $r0;

        this := @this: CommentRenormalizer;

        name := @parameter0: java.lang.String;

        publicId := @parameter1: java.lang.String;

        systemId := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack4 = $r0.<org.apache.maven.model.transform.sax.CommentRenormalizer: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack4.<org.xml.sax.ext.LexicalHandler: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(name, publicId, systemId);

        return;
    }

    public void endDTD() throws org.xml.sax.SAXException
    {
        CommentRenormalizer this;
        org.xml.sax.ext.LexicalHandler $stack1;
        org.apache.maven.model.transform.sax.CommentRenormalizer $r0;

        this := @this: CommentRenormalizer;

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack1 = $r0.<org.apache.maven.model.transform.sax.CommentRenormalizer: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack1.<org.xml.sax.ext.LexicalHandler: void endDTD()>();

        return;
    }

    public void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        CommentRenormalizer this;
        java.lang.String name;
        org.xml.sax.ext.LexicalHandler $stack2;
        org.apache.maven.model.transform.sax.CommentRenormalizer $r0;

        this := @this: CommentRenormalizer;

        name := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack2 = $r0.<org.apache.maven.model.transform.sax.CommentRenormalizer: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack2.<org.xml.sax.ext.LexicalHandler: void startEntity(java.lang.String)>(name);

        return;
    }

    public void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        CommentRenormalizer this;
        java.lang.String name;
        org.xml.sax.ext.LexicalHandler $stack2;
        org.apache.maven.model.transform.sax.CommentRenormalizer $r0;

        this := @this: CommentRenormalizer;

        name := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack2 = $r0.<org.apache.maven.model.transform.sax.CommentRenormalizer: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack2.<org.xml.sax.ext.LexicalHandler: void endEntity(java.lang.String)>(name);

        return;
    }

    public void startCDATA() throws org.xml.sax.SAXException
    {
        CommentRenormalizer this;
        org.xml.sax.ext.LexicalHandler $stack1;
        org.apache.maven.model.transform.sax.CommentRenormalizer $r0;

        this := @this: CommentRenormalizer;

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack1 = $r0.<org.apache.maven.model.transform.sax.CommentRenormalizer: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack1.<org.xml.sax.ext.LexicalHandler: void startCDATA()>();

        return;
    }

    public void endCDATA() throws org.xml.sax.SAXException
    {
        CommentRenormalizer this;
        org.xml.sax.ext.LexicalHandler $stack1;
        org.apache.maven.model.transform.sax.CommentRenormalizer $r0;

        this := @this: CommentRenormalizer;

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizer) this;

        $stack1 = $r0.<org.apache.maven.model.transform.sax.CommentRenormalizer: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        interfaceinvoke $stack1.<org.xml.sax.ext.LexicalHandler: void endCDATA()>();

        return;
    }
}
