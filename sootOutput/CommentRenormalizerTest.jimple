public class CommentRenormalizerTest extends java.lang.Object
{
    private org.xml.sax.ext.LexicalHandler lexicalHandler;

    public void <init>()
    {
        CommentRenormalizerTest this;
        java.lang.Object $stack1;
        org.xml.sax.ext.LexicalHandler $stack2;
        org.apache.maven.model.transform.sax.CommentRenormalizerTest $r0;

        this := @this: CommentRenormalizerTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lorg/xml/sax/ext/LexicalHandler;");

        $stack2 = (org.xml.sax.ext.LexicalHandler) $stack1;

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizerTest) this;

        $r0.<org.apache.maven.model.transform.sax.CommentRenormalizerTest: org.xml.sax.ext.LexicalHandler lexicalHandler> = $stack2;

        return;
    }

    public void singleLine(java.lang.String) throws java.lang.Exception
    {
        CommentRenormalizerTest this;
        java.lang.String lineSeparator, $stack6;
        org.xml.sax.ext.LexicalHandler $stack5, $stack9, $stack12;
        char[] ch;
        int $stack8, $stack11;
        java.lang.Object $stack10;
        org.apache.maven.model.transform.sax.CommentRenormalizer $u0;
        org.apache.maven.model.transform.sax.CommentRenormalizerTest $r0, $r1;

        this := @this: CommentRenormalizerTest;

        lineSeparator := @parameter0: java.lang.String;

        $u0 = new org.apache.maven.model.transform.sax.CommentRenormalizer;

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizerTest) this;

        $stack5 = $r0.<org.apache.maven.model.transform.sax.CommentRenormalizerTest: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        specialinvoke $u0.<org.apache.maven.model.transform.sax.CommentRenormalizer: void <init>(org.xml.sax.ext.LexicalHandler,java.lang.String)>($stack5, lineSeparator);

        $stack6 = "single line";

        ch = virtualinvoke $stack6.<java.lang.String: char[] toCharArray()>();

        $stack8 = lengthof ch;

        virtualinvoke $u0.<org.apache.maven.model.transform.sax.CommentRenormalizer: void comment(char[],int,int)>(ch, 0, $stack8);

        $r1 = (org.apache.maven.model.transform.sax.CommentRenormalizerTest) this;

        $stack9 = $r1.<org.apache.maven.model.transform.sax.CommentRenormalizerTest: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        $stack10 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($stack9);

        $stack12 = (org.xml.sax.ext.LexicalHandler) $stack10;

        $stack11 = lengthof ch;

        interfaceinvoke $stack12.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(ch, 0, $stack11);

        return;
    }

    public void multiLine(java.lang.String) throws java.lang.Exception
    {
        CommentRenormalizerTest this;
        java.lang.String lineSeparator, $stack9, $stack12;
        org.xml.sax.ext.LexicalHandler $stack7, $stack15, $stack18;
        java.lang.Object[] $stack8, $stack11;
        char[] chIn, chOut;
        int $stack14, $stack17;
        java.lang.Object $stack16;
        org.apache.maven.model.transform.sax.CommentRenormalizer $u0;
        org.apache.maven.model.transform.sax.CommentRenormalizerTest $r0, $r1;

        this := @this: CommentRenormalizerTest;

        lineSeparator := @parameter0: java.lang.String;

        $u0 = new org.apache.maven.model.transform.sax.CommentRenormalizer;

        $r0 = (org.apache.maven.model.transform.sax.CommentRenormalizerTest) this;

        $stack7 = $r0.<org.apache.maven.model.transform.sax.CommentRenormalizerTest: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        specialinvoke $u0.<org.apache.maven.model.transform.sax.CommentRenormalizer: void <init>(org.xml.sax.ext.LexicalHandler,java.lang.String)>($stack7, lineSeparator);

        $stack8 = newarray (java.lang.Object)[4];

        $stack8[0] = "\n";

        $stack8[1] = "\n";

        $stack8[2] = "\n";

        $stack8[3] = "\n";

        $stack9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("I%sam%sthe%sbest%s", $stack8);

        chIn = virtualinvoke $stack9.<java.lang.String: char[] toCharArray()>();

        $stack11 = newarray (java.lang.Object)[4];

        $stack11[0] = lineSeparator;

        $stack11[1] = lineSeparator;

        $stack11[2] = lineSeparator;

        $stack11[3] = lineSeparator;

        $stack12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("I%sam%sthe%sbest%s", $stack11);

        chOut = virtualinvoke $stack12.<java.lang.String: char[] toCharArray()>();

        $stack14 = lengthof chIn;

        virtualinvoke $u0.<org.apache.maven.model.transform.sax.CommentRenormalizer: void comment(char[],int,int)>(chIn, 0, $stack14);

        $r1 = (org.apache.maven.model.transform.sax.CommentRenormalizerTest) this;

        $stack15 = $r1.<org.apache.maven.model.transform.sax.CommentRenormalizerTest: org.xml.sax.ext.LexicalHandler lexicalHandler>;

        $stack16 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($stack15);

        $stack18 = (org.xml.sax.ext.LexicalHandler) $stack16;

        $stack17 = lengthof chOut;

        interfaceinvoke $stack18.<org.xml.sax.ext.LexicalHandler: void comment(char[],int,int)>(chOut, 0, $stack17);

        return;
    }
}
