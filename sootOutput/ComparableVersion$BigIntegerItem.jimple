class ComparableVersion$BigIntegerItem extends java.lang.Object implements org.apache.maven.artifact.versioning.ComparableVersion$Item
{
    private final java.math.BigInteger value;

    void <init>(java.lang.String)
    {
        ComparableVersion$BigIntegerItem this;
        java.lang.String str;
        java.math.BigInteger $u0;
        org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem $r0;

        this := @this: ComparableVersion$BigIntegerItem;

        str := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.math.BigInteger;

        specialinvoke $u0.<java.math.BigInteger: void <init>(java.lang.String)>(str);

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem) this;

        $r0.<org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem: java.math.BigInteger value> = $u0;

        return;
    }

    public int getType()
    {
        ComparableVersion$BigIntegerItem this;

        this := @this: ComparableVersion$BigIntegerItem;

        return 0;
    }

    public boolean isNull()
    {
        ComparableVersion$BigIntegerItem this;
        java.math.BigInteger $stack1, $stack2;
        boolean $stack3;
        org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem $r0;

        this := @this: ComparableVersion$BigIntegerItem;

        $stack2 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem) this;

        $stack1 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem: java.math.BigInteger value>;

        $stack3 = virtualinvoke $stack2.<java.math.BigInteger: boolean equals(java.lang.Object)>($stack1);

        return $stack3;
    }

    public int compareTo(org.apache.maven.artifact.versioning.ComparableVersion$Item)
    {
        org.apache.maven.artifact.versioning.ComparableVersion$Item item;
        int $stack2, $stack6;
        ComparableVersion$BigIntegerItem this;
        org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem $stack3, $r0, $r1;
        java.math.BigInteger $stack4, $stack5, $stack13, $stack14;
        java.lang.StringBuilder $stack9, $stack11, $u0;
        java.lang.Class $stack10;
        java.lang.String $stack12;
        boolean $stack15;
        byte $stack16;
        java.lang.IllegalStateException $u1;

        this := @this: ComparableVersion$BigIntegerItem;

        item := @parameter0: org.apache.maven.artifact.versioning.ComparableVersion$Item;

        if item != null goto label3;

        $stack14 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem) this;

        $stack13 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem: java.math.BigInteger value>;

        $stack15 = virtualinvoke $stack14.<java.math.BigInteger: boolean equals(java.lang.Object)>($stack13);

        if $stack15 == 0 goto label1;

        $stack16 = 0;

        goto label2;

     label1:
        $stack16 = 1;

     label2:
        return $stack16;

     label3:
        $stack2 = interfaceinvoke item.<org.apache.maven.artifact.versioning.ComparableVersion$Item: int getType()>();

        tableswitch($stack2)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            case 3: goto label4;
            case 4: goto label4;
            default: goto label8;
        };

     label4:
        return 1;

     label5:
        $r1 = (org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem) this;

        $stack5 = $r1.<org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem: java.math.BigInteger value>;

        $stack3 = (org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem) item;

        $stack4 = $stack3.<org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem: java.math.BigInteger value>;

        $stack6 = virtualinvoke $stack5.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($stack4);

        return $stack6;

     label6:
        return 1;

     label7:
        return 1;

     label8:
        $u1 = new java.lang.IllegalStateException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid item: ");

        $stack10 = virtualinvoke item.<java.lang.Object: java.lang.Class getClass()>();

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack12);

        throw $u1;
    }

    public boolean equals(java.lang.Object)
    {
        ComparableVersion$BigIntegerItem this;
        java.lang.Object o;
        java.lang.Class $stack3, $stack4;
        org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem that, $r0;
        java.math.BigInteger $stack5, $stack6;
        boolean $stack7;

        this := @this: ComparableVersion$BigIntegerItem;

        o := @parameter0: java.lang.Object;

        if this != o goto label1;

        return 1;

     label1:
        if o == null goto label2;

        $stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack4 = virtualinvoke o.<java.lang.Object: java.lang.Class getClass()>();

        if $stack3 == $stack4 goto label3;

     label2:
        return 0;

     label3:
        that = (org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem) o;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem) this;

        $stack6 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem: java.math.BigInteger value>;

        $stack5 = that.<org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem: java.math.BigInteger value>;

        $stack7 = virtualinvoke $stack6.<java.math.BigInteger: boolean equals(java.lang.Object)>($stack5);

        return $stack7;
    }

    public int hashCode()
    {
        ComparableVersion$BigIntegerItem this;
        java.math.BigInteger $stack1;
        int $stack2;
        org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem $r0;

        this := @this: ComparableVersion$BigIntegerItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem) this;

        $stack1 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem: java.math.BigInteger value>;

        $stack2 = virtualinvoke $stack1.<java.math.BigInteger: int hashCode()>();

        return $stack2;
    }

    public java.lang.String toString()
    {
        ComparableVersion$BigIntegerItem this;
        java.math.BigInteger $stack1;
        java.lang.String $stack2;
        org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem $r0;

        this := @this: ComparableVersion$BigIntegerItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem) this;

        $stack1 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$BigIntegerItem: java.math.BigInteger value>;

        $stack2 = virtualinvoke $stack1.<java.math.BigInteger: java.lang.String toString()>();

        return $stack2;
    }
}
