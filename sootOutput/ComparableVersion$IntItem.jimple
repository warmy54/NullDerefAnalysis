class ComparableVersion$IntItem extends java.lang.Object implements org.apache.maven.artifact.versioning.ComparableVersion$Item
{
    private final int value;
    public static final org.apache.maven.artifact.versioning.ComparableVersion$IntItem ZERO;

    private void <init>()
    {
        ComparableVersion$IntItem this;
        org.apache.maven.artifact.versioning.ComparableVersion$IntItem $r0;

        this := @this: ComparableVersion$IntItem;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) this;

        $r0.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value> = 0;

        return;
    }

    void <init>(java.lang.String)
    {
        ComparableVersion$IntItem this;
        java.lang.String str;
        int $stack2;
        org.apache.maven.artifact.versioning.ComparableVersion$IntItem $r0;

        this := @this: ComparableVersion$IntItem;

        str := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(str);

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) this;

        $r0.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value> = $stack2;

        return;
    }

    public int getType()
    {
        ComparableVersion$IntItem this;

        this := @this: ComparableVersion$IntItem;

        return 3;
    }

    public boolean isNull()
    {
        ComparableVersion$IntItem this;
        int $stack1;
        boolean $stack2;
        org.apache.maven.artifact.versioning.ComparableVersion$IntItem $r0;

        this := @this: ComparableVersion$IntItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) this;

        $stack1 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value>;

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    public int compareTo(org.apache.maven.artifact.versioning.ComparableVersion$Item)
    {
        org.apache.maven.artifact.versioning.ComparableVersion$Item item;
        int $stack3, itemValue, $stack5, $stack6, $stack13;
        org.apache.maven.artifact.versioning.ComparableVersion$IntItem $stack4, $r0, $r1;
        ComparableVersion$IntItem this;
        java.lang.StringBuilder $stack9, $stack11, $u0;
        java.lang.Class $stack10;
        java.lang.String $stack12;
        byte $stack14;
        java.lang.IllegalStateException $u1;

        this := @this: ComparableVersion$IntItem;

        item := @parameter0: org.apache.maven.artifact.versioning.ComparableVersion$Item;

        if item != null goto label3;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) this;

        $stack13 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value>;

        if $stack13 != 0 goto label1;

        $stack14 = 0;

        goto label2;

     label1:
        $stack14 = 1;

     label2:
        return $stack14;

     label3:
        $stack3 = interfaceinvoke item.<org.apache.maven.artifact.versioning.ComparableVersion$Item: int getType()>();

        tableswitch($stack3)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label8;
        };

     label4:
        $stack4 = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) item;

        itemValue = $stack4.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value>;

        $r1 = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) this;

        $stack5 = $r1.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value>;

        $stack6 = staticinvoke <java.lang.Integer: int compare(int,int)>($stack5, itemValue);

        return $stack6;

     label5:
        return -1;

     label6:
        return 1;

     label7:
        return 1;

     label8:
        $u1 = new java.lang.IllegalStateException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid item: ");

        $stack10 = virtualinvoke item.<java.lang.Object: java.lang.Class getClass()>();

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack12);

        throw $u1;
    }

    public boolean equals(java.lang.Object)
    {
        ComparableVersion$IntItem this;
        java.lang.Object o;
        java.lang.Class $stack3, $stack4;
        org.apache.maven.artifact.versioning.ComparableVersion$IntItem intItem, $r0;
        int $stack5, $stack6;
        boolean $stack7;

        this := @this: ComparableVersion$IntItem;

        o := @parameter0: java.lang.Object;

        if this != o goto label1;

        return 1;

     label1:
        if o == null goto label2;

        $stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack4 = virtualinvoke o.<java.lang.Object: java.lang.Class getClass()>();

        if $stack3 == $stack4 goto label3;

     label2:
        return 0;

     label3:
        intItem = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) o;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) this;

        $stack6 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value>;

        $stack5 = intItem.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value>;

        if $stack6 != $stack5 goto label4;

        $stack7 = 1;

        goto label5;

     label4:
        $stack7 = 0;

     label5:
        return $stack7;
    }

    public int hashCode()
    {
        ComparableVersion$IntItem this;
        int $stack1;
        org.apache.maven.artifact.versioning.ComparableVersion$IntItem $r0;

        this := @this: ComparableVersion$IntItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) this;

        $stack1 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value>;

        return $stack1;
    }

    public java.lang.String toString()
    {
        ComparableVersion$IntItem this;
        int $stack1;
        java.lang.String $stack2;
        org.apache.maven.artifact.versioning.ComparableVersion$IntItem $r0;

        this := @this: ComparableVersion$IntItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$IntItem) this;

        $stack1 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: int value>;

        $stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1);

        return $stack2;
    }

    static void <clinit>()
    {
        org.apache.maven.artifact.versioning.ComparableVersion$IntItem $stack0;

        $stack0 = new org.apache.maven.artifact.versioning.ComparableVersion$IntItem;

        specialinvoke $stack0.<org.apache.maven.artifact.versioning.ComparableVersion$IntItem: void <init>()>();

        <org.apache.maven.artifact.versioning.ComparableVersion$IntItem: org.apache.maven.artifact.versioning.ComparableVersion$IntItem ZERO> = $stack0;

        return;
    }
}
