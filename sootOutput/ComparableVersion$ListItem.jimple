class ComparableVersion$ListItem extends java.util.ArrayList implements org.apache.maven.artifact.versioning.ComparableVersion$Item
{

    private void <init>()
    {
        ComparableVersion$ListItem this;

        this := @this: ComparableVersion$ListItem;

        specialinvoke this.<java.util.ArrayList: void <init>()>();

        return;
    }

    public int getType()
    {
        ComparableVersion$ListItem this;

        this := @this: ComparableVersion$ListItem;

        return 2;
    }

    public boolean isNull()
    {
        ComparableVersion$ListItem this;
        int $stack1;
        boolean $stack2;
        org.apache.maven.artifact.versioning.ComparableVersion$ListItem $r0;

        this := @this: ComparableVersion$ListItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: int size()>();

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    void normalize()
    {
        ComparableVersion$ListItem this;
        int $stack3, i;
        java.lang.Object $stack4;
        org.apache.maven.artifact.versioning.ComparableVersion$Item lastItem;
        boolean $stack5, $stack6;
        org.apache.maven.artifact.versioning.ComparableVersion$ListItem $r0, $r1, $r2;

        this := @this: ComparableVersion$ListItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: int size()>();

        i = $stack3 - 1;

     label1:
        if i < 0 goto label4;

        $r1 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        $stack4 = virtualinvoke $r1.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: java.lang.Object get(int)>(i);

        lastItem = (org.apache.maven.artifact.versioning.ComparableVersion$Item) $stack4;

        $stack5 = interfaceinvoke lastItem.<org.apache.maven.artifact.versioning.ComparableVersion$Item: boolean isNull()>();

        if $stack5 == 0 goto label2;

        $r2 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        virtualinvoke $r2.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: java.lang.Object remove(int)>(i);

        goto label3;

     label2:
        $stack6 = lastItem instanceof org.apache.maven.artifact.versioning.ComparableVersion$ListItem;

        if $stack6 != 0 goto label3;

        goto label4;

     label3:
        i = i + -1;

        goto label1;

     label4:
        return;
    }

    public int compareTo(org.apache.maven.artifact.versioning.ComparableVersion$Item)
    {
        org.apache.maven.artifact.versioning.ComparableVersion$Item item, i, $stack23, result, $stack20;
        int $stack7, result, $stack17, $stack33, $stack14;
        ComparableVersion$ListItem this;
        org.apache.maven.artifact.versioning.ComparableVersion$ListItem $stack9, $r0, $r1, $r2;
        boolean $stack11, $stack12, $stack13, $stack25, $stack35;
        java.lang.Object $stack19, $stack22, $stack36;
        java.lang.StringBuilder $stack29, $stack31, $u0;
        java.lang.Class $stack30;
        java.lang.String $stack32;
        java.util.Iterator left, i#5;
        java.lang.IllegalStateException $u1;

        this := @this: ComparableVersion$ListItem;

        item := @parameter0: org.apache.maven.artifact.versioning.ComparableVersion$Item;

        if item != null goto label05;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        $stack33 = virtualinvoke $r0.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: int size()>();

        if $stack33 != 0 goto label01;

        return 0;

     label01:
        $r1 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        left = virtualinvoke $r1.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: java.util.Iterator iterator()>();

     label02:
        $stack35 = interfaceinvoke left.<java.util.Iterator: boolean hasNext()>();

        if $stack35 == 0 goto label04;

        $stack36 = interfaceinvoke left.<java.util.Iterator: java.lang.Object next()>();

        i = (org.apache.maven.artifact.versioning.ComparableVersion$Item) $stack36;

        result = interfaceinvoke i.<org.apache.maven.artifact.versioning.ComparableVersion$Item: int compareTo(org.apache.maven.artifact.versioning.ComparableVersion$Item)>(null);

        if result == 0 goto label03;

        return result;

     label03:
        goto label02;

     label04:
        return 0;

     label05:
        $stack7 = interfaceinvoke item.<org.apache.maven.artifact.versioning.ComparableVersion$Item: int getType()>();

        tableswitch($stack7)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label06;
            case 4: goto label06;
            default: goto label20;
        };

     label06:
        return -1;

     label07:
        return 1;

     label08:
        $r2 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        left = virtualinvoke $r2.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: java.util.Iterator iterator()>();

        $stack9 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) item;

        i#5 = virtualinvoke $stack9.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: java.util.Iterator iterator()>();

     label09:
        $stack11 = interfaceinvoke left.<java.util.Iterator: boolean hasNext()>();

        if $stack11 != 0 goto label10;

        $stack25 = interfaceinvoke i#5.<java.util.Iterator: boolean hasNext()>();

        if $stack25 == 0 goto label19;

     label10:
        $stack12 = interfaceinvoke left.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label11;

        $stack22 = interfaceinvoke left.<java.util.Iterator: java.lang.Object next()>();

        $stack23 = (org.apache.maven.artifact.versioning.ComparableVersion$Item) $stack22;

        goto label12;

     label11:
        $stack23 = null;

     label12:
        result = $stack23;

        $stack13 = interfaceinvoke i#5.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label13;

        $stack19 = interfaceinvoke i#5.<java.util.Iterator: java.lang.Object next()>();

        $stack20 = (org.apache.maven.artifact.versioning.ComparableVersion$Item) $stack19;

        goto label14;

     label13:
        $stack20 = null;

     label14:
        if result != null goto label16;

        if $stack20 != null goto label15;

        $stack14 = 0;

        goto label17;

     label15:
        $stack17 = interfaceinvoke $stack20.<org.apache.maven.artifact.versioning.ComparableVersion$Item: int compareTo(org.apache.maven.artifact.versioning.ComparableVersion$Item)>(result);

        $stack14 = -1 * $stack17;

        goto label17;

     label16:
        $stack14 = interfaceinvoke result.<org.apache.maven.artifact.versioning.ComparableVersion$Item: int compareTo(org.apache.maven.artifact.versioning.ComparableVersion$Item)>($stack20);

     label17:
        if $stack14 == 0 goto label18;

        return $stack14;

     label18:
        goto label09;

     label19:
        return 0;

     label20:
        $u1 = new java.lang.IllegalStateException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack29 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid item: ");

        $stack30 = virtualinvoke item.<java.lang.Object: java.lang.Class getClass()>();

        $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack30);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack32);

        throw $u1;
    }

    public java.lang.String toString()
    {
        ComparableVersion$ListItem this;
        java.util.Iterator l2;
        boolean $stack6, $stack12;
        java.lang.String $stack7;
        java.lang.Object $stack8;
        org.apache.maven.artifact.versioning.ComparableVersion$Item item;
        int $stack9;
        char $stack16;
        java.lang.StringBuilder $u0;
        org.apache.maven.artifact.versioning.ComparableVersion$ListItem $r0;

        this := @this: ComparableVersion$ListItem;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        l2 = virtualinvoke $r0.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label5;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.artifact.versioning.ComparableVersion$Item) $stack8;

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: int length()>();

        if $stack9 <= 0 goto label4;

        $stack12 = item instanceof org.apache.maven.artifact.versioning.ComparableVersion$ListItem;

        if $stack12 == 0 goto label2;

        $stack16 = 45;

        goto label3;

     label2:
        $stack16 = 46;

     label3:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack16);

     label4:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(item);

        goto label1;

     label5:
        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    private java.lang.String toListString()
    {
        ComparableVersion$ListItem this;
        java.util.Iterator l2;
        boolean $stack7, $stack12;
        java.lang.String $stack9, $stack16;
        java.lang.Object $stack10;
        org.apache.maven.artifact.versioning.ComparableVersion$Item item;
        int $stack11;
        org.apache.maven.artifact.versioning.ComparableVersion$ListItem $stack15, $r0;
        java.lang.StringBuilder $u0;

        this := @this: ComparableVersion$ListItem;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        l2 = virtualinvoke $r0.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label5;

        $stack10 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.artifact.versioning.ComparableVersion$Item) $stack10;

        $stack11 = virtualinvoke $u0.<java.lang.StringBuilder: int length()>();

        if $stack11 <= 1 goto label2;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $stack12 = item instanceof org.apache.maven.artifact.versioning.ComparableVersion$ListItem;

        if $stack12 == 0 goto label3;

        $stack15 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) item;

        $stack16 = specialinvoke $stack15.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: java.lang.String toListString()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        goto label4;

     label3:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(item);

     label4:
        goto label1;

     label5:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack9;
    }

    void <init>(org.apache.maven.artifact.versioning.ComparableVersion$1)
    {
        ComparableVersion$ListItem this;
        org.apache.maven.artifact.versioning.ComparableVersion$1 x0;
        org.apache.maven.artifact.versioning.ComparableVersion$ListItem $r0;

        this := @this: ComparableVersion$ListItem;

        x0 := @parameter0: org.apache.maven.artifact.versioning.ComparableVersion$1;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$ListItem) this;

        specialinvoke $r0.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: void <init>()>();

        return;
    }

    static java.lang.String access$100(org.apache.maven.artifact.versioning.ComparableVersion$ListItem)
    {
        org.apache.maven.artifact.versioning.ComparableVersion$ListItem x0;
        java.lang.String $stack1;

        x0 := @parameter0: org.apache.maven.artifact.versioning.ComparableVersion$ListItem;

        $stack1 = specialinvoke x0.<org.apache.maven.artifact.versioning.ComparableVersion$ListItem: java.lang.String toListString()>();

        return $stack1;
    }
}
