class ComparableVersion$LongItem extends java.lang.Object implements org.apache.maven.artifact.versioning.ComparableVersion$Item
{
    private final long value;

    void <init>(java.lang.String)
    {
        ComparableVersion$LongItem this;
        java.lang.String str;
        long $stack2;
        org.apache.maven.artifact.versioning.ComparableVersion$LongItem $r0;

        this := @this: ComparableVersion$LongItem;

        str := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(str);

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) this;

        $r0.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value> = $stack2;

        return;
    }

    public int getType()
    {
        ComparableVersion$LongItem this;

        this := @this: ComparableVersion$LongItem;

        return 4;
    }

    public boolean isNull()
    {
        ComparableVersion$LongItem this;
        long $stack1;
        byte $stack2;
        boolean $stack3;
        org.apache.maven.artifact.versioning.ComparableVersion$LongItem $r0;

        this := @this: ComparableVersion$LongItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) this;

        $stack1 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value>;

        $stack2 = $stack1 cmp 0L;

        if $stack2 != 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    public int compareTo(org.apache.maven.artifact.versioning.ComparableVersion$Item)
    {
        org.apache.maven.artifact.versioning.ComparableVersion$Item item;
        int $stack4, $stack7;
        org.apache.maven.artifact.versioning.ComparableVersion$LongItem $stack5, $r0, $r1;
        long itemValue, $stack6, $stack14;
        ComparableVersion$LongItem this;
        java.lang.StringBuilder $stack10, $stack12, $u0;
        java.lang.Class $stack11;
        java.lang.String $stack13;
        byte $stack15, $stack16;
        java.lang.IllegalStateException $u1;

        this := @this: ComparableVersion$LongItem;

        item := @parameter0: org.apache.maven.artifact.versioning.ComparableVersion$Item;

        if item != null goto label3;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) this;

        $stack14 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value>;

        $stack15 = $stack14 cmp 0L;

        if $stack15 != 0 goto label1;

        $stack16 = 0;

        goto label2;

     label1:
        $stack16 = 1;

     label2:
        return $stack16;

     label3:
        $stack4 = interfaceinvoke item.<org.apache.maven.artifact.versioning.ComparableVersion$Item: int getType()>();

        tableswitch($stack4)
        {
            case 0: goto label6;
            case 1: goto label7;
            case 2: goto label8;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label9;
        };

     label4:
        return 1;

     label5:
        $stack5 = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) item;

        itemValue = $stack5.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value>;

        $r1 = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) this;

        $stack6 = $r1.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value>;

        $stack7 = staticinvoke <java.lang.Long: int compare(long,long)>($stack6, itemValue);

        return $stack7;

     label6:
        return -1;

     label7:
        return 1;

     label8:
        return 1;

     label9:
        $u1 = new java.lang.IllegalStateException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("invalid item: ");

        $stack11 = virtualinvoke item.<java.lang.Object: java.lang.Class getClass()>();

        $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($stack13);

        throw $u1;
    }

    public boolean equals(java.lang.Object)
    {
        ComparableVersion$LongItem this;
        java.lang.Object o;
        java.lang.Class $stack3, $stack4;
        org.apache.maven.artifact.versioning.ComparableVersion$LongItem longItem, $r0;
        long $stack5, $stack6;
        byte $stack7;
        boolean $stack8;

        this := @this: ComparableVersion$LongItem;

        o := @parameter0: java.lang.Object;

        if this != o goto label1;

        return 1;

     label1:
        if o == null goto label2;

        $stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack4 = virtualinvoke o.<java.lang.Object: java.lang.Class getClass()>();

        if $stack3 == $stack4 goto label3;

     label2:
        return 0;

     label3:
        longItem = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) o;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) this;

        $stack6 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value>;

        $stack5 = longItem.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value>;

        $stack7 = $stack6 cmp $stack5;

        if $stack7 != 0 goto label4;

        $stack8 = 1;

        goto label5;

     label4:
        $stack8 = 0;

     label5:
        return $stack8;
    }

    public int hashCode()
    {
        ComparableVersion$LongItem this;
        long $stack1, $stack2, $stack3, $stack4;
        int $stack5;
        org.apache.maven.artifact.versioning.ComparableVersion$LongItem $r0, $r1;

        this := @this: ComparableVersion$LongItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) this;

        $stack3 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value>;

        $r1 = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) this;

        $stack1 = $r1.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value>;

        $stack2 = $stack1 >>> 32;

        $stack4 = $stack3 ^ $stack2;

        $stack5 = (int) $stack4;

        return $stack5;
    }

    public java.lang.String toString()
    {
        ComparableVersion$LongItem this;
        long $stack1;
        java.lang.String $stack2;
        org.apache.maven.artifact.versioning.ComparableVersion$LongItem $r0;

        this := @this: ComparableVersion$LongItem;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersion$LongItem) this;

        $stack1 = $r0.<org.apache.maven.artifact.versioning.ComparableVersion$LongItem: long value>;

        $stack2 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($stack1);

        return $stack2;
    }
}
