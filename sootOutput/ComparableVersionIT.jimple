public class ComparableVersionIT extends java.lang.Object
{

    public void <init>()
    {
        ComparableVersionIT this;

        this := @this: ComparableVersionIT;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void test() throws java.lang.Exception
    {
        java.lang.String[] $stack1;
        java.nio.file.Path $stack2;
        ComparableVersionIT this;
        org.apache.maven.artifact.versioning.ComparableVersionIT$1 $u0;
        org.apache.maven.artifact.versioning.ComparableVersionIT $r0;
        java.nio.file.FileVisitor $r1;

        this := @this: ComparableVersionIT;

        $stack1 = newarray (java.lang.String)[0];

        $stack2 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>("target", $stack1);

        $u0 = new org.apache.maven.artifact.versioning.ComparableVersionIT$1;

        $r0 = (org.apache.maven.artifact.versioning.ComparableVersionIT) this;

        specialinvoke $u0.<org.apache.maven.artifact.versioning.ComparableVersionIT$1: void <init>(org.apache.maven.artifact.versioning.ComparableVersionIT)>($r0);

        $r1 = (java.nio.file.FileVisitor) $u0;

        staticinvoke <java.nio.file.Files: java.nio.file.Path walkFileTree(java.nio.file.Path,java.nio.file.FileVisitor)>($stack2, $r1);

        return;
    }
}
