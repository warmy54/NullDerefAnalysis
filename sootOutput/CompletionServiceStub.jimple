public class CompletionServiceStub extends java.lang.Object implements java.util.concurrent.CompletionService
{
    java.util.List projectBuildFutureTasks;
    final boolean finishImmediately;

    public int size()
    {
        CompletionServiceStub this;
        java.util.List $stack1;
        int $stack2;
        org.apache.maven.lifecycle.internal.stub.CompletionServiceStub $r0;

        this := @this: CompletionServiceStub;

        $r0 = (org.apache.maven.lifecycle.internal.stub.CompletionServiceStub) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.stub.CompletionServiceStub: java.util.List projectBuildFutureTasks>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public void <init>(boolean)
    {
        CompletionServiceStub this;
        java.util.List $stack3;
        boolean finishImmediately;
        java.util.ArrayList $u0;
        org.apache.maven.lifecycle.internal.stub.CompletionServiceStub $r0, $r1;

        this := @this: CompletionServiceStub;

        finishImmediately := @parameter0: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $stack3 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>($u0);

        $r0 = (org.apache.maven.lifecycle.internal.stub.CompletionServiceStub) this;

        $r0.<org.apache.maven.lifecycle.internal.stub.CompletionServiceStub: java.util.List projectBuildFutureTasks> = $stack3;

        $r1 = (org.apache.maven.lifecycle.internal.stub.CompletionServiceStub) this;

        $r1.<org.apache.maven.lifecycle.internal.stub.CompletionServiceStub: boolean finishImmediately> = finishImmediately;

        return;
    }

    public java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        java.util.concurrent.Callable task;
        CompletionServiceStub this;
        java.util.List $stack4;
        boolean $stack6;
        java.util.concurrent.FutureTask $u0;
        org.apache.maven.lifecycle.internal.stub.CompletionServiceStub $r0, $r1;

        this := @this: CompletionServiceStub;

        task := @parameter0: java.util.concurrent.Callable;

        $u0 = new java.util.concurrent.FutureTask;

        specialinvoke $u0.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(task);

        $r0 = (org.apache.maven.lifecycle.internal.stub.CompletionServiceStub) this;

        $stack4 = $r0.<org.apache.maven.lifecycle.internal.stub.CompletionServiceStub: java.util.List projectBuildFutureTasks>;

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($u0);

        $r1 = (org.apache.maven.lifecycle.internal.stub.CompletionServiceStub) this;

        $stack6 = $r1.<org.apache.maven.lifecycle.internal.stub.CompletionServiceStub: boolean finishImmediately>;

        if $stack6 == 0 goto label1;

        virtualinvoke $u0.<java.util.concurrent.FutureTask: void run()>();

     label1:
        return $u0;
    }

    public java.util.concurrent.Future submit(java.lang.Runnable, org.apache.maven.lifecycle.internal.ProjectSegment)
    {
        java.lang.Runnable task;
        org.apache.maven.lifecycle.internal.ProjectSegment result;
        CompletionServiceStub this;
        java.util.List $stack5;
        boolean $stack7;
        java.util.concurrent.FutureTask $u0;
        org.apache.maven.lifecycle.internal.stub.CompletionServiceStub $r0, $r1;

        this := @this: CompletionServiceStub;

        task := @parameter0: java.lang.Runnable;

        result := @parameter1: org.apache.maven.lifecycle.internal.ProjectSegment;

        $u0 = new java.util.concurrent.FutureTask;

        specialinvoke $u0.<java.util.concurrent.FutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(task, result);

        $r0 = (org.apache.maven.lifecycle.internal.stub.CompletionServiceStub) this;

        $stack5 = $r0.<org.apache.maven.lifecycle.internal.stub.CompletionServiceStub: java.util.List projectBuildFutureTasks>;

        interfaceinvoke $stack5.<java.util.List: boolean add(java.lang.Object)>($u0);

        $r1 = (org.apache.maven.lifecycle.internal.stub.CompletionServiceStub) this;

        $stack7 = $r1.<org.apache.maven.lifecycle.internal.stub.CompletionServiceStub: boolean finishImmediately>;

        if $stack7 == 0 goto label1;

        virtualinvoke $u0.<java.util.concurrent.FutureTask: void run()>();

     label1:
        return $u0;
    }

    public java.util.concurrent.Future take() throws java.lang.InterruptedException
    {
        CompletionServiceStub this;

        this := @this: CompletionServiceStub;

        return null;
    }

    public java.util.concurrent.Future poll()
    {
        CompletionServiceStub this;

        this := @this: CompletionServiceStub;

        return null;
    }

    public java.util.concurrent.Future poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        CompletionServiceStub this;
        long timeout;
        java.util.concurrent.TimeUnit unit;

        this := @this: CompletionServiceStub;

        timeout := @parameter0: long;

        unit := @parameter1: java.util.concurrent.TimeUnit;

        return null;
    }

    public volatile java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)
    {
        CompletionServiceStub this;
        java.lang.Runnable l1;
        java.lang.Object l2;
        org.apache.maven.lifecycle.internal.ProjectSegment $stack3;
        java.util.concurrent.Future $stack4;
        org.apache.maven.lifecycle.internal.stub.CompletionServiceStub $r0;

        this := @this: CompletionServiceStub;

        l1 := @parameter0: java.lang.Runnable;

        l2 := @parameter1: java.lang.Object;

        $stack3 = (org.apache.maven.lifecycle.internal.ProjectSegment) l2;

        $r0 = (org.apache.maven.lifecycle.internal.stub.CompletionServiceStub) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.lifecycle.internal.stub.CompletionServiceStub: java.util.concurrent.Future submit(java.lang.Runnable,org.apache.maven.lifecycle.internal.ProjectSegment)>(l1, $stack3);

        return $stack4;
    }
}
