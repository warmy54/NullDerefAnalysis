public class ComplexActivationTest extends java.lang.Object
{

    public void <init>()
    {
        ComplexActivationTest this;

        this := @this: ComplexActivationTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private java.io.File getPom(java.lang.String)
    {
        java.io.File $stack2, $stack8;
        java.lang.StringBuilder $stack3, $stack4, $stack5, $stack6;
        java.lang.String name, $stack7;
        ComplexActivationTest this;

        this := @this: ComplexActivationTest;

        name := @parameter0: java.lang.String;

        $stack2 = new java.io.File;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src/test/resources/poms/factory/");

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack2.<java.io.File: void <init>(java.lang.String)>($stack7);

        $stack8 = virtualinvoke $stack2.<java.io.File: java.io.File getAbsoluteFile()>();

        return $stack8;
    }

    public void testAndConditionInActivation() throws java.lang.Exception
    {
        org.apache.maven.model.building.DefaultModelBuilder builder;
        ComplexActivationTest this;
        java.io.File $stack11;
        org.apache.maven.model.building.ModelBuildingResult result;
        org.apache.maven.model.Model $stack15, $stack17, $stack20;
        java.util.Properties $stack18, $stack21, $u0;
        java.lang.Object $stack19, $stack22;
        org.apache.maven.model.building.DefaultModelBuilderFactory $u1;
        org.apache.maven.model.building.DefaultModelBuildingRequest $u2;
        org.apache.maven.model.building.ComplexActivationTest $r0;
        org.apache.maven.model.building.ModelBuilder $r1;
        org.apache.maven.model.building.ModelBuildingRequest $r2;

        this := @this: ComplexActivationTest;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        virtualinvoke $u0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("myproperty", "test");

        $u1 = new org.apache.maven.model.building.DefaultModelBuilderFactory;

        specialinvoke $u1.<org.apache.maven.model.building.DefaultModelBuilderFactory: void <init>()>();

        builder = virtualinvoke $u1.<org.apache.maven.model.building.DefaultModelBuilderFactory: org.apache.maven.model.building.DefaultModelBuilder newInstance()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(builder);

        $u2 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        specialinvoke $u2.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setProcessPlugins(boolean)>(1);

        $r0 = (org.apache.maven.model.building.ComplexActivationTest) this;

        $stack11 = specialinvoke $r0.<org.apache.maven.model.building.ComplexActivationTest: java.io.File getPom(java.lang.String)>("complex");

        virtualinvoke $u2.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setPomFile(java.io.File)>($stack11);

        virtualinvoke $u2.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setSystemProperties(java.util.Properties)>($u0);

        $r1 = (org.apache.maven.model.building.ModelBuilder) builder;

        $r2 = (org.apache.maven.model.building.ModelBuildingRequest) $u2;

        result = interfaceinvoke $r1.<org.apache.maven.model.building.ModelBuilder: org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest)>($r2);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(result);

        $stack15 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getEffectiveModel()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack15);

        $stack17 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getEffectiveModel()>();

        $stack18 = virtualinvoke $stack17.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        $stack19 = virtualinvoke $stack18.<java.util.Properties: java.lang.Object get(java.lang.Object)>("profile.file");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("activated-1", $stack19);

        $stack20 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getEffectiveModel()>();

        $stack21 = virtualinvoke $stack20.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        $stack22 = virtualinvoke $stack21.<java.util.Properties: java.lang.Object get(java.lang.Object)>("profile.miss");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNull(java.lang.Object)>($stack22);

        return;
    }
}
