public class ConsoleMavenTransferListener extends org.apache.maven.cli.transfer.AbstractMavenTransferListener
{
    private java.util.Map transfers;
    private boolean printResourceNames;
    private int lastLength;

    public void <init>(java.io.PrintStream, boolean)
    {
        ConsoleMavenTransferListener this;
        java.io.PrintStream out;
        java.util.Map $stack4;
        boolean printResourceNames;
        java.util.LinkedHashMap $u0;
        org.apache.maven.cli.transfer.ConsoleMavenTransferListener $r0, $r1;

        this := @this: ConsoleMavenTransferListener;

        out := @parameter0: java.io.PrintStream;

        printResourceNames := @parameter1: boolean;

        specialinvoke this.<org.apache.maven.cli.transfer.AbstractMavenTransferListener: void <init>(java.io.PrintStream)>(out);

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $stack4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($u0);

        $r0 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $r0.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.util.Map transfers> = $stack4;

        $r1 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $r1.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: boolean printResourceNames> = printResourceNames;

        return;
    }

    public synchronized void transferInitiated(org.eclipse.aether.transfer.TransferEvent)
    {
        ConsoleMavenTransferListener this;
        org.eclipse.aether.transfer.TransferEvent event;
        org.apache.maven.cli.transfer.ConsoleMavenTransferListener $r0;

        this := @this: ConsoleMavenTransferListener;

        event := @parameter0: org.eclipse.aether.transfer.TransferEvent;

        $r0 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        specialinvoke $r0.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: void overridePreviousTransfer(org.eclipse.aether.transfer.TransferEvent)>(event);

        specialinvoke this.<org.apache.maven.cli.transfer.AbstractMavenTransferListener: void transferInitiated(org.eclipse.aether.transfer.TransferEvent)>(event);

        return;
    }

    public synchronized void transferCorrupted(org.eclipse.aether.transfer.TransferEvent) throws org.eclipse.aether.transfer.TransferCancelledException
    {
        ConsoleMavenTransferListener this;
        org.eclipse.aether.transfer.TransferEvent event;
        org.apache.maven.cli.transfer.ConsoleMavenTransferListener $r0;

        this := @this: ConsoleMavenTransferListener;

        event := @parameter0: org.eclipse.aether.transfer.TransferEvent;

        $r0 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        specialinvoke $r0.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: void overridePreviousTransfer(org.eclipse.aether.transfer.TransferEvent)>(event);

        specialinvoke this.<org.apache.maven.cli.transfer.AbstractMavenTransferListener: void transferCorrupted(org.eclipse.aether.transfer.TransferEvent)>(event);

        return;
    }

    public synchronized void transferProgressed(org.eclipse.aether.transfer.TransferEvent) throws org.eclipse.aether.transfer.TransferCancelledException
    {
        org.eclipse.aether.transfer.TransferEvent event;
        org.eclipse.aether.transfer.TransferResource resource, $stack36, $stack40;
        ConsoleMavenTransferListener this;
        java.util.Map $stack12, $stack18, $stack22, $stack23;
        long $stack13, total, $stack42;
        java.lang.Long $stack14, complete;
        java.lang.StringBuilder $stack17, $stack20, $u0;
        int $stack19, $stack28, $stack29, $stack30, pad#2;
        java.util.Set $stack24;
        java.util.Iterator entries;
        boolean $stack26, $stack45;
        java.io.PrintStream $stack32, $stack33;
        java.lang.Object $stack34, $stack35, $stack38, $stack39;
        java.util.Map$Entry entry;
        java.lang.String $stack41, $stack43;
        java.lang.Throwable $stack48;
        org.apache.maven.cli.transfer.ConsoleMavenTransferListener $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: ConsoleMavenTransferListener;

        event := @parameter0: org.eclipse.aether.transfer.TransferEvent;

        resource = virtualinvoke event.<org.eclipse.aether.transfer.TransferEvent: org.eclipse.aether.transfer.TransferResource getResource()>();

        $r0 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack12 = $r0.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.util.Map transfers>;

        $stack13 = virtualinvoke event.<org.eclipse.aether.transfer.TransferEvent: long getTransferredBytes()>();

        $stack14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($stack13);

        interfaceinvoke $stack12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(resource, $stack14);

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(128);

        $stack17 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Progress (");

        $r1 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack18 = $r1.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.util.Map transfers>;

        $stack19 = interfaceinvoke $stack18.<java.util.Map: int size()>();

        $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack19);

        virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("): ");

        $r2 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack22 = $r2.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.util.Map transfers>;

        entermonitor $stack22;

     label1:
        $r3 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack23 = $r3.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.util.Map transfers>;

        $stack24 = interfaceinvoke $stack23.<java.util.Map: java.util.Set entrySet()>();

        entries = interfaceinvoke $stack24.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $stack26 = interfaceinvoke entries.<java.util.Iterator: boolean hasNext()>();

        if $stack26 == 0 goto label4;

        $stack34 = interfaceinvoke entries.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $stack34;

        $stack35 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack36 = (org.eclipse.aether.transfer.TransferResource) $stack35;

        total = virtualinvoke $stack36.<org.eclipse.aether.transfer.TransferResource: long getContentLength()>();

        $stack38 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        complete = (java.lang.Long) $stack38;

        $stack39 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack40 = (org.eclipse.aether.transfer.TransferResource) $stack39;

        $stack41 = virtualinvoke $stack40.<org.eclipse.aether.transfer.TransferResource: java.lang.String getResourceName()>();

        $stack42 = virtualinvoke complete.<java.lang.Long: long longValue()>();

        $r4 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack43 = specialinvoke $r4.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.lang.String getStatus(java.lang.String,long,long)>($stack41, $stack42, total);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43);

        $stack45 = interfaceinvoke entries.<java.util.Iterator: boolean hasNext()>();

        if $stack45 == 0 goto label3;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" | ");

     label3:
        goto label2;

     label4:
        exitmonitor $stack22;

     label5:
        goto label8;

     label6:
        $stack48 := @caughtexception;

        exitmonitor $stack22;

     label7:
        throw $stack48;

     label8:
        $r5 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack28 = $r5.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: int lastLength>;

        $stack29 = virtualinvoke $u0.<java.lang.StringBuilder: int length()>();

        pad#2 = $stack28 - $stack29;

        $stack30 = virtualinvoke $u0.<java.lang.StringBuilder: int length()>();

        $r6 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $r6.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: int lastLength> = $stack30;

        $r7 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        specialinvoke $r7.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: void pad(java.lang.StringBuilder,int)>($u0, pad#2);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        $r8 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack32 = $r8.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.io.PrintStream out>;

        virtualinvoke $stack32.<java.io.PrintStream: void print(java.lang.Object)>($u0);

        $r9 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack33 = $r9.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.io.PrintStream out>;

        virtualinvoke $stack33.<java.io.PrintStream: void flush()>();

        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private java.lang.String getStatus(java.lang.String, long, long)
    {
        java.util.Locale $stack9;
        ConsoleMavenTransferListener this;
        boolean $stack11, $stack14;
        long complete, total;
        java.lang.String $stack12, $stack15, resourceName, $stack18;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat $u0;
        java.lang.StringBuilder $u1;
        org.apache.maven.cli.transfer.ConsoleMavenTransferListener $r0, $r1;

        this := @this: ConsoleMavenTransferListener;

        resourceName := @parameter0: java.lang.String;

        complete := @parameter1: long;

        total := @parameter2: long;

        $u0 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        $stack9 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $u0.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: void <init>(java.util.Locale)>($stack9);

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack11 = $r0.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: boolean printResourceNames>;

        if $stack11 == 0 goto label1;

        $stack18 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String substringAfterLast(java.lang.String,java.lang.String)>(resourceName, "/");

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

     label1:
        $stack12 = virtualinvoke $u0.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(complete, total);

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $r1 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack14 = $r1.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: boolean printResourceNames>;

        if $stack14 == 0 goto label2;

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label2:
        $stack15 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack15;
    }

    private void pad(java.lang.StringBuilder, int)
    {
        java.lang.String block;
        int $stack5, n, spaces;
        java.lang.StringBuilder buffer;
        ConsoleMavenTransferListener this;

        this := @this: ConsoleMavenTransferListener;

        buffer := @parameter0: java.lang.StringBuilder;

        spaces := @parameter1: int;

        block = "                                        ";

     label1:
        if spaces <= 0 goto label2;

        $stack5 = virtualinvoke block.<java.lang.String: int length()>();

        n = staticinvoke <java.lang.Math: int min(int,int)>(spaces, $stack5);

        virtualinvoke buffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>("                                        ", 0, n);

        spaces = spaces - n;

        goto label1;

     label2:
        return;
    }

    public synchronized void transferSucceeded(org.eclipse.aether.transfer.TransferEvent)
    {
        ConsoleMavenTransferListener this;
        org.eclipse.aether.transfer.TransferEvent event;
        java.util.Map $stack2;
        org.eclipse.aether.transfer.TransferResource $stack3;
        org.apache.maven.cli.transfer.ConsoleMavenTransferListener $r0, $r1;

        this := @this: ConsoleMavenTransferListener;

        event := @parameter0: org.eclipse.aether.transfer.TransferEvent;

        $r0 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack2 = $r0.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.util.Map transfers>;

        $stack3 = virtualinvoke event.<org.eclipse.aether.transfer.TransferEvent: org.eclipse.aether.transfer.TransferResource getResource()>();

        interfaceinvoke $stack2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($stack3);

        $r1 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        specialinvoke $r1.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: void overridePreviousTransfer(org.eclipse.aether.transfer.TransferEvent)>(event);

        specialinvoke this.<org.apache.maven.cli.transfer.AbstractMavenTransferListener: void transferSucceeded(org.eclipse.aether.transfer.TransferEvent)>(event);

        return;
    }

    public synchronized void transferFailed(org.eclipse.aether.transfer.TransferEvent)
    {
        ConsoleMavenTransferListener this;
        org.eclipse.aether.transfer.TransferEvent event;
        java.util.Map $stack2;
        org.eclipse.aether.transfer.TransferResource $stack3;
        org.apache.maven.cli.transfer.ConsoleMavenTransferListener $r0, $r1;

        this := @this: ConsoleMavenTransferListener;

        event := @parameter0: org.eclipse.aether.transfer.TransferEvent;

        $r0 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack2 = $r0.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.util.Map transfers>;

        $stack3 = virtualinvoke event.<org.eclipse.aether.transfer.TransferEvent: org.eclipse.aether.transfer.TransferResource getResource()>();

        interfaceinvoke $stack2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($stack3);

        $r1 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        specialinvoke $r1.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: void overridePreviousTransfer(org.eclipse.aether.transfer.TransferEvent)>(event);

        specialinvoke this.<org.apache.maven.cli.transfer.AbstractMavenTransferListener: void transferFailed(org.eclipse.aether.transfer.TransferEvent)>(event);

        return;
    }

    private void overridePreviousTransfer(org.eclipse.aether.transfer.TransferEvent)
    {
        ConsoleMavenTransferListener this;
        int $stack3, $stack5;
        java.io.PrintStream $stack7, $stack8;
        org.eclipse.aether.transfer.TransferEvent event;
        java.lang.StringBuilder $u0;
        org.apache.maven.cli.transfer.ConsoleMavenTransferListener $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: ConsoleMavenTransferListener;

        event := @parameter0: org.eclipse.aether.transfer.TransferEvent;

        $r0 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack3 = $r0.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: int lastLength>;

        if $stack3 <= 0 goto label1;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(128);

        $r1 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack5 = $r1.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: int lastLength>;

        $r2 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        specialinvoke $r2.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: void pad(java.lang.StringBuilder,int)>($u0, $stack5);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        $r3 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack7 = $r3.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.io.PrintStream out>;

        virtualinvoke $stack7.<java.io.PrintStream: void print(java.lang.Object)>($u0);

        $r4 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $stack8 = $r4.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: java.io.PrintStream out>;

        virtualinvoke $stack8.<java.io.PrintStream: void flush()>();

        $r5 = (org.apache.maven.cli.transfer.ConsoleMavenTransferListener) this;

        $r5.<org.apache.maven.cli.transfer.ConsoleMavenTransferListener: int lastLength> = 0;

     label1:
        return;
    }
}
