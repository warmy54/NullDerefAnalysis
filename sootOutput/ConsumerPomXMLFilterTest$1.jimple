class ConsumerPomXMLFilterTest$1 extends org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory
{
    final org.apache.maven.model.transform.ConsumerPomXMLFilterTest this$0;

    void <init>(org.apache.maven.model.transform.ConsumerPomXMLFilterTest, java.util.function.Consumer, boolean)
    {
        ConsumerPomXMLFilterTest$1 this;
        org.apache.maven.model.transform.ConsumerPomXMLFilterTest this$0;
        java.util.function.Consumer arg0;
        boolean arg1;
        org.apache.maven.model.transform.ConsumerPomXMLFilterTest$1 $r0;

        this := @this: ConsumerPomXMLFilterTest$1;

        this$0 := @parameter0: org.apache.maven.model.transform.ConsumerPomXMLFilterTest;

        arg0 := @parameter1: java.util.function.Consumer;

        arg1 := @parameter2: boolean;

        $r0 = (org.apache.maven.model.transform.ConsumerPomXMLFilterTest$1) this;

        $r0.<org.apache.maven.model.transform.ConsumerPomXMLFilterTest$1: org.apache.maven.model.transform.ConsumerPomXMLFilterTest this$0> = this$0;

        specialinvoke this.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: void <init>(java.util.function.Consumer,boolean)>(arg0, arg1);

        return;
    }

    protected java.util.function.Function getRelativePathMapper()
    {
        ConsumerPomXMLFilterTest$1 this;

        this := @this: ConsumerPomXMLFilterTest$1;

        return null;
    }

    protected java.util.function.BiFunction getDependencyKeyToVersionMapper()
    {
        ConsumerPomXMLFilterTest$1 this;

        this := @this: ConsumerPomXMLFilterTest$1;

        return null;
    }

    protected java.util.Optional getSha1()
    {
        java.util.Optional $stack1;
        ConsumerPomXMLFilterTest$1 this;

        this := @this: ConsumerPomXMLFilterTest$1;

        $stack1 = staticinvoke <java.util.Optional: java.util.Optional empty()>();

        return $stack1;
    }

    protected java.util.Optional getRevision()
    {
        java.util.Optional $stack1;
        ConsumerPomXMLFilterTest$1 this;

        this := @this: ConsumerPomXMLFilterTest$1;

        $stack1 = staticinvoke <java.util.Optional: java.util.Optional empty()>();

        return $stack1;
    }

    protected java.util.Optional getChangelist()
    {
        java.util.Optional $stack1;
        ConsumerPomXMLFilterTest$1 this;

        this := @this: ConsumerPomXMLFilterTest$1;

        $stack1 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>("CL");

        return $stack1;
    }
}
