public class ControlStatementFiller extends java.lang.Object
{

    public void <init>()
    {
        ControlStatementFiller this;

        this := @this: ControlStatementFiller;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void fill(org.ooc.frontend.model.Module, org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader, org.ooc.frontend.model.NodeList)
    {
        org.ooc.frontend.model.tokens.TokenReader reader;
        java.lang.Object $stack5, $stack10, $stack14, $stack22;
        org.ooc.frontend.model.tokens.Token $stack6, $stack15;
        byte $stack7, $stack16;
        org.ooc.frontend.model.Module module;
        org.ubi.SourceReader sReader;
        org.ooc.frontend.model.NodeList body;
        boolean $stack8, $stack18, $stack19, hasBrack, $stack13;
        org.ubi.Locatable $stack11, $stack23;
        org.ubi.FileLocation $stack12, $stack24;
        org.ubi.CompilationFailedError $u0, $u1;
        java.lang.Throwable $r0, $r1;

        module := @parameter0: org.ooc.frontend.model.Module;

        sReader := @parameter1: org.ubi.SourceReader;

        reader := @parameter2: org.ooc.frontend.model.tokens.TokenReader;

        body := @parameter3: org.ooc.frontend.model.NodeList;

        hasBrack = 0;

        $stack5 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack6 = (org.ooc.frontend.model.tokens.Token) $stack5;

        $stack7 = $stack6.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack7 != 84 goto label1;

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        hasBrack = 1;

     label1:
        if hasBrack == 0 goto label5;

     label2:
        $stack13 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: boolean hasNext()>();

        if $stack13 == 0 goto label4;

        $stack14 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack15 = (org.ooc.frontend.model.tokens.Token) $stack14;

        $stack16 = $stack15.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack16 == 85 goto label4;

        $stack18 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: boolean skipWhitespace()>();

        if $stack18 == 0 goto label3;

        goto label2;

     label3:
        $stack19 = staticinvoke <org.ooc.frontend.parser.LineParser: boolean fill(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,org.ooc.frontend.model.NodeList)>(module, sReader, reader, body);

        if $stack19 != 0 goto label2;

        $u0 = new org.ubi.CompilationFailedError;

        $stack22 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack23 = (org.ubi.Locatable) $stack22;

        $stack24 = virtualinvoke sReader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(org.ubi.Locatable)>($stack23);

        specialinvoke $u0.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack24, "Expected line in code block");

        $r0 = (java.lang.Throwable) $u0;

        throw $r0;

     label4:
        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        goto label6;

     label5:
        $stack8 = staticinvoke <org.ooc.frontend.parser.LineParser: boolean fill(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,org.ooc.frontend.model.NodeList)>(module, sReader, reader, body);

        if $stack8 != 0 goto label6;

        $u1 = new org.ubi.CompilationFailedError;

        $stack10 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack11 = (org.ubi.Locatable) $stack10;

        $stack12 = virtualinvoke sReader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(org.ubi.Locatable)>($stack11);

        specialinvoke $u1.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack12, "Expected line inside of bracket-less block");

        $r1 = (java.lang.Throwable) $u1;

        throw $r1;

     label6:
        return;
    }
}
