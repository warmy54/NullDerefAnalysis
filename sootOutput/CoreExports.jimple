public class CoreExports extends java.lang.Object
{
    private final java.util.Set artifacts;
    private final java.util.Map packages;

    public void <init>(org.apache.maven.extension.internal.CoreExtensionEntry)
    {
        CoreExports this;
        org.apache.maven.extension.internal.CoreExtensionEntry entry;
        org.codehaus.plexus.classworlds.realm.ClassRealm $stack2;
        java.util.Set $stack3, $stack4;
        org.apache.maven.extension.internal.CoreExports $r0;

        this := @this: CoreExports;

        entry := @parameter0: org.apache.maven.extension.internal.CoreExtensionEntry;

        $stack2 = virtualinvoke entry.<org.apache.maven.extension.internal.CoreExtensionEntry: org.codehaus.plexus.classworlds.realm.ClassRealm getClassRealm()>();

        $stack3 = virtualinvoke entry.<org.apache.maven.extension.internal.CoreExtensionEntry: java.util.Set getExportedArtifacts()>();

        $stack4 = virtualinvoke entry.<org.apache.maven.extension.internal.CoreExtensionEntry: java.util.Set getExportedPackages()>();

        $r0 = (org.apache.maven.extension.internal.CoreExports) this;

        specialinvoke $r0.<org.apache.maven.extension.internal.CoreExports: void <init>(org.codehaus.plexus.classworlds.realm.ClassRealm,java.util.Set,java.util.Set)>($stack2, $stack3, $stack4);

        return;
    }

    public void <init>(org.codehaus.plexus.classworlds.realm.ClassRealm, java.util.Set, java.util.Set)
    {
        CoreExports this;
        java.util.Set exportedPackages, exportedArtifacts, $stack11;
        java.util.Iterator l5;
        boolean $stack9;
        java.util.Map $stack13;
        java.lang.Object $stack14;
        java.lang.String pkg;
        org.codehaus.plexus.classworlds.realm.ClassRealm realm;
        java.util.LinkedHashMap $u0;
        java.util.HashSet $u1;
        java.util.HashMap $u2;
        org.apache.maven.extension.internal.CoreExports $r0, $r1;

        this := @this: CoreExports;

        realm := @parameter0: org.codehaus.plexus.classworlds.realm.ClassRealm;

        exportedArtifacts := @parameter1: java.util.Set;

        exportedPackages := @parameter2: java.util.Set;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        l5 = interfaceinvoke exportedPackages.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label2;

        $stack14 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        pkg = (java.lang.String) $stack14;

        interfaceinvoke $u0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(pkg, realm);

        goto label1;

     label2:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>(java.util.Collection)>(exportedArtifacts);

        $stack11 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($u1);

        $r0 = (org.apache.maven.extension.internal.CoreExports) this;

        $r0.<org.apache.maven.extension.internal.CoreExports: java.util.Set artifacts> = $stack11;

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>(java.util.Map)>($u0);

        $stack13 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($u2);

        $r1 = (org.apache.maven.extension.internal.CoreExports) this;

        $r1.<org.apache.maven.extension.internal.CoreExports: java.util.Map packages> = $stack13;

        return;
    }

    public java.util.Set getExportedArtifacts()
    {
        CoreExports this;
        java.util.Set $stack1;
        org.apache.maven.extension.internal.CoreExports $r0;

        this := @this: CoreExports;

        $r0 = (org.apache.maven.extension.internal.CoreExports) this;

        $stack1 = $r0.<org.apache.maven.extension.internal.CoreExports: java.util.Set artifacts>;

        return $stack1;
    }

    public java.util.Map getExportedPackages()
    {
        CoreExports this;
        java.util.Map $stack1;
        org.apache.maven.extension.internal.CoreExports $r0;

        this := @this: CoreExports;

        $r0 = (org.apache.maven.extension.internal.CoreExports) this;

        $stack1 = $r0.<org.apache.maven.extension.internal.CoreExports: java.util.Map packages>;

        return $stack1;
    }
}
