public class CoreExtensionEntry extends java.lang.Object
{
    private final org.codehaus.plexus.classworlds.realm.ClassRealm realm;
    private final java.util.Set artifacts;
    private final java.util.Set packages;
    private static final org.apache.maven.project.ExtensionDescriptorBuilder BUILDER;

    public void <init>(org.codehaus.plexus.classworlds.realm.ClassRealm, java.util.Collection, java.util.Collection)
    {
        CoreExtensionEntry this;
        org.codehaus.plexus.classworlds.realm.ClassRealm realm;
        java.util.Collection artifacts, packages;
        java.util.Set $stack5, $stack7;
        java.util.HashSet $u0, $u1;
        org.apache.maven.extension.internal.CoreExtensionEntry $r0, $r1, $r2;

        this := @this: CoreExtensionEntry;

        realm := @parameter0: org.codehaus.plexus.classworlds.realm.ClassRealm;

        artifacts := @parameter1: java.util.Collection;

        packages := @parameter2: java.util.Collection;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.extension.internal.CoreExtensionEntry) this;

        $r0.<org.apache.maven.extension.internal.CoreExtensionEntry: org.codehaus.plexus.classworlds.realm.ClassRealm realm> = realm;

        $u0 = new java.util.HashSet;

        specialinvoke $u0.<java.util.HashSet: void <init>(java.util.Collection)>(artifacts);

        $stack5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($u0);

        $r1 = (org.apache.maven.extension.internal.CoreExtensionEntry) this;

        $r1.<org.apache.maven.extension.internal.CoreExtensionEntry: java.util.Set artifacts> = $stack5;

        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>(java.util.Collection)>(packages);

        $stack7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($u1);

        $r2 = (org.apache.maven.extension.internal.CoreExtensionEntry) this;

        $r2.<org.apache.maven.extension.internal.CoreExtensionEntry: java.util.Set packages> = $stack7;

        return;
    }

    public org.codehaus.plexus.classworlds.realm.ClassRealm getClassRealm()
    {
        CoreExtensionEntry this;
        org.codehaus.plexus.classworlds.realm.ClassRealm $stack1;
        org.apache.maven.extension.internal.CoreExtensionEntry $r0;

        this := @this: CoreExtensionEntry;

        $r0 = (org.apache.maven.extension.internal.CoreExtensionEntry) this;

        $stack1 = $r0.<org.apache.maven.extension.internal.CoreExtensionEntry: org.codehaus.plexus.classworlds.realm.ClassRealm realm>;

        return $stack1;
    }

    public java.util.Set getExportedArtifacts()
    {
        CoreExtensionEntry this;
        java.util.Set $stack1;
        org.apache.maven.extension.internal.CoreExtensionEntry $r0;

        this := @this: CoreExtensionEntry;

        $r0 = (org.apache.maven.extension.internal.CoreExtensionEntry) this;

        $stack1 = $r0.<org.apache.maven.extension.internal.CoreExtensionEntry: java.util.Set artifacts>;

        return $stack1;
    }

    public java.util.Set getExportedPackages()
    {
        CoreExtensionEntry this;
        java.util.Set $stack1;
        org.apache.maven.extension.internal.CoreExtensionEntry $r0;

        this := @this: CoreExtensionEntry;

        $r0 = (org.apache.maven.extension.internal.CoreExtensionEntry) this;

        $stack1 = $r0.<org.apache.maven.extension.internal.CoreExtensionEntry: java.util.Set packages>;

        return $stack1;
    }

    public static org.apache.maven.extension.internal.CoreExtensionEntry discoverFrom(org.codehaus.plexus.classworlds.realm.ClassRealm)
    {
        java.util.LinkedHashSet $stack7, $stack8;
        org.codehaus.plexus.classworlds.realm.ClassRealm loader;
        org.apache.maven.project.ExtensionDescriptorBuilder $stack9, $stack17;
        java.lang.String $stack10;
        boolean $stack12;
        org.apache.maven.extension.internal.CoreExtensionEntry $stack13;
        java.lang.Object $stack14;
        java.net.URL $stack15;
        java.io.InputStream is;
        java.util.List $stack19, $stack21;
        java.io.IOException $stack24;
        java.lang.Throwable $stack28, $stack29;
        java.util.Enumeration urls;
        org.apache.maven.project.ExtensionDescriptor descriptor;

        loader := @parameter0: org.codehaus.plexus.classworlds.realm.ClassRealm;

        $stack7 = new java.util.LinkedHashSet;

        specialinvoke $stack7.<java.util.LinkedHashSet: void <init>()>();

        $stack8 = new java.util.LinkedHashSet;

        specialinvoke $stack8.<java.util.LinkedHashSet: void <init>()>();

     label01:
        $stack9 = <org.apache.maven.extension.internal.CoreExtensionEntry: org.apache.maven.project.ExtensionDescriptorBuilder BUILDER>;

        $stack10 = virtualinvoke $stack9.<org.apache.maven.project.ExtensionDescriptorBuilder: java.lang.String getExtensionDescriptorLocation()>();

        urls = virtualinvoke loader.<org.codehaus.plexus.classworlds.realm.ClassRealm: java.util.Enumeration getResources(java.lang.String)>($stack10);

     label02:
        $stack12 = interfaceinvoke urls.<java.util.Enumeration: boolean hasMoreElements()>();

        if $stack12 == 0 goto label11;

        $stack14 = interfaceinvoke urls.<java.util.Enumeration: java.lang.Object nextElement()>();

        $stack15 = (java.net.URL) $stack14;

        is = virtualinvoke $stack15.<java.net.URL: java.io.InputStream openStream()>();

     label03:
        $stack17 = <org.apache.maven.extension.internal.CoreExtensionEntry: org.apache.maven.project.ExtensionDescriptorBuilder BUILDER>;

        descriptor = virtualinvoke $stack17.<org.apache.maven.project.ExtensionDescriptorBuilder: org.apache.maven.project.ExtensionDescriptor build(java.io.InputStream)>(is);

        $stack19 = virtualinvoke descriptor.<org.apache.maven.project.ExtensionDescriptor: java.util.List getExportedArtifacts()>();

        interfaceinvoke $stack7.<java.util.Set: boolean addAll(java.util.Collection)>($stack19);

        $stack21 = virtualinvoke descriptor.<org.apache.maven.project.ExtensionDescriptor: java.util.List getExportedPackages()>();

        interfaceinvoke $stack8.<java.util.Set: boolean addAll(java.util.Collection)>($stack21);

     label04:
        if is == null goto label10;

        virtualinvoke is.<java.io.InputStream: void close()>();

        goto label10;

     label05:
        $stack29 := @caughtexception;

        if is == null goto label09;

     label06:
        virtualinvoke is.<java.io.InputStream: void close()>();

     label07:
        goto label09;

     label08:
        $stack28 := @caughtexception;

        virtualinvoke $stack29.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack28);

     label09:
        throw $stack29;

     label10:
        goto label02;

     label11:
        goto label13;

     label12:
        $stack24 := @caughtexception;

     label13:
        $stack13 = new org.apache.maven.extension.internal.CoreExtensionEntry;

        specialinvoke $stack13.<org.apache.maven.extension.internal.CoreExtensionEntry: void <init>(org.codehaus.plexus.classworlds.realm.ClassRealm,java.util.Collection,java.util.Collection)>(loader, $stack7, $stack8);

        return $stack13;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.IOException from label01 to label11 with label12;
    }

    public static org.apache.maven.extension.internal.CoreExtensionEntry discoverFrom(org.codehaus.plexus.classworlds.realm.ClassRealm, java.util.Collection)
    {
        java.util.LinkedHashSet $stack7, $stack8;
        java.util.Collection classpath;
        boolean $stack10;
        org.apache.maven.extension.internal.CoreExtensionEntry $stack11;
        org.codehaus.plexus.classworlds.realm.ClassRealm loader;
        java.lang.Object $stack12;
        java.io.File entry;
        org.apache.maven.project.ExtensionDescriptorBuilder $stack13;
        org.apache.maven.project.ExtensionDescriptor descriptor;
        java.util.List $stack16, $stack18;
        java.io.IOException $stack20;
        java.util.Iterator l4;

        loader := @parameter0: org.codehaus.plexus.classworlds.realm.ClassRealm;

        classpath := @parameter1: java.util.Collection;

        $stack7 = new java.util.LinkedHashSet;

        specialinvoke $stack7.<java.util.LinkedHashSet: void <init>()>();

        $stack8 = new java.util.LinkedHashSet;

        specialinvoke $stack8.<java.util.LinkedHashSet: void <init>()>();

     label1:
        l4 = interfaceinvoke classpath.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $stack10 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label4;

        $stack12 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.io.File) $stack12;

        $stack13 = <org.apache.maven.extension.internal.CoreExtensionEntry: org.apache.maven.project.ExtensionDescriptorBuilder BUILDER>;

        descriptor = virtualinvoke $stack13.<org.apache.maven.project.ExtensionDescriptorBuilder: org.apache.maven.project.ExtensionDescriptor build(java.io.File)>(entry);

        if descriptor == null goto label3;

        $stack16 = virtualinvoke descriptor.<org.apache.maven.project.ExtensionDescriptor: java.util.List getExportedArtifacts()>();

        interfaceinvoke $stack7.<java.util.Set: boolean addAll(java.util.Collection)>($stack16);

        $stack18 = virtualinvoke descriptor.<org.apache.maven.project.ExtensionDescriptor: java.util.List getExportedPackages()>();

        interfaceinvoke $stack8.<java.util.Set: boolean addAll(java.util.Collection)>($stack18);

     label3:
        goto label2;

     label4:
        goto label6;

     label5:
        $stack20 := @caughtexception;

     label6:
        $stack11 = new org.apache.maven.extension.internal.CoreExtensionEntry;

        specialinvoke $stack11.<org.apache.maven.extension.internal.CoreExtensionEntry: void <init>(org.codehaus.plexus.classworlds.realm.ClassRealm,java.util.Collection,java.util.Collection)>(loader, $stack7, $stack8);

        return $stack11;

        catch java.io.IOException from label1 to label4 with label5;
    }

    static void <clinit>()
    {
        org.apache.maven.project.ExtensionDescriptorBuilder $stack0;

        $stack0 = new org.apache.maven.project.ExtensionDescriptorBuilder;

        specialinvoke $stack0.<org.apache.maven.project.ExtensionDescriptorBuilder: void <init>()>();

        <org.apache.maven.extension.internal.CoreExtensionEntry: org.apache.maven.project.ExtensionDescriptorBuilder BUILDER> = $stack0;

        return;
    }
}
