public class CoreExtensionsXpp3Writer extends java.lang.Object
{
    private static final java.lang.String NAMESPACE;
    private java.lang.String fileComment;

    public void <init>()
    {
        CoreExtensionsXpp3Writer this;
        org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer $r0;

        this := @this: CoreExtensionsXpp3Writer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer) this;

        $r0.<org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String fileComment> = null;

        return;
    }

    public void setFileComment(java.lang.String)
    {
        CoreExtensionsXpp3Writer this;
        java.lang.String fileComment;
        org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer $r0;

        this := @this: CoreExtensionsXpp3Writer;

        fileComment := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer) this;

        $r0.<org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String fileComment> = fileComment;

        return;
    }

    public void write(java.io.Writer, org.apache.maven.cli.internal.extension.model.CoreExtensions) throws java.io.IOException
    {
        java.io.Writer writer;
        org.apache.maven.cli.internal.extension.model.CoreExtensions coreExtensions;
        java.lang.String $stack5;
        CoreExtensionsXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer $r4;

        this := @this: CoreExtensionsXpp3Writer;

        writer := @parameter0: java.io.Writer;

        coreExtensions := @parameter1: org.apache.maven.cli.internal.extension.model.CoreExtensions;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.Writer)>(writer);

        $stack5 = virtualinvoke coreExtensions.<org.apache.maven.cli.internal.extension.model.CoreExtensions: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack5, null);

        $r4 = (org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: void writeCoreExtensions(org.apache.maven.cli.internal.extension.model.CoreExtensions,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(coreExtensions, "extensions", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    public void write(java.io.OutputStream, org.apache.maven.cli.internal.extension.model.CoreExtensions) throws java.io.IOException
    {
        java.io.OutputStream stream;
        org.apache.maven.cli.internal.extension.model.CoreExtensions coreExtensions;
        java.lang.String $stack5, $stack6;
        CoreExtensionsXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer $r4;

        this := @this: CoreExtensionsXpp3Writer;

        stream := @parameter0: java.io.OutputStream;

        coreExtensions := @parameter1: org.apache.maven.cli.internal.extension.model.CoreExtensions;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $stack5 = virtualinvoke coreExtensions.<org.apache.maven.cli.internal.extension.model.CoreExtensions: java.lang.String getModelEncoding()>();

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(stream, $stack5);

        $stack6 = virtualinvoke coreExtensions.<org.apache.maven.cli.internal.extension.model.CoreExtensions: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack6, null);

        $r4 = (org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: void writeCoreExtensions(org.apache.maven.cli.internal.extension.model.CoreExtensions,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(coreExtensions, "extensions", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    private void writeCoreExtension(org.apache.maven.cli.internal.extension.model.CoreExtension, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack12, $stack14, $stack20, $stack22, $stack27, $stack29;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack11, $stack13, $stack15, $stack19, $stack21, $stack23, $stack26, $stack28, $stack30;
        org.apache.maven.cli.internal.extension.model.CoreExtension coreExtension;
        CoreExtensionsXpp3Writer this;

        this := @this: CoreExtensionsXpp3Writer;

        coreExtension := @parameter0: org.apache.maven.cli.internal.extension.model.CoreExtension;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke coreExtension.<org.apache.maven.cli.internal.extension.model.CoreExtension: java.lang.String getGroupId()>();

        if $stack6 == null goto label1;

        $stack26 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "groupId");

        $stack28 = virtualinvoke coreExtension.<org.apache.maven.cli.internal.extension.model.CoreExtension: java.lang.String getGroupId()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "groupId");

     label1:
        $stack7 = virtualinvoke coreExtension.<org.apache.maven.cli.internal.extension.model.CoreExtension: java.lang.String getArtifactId()>();

        if $stack7 == null goto label2;

        $stack19 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "artifactId");

        $stack21 = virtualinvoke coreExtension.<org.apache.maven.cli.internal.extension.model.CoreExtension: java.lang.String getArtifactId()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "artifactId");

     label2:
        $stack8 = virtualinvoke coreExtension.<org.apache.maven.cli.internal.extension.model.CoreExtension: java.lang.String getVersion()>();

        if $stack8 == null goto label3;

        $stack11 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        $stack12 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack11, "version");

        $stack13 = virtualinvoke coreExtension.<org.apache.maven.cli.internal.extension.model.CoreExtension: java.lang.String getVersion()>();

        $stack14 = interfaceinvoke $stack12.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack13);

        $stack15 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack15, "version");

     label3:
        $stack9 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writeCoreExtensions(org.apache.maven.cli.internal.extension.model.CoreExtensions, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        CoreExtensionsXpp3Writer this;
        java.lang.String $stack6, tagName, $stack7, $stack22, $stack11;
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        org.apache.maven.cli.internal.extension.model.CoreExtensions coreExtensions;
        java.util.List $stack10, $stack13, $stack17;
        int $stack14;
        java.util.Iterator iter;
        boolean $stack19;
        java.lang.Object $stack20;
        org.apache.maven.cli.internal.extension.model.CoreExtension o;
        org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer $r0, $r1, $r2;

        this := @this: CoreExtensionsXpp3Writer;

        coreExtensions := @parameter0: org.apache.maven.cli.internal.extension.model.CoreExtensions;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $r0 = (org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer) this;

        $stack6 = $r0.<org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String fileComment>;

        if $stack6 == null goto label1;

        $r1 = (org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer) this;

        $stack22 = $r1.<org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String fileComment>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void comment(java.lang.String)>($stack22);

     label1:
        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("", "http://maven.apache.org/EXTENSIONS/1.0.0");

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("xsi", "http://www.w3.org/2001/XMLSchema-instance");

        $stack7 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "xsi:schemaLocation", "http://maven.apache.org/EXTENSIONS/1.0.0 http://maven.apache.org/xsd/core-extensions-1.0.0.xsd");

        $stack10 = virtualinvoke coreExtensions.<org.apache.maven.cli.internal.extension.model.CoreExtensions: java.util.List getExtensions()>();

        if $stack10 == null goto label3;

        $stack13 = virtualinvoke coreExtensions.<org.apache.maven.cli.internal.extension.model.CoreExtensions: java.util.List getExtensions()>();

        $stack14 = interfaceinvoke $stack13.<java.util.List: int size()>();

        if $stack14 <= 0 goto label3;

        $stack17 = virtualinvoke coreExtensions.<org.apache.maven.cli.internal.extension.model.CoreExtensions: java.util.List getExtensions()>();

        iter = interfaceinvoke $stack17.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack19 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label3;

        $stack20 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.cli.internal.extension.model.CoreExtension) $stack20;

        $r2 = (org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: void writeCoreExtension(org.apache.maven.cli.internal.extension.model.CoreExtension,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "extension", serializer);

        goto label2;

     label3:
        $stack11 = <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    static void <clinit>()
    {
        <org.apache.maven.cli.internal.extension.model.io.xpp3.CoreExtensionsXpp3Writer: java.lang.String NAMESPACE> = null;

        return;
    }
}
