public class DebugConfigurationListener extends java.lang.Object implements org.codehaus.plexus.component.configurator.ConfigurationListener
{
    private org.codehaus.plexus.logging.Logger logger;

    public void <init>(org.codehaus.plexus.logging.Logger)
    {
        DebugConfigurationListener this;
        org.codehaus.plexus.logging.Logger logger;
        org.apache.maven.plugin.DebugConfigurationListener $r0;

        this := @this: DebugConfigurationListener;

        logger := @parameter0: org.codehaus.plexus.logging.Logger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.plugin.DebugConfigurationListener) this;

        $r0.<org.apache.maven.plugin.DebugConfigurationListener: org.codehaus.plexus.logging.Logger logger> = logger;

        return;
    }

    public void notifyFieldChangeUsingSetter(java.lang.String, java.lang.Object, java.lang.Object)
    {
        DebugConfigurationListener this;
        org.codehaus.plexus.logging.Logger $stack4, $stack7;
        boolean $stack5;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $stack12, $u0;
        java.lang.String fieldName, $stack11, $stack13;
        java.lang.Object value, target;
        org.apache.maven.plugin.DebugConfigurationListener $r0, $r1, $r2;

        this := @this: DebugConfigurationListener;

        fieldName := @parameter0: java.lang.String;

        value := @parameter1: java.lang.Object;

        target := @parameter2: java.lang.Object;

        $r0 = (org.apache.maven.plugin.DebugConfigurationListener) this;

        $stack4 = $r0.<org.apache.maven.plugin.DebugConfigurationListener: org.codehaus.plexus.logging.Logger logger>;

        $stack5 = interfaceinvoke $stack4.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack5 == 0 goto label1;

        $r1 = (org.apache.maven.plugin.DebugConfigurationListener) this;

        $stack7 = $r1.<org.apache.maven.plugin.DebugConfigurationListener: org.codehaus.plexus.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  (s) ");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r2 = (org.apache.maven.plugin.DebugConfigurationListener) this;

        $stack11 = specialinvoke $r2.<org.apache.maven.plugin.DebugConfigurationListener: java.lang.String toString(java.lang.Object)>(value);

        $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack7.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack13);

     label1:
        return;
    }

    public void notifyFieldChangeUsingReflection(java.lang.String, java.lang.Object, java.lang.Object)
    {
        DebugConfigurationListener this;
        org.codehaus.plexus.logging.Logger $stack4, $stack7;
        boolean $stack5;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $stack12, $u0;
        java.lang.String fieldName, $stack11, $stack13;
        java.lang.Object value, target;
        org.apache.maven.plugin.DebugConfigurationListener $r0, $r1, $r2;

        this := @this: DebugConfigurationListener;

        fieldName := @parameter0: java.lang.String;

        value := @parameter1: java.lang.Object;

        target := @parameter2: java.lang.Object;

        $r0 = (org.apache.maven.plugin.DebugConfigurationListener) this;

        $stack4 = $r0.<org.apache.maven.plugin.DebugConfigurationListener: org.codehaus.plexus.logging.Logger logger>;

        $stack5 = interfaceinvoke $stack4.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack5 == 0 goto label1;

        $r1 = (org.apache.maven.plugin.DebugConfigurationListener) this;

        $stack7 = $r1.<org.apache.maven.plugin.DebugConfigurationListener: org.codehaus.plexus.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  (f) ");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r2 = (org.apache.maven.plugin.DebugConfigurationListener) this;

        $stack11 = specialinvoke $r2.<org.apache.maven.plugin.DebugConfigurationListener: java.lang.String toString(java.lang.Object)>(value);

        $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack7.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack13);

     label1:
        return;
    }

    private java.lang.String toString(java.lang.Object)
    {
        java.lang.Object obj, $stack16;
        java.lang.Class $stack7;
        boolean $stack8;
        int n, i;
        java.lang.StringBuilder $stack12;
        java.lang.String $stack17, str;
        DebugConfigurationListener this;

        this := @this: DebugConfigurationListener;

        obj := @parameter0: java.lang.Object;

        if obj == null goto label4;

        $stack7 = virtualinvoke obj.<java.lang.Object: java.lang.Class getClass()>();

        $stack8 = virtualinvoke $stack7.<java.lang.Class: boolean isArray()>();

        if $stack8 == 0 goto label4;

        n = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(obj);

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>(int)>(256);

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        i = 0;

     label1:
        if i >= n goto label3;

        if i <= 0 goto label2;

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $stack16 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(obj, i);

        $stack17 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($stack16);

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        i = i + 1;

        goto label1;

     label3:
        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        str = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label5;

     label4:
        str = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(obj);

     label5:
        return str;
    }
}
