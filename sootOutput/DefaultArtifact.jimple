public class DefaultArtifact extends java.lang.Object implements org.apache.maven.artifact.Artifact
{
    private java.lang.String groupId;
    private java.lang.String artifactId;
    private java.lang.String baseVersion;
    private final java.lang.String type;
    private final java.lang.String classifier;
    private volatile java.lang.String scope;
    private volatile java.io.File file;
    private org.apache.maven.artifact.repository.ArtifactRepository repository;
    private java.lang.String downloadUrl;
    private org.apache.maven.artifact.resolver.filter.ArtifactFilter dependencyFilter;
    private org.apache.maven.artifact.handler.ArtifactHandler artifactHandler;
    private java.util.List dependencyTrail;
    private volatile java.lang.String version;
    private org.apache.maven.artifact.versioning.VersionRange versionRange;
    private volatile boolean resolved;
    private boolean release;
    private java.util.List availableVersions;
    private java.util.Map metadataMap;
    private boolean optional;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.artifact.handler.ArtifactHandler)
    {
        DefaultArtifact this;
        java.lang.String groupId, artifactId, version, scope, type, classifier;
        org.apache.maven.artifact.versioning.VersionRange $stack8;
        org.apache.maven.artifact.handler.ArtifactHandler artifactHandler;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        version := @parameter2: java.lang.String;

        scope := @parameter3: java.lang.String;

        type := @parameter4: java.lang.String;

        classifier := @parameter5: java.lang.String;

        artifactHandler := @parameter6: org.apache.maven.artifact.handler.ArtifactHandler;

        $stack8 = staticinvoke <org.apache.maven.artifact.versioning.VersionRange: org.apache.maven.artifact.versioning.VersionRange createFromVersion(java.lang.String)>(version);

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        specialinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,org.apache.maven.artifact.versioning.VersionRange,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.artifact.handler.ArtifactHandler,boolean)>(groupId, artifactId, $stack8, scope, type, classifier, artifactHandler, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.apache.maven.artifact.versioning.VersionRange, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.artifact.handler.ArtifactHandler)
    {
        DefaultArtifact this;
        java.lang.String groupId, artifactId, scope, type, classifier;
        org.apache.maven.artifact.versioning.VersionRange versionRange;
        org.apache.maven.artifact.handler.ArtifactHandler artifactHandler;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        versionRange := @parameter2: org.apache.maven.artifact.versioning.VersionRange;

        scope := @parameter3: java.lang.String;

        type := @parameter4: java.lang.String;

        classifier := @parameter5: java.lang.String;

        artifactHandler := @parameter6: org.apache.maven.artifact.handler.ArtifactHandler;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        specialinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,org.apache.maven.artifact.versioning.VersionRange,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.artifact.handler.ArtifactHandler,boolean)>(groupId, artifactId, versionRange, scope, type, classifier, artifactHandler, 0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.apache.maven.artifact.versioning.VersionRange, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.artifact.handler.ArtifactHandler, boolean)
    {
        DefaultArtifact this;
        java.lang.String groupId, artifactId, scope, type, classifier;
        org.apache.maven.artifact.versioning.VersionRange versionRange;
        org.apache.maven.artifact.handler.ArtifactHandler artifactHandler;
        boolean optional;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: DefaultArtifact;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        versionRange := @parameter2: org.apache.maven.artifact.versioning.VersionRange;

        scope := @parameter3: java.lang.String;

        type := @parameter4: java.lang.String;

        classifier := @parameter5: java.lang.String;

        artifactHandler := @parameter6: org.apache.maven.artifact.handler.ArtifactHandler;

        optional := @parameter7: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId> = groupId;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId> = artifactId;

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r2.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange> = versionRange;

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        specialinvoke $r3.<org.apache.maven.artifact.DefaultArtifact: void selectVersionFromNewRangeIfAvailable()>();

        $r4 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r4.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.handler.ArtifactHandler artifactHandler> = artifactHandler;

        $r5 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r5.<org.apache.maven.artifact.DefaultArtifact: java.lang.String scope> = scope;

        $r6 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r6.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type> = type;

        if classifier != null goto label1;

        classifier = interfaceinvoke artifactHandler.<org.apache.maven.artifact.handler.ArtifactHandler: java.lang.String getClassifier()>();

     label1:
        $r7 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r7.<org.apache.maven.artifact.DefaultArtifact: java.lang.String classifier> = classifier;

        $r8 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r8.<org.apache.maven.artifact.DefaultArtifact: boolean optional> = optional;

        $r9 = (org.apache.maven.artifact.DefaultArtifact) this;

        specialinvoke $r9.<org.apache.maven.artifact.DefaultArtifact: void validateIdentity()>();

        return;
    }

    private void validateIdentity()
    {
        DefaultArtifact this;
        java.lang.String $stack1, $stack3, $stack4, $stack5, $stack8, $stack9, $stack10, $stack11, $stack13, $stack14, $stack15, $stack16, $stack18, $stack19, $stack20, $stack21, $stack23, $stack24, $stack25, $stack26;
        boolean $stack2;
        org.apache.maven.artifact.versioning.VersionRange $stack6;
        org.apache.maven.artifact.InvalidArtifactRTException $u0, $u1, $u2, $u3;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.Throwable $r6, $r12, $r18, $r25;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId>;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack2 = specialinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: boolean empty(java.lang.String)>($stack1);

        if $stack2 == 0 goto label1;

        $u0 = new org.apache.maven.artifact.InvalidArtifactRTException;

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack23 = $r2.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId>;

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack24 = $r3.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId>;

        $r4 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack25 = virtualinvoke $r4.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getVersion()>();

        $r5 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack26 = $r5.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type>;

        specialinvoke $u0.<org.apache.maven.artifact.InvalidArtifactRTException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25, $stack26, "The groupId cannot be empty.");

        $r6 = (java.lang.Throwable) $u0;

        throw $r6;

     label1:
        $r7 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack3 = $r7.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId>;

        if $stack3 != null goto label2;

        $u1 = new org.apache.maven.artifact.InvalidArtifactRTException;

        $r8 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack18 = $r8.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId>;

        $r9 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack19 = $r9.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId>;

        $r10 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack20 = virtualinvoke $r10.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getVersion()>();

        $r11 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack21 = $r11.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type>;

        specialinvoke $u1.<org.apache.maven.artifact.InvalidArtifactRTException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack18, $stack19, $stack20, $stack21, "The artifactId cannot be empty.");

        $r12 = (java.lang.Throwable) $u1;

        throw $r12;

     label2:
        $r13 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack4 = $r13.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type>;

        if $stack4 != null goto label3;

        $u2 = new org.apache.maven.artifact.InvalidArtifactRTException;

        $r14 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack13 = $r14.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId>;

        $r15 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack14 = $r15.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId>;

        $r16 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack15 = virtualinvoke $r16.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getVersion()>();

        $r17 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack16 = $r17.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type>;

        specialinvoke $u2.<org.apache.maven.artifact.InvalidArtifactRTException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack13, $stack14, $stack15, $stack16, "The type cannot be empty.");

        $r18 = (java.lang.Throwable) $u2;

        throw $r18;

     label3:
        $r19 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack5 = $r19.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        if $stack5 != null goto label4;

        $r20 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack6 = $r20.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange>;

        if $stack6 != null goto label4;

        $u3 = new org.apache.maven.artifact.InvalidArtifactRTException;

        $r21 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack8 = $r21.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId>;

        $r22 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack9 = $r22.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId>;

        $r23 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack10 = virtualinvoke $r23.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getVersion()>();

        $r24 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack11 = $r24.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type>;

        specialinvoke $u3.<org.apache.maven.artifact.InvalidArtifactRTException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack8, $stack9, $stack10, $stack11, "The version cannot be empty.");

        $r25 = (java.lang.Throwable) $u3;

        throw $r25;

     label4:
        return;
    }

    private boolean empty(java.lang.String)
    {
        java.lang.String value, $stack2;
        int $stack3;
        DefaultArtifact this;
        boolean $stack4;

        this := @this: DefaultArtifact;

        value := @parameter0: java.lang.String;

        if value == null goto label1;

        $stack2 = virtualinvoke value.<java.lang.String: java.lang.String trim()>();

        $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>();

        if $stack3 >= 1 goto label2;

     label1:
        $stack4 = 1;

        goto label3;

     label2:
        $stack4 = 0;

     label3:
        return $stack4;
    }

    public java.lang.String getClassifier()
    {
        DefaultArtifact this;
        java.lang.String $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String classifier>;

        return $stack1;
    }

    public boolean hasClassifier()
    {
        DefaultArtifact this;
        java.lang.String $stack1;
        boolean $stack2;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String classifier>;

        $stack2 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>($stack1);

        return $stack2;
    }

    public java.lang.String getScope()
    {
        DefaultArtifact this;
        java.lang.String $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String scope>;

        return $stack1;
    }

    public java.lang.String getGroupId()
    {
        DefaultArtifact this;
        java.lang.String $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId>;

        return $stack1;
    }

    public java.lang.String getArtifactId()
    {
        DefaultArtifact this;
        java.lang.String $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId>;

        return $stack1;
    }

    public java.lang.String getVersion()
    {
        DefaultArtifact this;
        java.lang.String $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        return $stack1;
    }

    public void setVersion(java.lang.String)
    {
        DefaultArtifact this;
        java.lang.String version;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2;

        this := @this: DefaultArtifact;

        version := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version> = version;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        virtualinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: void setBaseVersionInternal(java.lang.String)>(version);

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r2.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange> = null;

        return;
    }

    public java.lang.String getType()
    {
        DefaultArtifact this;
        java.lang.String $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type>;

        return $stack1;
    }

    public void setFile(java.io.File)
    {
        DefaultArtifact this;
        java.io.File file;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        file := @parameter0: java.io.File;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.io.File file> = file;

        return;
    }

    public java.io.File getFile()
    {
        DefaultArtifact this;
        java.io.File $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.io.File file>;

        return $stack1;
    }

    public org.apache.maven.artifact.repository.ArtifactRepository getRepository()
    {
        DefaultArtifact this;
        org.apache.maven.artifact.repository.ArtifactRepository $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.repository.ArtifactRepository repository>;

        return $stack1;
    }

    public void setRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultArtifact this;
        org.apache.maven.artifact.repository.ArtifactRepository repository;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        repository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.repository.ArtifactRepository repository> = repository;

        return;
    }

    public java.lang.String getId()
    {
        DefaultArtifact this;
        java.lang.String $stack2, $stack5, $stack7;
        java.lang.StringBuilder $stack3, $stack4, $stack6, $u0;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1;

        this := @this: DefaultArtifact;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getDependencyConflictId()>();

        $stack3 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack2);

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack5 = virtualinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getBaseVersion()>();

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    public java.lang.String getDependencyConflictId()
    {
        DefaultArtifact this;
        java.lang.String $stack3, $stack6;
        java.lang.StringBuilder $u0;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1;

        this := @this: DefaultArtifact;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(128);

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getGroupId()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        specialinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: void appendArtifactTypeClassifierString(java.lang.StringBuilder)>($u0);

        $stack6 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack6;
    }

    private void appendArtifactTypeClassifierString(java.lang.StringBuilder)
    {
        java.lang.StringBuilder sb;
        DefaultArtifact this;
        java.lang.String $stack2, $stack5, $stack9;
        boolean $stack7;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifact;

        sb := @parameter0: java.lang.StringBuilder;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getArtifactId()>();

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack2);

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack5 = virtualinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getType()>();

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack7 = virtualinvoke $r2.<org.apache.maven.artifact.DefaultArtifact: boolean hasClassifier()>();

        if $stack7 == 0 goto label1;

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack9 = virtualinvoke $r3.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getClassifier()>();

        virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

     label1:
        return;
    }

    public void addMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata)
    {
        DefaultArtifact this;
        java.util.Map $stack3, $stack4, $stack7;
        org.apache.maven.artifact.metadata.ArtifactMetadata metadata, m;
        java.lang.Object $stack5, $stack6, $stack8;
        java.util.HashMap $u0;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifact;

        metadata := @parameter0: org.apache.maven.artifact.metadata.ArtifactMetadata;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack3 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.util.Map metadataMap>;

        if $stack3 != null goto label1;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r1.<org.apache.maven.artifact.DefaultArtifact: java.util.Map metadataMap> = $u0;

     label1:
        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack4 = $r2.<org.apache.maven.artifact.DefaultArtifact: java.util.Map metadataMap>;

        $stack5 = interfaceinvoke metadata.<org.apache.maven.artifact.metadata.ArtifactMetadata: java.lang.Object getKey()>();

        $stack6 = interfaceinvoke $stack4.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack5);

        m = (org.apache.maven.artifact.metadata.ArtifactMetadata) $stack6;

        if m == null goto label2;

        interfaceinvoke m.<org.apache.maven.artifact.metadata.ArtifactMetadata: void merge(org.apache.maven.artifact.metadata.ArtifactMetadata)>(metadata);

        goto label3;

     label2:
        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack7 = $r3.<org.apache.maven.artifact.DefaultArtifact: java.util.Map metadataMap>;

        $stack8 = interfaceinvoke metadata.<org.apache.maven.artifact.metadata.ArtifactMetadata: java.lang.Object getKey()>();

        interfaceinvoke $stack7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack8, metadata);

     label3:
        return;
    }

    public java.util.Collection getMetadataList()
    {
        DefaultArtifact this;
        java.util.Map $stack1, $stack2;
        java.util.Collection $stack3, $stack4;
        java.util.List $stack5;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.util.Map metadataMap>;

        if $stack1 != null goto label1;

        $stack5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack5;

     label1:
        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack2 = $r1.<org.apache.maven.artifact.DefaultArtifact: java.util.Map metadataMap>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.util.Collection values()>();

        $stack4 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($stack3);

        return $stack4;
    }

    public java.lang.String toString()
    {
        DefaultArtifact this;
        java.lang.String $stack3, $stack5, $stack7, $stack9, $stack10, $stack12, $stack15, $stack18;
        org.apache.maven.artifact.versioning.VersionRange $stack6;
        java.lang.StringBuilder $u0;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: DefaultArtifact;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getGroupId()>();

        if $stack3 == null goto label1;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack18 = virtualinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getGroupId()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

     label1:
        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        specialinvoke $r2.<org.apache.maven.artifact.DefaultArtifact: void appendArtifactTypeClassifierString(java.lang.StringBuilder)>($u0);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack5 = virtualinvoke $r3.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getBaseVersionInternal()>();

        if $stack5 == null goto label2;

        $r4 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack15 = virtualinvoke $r4.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getBaseVersionInternal()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        goto label3;

     label2:
        $r5 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack6 = $r5.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange>;

        $stack7 = virtualinvoke $stack6.<org.apache.maven.artifact.versioning.VersionRange: java.lang.String toString()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

     label3:
        $r6 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack9 = $r6.<org.apache.maven.artifact.DefaultArtifact: java.lang.String scope>;

        if $stack9 == null goto label4;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r7 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack12 = $r7.<org.apache.maven.artifact.DefaultArtifact: java.lang.String scope>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

     label4:
        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;
    }

    public int hashCode()
    {
        DefaultArtifact this;
        java.lang.String $stack2, $stack5, $stack8, $stack11, $stack12, $stack14, $stack18;
        int $stack3, $stack4, $stack6, $stack7, $stack9, $stack10, $stack13, $stack19, $stack20, result#2, $stack15;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: DefaultArtifact;

        $stack3 = 37 * 17;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack2 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId>;

        $stack4 = virtualinvoke $stack2.<java.lang.String: int hashCode()>();

        result#2 = $stack3 + $stack4;

        $stack6 = 37 * result#2;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack5 = $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId>;

        $stack7 = virtualinvoke $stack5.<java.lang.String: int hashCode()>();

        result#2 = $stack6 + $stack7;

        $stack9 = 37 * result#2;

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack8 = $r2.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type>;

        $stack10 = virtualinvoke $stack8.<java.lang.String: int hashCode()>();

        result#2 = $stack9 + $stack10;

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack11 = $r3.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        if $stack11 == null goto label1;

        $stack19 = 37 * result#2;

        $r4 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack18 = $r4.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        $stack20 = virtualinvoke $stack18.<java.lang.String: int hashCode()>();

        result#2 = $stack19 + $stack20;

     label1:
        $stack13 = 37 * result#2;

        $r5 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack12 = $r5.<org.apache.maven.artifact.DefaultArtifact: java.lang.String classifier>;

        if $stack12 == null goto label2;

        $r6 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack14 = $r6.<org.apache.maven.artifact.DefaultArtifact: java.lang.String classifier>;

        $stack15 = virtualinvoke $stack14.<java.lang.String: int hashCode()>();

        goto label3;

     label2:
        $stack15 = 0;

     label3:
        result#2 = $stack13 + $stack15;

        return result#2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object o;
        DefaultArtifact this;
        boolean $stack3, $stack6, $stack9, $stack12, $stack15, $stack19;
        org.apache.maven.artifact.Artifact a;
        java.lang.String $stack4, $stack5, $stack7, $stack8, $stack10, $stack11, $stack13, $stack14, $stack16, $stack17, $stack18, $stack20;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: DefaultArtifact;

        o := @parameter0: java.lang.Object;

        if o != this goto label1;

        return 1;

     label1:
        $stack3 = o instanceof org.apache.maven.artifact.Artifact;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        a = (org.apache.maven.artifact.Artifact) o;

        $stack4 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack5 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId>;

        $stack6 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>($stack5);

        if $stack6 != 0 goto label3;

        return 0;

     label3:
        $stack7 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack8 = $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId>;

        $stack9 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>($stack8);

        if $stack9 != 0 goto label4;

        return 0;

     label4:
        $stack10 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack11 = $r2.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        $stack12 = virtualinvoke $stack10.<java.lang.String: boolean equals(java.lang.Object)>($stack11);

        if $stack12 != 0 goto label5;

        return 0;

     label5:
        $stack13 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack14 = $r3.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type>;

        $stack15 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>($stack14);

        if $stack15 != 0 goto label6;

        return 0;

     label6:
        $stack16 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        if $stack16 != null goto label7;

        $r4 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack20 = $r4.<org.apache.maven.artifact.DefaultArtifact: java.lang.String classifier>;

        if $stack20 == null goto label9;

        goto label8;

     label7:
        $stack17 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        $r5 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack18 = $r5.<org.apache.maven.artifact.DefaultArtifact: java.lang.String classifier>;

        $stack19 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>($stack18);

        if $stack19 != 0 goto label9;

     label8:
        return 0;

     label9:
        return 1;
    }

    public java.lang.String getBaseVersion()
    {
        DefaultArtifact this;
        java.lang.String $stack1, $stack3, $stack5, $stack2;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String baseVersion>;

        if $stack1 != null goto label1;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack3 = $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        if $stack3 == null goto label1;

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack5 = $r2.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        virtualinvoke $r3.<org.apache.maven.artifact.DefaultArtifact: void setBaseVersionInternal(java.lang.String)>($stack5);

     label1:
        $r4 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack2 = $r4.<org.apache.maven.artifact.DefaultArtifact: java.lang.String baseVersion>;

        return $stack2;
    }

    protected java.lang.String getBaseVersionInternal()
    {
        DefaultArtifact this;
        java.lang.String $stack1, $stack3, $stack5, $stack2;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String baseVersion>;

        if $stack1 != null goto label1;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack3 = $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        if $stack3 == null goto label1;

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack5 = $r2.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        virtualinvoke $r3.<org.apache.maven.artifact.DefaultArtifact: void setBaseVersionInternal(java.lang.String)>($stack5);

     label1:
        $r4 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack2 = $r4.<org.apache.maven.artifact.DefaultArtifact: java.lang.String baseVersion>;

        return $stack2;
    }

    public void setBaseVersion(java.lang.String)
    {
        DefaultArtifact this;
        java.lang.String baseVersion;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        baseVersion := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        virtualinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: void setBaseVersionInternal(java.lang.String)>(baseVersion);

        return;
    }

    protected void setBaseVersionInternal(java.lang.String)
    {
        DefaultArtifact this;
        java.lang.String baseVersion, $stack2;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        baseVersion := @parameter0: java.lang.String;

        $stack2 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String toSnapshotVersion(java.lang.String)>(baseVersion);

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String baseVersion> = $stack2;

        return;
    }

    public int compareTo(org.apache.maven.artifact.Artifact)
    {
        DefaultArtifact this;
        org.apache.maven.artifact.Artifact a;
        java.lang.String $stack3, $stack4, $stack6, $stack7, $stack10, $stack11, $stack13, $stack14, $stack16, $stack18, $stack20, $stack21, $stack24;
        int result;
        org.apache.maven.artifact.versioning.DefaultArtifactVersion $u0, $u1;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3, $r4, $r5;
        org.apache.maven.artifact.versioning.ArtifactVersion $r6;

        this := @this: DefaultArtifact;

        a := @parameter0: org.apache.maven.artifact.Artifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack3 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId>;

        $stack4 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        result = virtualinvoke $stack3.<java.lang.String: int compareTo(java.lang.String)>($stack4);

        if result != 0 goto label4;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack6 = $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId>;

        $stack7 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        result = virtualinvoke $stack6.<java.lang.String: int compareTo(java.lang.String)>($stack7);

        if result != 0 goto label4;

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack10 = $r2.<org.apache.maven.artifact.DefaultArtifact: java.lang.String type>;

        $stack11 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        result = virtualinvoke $stack10.<java.lang.String: int compareTo(java.lang.String)>($stack11);

        if result != 0 goto label4;

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack13 = $r3.<org.apache.maven.artifact.DefaultArtifact: java.lang.String classifier>;

        if $stack13 != null goto label1;

        $stack24 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        if $stack24 == null goto label3;

        result = 1;

        goto label3;

     label1:
        $stack14 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        if $stack14 == null goto label2;

        $r4 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack20 = $r4.<org.apache.maven.artifact.DefaultArtifact: java.lang.String classifier>;

        $stack21 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        result = virtualinvoke $stack20.<java.lang.String: int compareTo(java.lang.String)>($stack21);

        goto label3;

     label2:
        result = -1;

     label3:
        if result != 0 goto label4;

        $u0 = new org.apache.maven.artifact.versioning.DefaultArtifactVersion;

        $r5 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack16 = $r5.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version>;

        specialinvoke $u0.<org.apache.maven.artifact.versioning.DefaultArtifactVersion: void <init>(java.lang.String)>($stack16);

        $u1 = new org.apache.maven.artifact.versioning.DefaultArtifactVersion;

        $stack18 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        specialinvoke $u1.<org.apache.maven.artifact.versioning.DefaultArtifactVersion: void <init>(java.lang.String)>($stack18);

        $r6 = (org.apache.maven.artifact.versioning.ArtifactVersion) $u1;

        result = virtualinvoke $u0.<org.apache.maven.artifact.versioning.DefaultArtifactVersion: int compareTo(org.apache.maven.artifact.versioning.ArtifactVersion)>($r6);

     label4:
        return result;
    }

    public void updateVersion(java.lang.String, org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultArtifact this;
        java.lang.String version, $stack4, $stack5;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        java.io.File $u0;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1;

        this := @this: DefaultArtifact;

        version := @parameter0: java.lang.String;

        localRepository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        virtualinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: void setResolvedVersion(java.lang.String)>(version);

        $u0 = new java.io.File;

        $stack4 = interfaceinvoke localRepository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getBasedir()>();

        $stack5 = interfaceinvoke localRepository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String pathOf(org.apache.maven.artifact.Artifact)>(this);

        specialinvoke $u0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack4, $stack5);

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        virtualinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: void setFile(java.io.File)>($u0);

        return;
    }

    public java.lang.String getDownloadUrl()
    {
        DefaultArtifact this;
        java.lang.String $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String downloadUrl>;

        return $stack1;
    }

    public void setDownloadUrl(java.lang.String)
    {
        DefaultArtifact this;
        java.lang.String downloadUrl;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        downloadUrl := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String downloadUrl> = downloadUrl;

        return;
    }

    public org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter()
    {
        DefaultArtifact this;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.resolver.filter.ArtifactFilter dependencyFilter>;

        return $stack1;
    }

    public void setDependencyFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter)
    {
        DefaultArtifact this;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter artifactFilter;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        artifactFilter := @parameter0: org.apache.maven.artifact.resolver.filter.ArtifactFilter;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.resolver.filter.ArtifactFilter dependencyFilter> = artifactFilter;

        return;
    }

    public org.apache.maven.artifact.handler.ArtifactHandler getArtifactHandler()
    {
        DefaultArtifact this;
        org.apache.maven.artifact.handler.ArtifactHandler $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.handler.ArtifactHandler artifactHandler>;

        return $stack1;
    }

    public java.util.List getDependencyTrail()
    {
        DefaultArtifact this;
        java.util.List $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.util.List dependencyTrail>;

        return $stack1;
    }

    public void setDependencyTrail(java.util.List)
    {
        DefaultArtifact this;
        java.util.List dependencyTrail;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        dependencyTrail := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.util.List dependencyTrail> = dependencyTrail;

        return;
    }

    public void setScope(java.lang.String)
    {
        DefaultArtifact this;
        java.lang.String scope;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        scope := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String scope> = scope;

        return;
    }

    public org.apache.maven.artifact.versioning.VersionRange getVersionRange()
    {
        DefaultArtifact this;
        org.apache.maven.artifact.versioning.VersionRange $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange>;

        return $stack1;
    }

    public void setVersionRange(org.apache.maven.artifact.versioning.VersionRange)
    {
        DefaultArtifact this;
        org.apache.maven.artifact.versioning.VersionRange versionRange;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1;

        this := @this: DefaultArtifact;

        versionRange := @parameter0: org.apache.maven.artifact.versioning.VersionRange;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange> = versionRange;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        specialinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: void selectVersionFromNewRangeIfAvailable()>();

        return;
    }

    private void selectVersionFromNewRangeIfAvailable()
    {
        DefaultArtifact this;
        org.apache.maven.artifact.versioning.VersionRange $stack1, $stack2, $stack8;
        org.apache.maven.artifact.versioning.ArtifactVersion $stack3, $stack9;
        java.lang.String $stack10;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange>;

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack2 = $r1.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange>;

        $stack3 = virtualinvoke $stack2.<org.apache.maven.artifact.versioning.VersionRange: org.apache.maven.artifact.versioning.ArtifactVersion getRecommendedVersion()>();

        if $stack3 == null goto label1;

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack8 = $r2.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange>;

        $stack9 = virtualinvoke $stack8.<org.apache.maven.artifact.versioning.VersionRange: org.apache.maven.artifact.versioning.ArtifactVersion getRecommendedVersion()>();

        $stack10 = virtualinvoke $stack9.<java.lang.Object: java.lang.String toString()>();

        $r3 = (org.apache.maven.artifact.DefaultArtifact) this;

        virtualinvoke $r3.<org.apache.maven.artifact.DefaultArtifact: void selectVersion(java.lang.String)>($stack10);

        goto label2;

     label1:
        $r4 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r4.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version> = null;

        $r5 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r5.<org.apache.maven.artifact.DefaultArtifact: java.lang.String baseVersion> = null;

     label2:
        return;
    }

    public void selectVersion(java.lang.String)
    {
        DefaultArtifact this;
        java.lang.String version;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1;

        this := @this: DefaultArtifact;

        version := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version> = version;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        virtualinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: void setBaseVersionInternal(java.lang.String)>(version);

        return;
    }

    public void setGroupId(java.lang.String)
    {
        DefaultArtifact this;
        java.lang.String groupId;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        groupId := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String groupId> = groupId;

        return;
    }

    public void setArtifactId(java.lang.String)
    {
        DefaultArtifact this;
        java.lang.String artifactId;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        artifactId := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String artifactId> = artifactId;

        return;
    }

    public boolean isSnapshot()
    {
        DefaultArtifact this;
        java.lang.String $stack1, $stack2, $stack5;
        boolean $stack3, $stack6, $stack4;
        org.apache.maven.artifact.DefaultArtifact $r0, $r1, $r2;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getBaseVersion()>();

        if $stack1 == null goto label2;

        $r1 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack2 = virtualinvoke $r1.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getBaseVersion()>();

        $stack3 = virtualinvoke $stack2.<java.lang.String: boolean endsWith(java.lang.String)>("SNAPSHOT");

        if $stack3 != 0 goto label1;

        $r2 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack5 = virtualinvoke $r2.<org.apache.maven.artifact.DefaultArtifact: java.lang.String getBaseVersion()>();

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>("LATEST");

        if $stack6 == 0 goto label2;

     label1:
        $stack4 = 1;

        goto label3;

     label2:
        $stack4 = 0;

     label3:
        return $stack4;
    }

    public void setResolved(boolean)
    {
        DefaultArtifact this;
        boolean resolved;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        resolved := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: boolean resolved> = resolved;

        return;
    }

    public boolean isResolved()
    {
        DefaultArtifact this;
        boolean $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: boolean resolved>;

        return $stack1;
    }

    public void setResolvedVersion(java.lang.String)
    {
        DefaultArtifact this;
        java.lang.String version;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        version := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.lang.String version> = version;

        return;
    }

    public void setArtifactHandler(org.apache.maven.artifact.handler.ArtifactHandler)
    {
        DefaultArtifact this;
        org.apache.maven.artifact.handler.ArtifactHandler artifactHandler;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        artifactHandler := @parameter0: org.apache.maven.artifact.handler.ArtifactHandler;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.handler.ArtifactHandler artifactHandler> = artifactHandler;

        return;
    }

    public void setRelease(boolean)
    {
        DefaultArtifact this;
        boolean release;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        release := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: boolean release> = release;

        return;
    }

    public boolean isRelease()
    {
        DefaultArtifact this;
        boolean $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: boolean release>;

        return $stack1;
    }

    public java.util.List getAvailableVersions()
    {
        DefaultArtifact this;
        java.util.List $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: java.util.List availableVersions>;

        return $stack1;
    }

    public void setAvailableVersions(java.util.List)
    {
        DefaultArtifact this;
        java.util.List availableVersions;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        availableVersions := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: java.util.List availableVersions> = availableVersions;

        return;
    }

    public boolean isOptional()
    {
        DefaultArtifact this;
        boolean $stack1;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: boolean optional>;

        return $stack1;
    }

    public org.apache.maven.artifact.versioning.ArtifactVersion getSelectedVersion() throws org.apache.maven.artifact.versioning.OverConstrainedVersionException
    {
        DefaultArtifact this;
        org.apache.maven.artifact.versioning.VersionRange $stack1;
        org.apache.maven.artifact.versioning.ArtifactVersion $stack2;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange>;

        $stack2 = virtualinvoke $stack1.<org.apache.maven.artifact.versioning.VersionRange: org.apache.maven.artifact.versioning.ArtifactVersion getSelectedVersion(org.apache.maven.artifact.Artifact)>(this);

        return $stack2;
    }

    public boolean isSelectedVersionKnown() throws org.apache.maven.artifact.versioning.OverConstrainedVersionException
    {
        DefaultArtifact this;
        org.apache.maven.artifact.versioning.VersionRange $stack1;
        boolean $stack2;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack1 = $r0.<org.apache.maven.artifact.DefaultArtifact: org.apache.maven.artifact.versioning.VersionRange versionRange>;

        $stack2 = virtualinvoke $stack1.<org.apache.maven.artifact.versioning.VersionRange: boolean isSelectedVersionKnown(org.apache.maven.artifact.Artifact)>(this);

        return $stack2;
    }

    public void setOptional(boolean)
    {
        DefaultArtifact this;
        boolean optional;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        optional := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $r0.<org.apache.maven.artifact.DefaultArtifact: boolean optional> = optional;

        return;
    }

    public volatile int compareTo(java.lang.Object)
    {
        DefaultArtifact this;
        java.lang.Object l1;
        org.apache.maven.artifact.Artifact $stack2;
        int $stack3;
        org.apache.maven.artifact.DefaultArtifact $r0;

        this := @this: DefaultArtifact;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.apache.maven.artifact.Artifact) l1;

        $r0 = (org.apache.maven.artifact.DefaultArtifact) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.artifact.DefaultArtifact: int compareTo(org.apache.maven.artifact.Artifact)>($stack2);

        return $stack3;
    }
}
