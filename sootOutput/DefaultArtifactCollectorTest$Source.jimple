class DefaultArtifactCollectorTest$Source extends java.lang.Object implements org.apache.maven.artifact.metadata.ArtifactMetadataSource
{
    private java.util.Map artifacts;
    private java.util.Map versions;
    final org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest this$0;

    private void <init>(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest)
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest l1;
        java.util.HashMap $u0, $u1;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest$Source;

        l1 := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest this$0> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.Map artifacts> = $u0;

        $u1 = new java.util.HashMap;

        specialinvoke $u1.<java.util.HashMap: void <init>()>();

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.Map versions> = $u1;

        return;
    }

    public org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List) throws org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.artifact.Artifact artifact;
        java.lang.String key, $stack14;
        java.util.Map $stack8;
        java.lang.Object $stack9;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $stack11;
        org.apache.maven.artifact.factory.ArtifactFactory $stack12;
        java.util.Set $stack13, $stack16;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter $stack15;
        java.util.List $stack17, remoteRepositories;
        java.lang.Throwable $stack18, $r4;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        org.apache.maven.artifact.metadata.ResolutionGroup $u0;
        org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException $u1;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest$Source;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        localRepository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        remoteRepositories := @parameter2: java.util.List;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        key = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.lang.String getKey(org.apache.maven.artifact.Artifact)>(artifact);

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack8 = $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.Map artifacts>;

        $stack9 = interfaceinvoke $stack8.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        a = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec) $stack9;

     label1:
        $u0 = new org.apache.maven.artifact.metadata.ResolutionGroup;

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack11 = $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest this$0>;

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.factory.ArtifactFactory access$500(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest)>($stack11);

        $stack13 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: java.util.Set access$600(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack14 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        $stack15 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack16 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.Set createArtifacts(org.apache.maven.artifact.factory.ArtifactFactory,java.util.Set,java.lang.String,org.apache.maven.artifact.resolver.filter.ArtifactFilter)>($stack12, $stack13, $stack14, $stack15);

        $stack17 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke $u0.<org.apache.maven.artifact.metadata.ResolutionGroup: void <init>(org.apache.maven.artifact.Artifact,java.util.Set,java.util.List)>(artifact, $stack16, $stack17);

     label2:
        return $u0;

     label3:
        $stack18 := @caughtexception;

        $u1 = new org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException;

        specialinvoke $u1.<org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException: void <init>(java.lang.String,java.lang.Throwable,org.apache.maven.artifact.Artifact)>("Invalid version creating artifacts", $stack18, artifact);

        $r4 = (java.lang.Throwable) $u1;

        throw $r4;

        catch org.apache.maven.artifact.versioning.InvalidVersionSpecificationException from label1 to label2 with label3;
    }

    private java.lang.String getKey(org.apache.maven.artifact.Artifact)
    {
        org.apache.maven.artifact.Artifact artifact;
        java.lang.String $stack2;
        DefaultArtifactCollectorTest$Source this;

        this := @this: DefaultArtifactCollectorTest$Source;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        $stack2 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getDependencyConflictId()>();

        return $stack2;
    }

    private java.util.Set createArtifacts(org.apache.maven.artifact.factory.ArtifactFactory, java.util.Set, java.lang.String, org.apache.maven.artifact.resolver.filter.ArtifactFilter) throws org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        java.util.HashSet $stack10;
        java.util.Set dependencies;
        java.util.Iterator l6;
        boolean $stack12, $stack18, $stack27, $stack33, $stack39;
        java.lang.Object $stack13;
        org.apache.maven.artifact.Artifact d, artifact;
        org.apache.maven.artifact.versioning.VersionRange $stack14, versionRange;
        java.lang.String $stack15, $stack17, $stack19, $stack20, $stack21, $stack22, $stack23, $stack32, $stack34, $stack35, $stack36, $stack37, $stack38, inheritedScope;
        org.apache.maven.artifact.factory.ArtifactFactory artifactFactory;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter dependencyFilter;
        DefaultArtifactCollectorTest$Source this;

        this := @this: DefaultArtifactCollectorTest$Source;

        artifactFactory := @parameter0: org.apache.maven.artifact.factory.ArtifactFactory;

        dependencies := @parameter1: java.util.Set;

        inheritedScope := @parameter2: java.lang.String;

        dependencyFilter := @parameter3: org.apache.maven.artifact.resolver.filter.ArtifactFilter;

        $stack10 = new java.util.HashSet;

        specialinvoke $stack10.<java.util.HashSet: void <init>()>();

        l6 = interfaceinvoke dependencies.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack12 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label9;

        $stack13 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        d = (org.apache.maven.artifact.Artifact) $stack13;

        $stack14 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.versioning.VersionRange getVersionRange()>();

        if $stack14 == null goto label2;

        versionRange = interfaceinvoke d.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.versioning.VersionRange getVersionRange()>();

        goto label3;

     label2:
        $stack15 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        versionRange = staticinvoke <org.apache.maven.artifact.versioning.VersionRange: org.apache.maven.artifact.versioning.VersionRange createFromVersionSpec(java.lang.String)>($stack15);

     label3:
        $stack17 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        $stack18 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>("test");

        if $stack18 != 0 goto label4;

        $stack32 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("provided");

        if $stack33 == 0 goto label5;

     label4:
        $stack19 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $stack20 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack21 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        $stack22 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        $stack23 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        artifact = interfaceinvoke artifactFactory.<org.apache.maven.artifact.factory.ArtifactFactory: org.apache.maven.artifact.Artifact createArtifact(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack19, $stack20, $stack21, $stack22, $stack23);

        goto label6;

     label5:
        $stack34 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $stack35 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack36 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        $stack37 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        $stack38 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        $stack39 = interfaceinvoke d.<org.apache.maven.artifact.Artifact: boolean isOptional()>();

        artifact = interfaceinvoke artifactFactory.<org.apache.maven.artifact.factory.ArtifactFactory: org.apache.maven.artifact.Artifact createDependencyArtifact(java.lang.String,java.lang.String,org.apache.maven.artifact.versioning.VersionRange,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($stack34, $stack35, versionRange, $stack36, $stack37, $stack38, inheritedScope, $stack39);

     label6:
        if artifact == null goto label8;

        if dependencyFilter == null goto label7;

        $stack27 = interfaceinvoke dependencyFilter.<org.apache.maven.artifact.resolver.filter.ArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>(artifact);

        if $stack27 == 0 goto label8;

     label7:
        interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: void setDependencyFilter(org.apache.maven.artifact.resolver.filter.ArtifactFilter)>(dependencyFilter);

        interfaceinvoke $stack10.<java.util.Set: boolean add(java.lang.Object)>(artifact);

     label8:
        goto label1;

     label9:
        return $stack10;
    }

    public void addArtifact(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec spec;
        java.util.Map $stack4, $stack10;
        org.apache.maven.artifact.Artifact $stack5, $stack8, $stack13, $stack16;
        java.lang.String $stack6, key, $stack14, $stack17;
        java.util.function.Function $stack11;
        java.lang.Object $stack12;
        java.util.List artifactVersions;
        org.apache.maven.artifact.versioning.DefaultArtifactVersion $u0;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest$Source;

        spec := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack4 = $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.Map artifacts>;

        $stack5 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(spec);

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack6 = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.lang.String getKey(org.apache.maven.artifact.Artifact)>($stack5);

        interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack6, spec);

        $stack8 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(spec);

        key = interfaceinvoke $stack8.<org.apache.maven.artifact.Artifact: java.lang.String getDependencyConflictId()>();

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack10 = $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.Map versions>;

        $stack11 = staticinvoke <DefaultArtifactCollectorTest$Source$lambda_addArtifact_0__309: java.util.function.Function bootstrap$()>();

        $stack12 = interfaceinvoke $stack10.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(key, $stack11);

        artifactVersions = (java.util.List) $stack12;

        $stack13 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(spec);

        $stack14 = interfaceinvoke $stack13.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        if $stack14 == null goto label1;

        $u0 = new org.apache.maven.artifact.versioning.DefaultArtifactVersion;

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(spec);

        $stack17 = interfaceinvoke $stack16.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        specialinvoke $u0.<org.apache.maven.artifact.versioning.DefaultArtifactVersion: void <init>(java.lang.String)>($stack17);

        interfaceinvoke artifactVersions.<java.util.List: boolean add(java.lang.Object)>($u0);

     label1:
        return;
    }

    public java.util.List retrieveAvailableVersions(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List) throws org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.artifact.Artifact artifact;
        java.util.List $stack4, remoteRepositories;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0;

        this := @this: DefaultArtifactCollectorTest$Source;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        localRepository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        remoteRepositories := @parameter2: java.util.List;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.List retrieveAvailableVersions(org.apache.maven.artifact.Artifact)>(artifact);

        return $stack4;
    }

    public java.util.List retrieveAvailableVersionsFromDeploymentRepository(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository) throws org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.artifact.Artifact artifact;
        java.util.List $stack4;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository, remoteRepository;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0;

        this := @this: DefaultArtifactCollectorTest$Source;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        localRepository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        remoteRepository := @parameter2: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.List retrieveAvailableVersions(org.apache.maven.artifact.Artifact)>(artifact);

        return $stack4;
    }

    private java.util.List retrieveAvailableVersions(org.apache.maven.artifact.Artifact)
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.artifact.Artifact artifact;
        java.util.Map $stack3;
        java.lang.String $stack4;
        java.lang.Object $stack5;
        java.util.List artifactVersions;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0;

        this := @this: DefaultArtifactCollectorTest$Source;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack3 = $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.Map versions>;

        $stack4 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getDependencyConflictId()>();

        $stack5 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack4);

        artifactVersions = (java.util.List) $stack5;

        if artifactVersions != null goto label1;

        artifactVersions = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label1:
        return artifactVersions;
    }

    public org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) throws org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest request;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.artifact.repository.ArtifactRepository $stack3;
        java.util.List $stack4;
        org.apache.maven.artifact.metadata.ResolutionGroup $stack5;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0;

        this := @this: DefaultArtifactCollectorTest$Source;

        request := @parameter0: org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest;

        $stack2 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.artifact.Artifact getArtifact()>();

        $stack3 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        $stack4 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: java.util.List getRemoteRepositories()>();

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.artifact.Artifact,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>($stack2, $stack3, $stack4);

        return $stack5;
    }

    public java.util.List retrieveAvailableVersions(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) throws org.apache.maven.artifact.metadata.ArtifactMetadataRetrievalException
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest request;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.artifact.repository.ArtifactRepository $stack3;
        java.util.List $stack4, $stack5;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0;

        this := @this: DefaultArtifactCollectorTest$Source;

        request := @parameter0: org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest;

        $stack2 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.artifact.Artifact getArtifact()>();

        $stack3 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        $stack4 = interfaceinvoke request.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: java.util.List getRemoteRepositories()>();

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: java.util.List retrieveAvailableVersions(org.apache.maven.artifact.Artifact,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>($stack2, $stack3, $stack4);

        return $stack5;
    }

    public volatile org.apache.maven.repository.legacy.metadata.ResolutionGroup retrieve(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List) throws org.apache.maven.repository.legacy.metadata.ArtifactMetadataRetrievalException
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.artifact.Artifact l1;
        org.apache.maven.artifact.repository.ArtifactRepository l2;
        java.util.List l3;
        org.apache.maven.artifact.metadata.ResolutionGroup $stack4;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0;
        org.apache.maven.repository.legacy.metadata.ResolutionGroup $r1;

        this := @this: DefaultArtifactCollectorTest$Source;

        l1 := @parameter0: org.apache.maven.artifact.Artifact;

        l2 := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        l3 := @parameter2: java.util.List;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.artifact.Artifact,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>(l1, l2, l3);

        $r1 = (org.apache.maven.repository.legacy.metadata.ResolutionGroup) $stack4;

        return $r1;
    }

    public volatile org.apache.maven.repository.legacy.metadata.ResolutionGroup retrieve(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) throws org.apache.maven.repository.legacy.metadata.ArtifactMetadataRetrievalException
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest l1;
        org.apache.maven.artifact.metadata.ResolutionGroup $stack2;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0;
        org.apache.maven.repository.legacy.metadata.ResolutionGroup $r1;

        this := @this: DefaultArtifactCollectorTest$Source;

        l1 := @parameter0: org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: org.apache.maven.artifact.metadata.ResolutionGroup retrieve(org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest)>(l1);

        $r1 = (org.apache.maven.repository.legacy.metadata.ResolutionGroup) $stack2;

        return $r1;
    }

    private static java.util.List lambda$addArtifact$0(java.lang.String)
    {
        java.util.ArrayList $stack1;
        java.lang.String k;

        k := @parameter0: java.lang.String;

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        return $stack1;
    }

    void <init>(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest, org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$1)
    {
        DefaultArtifactCollectorTest$Source this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest x0;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$1 x1;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $r0;

        this := @this: DefaultArtifactCollectorTest$Source;

        x0 := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest;

        x1 := @parameter1: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$1;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source) this;

        specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: void <init>(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest)>(x0);

        return;
    }
}
