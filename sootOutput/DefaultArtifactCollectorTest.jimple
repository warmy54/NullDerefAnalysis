public class DefaultArtifactCollectorTest extends java.lang.Object
{
    private org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector artifactCollector;
    private org.apache.maven.artifact.factory.ArtifactFactory artifactFactory;
    private org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec projectArtifact;
    private org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source source;
    private static final java.lang.String GROUP_ID;

    public void <init>()
    {
        DefaultArtifactCollectorTest this;

        this := @this: DefaultArtifactCollectorTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec $stack2;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $u0;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $u0 = new org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $u0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: void <init>(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$1)>($r0, null);

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source source> = $u0;

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack2 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("project", "1.0", null);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec projectArtifact> = $stack2;

        return;
    }

    public void testCircularDependencyNotIncludingCurrentProject() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        org.junit.jupiter.api.function.Executable $stack7;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack7 = staticinvoke <DefaultArtifactCollectorTest$lambda_testCircularDependencyNotIncludingCurrentProject_0__309: org.junit.jupiter.api.function.Executable bootstrap$(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($r1, a);

        staticinvoke <org.junit.jupiter.api.Assertions: java.lang.Throwable assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)>(class "Lorg/apache/maven/artifact/resolver/CyclicDependencyException;", $stack7, "Should have failed on cyclic dependency not involving project");

        return;
    }

    public void testCircularDependencyIncludingCurrentProject() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        org.junit.jupiter.api.function.Executable $stack7;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("project", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack7 = staticinvoke <DefaultArtifactCollectorTest$lambda_testCircularDependencyIncludingCurrentProject_1__310: org.junit.jupiter.api.function.Executable bootstrap$(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($r1, a);

        staticinvoke <org.junit.jupiter.api.Assertions: java.lang.Throwable assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)>(class "Lorg/apache/maven/artifact/resolver/CyclicDependencyException;", $stack7, "Should have failed on cyclic dependency not involving project");

        return;
    }

    public void testResolveWithFilter() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, c, d;
        java.lang.Object[] $stack13, $stack27;
        org.apache.maven.artifact.Artifact $stack15, $stack17, $stack19, $stack21, $stack29, $stack31;
        java.util.Set $stack22, $stack23, $stack32, $stack33;
        java.lang.String[] $stack25;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        org.apache.maven.artifact.resolver.filter.ExclusionSetFilter $u0;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        c = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "3.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "2.0");

        d = virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("d", "4.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack13 = newarray (java.lang.Object)[4];

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack13[0] = $stack15;

        $stack17 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack13[1] = $stack17;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack13[2] = $stack19;

        $stack21 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(d);

        $stack13[3] = $stack21;

        $stack22 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack13);

        $stack23 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack22, $stack23, "Check artifact list");

        $u0 = new org.apache.maven.artifact.resolver.filter.ExclusionSetFilter;

        $stack25 = newarray (java.lang.String)[1];

        $stack25[0] = "b";

        specialinvoke $u0.<org.apache.maven.artifact.resolver.filter.ExclusionSetFilter: void <init>(java.lang.String[])>($stack25);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $r3 = (org.apache.maven.artifact.resolver.filter.ArtifactFilter) $u0;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.artifact.resolver.filter.ArtifactFilter)>(a, $r3);

        $stack27 = newarray (java.lang.Object)[2];

        $stack29 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack27[0] = $stack29;

        $stack31 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack27[1] = $stack31;

        $stack32 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack27);

        $stack33 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack32, $stack33, "Check artifact list");

        return;
    }

    public void testResolveCorrectDependenciesWhenDifferentDependenciesOnNearest() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, c2, e, c1, f;
        java.lang.Object[] $stack15, $stack22;
        org.apache.maven.artifact.Artifact $stack17, $stack19, $stack24, $stack26, $stack28, $stack30, $stack32, $stack38;
        java.util.Set $stack20, $stack33, $stack34, $stack37;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack39;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        c2 = virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "2.0");

        virtualinvoke c2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("d", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        e = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("e", "1.0");

        c1 = virtualinvoke e.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "1.0");

        f = virtualinvoke c1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("f", "1.0");

        $stack15 = newarray (java.lang.Object)[2];

        $stack17 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack15[0] = $stack17;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(e);

        $stack15[1] = $stack19;

        $stack20 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack15);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack20);

        $stack22 = newarray (java.lang.Object)[5];

        $stack24 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack22[0] = $stack24;

        $stack26 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack22[1] = $stack26;

        $stack28 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(e);

        $stack22[2] = $stack28;

        $stack30 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c1);

        $stack22[3] = $stack30;

        $stack32 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(f);

        $stack22[4] = $stack32;

        $stack33 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack22);

        $stack34 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack33, $stack34, "Check artifact list");

        $stack37 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack38 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack37);

        $stack39 = interfaceinvoke $stack38.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.0", $stack39, "Check version");

        return;
    }

    public void testResolveCorrectDependenciesWhenDifferentDependenciesOnNewest() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, c2, d, e, c1;
        java.lang.Object[] $stack15, $stack22;
        org.apache.maven.artifact.Artifact $stack17, $stack19, $stack24, $stack26, $stack28, $stack30, $stack32, $stack38;
        java.util.Set $stack20, $stack33, $stack34, $stack37;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack39;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        c2 = virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "2.0");

        d = virtualinvoke c2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("d", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        e = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("e", "1.0");

        c1 = virtualinvoke e.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "1.0");

        virtualinvoke c1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("f", "1.0");

        $stack15 = newarray (java.lang.Object)[2];

        $stack17 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack15[0] = $stack17;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(e);

        $stack15[1] = $stack19;

        $stack20 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack15);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack20);

        $stack22 = newarray (java.lang.Object)[5];

        $stack24 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack22[0] = $stack24;

        $stack26 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack22[1] = $stack26;

        $stack28 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(e);

        $stack22[2] = $stack28;

        $stack30 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c2);

        $stack22[3] = $stack30;

        $stack32 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(d);

        $stack22[4] = $stack32;

        $stack33 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack22);

        $stack34 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack33, $stack34, "Check artifact list");

        $stack37 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack38 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack37);

        $stack39 = interfaceinvoke $stack38.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("2.0", $stack39, "Check version");

        return;
    }

    public void testResolveCorrectDependenciesWhenDifferentDependenciesOnNewestVersionReplaced() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b1, c, d2, d1, b2, e, g;
        java.lang.Object[] $stack20, $stack25;
        org.apache.maven.artifact.Artifact $stack22, $stack27, $stack29, $stack31, $stack33, $stack35, $stack37, $stack43, $stack48;
        java.util.Set $stack23, $stack38, $stack39, $stack42, $stack47;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack44, $stack49;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b1 = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        c = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "1.0");

        d2 = virtualinvoke b1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("d", "2.0");

        virtualinvoke d2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("h", "1.0");

        d1 = virtualinvoke c.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("d", "1.0");

        b2 = virtualinvoke c.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "2.0");

        e = virtualinvoke b2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("e", "1.0");

        g = virtualinvoke d1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("g", "1.0");

        $stack20 = newarray (java.lang.Object)[1];

        $stack22 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack20[0] = $stack22;

        $stack23 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack20);

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack23);

        $stack25 = newarray (java.lang.Object)[6];

        $stack27 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack25[0] = $stack27;

        $stack29 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack25[1] = $stack29;

        $stack31 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(d1);

        $stack25[2] = $stack31;

        $stack33 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b2);

        $stack25[3] = $stack33;

        $stack35 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(e);

        $stack25[4] = $stack35;

        $stack37 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(g);

        $stack25[5] = $stack37;

        $stack38 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack25);

        $stack39 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack38, $stack39, "Check artifact list");

        $stack42 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack43 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("d", $stack42);

        $stack44 = interfaceinvoke $stack43.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.0", $stack44, "Check version");

        $stack47 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack48 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("b", $stack47);

        $stack49 = interfaceinvoke $stack48.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("2.0", $stack49, "Check version");

        return;
    }

    public void testResolveNearestNewestIsNearest() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, c;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.Object[] $stack10;
        org.apache.maven.artifact.Artifact $stack12, $stack14, $stack16, $stack22;
        java.util.Set $stack17, $stack18, $stack21;
        java.lang.String $stack23;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        c = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "3.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "2.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack10 = newarray (java.lang.Object)[3];

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack10[0] = $stack12;

        $stack14 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack10[1] = $stack14;

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack10[2] = $stack16;

        $stack17 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack10);

        $stack18 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack17, $stack18, "Check artifact list");

        $stack21 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack22 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack21);

        $stack23 = interfaceinvoke $stack22.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("3.0", $stack23, "Check version");

        return;
    }

    public void testResolveNearestOldestIsNearest() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, c;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.Object[] $stack10;
        org.apache.maven.artifact.Artifact $stack12, $stack14, $stack16, $stack22;
        java.util.Set $stack17, $stack18, $stack21;
        java.lang.String $stack23;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        c = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "2.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "3.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack10 = newarray (java.lang.Object)[3];

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack10[0] = $stack12;

        $stack14 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack10[1] = $stack14;

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack10[2] = $stack16;

        $stack17 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack10);

        $stack18 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack17, $stack18, "Check artifact list");

        $stack21 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack22 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack21);

        $stack23 = interfaceinvoke $stack22.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("2.0", $stack23, "Check version");

        return;
    }

    public void testResolveLocalNewestIsLocal() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        java.lang.Object[] $stack7, $stack14;
        org.apache.maven.artifact.Artifact $stack9, $stack11, $stack16, $stack18, $stack24;
        java.util.Set $stack12, $stack19, $stack20, $stack23;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack25;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "2.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "3.0");

        $stack7 = newarray (java.lang.Object)[2];

        $stack9 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack7[0] = $stack9;

        $stack11 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack7[1] = $stack11;

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack7);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack12);

        $stack14 = newarray (java.lang.Object)[2];

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack14[0] = $stack16;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack14[1] = $stack18;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack14);

        $stack20 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack19, $stack20, "Check artifact list");

        $stack23 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack24 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("b", $stack23);

        $stack25 = interfaceinvoke $stack24.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("3.0", $stack25, "Check version");

        return;
    }

    public void testResolveLocalOldestIsLocal() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        java.lang.Object[] $stack7, $stack14;
        org.apache.maven.artifact.Artifact $stack9, $stack11, $stack16, $stack18, $stack24;
        java.util.Set $stack12, $stack19, $stack20, $stack23;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack25;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "3.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "2.0");

        $stack7 = newarray (java.lang.Object)[2];

        $stack9 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack7[0] = $stack9;

        $stack11 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack7[1] = $stack11;

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack7);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack12);

        $stack14 = newarray (java.lang.Object)[2];

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack14[0] = $stack16;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack14[1] = $stack18;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack14);

        $stack20 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack19, $stack20, "Check artifact list");

        $stack23 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack24 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("b", $stack23);

        $stack25 = interfaceinvoke $stack24.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("2.0", $stack25, "Check version");

        return;
    }

    public void testResolveLocalWithNewerVersionButLesserScope() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        java.lang.Object[] $stack7, $stack14;
        org.apache.maven.artifact.Artifact $stack9, $stack11, $stack16, $stack18, $stack24, $stack29;
        java.util.Set $stack12, $stack19, $stack20, $stack23, $stack28;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack25, $stack30;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("commons-logging", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("junit", "3.7");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("junit", "3.8.1", "test");

        $stack7 = newarray (java.lang.Object)[2];

        $stack9 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack7[0] = $stack9;

        $stack11 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack7[1] = $stack11;

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack7);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack12);

        $stack14 = newarray (java.lang.Object)[2];

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack14[0] = $stack16;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack14[1] = $stack18;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack14);

        $stack20 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack19, $stack20, "Check artifact list");

        $stack23 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack24 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("junit", $stack23);

        $stack25 = interfaceinvoke $stack24.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("3.8.1", $stack25, "Check version");

        $stack28 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack29 = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("junit", $stack28);

        $stack30 = interfaceinvoke $stack29.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("test", $stack30, "Check artifactScope");

        return;
    }

    public void testResolveLocalWithNewerVersionButLesserScopeResolvedFirst() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec b, a;
        java.lang.Object[] $stack7, $stack14;
        org.apache.maven.artifact.Artifact $stack9, $stack11, $stack16, $stack18, $stack24, $stack29;
        java.util.Set $stack12, $stack19, $stack20, $stack23, $stack28;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack25, $stack30;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("junit", "3.8.1", "test");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("commons-logging", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("junit", "3.7");

        $stack7 = newarray (java.lang.Object)[2];

        $stack9 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack7[0] = $stack9;

        $stack11 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack7[1] = $stack11;

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack7);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack12);

        $stack14 = newarray (java.lang.Object)[2];

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack14[0] = $stack16;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack14[1] = $stack18;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack14);

        $stack20 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack19, $stack20, "Check artifact list");

        $stack23 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack24 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("junit", $stack23);

        $stack25 = interfaceinvoke $stack24.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("3.8.1", $stack25, "Check version");

        $stack28 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack29 = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("junit", $stack28);

        $stack30 = interfaceinvoke $stack29.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("test", $stack30, "Check artifactScope");

        return;
    }

    public void testResolveNearestWithRanges() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, c;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.Object[] $stack10;
        org.apache.maven.artifact.Artifact $stack12, $stack14, $stack16, $stack22;
        java.util.Set $stack17, $stack18, $stack21;
        java.lang.String $stack23;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        c = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "2.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[1.0,3.0]");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack10 = newarray (java.lang.Object)[3];

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack10[0] = $stack12;

        $stack14 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack10[1] = $stack14;

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack10[2] = $stack16;

        $stack17 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack10);

        $stack18 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack17, $stack18, "Check artifact list");

        $stack21 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack22 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack21);

        $stack23 = interfaceinvoke $stack22.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("2.0", $stack23, "Check version");

        return;
    }

    public void testResolveRangeWithManagedVersion() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, managedB;
        org.apache.maven.artifact.Artifact $stack8, $stack12, $stack14, $stack20;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.Object[] $stack10;
        java.util.Set $stack15, $stack16, $stack19;
        java.lang.String $stack21;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "[1.0,3.0]");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        managedB = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "5.0");

        $stack8 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(managedB);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.artifact.Artifact)>(a, $stack8);

        $stack10 = newarray (java.lang.Object)[2];

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack10[0] = $stack12;

        $stack14 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(managedB);

        $stack10[1] = $stack14;

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack10);

        $stack16 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack15, $stack16, "Check artifact list");

        $stack19 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack20 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("b", $stack19);

        $stack21 = interfaceinvoke $stack20.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("5.0", $stack21, "Check version");

        return;
    }

    public void testCompatibleRanges() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, c;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.Object[] $stack11;
        org.apache.maven.artifact.Artifact $stack13, $stack15, $stack17, $stack23;
        java.util.Set $stack18, $stack19, $stack22;
        java.lang.String $stack24;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[2.0,2.5]");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[1.0,3.0]");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        c = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("c", "2.5");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack11 = newarray (java.lang.Object)[3];

        $stack13 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack11[0] = $stack13;

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack11[1] = $stack15;

        $stack17 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack11[2] = $stack17;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack11);

        $stack19 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack18, $stack19, "Check artifact list");

        $stack22 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack23 = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack22);

        $stack24 = interfaceinvoke $stack23.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("2.5", $stack24, "Check version");

        return;
    }

    public void testIncompatibleRanges() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        boolean $stack9;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[2.4,3.0]");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[1.0,2.0]");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack9 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasVersionRangeViolations()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack9);

        return;
    }

    public void testUnboundedRangeWhenVersionUnavailable() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        boolean $stack9;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        b = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[2.0,]");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[1.0,]");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack9 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasVersionRangeViolations()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack9);

        return;
    }

    public void testUnboundedRangeBelowLastRelease() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, c;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.Object[] $stack10;
        org.apache.maven.artifact.Artifact $stack12, $stack14, $stack20;
        java.util.Set $stack15, $stack16, $stack19;
        java.lang.String $stack21;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("c", "1.5");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        c = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("c", "2.0");

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("c", "1.1");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[1.0,)");

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack10 = newarray (java.lang.Object)[2];

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack10[0] = $stack12;

        $stack14 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack10[1] = $stack14;

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack10);

        $stack16 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack15, $stack16, "Check artifact list");

        $stack19 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r5 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack20 = specialinvoke $r5.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack19);

        $stack21 = interfaceinvoke $stack20.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("2.0", $stack21, "Check version");

        return;
    }

    public void testUnboundedRangeAboveLastRelease() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        boolean $stack7;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("c", "2.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[10.0,)");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack7 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasVersionRangeViolations()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack7);

        return;
    }

    public void testResolveManagedVersion() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, $stack7, $stack9;
        org.apache.maven.artifact.Artifact managedVersion, modifiedB, $stack14;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.Object[] $stack12;
        java.util.Set $stack15, $stack16;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,java.lang.String)>("b", "3.0", "runtime");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack7 = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "5.0");

        managedVersion = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack7);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack9 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("b", "5.0", "runtime");

        modifiedB = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack9);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.artifact.Artifact)>(a, managedVersion);

        $stack12 = newarray (java.lang.Object)[2];

        $stack14 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack12[0] = $stack14;

        $stack12[1] = modifiedB;

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack12);

        $stack16 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack15, $stack16, "Check artifact list");

        return;
    }

    public void testCollectChangesVersionOfOriginatingArtifactIfInDependencyManagementHasDifferentVersion() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, $stack7, $stack10;
        org.apache.maven.artifact.Artifact artifact, managedVersion, resolvedArtifact;
        java.lang.String $stack9, $stack14, $stack19;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult result;
        java.util.Set $stack15;
        java.util.Iterator $stack16;
        java.lang.Object $stack17;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack7 = $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec projectArtifact>;

        artifact = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack7);

        $stack9 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack10 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>($stack9, "2.0");

        managedVersion = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack10);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        result = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.artifact.Artifact)>(a, managedVersion);

        $stack14 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.0", $stack14, "collect has modified version in originating artifact");

        $stack15 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $stack16 = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>();

        $stack17 = interfaceinvoke $stack16.<java.util.Iterator: java.lang.Object next()>();

        resolvedArtifact = (org.apache.maven.artifact.Artifact) $stack17;

        $stack19 = interfaceinvoke resolvedArtifact.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.0", $stack19, "Resolved version don\'t match original artifact version");

        return;
    }

    public void testResolveCompileScopeOverTestScope() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, c, $stack9;
        org.apache.maven.artifact.Artifact modifiedC, $stack13, $stack15, $stack20, artifact;
        java.lang.Object[] $stack11, $stack18;
        java.util.Set $stack16, $stack21, $stack22, $stack24;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack27;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        c = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "test");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,java.lang.String)>("c", "2.0", "compile");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack9 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "compile");

        modifiedC = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack9);

        $stack11 = newarray (java.lang.Object)[2];

        $stack13 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack11[0] = $stack13;

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack11[1] = $stack15;

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack11);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack16);

        $stack18 = newarray (java.lang.Object)[2];

        $stack20 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack18[0] = $stack20;

        $stack18[1] = modifiedC;

        $stack21 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack18);

        $stack22 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack21, $stack22, "Check artifact list");

        $stack24 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        artifact = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack24);

        $stack27 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("test", $stack27, "Check artifactScope");

        return;
    }

    public void testResolveRuntimeScopeOverTestScope() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, c, $stack9;
        org.apache.maven.artifact.Artifact modifiedC, $stack13, $stack15, $stack20, artifact;
        java.lang.Object[] $stack11, $stack18;
        java.util.Set $stack16, $stack21, $stack22, $stack24;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack27;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        c = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "test");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,java.lang.String)>("c", "2.0", "runtime");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack9 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "runtime");

        modifiedC = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack9);

        $stack11 = newarray (java.lang.Object)[2];

        $stack13 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack11[0] = $stack13;

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack11[1] = $stack15;

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack11);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack16);

        $stack18 = newarray (java.lang.Object)[2];

        $stack20 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack18[0] = $stack20;

        $stack18[1] = modifiedC;

        $stack21 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack18);

        $stack22 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack21, $stack22, "Check artifact list");

        $stack24 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        artifact = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack24);

        $stack27 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("test", $stack27, "Check artifactScope");

        return;
    }

    public void testResolveCompileScopeOverRuntimeScope() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec root, a, $stack10;
        org.apache.maven.artifact.Artifact modifiedC, $stack14, $stack19, $stack21, artifact;
        java.lang.Object[] $stack12, $stack17;
        java.util.Set $stack15, $stack22, $stack23, $stack25;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack28;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        root = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("root", "1.0");

        a = virtualinvoke root.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("a", "1.0");

        virtualinvoke root.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "runtime");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,java.lang.String)>("c", "2.0", "compile");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack10 = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "compile");

        modifiedC = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack10);

        $stack12 = newarray (java.lang.Object)[1];

        $stack14 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(root);

        $stack12[0] = $stack14;

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack12);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack15);

        $stack17 = newarray (java.lang.Object)[3];

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack17[0] = $stack19;

        $stack21 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(root);

        $stack17[1] = $stack21;

        $stack17[2] = modifiedC;

        $stack22 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack17);

        $stack23 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack22, $stack23, "Check artifact list");

        $stack25 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        artifact = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack25);

        $stack28 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("compile", $stack28, "Check artifactScope");

        return;
    }

    public void testResolveCompileScopeOverProvidedScope() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, c, $stack9;
        org.apache.maven.artifact.Artifact modifiedC, $stack13, $stack15, $stack20, artifact;
        java.lang.Object[] $stack11, $stack18;
        java.util.Set $stack16, $stack21, $stack22, $stack24;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack27;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        c = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "provided");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,java.lang.String)>("c", "2.0", "compile");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack9 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "compile");

        modifiedC = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack9);

        $stack11 = newarray (java.lang.Object)[2];

        $stack13 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack11[0] = $stack13;

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack11[1] = $stack15;

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack11);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack16);

        $stack18 = newarray (java.lang.Object)[2];

        $stack20 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack18[0] = $stack20;

        $stack18[1] = modifiedC;

        $stack21 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack18);

        $stack22 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack21, $stack22, "Check artifact list");

        $stack24 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        artifact = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack24);

        $stack27 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("provided", $stack27, "Check artifactScope");

        return;
    }

    public void testResolveRuntimeScopeOverProvidedScope() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, c, $stack9;
        org.apache.maven.artifact.Artifact modifiedC, $stack13, $stack15, $stack20, artifact;
        java.lang.Object[] $stack11, $stack18;
        java.util.Set $stack16, $stack21, $stack22, $stack24;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack27;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        c = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "provided");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,java.lang.String)>("c", "2.0", "runtime");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack9 = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "runtime");

        modifiedC = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack9);

        $stack11 = newarray (java.lang.Object)[2];

        $stack13 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack11[0] = $stack13;

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack11[1] = $stack15;

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack11);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack16);

        $stack18 = newarray (java.lang.Object)[2];

        $stack20 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack18[0] = $stack20;

        $stack18[1] = modifiedC;

        $stack21 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack18);

        $stack22 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack21, $stack22, "Check artifact list");

        $stack24 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        artifact = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack24);

        $stack27 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("provided", $stack27, "Check artifactScope");

        return;
    }

    public void testProvidedScopeNotTransitive() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        java.lang.Object[] $stack7, $stack14;
        org.apache.maven.artifact.Artifact $stack9, $stack11, $stack16, $stack18;
        java.util.Set $stack12, $stack19, $stack20;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("a", "1.0", "provided");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "1.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "provided");

        $stack7 = newarray (java.lang.Object)[2];

        $stack9 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack7[0] = $stack9;

        $stack11 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack7[1] = $stack11;

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack7);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack12);

        $stack14 = newarray (java.lang.Object)[2];

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack14[0] = $stack16;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack14[1] = $stack18;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack14);

        $stack20 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack19, $stack20, "Check artifact list");

        return;
    }

    public void testOptionalNotTransitive() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        java.lang.Object[] $stack7, $stack14;
        org.apache.maven.artifact.Artifact $stack9, $stack11, $stack16, $stack18;
        java.util.Set $stack12, $stack19, $stack20;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "1.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,boolean)>("c", "3.0", 1);

        $stack7 = newarray (java.lang.Object)[2];

        $stack9 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack7[0] = $stack9;

        $stack11 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack7[1] = $stack11;

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack7);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack12);

        $stack14 = newarray (java.lang.Object)[2];

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack14[0] = $stack16;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack14[1] = $stack18;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack14);

        $stack20 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack19, $stack20, "Check artifact list");

        return;
    }

    public void testOptionalIncludedAtRoot() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        java.lang.Object[] $stack6, $stack13;
        org.apache.maven.artifact.Artifact $stack8, $stack10, $stack15, $stack17;
        java.util.Set $stack11, $stack18, $stack19;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,boolean)>("b", "1.0", 1);

        $stack6 = newarray (java.lang.Object)[2];

        $stack8 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack6[0] = $stack8;

        $stack10 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack6[1] = $stack10;

        $stack11 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack6);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack11);

        $stack13 = newarray (java.lang.Object)[2];

        $stack15 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack13[0] = $stack15;

        $stack17 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack13[1] = $stack17;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack13);

        $stack19 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack18, $stack19, "Check artifact list");

        return;
    }

    public void testScopeUpdate() throws org.apache.maven.artifact.versioning.InvalidVersionSpecificationException, org.apache.maven.artifact.resolver.ArtifactResolutionException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("compile", "compile", "compile");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("compile", "provided", "compile");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("compile", "runtime", "compile");

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("compile", "system", "compile");

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("compile", "test", "compile");

        $r5 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r5.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("provided", "compile", "compile");

        $r6 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r6.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("provided", "provided", "provided");

        $r7 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r7.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("provided", "runtime", "runtime");

        $r8 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r8.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("provided", "system", "system");

        $r9 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r9.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("provided", "test", "test");

        $r10 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r10.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("runtime", "compile", "compile");

        $r11 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r11.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("runtime", "provided", "runtime");

        $r12 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r12.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("runtime", "runtime", "runtime");

        $r13 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r13.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("runtime", "system", "system");

        $r14 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r14.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("runtime", "test", "runtime");

        $r15 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r15.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("system", "compile", "compile");

        $r16 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r16.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("system", "provided", "provided");

        $r17 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r17.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("system", "runtime", "runtime");

        $r18 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r18.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("system", "system", "system");

        $r19 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r19.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("system", "test", "test");

        $r20 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r20.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("test", "compile", "compile");

        $r21 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r21.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("test", "provided", "provided");

        $r22 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r22.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("test", "runtime", "runtime");

        $r23 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r23.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("test", "system", "system");

        $r24 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r24.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(java.lang.String,java.lang.String,java.lang.String)>("test", "test", "test");

        return;
    }

    private void checkScopeUpdate(java.lang.String, java.lang.String, java.lang.String) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        java.lang.String farthestScope, nearestScope, expectedScope;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1;

        this := @this: DefaultArtifactCollectorTest;

        farthestScope := @parameter0: java.lang.String;

        nearestScope := @parameter1: java.lang.String;

        expectedScope := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdateDirect(java.lang.String,java.lang.String,java.lang.String)>(farthestScope, nearestScope, expectedScope);

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdateTransitively(java.lang.String,java.lang.String,java.lang.String)>(farthestScope, nearestScope, expectedScope);

        return;
    }

    private void checkScopeUpdateTransitively(java.lang.String, java.lang.String, java.lang.String) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, c, dNearest, dFarthest;
        java.lang.String nearestScope, farthestScope, $stack17, $stack19, expectedScope;
        boolean $stack18, $stack20;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: DefaultArtifactCollectorTest;

        farthestScope := @parameter0: java.lang.String;

        nearestScope := @parameter1: java.lang.String;

        expectedScope := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("b", "1.0", nearestScope);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        c = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("c", "1.0");

        staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec access$200(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a, c);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        dNearest = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("d", "2.0");

        staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec access$200(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b, dNearest);

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        dFarthest = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("d", "3.0", farthestScope);

        staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec access$200(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c, dFarthest);

        $stack17 = "system";

        $stack18 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>(nearestScope);

        if $stack18 != 0 goto label1;

        $stack19 = "provided";

        $stack20 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>(nearestScope);

        if $stack20 != 0 goto label1;

        $r5 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r5.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,java.lang.String,java.lang.String)>(a, b, expectedScope, "2.0");

     label1:
        return;
    }

    private void checkScopeUpdateDirect(java.lang.String, java.lang.String, java.lang.String) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, c, dNearest, dFarthest;
        java.lang.String nearestScope, farthestScope, expectedScope;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: DefaultArtifactCollectorTest;

        farthestScope := @parameter0: java.lang.String;

        nearestScope := @parameter1: java.lang.String;

        expectedScope := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "1.0");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        c = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("c", "1.0");

        staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec access$200(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a, c);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        dNearest = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("d", "2.0", nearestScope);

        staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec access$200(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b, dNearest);

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        dFarthest = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("d", "3.0", farthestScope);

        staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec access$200(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c, dFarthest);

        $r5 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r5.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: void checkScopeUpdate(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,java.lang.String,java.lang.String)>(a, b, expectedScope, "2.0");

        return;
    }

    private void checkScopeUpdate(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec, org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec, java.lang.String, java.lang.String) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        java.lang.String expectedScope, $stack9, $stack11, expectedVersion, $stack24, $stack25, $stack40, $stack41, $stack43;
        boolean $stack10, $stack12;
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, d;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter filter, $u0, $u1, $u2;
        java.lang.Object[] $stack14, $stack27;
        org.apache.maven.artifact.Artifact $stack16, $stack18, artifact, $stack29, $stack31, $stack33, $stack39;
        java.util.Set $stack19, $stack22, $stack34, $stack37;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r2, $r3, $r4, $r6;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter $r1, $r5;

        this := @this: DefaultArtifactCollectorTest;

        a := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        b := @parameter1: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        expectedScope := @parameter2: java.lang.String;

        expectedVersion := @parameter3: java.lang.String;

        $stack9 = "provided";

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>(expectedScope);

        if $stack10 == 0 goto label1;

        $u0 = new org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;

        specialinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: void <init>(java.lang.String)>("compile");

        filter = $u0;

        goto label3;

     label1:
        $stack11 = "system";

        $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(expectedScope);

        if $stack12 == 0 goto label2;

        $u1 = new org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;

        specialinvoke $u1.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: void <init>(java.lang.String)>("compile");

        filter = $u1;

        goto label3;

     label2:
        $u2 = new org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;

        specialinvoke $u2.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: void <init>(java.lang.String)>(expectedScope);

        filter = $u2;

     label3:
        $stack14 = newarray (java.lang.Object)[2];

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack14[0] = $stack16;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack14[1] = $stack18;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack14);

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $r1 = (org.apache.maven.artifact.resolver.filter.ArtifactFilter) filter;

        res = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set,org.apache.maven.artifact.resolver.filter.ArtifactFilter)>($stack19, $r1);

        $stack22 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        artifact = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("d", $stack22);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>(artifact, "MNG-1895 Dependency was not added to resolution");

        $stack24 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>(expectedScope, $stack24, "Check artifactScope");

        $stack25 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>(expectedVersion, $stack25, "Check version");

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        d = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("d", "1.0");

        $stack27 = newarray (java.lang.Object)[3];

        $stack29 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack27[0] = $stack29;

        $stack31 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack27[1] = $stack31;

        $stack33 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(d);

        $stack27[2] = $stack33;

        $stack34 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack27);

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $r5 = (org.apache.maven.artifact.resolver.filter.ArtifactFilter) filter;

        res = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set,org.apache.maven.artifact.resolver.filter.ArtifactFilter)>($stack34, $r5);

        $stack37 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r6 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        artifact = specialinvoke $r6.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("d", $stack37);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>(artifact, "MNG-1895 Dependency was not added to resolution");

        $stack39 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(d);

        $stack40 = interfaceinvoke $stack39.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        $stack41 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack40, $stack41, "Check artifactScope");

        $stack43 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.0", $stack43, "Check version");

        return;
    }

    public void testOptionalNotTransitiveButVersionIsInfluential() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b, d, e, c;
        java.lang.Object[] $stack15, $stack22;
        org.apache.maven.artifact.Artifact $stack17, $stack19, $stack24, $stack26, $stack28, $stack30, $stack32, artifact;
        java.util.Set $stack20, $stack33, $stack34, $stack36;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        java.lang.String $stack39;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "1.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,boolean)>("c", "3.0", 1);

        d = virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("d", "1.0");

        e = virtualinvoke d.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("e", "1.0");

        virtualinvoke e.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "2.0");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        c = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("c", "3.0");

        $stack15 = newarray (java.lang.Object)[2];

        $stack17 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack15[0] = $stack17;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack15[1] = $stack19;

        $stack20 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack15);

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r3.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack20);

        $stack22 = newarray (java.lang.Object)[5];

        $stack24 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack22[0] = $stack24;

        $stack26 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack22[1] = $stack26;

        $stack28 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(c);

        $stack22[2] = $stack28;

        $stack30 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(d);

        $stack22[3] = $stack30;

        $stack32 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(e);

        $stack22[4] = $stack32;

        $stack33 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack22);

        $stack34 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack33, $stack34, "Check artifact list");

        $stack36 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $r4 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        artifact = specialinvoke $r4.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.Artifact getArtifact(java.lang.String,java.util.Set)>("c", $stack36);

        $stack39 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("3.0", $stack39, "Check version");

        return;
    }

    public void testTestScopeNotTransitive() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        java.lang.Object[] $stack7, $stack14;
        org.apache.maven.artifact.Artifact $stack9, $stack11, $stack16, $stack18;
        java.util.Set $stack12, $stack19, $stack20;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>("a", "1.0", "test");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "1.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String,java.lang.String)>("c", "3.0", "test");

        $stack7 = newarray (java.lang.Object)[2];

        $stack9 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack7[0] = $stack9;

        $stack11 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack7[1] = $stack11;

        $stack12 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack7);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack12);

        $stack14 = newarray (java.lang.Object)[2];

        $stack16 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack14[0] = $stack16;

        $stack18 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(b);

        $stack14[1] = $stack18;

        $stack19 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack14);

        $stack20 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>($stack19, $stack20, "Check artifact list");

        return;
    }

    public void testSnapshotNotIncluded() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult res;
        boolean $stack7;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "[1.0,)");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "1.0-SNAPSHOT");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        res = specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack7 = virtualinvoke res.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasVersionRangeViolations()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack7);

        return;
    }

    public void testOverConstrainedVersionException() throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, b;
        org.junit.jupiter.api.function.Executable $stack12;
        java.lang.Throwable $stack13;
        org.apache.maven.artifact.versioning.OverConstrainedVersionException e;
        java.lang.String $stack14, $stack16;
        boolean $stack15, $stack17;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactCollectorTest;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        a = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("a", "1.0");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("b", "[1.0, 2.0)");

        virtualinvoke a.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "[3.3.0,4.0.0)");

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        b = specialinvoke $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("b", "1.0.0");

        virtualinvoke b.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec addDependency(java.lang.String,java.lang.String)>("c", "3.3.0-v3346");

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String)>("c", "3.2.1-v3235e");

        $r3 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack12 = staticinvoke <DefaultArtifactCollectorTest$lambda_testOverConstrainedVersionException_2__311: org.junit.jupiter.api.function.Executable bootstrap$(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($r3, a);

        $stack13 = staticinvoke <org.junit.jupiter.api.Assertions: java.lang.Throwable assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable)>(class "Lorg/apache/maven/artifact/versioning/OverConstrainedVersionException;", $stack12);

        e = (org.apache.maven.artifact.versioning.OverConstrainedVersionException) $stack13;

        $stack14 = virtualinvoke e.<org.apache.maven.artifact.versioning.OverConstrainedVersionException: java.lang.String getMessage()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean contains(java.lang.CharSequence)>("[3.2.1-v3235e, 3.3.0-v3346]");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack15, "Versions unordered");

        $stack16 = virtualinvoke e.<org.apache.maven.artifact.versioning.OverConstrainedVersionException: java.lang.String getMessage()>();

        $stack17 = virtualinvoke $stack16.<java.lang.String: boolean contains(java.lang.CharSequence)>("Path to dependency:");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack17, "DependencyTrail unresolved");

        return;
    }

    private org.apache.maven.artifact.Artifact getArtifact(java.lang.String, java.util.Set)
    {
        java.util.Set artifacts;
        java.util.Iterator l3;
        boolean $stack7, $stack10, $stack13;
        java.lang.Object artifact;
        org.apache.maven.artifact.Artifact a;
        java.lang.String $stack9, id, $stack12;
        DefaultArtifactCollectorTest this;

        this := @this: DefaultArtifactCollectorTest;

        id := @parameter0: java.lang.String;

        artifacts := @parameter1: java.util.Set;

        l3 = interfaceinvoke artifacts.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        artifact = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        a = (org.apache.maven.artifact.Artifact) artifact;

        $stack9 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>(id);

        if $stack10 == 0 goto label2;

        $stack12 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("test");

        if $stack13 == 0 goto label2;

        return a;

     label2:
        goto label1;

     label3:
        return null;
    }

    private org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set) throws org.apache.maven.artifact.resolver.ArtifactResolutionException
    {
        DefaultArtifactCollectorTest this;
        java.util.Set artifacts;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult $stack2;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0;

        this := @this: DefaultArtifactCollectorTest;

        artifacts := @parameter0: java.util.Set;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set,org.apache.maven.artifact.resolver.filter.ArtifactFilter)>(artifacts, null);

        return $stack2;
    }

    private org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set, org.apache.maven.artifact.resolver.filter.ArtifactFilter) throws org.apache.maven.artifact.resolver.ArtifactResolutionException
    {
        DefaultArtifactCollectorTest this;
        java.util.Set artifacts;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec $stack3;
        org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector $stack4;
        org.apache.maven.artifact.Artifact $stack5;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter filter;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $stack9;
        java.util.List $stack10;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult $stack11;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;
        org.apache.maven.artifact.metadata.ArtifactMetadataSource $r3;

        this := @this: DefaultArtifactCollectorTest;

        artifacts := @parameter0: java.util.Set;

        filter := @parameter1: org.apache.maven.artifact.resolver.filter.ArtifactFilter;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack4 = $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector artifactCollector>;

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack3 = $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec projectArtifact>;

        $stack5 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack3);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack9 = $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source source>;

        $stack10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r3 = (org.apache.maven.artifact.metadata.ArtifactMetadataSource) $stack9;

        $stack11 = interfaceinvoke $stack4.<org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set,org.apache.maven.artifact.Artifact,java.util.Map,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List,org.apache.maven.artifact.metadata.ArtifactMetadataSource,org.apache.maven.artifact.resolver.filter.ArtifactFilter,java.util.List,java.util.List)>(artifacts, $stack5, null, null, null, $r3, filter, $stack10, null);

        return $stack11;
    }

    private org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec) throws org.apache.maven.artifact.resolver.ArtifactResolutionException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, $stack5;
        org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector $stack2;
        org.apache.maven.artifact.Artifact $stack3, $stack6;
        java.util.Set $stack4;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $stack10;
        java.util.List $stack12;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult $stack13;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;
        org.apache.maven.artifact.metadata.ArtifactMetadataSource $r3;

        this := @this: DefaultArtifactCollectorTest;

        a := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack2 = $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector artifactCollector>;

        $stack3 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack4 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($stack3);

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack5 = $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec projectArtifact>;

        $stack6 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack5);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack10 = $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source source>;

        $stack12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r3 = (org.apache.maven.artifact.metadata.ArtifactMetadataSource) $stack10;

        $stack13 = interfaceinvoke $stack2.<org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set,org.apache.maven.artifact.Artifact,java.util.Map,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List,org.apache.maven.artifact.metadata.ArtifactMetadataSource,org.apache.maven.artifact.resolver.filter.ArtifactFilter,java.util.List,java.util.List)>($stack4, $stack6, null, null, null, $r3, null, $stack12, null);

        return $stack13;
    }

    private org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec, org.apache.maven.artifact.resolver.filter.ArtifactFilter) throws org.apache.maven.artifact.resolver.ArtifactResolutionException
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, $stack6;
        org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector $stack3;
        org.apache.maven.artifact.Artifact $stack4, $stack7;
        java.util.Set $stack5;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter filter;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $stack11;
        java.util.List $stack12;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult $stack13;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;
        org.apache.maven.artifact.metadata.ArtifactMetadataSource $r3;

        this := @this: DefaultArtifactCollectorTest;

        a := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        filter := @parameter1: org.apache.maven.artifact.resolver.filter.ArtifactFilter;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack3 = $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector artifactCollector>;

        $stack4 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack5 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($stack4);

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack6 = $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec projectArtifact>;

        $stack7 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack6);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack11 = $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source source>;

        $stack12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r3 = (org.apache.maven.artifact.metadata.ArtifactMetadataSource) $stack11;

        $stack13 = interfaceinvoke $stack3.<org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set,org.apache.maven.artifact.Artifact,java.util.Map,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List,org.apache.maven.artifact.metadata.ArtifactMetadataSource,org.apache.maven.artifact.resolver.filter.ArtifactFilter,java.util.List,java.util.List)>($stack5, $stack7, null, null, null, $r3, filter, $stack12, null);

        return $stack13;
    }

    private org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec, org.apache.maven.artifact.Artifact) throws org.apache.maven.artifact.resolver.ArtifactResolutionException
    {
        org.apache.maven.artifact.Artifact managedVersion, $stack7, $stack10;
        java.lang.String $stack4;
        java.util.Map managedVersions;
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a, $stack9;
        org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector $stack6;
        java.util.Set $stack8;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $stack13;
        java.util.List $stack15;
        org.apache.maven.artifact.resolver.ArtifactResolutionResult $stack16;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;
        org.apache.maven.artifact.metadata.ArtifactMetadataSource $r3;

        this := @this: DefaultArtifactCollectorTest;

        a := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        managedVersion := @parameter1: org.apache.maven.artifact.Artifact;

        $stack4 = interfaceinvoke managedVersion.<org.apache.maven.artifact.Artifact: java.lang.String getDependencyConflictId()>();

        managedVersions = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($stack4, managedVersion);

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack6 = $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector artifactCollector>;

        $stack7 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack8 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($stack7);

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack9 = $r1.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec projectArtifact>;

        $stack10 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($stack9);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack13 = $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source source>;

        $stack15 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r3 = (org.apache.maven.artifact.metadata.ArtifactMetadataSource) $stack13;

        $stack16 = interfaceinvoke $stack6.<org.apache.maven.repository.legacy.resolver.LegacyArtifactCollector: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set,org.apache.maven.artifact.Artifact,java.util.Map,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List,org.apache.maven.artifact.metadata.ArtifactMetadataSource,org.apache.maven.artifact.resolver.filter.ArtifactFilter,java.util.List,java.util.List)>($stack8, $stack10, managedVersions, null, null, $r3, null, $stack15, null);

        return $stack16;
    }

    private org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String, java.lang.String) throws org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        java.lang.String id, version;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec $stack3;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0;

        this := @this: DefaultArtifactCollectorTest;

        id := @parameter0: java.lang.String;

        version := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String)>(id, version, "compile");

        return $stack3;
    }

    private org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String, java.lang.String, boolean) throws org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        java.lang.String id, version;
        boolean optional;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec $stack4;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0;

        this := @this: DefaultArtifactCollectorTest;

        id := @parameter0: java.lang.String;

        version := @parameter1: java.lang.String;

        optional := @parameter2: boolean;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(id, version, "compile", null, optional);

        return $stack4;
    }

    private org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String, java.lang.String, java.lang.String) throws org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        DefaultArtifactCollectorTest this;
        java.lang.String id, version, scope;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec $stack4;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0;

        this := @this: DefaultArtifactCollectorTest;

        id := @parameter0: java.lang.String;

        version := @parameter1: java.lang.String;

        scope := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(id, version, scope, null, 0);

        return $stack4;
    }

    private org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean) throws org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        java.lang.String version, id, scope, inheritedScope;
        org.apache.maven.artifact.versioning.VersionRange versionRange;
        DefaultArtifactCollectorTest this;
        boolean optional;
        org.apache.maven.artifact.factory.ArtifactFactory $stack10;
        org.apache.maven.artifact.Artifact artifact;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source $stack14;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec spec, $u0;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0, $r1, $r2;

        this := @this: DefaultArtifactCollectorTest;

        id := @parameter0: java.lang.String;

        version := @parameter1: java.lang.String;

        scope := @parameter2: java.lang.String;

        inheritedScope := @parameter3: java.lang.String;

        optional := @parameter4: boolean;

        versionRange = staticinvoke <org.apache.maven.artifact.versioning.VersionRange: org.apache.maven.artifact.versioning.VersionRange createFromVersionSpec(java.lang.String)>(version);

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack10 = $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.factory.ArtifactFactory artifactFactory>;

        artifact = interfaceinvoke $stack10.<org.apache.maven.artifact.factory.ArtifactFactory: org.apache.maven.artifact.Artifact createDependencyArtifact(java.lang.String,java.lang.String,org.apache.maven.artifact.versioning.VersionRange,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>("test", id, versionRange, "jar", null, scope, inheritedScope, optional);

        spec = null;

        if artifact == null goto label1;

        $u0 = new org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        $r1 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $u0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: void <init>(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest,org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$1)>($r1, null);

        spec = $u0;

        staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$102(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec,org.apache.maven.artifact.Artifact)>($u0, artifact);

        $r2 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        $stack14 = $r2.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source source>;

        virtualinvoke $stack14.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$Source: void addArtifact(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>($u0);

     label1:
        return spec;
    }

    private static java.util.Set createSet(java.lang.Object[])
    {
        java.util.LinkedHashSet $stack1;
        java.lang.Object[] x;
        java.util.List $stack2;

        x := @parameter0: java.lang.Object[];

        $stack1 = new java.util.LinkedHashSet;

        $stack2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(x);

        specialinvoke $stack1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($stack2);

        return $stack1;
    }

    private void lambda$testOverConstrainedVersionException$2(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec) throws java.lang.Throwable
    {
        DefaultArtifactCollectorTest this;
        java.lang.Object[] $stack2;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a;
        org.apache.maven.artifact.Artifact $stack4;
        java.util.Set $stack5;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0;

        this := @this: DefaultArtifactCollectorTest;

        a := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        $stack2 = newarray (java.lang.Object)[1];

        $stack4 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec: org.apache.maven.artifact.Artifact access$100(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        $stack2[0] = $stack4;

        $stack5 = staticinvoke <org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: java.util.Set createSet(java.lang.Object[])>($stack2);

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(java.util.Set)>($stack5);

        return;
    }

    private void lambda$testCircularDependencyIncludingCurrentProject$1(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec) throws java.lang.Throwable
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0;

        this := @this: DefaultArtifactCollectorTest;

        a := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        return;
    }

    private void lambda$testCircularDependencyNotIncludingCurrentProject$0(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec) throws java.lang.Throwable
    {
        DefaultArtifactCollectorTest this;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec a;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest $r0;

        this := @this: DefaultArtifactCollectorTest;

        a := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec;

        $r0 = (org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest) this;

        specialinvoke $r0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.resolver.ArtifactResolutionResult collect(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec)>(a);

        return;
    }

    static org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec access$400(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean) throws org.apache.maven.artifact.versioning.InvalidVersionSpecificationException
    {
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest x0;
        java.lang.String x1, x2, x3, x4;
        boolean x5;
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec $stack6;

        x0 := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest;

        x1 := @parameter1: java.lang.String;

        x2 := @parameter2: java.lang.String;

        x3 := @parameter3: java.lang.String;

        x4 := @parameter4: java.lang.String;

        x5 := @parameter5: boolean;

        $stack6 = specialinvoke x0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest$ArtifactSpec createArtifactSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>(x1, x2, x3, x4, x5);

        return $stack6;
    }

    static org.apache.maven.artifact.factory.ArtifactFactory access$500(org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest)
    {
        org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest x0;
        org.apache.maven.artifact.factory.ArtifactFactory $stack1;

        x0 := @parameter0: org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest;

        $stack1 = x0.<org.apache.maven.repository.legacy.resolver.DefaultArtifactCollectorTest: org.apache.maven.artifact.factory.ArtifactFactory artifactFactory>;

        return $stack1;
    }

    public static void <clinit>()
    {
        <DefaultArtifactCollectorTest: java.lang.String GROUP_ID> = "test";

        return;
    }
}
