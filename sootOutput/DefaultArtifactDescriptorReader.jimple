public class DefaultArtifactDescriptorReader extends java.lang.Object implements org.eclipse.aether.impl.ArtifactDescriptorReader, org.eclipse.aether.spi.locator.Service
{
    private org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager;
    private org.eclipse.aether.impl.VersionResolver versionResolver;
    private org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver;
    private org.eclipse.aether.impl.ArtifactResolver artifactResolver;
    private org.eclipse.aether.impl.RepositoryEventDispatcher repositoryEventDispatcher;
    private org.apache.maven.model.building.ModelBuilder modelBuilder;

    public void <init>()
    {
        DefaultArtifactDescriptorReader this;

        this := @this: DefaultArtifactDescriptorReader;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    void <init>(org.eclipse.aether.impl.RemoteRepositoryManager, org.eclipse.aether.impl.VersionResolver, org.eclipse.aether.impl.VersionRangeResolver, org.eclipse.aether.impl.ArtifactResolver, org.apache.maven.model.building.ModelBuilder, org.eclipse.aether.impl.RepositoryEventDispatcher)
    {
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager;
        org.eclipse.aether.impl.VersionResolver versionResolver;
        org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver;
        org.eclipse.aether.impl.ArtifactResolver artifactResolver;
        org.apache.maven.model.building.ModelBuilder modelBuilder;
        org.eclipse.aether.impl.RepositoryEventDispatcher repositoryEventDispatcher;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: DefaultArtifactDescriptorReader;

        remoteRepositoryManager := @parameter0: org.eclipse.aether.impl.RemoteRepositoryManager;

        versionResolver := @parameter1: org.eclipse.aether.impl.VersionResolver;

        versionRangeResolver := @parameter2: org.eclipse.aether.impl.VersionRangeResolver;

        artifactResolver := @parameter3: org.eclipse.aether.impl.ArtifactResolver;

        modelBuilder := @parameter4: org.apache.maven.model.building.ModelBuilder;

        repositoryEventDispatcher := @parameter5: org.eclipse.aether.impl.RepositoryEventDispatcher;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setRemoteRepositoryManager(org.eclipse.aether.impl.RemoteRepositoryManager)>(remoteRepositoryManager);

        $r1 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r1.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setVersionResolver(org.eclipse.aether.impl.VersionResolver)>(versionResolver);

        $r2 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r2.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setVersionRangeResolver(org.eclipse.aether.impl.VersionRangeResolver)>(versionRangeResolver);

        $r3 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r3.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setArtifactResolver(org.eclipse.aether.impl.ArtifactResolver)>(artifactResolver);

        $r4 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r4.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setModelBuilder(org.apache.maven.model.building.ModelBuilder)>(modelBuilder);

        $r5 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r5.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setRepositoryEventDispatcher(org.eclipse.aether.impl.RepositoryEventDispatcher)>(repositoryEventDispatcher);

        return;
    }

    public void initService(org.eclipse.aether.spi.locator.ServiceLocator)
    {
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.spi.locator.ServiceLocator locator;
        java.lang.Object $stack2, $stack5, $stack8, $stack11, $stack14, $stack17;
        org.eclipse.aether.impl.RemoteRepositoryManager $stack3;
        org.eclipse.aether.impl.VersionResolver $stack6;
        org.eclipse.aether.impl.VersionRangeResolver $stack9;
        org.eclipse.aether.impl.ArtifactResolver $stack12;
        org.apache.maven.model.building.ModelBuilder $stack15, $stack16, $r7;
        org.eclipse.aether.impl.RepositoryEventDispatcher $stack18;
        org.apache.maven.model.building.DefaultModelBuilder $stack21;
        org.apache.maven.model.building.DefaultModelBuilderFactory $u0;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8;

        this := @this: DefaultArtifactDescriptorReader;

        locator := @parameter0: org.eclipse.aether.spi.locator.ServiceLocator;

        $stack2 = interfaceinvoke locator.<org.eclipse.aether.spi.locator.ServiceLocator: java.lang.Object getService(java.lang.Class)>(class "Lorg/eclipse/aether/impl/RemoteRepositoryManager;");

        $stack3 = (org.eclipse.aether.impl.RemoteRepositoryManager) $stack2;

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setRemoteRepositoryManager(org.eclipse.aether.impl.RemoteRepositoryManager)>($stack3);

        $stack5 = interfaceinvoke locator.<org.eclipse.aether.spi.locator.ServiceLocator: java.lang.Object getService(java.lang.Class)>(class "Lorg/eclipse/aether/impl/VersionResolver;");

        $stack6 = (org.eclipse.aether.impl.VersionResolver) $stack5;

        $r1 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r1.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setVersionResolver(org.eclipse.aether.impl.VersionResolver)>($stack6);

        $stack8 = interfaceinvoke locator.<org.eclipse.aether.spi.locator.ServiceLocator: java.lang.Object getService(java.lang.Class)>(class "Lorg/eclipse/aether/impl/VersionRangeResolver;");

        $stack9 = (org.eclipse.aether.impl.VersionRangeResolver) $stack8;

        $r2 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r2.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setVersionRangeResolver(org.eclipse.aether.impl.VersionRangeResolver)>($stack9);

        $stack11 = interfaceinvoke locator.<org.eclipse.aether.spi.locator.ServiceLocator: java.lang.Object getService(java.lang.Class)>(class "Lorg/eclipse/aether/impl/ArtifactResolver;");

        $stack12 = (org.eclipse.aether.impl.ArtifactResolver) $stack11;

        $r3 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r3.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setArtifactResolver(org.eclipse.aether.impl.ArtifactResolver)>($stack12);

        $stack14 = interfaceinvoke locator.<org.eclipse.aether.spi.locator.ServiceLocator: java.lang.Object getService(java.lang.Class)>(class "Lorg/apache/maven/model/building/ModelBuilder;");

        $stack15 = (org.apache.maven.model.building.ModelBuilder) $stack14;

        $r4 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r4.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.model.building.ModelBuilder modelBuilder> = $stack15;

        $r5 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack16 = $r5.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.model.building.ModelBuilder modelBuilder>;

        if $stack16 != null goto label1;

        $u0 = new org.apache.maven.model.building.DefaultModelBuilderFactory;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuilderFactory: void <init>()>();

        $stack21 = virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuilderFactory: org.apache.maven.model.building.DefaultModelBuilder newInstance()>();

        $r6 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r7 = (org.apache.maven.model.building.ModelBuilder) $stack21;

        virtualinvoke $r6.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setModelBuilder(org.apache.maven.model.building.ModelBuilder)>($r7);

     label1:
        $stack17 = interfaceinvoke locator.<org.eclipse.aether.spi.locator.ServiceLocator: java.lang.Object getService(java.lang.Class)>(class "Lorg/eclipse/aether/impl/RepositoryEventDispatcher;");

        $stack18 = (org.eclipse.aether.impl.RepositoryEventDispatcher) $stack17;

        $r8 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        virtualinvoke $r8.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setRepositoryEventDispatcher(org.eclipse.aether.impl.RepositoryEventDispatcher)>($stack18);

        return;
    }

    public org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setRemoteRepositoryManager(org.eclipse.aether.impl.RemoteRepositoryManager)
    {
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager, $stack3;
        java.lang.Object $stack2;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0, $r1;

        this := @this: DefaultArtifactDescriptorReader;

        remoteRepositoryManager := @parameter0: org.eclipse.aether.impl.RemoteRepositoryManager;

        $stack2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(remoteRepositoryManager, "remoteRepositoryManager cannot be null");

        $stack3 = (org.eclipse.aether.impl.RemoteRepositoryManager) $stack2;

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager> = $stack3;

        $r1 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        return $r1;
    }

    public org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setVersionResolver(org.eclipse.aether.impl.VersionResolver)
    {
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.impl.VersionResolver versionResolver, $stack3;
        java.lang.Object $stack2;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0, $r1;

        this := @this: DefaultArtifactDescriptorReader;

        versionResolver := @parameter0: org.eclipse.aether.impl.VersionResolver;

        $stack2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(versionResolver, "versionResolver cannot be null");

        $stack3 = (org.eclipse.aether.impl.VersionResolver) $stack2;

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.VersionResolver versionResolver> = $stack3;

        $r1 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        return $r1;
    }

    public org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setVersionRangeResolver(org.eclipse.aether.impl.VersionRangeResolver)
    {
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver, $stack3;
        java.lang.Object $stack2;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0, $r1;

        this := @this: DefaultArtifactDescriptorReader;

        versionRangeResolver := @parameter0: org.eclipse.aether.impl.VersionRangeResolver;

        $stack2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(versionRangeResolver, "versionRangeResolver cannot be null");

        $stack3 = (org.eclipse.aether.impl.VersionRangeResolver) $stack2;

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver> = $stack3;

        $r1 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        return $r1;
    }

    public org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setArtifactResolver(org.eclipse.aether.impl.ArtifactResolver)
    {
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.impl.ArtifactResolver artifactResolver, $stack3;
        java.lang.Object $stack2;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0, $r1;

        this := @this: DefaultArtifactDescriptorReader;

        artifactResolver := @parameter0: org.eclipse.aether.impl.ArtifactResolver;

        $stack2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(artifactResolver, "artifactResolver cannot be null");

        $stack3 = (org.eclipse.aether.impl.ArtifactResolver) $stack2;

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.ArtifactResolver artifactResolver> = $stack3;

        $r1 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        return $r1;
    }

    public org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setRepositoryEventDispatcher(org.eclipse.aether.impl.RepositoryEventDispatcher)
    {
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.impl.RepositoryEventDispatcher repositoryEventDispatcher, $stack3;
        java.lang.Object $stack2;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0, $r1;

        this := @this: DefaultArtifactDescriptorReader;

        repositoryEventDispatcher := @parameter0: org.eclipse.aether.impl.RepositoryEventDispatcher;

        $stack2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(repositoryEventDispatcher, "repositoryEventDispatcher cannot be null");

        $stack3 = (org.eclipse.aether.impl.RepositoryEventDispatcher) $stack2;

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.RepositoryEventDispatcher repositoryEventDispatcher> = $stack3;

        $r1 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        return $r1;
    }

    public org.apache.maven.repository.internal.DefaultArtifactDescriptorReader setModelBuilder(org.apache.maven.model.building.ModelBuilder)
    {
        DefaultArtifactDescriptorReader this;
        org.apache.maven.model.building.ModelBuilder modelBuilder, $stack3;
        java.lang.Object $stack2;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0, $r1;

        this := @this: DefaultArtifactDescriptorReader;

        modelBuilder := @parameter0: org.apache.maven.model.building.ModelBuilder;

        $stack2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(modelBuilder, "modelBuilder cannot be null");

        $stack3 = (org.apache.maven.model.building.ModelBuilder) $stack2;

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.model.building.ModelBuilder modelBuilder> = $stack3;

        $r1 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        return $r1;
    }

    public org.eclipse.aether.resolution.ArtifactDescriptorResult readArtifactDescriptor(org.eclipse.aether.RepositorySystemSession, org.eclipse.aether.resolution.ArtifactDescriptorRequest) throws org.eclipse.aether.resolution.ArtifactDescriptorException
    {
        org.eclipse.aether.resolution.ArtifactDescriptorRequest request;
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.RepositorySystemSession session;
        org.apache.maven.model.Model model;
        java.util.Map config;
        java.lang.Class $stack10;
        java.lang.String $stack11;
        java.lang.Object $stack12;
        org.apache.maven.repository.internal.ArtifactDescriptorReaderDelegate delegate, $u1;
        org.eclipse.aether.resolution.ArtifactDescriptorResult $u0;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0;

        this := @this: DefaultArtifactDescriptorReader;

        session := @parameter0: org.eclipse.aether.RepositorySystemSession;

        request := @parameter1: org.eclipse.aether.resolution.ArtifactDescriptorRequest;

        $u0 = new org.eclipse.aether.resolution.ArtifactDescriptorResult;

        specialinvoke $u0.<org.eclipse.aether.resolution.ArtifactDescriptorResult: void <init>(org.eclipse.aether.resolution.ArtifactDescriptorRequest)>(request);

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        model = specialinvoke $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.model.Model loadPom(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.ArtifactDescriptorRequest,org.eclipse.aether.resolution.ArtifactDescriptorResult)>(session, request, $u0);

        if model == null goto label2;

        config = interfaceinvoke session.<org.eclipse.aether.RepositorySystemSession: java.util.Map getConfigProperties()>();

        $stack10 = class "Lorg/apache/maven/repository/internal/ArtifactDescriptorReaderDelegate;";

        $stack11 = virtualinvoke $stack10.<java.lang.Class: java.lang.String getName()>();

        $stack12 = interfaceinvoke config.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack11);

        delegate = (org.apache.maven.repository.internal.ArtifactDescriptorReaderDelegate) $stack12;

        if delegate != null goto label1;

        $u1 = new org.apache.maven.repository.internal.ArtifactDescriptorReaderDelegate;

        specialinvoke $u1.<org.apache.maven.repository.internal.ArtifactDescriptorReaderDelegate: void <init>()>();

        delegate = $u1;

     label1:
        virtualinvoke delegate.<org.apache.maven.repository.internal.ArtifactDescriptorReaderDelegate: void populateResult(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.ArtifactDescriptorResult,org.apache.maven.model.Model)>(session, $u0, model);

     label2:
        return $u0;
    }

    private org.apache.maven.model.Model loadPom(org.eclipse.aether.RepositorySystemSession, org.eclipse.aether.resolution.ArtifactDescriptorRequest, org.eclipse.aether.resolution.ArtifactDescriptorResult) throws org.eclipse.aether.resolution.ArtifactDescriptorException
    {
        org.eclipse.aether.resolution.ArtifactDescriptorRequest request;
        org.eclipse.aether.RequestTrace $stack14, trace, $stack68;
        java.util.List $stack20, $stack28, $stack47, $stack73, $stack152;
        java.lang.String $stack21, $stack25, $stack29, $stack33, $stack36, $stack39, $stack42, $stack44, $stack48, $stack69, $stack79, $stack80, $stack81, $stack89, $stack90, $stack91, $stack146;
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.RepositorySystemSession session;
        org.eclipse.aether.impl.VersionResolver $stack23, $stack31;
        java.lang.StringBuilder $stack37, $stack38, $stack40, $stack41, $stack43, $stack144, $stack145, $u4, $u5;
        boolean $stack45, $stack56, $stack76, $stack154, $stack161, $stack168;
        org.eclipse.aether.impl.ArtifactResolver $stack50, $stack70;
        org.eclipse.aether.resolution.ArtifactDescriptorResult result;
        org.eclipse.aether.repository.ArtifactRepository $stack53, $stack75;
        org.eclipse.aether.repository.WorkspaceReader workspace;
        java.util.Map $stack61, $stack62;
        java.util.Properties $stack63;
        org.apache.maven.model.building.ModelCache $stack65;
        org.eclipse.aether.impl.VersionRangeResolver $stack71;
        org.eclipse.aether.impl.RemoteRepositoryManager $stack72;
        java.io.File $stack78, $stack114;
        org.apache.maven.model.building.ModelBuilder $stack83;
        org.apache.maven.model.building.ModelBuildingResult $stack84;
        org.apache.maven.repository.internal.MavenWorkspaceReader $stack118;
        int $stack147, $stack148, $stack155, $stack156, $stack173, $stack174;
        java.lang.Throwable $stack151, $stack166, $stack167, $stack171, $stack178, $r6, $r11, $r18, $r36, $r41;
        java.util.Iterator l12;
        java.lang.Object $stack159, a;
        org.apache.maven.model.building.ModelProblem problem;
        java.lang.Exception $stack160, $stack163, $stack172, $r5, $r8, $r10, $r17, $r38, $r40;
        org.eclipse.aether.artifact.Artifact pomArtifact, a#5, $r0, $r1, $r3, $r43;
        org.eclipse.aether.resolution.VersionResult versionResult;
        org.eclipse.aether.resolution.ArtifactResult versionRequest#12;
        org.apache.maven.model.Model versionResult#15;
        org.apache.maven.model.Relocation modelRequest#19;
        java.util.LinkedHashSet $u0;
        org.eclipse.aether.resolution.VersionRequest $u1, $u2;
        org.eclipse.aether.resolution.ArtifactDescriptorException $u3, $u7, $u9, $u13, $u14;
        org.eclipse.aether.RepositoryException $u6;
        org.eclipse.aether.resolution.ArtifactRequest $u8;
        org.apache.maven.model.building.DefaultModelBuildingRequest $u10;
        org.apache.maven.repository.internal.DefaultModelResolver $u11;
        org.apache.maven.model.building.ArtifactModelSource $u12;
        org.apache.maven.repository.internal.RelocatedArtifact $u15;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r2, $r4, $r7, $r9, $r12, $r15, $r16, $r22, $r25, $r26, $r27, $r33, $r37, $r39, $r42;
        org.eclipse.aether.resolution.ArtifactResolutionException $r13, $r14;
        org.apache.maven.model.building.ModelBuildingRequest $r19, $r20, $r21, $r23, $r24, $r28, $r30, $r31, $r34;
        org.apache.maven.model.resolution.ModelResolver $r29;
        org.apache.maven.model.building.ModelSource $r32;
        org.apache.maven.model.building.ModelBuildingException $r35;

        this := @this: DefaultArtifactDescriptorReader;

        session := @parameter0: org.eclipse.aether.RepositorySystemSession;

        request := @parameter1: org.eclipse.aether.resolution.ArtifactDescriptorRequest;

        result := @parameter2: org.eclipse.aether.resolution.ArtifactDescriptorResult;

        $stack14 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: org.eclipse.aether.RequestTrace getTrace()>();

        trace = staticinvoke <org.eclipse.aether.RequestTrace: org.eclipse.aether.RequestTrace newChild(org.eclipse.aether.RequestTrace,java.lang.Object)>($stack14, request);

        $u0 = new java.util.LinkedHashSet;

        specialinvoke $u0.<java.util.LinkedHashSet: void <init>()>();

        a = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: org.eclipse.aether.artifact.Artifact getArtifact()>();

     label01:
        $r0 = (org.eclipse.aether.artifact.Artifact) a;

        pomArtifact = staticinvoke <org.apache.maven.repository.internal.ArtifactDescriptorUtils: org.eclipse.aether.artifact.Artifact toPomArtifact(org.eclipse.aether.artifact.Artifact)>($r0);

     label02:
        $u1 = new org.eclipse.aether.resolution.VersionRequest;

        $stack20 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: java.util.List getRepositories()>();

        $stack21 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: java.lang.String getRequestContext()>();

        $r1 = (org.eclipse.aether.artifact.Artifact) a;

        specialinvoke $u1.<org.eclipse.aether.resolution.VersionRequest: void <init>(org.eclipse.aether.artifact.Artifact,java.util.List,java.lang.String)>($r1, $stack20, $stack21);

        virtualinvoke $u1.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest setTrace(org.eclipse.aether.RequestTrace)>(trace);

        $r2 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack23 = $r2.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.VersionResolver versionResolver>;

        versionResult = interfaceinvoke $stack23.<org.eclipse.aether.impl.VersionResolver: org.eclipse.aether.resolution.VersionResult resolveVersion(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.VersionRequest)>(session, $u1);

        $stack25 = virtualinvoke versionResult.<org.eclipse.aether.resolution.VersionResult: java.lang.String getVersion()>();

        $r3 = (org.eclipse.aether.artifact.Artifact) a;

        a#5 = interfaceinvoke $r3.<org.eclipse.aether.artifact.Artifact: org.eclipse.aether.artifact.Artifact setVersion(java.lang.String)>($stack25);

        $u2 = new org.eclipse.aether.resolution.VersionRequest;

        $stack28 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: java.util.List getRepositories()>();

        $stack29 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: java.lang.String getRequestContext()>();

        specialinvoke $u2.<org.eclipse.aether.resolution.VersionRequest: void <init>(org.eclipse.aether.artifact.Artifact,java.util.List,java.lang.String)>(pomArtifact, $stack28, $stack29);

        virtualinvoke $u2.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest setTrace(org.eclipse.aether.RequestTrace)>(trace);

        $r4 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack31 = $r4.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.VersionResolver versionResolver>;

        versionResult = interfaceinvoke $stack31.<org.eclipse.aether.impl.VersionResolver: org.eclipse.aether.resolution.VersionResult resolveVersion(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.VersionRequest)>(session, $u2);

        $stack33 = virtualinvoke versionResult.<org.eclipse.aether.resolution.VersionResult: java.lang.String getVersion()>();

        pomArtifact = interfaceinvoke pomArtifact.<org.eclipse.aether.artifact.Artifact: org.eclipse.aether.artifact.Artifact setVersion(java.lang.String)>($stack33);

     label03:
        goto label05;

     label04:
        $stack178 := @caughtexception;

        $r5 = (java.lang.Exception) $stack178;

        virtualinvoke result.<org.eclipse.aether.resolution.ArtifactDescriptorResult: org.eclipse.aether.resolution.ArtifactDescriptorResult addException(java.lang.Exception)>($r5);

        $u3 = new org.eclipse.aether.resolution.ArtifactDescriptorException;

        specialinvoke $u3.<org.eclipse.aether.resolution.ArtifactDescriptorException: void <init>(org.eclipse.aether.resolution.ArtifactDescriptorResult)>(result);

        $r6 = (java.lang.Throwable) $u3;

        throw $r6;

     label05:
        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack36 = interfaceinvoke a#5.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>();

        $stack37 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36);

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack39 = interfaceinvoke a#5.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39);

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack42 = interfaceinvoke a#5.<org.eclipse.aether.artifact.Artifact: java.lang.String getBaseVersion()>();

        $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42);

        $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack45 = interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>($stack44);

        if $stack45 != 0 goto label07;

        $u6 = new org.eclipse.aether.RepositoryException;

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack144 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Artifact relocations form a cycle: ");

        $stack145 = virtualinvoke $stack144.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u0);

        $stack146 = virtualinvoke $stack145.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u6.<org.eclipse.aether.RepositoryException: void <init>(java.lang.String)>($stack146);

        $r7 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r8 = (java.lang.Exception) $u6;

        specialinvoke $r7.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: void invalidDescriptor(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.RequestTrace,org.eclipse.aether.artifact.Artifact,java.lang.Exception)>(session, trace, a#5, $r8);

        $r9 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack147 = specialinvoke $r9.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: int getPolicy(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.artifact.Artifact,org.eclipse.aether.resolution.ArtifactDescriptorRequest)>(session, a#5, request);

        $stack148 = $stack147 & 2;

        if $stack148 == 0 goto label06;

        return null;

     label06:
        $r10 = (java.lang.Exception) $u6;

        virtualinvoke result.<org.eclipse.aether.resolution.ArtifactDescriptorResult: org.eclipse.aether.resolution.ArtifactDescriptorResult addException(java.lang.Exception)>($r10);

        $u7 = new org.eclipse.aether.resolution.ArtifactDescriptorException;

        specialinvoke $u7.<org.eclipse.aether.resolution.ArtifactDescriptorException: void <init>(org.eclipse.aether.resolution.ArtifactDescriptorResult)>(result);

        $r11 = (java.lang.Throwable) $u7;

        throw $r11;

     label07:
        $u8 = new org.eclipse.aether.resolution.ArtifactRequest;

        $stack47 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: java.util.List getRepositories()>();

        $stack48 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: java.lang.String getRequestContext()>();

        specialinvoke $u8.<org.eclipse.aether.resolution.ArtifactRequest: void <init>(org.eclipse.aether.artifact.Artifact,java.util.List,java.lang.String)>(pomArtifact, $stack47, $stack48);

        virtualinvoke $u8.<org.eclipse.aether.resolution.ArtifactRequest: org.eclipse.aether.resolution.ArtifactRequest setTrace(org.eclipse.aether.RequestTrace)>(trace);

        $r12 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack50 = $r12.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.ArtifactResolver artifactResolver>;

        versionRequest#12 = interfaceinvoke $stack50.<org.eclipse.aether.impl.ArtifactResolver: org.eclipse.aether.resolution.ArtifactResult resolveArtifact(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.ArtifactRequest)>(session, $u8);

        pomArtifact = virtualinvoke versionRequest#12.<org.eclipse.aether.resolution.ArtifactResult: org.eclipse.aether.artifact.Artifact getArtifact()>();

        $stack53 = virtualinvoke versionRequest#12.<org.eclipse.aether.resolution.ArtifactResult: org.eclipse.aether.repository.ArtifactRepository getRepository()>();

        virtualinvoke result.<org.eclipse.aether.resolution.ArtifactDescriptorResult: org.eclipse.aether.resolution.ArtifactDescriptorResult setRepository(org.eclipse.aether.repository.ArtifactRepository)>($stack53);

     label08:
        goto label11;

     label09:
        $stack166 := @caughtexception;

        $r13 = (org.eclipse.aether.resolution.ArtifactResolutionException) $stack166;

        $stack167 = virtualinvoke $r13.<org.eclipse.aether.resolution.ArtifactResolutionException: java.lang.Throwable getCause()>();

        $stack168 = $stack167 instanceof org.eclipse.aether.transfer.ArtifactNotFoundException;

        if $stack168 == 0 goto label10;

        $r14 = (org.eclipse.aether.resolution.ArtifactResolutionException) $stack166;

        $stack171 = virtualinvoke $r14.<org.eclipse.aether.resolution.ArtifactResolutionException: java.lang.Throwable getCause()>();

        $stack172 = (java.lang.Exception) $stack171;

        $r15 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        specialinvoke $r15.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: void missingDescriptor(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.RequestTrace,org.eclipse.aether.artifact.Artifact,java.lang.Exception)>(session, trace, a#5, $stack172);

        $r16 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack173 = specialinvoke $r16.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: int getPolicy(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.artifact.Artifact,org.eclipse.aether.resolution.ArtifactDescriptorRequest)>(session, a#5, request);

        $stack174 = $stack173 & 1;

        if $stack174 == 0 goto label10;

        return null;

     label10:
        $r17 = (java.lang.Exception) $stack166;

        virtualinvoke result.<org.eclipse.aether.resolution.ArtifactDescriptorResult: org.eclipse.aether.resolution.ArtifactDescriptorResult addException(java.lang.Exception)>($r17);

        $u9 = new org.eclipse.aether.resolution.ArtifactDescriptorException;

        specialinvoke $u9.<org.eclipse.aether.resolution.ArtifactDescriptorException: void <init>(org.eclipse.aether.resolution.ArtifactDescriptorResult)>(result);

        $r18 = (java.lang.Throwable) $u9;

        throw $r18;

     label11:
        workspace = interfaceinvoke session.<org.eclipse.aether.RepositorySystemSession: org.eclipse.aether.repository.WorkspaceReader getWorkspaceReader()>();

        $stack56 = workspace instanceof org.apache.maven.repository.internal.MavenWorkspaceReader;

        if $stack56 == 0 goto label12;

        $stack118 = (org.apache.maven.repository.internal.MavenWorkspaceReader) workspace;

        versionResult#15 = interfaceinvoke $stack118.<org.apache.maven.repository.internal.MavenWorkspaceReader: org.apache.maven.model.Model findModel(org.eclipse.aether.artifact.Artifact)>(pomArtifact);

        if versionResult#15 == null goto label12;

        return versionResult#15;

     label12:
        $u10 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        specialinvoke $u10.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>()>();

        $r19 = (org.apache.maven.model.building.ModelBuildingRequest) $u10;

        interfaceinvoke $r19.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setValidationLevel(int)>(0);

        $r20 = (org.apache.maven.model.building.ModelBuildingRequest) $u10;

        interfaceinvoke $r20.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setProcessPlugins(boolean)>(0);

        $r21 = (org.apache.maven.model.building.ModelBuildingRequest) $u10;

        interfaceinvoke $r21.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setTwoPhaseBuilding(boolean)>(0);

        $stack61 = interfaceinvoke session.<org.eclipse.aether.RepositorySystemSession: java.util.Map getUserProperties()>();

        $stack62 = interfaceinvoke session.<org.eclipse.aether.RepositorySystemSession: java.util.Map getSystemProperties()>();

        $r22 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack63 = specialinvoke $r22.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: java.util.Properties toProperties(java.util.Map,java.util.Map)>($stack61, $stack62);

        $r23 = (org.apache.maven.model.building.ModelBuildingRequest) $u10;

        interfaceinvoke $r23.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setSystemProperties(java.util.Properties)>($stack63);

        $stack65 = staticinvoke <org.apache.maven.repository.internal.DefaultModelCache: org.apache.maven.model.building.ModelCache newInstance(org.eclipse.aether.RepositorySystemSession)>(session);

        $r24 = (org.apache.maven.model.building.ModelBuildingRequest) $u10;

        interfaceinvoke $r24.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setModelCache(org.apache.maven.model.building.ModelCache)>($stack65);

        $u11 = new org.apache.maven.repository.internal.DefaultModelResolver;

        $stack68 = virtualinvoke trace.<org.eclipse.aether.RequestTrace: org.eclipse.aether.RequestTrace newChild(java.lang.Object)>($u10);

        $stack69 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: java.lang.String getRequestContext()>();

        $r25 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack70 = $r25.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.ArtifactResolver artifactResolver>;

        $r26 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack71 = $r26.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver>;

        $r27 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack72 = $r27.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager>;

        $stack73 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: java.util.List getRepositories()>();

        specialinvoke $u11.<org.apache.maven.repository.internal.DefaultModelResolver: void <init>(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.RequestTrace,java.lang.String,org.eclipse.aether.impl.ArtifactResolver,org.eclipse.aether.impl.VersionRangeResolver,org.eclipse.aether.impl.RemoteRepositoryManager,java.util.List)>(session, $stack68, $stack69, $stack70, $stack71, $stack72, $stack73);

        $r28 = (org.apache.maven.model.building.ModelBuildingRequest) $u10;

        $r29 = (org.apache.maven.model.resolution.ModelResolver) $u11;

        interfaceinvoke $r28.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setModelResolver(org.apache.maven.model.resolution.ModelResolver)>($r29);

        $stack75 = virtualinvoke versionRequest#12.<org.eclipse.aether.resolution.ArtifactResult: org.eclipse.aether.repository.ArtifactRepository getRepository()>();

        $stack76 = $stack75 instanceof org.eclipse.aether.repository.WorkspaceRepository;

        if $stack76 == 0 goto label13;

        $stack114 = interfaceinvoke pomArtifact.<org.eclipse.aether.artifact.Artifact: java.io.File getFile()>();

        $r30 = (org.apache.maven.model.building.ModelBuildingRequest) $u10;

        interfaceinvoke $r30.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setPomFile(java.io.File)>($stack114);

        goto label14;

     label13:
        $u12 = new org.apache.maven.model.building.ArtifactModelSource;

        $stack78 = interfaceinvoke pomArtifact.<org.eclipse.aether.artifact.Artifact: java.io.File getFile()>();

        $stack79 = interfaceinvoke pomArtifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>();

        $stack80 = interfaceinvoke pomArtifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack81 = interfaceinvoke pomArtifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getVersion()>();

        specialinvoke $u12.<org.apache.maven.model.building.ArtifactModelSource: void <init>(java.io.File,java.lang.String,java.lang.String,java.lang.String)>($stack78, $stack79, $stack80, $stack81);

        $r31 = (org.apache.maven.model.building.ModelBuildingRequest) $u10;

        $r32 = (org.apache.maven.model.building.ModelSource) $u12;

        interfaceinvoke $r31.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setModelSource(org.apache.maven.model.building.ModelSource)>($r32);

     label14:
        $r33 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack83 = $r33.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.model.building.ModelBuilder modelBuilder>;

        $r34 = (org.apache.maven.model.building.ModelBuildingRequest) $u10;

        $stack84 = interfaceinvoke $stack83.<org.apache.maven.model.building.ModelBuilder: org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest)>($r34);

        versionResult#15 = interfaceinvoke $stack84.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getEffectiveModel()>();

     label15:
        goto label21;

     label16:
        $stack151 := @caughtexception;

        $r35 = (org.apache.maven.model.building.ModelBuildingException) $stack151;

        $stack152 = virtualinvoke $r35.<org.apache.maven.model.building.ModelBuildingException: java.util.List getProblems()>();

        l12 = interfaceinvoke $stack152.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $stack154 = interfaceinvoke l12.<java.util.Iterator: boolean hasNext()>();

        if $stack154 == 0 goto label19;

        $stack159 = interfaceinvoke l12.<java.util.Iterator: java.lang.Object next()>();

        problem = (org.apache.maven.model.building.ModelProblem) $stack159;

        $stack160 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.Exception getException()>();

        $stack161 = $stack160 instanceof org.apache.maven.model.resolution.UnresolvableModelException;

        if $stack161 == 0 goto label18;

        $stack163 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.Exception getException()>();

        virtualinvoke result.<org.eclipse.aether.resolution.ArtifactDescriptorResult: org.eclipse.aether.resolution.ArtifactDescriptorResult addException(java.lang.Exception)>($stack163);

        $u13 = new org.eclipse.aether.resolution.ArtifactDescriptorException;

        specialinvoke $u13.<org.eclipse.aether.resolution.ArtifactDescriptorException: void <init>(org.eclipse.aether.resolution.ArtifactDescriptorResult)>(result);

        $r36 = (java.lang.Throwable) $u13;

        throw $r36;

     label18:
        goto label17;

     label19:
        $r37 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $r38 = (java.lang.Exception) $stack151;

        specialinvoke $r37.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: void invalidDescriptor(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.RequestTrace,org.eclipse.aether.artifact.Artifact,java.lang.Exception)>(session, trace, a#5, $r38);

        $r39 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack155 = specialinvoke $r39.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: int getPolicy(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.artifact.Artifact,org.eclipse.aether.resolution.ArtifactDescriptorRequest)>(session, a#5, request);

        $stack156 = $stack155 & 2;

        if $stack156 == 0 goto label20;

        return null;

     label20:
        $r40 = (java.lang.Exception) $stack151;

        virtualinvoke result.<org.eclipse.aether.resolution.ArtifactDescriptorResult: org.eclipse.aether.resolution.ArtifactDescriptorResult addException(java.lang.Exception)>($r40);

        $u14 = new org.eclipse.aether.resolution.ArtifactDescriptorException;

        specialinvoke $u14.<org.eclipse.aether.resolution.ArtifactDescriptorException: void <init>(org.eclipse.aether.resolution.ArtifactDescriptorResult)>(result);

        $r41 = (java.lang.Throwable) $u14;

        throw $r41;

     label21:
        $r42 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        modelRequest#19 = specialinvoke $r42.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.apache.maven.model.Relocation getRelocation(org.apache.maven.model.Model)>(versionResult#15);

        if modelRequest#19 == null goto label22;

        virtualinvoke result.<org.eclipse.aether.resolution.ArtifactDescriptorResult: org.eclipse.aether.resolution.ArtifactDescriptorResult addRelocation(org.eclipse.aether.artifact.Artifact)>(a#5);

        $u15 = new org.apache.maven.repository.internal.RelocatedArtifact;

        $stack89 = virtualinvoke modelRequest#19.<org.apache.maven.model.Relocation: java.lang.String getGroupId()>();

        $stack90 = virtualinvoke modelRequest#19.<org.apache.maven.model.Relocation: java.lang.String getArtifactId()>();

        $stack91 = virtualinvoke modelRequest#19.<org.apache.maven.model.Relocation: java.lang.String getVersion()>();

        specialinvoke $u15.<org.apache.maven.repository.internal.RelocatedArtifact: void <init>(org.eclipse.aether.artifact.Artifact,java.lang.String,java.lang.String,java.lang.String)>(a#5, $stack89, $stack90, $stack91);

        a = $u15;

        $r43 = (org.eclipse.aether.artifact.Artifact) $u15;

        virtualinvoke result.<org.eclipse.aether.resolution.ArtifactDescriptorResult: org.eclipse.aether.resolution.ArtifactDescriptorResult setArtifact(org.eclipse.aether.artifact.Artifact)>($r43);

        goto label23;

     label22:
        return versionResult#15;

     label23:
        goto label01;

        catch org.eclipse.aether.resolution.VersionResolutionException from label02 to label03 with label04;
        catch org.eclipse.aether.resolution.ArtifactResolutionException from label07 to label08 with label09;
        catch org.apache.maven.model.building.ModelBuildingException from label12 to label15 with label16;
    }

    private java.util.Properties toProperties(java.util.Map, java.util.Map)
    {
        java.util.Properties $stack4;
        java.util.Map recessive, dominant;
        DefaultArtifactDescriptorReader this;

        this := @this: DefaultArtifactDescriptorReader;

        dominant := @parameter0: java.util.Map;

        recessive := @parameter1: java.util.Map;

        $stack4 = new java.util.Properties;

        specialinvoke $stack4.<java.util.Properties: void <init>()>();

        if recessive == null goto label1;

        virtualinvoke $stack4.<java.util.Properties: void putAll(java.util.Map)>(recessive);

     label1:
        if dominant == null goto label2;

        virtualinvoke $stack4.<java.util.Properties: void putAll(java.util.Map)>(dominant);

     label2:
        return $stack4;
    }

    private org.apache.maven.model.Relocation getRelocation(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model model;
        org.apache.maven.model.DistributionManagement distMgmt;
        DefaultArtifactDescriptorReader this;
        org.apache.maven.model.Relocation relocation;

        this := @this: DefaultArtifactDescriptorReader;

        model := @parameter0: org.apache.maven.model.Model;

        relocation = null;

        distMgmt = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if distMgmt == null goto label1;

        relocation = virtualinvoke distMgmt.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Relocation getRelocation()>();

     label1:
        return relocation;
    }

    private void missingDescriptor(org.eclipse.aether.RepositorySystemSession, org.eclipse.aether.RequestTrace, org.eclipse.aether.artifact.Artifact, java.lang.Exception)
    {
        org.eclipse.aether.RepositorySystemSession session;
        org.eclipse.aether.RepositoryEvent$EventType $stack7;
        org.eclipse.aether.RequestTrace trace;
        org.eclipse.aether.artifact.Artifact artifact;
        java.lang.Exception exception;
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.impl.RepositoryEventDispatcher $stack11;
        org.eclipse.aether.RepositoryEvent $stack12;
        org.eclipse.aether.RepositoryEvent$Builder $u0;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0;

        this := @this: DefaultArtifactDescriptorReader;

        session := @parameter0: org.eclipse.aether.RepositorySystemSession;

        trace := @parameter1: org.eclipse.aether.RequestTrace;

        artifact := @parameter2: org.eclipse.aether.artifact.Artifact;

        exception := @parameter3: java.lang.Exception;

        $u0 = new org.eclipse.aether.RepositoryEvent$Builder;

        $stack7 = <org.eclipse.aether.RepositoryEvent$EventType: org.eclipse.aether.RepositoryEvent$EventType ARTIFACT_DESCRIPTOR_MISSING>;

        specialinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: void <init>(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.RepositoryEvent$EventType)>(session, $stack7);

        virtualinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: org.eclipse.aether.RepositoryEvent$Builder setTrace(org.eclipse.aether.RequestTrace)>(trace);

        virtualinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: org.eclipse.aether.RepositoryEvent$Builder setArtifact(org.eclipse.aether.artifact.Artifact)>(artifact);

        virtualinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: org.eclipse.aether.RepositoryEvent$Builder setException(java.lang.Exception)>(exception);

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack11 = $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.RepositoryEventDispatcher repositoryEventDispatcher>;

        $stack12 = virtualinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: org.eclipse.aether.RepositoryEvent build()>();

        interfaceinvoke $stack11.<org.eclipse.aether.impl.RepositoryEventDispatcher: void dispatch(org.eclipse.aether.RepositoryEvent)>($stack12);

        return;
    }

    private void invalidDescriptor(org.eclipse.aether.RepositorySystemSession, org.eclipse.aether.RequestTrace, org.eclipse.aether.artifact.Artifact, java.lang.Exception)
    {
        org.eclipse.aether.RepositorySystemSession session;
        org.eclipse.aether.RepositoryEvent$EventType $stack7;
        org.eclipse.aether.RequestTrace trace;
        org.eclipse.aether.artifact.Artifact artifact;
        java.lang.Exception exception;
        DefaultArtifactDescriptorReader this;
        org.eclipse.aether.impl.RepositoryEventDispatcher $stack11;
        org.eclipse.aether.RepositoryEvent $stack12;
        org.eclipse.aether.RepositoryEvent$Builder $u0;
        org.apache.maven.repository.internal.DefaultArtifactDescriptorReader $r0;

        this := @this: DefaultArtifactDescriptorReader;

        session := @parameter0: org.eclipse.aether.RepositorySystemSession;

        trace := @parameter1: org.eclipse.aether.RequestTrace;

        artifact := @parameter2: org.eclipse.aether.artifact.Artifact;

        exception := @parameter3: java.lang.Exception;

        $u0 = new org.eclipse.aether.RepositoryEvent$Builder;

        $stack7 = <org.eclipse.aether.RepositoryEvent$EventType: org.eclipse.aether.RepositoryEvent$EventType ARTIFACT_DESCRIPTOR_INVALID>;

        specialinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: void <init>(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.RepositoryEvent$EventType)>(session, $stack7);

        virtualinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: org.eclipse.aether.RepositoryEvent$Builder setTrace(org.eclipse.aether.RequestTrace)>(trace);

        virtualinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: org.eclipse.aether.RepositoryEvent$Builder setArtifact(org.eclipse.aether.artifact.Artifact)>(artifact);

        virtualinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: org.eclipse.aether.RepositoryEvent$Builder setException(java.lang.Exception)>(exception);

        $r0 = (org.apache.maven.repository.internal.DefaultArtifactDescriptorReader) this;

        $stack11 = $r0.<org.apache.maven.repository.internal.DefaultArtifactDescriptorReader: org.eclipse.aether.impl.RepositoryEventDispatcher repositoryEventDispatcher>;

        $stack12 = virtualinvoke $u0.<org.eclipse.aether.RepositoryEvent$Builder: org.eclipse.aether.RepositoryEvent build()>();

        interfaceinvoke $stack11.<org.eclipse.aether.impl.RepositoryEventDispatcher: void dispatch(org.eclipse.aether.RepositoryEvent)>($stack12);

        return;
    }

    private int getPolicy(org.eclipse.aether.RepositorySystemSession, org.eclipse.aether.artifact.Artifact, org.eclipse.aether.resolution.ArtifactDescriptorRequest)
    {
        org.eclipse.aether.RepositorySystemSession session;
        org.eclipse.aether.resolution.ArtifactDescriptorPolicy policy;
        org.eclipse.aether.resolution.ArtifactDescriptorPolicyRequest $stack6;
        org.eclipse.aether.artifact.Artifact a;
        org.eclipse.aether.resolution.ArtifactDescriptorRequest request;
        java.lang.String $stack7;
        int $stack8;
        DefaultArtifactDescriptorReader this;

        this := @this: DefaultArtifactDescriptorReader;

        session := @parameter0: org.eclipse.aether.RepositorySystemSession;

        a := @parameter1: org.eclipse.aether.artifact.Artifact;

        request := @parameter2: org.eclipse.aether.resolution.ArtifactDescriptorRequest;

        policy = interfaceinvoke session.<org.eclipse.aether.RepositorySystemSession: org.eclipse.aether.resolution.ArtifactDescriptorPolicy getArtifactDescriptorPolicy()>();

        if policy != null goto label1;

        return 0;

     label1:
        $stack6 = new org.eclipse.aether.resolution.ArtifactDescriptorPolicyRequest;

        $stack7 = virtualinvoke request.<org.eclipse.aether.resolution.ArtifactDescriptorRequest: java.lang.String getRequestContext()>();

        specialinvoke $stack6.<org.eclipse.aether.resolution.ArtifactDescriptorPolicyRequest: void <init>(org.eclipse.aether.artifact.Artifact,java.lang.String)>(a, $stack7);

        $stack8 = interfaceinvoke policy.<org.eclipse.aether.resolution.ArtifactDescriptorPolicy: int getPolicy(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.ArtifactDescriptorPolicyRequest)>(session, $stack6);

        return $stack8;
    }
}
