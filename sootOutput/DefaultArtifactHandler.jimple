public class DefaultArtifactHandler extends java.lang.Object implements org.apache.maven.artifact.handler.ArtifactHandler
{
    private java.lang.String extension;
    private java.lang.String type;
    private java.lang.String classifier;
    private java.lang.String directory;
    private java.lang.String packaging;
    private boolean includesDependencies;
    private java.lang.String language;
    private boolean addedToClasspath;

    public void <init>()
    {
        DefaultArtifactHandler this;

        this := @this: DefaultArtifactHandler;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.lang.String)
    {
        DefaultArtifactHandler this;
        java.lang.String type;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0;

        this := @this: DefaultArtifactHandler;

        type := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String type> = type;

        return;
    }

    public java.lang.String getExtension()
    {
        DefaultArtifactHandler this;
        java.lang.String $stack1, $stack2, $stack3;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactHandler;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String extension>;

        if $stack1 != null goto label1;

        $r1 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack3 = $r1.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String type>;

        $r2 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $r2.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String extension> = $stack3;

     label1:
        $r3 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack2 = $r3.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String extension>;

        return $stack2;
    }

    public void setExtension(java.lang.String)
    {
        DefaultArtifactHandler this;
        java.lang.String extension;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0;

        this := @this: DefaultArtifactHandler;

        extension := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String extension> = extension;

        return;
    }

    public java.lang.String getType()
    {
        DefaultArtifactHandler this;
        java.lang.String $stack1;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0;

        this := @this: DefaultArtifactHandler;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String type>;

        return $stack1;
    }

    public java.lang.String getClassifier()
    {
        DefaultArtifactHandler this;
        java.lang.String $stack1;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0;

        this := @this: DefaultArtifactHandler;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String classifier>;

        return $stack1;
    }

    public java.lang.String getDirectory()
    {
        DefaultArtifactHandler this;
        java.lang.String $stack1, $stack2, $stack4, $stack7;
        java.lang.StringBuilder $stack5, $stack6, $u0;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactHandler;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String directory>;

        if $stack1 != null goto label1;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r1 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack4 = virtualinvoke $r1.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String getPackaging()>();

        $stack5 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $r2.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String directory> = $stack7;

     label1:
        $r3 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack2 = $r3.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String directory>;

        return $stack2;
    }

    public java.lang.String getPackaging()
    {
        DefaultArtifactHandler this;
        java.lang.String $stack1, $stack2, $stack3;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactHandler;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String packaging>;

        if $stack1 != null goto label1;

        $r1 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack3 = $r1.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String type>;

        $r2 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $r2.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String packaging> = $stack3;

     label1:
        $r3 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack2 = $r3.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String packaging>;

        return $stack2;
    }

    public boolean isIncludesDependencies()
    {
        DefaultArtifactHandler this;
        boolean $stack1;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0;

        this := @this: DefaultArtifactHandler;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: boolean includesDependencies>;

        return $stack1;
    }

    public void setIncludesDependencies(boolean)
    {
        DefaultArtifactHandler this;
        boolean includesDependencies;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0;

        this := @this: DefaultArtifactHandler;

        includesDependencies := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: boolean includesDependencies> = includesDependencies;

        return;
    }

    public java.lang.String getLanguage()
    {
        DefaultArtifactHandler this;
        java.lang.String $stack1, $stack2;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0, $r1, $r2;

        this := @this: DefaultArtifactHandler;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String language>;

        if $stack1 != null goto label1;

        $r1 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $r1.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String language> = "none";

     label1:
        $r2 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack2 = $r2.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String language>;

        return $stack2;
    }

    public void setLanguage(java.lang.String)
    {
        DefaultArtifactHandler this;
        java.lang.String language;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0;

        this := @this: DefaultArtifactHandler;

        language := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: java.lang.String language> = language;

        return;
    }

    public boolean isAddedToClasspath()
    {
        DefaultArtifactHandler this;
        boolean $stack1;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0;

        this := @this: DefaultArtifactHandler;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: boolean addedToClasspath>;

        return $stack1;
    }

    public void setAddedToClasspath(boolean)
    {
        DefaultArtifactHandler this;
        boolean addedToClasspath;
        org.apache.maven.artifact.handler.DefaultArtifactHandler $r0;

        this := @this: DefaultArtifactHandler;

        addedToClasspath := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.handler.DefaultArtifactHandler) this;

        $r0.<org.apache.maven.artifact.handler.DefaultArtifactHandler: boolean addedToClasspath> = addedToClasspath;

        return;
    }
}
