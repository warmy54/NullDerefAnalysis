public class DefaultArtifactVersionTest extends java.lang.Object
{

    public void <init>()
    {
        DefaultArtifactVersionTest this;

        this := @this: DefaultArtifactVersionTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)
    {
        java.lang.String version;
        DefaultArtifactVersionTest this;
        org.apache.maven.artifact.versioning.DefaultArtifactVersion $u0;
        org.apache.maven.artifact.versioning.ArtifactVersion $r0;

        this := @this: DefaultArtifactVersionTest;

        version := @parameter0: java.lang.String;

        $u0 = new org.apache.maven.artifact.versioning.DefaultArtifactVersion;

        specialinvoke $u0.<org.apache.maven.artifact.versioning.DefaultArtifactVersion: void <init>(java.lang.String)>(version);

        $r0 = (org.apache.maven.artifact.versioning.ArtifactVersion) $u0;

        return $r0;
    }

    private void checkVersionParsing(java.lang.String, int, int, int, int, java.lang.String)
    {
        DefaultArtifactVersionTest this;
        java.lang.String version, $stack26, parsed, $stack34, $stack39, $stack44, $stack49, qualifier, $stack50, $stack54, $stack55, $stack60;
        org.apache.maven.artifact.versioning.ArtifactVersion artifactVersion;
        java.lang.StringBuilder $stack11, $stack12, $stack13, $stack15, $stack16, $stack18, $stack19, $stack21, $stack22, $stack24, $stack25, $stack27, $stack28, $stack32, $stack33, $stack37, $stack38, $stack42, $stack43, $stack47, $stack48, $stack52, $stack53, $stack57, $stack58, $stack59, $u0, $u1, $u2, $u3, $u4, $u5, $u6;
        int $stack14, $stack17, $stack20, $stack23, major, $stack30, minor, $stack35, incremental, $stack40, buildnumber, $stack45;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0;

        this := @this: DefaultArtifactVersionTest;

        version := @parameter0: java.lang.String;

        major := @parameter1: int;

        minor := @parameter2: int;

        incremental := @parameter3: int;

        buildnumber := @parameter4: int;

        qualifier := @parameter5: java.lang.String;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        artifactVersion = specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>(version);

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' parsed as (\'");

        $stack14 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: int getMajorVersion()>();

        $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'");

        $stack17 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: int getMinorVersion()>();

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack17);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'");

        $stack20 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: int getIncrementalVersion()>();

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'");

        $stack23 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: int getBuildNumber()>();

        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', \'");

        $stack26 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: java.lang.String getQualifier()>();

        $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26);

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'), ");

        parsed = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack30 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: int getMajorVersion()>();

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack32 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parsed);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("check major version");

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(major, $stack30, $stack34);

        $stack35 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: int getMinorVersion()>();

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack37 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parsed);

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("check minor version");

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(minor, $stack35, $stack39);

        $stack40 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: int getIncrementalVersion()>();

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack42 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parsed);

        $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("check incremental version");

        $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(incremental, $stack40, $stack44);

        $stack45 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: int getBuildNumber()>();

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack47 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parsed);

        $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("check build number");

        $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(buildnumber, $stack45, $stack49);

        $stack50 = interfaceinvoke artifactVersion.<org.apache.maven.artifact.versioning.ArtifactVersion: java.lang.String getQualifier()>();

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack52 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parsed);

        $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("check qualifier");

        $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>(qualifier, $stack50, $stack54);

        $stack55 = virtualinvoke artifactVersion.<java.lang.Object: java.lang.String toString()>();

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack57 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("check ");

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" string value");

        $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>(version, $stack55, $stack60);

        return;
    }

    public void testVersionParsing()
    {
        DefaultArtifactVersionTest this;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;

        this := @this: DefaultArtifactVersionTest;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1", 1, 0, 0, 0, null);

        $r1 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r1.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.2", 1, 2, 0, 0, null);

        $r2 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r2.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.2.3", 1, 2, 3, 0, null);

        $r3 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r3.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.2.3-1", 1, 2, 3, 1, null);

        $r4 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r4.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.2.3-alpha-1", 1, 2, 3, 0, "alpha-1");

        $r5 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r5.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.2-alpha-1", 1, 2, 0, 0, "alpha-1");

        $r6 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r6.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.2-alpha-1-20050205.060708-1", 1, 2, 0, 0, "alpha-1-20050205.060708-1");

        $r7 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r7.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("RELEASE", 0, 0, 0, 0, "RELEASE");

        $r8 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r8.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("2.0-1", 2, 0, 0, 1, null);

        $r9 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r9.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("02", 0, 0, 0, 0, "02");

        $r10 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r10.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("0.09", 0, 0, 0, 0, "0.09");

        $r11 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r11.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("0.2.09", 0, 0, 0, 0, "0.2.09");

        $r12 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r12.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("2.0-01", 2, 0, 0, 0, "01");

        $r13 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r13.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.0.1b", 0, 0, 0, 0, "1.0.1b");

        $r14 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r14.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.0M2", 0, 0, 0, 0, "1.0M2");

        $r15 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r15.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.0RC2", 0, 0, 0, 0, "1.0RC2");

        $r16 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r16.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.1.2.beta1", 1, 1, 2, 0, "beta1");

        $r17 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r17.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.7.3.beta1", 1, 7, 3, 0, "beta1");

        $r18 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r18.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.7.3.0", 0, 0, 0, 0, "1.7.3.0");

        $r19 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r19.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.7.3.0-1", 0, 0, 0, 0, "1.7.3.0-1");

        $r20 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r20.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("PATCH-1193602", 0, 0, 0, 0, "PATCH-1193602");

        $r21 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r21.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("5.0.0alpha-2006020117", 0, 0, 0, 0, "5.0.0alpha-2006020117");

        $r22 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r22.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.0.0.-SNAPSHOT", 0, 0, 0, 0, "1.0.0.-SNAPSHOT");

        $r23 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r23.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1..0-SNAPSHOT", 0, 0, 0, 0, "1..0-SNAPSHOT");

        $r24 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r24.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.0.-SNAPSHOT", 0, 0, 0, 0, "1.0.-SNAPSHOT");

        $r25 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r25.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>(".1.0-SNAPSHOT", 0, 0, 0, 0, ".1.0-SNAPSHOT");

        $r26 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r26.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.2.3.200705301630", 0, 0, 0, 0, "1.2.3.200705301630");

        $r27 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r27.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void checkVersionParsing(java.lang.String,int,int,int,int,java.lang.String)>("1.2.3-200705301630", 1, 2, 3, 0, "200705301630");

        return;
    }

    public void testVersionComparing()
    {
        DefaultArtifactVersionTest this;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;

        this := @this: DefaultArtifactVersionTest;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionEqual(java.lang.String,java.lang.String)>("1", "1");

        $r1 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r1.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1", "2");

        $r2 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r2.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.5", "2");

        $r3 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r3.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1", "2.5");

        $r4 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r4.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionEqual(java.lang.String,java.lang.String)>("1", "1.0");

        $r5 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r5.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionEqual(java.lang.String,java.lang.String)>("1", "1.0.0");

        $r6 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r6.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0", "1.1");

        $r7 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r7.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.1", "1.2");

        $r8 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r8.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0.0", "1.1");

        $r9 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r9.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.1", "1.2.0");

        $r10 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r10.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.1.2.alpha1", "1.1.2");

        $r11 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r11.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.1.2.alpha1", "1.1.2.beta1");

        $r12 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r12.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.1.2.beta1", "1.2");

        $r13 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r13.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-alpha-1", "1.0");

        $r14 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r14.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-alpha-1", "1.0-alpha-2");

        $r15 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r15.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-alpha-2", "1.0-alpha-15");

        $r16 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r16.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-alpha-1", "1.0-beta-1");

        $r17 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r17.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-beta-1", "1.0-SNAPSHOT");

        $r18 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r18.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-SNAPSHOT", "1.0");

        $r19 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r19.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-alpha-1-SNAPSHOT", "1.0-alpha-1");

        $r20 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r20.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0", "1.0-1");

        $r21 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r21.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-1", "1.0-2");

        $r22 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r22.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionEqual(java.lang.String,java.lang.String)>("2.0-0", "2.0");

        $r23 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r23.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0", "2.0-1");

        $r24 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r24.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.0", "2.0-1");

        $r25 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r25.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0-1", "2.0.1");

        $r26 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r26.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.1-klm", "2.0.1-lmn");

        $r27 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r27.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.1", "2.0.1-xyz");

        $r28 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r28.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.1-xyz-1", "2.0.1-1-xyz");

        $r29 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r29.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.1", "2.0.1-123");

        $r30 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r30.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.1-xyz", "2.0.1-123");

        $r31 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r31.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.2.3-10000000000", "1.2.3-10000000001");

        $r32 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r32.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.2.3-1", "1.2.3-10000000001");

        $r33 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r33.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.3.0-v200706262000", "2.3.0-v200706262130");

        $r34 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r34.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.0.v200706041905-7C78EK9E_EkMNfNOd2d8qq", "2.0.0.v200706041906-7C78EK9E_EkMNfNOd2d8qq");

        return;
    }

    public void testVersionSnapshotComparing()
    {
        DefaultArtifactVersionTest this;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        this := @this: DefaultArtifactVersionTest;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionEqual(java.lang.String,java.lang.String)>("1-SNAPSHOT", "1-SNAPSHOT");

        $r1 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r1.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1-SNAPSHOT", "2-SNAPSHOT");

        $r2 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r2.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.5-SNAPSHOT", "2-SNAPSHOT");

        $r3 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r3.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1-SNAPSHOT", "2.5-SNAPSHOT");

        $r4 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r4.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionEqual(java.lang.String,java.lang.String)>("1-SNAPSHOT", "1.0-SNAPSHOT");

        $r5 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r5.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionEqual(java.lang.String,java.lang.String)>("1-SNAPSHOT", "1.0.0-SNAPSHOT");

        $r6 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r6.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-SNAPSHOT", "1.1-SNAPSHOT");

        $r7 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r7.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.1-SNAPSHOT", "1.2-SNAPSHOT");

        $r8 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r8.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0.0-SNAPSHOT", "1.1-SNAPSHOT");

        $r9 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r9.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.1-SNAPSHOT", "1.2.0-SNAPSHOT");

        $r10 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r10.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-alpha-1-SNAPSHOT", "1.0-alpha-2-SNAPSHOT");

        $r11 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r11.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-alpha-1-SNAPSHOT", "1.0-beta-1-SNAPSHOT");

        $r12 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r12.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-beta-1-SNAPSHOT", "1.0-SNAPSHOT-SNAPSHOT");

        $r13 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r13.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-SNAPSHOT-SNAPSHOT", "1.0-SNAPSHOT");

        $r14 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r14.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-alpha-1-SNAPSHOT-SNAPSHOT", "1.0-alpha-1-SNAPSHOT");

        $r15 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r15.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-SNAPSHOT", "1.0-1-SNAPSHOT");

        $r16 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r16.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-1-SNAPSHOT", "1.0-2-SNAPSHOT");

        $r17 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r17.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0-SNAPSHOT", "2.0-1-SNAPSHOT");

        $r18 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r18.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.0-SNAPSHOT", "2.0-1-SNAPSHOT");

        $r19 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r19.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0-1-SNAPSHOT", "2.0.1-SNAPSHOT");

        $r20 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r20.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.1-klm-SNAPSHOT", "2.0.1-lmn-SNAPSHOT");

        $r21 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r21.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.1-SNAPSHOT", "2.0.1-123-SNAPSHOT");

        $r22 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r22.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("2.0.1-xyz-SNAPSHOT", "2.0.1-123-SNAPSHOT");

        return;
    }

    public void testSnapshotVsReleases()
    {
        DefaultArtifactVersionTest this;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0, $r1, $r2;

        this := @this: DefaultArtifactVersionTest;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-RC1", "1.0-SNAPSHOT");

        $r1 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r1.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-rc1", "1.0-SNAPSHOT");

        $r2 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        specialinvoke $r2.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: void assertVersionOlder(java.lang.String,java.lang.String)>("1.0-rc-1", "1.0-SNAPSHOT");

        return;
    }

    public void testHashCode()
    {
        DefaultArtifactVersionTest this;
        org.apache.maven.artifact.versioning.ArtifactVersion v1, v2;
        java.lang.Boolean $stack5, $stack7;
        boolean $stack6;
        int $stack8, $stack9;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0, $r1;

        this := @this: DefaultArtifactVersionTest;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        v1 = specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>("1");

        $r1 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        v2 = specialinvoke $r1.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>("1.0");

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack6 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(v2);

        $stack7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack6);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack5, $stack7);

        $stack8 = virtualinvoke v1.<java.lang.Object: int hashCode()>();

        $stack9 = virtualinvoke v2.<java.lang.Object: int hashCode()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>($stack8, $stack9);

        return;
    }

    public void testEqualsNullSafe()
    {
        DefaultArtifactVersionTest this;
        org.apache.maven.artifact.versioning.ArtifactVersion $stack1;
        boolean $stack2;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0;

        this := @this: DefaultArtifactVersionTest;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack1 = specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>("1");

        $stack2 = virtualinvoke $stack1.<java.lang.Object: boolean equals(java.lang.Object)>(null);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack2);

        return;
    }

    public void testEqualsTypeSafe()
    {
        DefaultArtifactVersionTest this;
        org.apache.maven.artifact.versioning.ArtifactVersion $stack1;
        boolean $stack2;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0;

        this := @this: DefaultArtifactVersionTest;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack1 = specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>("1");

        $stack2 = virtualinvoke $stack1.<java.lang.Object: boolean equals(java.lang.Object)>("non-an-artifact-version-instance");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack2);

        return;
    }

    public void testNonNumericVersionRepresentationReturnsANumberFormatException()
    {
        org.junit.jupiter.api.function.Executable $stack2;
        DefaultArtifactVersionTest this;

        this := @this: DefaultArtifactVersionTest;

        $stack2 = staticinvoke <DefaultArtifactVersionTest$lambda_testNonNumericVersionRepresentationReturnsANumberFormatException_0__309: org.junit.jupiter.api.function.Executable bootstrap$()>();

        staticinvoke <org.junit.jupiter.api.Assertions: java.lang.Throwable assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable,java.lang.String)>(class "Ljava/lang/NumberFormatException;", $stack2, "We expect a NumberFormatException to be thrown.");

        return;
    }

    private void assertVersionOlder(java.lang.String, java.lang.String)
    {
        DefaultArtifactVersionTest this;
        java.lang.String left, right, $stack11, $stack20;
        org.apache.maven.artifact.versioning.ArtifactVersion $stack3, $stack4, $stack12, $stack13;
        int $stack5, $stack14;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $stack17, $stack18, $stack19, $u0, $u1;
        boolean $stack7, $stack16;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactVersionTest;

        left := @parameter0: java.lang.String;

        right := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>(left);

        $r1 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack4 = specialinvoke $r1.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>(right);

        $stack5 = interfaceinvoke $stack3.<org.apache.maven.artifact.versioning.ArtifactVersion: int compareTo(java.lang.Object)>($stack4);

        if $stack5 >= 0 goto label1;

        $stack7 = 1;

        goto label2;

     label1:
        $stack7 = 0;

     label2:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(left);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be older than ");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(right);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack7, $stack11);

        $r2 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack12 = specialinvoke $r2.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>(right);

        $r3 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack13 = specialinvoke $r3.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>(left);

        $stack14 = interfaceinvoke $stack12.<org.apache.maven.artifact.versioning.ArtifactVersion: int compareTo(java.lang.Object)>($stack13);

        if $stack14 <= 0 goto label3;

        $stack16 = 1;

        goto label4;

     label3:
        $stack16 = 0;

     label4:
        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(right);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be newer than ");

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(left);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack16, $stack20);

        return;
    }

    private void assertVersionEqual(java.lang.String, java.lang.String)
    {
        DefaultArtifactVersionTest this;
        java.lang.String left, right, $stack11, $stack20;
        org.apache.maven.artifact.versioning.ArtifactVersion $stack3, $stack4, $stack12, $stack13;
        int $stack5, $stack14;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $stack17, $stack18, $stack19, $u0, $u1;
        boolean $stack7, $stack16;
        org.apache.maven.artifact.versioning.DefaultArtifactVersionTest $r0, $r1, $r2, $r3;

        this := @this: DefaultArtifactVersionTest;

        left := @parameter0: java.lang.String;

        right := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>(left);

        $r1 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack4 = specialinvoke $r1.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>(right);

        $stack5 = interfaceinvoke $stack3.<org.apache.maven.artifact.versioning.ArtifactVersion: int compareTo(java.lang.Object)>($stack4);

        if $stack5 != 0 goto label1;

        $stack7 = 1;

        goto label2;

     label1:
        $stack7 = 0;

     label2:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(left);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be equal to ");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(right);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack7, $stack11);

        $r2 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack12 = specialinvoke $r2.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>(right);

        $r3 = (org.apache.maven.artifact.versioning.DefaultArtifactVersionTest) this;

        $stack13 = specialinvoke $r3.<org.apache.maven.artifact.versioning.DefaultArtifactVersionTest: org.apache.maven.artifact.versioning.ArtifactVersion newArtifactVersion(java.lang.String)>(left);

        $stack14 = interfaceinvoke $stack12.<org.apache.maven.artifact.versioning.ArtifactVersion: int compareTo(java.lang.Object)>($stack13);

        if $stack14 != 0 goto label3;

        $stack16 = 1;

        goto label4;

     label3:
        $stack16 = 0;

     label4:
        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(right);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" should be equal to ");

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(left);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack16, $stack20);

        return;
    }

    private static void lambda$testNonNumericVersionRepresentationReturnsANumberFormatException$0() throws java.lang.Throwable
    {
        org.apache.maven.artifact.versioning.DefaultArtifactVersion $stack0;

        $stack0 = new org.apache.maven.artifact.versioning.DefaultArtifactVersion;

        specialinvoke $stack0.<org.apache.maven.artifact.versioning.DefaultArtifactVersion: void <init>(java.lang.String)>("...");

        return;
    }
}
