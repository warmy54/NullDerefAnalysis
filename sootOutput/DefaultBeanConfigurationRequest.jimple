public class DefaultBeanConfigurationRequest extends java.lang.Object implements org.apache.maven.configuration.BeanConfigurationRequest
{
    private java.lang.Object bean;
    private java.lang.Object configuration;
    private java.lang.String configurationElement;
    private java.lang.ClassLoader classLoader;
    private org.apache.maven.configuration.BeanConfigurationValuePreprocessor valuePreprocessor;
    private org.apache.maven.configuration.BeanConfigurationPathTranslator pathTranslator;

    public void <init>()
    {
        DefaultBeanConfigurationRequest this;

        this := @this: DefaultBeanConfigurationRequest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object getBean()
    {
        DefaultBeanConfigurationRequest this;
        java.lang.Object $stack1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0;

        this := @this: DefaultBeanConfigurationRequest;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack1 = $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: java.lang.Object bean>;

        return $stack1;
    }

    public org.apache.maven.configuration.DefaultBeanConfigurationRequest setBean(java.lang.Object)
    {
        DefaultBeanConfigurationRequest this;
        java.lang.Object bean;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0, $r1;

        this := @this: DefaultBeanConfigurationRequest;

        bean := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: java.lang.Object bean> = bean;

        $r1 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        return $r1;
    }

    public java.lang.Object getConfiguration()
    {
        DefaultBeanConfigurationRequest this;
        java.lang.Object $stack1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0;

        this := @this: DefaultBeanConfigurationRequest;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack1 = $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: java.lang.Object configuration>;

        return $stack1;
    }

    public java.lang.String getConfigurationElement()
    {
        DefaultBeanConfigurationRequest this;
        java.lang.String $stack1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0;

        this := @this: DefaultBeanConfigurationRequest;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack1 = $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: java.lang.String configurationElement>;

        return $stack1;
    }

    public org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object)
    {
        DefaultBeanConfigurationRequest this;
        java.lang.Object configuration;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack2, $r0;

        this := @this: DefaultBeanConfigurationRequest;

        configuration := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object,java.lang.String)>(configuration, null);

        return $stack2;
    }

    public org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object, java.lang.String)
    {
        DefaultBeanConfigurationRequest this;
        java.lang.Object configuration;
        java.lang.String element;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0, $r1, $r2;

        this := @this: DefaultBeanConfigurationRequest;

        configuration := @parameter0: java.lang.Object;

        element := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: java.lang.Object configuration> = configuration;

        $r1 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $r1.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: java.lang.String configurationElement> = element;

        $r2 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        return $r2;
    }

    public org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(org.apache.maven.model.Model, java.lang.String, java.lang.String, java.lang.String)
    {
        DefaultBeanConfigurationRequest this;
        org.apache.maven.model.Model model;
        java.lang.String pluginGroupId, pluginArtifactId, pluginExecutionId, $stack17;
        org.apache.maven.model.Plugin plugin;
        boolean $stack9, $stack15, $stack18;
        java.lang.Object $stack10, $stack16, $stack20;
        java.util.List $stack13;
        java.util.Iterator l6;
        org.apache.maven.model.PluginExecution execution;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0, $r1, $r2, $r3;

        this := @this: DefaultBeanConfigurationRequest;

        model := @parameter0: org.apache.maven.model.Model;

        pluginGroupId := @parameter1: java.lang.String;

        pluginArtifactId := @parameter2: java.lang.String;

        pluginExecutionId := @parameter3: java.lang.String;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        plugin = specialinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.model.Plugin findPlugin(org.apache.maven.model.Model,java.lang.String,java.lang.String)>(model, pluginGroupId, pluginArtifactId);

        if plugin == null goto label5;

        $stack9 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(pluginExecutionId);

        if $stack9 == 0 goto label4;

        $stack13 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        l6 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack15 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack15 == 0 goto label3;

        $stack16 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        execution = (org.apache.maven.model.PluginExecution) $stack16;

        $stack17 = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        $stack18 = virtualinvoke pluginExecutionId.<java.lang.String: boolean equals(java.lang.Object)>($stack17);

        if $stack18 == 0 goto label2;

        $stack20 = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.lang.Object getConfiguration()>();

        $r1 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        virtualinvoke $r1.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object)>($stack20);

        goto label3;

     label2:
        goto label1;

     label3:
        goto label5;

     label4:
        $stack10 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getConfiguration()>();

        $r2 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        virtualinvoke $r2.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object)>($stack10);

     label5:
        $r3 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        return $r3;
    }

    private org.apache.maven.model.Plugin findPlugin(org.apache.maven.model.Model, java.lang.String, java.lang.String)
    {
        java.lang.String groupId, artifactId, $stack22, $stack25, $stack28, $stack31;
        java.lang.Object[] $stack8, $stack10;
        org.apache.maven.model.Model model;
        org.apache.maven.model.Build build;
        java.util.List $stack14, $stack18;
        boolean $stack16, $stack20, $stack23, $stack26, $stack29, $stack32;
        java.lang.Object $stack21, $stack27;
        org.apache.maven.model.Plugin plugin;
        DefaultBeanConfigurationRequest this;
        java.util.Iterator mgmt, plugin;
        org.apache.maven.model.PluginManagement mgmt#3;

        this := @this: DefaultBeanConfigurationRequest;

        model := @parameter0: org.apache.maven.model.Model;

        groupId := @parameter1: java.lang.String;

        artifactId := @parameter2: java.lang.String;

        $stack8 = newarray (java.lang.Object)[0];

        staticinvoke <org.apache.commons.lang3.Validate: java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String,java.lang.Object[])>(groupId, "groupId can neither be null, empty nor blank", $stack8);

        $stack10 = newarray (java.lang.Object)[0];

        staticinvoke <org.apache.commons.lang3.Validate: java.lang.CharSequence notBlank(java.lang.CharSequence,java.lang.String,java.lang.Object[])>(artifactId, "artifactId can neither be null, empty nor blank", $stack10);

        if model == null goto label6;

        build = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if build == null goto label6;

        $stack14 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        mgmt = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack16 = interfaceinvoke mgmt.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label3;

        $stack27 = interfaceinvoke mgmt.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack27;

        $stack28 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack29 = virtualinvoke groupId.<java.lang.String: boolean equals(java.lang.Object)>($stack28);

        if $stack29 == 0 goto label2;

        $stack31 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $stack32 = virtualinvoke artifactId.<java.lang.String: boolean equals(java.lang.Object)>($stack31);

        if $stack32 == 0 goto label2;

        return plugin;

     label2:
        goto label1;

     label3:
        mgmt#3 = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if mgmt#3 == null goto label6;

        $stack18 = virtualinvoke mgmt#3.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        plugin = interfaceinvoke $stack18.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack20 = interfaceinvoke plugin.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label6;

        $stack21 = interfaceinvoke plugin.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack21;

        $stack22 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack23 = virtualinvoke groupId.<java.lang.String: boolean equals(java.lang.Object)>($stack22);

        if $stack23 == 0 goto label5;

        $stack25 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $stack26 = virtualinvoke artifactId.<java.lang.String: boolean equals(java.lang.Object)>($stack25);

        if $stack26 == 0 goto label5;

        return plugin;

     label5:
        goto label4;

     label6:
        return null;
    }

    public java.lang.ClassLoader getClassLoader()
    {
        DefaultBeanConfigurationRequest this;
        java.lang.ClassLoader $stack1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0;

        this := @this: DefaultBeanConfigurationRequest;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack1 = $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: java.lang.ClassLoader classLoader>;

        return $stack1;
    }

    public org.apache.maven.configuration.DefaultBeanConfigurationRequest setClassLoader(java.lang.ClassLoader)
    {
        DefaultBeanConfigurationRequest this;
        java.lang.ClassLoader classLoader;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0, $r1;

        this := @this: DefaultBeanConfigurationRequest;

        classLoader := @parameter0: java.lang.ClassLoader;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: java.lang.ClassLoader classLoader> = classLoader;

        $r1 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        return $r1;
    }

    public org.apache.maven.configuration.BeanConfigurationValuePreprocessor getValuePreprocessor()
    {
        DefaultBeanConfigurationRequest this;
        org.apache.maven.configuration.BeanConfigurationValuePreprocessor $stack1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0;

        this := @this: DefaultBeanConfigurationRequest;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack1 = $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.BeanConfigurationValuePreprocessor valuePreprocessor>;

        return $stack1;
    }

    public org.apache.maven.configuration.DefaultBeanConfigurationRequest setValuePreprocessor(org.apache.maven.configuration.BeanConfigurationValuePreprocessor)
    {
        DefaultBeanConfigurationRequest this;
        org.apache.maven.configuration.BeanConfigurationValuePreprocessor valuePreprocessor;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0, $r1;

        this := @this: DefaultBeanConfigurationRequest;

        valuePreprocessor := @parameter0: org.apache.maven.configuration.BeanConfigurationValuePreprocessor;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.BeanConfigurationValuePreprocessor valuePreprocessor> = valuePreprocessor;

        $r1 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        return $r1;
    }

    public org.apache.maven.configuration.BeanConfigurationPathTranslator getPathTranslator()
    {
        DefaultBeanConfigurationRequest this;
        org.apache.maven.configuration.BeanConfigurationPathTranslator $stack1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0;

        this := @this: DefaultBeanConfigurationRequest;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack1 = $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.BeanConfigurationPathTranslator pathTranslator>;

        return $stack1;
    }

    public org.apache.maven.configuration.DefaultBeanConfigurationRequest setPathTranslator(org.apache.maven.configuration.BeanConfigurationPathTranslator)
    {
        DefaultBeanConfigurationRequest this;
        org.apache.maven.configuration.BeanConfigurationPathTranslator pathTranslator;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $r0, $r1;

        this := @this: DefaultBeanConfigurationRequest;

        pathTranslator := @parameter0: org.apache.maven.configuration.BeanConfigurationPathTranslator;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.BeanConfigurationPathTranslator pathTranslator> = pathTranslator;

        $r1 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        return $r1;
    }

    public volatile org.apache.maven.configuration.BeanConfigurationRequest setPathTranslator(org.apache.maven.configuration.BeanConfigurationPathTranslator)
    {
        DefaultBeanConfigurationRequest this;
        org.apache.maven.configuration.BeanConfigurationPathTranslator l1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack2, $r0;
        org.apache.maven.configuration.BeanConfigurationRequest $r1;

        this := @this: DefaultBeanConfigurationRequest;

        l1 := @parameter0: org.apache.maven.configuration.BeanConfigurationPathTranslator;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setPathTranslator(org.apache.maven.configuration.BeanConfigurationPathTranslator)>(l1);

        $r1 = (org.apache.maven.configuration.BeanConfigurationRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.configuration.BeanConfigurationRequest setValuePreprocessor(org.apache.maven.configuration.BeanConfigurationValuePreprocessor)
    {
        DefaultBeanConfigurationRequest this;
        org.apache.maven.configuration.BeanConfigurationValuePreprocessor l1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack2, $r0;
        org.apache.maven.configuration.BeanConfigurationRequest $r1;

        this := @this: DefaultBeanConfigurationRequest;

        l1 := @parameter0: org.apache.maven.configuration.BeanConfigurationValuePreprocessor;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setValuePreprocessor(org.apache.maven.configuration.BeanConfigurationValuePreprocessor)>(l1);

        $r1 = (org.apache.maven.configuration.BeanConfigurationRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.configuration.BeanConfigurationRequest setClassLoader(java.lang.ClassLoader)
    {
        DefaultBeanConfigurationRequest this;
        java.lang.ClassLoader l1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack2, $r0;
        org.apache.maven.configuration.BeanConfigurationRequest $r1;

        this := @this: DefaultBeanConfigurationRequest;

        l1 := @parameter0: java.lang.ClassLoader;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setClassLoader(java.lang.ClassLoader)>(l1);

        $r1 = (org.apache.maven.configuration.BeanConfigurationRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.configuration.BeanConfigurationRequest setConfiguration(java.lang.Object, java.lang.String)
    {
        DefaultBeanConfigurationRequest this;
        java.lang.Object l1;
        java.lang.String l2;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack3, $r0;
        org.apache.maven.configuration.BeanConfigurationRequest $r1;

        this := @this: DefaultBeanConfigurationRequest;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object,java.lang.String)>(l1, l2);

        $r1 = (org.apache.maven.configuration.BeanConfigurationRequest) $stack3;

        return $r1;
    }

    public volatile org.apache.maven.configuration.BeanConfigurationRequest setConfiguration(java.lang.Object)
    {
        DefaultBeanConfigurationRequest this;
        java.lang.Object l1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack2, $r0;
        org.apache.maven.configuration.BeanConfigurationRequest $r1;

        this := @this: DefaultBeanConfigurationRequest;

        l1 := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object)>(l1);

        $r1 = (org.apache.maven.configuration.BeanConfigurationRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.configuration.BeanConfigurationRequest setBean(java.lang.Object)
    {
        DefaultBeanConfigurationRequest this;
        java.lang.Object l1;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack2, $r0;
        org.apache.maven.configuration.BeanConfigurationRequest $r1;

        this := @this: DefaultBeanConfigurationRequest;

        l1 := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfigurationRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setBean(java.lang.Object)>(l1);

        $r1 = (org.apache.maven.configuration.BeanConfigurationRequest) $stack2;

        return $r1;
    }
}
