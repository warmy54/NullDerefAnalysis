public class DefaultBeanConfiguratorTest extends java.lang.Object
{
    private org.apache.maven.configuration.BeanConfigurator configurator;

    public void <init>()
    {
        DefaultBeanConfiguratorTest this;

        this := @this: DefaultBeanConfiguratorTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        DefaultBeanConfiguratorTest this;
        org.apache.maven.configuration.internal.DefaultBeanConfigurator $u0;
        org.apache.maven.configuration.DefaultBeanConfiguratorTest $r0;
        org.apache.maven.configuration.BeanConfigurator $r1;

        this := @this: DefaultBeanConfiguratorTest;

        $u0 = new org.apache.maven.configuration.internal.DefaultBeanConfigurator;

        specialinvoke $u0.<org.apache.maven.configuration.internal.DefaultBeanConfigurator: void <init>()>();

        $r0 = (org.apache.maven.configuration.DefaultBeanConfiguratorTest) this;

        $r1 = (org.apache.maven.configuration.BeanConfigurator) $u0;

        $r0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest: org.apache.maven.configuration.BeanConfigurator configurator> = $r1;

        return;
    }

    public void tearDown() throws java.lang.Exception
    {
        DefaultBeanConfiguratorTest this;
        org.apache.maven.configuration.DefaultBeanConfiguratorTest $r0;

        this := @this: DefaultBeanConfiguratorTest;

        $r0 = (org.apache.maven.configuration.DefaultBeanConfiguratorTest) this;

        $r0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest: org.apache.maven.configuration.BeanConfigurator configurator> = null;

        return;
    }

    private org.codehaus.plexus.util.xml.Xpp3Dom toConfig(java.lang.String)
    {
        java.io.StringReader $stack3;
        java.lang.StringBuilder $stack4, $stack5, $stack6, $stack7;
        java.lang.String xml, $stack8;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack9;
        java.lang.Throwable $stack10;
        java.lang.IllegalArgumentException $stack11;
        DefaultBeanConfiguratorTest this;

        this := @this: DefaultBeanConfiguratorTest;

        xml := @parameter0: java.lang.String;

     label1:
        $stack3 = new java.io.StringReader;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<configuration>");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xml);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</configuration>");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack3.<java.io.StringReader: void <init>(java.lang.String)>($stack8);

        $stack9 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(java.io.Reader)>($stack3);

     label2:
        return $stack9;

     label3:
        $stack10 := @caughtexception;

        $stack11 = new java.lang.IllegalArgumentException;

        specialinvoke $stack11.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($stack10);

        throw $stack11;

        catch org.codehaus.plexus.util.xml.pull.XmlPullParserException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label3;
    }

    public void testMinimal() throws org.apache.maven.configuration.BeanConfigurationException
    {
        DefaultBeanConfiguratorTest this;
        org.codehaus.plexus.util.xml.Xpp3Dom config;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack7, $u1;
        org.apache.maven.configuration.BeanConfigurator $stack9;
        java.io.File $stack11, $u2;
        org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean $u0;
        org.apache.maven.configuration.DefaultBeanConfiguratorTest $r0, $r1;
        org.apache.maven.configuration.BeanConfigurationRequest $r2;

        this := @this: DefaultBeanConfiguratorTest;

        $u0 = new org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean;

        specialinvoke $u0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean: void <init>()>();

        $r0 = (org.apache.maven.configuration.DefaultBeanConfiguratorTest) this;

        config = specialinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest: org.codehaus.plexus.util.xml.Xpp3Dom toConfig(java.lang.String)>("<file>test</file>");

        $u1 = new org.apache.maven.configuration.DefaultBeanConfigurationRequest;

        specialinvoke $u1.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: void <init>()>();

        $stack7 = virtualinvoke $u1.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setBean(java.lang.Object)>($u0);

        virtualinvoke $stack7.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object)>(config);

        $r1 = (org.apache.maven.configuration.DefaultBeanConfiguratorTest) this;

        $stack9 = $r1.<org.apache.maven.configuration.DefaultBeanConfiguratorTest: org.apache.maven.configuration.BeanConfigurator configurator>;

        $r2 = (org.apache.maven.configuration.BeanConfigurationRequest) $u1;

        interfaceinvoke $stack9.<org.apache.maven.configuration.BeanConfigurator: void configureBean(org.apache.maven.configuration.BeanConfigurationRequest)>($r2);

        $u2 = new java.io.File;

        specialinvoke $u2.<java.io.File: void <init>(java.lang.String)>("test");

        $stack11 = $u0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean: java.io.File file>;

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($u2, $stack11);

        return;
    }

    public void testPreAndPostProcessing() throws org.apache.maven.configuration.BeanConfigurationException
    {
        DefaultBeanConfiguratorTest this;
        org.codehaus.plexus.util.xml.Xpp3Dom config;
        org.apache.maven.configuration.BeanConfigurationValuePreprocessor preprocessor;
        org.apache.maven.configuration.BeanConfigurationPathTranslator translator;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack11, $stack13, $u1;
        org.apache.maven.configuration.BeanConfigurator $stack15;
        java.io.File $stack17, $stack18, $u2;
        org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean $u0;
        org.apache.maven.configuration.DefaultBeanConfiguratorTest $r0, $r1;
        org.apache.maven.configuration.BeanConfigurationRequest $r2;

        this := @this: DefaultBeanConfiguratorTest;

        $u0 = new org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean;

        specialinvoke $u0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean: void <init>()>();

        $r0 = (org.apache.maven.configuration.DefaultBeanConfiguratorTest) this;

        config = specialinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest: org.codehaus.plexus.util.xml.Xpp3Dom toConfig(java.lang.String)>("<file>${test}</file>");

        preprocessor = staticinvoke <DefaultBeanConfiguratorTest$lambda_testPreAndPostProcessing_0__309: org.apache.maven.configuration.BeanConfigurationValuePreprocessor bootstrap$()>();

        translator = staticinvoke <DefaultBeanConfiguratorTest$lambda_testPreAndPostProcessing_1__310: org.apache.maven.configuration.BeanConfigurationPathTranslator bootstrap$()>();

        $u1 = new org.apache.maven.configuration.DefaultBeanConfigurationRequest;

        specialinvoke $u1.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: void <init>()>();

        $stack11 = virtualinvoke $u1.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setBean(java.lang.Object)>($u0);

        virtualinvoke $stack11.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object)>(config);

        $stack13 = virtualinvoke $u1.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setValuePreprocessor(org.apache.maven.configuration.BeanConfigurationValuePreprocessor)>(preprocessor);

        virtualinvoke $stack13.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setPathTranslator(org.apache.maven.configuration.BeanConfigurationPathTranslator)>(translator);

        $r1 = (org.apache.maven.configuration.DefaultBeanConfiguratorTest) this;

        $stack15 = $r1.<org.apache.maven.configuration.DefaultBeanConfiguratorTest: org.apache.maven.configuration.BeanConfigurator configurator>;

        $r2 = (org.apache.maven.configuration.BeanConfigurationRequest) $u1;

        interfaceinvoke $stack15.<org.apache.maven.configuration.BeanConfigurator: void configureBean(org.apache.maven.configuration.BeanConfigurationRequest)>($r2);

        $u2 = new java.io.File;

        specialinvoke $u2.<java.io.File: void <init>(java.lang.String)>("base/test");

        $stack17 = virtualinvoke $u2.<java.io.File: java.io.File getAbsoluteFile()>();

        $stack18 = $u0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean: java.io.File file>;

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack17, $stack18);

        return;
    }

    public void testChildConfigurationElement() throws org.apache.maven.configuration.BeanConfigurationException
    {
        DefaultBeanConfiguratorTest this;
        org.codehaus.plexus.util.xml.Xpp3Dom config;
        org.apache.maven.configuration.DefaultBeanConfigurationRequest $stack7, $u1;
        org.apache.maven.configuration.BeanConfigurator $stack9;
        java.io.File $stack11, $u2;
        org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean $u0;
        org.apache.maven.configuration.DefaultBeanConfiguratorTest $r0, $r1;
        org.apache.maven.configuration.BeanConfigurationRequest $r2;

        this := @this: DefaultBeanConfiguratorTest;

        $u0 = new org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean;

        specialinvoke $u0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean: void <init>()>();

        $r0 = (org.apache.maven.configuration.DefaultBeanConfiguratorTest) this;

        config = specialinvoke $r0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest: org.codehaus.plexus.util.xml.Xpp3Dom toConfig(java.lang.String)>("<wrapper><file>test</file></wrapper>");

        $u1 = new org.apache.maven.configuration.DefaultBeanConfigurationRequest;

        specialinvoke $u1.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: void <init>()>();

        $stack7 = virtualinvoke $u1.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setBean(java.lang.Object)>($u0);

        virtualinvoke $stack7.<org.apache.maven.configuration.DefaultBeanConfigurationRequest: org.apache.maven.configuration.DefaultBeanConfigurationRequest setConfiguration(java.lang.Object,java.lang.String)>(config, "wrapper");

        $r1 = (org.apache.maven.configuration.DefaultBeanConfiguratorTest) this;

        $stack9 = $r1.<org.apache.maven.configuration.DefaultBeanConfiguratorTest: org.apache.maven.configuration.BeanConfigurator configurator>;

        $r2 = (org.apache.maven.configuration.BeanConfigurationRequest) $u1;

        interfaceinvoke $stack9.<org.apache.maven.configuration.BeanConfigurator: void configureBean(org.apache.maven.configuration.BeanConfigurationRequest)>($r2);

        $u2 = new java.io.File;

        specialinvoke $u2.<java.io.File: void <init>(java.lang.String)>("test");

        $stack11 = $u0.<org.apache.maven.configuration.DefaultBeanConfiguratorTest$SomeBean: java.io.File file>;

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($u2, $stack11);

        return;
    }

    private static java.io.File lambda$testPreAndPostProcessing$1(java.io.File)
    {
        java.io.File $stack1, path, $stack4;
        java.lang.String $stack3;

        path := @parameter0: java.io.File;

        $stack1 = new java.io.File;

        $stack3 = virtualinvoke path.<java.io.File: java.lang.String getPath()>();

        specialinvoke $stack1.<java.io.File: void <init>(java.lang.String,java.lang.String)>("base", $stack3);

        $stack4 = virtualinvoke $stack1.<java.io.File: java.io.File getAbsoluteFile()>();

        return $stack4;
    }

    private static java.lang.Object lambda$testPreAndPostProcessing$0(java.lang.String, java.lang.Class) throws org.apache.maven.configuration.BeanConfigurationException
    {
        java.lang.String value, $stack8;
        boolean $stack2, $stack4;
        int $stack6, $stack7;
        java.lang.Class type;

        value := @parameter0: java.lang.String;

        type := @parameter1: java.lang.Class;

        if value == null goto label1;

        $stack2 = virtualinvoke value.<java.lang.String: boolean startsWith(java.lang.String)>("${");

        if $stack2 == 0 goto label1;

        $stack4 = virtualinvoke value.<java.lang.String: boolean endsWith(java.lang.String)>("}");

        if $stack4 == 0 goto label1;

        $stack6 = virtualinvoke value.<java.lang.String: int length()>();

        $stack7 = $stack6 - 1;

        $stack8 = virtualinvoke value.<java.lang.String: java.lang.String substring(int,int)>(2, $stack7);

        return $stack8;

     label1:
        return value;
    }
}
