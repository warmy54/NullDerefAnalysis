public class DefaultBuildPomXMLFilterFactory extends org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory
{
    private final org.apache.maven.model.building.TransformerContext context;

    public void <init>(org.apache.maven.model.building.TransformerContext, java.util.function.Consumer, boolean)
    {
        DefaultBuildPomXMLFilterFactory this;
        java.util.function.Consumer lexicalHandlerConsumer;
        boolean consume;
        org.apache.maven.model.building.TransformerContext context;
        org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory $r0;

        this := @this: DefaultBuildPomXMLFilterFactory;

        context := @parameter0: org.apache.maven.model.building.TransformerContext;

        lexicalHandlerConsumer := @parameter1: java.util.function.Consumer;

        consume := @parameter2: boolean;

        specialinvoke this.<org.apache.maven.model.transform.BuildToRawPomXMLFilterFactory: void <init>(java.util.function.Consumer,boolean)>(lexicalHandlerConsumer, consume);

        $r0 = (org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory) this;

        $r0.<org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory: org.apache.maven.model.building.TransformerContext context> = context;

        return;
    }

    protected java.util.function.Function getRelativePathMapper()
    {
        DefaultBuildPomXMLFilterFactory this;
        java.util.function.Function $stack1;
        org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory $r0;

        this := @this: DefaultBuildPomXMLFilterFactory;

        $r0 = (org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory) this;

        $stack1 = staticinvoke <DefaultBuildPomXMLFilterFactory$lambda_getRelativePathMapper_1__310: java.util.function.Function bootstrap$(org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory)>($r0);

        return $stack1;
    }

    protected java.util.function.BiFunction getDependencyKeyToVersionMapper()
    {
        DefaultBuildPomXMLFilterFactory this;
        java.util.function.BiFunction $stack1;
        org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory $r0;

        this := @this: DefaultBuildPomXMLFilterFactory;

        $r0 = (org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory) this;

        $stack1 = staticinvoke <DefaultBuildPomXMLFilterFactory$lambda_getDependencyKeyToVersionMapper_3__309: java.util.function.BiFunction bootstrap$(org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory)>($r0);

        return $stack1;
    }

    protected java.util.Optional getChangelist()
    {
        DefaultBuildPomXMLFilterFactory this;
        org.apache.maven.model.building.TransformerContext $stack1;
        java.lang.String $stack2;
        java.util.Optional $stack3;
        org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory $r0;

        this := @this: DefaultBuildPomXMLFilterFactory;

        $r0 = (org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory: org.apache.maven.model.building.TransformerContext context>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.model.building.TransformerContext: java.lang.String getUserProperty(java.lang.String)>("changelist");

        $stack3 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($stack2);

        return $stack3;
    }

    protected java.util.Optional getRevision()
    {
        DefaultBuildPomXMLFilterFactory this;
        org.apache.maven.model.building.TransformerContext $stack1;
        java.lang.String $stack2;
        java.util.Optional $stack3;
        org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory $r0;

        this := @this: DefaultBuildPomXMLFilterFactory;

        $r0 = (org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory: org.apache.maven.model.building.TransformerContext context>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.model.building.TransformerContext: java.lang.String getUserProperty(java.lang.String)>("revision");

        $stack3 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($stack2);

        return $stack3;
    }

    protected java.util.Optional getSha1()
    {
        DefaultBuildPomXMLFilterFactory this;
        org.apache.maven.model.building.TransformerContext $stack1;
        java.lang.String $stack2;
        java.util.Optional $stack3;
        org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory $r0;

        this := @this: DefaultBuildPomXMLFilterFactory;

        $r0 = (org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory: org.apache.maven.model.building.TransformerContext context>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.model.building.TransformerContext: java.lang.String getUserProperty(java.lang.String)>("sha1");

        $stack3 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($stack2);

        return $stack3;
    }

    private static org.apache.maven.model.transform.RelativeProject toRelativeProject(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model m;
        org.apache.maven.model.Parent $stack7, $stack11, $stack13, $stack16;
        java.lang.String groupId, version, $stack6;
        org.apache.maven.model.transform.RelativeProject $stack5;

        m := @parameter0: org.apache.maven.model.Model;

        groupId = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        if groupId != null goto label1;

        $stack13 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack13 == null goto label1;

        $stack16 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        groupId = virtualinvoke $stack16.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

     label1:
        version = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if version != null goto label2;

        $stack7 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack7 == null goto label2;

        $stack11 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        version = virtualinvoke $stack11.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

     label2:
        $stack5 = new org.apache.maven.model.transform.RelativeProject;

        $stack6 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        specialinvoke $stack5.<org.apache.maven.model.transform.RelativeProject: void <init>(java.lang.String,java.lang.String,java.lang.String)>(groupId, $stack6, version);

        return $stack5;
    }

    private static java.lang.String toVersion(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model m;
        org.apache.maven.model.Parent $stack3, $stack5;
        java.lang.String version;

        m := @parameter0: org.apache.maven.model.Model;

        version = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if version != null goto label1;

        $stack3 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack3 == null goto label1;

        $stack5 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        version = virtualinvoke $stack5.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

     label1:
        return version;
    }

    private java.lang.String lambda$getDependencyKeyToVersionMapper$3(java.lang.String, java.lang.String)
    {
        DefaultBuildPomXMLFilterFactory this;
        java.lang.String g, a, $stack9;
        org.apache.maven.model.building.TransformerContext $stack3;
        org.apache.maven.model.Model $stack4;
        java.util.Optional $stack5, $stack7;
        java.util.function.Function $stack6;
        java.lang.Object $stack8;
        org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory $r0;

        this := @this: DefaultBuildPomXMLFilterFactory;

        g := @parameter0: java.lang.String;

        a := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory) this;

        $stack3 = $r0.<org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory: org.apache.maven.model.building.TransformerContext context>;

        $stack4 = interfaceinvoke $stack3.<org.apache.maven.model.building.TransformerContext: org.apache.maven.model.Model getRawModel(java.lang.String,java.lang.String)>(g, a);

        $stack5 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($stack4);

        $stack6 = staticinvoke <DefaultBuildPomXMLFilterFactory$lambda_getDependencyKeyToVersionMapper_2__312: java.util.function.Function bootstrap$()>();

        $stack7 = virtualinvoke $stack5.<java.util.Optional: java.util.Optional map(java.util.function.Function)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(null);

        $stack9 = (java.lang.String) $stack8;

        return $stack9;
    }

    private static java.lang.String lambda$getDependencyKeyToVersionMapper$2(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model m;
        java.lang.String $stack1;

        m := @parameter0: org.apache.maven.model.Model;

        $stack1 = staticinvoke <org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory: java.lang.String toVersion(org.apache.maven.model.Model)>(m);

        return $stack1;
    }

    private java.util.Optional lambda$getRelativePathMapper$1(java.nio.file.Path)
    {
        DefaultBuildPomXMLFilterFactory this;
        java.nio.file.Path p;
        org.apache.maven.model.building.TransformerContext $stack2;
        org.apache.maven.model.Model $stack3;
        java.util.Optional $stack4, $stack6;
        java.util.function.Function $stack5;
        org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory $r0;

        this := @this: DefaultBuildPomXMLFilterFactory;

        p := @parameter0: java.nio.file.Path;

        $r0 = (org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory: org.apache.maven.model.building.TransformerContext context>;

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.model.building.TransformerContext: org.apache.maven.model.Model getRawModel(java.nio.file.Path)>(p);

        $stack4 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>($stack3);

        $stack5 = staticinvoke <DefaultBuildPomXMLFilterFactory$lambda_getRelativePathMapper_0__311: java.util.function.Function bootstrap$()>();

        $stack6 = virtualinvoke $stack4.<java.util.Optional: java.util.Optional map(java.util.function.Function)>($stack5);

        return $stack6;
    }

    private static org.apache.maven.model.transform.RelativeProject lambda$getRelativePathMapper$0(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model m;
        org.apache.maven.model.transform.RelativeProject $stack1;

        m := @parameter0: org.apache.maven.model.Model;

        $stack1 = staticinvoke <org.apache.maven.model.building.DefaultBuildPomXMLFilterFactory: org.apache.maven.model.transform.RelativeProject toRelativeProject(org.apache.maven.model.Model)>(m);

        return $stack1;
    }
}
