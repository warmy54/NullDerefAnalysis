public class DefaultClassRealmManager extends java.lang.Object implements org.apache.maven.classrealm.ClassRealmManager
{
    public static final java.lang.String API_REALMID;
    private static final java.lang.ClassLoader PARENT_CLASSLOADER;
    private final org.codehaus.plexus.logging.Logger logger;
    private final org.codehaus.plexus.classworlds.ClassWorld world;
    private final org.codehaus.plexus.classworlds.realm.ClassRealm containerRealm;
    private final java.util.List delegates;
    private final org.codehaus.plexus.classworlds.realm.ClassRealm mavenApiRealm;
    private final java.util.Set providedArtifacts;

    public void <init>(org.codehaus.plexus.logging.Logger, org.codehaus.plexus.PlexusContainer, java.util.List, org.apache.maven.extension.internal.CoreExportsProvider)
    {
        DefaultClassRealmManager this;
        org.codehaus.plexus.logging.Logger logger;
        org.codehaus.plexus.PlexusContainer container;
        org.codehaus.plexus.MutablePlexusContainer $stack6;
        org.codehaus.plexus.classworlds.ClassWorld $stack7;
        org.codehaus.plexus.classworlds.realm.ClassRealm $stack8, $stack12;
        java.util.List delegates;
        org.apache.maven.extension.internal.CoreExportsProvider exports;
        org.apache.maven.extension.internal.CoreExports $stack9, $stack13;
        java.util.Map foreignImports;
        org.apache.maven.classrealm.ClassRealmRequest$RealmType $stack11;
        java.util.Set $stack14;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: DefaultClassRealmManager;

        logger := @parameter0: org.codehaus.plexus.logging.Logger;

        container := @parameter1: org.codehaus.plexus.PlexusContainer;

        delegates := @parameter2: java.util.List;

        exports := @parameter3: org.apache.maven.extension.internal.CoreExportsProvider;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger> = logger;

        $stack6 = (org.codehaus.plexus.MutablePlexusContainer) container;

        $stack7 = interfaceinvoke $stack6.<org.codehaus.plexus.MutablePlexusContainer: org.codehaus.plexus.classworlds.ClassWorld getClassWorld()>();

        $r1 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $r1.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.ClassWorld world> = $stack7;

        $stack8 = interfaceinvoke container.<org.codehaus.plexus.PlexusContainer: org.codehaus.plexus.classworlds.realm.ClassRealm getContainerRealm()>();

        $r2 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $r2.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm containerRealm> = $stack8;

        $r3 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $r3.<org.apache.maven.classrealm.DefaultClassRealmManager: java.util.List delegates> = delegates;

        $stack9 = virtualinvoke exports.<org.apache.maven.extension.internal.CoreExportsProvider: org.apache.maven.extension.internal.CoreExports get()>();

        foreignImports = virtualinvoke $stack9.<org.apache.maven.extension.internal.CoreExports: java.util.Map getExportedPackages()>();

        $stack11 = <org.apache.maven.classrealm.ClassRealmRequest$RealmType: org.apache.maven.classrealm.ClassRealmRequest$RealmType Core>;

        $r4 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack12 = specialinvoke $r4.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm createRealm(java.lang.String,org.apache.maven.classrealm.ClassRealmRequest$RealmType,java.lang.ClassLoader,java.util.List,java.util.Map,java.util.List)>("maven.api", $stack11, null, null, foreignImports, null);

        $r5 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $r5.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm mavenApiRealm> = $stack12;

        $stack13 = virtualinvoke exports.<org.apache.maven.extension.internal.CoreExportsProvider: org.apache.maven.extension.internal.CoreExports get()>();

        $stack14 = virtualinvoke $stack13.<org.apache.maven.extension.internal.CoreExports: java.util.Set getExportedArtifacts()>();

        $r6 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $r6.<org.apache.maven.classrealm.DefaultClassRealmManager: java.util.Set providedArtifacts> = $stack14;

        return;
    }

    private org.codehaus.plexus.classworlds.realm.ClassRealm newRealm(java.lang.String)
    {
        DefaultClassRealmManager this;
        org.codehaus.plexus.classworlds.ClassWorld $stack7, $stack9;
        java.lang.String id, $stack18, realmId;
        org.codehaus.plexus.logging.Logger $stack11, $stack15;
        boolean $stack12;
        java.lang.StringBuilder $stack16, $stack17, $stack24, $stack25, $stack27, $u1, $u2;
        java.lang.Throwable $stack20, $stack22;
        int $stack26;
        org.codehaus.plexus.classworlds.realm.ClassRealm classRealm;
        java.util.Random $u0;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0, $r1, $r2, $r3;

        this := @this: DefaultClassRealmManager;

        id := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack7 = $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.ClassWorld world>;

        entermonitor $stack7;

     label1:
        realmId = id;

        $u0 = new java.util.Random;

        specialinvoke $u0.<java.util.Random: void <init>()>();

     label2:
        $r1 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack9 = $r1.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.ClassWorld world>;

        classRealm = virtualinvoke $stack9.<org.codehaus.plexus.classworlds.ClassWorld: org.codehaus.plexus.classworlds.realm.ClassRealm newRealm(java.lang.String,java.lang.ClassLoader)>(realmId, null);

        $r2 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack11 = $r2.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $stack12 = interfaceinvoke $stack11.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack12 == 0 goto label3;

        $r3 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack15 = $r3.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created new class realm ");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(realmId);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack15.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack18);

     label3:
        exitmonitor $stack7;

     label4:
        return classRealm;

     label5:
        $stack22 := @caughtexception;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack24 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(id);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $stack26 = virtualinvoke $u0.<java.util.Random: int nextInt()>();

        $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack26);

        realmId = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label6:
        $stack20 := @caughtexception;

        exitmonitor $stack7;

     label7:
        throw $stack20;

        catch org.codehaus.plexus.classworlds.realm.DuplicateRealmException from label2 to label3 with label5;
        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label5 to label7 with label6;
    }

    public org.codehaus.plexus.classworlds.realm.ClassRealm getMavenApiRealm()
    {
        DefaultClassRealmManager this;
        org.codehaus.plexus.classworlds.realm.ClassRealm $stack1;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0;

        this := @this: DefaultClassRealmManager;

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack1 = $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm mavenApiRealm>;

        return $stack1;
    }

    private org.codehaus.plexus.classworlds.realm.ClassRealm createRealm(java.lang.String, org.apache.maven.classrealm.ClassRealmRequest$RealmType, java.lang.ClassLoader, java.util.List, java.util.Map, java.util.List)
    {
        java.util.List artifacts, parentImports;
        DefaultClassRealmManager this;
        java.lang.String baseRealmId, id, $stack30, $stack59;
        java.lang.ClassLoader parent;
        org.apache.maven.classrealm.ClassRealmRequest$RealmType type;
        org.codehaus.plexus.logging.Logger $stack19, $stack27;
        boolean $stack20, $stack23, $stack54, $stack57;
        java.util.Iterator l11, classRealm;
        java.lang.Object $stack25, $stack56;
        java.lang.StringBuilder $stack28, $stack29, $u7;
        java.io.File $stack61;
        java.util.Map foreignImports;
        org.eclipse.aether.artifact.Artifact artifact;
        java.util.ArrayList parentImports#5, $u1, $u3, $u4;
        java.util.TreeMap foreignImports#6, $u5, $u6;
        org.codehaus.plexus.classworlds.realm.ClassRealm classRealm#7;
        java.util.Set artifact#8;
        java.util.LinkedHashSet $u0;
        org.apache.maven.classrealm.ArtifactClassRealmConstituent $u2;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: DefaultClassRealmManager;

        baseRealmId := @parameter0: java.lang.String;

        type := @parameter1: org.apache.maven.classrealm.ClassRealmRequest$RealmType;

        parent := @parameter2: java.lang.ClassLoader;

        parentImports := @parameter3: java.util.List;

        foreignImports := @parameter4: java.util.Map;

        artifacts := @parameter5: java.util.List;

        $u0 = new java.util.LinkedHashSet;

        specialinvoke $u0.<java.util.LinkedHashSet: void <init>()>();

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        if artifacts == null goto label03;

        classRealm = interfaceinvoke artifacts.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $stack54 = interfaceinvoke classRealm.<java.util.Iterator: boolean hasNext()>();

        if $stack54 == 0 goto label03;

        $stack56 = interfaceinvoke classRealm.<java.util.Iterator: java.lang.Object next()>();

        artifact = (org.eclipse.aether.artifact.Artifact) $stack56;

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack57 = specialinvoke $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: boolean isProvidedArtifact(org.eclipse.aether.artifact.Artifact)>(artifact);

        if $stack57 != 0 goto label02;

        $stack59 = staticinvoke <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.String getId(org.eclipse.aether.artifact.Artifact)>(artifact);

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>($stack59);

        $stack61 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.io.File getFile()>();

        if $stack61 == null goto label02;

        $u2 = new org.apache.maven.classrealm.ArtifactClassRealmConstituent;

        specialinvoke $u2.<org.apache.maven.classrealm.ArtifactClassRealmConstituent: void <init>(org.eclipse.aether.artifact.Artifact)>(artifact);

        interfaceinvoke $u1.<java.util.List: boolean add(java.lang.Object)>($u2);

     label02:
        goto label01;

     label03:
        if parentImports == null goto label04;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>(java.util.Collection)>(parentImports);

        parentImports#5 = $u3;

        goto label05;

     label04:
        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        parentImports#5 = $u4;

     label05:
        if foreignImports == null goto label06;

        $u5 = new java.util.TreeMap;

        specialinvoke $u5.<java.util.TreeMap: void <init>(java.util.Map)>(foreignImports);

        foreignImports#6 = $u5;

        goto label07;

     label06:
        $u6 = new java.util.TreeMap;

        specialinvoke $u6.<java.util.TreeMap: void <init>()>();

        foreignImports#6 = $u6;

     label07:
        $r1 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        classRealm#7 = specialinvoke $r1.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm newRealm(java.lang.String)>(baseRealmId);

        if parent == null goto label08;

        virtualinvoke classRealm#7.<org.codehaus.plexus.classworlds.realm.ClassRealm: void setParentClassLoader(java.lang.ClassLoader)>(parent);

     label08:
        $r2 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        specialinvoke $r2.<org.apache.maven.classrealm.DefaultClassRealmManager: void callDelegates(org.codehaus.plexus.classworlds.realm.ClassRealm,org.apache.maven.classrealm.ClassRealmRequest$RealmType,java.lang.ClassLoader,java.util.List,java.util.Map,java.util.List)>(classRealm#7, type, parent, parentImports#5, foreignImports#6, $u1);

        $r3 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        specialinvoke $r3.<org.apache.maven.classrealm.DefaultClassRealmManager: void wireRealm(org.codehaus.plexus.classworlds.realm.ClassRealm,java.util.List,java.util.Map)>(classRealm#7, parentImports#5, foreignImports#6);

        $r4 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        artifact#8 = specialinvoke $r4.<org.apache.maven.classrealm.DefaultClassRealmManager: java.util.Set populateRealm(org.codehaus.plexus.classworlds.realm.ClassRealm,java.util.List)>(classRealm#7, $u1);

        $r5 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack19 = $r5.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $stack20 = interfaceinvoke $stack19.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack20 == 0 goto label10;

        interfaceinvoke $u0.<java.util.Set: boolean removeAll(java.util.Collection)>(artifact#8);

        l11 = interfaceinvoke $u0.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $stack23 = interfaceinvoke l11.<java.util.Iterator: boolean hasNext()>();

        if $stack23 == 0 goto label10;

        $stack25 = interfaceinvoke l11.<java.util.Iterator: java.lang.Object next()>();

        id = (java.lang.String) $stack25;

        $r6 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack27 = $r6.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        $stack28 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Excluded: ");

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(id);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack27.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack30);

        goto label09;

     label10:
        return classRealm#7;
    }

    public org.codehaus.plexus.classworlds.realm.ClassRealm getCoreRealm()
    {
        DefaultClassRealmManager this;
        org.codehaus.plexus.classworlds.realm.ClassRealm $stack1;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0;

        this := @this: DefaultClassRealmManager;

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack1 = $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm containerRealm>;

        return $stack1;
    }

    public org.codehaus.plexus.classworlds.realm.ClassRealm createProjectRealm(org.apache.maven.model.Model, java.util.List)
    {
        org.apache.maven.model.Model model;
        DefaultClassRealmManager this;
        org.codehaus.plexus.classworlds.realm.ClassRealm parent, $stack8;
        java.lang.String $stack6;
        java.util.List artifacts;
        org.apache.maven.classrealm.ClassRealmRequest$RealmType $stack7;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0, $r1;
        java.lang.ClassLoader $r2;

        this := @this: DefaultClassRealmManager;

        model := @parameter0: org.apache.maven.model.Model;

        artifacts := @parameter1: java.util.List;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(model, "model cannot be null");

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        parent = virtualinvoke $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm getMavenApiRealm()>();

        $stack6 = staticinvoke <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.String getKey(org.apache.maven.model.Model)>(model);

        $stack7 = <org.apache.maven.classrealm.ClassRealmRequest$RealmType: org.apache.maven.classrealm.ClassRealmRequest$RealmType Project>;

        $r1 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $r2 = (java.lang.ClassLoader) parent;

        $stack8 = specialinvoke $r1.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm createRealm(java.lang.String,org.apache.maven.classrealm.ClassRealmRequest$RealmType,java.lang.ClassLoader,java.util.List,java.util.Map,java.util.List)>($stack6, $stack7, $r2, null, null, artifacts);

        return $stack8;
    }

    private static java.lang.String getKey(org.apache.maven.model.Model)
    {
        java.lang.StringBuilder $stack1, $stack2, $stack4, $stack5, $stack7, $stack8, $stack10;
        org.apache.maven.model.Model model;
        java.lang.String $stack3, $stack6, $stack9, $stack11;

        model := @parameter0: org.apache.maven.model.Model;

        $stack1 = new java.lang.StringBuilder;

        specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("project>");

        $stack3 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack6 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack9 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack11;
    }

    public org.codehaus.plexus.classworlds.realm.ClassRealm createExtensionRealm(org.apache.maven.model.Plugin, java.util.List)
    {
        org.apache.maven.model.Plugin plugin;
        DefaultClassRealmManager this;
        org.codehaus.plexus.classworlds.realm.ClassRealm $stack6, $stack11;
        java.util.Map foreignImports;
        java.lang.String $stack8;
        java.util.List artifacts;
        java.lang.ClassLoader $stack9;
        org.apache.maven.classrealm.ClassRealmRequest$RealmType $stack10;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0, $r1;

        this := @this: DefaultClassRealmManager;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        artifacts := @parameter1: java.util.List;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(plugin, "plugin cannot be null");

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack6 = virtualinvoke $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm getMavenApiRealm()>();

        foreignImports = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("", $stack6);

        $stack8 = staticinvoke <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.String getKey(org.apache.maven.model.Plugin,boolean)>(plugin, 1);

        $stack10 = <org.apache.maven.classrealm.ClassRealmRequest$RealmType: org.apache.maven.classrealm.ClassRealmRequest$RealmType Extension>;

        $stack9 = <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.ClassLoader PARENT_CLASSLOADER>;

        $r1 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack11 = specialinvoke $r1.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm createRealm(java.lang.String,org.apache.maven.classrealm.ClassRealmRequest$RealmType,java.lang.ClassLoader,java.util.List,java.util.Map,java.util.List)>($stack8, $stack10, $stack9, null, foreignImports, artifacts);

        return $stack11;
    }

    private boolean isProvidedArtifact(org.eclipse.aether.artifact.Artifact)
    {
        DefaultClassRealmManager this;
        java.util.Set $stack3;
        org.eclipse.aether.artifact.Artifact artifact;
        java.lang.String $stack4, $stack7, $stack9;
        java.lang.StringBuilder $stack5, $stack6, $stack8, $u0;
        boolean $stack10;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0;

        this := @this: DefaultClassRealmManager;

        artifact := @parameter0: org.eclipse.aether.artifact.Artifact;

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack3 = $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: java.util.Set providedArtifacts>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>();

        $stack5 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack7 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack10 = interfaceinvoke $stack3.<java.util.Set: boolean contains(java.lang.Object)>($stack9);

        return $stack10;
    }

    public org.codehaus.plexus.classworlds.realm.ClassRealm createPluginRealm(org.apache.maven.model.Plugin, java.lang.ClassLoader, java.util.List, java.util.Map, java.util.List)
    {
        org.apache.maven.model.Plugin plugin;
        DefaultClassRealmManager this;
        java.lang.String $stack7;
        java.util.List parentImports, artifacts;
        java.util.Map foreignImports;
        org.apache.maven.classrealm.ClassRealmRequest$RealmType $stack8;
        org.codehaus.plexus.classworlds.realm.ClassRealm $stack9;
        java.lang.ClassLoader parent;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0;

        this := @this: DefaultClassRealmManager;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        parent := @parameter1: java.lang.ClassLoader;

        parentImports := @parameter2: java.util.List;

        foreignImports := @parameter3: java.util.Map;

        artifacts := @parameter4: java.util.List;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(plugin, "plugin cannot be null");

        if parent != null goto label1;

        parent = <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.ClassLoader PARENT_CLASSLOADER>;

     label1:
        $stack7 = staticinvoke <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.String getKey(org.apache.maven.model.Plugin,boolean)>(plugin, 0);

        $stack8 = <org.apache.maven.classrealm.ClassRealmRequest$RealmType: org.apache.maven.classrealm.ClassRealmRequest$RealmType Plugin>;

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack9 = specialinvoke $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.classworlds.realm.ClassRealm createRealm(java.lang.String,org.apache.maven.classrealm.ClassRealmRequest$RealmType,java.lang.ClassLoader,java.util.List,java.util.Map,java.util.List)>($stack7, $stack8, parent, parentImports, foreignImports, artifacts);

        return $stack9;
    }

    private static java.lang.String getKey(org.apache.maven.model.Plugin, boolean)
    {
        org.apache.maven.model.Plugin plugin;
        java.lang.String $stack3, version, $stack7, $stack10, $stack14, $stack15;
        java.lang.StringBuilder $stack5, $stack6, $stack8, $stack9, $stack11, $stack12, $stack13;
        boolean extension;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        extension := @parameter1: boolean;

        $stack3 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        version = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String toSnapshotVersion(java.lang.String)>($stack3);

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        if extension == 0 goto label1;

        $stack15 = "extension>";

        goto label2;

     label1:
        $stack15 = "plugin>";

     label2:
        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack7 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack10 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack14;
    }

    private static java.lang.String getId(org.eclipse.aether.artifact.Artifact)
    {
        org.eclipse.aether.artifact.Artifact artifact;
        java.lang.String $stack1, $stack2, $stack3, $stack4, $stack5, $stack6;

        artifact := @parameter0: org.eclipse.aether.artifact.Artifact;

        $stack1 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>();

        $stack2 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack3 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getExtension()>();

        $stack4 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>();

        $stack5 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getBaseVersion()>();

        $stack6 = staticinvoke <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.String getId(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack1, $stack2, $stack3, $stack4, $stack5);

        return $stack6;
    }

    private static java.lang.String getId(org.apache.maven.classrealm.ClassRealmConstituent)
    {
        org.apache.maven.classrealm.ClassRealmConstituent constituent;
        java.lang.String $stack1, $stack2, $stack3, $stack4, $stack5, $stack6;

        constituent := @parameter0: org.apache.maven.classrealm.ClassRealmConstituent;

        $stack1 = interfaceinvoke constituent.<org.apache.maven.classrealm.ClassRealmConstituent: java.lang.String getGroupId()>();

        $stack2 = interfaceinvoke constituent.<org.apache.maven.classrealm.ClassRealmConstituent: java.lang.String getArtifactId()>();

        $stack3 = interfaceinvoke constituent.<org.apache.maven.classrealm.ClassRealmConstituent: java.lang.String getType()>();

        $stack4 = interfaceinvoke constituent.<org.apache.maven.classrealm.ClassRealmConstituent: java.lang.String getClassifier()>();

        $stack5 = interfaceinvoke constituent.<org.apache.maven.classrealm.ClassRealmConstituent: java.lang.String getVersion()>();

        $stack6 = staticinvoke <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.String getId(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack1, $stack2, $stack3, $stack4, $stack5);

        return $stack6;
    }

    private static java.lang.String getId(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack13, $stack14, $stack16, $stack17, $stack18;
        java.lang.String gid, aid, type, 'cls', ver, $stack15, $stack19;
        boolean $stack11;

        gid := @parameter0: java.lang.String;

        aid := @parameter1: java.lang.String;

        type := @parameter2: java.lang.String;

        'cls' := @parameter3: java.lang.String;

        ver := @parameter4: java.lang.String;

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(gid);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(aid);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(type);

        $stack11 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>('cls');

        if $stack11 == 0 goto label1;

        $stack16 = new java.lang.StringBuilder;

        specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('cls');

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $stack19 = "";

     label2:
        $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ver);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack15;
    }

    private void callDelegates(org.codehaus.plexus.classworlds.realm.ClassRealm, org.apache.maven.classrealm.ClassRealmRequest$RealmType, java.lang.ClassLoader, java.util.List, java.util.Map, java.util.List)
    {
        DefaultClassRealmManager this;
        java.util.List $stack13, parentImports, constituents;
        boolean $stack14, $stack17;
        org.apache.maven.classrealm.ClassRealmRequest$RealmType type;
        java.lang.ClassLoader parent;
        java.util.Map foreignImports;
        java.util.Iterator l9;
        java.lang.Object $stack18;
        org.apache.maven.classrealm.ClassRealmManagerDelegate delegate;
        org.codehaus.plexus.classworlds.realm.ClassRealm classRealm;
        java.lang.Exception $stack20;
        org.codehaus.plexus.logging.Logger $stack22;
        java.lang.Class $stack23;
        java.lang.String $stack24, $stack29, $stack31;
        java.lang.StringBuilder $stack25, $stack26, $stack27, $stack28, $stack30, $u2;
        java.util.ArrayList $u0;
        org.apache.maven.classrealm.DefaultClassRealmRequest $u1;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0, $r2;
        org.apache.maven.classrealm.ClassRealmRequest $r1;

        this := @this: DefaultClassRealmManager;

        classRealm := @parameter0: org.codehaus.plexus.classworlds.realm.ClassRealm;

        type := @parameter1: org.apache.maven.classrealm.ClassRealmRequest$RealmType;

        parent := @parameter2: java.lang.ClassLoader;

        parentImports := @parameter3: java.util.List;

        foreignImports := @parameter4: java.util.Map;

        constituents := @parameter5: java.util.List;

        $u0 = new java.util.ArrayList;

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack13 = $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: java.util.List delegates>;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>($stack13);

        $stack14 = interfaceinvoke $u0.<java.util.List: boolean isEmpty()>();

        if $stack14 != 0 goto label6;

        $u1 = new org.apache.maven.classrealm.DefaultClassRealmRequest;

        specialinvoke $u1.<org.apache.maven.classrealm.DefaultClassRealmRequest: void <init>(org.apache.maven.classrealm.ClassRealmRequest$RealmType,java.lang.ClassLoader,java.util.List,java.util.Map,java.util.List)>(type, parent, parentImports, foreignImports, constituents);

        l9 = interfaceinvoke $u0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack17 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label6;

        $stack18 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        delegate = (org.apache.maven.classrealm.ClassRealmManagerDelegate) $stack18;

     label2:
        $r1 = (org.apache.maven.classrealm.ClassRealmRequest) $u1;

        interfaceinvoke delegate.<org.apache.maven.classrealm.ClassRealmManagerDelegate: void setupRealm(org.codehaus.plexus.classworlds.realm.ClassRealm,org.apache.maven.classrealm.ClassRealmRequest)>(classRealm, $r1);

     label3:
        goto label5;

     label4:
        $stack20 := @caughtexception;

        $r2 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack22 = $r2.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack23 = virtualinvoke delegate.<java.lang.Object: java.lang.Class getClass()>();

        $stack24 = virtualinvoke $stack23.<java.lang.Class: java.lang.String getName()>();

        $stack25 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed to setup class realm ");

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(classRealm);

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack29 = virtualinvoke $stack20.<java.lang.Exception: java.lang.String getMessage()>();

        $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29);

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack22.<org.codehaus.plexus.logging.Logger: void error(java.lang.String,java.lang.Throwable)>($stack31, $stack20);

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    private java.util.Set populateRealm(org.codehaus.plexus.classworlds.realm.ClassRealm, java.util.List)
    {
        DefaultClassRealmManager this;
        org.codehaus.plexus.logging.Logger $stack10, $stack18, $stack24, $stack31, $stack38;
        boolean $stack11, $stack19, $stack13;
        java.util.List constituents;
        java.util.Iterator l4;
        java.lang.Object $stack14;
        org.apache.maven.classrealm.ClassRealmConstituent constituent;
        java.io.File file;
        java.lang.String id, $stack27, $stack33, $stack35, $stack39;
        org.codehaus.plexus.classworlds.realm.ClassRealm classRealm;
        java.net.URI $stack20;
        java.net.URL $stack21;
        java.lang.StringBuilder $stack25, $stack26, $stack32, $stack34, $u1, $u2;
        java.net.MalformedURLException $stack37;
        java.util.LinkedHashSet $u0;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultClassRealmManager;

        classRealm := @parameter0: org.codehaus.plexus.classworlds.realm.ClassRealm;

        constituents := @parameter1: java.util.List;

        $u0 = new java.util.LinkedHashSet;

        specialinvoke $u0.<java.util.LinkedHashSet: void <init>()>();

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack10 = $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $stack11 = interfaceinvoke $stack10.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack11 == 0 goto label1;

        $r1 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack31 = $r1.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack32 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Populating class realm ");

        $stack33 = virtualinvoke classRealm.<org.codehaus.plexus.classworlds.realm.ClassRealm: java.lang.String getId()>();

        $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33);

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack31.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack35);

     label1:
        l4 = interfaceinvoke constituents.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack13 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label7;

        $stack14 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        constituent = (org.apache.maven.classrealm.ClassRealmConstituent) $stack14;

        file = interfaceinvoke constituent.<org.apache.maven.classrealm.ClassRealmConstituent: java.io.File getFile()>();

        id = staticinvoke <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.String getId(org.apache.maven.classrealm.ClassRealmConstituent)>(constituent);

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>(id);

        $r2 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack18 = $r2.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $stack19 = interfaceinvoke $stack18.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack19 == 0 goto label3;

        $r3 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack24 = $r3.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack25 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Included: ");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(id);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack24.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack27);

     label3:
        $stack20 = virtualinvoke file.<java.io.File: java.net.URI toURI()>();

        $stack21 = virtualinvoke $stack20.<java.net.URI: java.net.URL toURL()>();

        virtualinvoke classRealm.<org.codehaus.plexus.classworlds.realm.ClassRealm: void addURL(java.net.URL)>($stack21);

     label4:
        goto label6;

     label5:
        $stack37 := @caughtexception;

        $r4 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack38 = $r4.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $stack39 = virtualinvoke $stack37.<java.net.MalformedURLException: java.lang.String getMessage()>();

        interfaceinvoke $stack38.<org.codehaus.plexus.logging.Logger: void error(java.lang.String,java.lang.Throwable)>($stack39, $stack37);

     label6:
        goto label2;

     label7:
        return $u0;

        catch java.net.MalformedURLException from label3 to label4 with label5;
    }

    private void wireRealm(org.codehaus.plexus.classworlds.realm.ClassRealm, java.util.List, java.util.Map)
    {
        java.util.Map foreignImports;
        java.util.List parentImports;
        boolean $stack8, $stack10, $stack15, $stack35, $stack38, $stack46, $stack41, $stack12;
        DefaultClassRealmManager this;
        org.codehaus.plexus.logging.Logger $stack9, $stack14, $stack18, $stack29, $stack37, $stack45, $stack49, $stack60;
        java.lang.Object $stack13, $stack42, $stack43, $stack44;
        org.codehaus.plexus.classworlds.realm.ClassRealm classRealm;
        java.lang.StringBuilder $stack19, $stack20, $stack21, $stack24, $stack30, $stack32, $stack50, $stack51, $stack52, $stack54, $stack61, $stack63, $u0, $u1, $u2, $u3;
        java.lang.ClassLoader $stack22, importedRealm;
        java.lang.String $stack23, $stack25, $stack31, $stack33, imp, $stack53, $stack55, $stack62, $stack64, entry#14;
        java.util.Set $stack39;
        java.util.Iterator l4;
        java.util.Map$Entry entry;
        org.apache.maven.classrealm.DefaultClassRealmManager $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: DefaultClassRealmManager;

        classRealm := @parameter0: org.codehaus.plexus.classworlds.realm.ClassRealm;

        parentImports := @parameter1: java.util.List;

        foreignImports := @parameter2: java.util.Map;

        if foreignImports == null goto label4;

        $stack35 = interfaceinvoke foreignImports.<java.util.Map: boolean isEmpty()>();

        if $stack35 != 0 goto label4;

        $r0 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack37 = $r0.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $stack38 = interfaceinvoke $stack37.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack38 == 0 goto label1;

        $r1 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack60 = $r1.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack61 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Importing foreign packages into class realm ");

        $stack62 = virtualinvoke classRealm.<org.codehaus.plexus.classworlds.realm.ClassRealm: java.lang.String getId()>();

        $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack62);

        $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack60.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack64);

     label1:
        $stack39 = interfaceinvoke foreignImports.<java.util.Map: java.util.Set entrySet()>();

        l4 = interfaceinvoke $stack39.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $stack41 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack41 == 0 goto label4;

        $stack42 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $stack42;

        $stack43 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        importedRealm = (java.lang.ClassLoader) $stack43;

        $stack44 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        imp = (java.lang.String) $stack44;

        $r2 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack45 = $r2.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $stack46 = interfaceinvoke $stack45.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack46 == 0 goto label3;

        $r3 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack49 = $r3.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack50 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Imported: ");

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(imp);

        $stack52 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < ");

        $r4 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack53 = specialinvoke $r4.<org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.String getId(java.lang.ClassLoader)>(importedRealm);

        $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53);

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack49.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack55);

     label3:
        virtualinvoke classRealm.<org.codehaus.plexus.classworlds.realm.ClassRealm: void importFrom(java.lang.ClassLoader,java.lang.String)>(importedRealm, imp);

        goto label2;

     label4:
        if parentImports == null goto label8;

        $stack8 = interfaceinvoke parentImports.<java.util.List: boolean isEmpty()>();

        if $stack8 != 0 goto label8;

        $r5 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack9 = $r5.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $stack10 = interfaceinvoke $stack9.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack10 == 0 goto label5;

        $r6 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack29 = $r6.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack30 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Importing parent packages into class realm ");

        $stack31 = virtualinvoke classRealm.<org.codehaus.plexus.classworlds.realm.ClassRealm: java.lang.String getId()>();

        $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack29.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack33);

     label5:
        l4 = interfaceinvoke parentImports.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $stack12 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label8;

        $stack13 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        entry#14 = (java.lang.String) $stack13;

        $r7 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack14 = $r7.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $stack15 = interfaceinvoke $stack14.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack15 == 0 goto label7;

        $r8 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack18 = $r8.<org.apache.maven.classrealm.DefaultClassRealmManager: org.codehaus.plexus.logging.Logger logger>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  Imported: ");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(entry#14);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" < ");

        $stack22 = virtualinvoke classRealm.<org.codehaus.plexus.classworlds.realm.ClassRealm: java.lang.ClassLoader getParentClassLoader()>();

        $r9 = (org.apache.maven.classrealm.DefaultClassRealmManager) this;

        $stack23 = specialinvoke $r9.<org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.String getId(java.lang.ClassLoader)>($stack22);

        $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack18.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack25);

     label7:
        virtualinvoke classRealm.<org.codehaus.plexus.classworlds.realm.ClassRealm: void importFromParent(java.lang.String)>(entry#14);

        goto label6;

     label8:
        return;
    }

    private java.lang.String getId(java.lang.ClassLoader)
    {
        java.lang.ClassLoader classLoader;
        boolean $stack2;
        java.lang.String $stack3, $stack5;
        org.codehaus.plexus.classworlds.realm.ClassRealm $stack4;
        DefaultClassRealmManager this;

        this := @this: DefaultClassRealmManager;

        classLoader := @parameter0: java.lang.ClassLoader;

        $stack2 = classLoader instanceof org.codehaus.plexus.classworlds.realm.ClassRealm;

        if $stack2 == 0 goto label1;

        $stack4 = (org.codehaus.plexus.classworlds.realm.ClassRealm) classLoader;

        $stack5 = virtualinvoke $stack4.<org.codehaus.plexus.classworlds.realm.ClassRealm: java.lang.String getId()>();

        return $stack5;

     label1:
        $stack3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(classLoader);

        return $stack3;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        java.lang.ClassLoader $stack1;

        <DefaultClassRealmManager: java.lang.String API_REALMID> = "maven.api";

        $stack0 = class "Lorg/codehaus/plexus/classworlds/ClassWorld;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        <org.apache.maven.classrealm.DefaultClassRealmManager: java.lang.ClassLoader PARENT_CLASSLOADER> = $stack1;

        return;
    }
}
