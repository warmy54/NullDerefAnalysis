public class DefaultClasspathTransformation extends java.lang.Object implements org.apache.maven.repository.metadata.ClasspathTransformation
{
    org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver;

    public void <init>()
    {
        DefaultClasspathTransformation this;

        this := @this: DefaultClasspathTransformation;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.maven.repository.metadata.ClasspathContainer transform(org.apache.maven.repository.metadata.MetadataGraph, org.apache.maven.artifact.ArtifactScopeEnum, boolean) throws org.apache.maven.repository.metadata.MetadataGraphTransformationException
    {
        org.apache.maven.repository.metadata.MetadataGraph dirtyGraph, cleanGraph;
        boolean $stack8, $stack11, $stack13, resolve;
        DefaultClasspathTransformation this;
        org.apache.maven.artifact.ArtifactScopeEnum scope;
        org.apache.maven.repository.metadata.GraphConflictResolver $stack9;
        org.apache.maven.repository.metadata.MetadataGraphVertex entry, $stack16;
        java.lang.Throwable $stack22, $r2;
        org.apache.maven.repository.metadata.ArtifactMetadata amd;
        org.apache.maven.repository.metadata.ClasspathContainer $u0;
        org.apache.maven.repository.metadata.DefaultClasspathTransformation$ClasspathGraphVisitor $u1;
        org.apache.maven.repository.metadata.MetadataGraphTransformationException $u2;
        org.apache.maven.repository.metadata.DefaultClasspathTransformation $r0, $r1;

        this := @this: DefaultClasspathTransformation;

        dirtyGraph := @parameter0: org.apache.maven.repository.metadata.MetadataGraph;

        scope := @parameter1: org.apache.maven.artifact.ArtifactScopeEnum;

        resolve := @parameter2: boolean;

     label1:
        if dirtyGraph == null goto label2;

        $stack8 = virtualinvoke dirtyGraph.<org.apache.maven.repository.metadata.MetadataGraph: boolean isEmpty()>();

        if $stack8 == 0 goto label3;

     label2:
        return null;

     label3:
        $r0 = (org.apache.maven.repository.metadata.DefaultClasspathTransformation) this;

        $stack9 = $r0.<org.apache.maven.repository.metadata.DefaultClasspathTransformation: org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver>;

        cleanGraph = interfaceinvoke $stack9.<org.apache.maven.repository.metadata.GraphConflictResolver: org.apache.maven.repository.metadata.MetadataGraph resolveConflicts(org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.artifact.ArtifactScopeEnum)>(dirtyGraph, scope);

        if cleanGraph == null goto label4;

        $stack11 = virtualinvoke cleanGraph.<org.apache.maven.repository.metadata.MetadataGraph: boolean isEmpty()>();

        if $stack11 == 0 goto label5;

     label4:
        return null;

     label5:
        $u0 = new org.apache.maven.repository.metadata.ClasspathContainer;

        specialinvoke $u0.<org.apache.maven.repository.metadata.ClasspathContainer: void <init>(org.apache.maven.artifact.ArtifactScopeEnum)>(scope);

        $stack13 = virtualinvoke cleanGraph.<org.apache.maven.repository.metadata.MetadataGraph: boolean isEmptyEdges()>();

        if $stack13 == 0 goto label6;

        $stack16 = virtualinvoke cleanGraph.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraphVertex getEntry()>();

        amd = virtualinvoke $stack16.<org.apache.maven.repository.metadata.MetadataGraphVertex: org.apache.maven.repository.metadata.ArtifactMetadata getMd()>();

        virtualinvoke $u0.<org.apache.maven.repository.metadata.ClasspathContainer: org.apache.maven.repository.metadata.ClasspathContainer add(org.apache.maven.repository.metadata.ArtifactMetadata)>(amd);

        goto label7;

     label6:
        $u1 = new org.apache.maven.repository.metadata.DefaultClasspathTransformation$ClasspathGraphVisitor;

        $r1 = (org.apache.maven.repository.metadata.DefaultClasspathTransformation) this;

        specialinvoke $u1.<org.apache.maven.repository.metadata.DefaultClasspathTransformation$ClasspathGraphVisitor: void <init>(org.apache.maven.repository.metadata.DefaultClasspathTransformation,org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.repository.metadata.ClasspathContainer)>($r1, cleanGraph, $u0);

        entry = virtualinvoke cleanGraph.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraphVertex getEntry()>();

        virtualinvoke $u1.<org.apache.maven.repository.metadata.DefaultClasspathTransformation$ClasspathGraphVisitor: void visit(org.apache.maven.repository.metadata.MetadataGraphVertex)>(entry);

     label7:
        return $u0;

     label8:
        $stack22 := @caughtexception;

        $u2 = new org.apache.maven.repository.metadata.MetadataGraphTransformationException;

        specialinvoke $u2.<org.apache.maven.repository.metadata.MetadataGraphTransformationException: void <init>(java.lang.Throwable)>($stack22);

        $r2 = (java.lang.Throwable) $u2;

        throw $r2;

        catch org.apache.maven.repository.metadata.GraphConflictResolutionException from label1 to label2 with label8;
        catch org.apache.maven.repository.metadata.GraphConflictResolutionException from label3 to label4 with label8;
        catch org.apache.maven.repository.metadata.GraphConflictResolutionException from label5 to label7 with label8;
    }
}
