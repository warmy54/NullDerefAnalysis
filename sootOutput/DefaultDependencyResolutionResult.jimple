class DefaultDependencyResolutionResult extends java.lang.Object implements org.apache.maven.project.DependencyResolutionResult
{
    private org.eclipse.aether.graph.DependencyNode root;
    private java.util.List dependencies;
    private java.util.List resolvedDependencies;
    private java.util.List unresolvedDependencies;
    private java.util.List collectionErrors;
    private java.util.Map resolutionErrors;

    void <init>()
    {
        DefaultDependencyResolutionResult this;
        java.util.ArrayList $u0, $u1, $u2, $u3;
        java.util.IdentityHashMap $u4;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultDependencyResolutionResult;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List dependencies> = $u0;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $r1.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List resolvedDependencies> = $u1;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        $r2 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $r2.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List unresolvedDependencies> = $u2;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        $r3 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $r3.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List collectionErrors> = $u3;

        $u4 = new java.util.IdentityHashMap;

        specialinvoke $u4.<java.util.IdentityHashMap: void <init>()>();

        $r4 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $r4.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.Map resolutionErrors> = $u4;

        return;
    }

    public org.eclipse.aether.graph.DependencyNode getDependencyGraph()
    {
        DefaultDependencyResolutionResult this;
        org.eclipse.aether.graph.DependencyNode $stack1;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0;

        this := @this: DefaultDependencyResolutionResult;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: org.eclipse.aether.graph.DependencyNode root>;

        return $stack1;
    }

    public void setDependencyGraph(org.eclipse.aether.graph.DependencyNode)
    {
        DefaultDependencyResolutionResult this;
        org.eclipse.aether.graph.DependencyNode root;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0;

        this := @this: DefaultDependencyResolutionResult;

        root := @parameter0: org.eclipse.aether.graph.DependencyNode;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: org.eclipse.aether.graph.DependencyNode root> = root;

        return;
    }

    public java.util.List getDependencies()
    {
        DefaultDependencyResolutionResult this;
        java.util.List $stack1;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0;

        this := @this: DefaultDependencyResolutionResult;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List dependencies>;

        return $stack1;
    }

    public java.util.List getResolvedDependencies()
    {
        DefaultDependencyResolutionResult this;
        java.util.List $stack1;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0;

        this := @this: DefaultDependencyResolutionResult;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List resolvedDependencies>;

        return $stack1;
    }

    public void addResolvedDependency(org.eclipse.aether.graph.Dependency)
    {
        DefaultDependencyResolutionResult this;
        org.eclipse.aether.graph.Dependency dependency;
        java.util.List $stack2, $stack4;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0, $r1;

        this := @this: DefaultDependencyResolutionResult;

        dependency := @parameter0: org.eclipse.aether.graph.Dependency;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack2 = $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List dependencies>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(dependency);

        $r1 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack4 = $r1.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List resolvedDependencies>;

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>(dependency);

        return;
    }

    public java.util.List getUnresolvedDependencies()
    {
        DefaultDependencyResolutionResult this;
        java.util.List $stack1;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0;

        this := @this: DefaultDependencyResolutionResult;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List unresolvedDependencies>;

        return $stack1;
    }

    public java.util.List getCollectionErrors()
    {
        DefaultDependencyResolutionResult this;
        java.util.List $stack1;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0;

        this := @this: DefaultDependencyResolutionResult;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List collectionErrors>;

        return $stack1;
    }

    public void setCollectionErrors(java.util.List)
    {
        java.util.List exceptions;
        DefaultDependencyResolutionResult this;
        java.util.ArrayList $u0;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0, $r1;

        this := @this: DefaultDependencyResolutionResult;

        exceptions := @parameter0: java.util.List;

        if exceptions == null goto label1;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List collectionErrors> = exceptions;

        goto label2;

     label1:
        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $r1.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List collectionErrors> = $u0;

     label2:
        return;
    }

    public java.util.List getResolutionErrors(org.eclipse.aether.graph.Dependency)
    {
        DefaultDependencyResolutionResult this;
        org.eclipse.aether.graph.Dependency dependency;
        java.util.Map $stack3;
        java.lang.Object $stack4;
        java.util.List errors, $stack5;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0;

        this := @this: DefaultDependencyResolutionResult;

        dependency := @parameter0: org.eclipse.aether.graph.Dependency;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack3 = $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.Map resolutionErrors>;

        $stack4 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>(dependency);

        errors = (java.util.List) $stack4;

        if errors == null goto label1;

        $stack5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(errors);

        goto label2;

     label1:
        $stack5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label2:
        return $stack5;
    }

    public void setResolutionErrors(org.eclipse.aether.graph.Dependency, java.util.List)
    {
        DefaultDependencyResolutionResult this;
        org.eclipse.aether.graph.Dependency dependency;
        java.util.List $stack3, $stack5, errors;
        java.util.Map $stack7;
        org.apache.maven.project.DefaultDependencyResolutionResult $r0, $r1, $r2;

        this := @this: DefaultDependencyResolutionResult;

        dependency := @parameter0: org.eclipse.aether.graph.Dependency;

        errors := @parameter1: java.util.List;

        $r0 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack3 = $r0.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List dependencies>;

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>(dependency);

        $r1 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack5 = $r1.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.List unresolvedDependencies>;

        interfaceinvoke $stack5.<java.util.List: boolean add(java.lang.Object)>(dependency);

        $r2 = (org.apache.maven.project.DefaultDependencyResolutionResult) this;

        $stack7 = $r2.<org.apache.maven.project.DefaultDependencyResolutionResult: java.util.Map resolutionErrors>;

        interfaceinvoke $stack7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(dependency, errors);

        return;
    }
}
