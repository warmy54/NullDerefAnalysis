public class DefaultExceptionHandler extends java.lang.Object implements org.apache.maven.exception.ExceptionHandler
{

    public void <init>()
    {
        DefaultExceptionHandler this;

        this := @this: DefaultExceptionHandler;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.maven.exception.ExceptionSummary handleException(java.lang.Throwable)
    {
        DefaultExceptionHandler this;
        java.lang.Throwable exception;
        org.apache.maven.exception.ExceptionSummary $stack2;
        org.apache.maven.exception.DefaultExceptionHandler $r0;

        this := @this: DefaultExceptionHandler;

        exception := @parameter0: java.lang.Throwable;

        $r0 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.exception.DefaultExceptionHandler: org.apache.maven.exception.ExceptionSummary handle(java.lang.String,java.lang.Throwable)>("", exception);

        return $stack2;
    }

    private org.apache.maven.exception.ExceptionSummary handle(java.lang.String, java.lang.Throwable)
    {
        DefaultExceptionHandler this;
        java.lang.Throwable exception;
        java.lang.String reference, message, $stack30, message#4;
        boolean $stack10, $stack17;
        org.apache.maven.project.ProjectBuildingException $stack13;
        java.util.List results;
        java.util.Iterator l6;
        java.lang.StringBuilder $stack19, $stack21, $stack22, $stack24, $u1;
        int $stack20, $stack23;
        java.lang.Object $stack31;
        org.apache.maven.project.ProjectBuildingResult result;
        org.apache.maven.exception.ExceptionSummary child, $u2;
        java.util.ArrayList children, $u0;
        org.apache.maven.exception.DefaultExceptionHandler $r0, $r1, $r2;

        this := @this: DefaultExceptionHandler;

        message := @parameter0: java.lang.String;

        exception := @parameter1: java.lang.Throwable;

        $r0 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        reference = specialinvoke $r0.<org.apache.maven.exception.DefaultExceptionHandler: java.lang.String getReference(java.lang.Throwable)>(exception);

        children = null;

        $stack10 = exception instanceof org.apache.maven.project.ProjectBuildingException;

        if $stack10 == 0 goto label6;

        $stack13 = (org.apache.maven.project.ProjectBuildingException) exception;

        results = virtualinvoke $stack13.<org.apache.maven.project.ProjectBuildingException: java.util.List getResults()>();

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        children = $u0;

        l6 = interfaceinvoke results.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack17 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label3;

        $stack31 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        result = (org.apache.maven.project.ProjectBuildingResult) $stack31;

        $r1 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        child = specialinvoke $r1.<org.apache.maven.exception.DefaultExceptionHandler: org.apache.maven.exception.ExceptionSummary handle(org.apache.maven.project.ProjectBuildingResult)>(result);

        if child == null goto label2;

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>(child);

     label2:
        goto label1;

     label3:
        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The build could not read ");

        $stack20 = interfaceinvoke $u0.<java.util.List: int size()>();

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" project");

        $stack23 = interfaceinvoke $u0.<java.util.List: int size()>();

        if $stack23 != 1 goto label4;

        $stack30 = "";

        goto label5;

     label4:
        $stack30 = "s";

     label5:
        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30);

        message#4 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label7;

     label6:
        $r2 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        message#4 = specialinvoke $r2.<org.apache.maven.exception.DefaultExceptionHandler: java.lang.String getMessage(java.lang.String,java.lang.Throwable)>(message, exception);

     label7:
        $u2 = new org.apache.maven.exception.ExceptionSummary;

        specialinvoke $u2.<org.apache.maven.exception.ExceptionSummary: void <init>(java.lang.Throwable,java.lang.String,java.lang.String,java.util.List)>(exception, message#4, reference, children);

        return $u2;
    }

    private org.apache.maven.exception.ExceptionSummary handle(org.apache.maven.project.ProjectBuildingResult)
    {
        org.apache.maven.project.ProjectBuildingResult result;
        java.util.List $stack7;
        boolean $stack9, $stack10, $stack16;
        java.lang.String $stack12, $stack15, $stack18, $stack47, $stack21, $stack34, message#4;
        java.lang.StringBuilder $stack13, $stack14, $stack19, $stack20, $stack22, $stack23, $stack25, $stack26, $stack28, $stack29, $stack31, $u1, $u2;
        java.io.File $stack24;
        int $stack27, $stack30;
        java.lang.Object $stack46;
        org.apache.maven.model.building.ModelProblem problem;
        DefaultExceptionHandler this;
        org.apache.maven.exception.ExceptionSummary child, $u3;
        java.util.Iterator message;
        java.util.ArrayList $u0;
        org.apache.maven.exception.DefaultExceptionHandler $r0;

        this := @this: DefaultExceptionHandler;

        result := @parameter0: org.apache.maven.project.ProjectBuildingResult;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $stack7 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.util.List getProblems()>();

        message = interfaceinvoke $stack7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke message.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack46 = interfaceinvoke message.<java.util.Iterator: java.lang.Object next()>();

        problem = (org.apache.maven.model.building.ModelProblem) $stack46;

        $stack47 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.lang.String getProjectId()>();

        $r0 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        child = specialinvoke $r0.<org.apache.maven.exception.DefaultExceptionHandler: org.apache.maven.exception.ExceptionSummary handle(org.apache.maven.model.building.ModelProblem,java.lang.String)>(problem, $stack47);

        if child == null goto label2;

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>(child);

     label2:
        goto label1;

     label3:
        $stack10 = interfaceinvoke $u0.<java.util.List: boolean isEmpty()>();

        if $stack10 == 0 goto label4;

        return null;

     label4:
        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack12 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        $stack13 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The project ");

        $stack15 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.lang.String getProjectId()>();

        $stack16 = virtualinvoke $stack15.<java.lang.String: boolean isEmpty()>();

        if $stack16 == 0 goto label5;

        $stack21 = "";

        goto label6;

     label5:
        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack18 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.lang.String getProjectId()>();

        $stack19 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $stack22 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $stack24 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.io.File getPomFile()>();

        $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has ");

        $stack27 = interfaceinvoke $u0.<java.util.List: int size()>();

        $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack27);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error");

        $stack30 = interfaceinvoke $u0.<java.util.List: int size()>();

        if $stack30 != 1 goto label7;

        $stack34 = "";

        goto label8;

     label7:
        $stack34 = "s";

     label8:
        $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        message#4 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>();

        $u3 = new org.apache.maven.exception.ExceptionSummary;

        specialinvoke $u3.<org.apache.maven.exception.ExceptionSummary: void <init>(java.lang.Throwable,java.lang.String,java.lang.String,java.util.List)>(null, message#4, null, $u0);

        return $u3;
    }

    private org.apache.maven.exception.ExceptionSummary handle(org.apache.maven.model.building.ModelProblem, java.lang.String)
    {
        org.apache.maven.model.building.ModelProblem problem;
        org.apache.maven.model.building.ModelProblem$Severity $stack5, $stack6;
        int $stack7;
        java.lang.String projectId, location, message;
        boolean $stack10;
        DefaultExceptionHandler this;
        java.lang.Exception $stack11;
        org.apache.maven.exception.ExceptionSummary $stack12;
        java.lang.StringBuilder $stack14, $stack15, $stack16, $u0;
        java.lang.Enum $r0;
        org.apache.maven.exception.DefaultExceptionHandler $r1;

        this := @this: DefaultExceptionHandler;

        problem := @parameter0: org.apache.maven.model.building.ModelProblem;

        projectId := @parameter1: java.lang.String;

        $stack5 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack6 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: org.apache.maven.model.building.ModelProblem$Severity getSeverity()>();

        $r0 = (java.lang.Enum) $stack6;

        $stack7 = virtualinvoke $stack5.<org.apache.maven.model.building.ModelProblem$Severity: int compareTo(java.lang.Enum)>($r0);

        if $stack7 < 0 goto label2;

        message = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.String getMessage()>();

        location = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String formatLocation(org.apache.maven.model.building.ModelProblem,java.lang.String)>(problem, projectId);

        $stack10 = virtualinvoke location.<java.lang.String: boolean isEmpty()>();

        if $stack10 != 0 goto label1;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(location);

        message = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $stack11 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.Exception getException()>();

        $r1 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.exception.DefaultExceptionHandler: org.apache.maven.exception.ExceptionSummary handle(java.lang.String,java.lang.Throwable)>(message, $stack11);

        return $stack12;

     label2:
        return null;
    }

    private java.lang.String getReference(java.lang.Throwable)
    {
        java.lang.Throwable exception, $stack22, cause2, cause;
        boolean $stack7, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack25, $stack27, $stack33, $stack36, $stack44, $stack46, $stack26, $stack6;
        java.lang.StringBuilder $stack10, $stack11, $u0;
        DefaultExceptionHandler this;
        java.lang.Class $stack20, $stack28, $stack37, $stack39, $stack41, $stack47;
        java.lang.String message, reference;
        org.apache.maven.exception.DefaultExceptionHandler $r0, $r1, $r2;

        this := @this: DefaultExceptionHandler;

        exception := @parameter0: java.lang.Throwable;

        reference = "";

        if exception == null goto label10;

        $stack13 = exception instanceof org.apache.maven.plugin.MojoExecutionException;

        if $stack13 == 0 goto label02;

        $stack41 = class "Lorg/apache/maven/plugin/MojoExecutionException;";

        reference = virtualinvoke $stack41.<java.lang.Class: java.lang.String getSimpleName()>();

        cause = virtualinvoke exception.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $stack44 = cause instanceof java.io.IOException;

        if $stack44 == 0 goto label01;

        cause = virtualinvoke cause.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $stack46 = cause instanceof java.net.ConnectException;

        if $stack46 == 0 goto label01;

        $stack47 = class "Ljava/net/ConnectException;";

        reference = virtualinvoke $stack47.<java.lang.Class: java.lang.String getSimpleName()>();

     label01:
        goto label10;

     label02:
        $stack14 = exception instanceof org.apache.maven.plugin.MojoFailureException;

        if $stack14 == 0 goto label03;

        $stack39 = class "Lorg/apache/maven/plugin/MojoFailureException;";

        reference = virtualinvoke $stack39.<java.lang.Class: java.lang.String getSimpleName()>();

        goto label10;

     label03:
        $stack15 = exception instanceof java.lang.LinkageError;

        if $stack15 == 0 goto label04;

        $stack37 = class "Ljava/lang/LinkageError;";

        reference = virtualinvoke $stack37.<java.lang.Class: java.lang.String getSimpleName()>();

        goto label10;

     label04:
        $stack16 = exception instanceof org.apache.maven.plugin.PluginExecutionException;

        if $stack16 == 0 goto label08;

        cause = virtualinvoke exception.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $stack25 = cause instanceof org.apache.maven.plugin.PluginContainerException;

        if $stack25 == 0 goto label05;

        cause2 = virtualinvoke cause.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $stack33 = cause2 instanceof java.lang.NoClassDefFoundError;

        if $stack33 == 0 goto label05;

        message = virtualinvoke cause2.<java.lang.Throwable: java.lang.String getMessage()>();

        if message == null goto label05;

        $stack36 = virtualinvoke message.<java.lang.String: boolean contains(java.lang.CharSequence)>("org/sonatype/aether/");

        if $stack36 == 0 goto label05;

        reference = "AetherClassNotFound";

     label05:
        $stack26 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isEmpty(java.lang.String)>(reference);

        if $stack26 == 0 goto label06;

        $r0 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        reference = specialinvoke $r0.<org.apache.maven.exception.DefaultExceptionHandler: java.lang.String getReference(java.lang.Throwable)>(cause);

     label06:
        $stack27 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isEmpty(java.lang.String)>(reference);

        if $stack27 == 0 goto label07;

        $stack28 = virtualinvoke exception.<java.lang.Object: java.lang.Class getClass()>();

        reference = virtualinvoke $stack28.<java.lang.Class: java.lang.String getSimpleName()>();

     label07:
        goto label10;

     label08:
        $stack17 = exception instanceof org.apache.maven.lifecycle.LifecycleExecutionException;

        if $stack17 == 0 goto label09;

        $stack22 = virtualinvoke exception.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $r1 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        reference = specialinvoke $r1.<org.apache.maven.exception.DefaultExceptionHandler: java.lang.String getReference(java.lang.Throwable)>($stack22);

        goto label10;

     label09:
        $r2 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.exception.DefaultExceptionHandler: boolean isNoteworthyException(java.lang.Throwable)>(exception);

        if $stack18 == 0 goto label10;

        $stack20 = virtualinvoke exception.<java.lang.Object: java.lang.Class getClass()>();

        reference = virtualinvoke $stack20.<java.lang.Class: java.lang.String getSimpleName()>();

     label10:
        $stack6 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(reference);

        if $stack6 == 0 goto label11;

        $stack7 = virtualinvoke reference.<java.lang.String: boolean startsWith(java.lang.String)>("http:");

        if $stack7 != 0 goto label11;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://cwiki.apache.org/confluence/display/MAVEN/");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(reference);

        reference = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        return reference;
    }

    private boolean isNoteworthyException(java.lang.Throwable)
    {
        java.lang.Throwable exception;
        boolean $stack2, $stack3, $stack6;
        java.lang.Class $stack4;
        java.lang.String $stack5;
        DefaultExceptionHandler this;

        this := @this: DefaultExceptionHandler;

        exception := @parameter0: java.lang.Throwable;

        if exception != null goto label1;

        return 0;

     label1:
        $stack2 = exception instanceof java.lang.Error;

        if $stack2 == 0 goto label2;

        return 1;

     label2:
        $stack3 = exception instanceof java.lang.RuntimeException;

        if $stack3 == 0 goto label3;

        return 0;

     label3:
        $stack4 = virtualinvoke exception.<java.lang.Object: java.lang.Class getClass()>();

        $stack5 = virtualinvoke $stack4.<java.lang.Class: java.lang.String getName()>();

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean startsWith(java.lang.String)>("java");

        if $stack6 == 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    private java.lang.String getMessage(java.lang.String, java.lang.Throwable)
    {
        java.lang.String message, $stack7, $stack23, longMessage, $stack36, $stack39, $stack42, fullMessage, exceptionMessage;
        java.lang.Throwable exception, t;
        boolean $stack9, $stack11, $stack12, $stack17, $stack30, $stack32, $stack33, $stack34, $stack10;
        DefaultExceptionHandler this;
        java.lang.StringBuilder $stack21, $stack22, $stack37, $stack38, $u0, $u1;
        java.lang.Class $stack25;
        org.apache.maven.plugin.AbstractMojoExecutionException $stack28;
        org.apache.maven.exception.DefaultExceptionHandler $r0, $r1, $r2;

        this := @this: DefaultExceptionHandler;

        message := @parameter0: java.lang.String;

        exception := @parameter1: java.lang.Throwable;

        if message == null goto label01;

        $stack42 = message;

        goto label02;

     label01:
        $stack42 = "";

     label02:
        fullMessage = $stack42;

        t = exception;

     label03:
        if t == null goto label10;

        exceptionMessage = virtualinvoke t.<java.lang.Throwable: java.lang.String getMessage()>();

        $stack9 = t instanceof org.apache.maven.plugin.AbstractMojoExecutionException;

        if $stack9 == 0 goto label06;

        $stack28 = (org.apache.maven.plugin.AbstractMojoExecutionException) t;

        longMessage = virtualinvoke $stack28.<org.apache.maven.plugin.AbstractMojoExecutionException: java.lang.String getLongMessage()>();

        $stack30 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(longMessage);

        if $stack30 == 0 goto label06;

        $stack32 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isEmpty(java.lang.String)>(exceptionMessage);

        if $stack32 != 0 goto label04;

        $stack33 = virtualinvoke longMessage.<java.lang.String: boolean contains(java.lang.CharSequence)>(exceptionMessage);

        if $stack33 == 0 goto label05;

     label04:
        exceptionMessage = longMessage;

        goto label06;

     label05:
        $stack34 = virtualinvoke exceptionMessage.<java.lang.String: boolean contains(java.lang.CharSequence)>(longMessage);

        if $stack34 != 0 goto label06;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack36 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        $stack37 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack36);

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(longMessage);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        exceptionMessage = specialinvoke $r0.<org.apache.maven.exception.DefaultExceptionHandler: java.lang.String join(java.lang.String,java.lang.String)>(exceptionMessage, $stack39);

     label06:
        $stack10 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isEmpty(java.lang.String)>(exceptionMessage);

        if $stack10 == 0 goto label07;

        $stack25 = virtualinvoke t.<java.lang.Object: java.lang.Class getClass()>();

        exceptionMessage = virtualinvoke $stack25.<java.lang.Class: java.lang.String getSimpleName()>();

     label07:
        $stack11 = t instanceof java.net.UnknownHostException;

        if $stack11 == 0 goto label08;

        $stack17 = virtualinvoke fullMessage.<java.lang.String: boolean contains(java.lang.CharSequence)>("host");

        if $stack17 != 0 goto label08;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown host ");

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(exceptionMessage);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        fullMessage = specialinvoke $r1.<org.apache.maven.exception.DefaultExceptionHandler: java.lang.String join(java.lang.String,java.lang.String)>(fullMessage, $stack23);

        goto label09;

     label08:
        $stack12 = virtualinvoke fullMessage.<java.lang.String: boolean contains(java.lang.CharSequence)>(exceptionMessage);

        if $stack12 != 0 goto label09;

        $r2 = (org.apache.maven.exception.DefaultExceptionHandler) this;

        fullMessage = specialinvoke $r2.<org.apache.maven.exception.DefaultExceptionHandler: java.lang.String join(java.lang.String,java.lang.String)>(fullMessage, exceptionMessage);

     label09:
        t = virtualinvoke t.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label03;

     label10:
        $stack7 = virtualinvoke fullMessage.<java.lang.String: java.lang.String trim()>();

        return $stack7;
    }

    private java.lang.String join(java.lang.String, java.lang.String)
    {
        java.lang.String message1, message2, message;
        boolean $stack4, $stack5, $stack6, $stack12, $stack19, $stack22;
        java.lang.StringBuilder $stack23, $stack24, $stack25, $stack13, $stack14, $stack15, $stack7, $stack8, $stack9;
        DefaultExceptionHandler this;

        this := @this: DefaultExceptionHandler;

        message1 := @parameter0: java.lang.String;

        message2 := @parameter1: java.lang.String;

        message = "";

        $stack4 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(message1);

        if $stack4 == 0 goto label1;

        message = virtualinvoke message1.<java.lang.String: java.lang.String trim()>();

     label1:
        $stack5 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(message2);

        if $stack5 == 0 goto label5;

        $stack6 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(message);

        if $stack6 == 0 goto label4;

        $stack12 = virtualinvoke message.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $stack12 != 0 goto label2;

        $stack19 = virtualinvoke message.<java.lang.String: boolean endsWith(java.lang.String)>("!");

        if $stack19 != 0 goto label2;

        $stack22 = virtualinvoke message.<java.lang.String: boolean endsWith(java.lang.String)>(":");

        if $stack22 == 0 goto label3;

     label2:
        $stack13 = new java.lang.StringBuilder;

        specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        message = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $stack23 = new java.lang.StringBuilder;

        specialinvoke $stack23.<java.lang.StringBuilder: void <init>()>();

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        message = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message2);

        message = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

     label5:
        return message;
    }
}
