public class DefaultExceptionHandlerTest extends java.lang.Object
{

    public void <init>()
    {
        DefaultExceptionHandlerTest this;

        this := @this: DefaultExceptionHandlerTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testJdk7ipv6()
    {
        org.apache.maven.exception.ExceptionSummary exceptionSummary;
        java.lang.String $stack12;
        DefaultExceptionHandlerTest this;
        java.net.ConnectException $u0;
        java.io.IOException $u1;
        org.apache.maven.plugin.MojoExecutionException $u2;
        org.apache.maven.exception.DefaultExceptionHandler $u3;
        org.apache.maven.exception.ExceptionHandler $r0;
        java.lang.Throwable $r1;

        this := @this: DefaultExceptionHandlerTest;

        $u0 = new java.net.ConnectException;

        specialinvoke $u0.<java.net.ConnectException: void <init>(java.lang.String)>("Connection refused: connect");

        $u1 = new java.io.IOException;

        specialinvoke $u1.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to establish loopback connection", $u0);

        $u2 = new org.apache.maven.plugin.MojoExecutionException;

        specialinvoke $u2.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String,java.lang.Exception)>("Error executing Jetty: Unable to establish loopback connection", $u1);

        $u3 = new org.apache.maven.exception.DefaultExceptionHandler;

        specialinvoke $u3.<org.apache.maven.exception.DefaultExceptionHandler: void <init>()>();

        $r0 = (org.apache.maven.exception.ExceptionHandler) $u3;

        $r1 = (java.lang.Throwable) $u2;

        exceptionSummary = interfaceinvoke $r0.<org.apache.maven.exception.ExceptionHandler: org.apache.maven.exception.ExceptionSummary handleException(java.lang.Throwable)>($r1);

        $stack12 = virtualinvoke exceptionSummary.<org.apache.maven.exception.ExceptionSummary: java.lang.String getReference()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("http://cwiki.apache.org/confluence/display/MAVEN/ConnectException", $stack12);

        return;
    }

    public void testHandleExceptionAetherClassNotFound()
    {
        org.apache.maven.exception.ExceptionSummary summary;
        java.lang.String $stack20;
        DefaultExceptionHandlerTest this;
        java.lang.NoClassDefFoundError $u0;
        org.apache.maven.model.Plugin $u1;
        org.apache.maven.plugin.PluginContainerException $u2;
        org.apache.maven.plugin.descriptor.PluginDescriptor $u3;
        org.apache.maven.plugin.descriptor.MojoDescriptor $u4;
        org.apache.maven.plugin.MojoExecution $u5;
        org.apache.maven.plugin.PluginExecutionException $u6;
        org.apache.maven.exception.DefaultExceptionHandler $u7;
        java.lang.Exception $r0;
        java.lang.Throwable $r1;

        this := @this: DefaultExceptionHandlerTest;

        $u0 = new java.lang.NoClassDefFoundError;

        specialinvoke $u0.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>("org/sonatype/aether/RepositorySystem");

        $u1 = new org.apache.maven.model.Plugin;

        specialinvoke $u1.<org.apache.maven.model.Plugin: void <init>()>();

        $u2 = new org.apache.maven.plugin.PluginContainerException;

        specialinvoke $u2.<org.apache.maven.plugin.PluginContainerException: void <init>(org.apache.maven.model.Plugin,org.codehaus.plexus.classworlds.realm.ClassRealm,java.lang.String,java.lang.Throwable)>($u1, null, null, $u0);

        $u3 = new org.apache.maven.plugin.descriptor.PluginDescriptor;

        specialinvoke $u3.<org.apache.maven.plugin.descriptor.PluginDescriptor: void <init>()>();

        $u4 = new org.apache.maven.plugin.descriptor.MojoDescriptor;

        specialinvoke $u4.<org.apache.maven.plugin.descriptor.MojoDescriptor: void <init>()>();

        virtualinvoke $u4.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setPluginDescriptor(org.apache.maven.plugin.descriptor.PluginDescriptor)>($u3);

        $u5 = new org.apache.maven.plugin.MojoExecution;

        specialinvoke $u5.<org.apache.maven.plugin.MojoExecution: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor)>($u4);

        $u6 = new org.apache.maven.plugin.PluginExecutionException;

        $r0 = (java.lang.Exception) $u2;

        specialinvoke $u6.<org.apache.maven.plugin.PluginExecutionException: void <init>(org.apache.maven.plugin.MojoExecution,org.apache.maven.project.MavenProject,java.lang.Exception)>($u5, null, $r0);

        $u7 = new org.apache.maven.exception.DefaultExceptionHandler;

        specialinvoke $u7.<org.apache.maven.exception.DefaultExceptionHandler: void <init>()>();

        $r1 = (java.lang.Throwable) $u6;

        summary = virtualinvoke $u7.<org.apache.maven.exception.DefaultExceptionHandler: org.apache.maven.exception.ExceptionSummary handleException(java.lang.Throwable)>($r1);

        $stack20 = virtualinvoke summary.<org.apache.maven.exception.ExceptionSummary: java.lang.String getReference()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("http://cwiki.apache.org/confluence/display/MAVEN/AetherClassNotFound", $stack20);

        return;
    }

    public void testHandleExceptionNoClassDefFoundErrorNull()
    {
        org.apache.maven.exception.ExceptionSummary summary;
        java.lang.String $stack20;
        DefaultExceptionHandlerTest this;
        java.lang.NoClassDefFoundError $u0;
        org.apache.maven.model.Plugin $u1;
        org.apache.maven.plugin.PluginContainerException $u2;
        org.apache.maven.plugin.descriptor.PluginDescriptor $u3;
        org.apache.maven.plugin.descriptor.MojoDescriptor $u4;
        org.apache.maven.plugin.MojoExecution $u5;
        org.apache.maven.plugin.PluginExecutionException $u6;
        org.apache.maven.exception.DefaultExceptionHandler $u7;
        java.lang.Exception $r0;
        java.lang.Throwable $r1;

        this := @this: DefaultExceptionHandlerTest;

        $u0 = new java.lang.NoClassDefFoundError;

        specialinvoke $u0.<java.lang.NoClassDefFoundError: void <init>()>();

        $u1 = new org.apache.maven.model.Plugin;

        specialinvoke $u1.<org.apache.maven.model.Plugin: void <init>()>();

        $u2 = new org.apache.maven.plugin.PluginContainerException;

        specialinvoke $u2.<org.apache.maven.plugin.PluginContainerException: void <init>(org.apache.maven.model.Plugin,org.codehaus.plexus.classworlds.realm.ClassRealm,java.lang.String,java.lang.Throwable)>($u1, null, null, $u0);

        $u3 = new org.apache.maven.plugin.descriptor.PluginDescriptor;

        specialinvoke $u3.<org.apache.maven.plugin.descriptor.PluginDescriptor: void <init>()>();

        $u4 = new org.apache.maven.plugin.descriptor.MojoDescriptor;

        specialinvoke $u4.<org.apache.maven.plugin.descriptor.MojoDescriptor: void <init>()>();

        virtualinvoke $u4.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setPluginDescriptor(org.apache.maven.plugin.descriptor.PluginDescriptor)>($u3);

        $u5 = new org.apache.maven.plugin.MojoExecution;

        specialinvoke $u5.<org.apache.maven.plugin.MojoExecution: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor)>($u4);

        $u6 = new org.apache.maven.plugin.PluginExecutionException;

        $r0 = (java.lang.Exception) $u2;

        specialinvoke $u6.<org.apache.maven.plugin.PluginExecutionException: void <init>(org.apache.maven.plugin.MojoExecution,org.apache.maven.project.MavenProject,java.lang.Exception)>($u5, null, $r0);

        $u7 = new org.apache.maven.exception.DefaultExceptionHandler;

        specialinvoke $u7.<org.apache.maven.exception.DefaultExceptionHandler: void <init>()>();

        $r1 = (java.lang.Throwable) $u6;

        summary = virtualinvoke $u7.<org.apache.maven.exception.DefaultExceptionHandler: org.apache.maven.exception.ExceptionSummary handleException(java.lang.Throwable)>($r1);

        $stack20 = virtualinvoke summary.<org.apache.maven.exception.ExceptionSummary: java.lang.String getReference()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException", $stack20);

        return;
    }
}
