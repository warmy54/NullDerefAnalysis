public class DefaultGraphConflictResolverTest extends java.lang.Object
{
    org.apache.maven.repository.metadata.GraphConflictResolver resolver;
    org.apache.maven.repository.metadata.MetadataGraph graph;
    org.apache.maven.repository.metadata.MetadataGraphVertex v1;
    org.apache.maven.repository.metadata.MetadataGraphVertex v2;
    org.apache.maven.repository.metadata.MetadataGraphVertex v3;
    org.apache.maven.repository.metadata.MetadataGraphVertex v4;

    public void <init>()
    {
        DefaultGraphConflictResolverTest this;

        this := @this: DefaultGraphConflictResolverTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        DefaultGraphConflictResolverTest this;
        org.apache.maven.repository.metadata.MetadataGraph $stack3, $stack6, $stack8, $stack11, $stack14, $stack17, $stack22, $stack27, $stack32, $stack38, $stack44, $u0;
        org.apache.maven.repository.metadata.MetadataGraphVertex $stack4, $stack5, $stack9, $stack12, $stack15, $stack18, $stack19, $stack23, $stack24, $stack28, $stack29, $stack33, $stack34, $stack39, $stack40, $stack45, $stack46;
        org.apache.maven.artifact.ArtifactScopeEnum $stack37, $stack43;
        org.apache.maven.repository.metadata.ArtifactMetadata $u1, $u2, $u3, $u4;
        org.apache.maven.repository.metadata.MetadataGraphEdge $u5, $u6, $u7, $u8, $u9, $u10;
        org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        this := @this: DefaultGraphConflictResolverTest;

        $u0 = new org.apache.maven.repository.metadata.MetadataGraph;

        specialinvoke $u0.<org.apache.maven.repository.metadata.MetadataGraph: void <init>(int,int)>(4, 3);

        $r0 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $r0.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph> = $u0;

        $r1 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack3 = $r1.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $u1 = new org.apache.maven.repository.metadata.ArtifactMetadata;

        specialinvoke $u1.<org.apache.maven.repository.metadata.ArtifactMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String)>("g", "a1", "1.0");

        $stack4 = virtualinvoke $stack3.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraphVertex addVertex(org.apache.maven.repository.metadata.ArtifactMetadata)>($u1);

        $r2 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $r2.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1> = $stack4;

        $r3 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack6 = $r3.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $r4 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack5 = $r4.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        virtualinvoke $stack6.<org.apache.maven.repository.metadata.MetadataGraph: void setEntry(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack5);

        $r5 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack8 = $r5.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $u2 = new org.apache.maven.repository.metadata.ArtifactMetadata;

        specialinvoke $u2.<org.apache.maven.repository.metadata.ArtifactMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String)>("g", "a2", "1.0");

        $stack9 = virtualinvoke $stack8.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraphVertex addVertex(org.apache.maven.repository.metadata.ArtifactMetadata)>($u2);

        $r6 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $r6.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v2> = $stack9;

        $r7 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack11 = $r7.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $u3 = new org.apache.maven.repository.metadata.ArtifactMetadata;

        specialinvoke $u3.<org.apache.maven.repository.metadata.ArtifactMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String)>("g", "a3", "1.0");

        $stack12 = virtualinvoke $stack11.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraphVertex addVertex(org.apache.maven.repository.metadata.ArtifactMetadata)>($u3);

        $r8 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $r8.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3> = $stack12;

        $r9 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack14 = $r9.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $u4 = new org.apache.maven.repository.metadata.ArtifactMetadata;

        specialinvoke $u4.<org.apache.maven.repository.metadata.ArtifactMetadata: void <init>(java.lang.String,java.lang.String,java.lang.String)>("g", "a4", "1.0");

        $stack15 = virtualinvoke $stack14.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraphVertex addVertex(org.apache.maven.repository.metadata.ArtifactMetadata)>($u4);

        $r10 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $r10.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v4> = $stack15;

        $r11 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack17 = $r11.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $r12 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack18 = $r12.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $r13 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack19 = $r13.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v2>;

        $u5 = new org.apache.maven.repository.metadata.MetadataGraphEdge;

        specialinvoke $u5.<org.apache.maven.repository.metadata.MetadataGraphEdge: void <init>(java.lang.String,boolean,org.apache.maven.artifact.ArtifactScopeEnum,java.lang.String,int,int)>("1.1", 1, null, null, 2, 1);

        virtualinvoke $stack17.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraph addEdge(org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphEdge)>($stack18, $stack19, $u5);

        $r14 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack22 = $r14.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $r15 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack23 = $r15.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $r16 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack24 = $r16.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v2>;

        $u6 = new org.apache.maven.repository.metadata.MetadataGraphEdge;

        specialinvoke $u6.<org.apache.maven.repository.metadata.MetadataGraphEdge: void <init>(java.lang.String,boolean,org.apache.maven.artifact.ArtifactScopeEnum,java.lang.String,int,int)>("1.2", 1, null, null, 2, 2);

        virtualinvoke $stack22.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraph addEdge(org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphEdge)>($stack23, $stack24, $u6);

        $r17 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack27 = $r17.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $r18 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack28 = $r18.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $r19 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack29 = $r19.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $u7 = new org.apache.maven.repository.metadata.MetadataGraphEdge;

        specialinvoke $u7.<org.apache.maven.repository.metadata.MetadataGraphEdge: void <init>(java.lang.String,boolean,org.apache.maven.artifact.ArtifactScopeEnum,java.lang.String,int,int)>("1.1", 1, null, null, 2, 1);

        virtualinvoke $stack27.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraph addEdge(org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphEdge)>($stack28, $stack29, $u7);

        $r20 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack32 = $r20.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $r21 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack33 = $r21.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $r22 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack34 = $r22.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $u8 = new org.apache.maven.repository.metadata.MetadataGraphEdge;

        specialinvoke $u8.<org.apache.maven.repository.metadata.MetadataGraphEdge: void <init>(java.lang.String,boolean,org.apache.maven.artifact.ArtifactScopeEnum,java.lang.String,int,int)>("1.2", 1, null, null, 4, 2);

        virtualinvoke $stack32.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraph addEdge(org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphEdge)>($stack33, $stack34, $u8);

        $r23 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack38 = $r23.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $r24 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack39 = $r24.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $r25 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack40 = $r25.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v4>;

        $u9 = new org.apache.maven.repository.metadata.MetadataGraphEdge;

        $stack37 = <org.apache.maven.artifact.ArtifactScopeEnum: org.apache.maven.artifact.ArtifactScopeEnum runtime>;

        specialinvoke $u9.<org.apache.maven.repository.metadata.MetadataGraphEdge: void <init>(java.lang.String,boolean,org.apache.maven.artifact.ArtifactScopeEnum,java.lang.String,int,int)>("1.1", 1, $stack37, null, 2, 1);

        virtualinvoke $stack38.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraph addEdge(org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphEdge)>($stack39, $stack40, $u9);

        $r26 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack44 = $r26.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $r27 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack45 = $r27.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $r28 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack46 = $r28.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v4>;

        $u10 = new org.apache.maven.repository.metadata.MetadataGraphEdge;

        $stack43 = <org.apache.maven.artifact.ArtifactScopeEnum: org.apache.maven.artifact.ArtifactScopeEnum provided>;

        specialinvoke $u10.<org.apache.maven.repository.metadata.MetadataGraphEdge: void <init>(java.lang.String,boolean,org.apache.maven.artifact.ArtifactScopeEnum,java.lang.String,int,int)>("1.2", 1, $stack43, null, 2, 2);

        virtualinvoke $stack44.<org.apache.maven.repository.metadata.MetadataGraph: org.apache.maven.repository.metadata.MetadataGraph addEdge(org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphVertex,org.apache.maven.repository.metadata.MetadataGraphEdge)>($stack45, $stack46, $u10);

        return;
    }

    public void testCompileResolution() throws java.lang.Exception
    {
        DefaultGraphConflictResolverTest this;
        org.apache.maven.artifact.ArtifactScopeEnum $stack2;
        org.apache.maven.repository.metadata.MetadataGraph $stack3, res;
        org.apache.maven.repository.metadata.GraphConflictResolver $stack4;
        java.util.TreeSet $stack6, $stack10;
        org.apache.maven.repository.metadata.MetadataGraphVertex $stack7, $stack12, $stack16, $stack20, $stack26, $stack30, $stack36, $stack40;
        java.util.List $stack8, $stack14, $stack18, $stack22, $stack28, $stack32, $stack38, $stack42;
        int $stack11, $stack15, $stack19, $stack29, $stack39;
        java.lang.Object $stack23, $stack33, $stack43;
        org.apache.maven.repository.metadata.MetadataGraphEdge $stack24, $stack34, $stack44;
        java.lang.String $stack25, $stack35, $stack45;
        org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: DefaultGraphConflictResolverTest;

        $r0 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack4 = $r0.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.GraphConflictResolver resolver>;

        $r1 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack3 = $r1.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $stack2 = <org.apache.maven.artifact.ArtifactScopeEnum: org.apache.maven.artifact.ArtifactScopeEnum compile>;

        res = interfaceinvoke $stack4.<org.apache.maven.repository.metadata.GraphConflictResolver: org.apache.maven.repository.metadata.MetadataGraph resolveConflicts(org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.artifact.ArtifactScopeEnum)>($stack3, $stack2);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>(res, "null graph after resolver");

        $stack6 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.TreeSet getVertices()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>($stack6, "no vertices in the resulting graph after resolver");

        $r2 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack7 = $r2.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $stack8 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getExcidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack7);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>($stack8, "no edges in the resulting graph after resolver");

        $stack10 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.TreeSet getVertices()>();

        $stack11 = virtualinvoke $stack10.<java.util.TreeSet: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(4, $stack11, "wrong # of vertices in the resulting graph after resolver");

        $r3 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack12 = $r3.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $stack14 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getExcidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack12);

        $stack15 = interfaceinvoke $stack14.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(2, $stack15, "wrong # of excident edges in the resulting graph entry after resolver");

        $r4 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack16 = $r4.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v2>;

        $stack18 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack16);

        $stack19 = interfaceinvoke $stack18.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(1, $stack19, "wrong # of v2 incident edges in the resulting graph after resolver");

        $r5 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack20 = $r5.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v2>;

        $stack22 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack20);

        $stack23 = interfaceinvoke $stack22.<java.util.List: java.lang.Object get(int)>(0);

        $stack24 = (org.apache.maven.repository.metadata.MetadataGraphEdge) $stack23;

        $stack25 = virtualinvoke $stack24.<org.apache.maven.repository.metadata.MetadataGraphEdge: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.2", $stack25, "wrong edge v1-v2 in the resulting graph after resolver");

        $r6 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack26 = $r6.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $stack28 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack26);

        $stack29 = interfaceinvoke $stack28.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(1, $stack29, "wrong # of edges v1-v3 in the resulting graph after resolver");

        $r7 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack30 = $r7.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $stack32 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack30);

        $stack33 = interfaceinvoke $stack32.<java.util.List: java.lang.Object get(int)>(0);

        $stack34 = (org.apache.maven.repository.metadata.MetadataGraphEdge) $stack33;

        $stack35 = virtualinvoke $stack34.<org.apache.maven.repository.metadata.MetadataGraphEdge: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.1", $stack35, "wrong edge v1-v3 in the resulting graph after resolver");

        $r8 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack36 = $r8.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v4>;

        $stack38 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack36);

        $stack39 = interfaceinvoke $stack38.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(1, $stack39, "wrong # of edges v3-v4 in the resulting graph after resolver");

        $r9 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack40 = $r9.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v4>;

        $stack42 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack40);

        $stack43 = interfaceinvoke $stack42.<java.util.List: java.lang.Object get(int)>(0);

        $stack44 = (org.apache.maven.repository.metadata.MetadataGraphEdge) $stack43;

        $stack45 = virtualinvoke $stack44.<org.apache.maven.repository.metadata.MetadataGraphEdge: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.2", $stack45, "wrong edge v3-v4 in the resulting graph after resolver");

        return;
    }

    public void testRuntimeResolution() throws java.lang.Exception
    {
        DefaultGraphConflictResolverTest this;
        org.apache.maven.artifact.ArtifactScopeEnum $stack2;
        org.apache.maven.repository.metadata.MetadataGraph $stack3, res;
        org.apache.maven.repository.metadata.GraphConflictResolver $stack4;
        java.util.TreeSet $stack6, $stack10;
        org.apache.maven.repository.metadata.MetadataGraphVertex $stack7, $stack12, $stack16, $stack20, $stack26, $stack30, $stack36, $stack40;
        java.util.List $stack8, $stack14, $stack18, $stack22, $stack28, $stack32, $stack38, $stack42;
        int $stack11, $stack15, $stack19, $stack29, $stack39;
        java.lang.Object $stack23, $stack33, $stack43;
        org.apache.maven.repository.metadata.MetadataGraphEdge $stack24, $stack34, $stack44;
        java.lang.String $stack25, $stack35, $stack45;
        org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: DefaultGraphConflictResolverTest;

        $r0 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack4 = $r0.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.GraphConflictResolver resolver>;

        $r1 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack3 = $r1.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $stack2 = <org.apache.maven.artifact.ArtifactScopeEnum: org.apache.maven.artifact.ArtifactScopeEnum runtime>;

        res = interfaceinvoke $stack4.<org.apache.maven.repository.metadata.GraphConflictResolver: org.apache.maven.repository.metadata.MetadataGraph resolveConflicts(org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.artifact.ArtifactScopeEnum)>($stack3, $stack2);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>(res, "null graph after resolver");

        $stack6 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.TreeSet getVertices()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>($stack6, "no vertices in the resulting graph after resolver");

        $r2 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack7 = $r2.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $stack8 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getExcidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack7);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>($stack8, "no edges in the resulting graph after resolver");

        $stack10 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.TreeSet getVertices()>();

        $stack11 = virtualinvoke $stack10.<java.util.TreeSet: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(4, $stack11, "wrong # of vertices in the resulting graph after resolver");

        $r3 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack12 = $r3.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $stack14 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getExcidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack12);

        $stack15 = interfaceinvoke $stack14.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(2, $stack15, "wrong # of excident edges in the resulting graph entry after resolver");

        $r4 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack16 = $r4.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v2>;

        $stack18 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack16);

        $stack19 = interfaceinvoke $stack18.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(1, $stack19, "wrong # of v2 incident edges in the resulting graph after resolver");

        $r5 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack20 = $r5.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v2>;

        $stack22 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack20);

        $stack23 = interfaceinvoke $stack22.<java.util.List: java.lang.Object get(int)>(0);

        $stack24 = (org.apache.maven.repository.metadata.MetadataGraphEdge) $stack23;

        $stack25 = virtualinvoke $stack24.<org.apache.maven.repository.metadata.MetadataGraphEdge: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.2", $stack25, "wrong edge v1-v2 in the resulting graph after resolver");

        $r6 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack26 = $r6.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $stack28 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack26);

        $stack29 = interfaceinvoke $stack28.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(1, $stack29, "wrong # of edges v1-v3 in the resulting graph after resolver");

        $r7 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack30 = $r7.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $stack32 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack30);

        $stack33 = interfaceinvoke $stack32.<java.util.List: java.lang.Object get(int)>(0);

        $stack34 = (org.apache.maven.repository.metadata.MetadataGraphEdge) $stack33;

        $stack35 = virtualinvoke $stack34.<org.apache.maven.repository.metadata.MetadataGraphEdge: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.1", $stack35, "wrong edge v1-v3 in the resulting graph after resolver");

        $r8 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack36 = $r8.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v4>;

        $stack38 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack36);

        $stack39 = interfaceinvoke $stack38.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(1, $stack39, "wrong # of edges v3-v4 in the resulting graph after resolver");

        $r9 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack40 = $r9.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v4>;

        $stack42 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack40);

        $stack43 = interfaceinvoke $stack42.<java.util.List: java.lang.Object get(int)>(0);

        $stack44 = (org.apache.maven.repository.metadata.MetadataGraphEdge) $stack43;

        $stack45 = virtualinvoke $stack44.<org.apache.maven.repository.metadata.MetadataGraphEdge: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.1", $stack45, "wrong edge v3-v4 in the resulting graph after resolver");

        return;
    }

    public void testTestResolution() throws java.lang.Exception
    {
        DefaultGraphConflictResolverTest this;
        org.apache.maven.artifact.ArtifactScopeEnum $stack2;
        org.apache.maven.repository.metadata.MetadataGraph $stack3, res;
        org.apache.maven.repository.metadata.GraphConflictResolver $stack4;
        java.util.TreeSet $stack6, $stack10;
        org.apache.maven.repository.metadata.MetadataGraphVertex $stack7, $stack12, $stack16, $stack20, $stack26, $stack30, $stack36, $stack40;
        java.util.List $stack8, $stack14, $stack18, $stack22, $stack28, $stack32, $stack38, $stack42;
        int $stack11, $stack15, $stack19, $stack29, $stack39;
        java.lang.Object $stack23, $stack33, $stack43;
        org.apache.maven.repository.metadata.MetadataGraphEdge $stack24, $stack34, $stack44;
        java.lang.String $stack25, $stack35, $stack45;
        org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: DefaultGraphConflictResolverTest;

        $r0 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack4 = $r0.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.GraphConflictResolver resolver>;

        $r1 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack3 = $r1.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraph graph>;

        $stack2 = <org.apache.maven.artifact.ArtifactScopeEnum: org.apache.maven.artifact.ArtifactScopeEnum test>;

        res = interfaceinvoke $stack4.<org.apache.maven.repository.metadata.GraphConflictResolver: org.apache.maven.repository.metadata.MetadataGraph resolveConflicts(org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.artifact.ArtifactScopeEnum)>($stack3, $stack2);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>(res, "null graph after resolver");

        $stack6 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.TreeSet getVertices()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>($stack6, "no vertices in the resulting graph after resolver");

        $r2 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack7 = $r2.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $stack8 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getExcidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack7);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object,java.lang.String)>($stack8, "no edges in the resulting graph after resolver");

        $stack10 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.TreeSet getVertices()>();

        $stack11 = virtualinvoke $stack10.<java.util.TreeSet: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(4, $stack11, "wrong # of vertices in the resulting graph after resolver");

        $r3 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack12 = $r3.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v1>;

        $stack14 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getExcidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack12);

        $stack15 = interfaceinvoke $stack14.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(2, $stack15, "wrong # of excident edges in the resulting graph entry after resolver");

        $r4 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack16 = $r4.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v2>;

        $stack18 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack16);

        $stack19 = interfaceinvoke $stack18.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(1, $stack19, "wrong # of v2 incident edges in the resulting graph after resolver");

        $r5 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack20 = $r5.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v2>;

        $stack22 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack20);

        $stack23 = interfaceinvoke $stack22.<java.util.List: java.lang.Object get(int)>(0);

        $stack24 = (org.apache.maven.repository.metadata.MetadataGraphEdge) $stack23;

        $stack25 = virtualinvoke $stack24.<org.apache.maven.repository.metadata.MetadataGraphEdge: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.2", $stack25, "wrong edge v1-v2 in the resulting graph after resolver");

        $r6 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack26 = $r6.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $stack28 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack26);

        $stack29 = interfaceinvoke $stack28.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(1, $stack29, "wrong # of edges v1-v3 in the resulting graph after resolver");

        $r7 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack30 = $r7.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v3>;

        $stack32 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack30);

        $stack33 = interfaceinvoke $stack32.<java.util.List: java.lang.Object get(int)>(0);

        $stack34 = (org.apache.maven.repository.metadata.MetadataGraphEdge) $stack33;

        $stack35 = virtualinvoke $stack34.<org.apache.maven.repository.metadata.MetadataGraphEdge: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.1", $stack35, "wrong edge v1-v3 in the resulting graph after resolver");

        $r8 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack36 = $r8.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v4>;

        $stack38 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack36);

        $stack39 = interfaceinvoke $stack38.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int,java.lang.String)>(1, $stack39, "wrong # of edges v3-v4 in the resulting graph after resolver");

        $r9 = (org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest) this;

        $stack40 = $r9.<org.apache.maven.repository.metadata.DefaultGraphConflictResolverTest: org.apache.maven.repository.metadata.MetadataGraphVertex v4>;

        $stack42 = virtualinvoke res.<org.apache.maven.repository.metadata.MetadataGraph: java.util.List getIncidentEdges(org.apache.maven.repository.metadata.MetadataGraphVertex)>($stack40);

        $stack43 = interfaceinvoke $stack42.<java.util.List: java.lang.Object get(int)>(0);

        $stack44 = (org.apache.maven.repository.metadata.MetadataGraphEdge) $stack43;

        $stack45 = virtualinvoke $stack44.<org.apache.maven.repository.metadata.MetadataGraphEdge: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object,java.lang.String)>("1.2", $stack45, "wrong edge v3-v4 in the resulting graph after resolver");

        return;
    }
}
