public class DefaultLifecycleExecutor extends java.lang.Object implements org.apache.maven.lifecycle.LifecycleExecutor
{
    private org.apache.maven.lifecycle.LifeCyclePluginAnalyzer lifeCyclePluginAnalyzer;
    private org.apache.maven.lifecycle.DefaultLifecycles defaultLifeCycles;
    private org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator lifecycleTaskSegmentCalculator;
    private org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator lifecycleExecutionPlanCalculator;
    private org.apache.maven.lifecycle.internal.MojoExecutor mojoExecutor;
    private org.apache.maven.lifecycle.internal.LifecycleStarter lifecycleStarter;
    private org.apache.maven.lifecycle.internal.MojoDescriptorCreator mojoDescriptorCreator;

    public void <init>()
    {
        DefaultLifecycleExecutor this;

        this := @this: DefaultLifecycleExecutor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(org.apache.maven.execution.MavenSession)
    {
        DefaultLifecycleExecutor this;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.lifecycle.internal.LifecycleStarter $stack2;
        org.apache.maven.lifecycle.DefaultLifecycleExecutor $r0;

        this := @this: DefaultLifecycleExecutor;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        $r0 = (org.apache.maven.lifecycle.DefaultLifecycleExecutor) this;

        $stack2 = $r0.<org.apache.maven.lifecycle.DefaultLifecycleExecutor: org.apache.maven.lifecycle.internal.LifecycleStarter lifecycleStarter>;

        virtualinvoke $stack2.<org.apache.maven.lifecycle.internal.LifecycleStarter: void execute(org.apache.maven.execution.MavenSession)>(session);

        return;
    }

    public java.util.Set getPluginsBoundByDefaultToAllLifecycles(java.lang.String)
    {
        DefaultLifecycleExecutor this;
        java.lang.String packaging;
        org.apache.maven.lifecycle.LifeCyclePluginAnalyzer $stack2;
        java.util.Set $stack3;
        org.apache.maven.lifecycle.DefaultLifecycleExecutor $r0;

        this := @this: DefaultLifecycleExecutor;

        packaging := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.lifecycle.DefaultLifecycleExecutor) this;

        $stack2 = $r0.<org.apache.maven.lifecycle.DefaultLifecycleExecutor: org.apache.maven.lifecycle.LifeCyclePluginAnalyzer lifeCyclePluginAnalyzer>;

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.lifecycle.LifeCyclePluginAnalyzer: java.util.Set getPluginsBoundByDefaultToAllLifecycles(java.lang.String)>(packaging);

        return $stack3;
    }

    public transient org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession, boolean, java.lang.String[]) throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.PluginManagerException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        DefaultLifecycleExecutor this;
        org.apache.maven.execution.MavenSession session;
        java.lang.String[] tasks;
        org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator $stack8;
        java.util.List $stack9, taskSegments, $stack16, $stack19, $stack20;
        java.util.Iterator l6;
        boolean $stack13, setup;
        org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator $stack14;
        org.apache.maven.project.MavenProject $stack15;
        org.apache.maven.lifecycle.MavenExecutionPlan $stack17;
        java.lang.Object $stack18;
        org.apache.maven.lifecycle.internal.TaskSegment taskSegment, $u0;
        org.apache.maven.lifecycle.DefaultLifecycleExecutor $r0, $r1;

        this := @this: DefaultLifecycleExecutor;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        setup := @parameter1: boolean;

        tasks := @parameter2: java.lang.String[];

        $r0 = (org.apache.maven.lifecycle.DefaultLifecycleExecutor) this;

        $stack8 = $r0.<org.apache.maven.lifecycle.DefaultLifecycleExecutor: org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator lifecycleTaskSegmentCalculator>;

        $stack9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(tasks);

        taskSegments = interfaceinvoke $stack8.<org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator: java.util.List calculateTaskSegments(org.apache.maven.execution.MavenSession,java.util.List)>(session, $stack9);

        $u0 = new org.apache.maven.lifecycle.internal.TaskSegment;

        specialinvoke $u0.<org.apache.maven.lifecycle.internal.TaskSegment: void <init>(boolean)>(0);

        l6 = interfaceinvoke taskSegments.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack13 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label2;

        $stack18 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        taskSegment = (org.apache.maven.lifecycle.internal.TaskSegment) $stack18;

        $stack19 = virtualinvoke $u0.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $stack20 = virtualinvoke taskSegment.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        interfaceinvoke $stack19.<java.util.List: boolean addAll(java.util.Collection)>($stack20);

        goto label1;

     label2:
        $r1 = (org.apache.maven.lifecycle.DefaultLifecycleExecutor) this;

        $stack14 = $r1.<org.apache.maven.lifecycle.DefaultLifecycleExecutor: org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator lifecycleExecutionPlanCalculator>;

        $stack15 = virtualinvoke session.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject getCurrentProject()>();

        $stack16 = virtualinvoke $u0.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $stack17 = interfaceinvoke $stack14.<org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator: org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession,org.apache.maven.project.MavenProject,java.util.List,boolean)>(session, $stack15, $stack16, setup);

        return $stack17;
    }

    public transient org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession, java.lang.String[]) throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.PluginManagerException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        DefaultLifecycleExecutor this;
        org.apache.maven.execution.MavenSession session;
        java.lang.String[] tasks;
        org.apache.maven.lifecycle.MavenExecutionPlan $stack3;
        org.apache.maven.lifecycle.DefaultLifecycleExecutor $r0;

        this := @this: DefaultLifecycleExecutor;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        tasks := @parameter1: java.lang.String[];

        $r0 = (org.apache.maven.lifecycle.DefaultLifecycleExecutor) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.lifecycle.DefaultLifecycleExecutor: org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession,boolean,java.lang.String[])>(session, 1, tasks);

        return $stack3;
    }

    public void calculateForkedExecutions(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession) throws org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        DefaultLifecycleExecutor this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator $stack3;
        org.apache.maven.lifecycle.DefaultLifecycleExecutor $r0;

        this := @this: DefaultLifecycleExecutor;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        session := @parameter1: org.apache.maven.execution.MavenSession;

        $r0 = (org.apache.maven.lifecycle.DefaultLifecycleExecutor) this;

        $stack3 = $r0.<org.apache.maven.lifecycle.DefaultLifecycleExecutor: org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator lifecycleExecutionPlanCalculator>;

        interfaceinvoke $stack3.<org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator: void calculateForkedExecutions(org.apache.maven.plugin.MojoExecution,org.apache.maven.execution.MavenSession)>(mojoExecution, session);

        return;
    }

    public java.util.List executeForkedExecutions(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession) throws org.apache.maven.lifecycle.LifecycleExecutionException
    {
        DefaultLifecycleExecutor this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.lifecycle.internal.MojoExecutor $stack4;
        java.util.List $stack5, $stack6;
        org.apache.maven.lifecycle.internal.ProjectIndex $u0;
        org.apache.maven.lifecycle.DefaultLifecycleExecutor $r0;

        this := @this: DefaultLifecycleExecutor;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        session := @parameter1: org.apache.maven.execution.MavenSession;

        $r0 = (org.apache.maven.lifecycle.DefaultLifecycleExecutor) this;

        $stack4 = $r0.<org.apache.maven.lifecycle.DefaultLifecycleExecutor: org.apache.maven.lifecycle.internal.MojoExecutor mojoExecutor>;

        $u0 = new org.apache.maven.lifecycle.internal.ProjectIndex;

        $stack5 = virtualinvoke session.<org.apache.maven.execution.MavenSession: java.util.List getProjects()>();

        specialinvoke $u0.<org.apache.maven.lifecycle.internal.ProjectIndex: void <init>(java.util.List)>($stack5);

        $stack6 = virtualinvoke $stack4.<org.apache.maven.lifecycle.internal.MojoExecutor: java.util.List executeForkedExecutions(org.apache.maven.plugin.MojoExecution,org.apache.maven.execution.MavenSession,org.apache.maven.lifecycle.internal.ProjectIndex)>(mojoExecution, session, $u0);

        return $stack6;
    }
}
