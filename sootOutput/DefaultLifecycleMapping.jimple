public class DefaultLifecycleMapping extends java.lang.Object implements org.apache.maven.lifecycle.mapping.LifecycleMapping
{
    private java.util.List lifecycles;
    private java.util.Map lifecycleMap;
    private java.util.Map phases;

    public void <init>()
    {
        DefaultLifecycleMapping this;

        this := @this: DefaultLifecycleMapping;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private void initLifecycleMap()
    {
        DefaultLifecycleMapping this;
        java.util.Map $stack8, phases, $stack16, $stack22;
        java.util.List $stack10, $stack18;
        java.lang.String[] $stack11;
        int l3, l4;
        java.lang.String lifecycleId, $stack23;
        org.apache.maven.lifecycle.mapping.Lifecycle lifecycle, $u1;
        boolean $stack20;
        java.lang.Object $stack21;
        java.util.Iterator lifecycleIds;
        java.util.HashMap $u0;
        org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: DefaultLifecycleMapping;

        $r0 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $stack8 = $r0.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.Map lifecycleMap>;

        if $stack8 != null goto label6;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r1 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $r1.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.Map lifecycleMap> = $u0;

        $r2 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $stack10 = $r2.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.List lifecycles>;

        if $stack10 == null goto label3;

        $r3 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $stack18 = $r3.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.List lifecycles>;

        lifecycleIds = interfaceinvoke $stack18.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack20 = interfaceinvoke lifecycleIds.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label2;

        $stack21 = interfaceinvoke lifecycleIds.<java.util.Iterator: java.lang.Object next()>();

        lifecycle = (org.apache.maven.lifecycle.mapping.Lifecycle) $stack21;

        $r4 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $stack22 = $r4.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.Map lifecycleMap>;

        $stack23 = virtualinvoke lifecycle.<org.apache.maven.lifecycle.mapping.Lifecycle: java.lang.String getId()>();

        interfaceinvoke $stack22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack23, lifecycle);

        goto label1;

     label2:
        goto label6;

     label3:
        $stack11 = newarray (java.lang.String)[3];

        $stack11[0] = "default";

        $stack11[1] = "clean";

        $stack11[2] = "site";

        l3 = lengthof $stack11;

        l4 = 0;

     label4:
        if l4 >= l3 goto label6;

        lifecycleId = $stack11[l4];

        $r5 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        phases = specialinvoke $r5.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.Map getLifecyclePhases(java.lang.String)>(lifecycleId);

        if phases == null goto label5;

        $u1 = new org.apache.maven.lifecycle.mapping.Lifecycle;

        specialinvoke $u1.<org.apache.maven.lifecycle.mapping.Lifecycle: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.lifecycle.mapping.Lifecycle: void setId(java.lang.String)>(lifecycleId);

        virtualinvoke $u1.<org.apache.maven.lifecycle.mapping.Lifecycle: void setLifecyclePhases(java.util.Map)>(phases);

        $r6 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $stack16 = $r6.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.Map lifecycleMap>;

        interfaceinvoke $stack16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(lifecycleId, $u1);

     label5:
        l4 = l4 + 1;

        goto label4;

     label6:
        return;
    }

    public java.util.Map getLifecycles()
    {
        DefaultLifecycleMapping this;
        java.util.Map $stack1;
        org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping $r0, $r1;

        this := @this: DefaultLifecycleMapping;

        $r0 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        specialinvoke $r0.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: void initLifecycleMap()>();

        $r1 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $stack1 = $r1.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.Map lifecycleMap>;

        return $stack1;
    }

    public java.util.List getOptionalMojos(java.lang.String)
    {
        DefaultLifecycleMapping this;
        java.lang.String lifecycle;

        this := @this: DefaultLifecycleMapping;

        lifecycle := @parameter0: java.lang.String;

        return null;
    }

    private java.util.Map getLifecyclePhases(java.lang.String)
    {
        DefaultLifecycleMapping this;
        java.lang.String lifecycle, $stack5;
        java.util.Map $stack3, $stack7, $stack8;
        java.lang.Object $stack4;
        org.apache.maven.lifecycle.mapping.Lifecycle lifecycleMapping;
        boolean $stack6;
        org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping $r0, $r1, $r2;

        this := @this: DefaultLifecycleMapping;

        lifecycle := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        specialinvoke $r0.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: void initLifecycleMap()>();

        $r1 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $stack3 = $r1.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.Map lifecycleMap>;

        $stack4 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>(lifecycle);

        lifecycleMapping = (org.apache.maven.lifecycle.mapping.Lifecycle) $stack4;

        if lifecycleMapping == null goto label1;

        $stack8 = virtualinvoke lifecycleMapping.<org.apache.maven.lifecycle.mapping.Lifecycle: java.util.Map getLifecyclePhases()>();

        return $stack8;

     label1:
        $stack5 = "default";

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(lifecycle);

        if $stack6 == 0 goto label2;

        $r2 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $stack7 = $r2.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.Map phases>;

        return $stack7;

     label2:
        return null;
    }

    public java.util.Map getPhases(java.lang.String)
    {
        DefaultLifecycleMapping this;
        java.lang.String lifecycle;
        java.util.Map $stack2, $stack3;
        org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping $r0;

        this := @this: DefaultLifecycleMapping;

        lifecycle := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.lifecycle.mapping.DefaultLifecycleMapping: java.util.Map getLifecyclePhases(java.lang.String)>(lifecycle);

        $stack3 = staticinvoke <org.apache.maven.lifecycle.mapping.LifecyclePhase: java.util.Map toLegacyMap(java.util.Map)>($stack2);

        return $stack3;
    }
}
