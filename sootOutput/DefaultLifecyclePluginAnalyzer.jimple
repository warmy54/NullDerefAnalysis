public class DefaultLifecyclePluginAnalyzer extends java.lang.Object implements org.apache.maven.lifecycle.LifeCyclePluginAnalyzer
{
    public static final java.lang.String DEFAULTLIFECYCLEBINDINGS_MODELID;
    private java.util.Map lifecycleMappings;
    private org.apache.maven.lifecycle.DefaultLifecycles defaultLifeCycles;
    private org.codehaus.plexus.logging.Logger logger;

    public void <init>()
    {
        DefaultLifecyclePluginAnalyzer this;

        this := @this: DefaultLifecyclePluginAnalyzer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Set getPluginsBoundByDefaultToAllLifecycles(java.lang.String)
    {
        DefaultLifecyclePluginAnalyzer this;
        org.codehaus.plexus.logging.Logger $stack12, $stack38;
        boolean $stack13, $stack19, $stack29;
        java.lang.String packaging, $stack23, phase, $stack45;
        java.util.Map $stack14, $stack22, $stack25, phaseToGoalMapping;
        java.lang.Object $stack15, $stack21, $stack24, $stack30, $stack31, $stack32;
        org.apache.maven.lifecycle.mapping.LifecycleMapping lifecycleMappingForPackaging;
        java.util.List $stack17;
        java.util.Iterator l4, l8;
        java.util.Set $stack20, $stack27;
        org.apache.maven.lifecycle.Lifecycle lifecycle;
        org.apache.maven.lifecycle.mapping.Lifecycle lifecycleConfiguration;
        java.util.Map$Entry goalsForLifecyclePhase;
        org.apache.maven.lifecycle.mapping.LifecyclePhase goals;
        java.lang.StringBuilder $stack39, $stack40, $stack41, $stack44, $u0;
        java.lang.Thread $stack42;
        java.lang.ClassLoader $stack43;
        java.util.LinkedHashMap $u1;
        org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultLifecyclePluginAnalyzer;

        packaging := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer) this;

        $stack12 = $r0.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: org.codehaus.plexus.logging.Logger logger>;

        $stack13 = interfaceinvoke $stack12.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack13 == 0 goto label1;

        $r1 = (org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer) this;

        $stack38 = $r1.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: org.codehaus.plexus.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack39 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Looking up lifecycle mappings for packaging ");

        $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(packaging);

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $stack42 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $stack43 = virtualinvoke $stack42.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $stack44 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack43);

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack38.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack45);

     label1:
        $r2 = (org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer) this;

        $stack14 = $r2.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: java.util.Map lifecycleMappings>;

        $stack15 = interfaceinvoke $stack14.<java.util.Map: java.lang.Object get(java.lang.Object)>(packaging);

        lifecycleMappingForPackaging = (org.apache.maven.lifecycle.mapping.LifecycleMapping) $stack15;

        if lifecycleMappingForPackaging != null goto label2;

        return null;

     label2:
        $u1 = new java.util.LinkedHashMap;

        specialinvoke $u1.<java.util.LinkedHashMap: void <init>()>();

        $r3 = (org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer) this;

        $stack17 = specialinvoke $r3.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: java.util.List getOrderedLifecycles()>();

        l4 = interfaceinvoke $stack17.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack19 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label9;

        $stack21 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        lifecycle = (org.apache.maven.lifecycle.Lifecycle) $stack21;

        $stack22 = interfaceinvoke lifecycleMappingForPackaging.<org.apache.maven.lifecycle.mapping.LifecycleMapping: java.util.Map getLifecycles()>();

        $stack23 = virtualinvoke lifecycle.<org.apache.maven.lifecycle.Lifecycle: java.lang.String getId()>();

        $stack24 = interfaceinvoke $stack22.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack23);

        lifecycleConfiguration = (org.apache.maven.lifecycle.mapping.Lifecycle) $stack24;

        phaseToGoalMapping = null;

        if lifecycleConfiguration == null goto label4;

        phaseToGoalMapping = virtualinvoke lifecycleConfiguration.<org.apache.maven.lifecycle.mapping.Lifecycle: java.util.Map getLifecyclePhases()>();

        goto label5;

     label4:
        $stack25 = virtualinvoke lifecycle.<org.apache.maven.lifecycle.Lifecycle: java.util.Map getDefaultLifecyclePhases()>();

        if $stack25 == null goto label5;

        phaseToGoalMapping = virtualinvoke lifecycle.<org.apache.maven.lifecycle.Lifecycle: java.util.Map getDefaultLifecyclePhases()>();

     label5:
        if phaseToGoalMapping == null goto label8;

        $stack27 = interfaceinvoke phaseToGoalMapping.<java.util.Map: java.util.Set entrySet()>();

        l8 = interfaceinvoke $stack27.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $stack29 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        if $stack29 == 0 goto label8;

        $stack30 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        goalsForLifecyclePhase = (java.util.Map$Entry) $stack30;

        $stack31 = interfaceinvoke goalsForLifecyclePhase.<java.util.Map$Entry: java.lang.Object getKey()>();

        phase = (java.lang.String) $stack31;

        $stack32 = interfaceinvoke goalsForLifecyclePhase.<java.util.Map$Entry: java.lang.Object getValue()>();

        goals = (org.apache.maven.lifecycle.mapping.LifecyclePhase) $stack32;

        if goals == null goto label7;

        $r4 = (org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer) this;

        specialinvoke $r4.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: void parseLifecyclePhaseDefinitions(java.util.Map,java.lang.String,org.apache.maven.lifecycle.mapping.LifecyclePhase)>($u1, phase, goals);

     label7:
        goto label6;

     label8:
        goto label3;

     label9:
        $stack20 = interfaceinvoke $u1.<java.util.Map: java.util.Set keySet()>();

        return $stack20;
    }

    private java.util.List getOrderedLifecycles()
    {
        DefaultLifecyclePluginAnalyzer this;
        org.apache.maven.lifecycle.DefaultLifecycles $stack3;
        java.util.List $stack4;
        java.util.function.Function $stack5;
        java.util.Comparator $stack6;
        java.util.ArrayList $u0;
        org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer $r0;

        this := @this: DefaultLifecyclePluginAnalyzer;

        $u0 = new java.util.ArrayList;

        $r0 = (org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer) this;

        $stack3 = $r0.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: org.apache.maven.lifecycle.DefaultLifecycles defaultLifeCycles>;

        $stack4 = virtualinvoke $stack3.<org.apache.maven.lifecycle.DefaultLifecycles: java.util.List getLifeCycles()>();

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>($stack4);

        $stack5 = staticinvoke <DefaultLifecyclePluginAnalyzer$getId__309: java.util.function.Function bootstrap$()>();

        $stack6 = staticinvoke <java.util.Comparator: java.util.Comparator comparing(java.util.function.Function)>($stack5);

        interfaceinvoke $u0.<java.util.List: void sort(java.util.Comparator)>($stack6);

        return $u0;
    }

    private void parseLifecyclePhaseDefinitions(java.util.Map, java.lang.String, org.apache.maven.lifecycle.mapping.LifecyclePhase)
    {
        java.lang.String $stack15, $stack21, $stack24, $stack25, $stack26, $stack30, $stack31, phase, $stack35, $stack48, $stack74, $stack79, $stack83;
        java.lang.Integer $stack17;
        org.apache.maven.lifecycle.mapping.LifecyclePhase goals;
        java.util.List mojos, $stack34, $stack38, $stack39;
        int $stack19, $stack32, $stack33, i;
        java.lang.Object $stack20, $stack27;
        org.apache.maven.lifecycle.mapping.LifecycleMojo mojo;
        DefaultLifecyclePluginAnalyzer this;
        org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec gs;
        java.util.Map plugins;
        org.apache.maven.model.Plugin existing, plugin, $u3;
        org.codehaus.plexus.util.xml.Xpp3Dom lifecycleConfiguration, $u5;
        org.codehaus.plexus.logging.Logger $stack77;
        java.lang.StringBuilder $stack78, $stack80, $stack81, $stack82, $u2;
        org.apache.maven.model.InputSource $u0;
        org.apache.maven.model.InputLocation $u1;
        org.apache.maven.model.PluginExecution $u4;
        org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer $r0, $r1, $r2;

        this := @this: DefaultLifecyclePluginAnalyzer;

        plugins := @parameter0: java.util.Map;

        phase := @parameter1: java.lang.String;

        goals := @parameter2: org.apache.maven.lifecycle.mapping.LifecyclePhase;

        $u0 = new org.apache.maven.model.InputSource;

        specialinvoke $u0.<org.apache.maven.model.InputSource: void <init>()>();

        $stack15 = <org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: java.lang.String DEFAULTLIFECYCLEBINDINGS_MODELID>;

        virtualinvoke $u0.<org.apache.maven.model.InputSource: void setModelId(java.lang.String)>($stack15);

        $u1 = new org.apache.maven.model.InputLocation;

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>(-1, -1, $u0);

        $stack17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke $u1.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack17, $u1);

        mojos = virtualinvoke goals.<org.apache.maven.lifecycle.mapping.LifecyclePhase: java.util.List getMojos()>();

        if mojos == null goto label8;

        i = 0;

     label1:
        $stack19 = interfaceinvoke mojos.<java.util.List: int size()>();

        if i >= $stack19 goto label8;

        $stack20 = interfaceinvoke mojos.<java.util.List: java.lang.Object get(int)>(i);

        mojo = (org.apache.maven.lifecycle.mapping.LifecycleMojo) $stack20;

        $stack21 = virtualinvoke mojo.<org.apache.maven.lifecycle.mapping.LifecycleMojo: java.lang.String getGoal()>();

        $r0 = (org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer) this;

        gs = specialinvoke $r0.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec parseGoalSpec(java.lang.String)>($stack21);

        if gs != null goto label2;

        $r1 = (org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer) this;

        $stack77 = $r1.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: org.codehaus.plexus.logging.Logger logger>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack78 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignored invalid goal specification \'");

        $stack79 = virtualinvoke mojo.<org.apache.maven.lifecycle.mapping.LifecycleMojo: java.lang.String getGoal()>();

        $stack80 = virtualinvoke $stack78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack79);

        $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' from lifecycle mapping for phase ");

        $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(phase);

        $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack77.<org.codehaus.plexus.logging.Logger: void warn(java.lang.String)>($stack83);

        goto label7;

     label2:
        $u3 = new org.apache.maven.model.Plugin;

        specialinvoke $u3.<org.apache.maven.model.Plugin: void <init>()>();

        plugin = $u3;

        $stack24 = gs.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String groupId>;

        virtualinvoke $u3.<org.apache.maven.model.Plugin: void setGroupId(java.lang.String)>($stack24);

        $stack25 = gs.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String artifactId>;

        virtualinvoke $u3.<org.apache.maven.model.Plugin: void setArtifactId(java.lang.String)>($stack25);

        $stack26 = gs.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String version>;

        virtualinvoke $u3.<org.apache.maven.model.Plugin: void setVersion(java.lang.String)>($stack26);

        virtualinvoke $u3.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        virtualinvoke $u3.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $u1);

        virtualinvoke $u3.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $u1);

        virtualinvoke $u3.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u1);

        $stack27 = interfaceinvoke plugins.<java.util.Map: java.lang.Object get(java.lang.Object)>($u3);

        existing = (org.apache.maven.model.Plugin) $stack27;

        if existing == null goto label4;

        $stack48 = virtualinvoke existing.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        if $stack48 != null goto label3;

        $stack74 = virtualinvoke $u3.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        virtualinvoke existing.<org.apache.maven.model.Plugin: void setVersion(java.lang.String)>($stack74);

        virtualinvoke existing.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u1);

     label3:
        plugin = existing;

        goto label5;

     label4:
        interfaceinvoke plugins.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($u3, $u3);

     label5:
        $u4 = new org.apache.maven.model.PluginExecution;

        specialinvoke $u4.<org.apache.maven.model.PluginExecution: void <init>()>();

        $stack30 = gs.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String goal>;

        $r2 = (org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer) this;

        $stack31 = specialinvoke $r2.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: java.lang.String getExecutionId(org.apache.maven.model.Plugin,java.lang.String)>(plugin, $stack30);

        virtualinvoke $u4.<org.apache.maven.model.PluginExecution: void setId(java.lang.String)>($stack31);

        virtualinvoke $u4.<org.apache.maven.model.PluginExecution: void setPhase(java.lang.String)>(phase);

        $stack32 = interfaceinvoke mojos.<java.util.List: int size()>();

        $stack33 = i - $stack32;

        virtualinvoke $u4.<org.apache.maven.model.PluginExecution: void setPriority(int)>($stack33);

        $stack34 = virtualinvoke $u4.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        $stack35 = gs.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String goal>;

        interfaceinvoke $stack34.<java.util.List: boolean add(java.lang.Object)>($stack35);

        virtualinvoke $u4.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        virtualinvoke $u4.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $u1);

        virtualinvoke $u4.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("phase", $u1);

        virtualinvoke $u4.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("goals", $u1);

        lifecycleConfiguration = virtualinvoke mojo.<org.apache.maven.lifecycle.mapping.LifecycleMojo: org.codehaus.plexus.util.xml.Xpp3Dom getConfiguration()>();

        if lifecycleConfiguration == null goto label6;

        $u5 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        specialinvoke $u5.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(org.codehaus.plexus.util.xml.Xpp3Dom)>(lifecycleConfiguration);

        virtualinvoke $u4.<org.apache.maven.model.PluginExecution: void setConfiguration(java.lang.Object)>($u5);

     label6:
        $stack38 = virtualinvoke mojo.<org.apache.maven.lifecycle.mapping.LifecycleMojo: java.util.List getDependencies()>();

        virtualinvoke plugin.<org.apache.maven.model.Plugin: void setDependencies(java.util.List)>($stack38);

        $stack39 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        interfaceinvoke $stack39.<java.util.List: boolean add(java.lang.Object)>($u4);

     label7:
        i = i + 1;

        goto label1;

     label8:
        return;
    }

    private org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec parseGoalSpec(java.lang.String)
    {
        org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec $stack4, gs;
        java.lang.String goalSpec, $stack5, $stack9, $stack10, $stack11, $stack12, $stack14, $stack15, $stack16;
        java.lang.String[] p;
        int $stack7, $stack8;
        DefaultLifecyclePluginAnalyzer this;

        this := @this: DefaultLifecyclePluginAnalyzer;

        goalSpec := @parameter0: java.lang.String;

        $stack4 = new org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec;

        specialinvoke $stack4.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: void <init>()>();

        gs = $stack4;

        $stack5 = virtualinvoke goalSpec.<java.lang.String: java.lang.String trim()>();

        p = staticinvoke <org.codehaus.plexus.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>($stack5, ":");

        $stack7 = lengthof p;

        if $stack7 != 3 goto label1;

        $stack14 = p[0];

        $stack4.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String groupId> = $stack14;

        $stack15 = p[1];

        $stack4.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String artifactId> = $stack15;

        $stack16 = p[2];

        $stack4.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String goal> = $stack16;

        goto label3;

     label1:
        $stack8 = lengthof p;

        if $stack8 != 4 goto label2;

        $stack9 = p[0];

        $stack4.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String groupId> = $stack9;

        $stack10 = p[1];

        $stack4.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String artifactId> = $stack10;

        $stack11 = p[2];

        $stack4.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String version> = $stack11;

        $stack12 = p[3];

        $stack4.<org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer$GoalSpec: java.lang.String goal> = $stack12;

        goto label3;

     label2:
        gs = null;

     label3:
        return gs;
    }

    private java.lang.String getExecutionId(org.apache.maven.model.Plugin, java.lang.String)
    {
        java.util.HashSet $stack7;
        org.apache.maven.model.Plugin plugin;
        java.util.List $stack8;
        boolean $stack10, $stack15;
        java.lang.StringBuilder $stack11, $stack12, $stack13, $stack16, $stack17, $stack18, $stack19;
        java.lang.String goal, $stack24, base#3, execution#4;
        java.lang.Object $stack23;
        DefaultLifecyclePluginAnalyzer this;
        java.util.Iterator base;
        org.apache.maven.model.PluginExecution execution;
        int index;

        this := @this: DefaultLifecyclePluginAnalyzer;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        goal := @parameter1: java.lang.String;

        $stack7 = new java.util.HashSet;

        specialinvoke $stack7.<java.util.HashSet: void <init>()>();

        $stack8 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        base = interfaceinvoke $stack8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke base.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label2;

        $stack23 = interfaceinvoke base.<java.util.Iterator: java.lang.Object next()>();

        execution = (org.apache.maven.model.PluginExecution) $stack23;

        $stack24 = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        interfaceinvoke $stack7.<java.util.Set: boolean add(java.lang.Object)>($stack24);

        goto label1;

     label2:
        $stack11 = new java.lang.StringBuilder;

        specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("default-");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(goal);

        base#3 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        execution#4 = base#3;

        index = 1;

     label3:
        $stack15 = interfaceinvoke $stack7.<java.util.Set: boolean contains(java.lang.Object)>(execution#4);

        if $stack15 == 0 goto label4;

        $stack16 = new java.lang.StringBuilder;

        specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(base#3);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(index);

        execution#4 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        index = index + 1;

        goto label3;

     label4:
        return execution#4;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $stack0, $stack1, $stack5, $stack6;
        java.lang.Class $stack2;
        java.lang.Package $stack3;
        java.lang.String $stack4, $stack7;

        $stack0 = new java.lang.StringBuilder;

        specialinvoke $stack0.<java.lang.StringBuilder: void <init>()>();

        $stack1 = virtualinvoke $stack0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.apache.maven:maven-core:");

        $stack2 = class "Lorg/apache/maven/lifecycle/internal/DefaultLifecyclePluginAnalyzer;";

        $stack3 = virtualinvoke $stack2.<java.lang.Class: java.lang.Package getPackage()>();

        $stack4 = virtualinvoke $stack3.<java.lang.Package: java.lang.String getImplementationVersion()>();

        $stack5 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":default-lifecycle-bindings");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        <org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: java.lang.String DEFAULTLIFECYCLEBINDINGS_MODELID> = $stack7;

        return;
    }
}
