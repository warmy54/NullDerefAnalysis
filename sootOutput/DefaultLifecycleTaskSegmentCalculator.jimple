public class DefaultLifecycleTaskSegmentCalculator extends java.lang.Object implements org.apache.maven.lifecycle.internal.LifecycleTaskSegmentCalculator
{
    private org.apache.maven.lifecycle.internal.MojoDescriptorCreator mojoDescriptorCreator;
    private org.apache.maven.lifecycle.internal.LifecyclePluginResolver lifecyclePluginResolver;

    public void <init>()
    {
        DefaultLifecycleTaskSegmentCalculator this;

        this := @this: DefaultLifecycleTaskSegmentCalculator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List calculateTaskSegments(org.apache.maven.execution.MavenSession) throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException
    {
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.project.MavenProject rootProject;
        java.lang.String $stack6, $stack9;
        boolean $stack7, $stack15;
        DefaultLifecycleTaskSegmentCalculator this;
        java.lang.String[] $stack10;
        java.util.List tasks, $stack8;
        org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator $r0;

        this := @this: DefaultLifecycleTaskSegmentCalculator;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        rootProject = virtualinvoke session.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject getTopLevelProject()>();

        tasks = virtualinvoke session.<org.apache.maven.execution.MavenSession: java.util.List getGoals()>();

        if tasks == null goto label1;

        $stack15 = interfaceinvoke tasks.<java.util.List: boolean isEmpty()>();

        if $stack15 == 0 goto label2;

     label1:
        $stack6 = virtualinvoke rootProject.<org.apache.maven.project.MavenProject: java.lang.String getDefaultGoal()>();

        $stack7 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isEmpty(java.lang.String)>($stack6);

        if $stack7 != 0 goto label2;

        $stack9 = virtualinvoke rootProject.<org.apache.maven.project.MavenProject: java.lang.String getDefaultGoal()>();

        $stack10 = staticinvoke <org.codehaus.plexus.util.StringUtils: java.lang.String[] split(java.lang.String)>($stack9);

        tasks = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack10);

     label2:
        $r0 = (org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator) this;

        $stack8 = virtualinvoke $r0.<org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator: java.util.List calculateTaskSegments(org.apache.maven.execution.MavenSession,java.util.List)>(session, tasks);

        return $stack8;
    }

    public java.util.List calculateTaskSegments(org.apache.maven.execution.MavenSession, java.util.List) throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        java.util.List tasks, $stack35, $stack17;
        int $stack10;
        java.util.Iterator l5;
        boolean $stack12, $stack14, $stack21, $stack32, aggregating, $stack38, $stack44, $stack45;
        java.lang.Object $stack13;
        java.lang.String task;
        DefaultLifecycleTaskSegmentCalculator this;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.lifecycle.internal.LifecyclePluginResolver $stack27;
        org.apache.maven.project.MavenProject $stack28, $stack30;
        org.apache.maven.lifecycle.internal.MojoDescriptorCreator $stack29;
        org.apache.maven.plugin.descriptor.MojoDescriptor mojoDescriptor;
        org.apache.maven.lifecycle.internal.TaskSegment currentSegment, $u1, $u3;
        java.util.ArrayList $u0;
        org.apache.maven.lifecycle.internal.GoalTask $u2;
        org.apache.maven.lifecycle.internal.LifecycleTask $u4;
        org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator $r0, $r1, $r2;

        this := @this: DefaultLifecycleTaskSegmentCalculator;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        tasks := @parameter1: java.util.List;

        $u0 = new java.util.ArrayList;

        $stack10 = interfaceinvoke tasks.<java.util.List: int size()>();

        specialinvoke $u0.<java.util.ArrayList: void <init>(int)>($stack10);

        currentSegment = null;

        l5 = interfaceinvoke tasks.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $stack12 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label11;

        $stack13 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        task = (java.lang.String) $stack13;

        $r0 = (org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator) this;

        $stack14 = specialinvoke $r0.<org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator: boolean isGoalSpecification(java.lang.String)>(task);

        if $stack14 == 0 goto label07;

        $r1 = (org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator) this;

        $stack27 = $r1.<org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator: org.apache.maven.lifecycle.internal.LifecyclePluginResolver lifecyclePluginResolver>;

        $stack28 = virtualinvoke session.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject getTopLevelProject()>();

        virtualinvoke $stack27.<org.apache.maven.lifecycle.internal.LifecyclePluginResolver: void resolveMissingPluginVersions(org.apache.maven.project.MavenProject,org.apache.maven.execution.MavenSession)>($stack28, session);

        $r2 = (org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator) this;

        $stack29 = $r2.<org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator: org.apache.maven.lifecycle.internal.MojoDescriptorCreator mojoDescriptorCreator>;

        $stack30 = virtualinvoke session.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject getTopLevelProject()>();

        mojoDescriptor = virtualinvoke $stack29.<org.apache.maven.lifecycle.internal.MojoDescriptorCreator: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor(java.lang.String,org.apache.maven.execution.MavenSession,org.apache.maven.project.MavenProject)>(task, session, $stack30);

        $stack32 = virtualinvoke mojoDescriptor.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isAggregator()>();

        if $stack32 != 0 goto label02;

        $stack44 = virtualinvoke mojoDescriptor.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isProjectRequired()>();

        if $stack44 != 0 goto label03;

     label02:
        $stack45 = 1;

        goto label04;

     label03:
        $stack45 = 0;

     label04:
        aggregating = $stack45;

        if currentSegment == null goto label05;

        $stack38 = virtualinvoke currentSegment.<org.apache.maven.lifecycle.internal.TaskSegment: boolean isAggregating()>();

        if $stack38 == $stack45 goto label06;

     label05:
        $u1 = new org.apache.maven.lifecycle.internal.TaskSegment;

        specialinvoke $u1.<org.apache.maven.lifecycle.internal.TaskSegment: void <init>(boolean)>(aggregating);

        currentSegment = $u1;

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u1);

     label06:
        $stack35 = virtualinvoke currentSegment.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $u2 = new org.apache.maven.lifecycle.internal.GoalTask;

        specialinvoke $u2.<org.apache.maven.lifecycle.internal.GoalTask: void <init>(java.lang.String)>(task);

        interfaceinvoke $stack35.<java.util.List: boolean add(java.lang.Object)>($u2);

        goto label10;

     label07:
        if currentSegment == null goto label08;

        $stack21 = virtualinvoke currentSegment.<org.apache.maven.lifecycle.internal.TaskSegment: boolean isAggregating()>();

        if $stack21 == 0 goto label09;

     label08:
        $u3 = new org.apache.maven.lifecycle.internal.TaskSegment;

        specialinvoke $u3.<org.apache.maven.lifecycle.internal.TaskSegment: void <init>(boolean)>(0);

        currentSegment = $u3;

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u3);

     label09:
        $stack17 = virtualinvoke currentSegment.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $u4 = new org.apache.maven.lifecycle.internal.LifecycleTask;

        specialinvoke $u4.<org.apache.maven.lifecycle.internal.LifecycleTask: void <init>(java.lang.String)>(task);

        interfaceinvoke $stack17.<java.util.List: boolean add(java.lang.Object)>($u4);

     label10:
        goto label01;

     label11:
        return $u0;
    }

    public boolean requiresProject(org.apache.maven.execution.MavenSession)
    {
        org.apache.maven.execution.MavenSession session;
        java.util.List goals;
        java.util.Iterator l3;
        boolean $stack7, $stack10;
        java.lang.Object $stack9;
        java.lang.String goal;
        DefaultLifecycleTaskSegmentCalculator this;
        org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator $r0;

        this := @this: DefaultLifecycleTaskSegmentCalculator;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        goals = virtualinvoke session.<org.apache.maven.execution.MavenSession: java.util.List getGoals()>();

        if goals == null goto label3;

        l3 = interfaceinvoke goals.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack9 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        goal = (java.lang.String) $stack9;

        $r0 = (org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator) this;

        $stack10 = specialinvoke $r0.<org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator: boolean isGoalSpecification(java.lang.String)>(goal);

        if $stack10 != 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private boolean isGoalSpecification(java.lang.String)
    {
        java.lang.String task;
        int $stack2;
        DefaultLifecycleTaskSegmentCalculator this;
        boolean $stack3;

        this := @this: DefaultLifecycleTaskSegmentCalculator;

        task := @parameter0: java.lang.String;

        $stack2 = virtualinvoke task.<java.lang.String: int indexOf(int)>(58);

        if $stack2 < 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }
}
