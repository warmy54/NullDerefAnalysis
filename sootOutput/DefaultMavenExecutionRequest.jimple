public class DefaultMavenExecutionRequest extends java.lang.Object implements org.apache.maven.execution.MavenExecutionRequest
{
    private org.eclipse.aether.RepositoryCache repositoryCache;
    private org.eclipse.aether.repository.WorkspaceReader workspaceReader;
    private org.apache.maven.artifact.repository.ArtifactRepository localRepository;
    private org.apache.maven.eventspy.internal.EventSpyDispatcher eventSpyDispatcher;
    private java.io.File localRepositoryPath;
    private boolean offline;
    private boolean interactiveMode;
    private boolean cacheTransferError;
    private boolean cacheNotFound;
    private java.util.List proxies;
    private java.util.List servers;
    private java.util.List mirrors;
    private java.util.List profiles;
    private final org.apache.maven.execution.ProjectActivation projectActivation;
    private final org.apache.maven.execution.ProfileActivation profileActivation;
    private java.util.List pluginGroups;
    private boolean isProjectPresent;
    private java.io.File userSettingsFile;
    private java.io.File globalSettingsFile;
    private java.io.File userToolchainsFile;
    private java.io.File globalToolchainsFile;
    private java.io.File multiModuleProjectDirectory;
    private java.io.File basedir;
    private java.util.List goals;
    private boolean useReactor;
    private boolean recursive;
    private java.io.File pom;
    private java.lang.String reactorFailureBehavior;
    private boolean resume;
    private java.lang.String resumeFrom;
    private java.lang.String makeBehavior;
    private java.util.Properties systemProperties;
    private java.util.Properties userProperties;
    private java.util.Date startTime;
    private boolean showErrors;
    private org.eclipse.aether.transfer.TransferListener transferListener;
    private int loggingLevel;
    private java.lang.String globalChecksumPolicy;
    private boolean updateSnapshots;
    private java.util.List remoteRepositories;
    private java.util.List pluginArtifactRepositories;
    private org.apache.maven.execution.ExecutionListener executionListener;
    private int degreeOfConcurrency;
    private java.lang.String builderId;
    private java.util.Map toolchains;
    private boolean noSnapshotUpdates;
    private boolean useLegacyLocalRepositoryManager;
    private java.util.Map data;
    private org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest;

    public void <init>()
    {
        DefaultMavenExecutionRequest this;
        org.eclipse.aether.DefaultRepositoryCache $u0;
        org.apache.maven.execution.ProjectActivation $u1;
        org.apache.maven.execution.ProfileActivation $u2;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        org.eclipse.aether.RepositoryCache $r1;

        this := @this: DefaultMavenExecutionRequest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new org.eclipse.aether.DefaultRepositoryCache;

        specialinvoke $u0.<org.eclipse.aether.DefaultRepositoryCache: void <init>()>();

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1 = (org.eclipse.aether.RepositoryCache) $u0;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.eclipse.aether.RepositoryCache repositoryCache> = $r1;

        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean offline> = 0;

        $r3 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r3.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean interactiveMode> = 1;

        $r4 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r4.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean cacheTransferError> = 0;

        $r5 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r5.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean cacheNotFound> = 0;

        $u1 = new org.apache.maven.execution.ProjectActivation;

        specialinvoke $u1.<org.apache.maven.execution.ProjectActivation: void <init>()>();

        $r6 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r6.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProjectActivation projectActivation> = $u1;

        $u2 = new org.apache.maven.execution.ProfileActivation;

        specialinvoke $u2.<org.apache.maven.execution.ProfileActivation: void <init>()>();

        $r7 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r7.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProfileActivation profileActivation> = $u2;

        $r8 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r8.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean isProjectPresent> = 1;

        $r9 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r9.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean useReactor> = 0;

        $r10 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r10.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean recursive> = 1;

        $r11 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r11.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String reactorFailureBehavior> = "FAIL_FAST";

        $r12 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r12.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean resume> = 0;

        $r13 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r13.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean showErrors> = 0;

        $r14 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r14.<org.apache.maven.execution.DefaultMavenExecutionRequest: int loggingLevel> = 1;

        $r15 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r15.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean updateSnapshots> = 0;

        $r16 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r16.<org.apache.maven.execution.DefaultMavenExecutionRequest: int degreeOfConcurrency> = 1;

        $r17 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r17.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String builderId> = "singlethreaded";

        $r18 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r18.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean noSnapshotUpdates> = 0;

        $r19 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r19.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean useLegacyLocalRepositoryManager> = 0;

        return;
    }

    public static org.apache.maven.execution.MavenExecutionRequest copy(org.apache.maven.execution.MavenExecutionRequest)
    {
        org.apache.maven.execution.MavenExecutionRequest original, $r0;
        org.apache.maven.artifact.repository.ArtifactRepository $stack3;
        java.io.File $stack5, $stack27, $stack29, $stack31, $stack33, $stack41, $stack77, $u1;
        boolean $stack7, $stack9, $stack11, $stack13, $stack25, $stack39, $stack47, $stack59, $stack69, $stack73;
        java.util.List $stack15, $stack17, $stack19, $stack21, $stack23, $stack37, $stack49, $stack51, $stack61, $stack63;
        java.lang.String $stack35, $stack57, $stack75, $stack78;
        java.util.Properties $stack43, $stack45;
        org.eclipse.aether.transfer.TransferListener $stack53;
        int $stack55;
        org.eclipse.aether.RepositoryCache $stack65;
        org.eclipse.aether.repository.WorkspaceReader $stack67;
        org.apache.maven.execution.ExecutionListener $stack71;
        org.apache.maven.execution.DefaultMavenExecutionRequest $u0;

        original := @parameter0: org.apache.maven.execution.MavenExecutionRequest;

        $u0 = new org.apache.maven.execution.DefaultMavenExecutionRequest;

        specialinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: void <init>()>();

        $stack3 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>($stack3);

        $stack5 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.io.File getLocalRepositoryPath()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setLocalRepositoryPath(java.io.File)>($stack5);

        $stack7 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isOffline()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setOffline(boolean)>($stack7);

        $stack9 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isInteractiveMode()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setInteractiveMode(boolean)>($stack9);

        $stack11 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isCacheNotFound()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setCacheNotFound(boolean)>($stack11);

        $stack13 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isCacheTransferError()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setCacheTransferError(boolean)>($stack13);

        $stack15 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getProxies()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setProxies(java.util.List)>($stack15);

        $stack17 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getServers()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setServers(java.util.List)>($stack17);

        $stack19 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getMirrors()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setMirrors(java.util.List)>($stack19);

        $stack21 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getProfiles()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setProfiles(java.util.List)>($stack21);

        $stack23 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getPluginGroups()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setPluginGroups(java.util.List)>($stack23);

        $stack25 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isProjectPresent()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setProjectPresent(boolean)>($stack25);

        $stack27 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.io.File getUserSettingsFile()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setUserSettingsFile(java.io.File)>($stack27);

        $stack29 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.io.File getGlobalSettingsFile()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setGlobalSettingsFile(java.io.File)>($stack29);

        $stack31 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.io.File getUserToolchainsFile()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setUserToolchainsFile(java.io.File)>($stack31);

        $stack33 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.io.File getGlobalToolchainsFile()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setGlobalToolchainsFile(java.io.File)>($stack33);

        $stack35 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.lang.String getBaseDirectory()>();

        if $stack35 == null goto label1;

        $u1 = new java.io.File;

        $stack77 = $u1;

        $stack78 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.lang.String getBaseDirectory()>();

        specialinvoke $u1.<java.io.File: void <init>(java.lang.String)>($stack78);

        goto label2;

     label1:
        $stack77 = null;

     label2:
        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setBaseDirectory(java.io.File)>($stack77);

        $stack37 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getGoals()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setGoals(java.util.List)>($stack37);

        $stack39 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isRecursive()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setRecursive(boolean)>($stack39);

        $stack41 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.io.File getPom()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setPom(java.io.File)>($stack41);

        $stack43 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.Properties getSystemProperties()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setSystemProperties(java.util.Properties)>($stack43);

        $stack45 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.Properties getUserProperties()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setUserProperties(java.util.Properties)>($stack45);

        $stack47 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isShowErrors()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setShowErrors(boolean)>($stack47);

        $stack49 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getActiveProfiles()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setActiveProfiles(java.util.List)>($stack49);

        $stack51 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getInactiveProfiles()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setInactiveProfiles(java.util.List)>($stack51);

        $stack53 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: org.eclipse.aether.transfer.TransferListener getTransferListener()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setTransferListener(org.eclipse.aether.transfer.TransferListener)>($stack53);

        $stack55 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: int getLoggingLevel()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setLoggingLevel(int)>($stack55);

        $stack57 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.lang.String getGlobalChecksumPolicy()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setGlobalChecksumPolicy(java.lang.String)>($stack57);

        $stack59 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isUpdateSnapshots()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setUpdateSnapshots(boolean)>($stack59);

        $stack61 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getRemoteRepositories()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setRemoteRepositories(java.util.List)>($stack61);

        $stack63 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getPluginArtifactRepositories()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setPluginArtifactRepositories(java.util.List)>($stack63);

        $stack65 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: org.eclipse.aether.RepositoryCache getRepositoryCache()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setRepositoryCache(org.eclipse.aether.RepositoryCache)>($stack65);

        $stack67 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: org.eclipse.aether.repository.WorkspaceReader getWorkspaceReader()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setWorkspaceReader(org.eclipse.aether.repository.WorkspaceReader)>($stack67);

        $stack69 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isNoSnapshotUpdates()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setNoSnapshotUpdates(boolean)>($stack69);

        $stack71 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.execution.ExecutionListener getExecutionListener()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setExecutionListener(org.apache.maven.execution.ExecutionListener)>($stack71);

        $stack73 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: boolean isUseLegacyLocalRepository()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setUseLegacyLocalRepository(boolean)>($stack73);

        $stack75 = interfaceinvoke original.<org.apache.maven.execution.MavenExecutionRequest: java.lang.String getBuilderId()>();

        virtualinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setBuilderId(java.lang.String)>($stack75);

        $r0 = (org.apache.maven.execution.MavenExecutionRequest) $u0;

        return $r0;
    }

    public java.lang.String getBaseDirectory()
    {
        DefaultMavenExecutionRequest this;
        java.io.File $stack1, $stack2;
        java.lang.String $stack3;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File basedir>;

        if $stack1 != null goto label1;

        return null;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File basedir>;

        $stack3 = virtualinvoke $stack2.<java.io.File: java.lang.String getAbsolutePath()>();

        return $stack3;
    }

    public org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.artifact.repository.ArtifactRepository localRepository>;

        return $stack1;
    }

    public java.io.File getLocalRepositoryPath()
    {
        DefaultMavenExecutionRequest this;
        java.io.File $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File localRepositoryPath>;

        return $stack1;
    }

    public java.util.List getGoals()
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List goals>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List goals> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List goals>;

        return $stack2;
    }

    public java.util.Properties getSystemProperties()
    {
        DefaultMavenExecutionRequest this;
        java.util.Properties $stack1, $stack2, $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties systemProperties>;

        if $stack1 != null goto label1;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties systemProperties> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties systemProperties>;

        return $stack2;
    }

    public java.util.Properties getUserProperties()
    {
        DefaultMavenExecutionRequest this;
        java.util.Properties $stack1, $stack2, $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties userProperties>;

        if $stack1 != null goto label1;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties userProperties> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties userProperties>;

        return $stack2;
    }

    public java.io.File getPom()
    {
        DefaultMavenExecutionRequest this;
        java.io.File $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File pom>;

        return $stack1;
    }

    public java.lang.String getReactorFailureBehavior()
    {
        DefaultMavenExecutionRequest this;
        java.lang.String $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String reactorFailureBehavior>;

        return $stack1;
    }

    public java.util.List getSelectedProjects()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProjectActivation $stack1;
        java.util.List $stack2;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProjectActivation projectActivation>;

        $stack2 = virtualinvoke $stack1.<org.apache.maven.execution.ProjectActivation: java.util.List getSelectedProjects()>();

        return $stack2;
    }

    public java.util.List getExcludedProjects()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProjectActivation $stack1;
        java.util.List $stack2;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProjectActivation projectActivation>;

        $stack2 = virtualinvoke $stack1.<org.apache.maven.execution.ProjectActivation: java.util.List getExcludedProjects()>();

        return $stack2;
    }

    public boolean isResume()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean resume>;

        return $stack1;
    }

    public java.lang.String getResumeFrom()
    {
        DefaultMavenExecutionRequest this;
        java.lang.String $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String resumeFrom>;

        return $stack1;
    }

    public java.lang.String getMakeBehavior()
    {
        DefaultMavenExecutionRequest this;
        java.lang.String $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String makeBehavior>;

        return $stack1;
    }

    public java.util.Date getStartTime()
    {
        DefaultMavenExecutionRequest this;
        java.util.Date $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Date startTime>;

        return $stack1;
    }

    public boolean isShowErrors()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean showErrors>;

        return $stack1;
    }

    public boolean isInteractiveMode()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean interactiveMode>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setActiveProfiles(java.util.List)
    {
        java.util.List activeProfiles;
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProfileActivation $stack2;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        activeProfiles := @parameter0: java.util.List;

        if activeProfiles == null goto label1;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProfileActivation profileActivation>;

        virtualinvoke $stack2.<org.apache.maven.execution.ProfileActivation: void overwriteActiveProfiles(java.util.List)>(activeProfiles);

     label1:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setInactiveProfiles(java.util.List)
    {
        java.util.List inactiveProfiles;
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProfileActivation $stack2;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        inactiveProfiles := @parameter0: java.util.List;

        if inactiveProfiles == null goto label1;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProfileActivation profileActivation>;

        virtualinvoke $stack2.<org.apache.maven.execution.ProfileActivation: void overwriteInactiveProfiles(java.util.List)>(inactiveProfiles);

     label1:
        return this;
    }

    public org.apache.maven.execution.ProjectActivation getProjectActivation()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProjectActivation $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProjectActivation projectActivation>;

        return $stack1;
    }

    public org.apache.maven.execution.ProfileActivation getProfileActivation()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProfileActivation $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProfileActivation profileActivation>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setRemoteRepositories(java.util.List)
    {
        java.util.List remoteRepositories;
        DefaultMavenExecutionRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        remoteRepositories := @parameter0: java.util.List;

        if remoteRepositories == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(remoteRepositories);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List remoteRepositories> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List remoteRepositories> = null;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setPluginArtifactRepositories(java.util.List)
    {
        java.util.List pluginArtifactRepositories;
        DefaultMavenExecutionRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        pluginArtifactRepositories := @parameter0: java.util.List;

        if pluginArtifactRepositories == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(pluginArtifactRepositories);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginArtifactRepositories> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginArtifactRepositories> = null;

     label2:
        return this;
    }

    public void setProjectBuildingConfiguration(org.apache.maven.project.ProjectBuildingRequest)
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.project.ProjectBuildingRequest projectBuildingConfiguration;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        projectBuildingConfiguration := @parameter0: org.apache.maven.project.ProjectBuildingRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest> = projectBuildingConfiguration;

        return;
    }

    public java.util.List getActiveProfiles()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProfileActivation $stack1;
        java.util.List $stack2;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProfileActivation profileActivation>;

        $stack2 = virtualinvoke $stack1.<org.apache.maven.execution.ProfileActivation: java.util.List getActiveProfiles()>();

        return $stack2;
    }

    public java.util.List getInactiveProfiles()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProfileActivation $stack1;
        java.util.List $stack2;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProfileActivation profileActivation>;

        $stack2 = virtualinvoke $stack1.<org.apache.maven.execution.ProfileActivation: java.util.List getInactiveProfiles()>();

        return $stack2;
    }

    public org.eclipse.aether.transfer.TransferListener getTransferListener()
    {
        DefaultMavenExecutionRequest this;
        org.eclipse.aether.transfer.TransferListener $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.eclipse.aether.transfer.TransferListener transferListener>;

        return $stack1;
    }

    public int getLoggingLevel()
    {
        DefaultMavenExecutionRequest this;
        int $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: int loggingLevel>;

        return $stack1;
    }

    public boolean isOffline()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean offline>;

        return $stack1;
    }

    public boolean isUpdateSnapshots()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean updateSnapshots>;

        return $stack1;
    }

    public boolean isNoSnapshotUpdates()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean noSnapshotUpdates>;

        return $stack1;
    }

    public java.lang.String getGlobalChecksumPolicy()
    {
        DefaultMavenExecutionRequest this;
        java.lang.String $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String globalChecksumPolicy>;

        return $stack1;
    }

    public boolean isRecursive()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean recursive>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setBaseDirectory(java.io.File)
    {
        DefaultMavenExecutionRequest this;
        java.io.File basedir;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        basedir := @parameter0: java.io.File;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File basedir> = basedir;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setStartTime(java.util.Date)
    {
        DefaultMavenExecutionRequest this;
        java.util.Date startTime;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        startTime := @parameter0: java.util.Date;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Date startTime> = startTime;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setShowErrors(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean showErrors;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        showErrors := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean showErrors> = showErrors;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setGoals(java.util.List)
    {
        java.util.List goals;
        DefaultMavenExecutionRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        goals := @parameter0: java.util.List;

        if goals == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(goals);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List goals> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List goals> = null;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        java.lang.String $stack3;
        java.io.File $stack4, $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        localRepository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.artifact.repository.ArtifactRepository localRepository> = localRepository;

        if localRepository == null goto label1;

        $u0 = new java.io.File;

        $stack3 = interfaceinvoke localRepository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getBasedir()>();

        specialinvoke $u0.<java.io.File: void <init>(java.lang.String)>($stack3);

        $stack4 = virtualinvoke $u0.<java.io.File: java.io.File getAbsoluteFile()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setLocalRepositoryPath(java.io.File)>($stack4);

     label1:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setLocalRepositoryPath(java.io.File)
    {
        DefaultMavenExecutionRequest this;
        java.io.File localRepository;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        localRepository := @parameter0: java.io.File;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File localRepositoryPath> = localRepository;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setLocalRepositoryPath(java.lang.String)
    {
        DefaultMavenExecutionRequest this;
        java.lang.String localRepository;
        java.io.File $stack2, $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        localRepository := @parameter0: java.lang.String;

        if localRepository == null goto label1;

        $u0 = new java.io.File;

        $stack2 = $u0;

        specialinvoke $u0.<java.io.File: void <init>(java.lang.String)>(localRepository);

        goto label2;

     label1:
        $stack2 = null;

     label2:
        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File localRepositoryPath> = $stack2;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setSystemProperties(java.util.Properties)
    {
        java.util.Properties properties, $stack2;
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        properties := @parameter0: java.util.Properties;

        if properties == null goto label1;

        $stack2 = staticinvoke <org.apache.maven.properties.internal.SystemProperties: java.util.Properties copyProperties(java.util.Properties)>(properties);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties systemProperties> = $stack2;

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties systemProperties> = null;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setUserProperties(java.util.Properties)
    {
        java.util.Properties userProperties, $stack3, $u0;
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        userProperties := @parameter0: java.util.Properties;

        if userProperties == null goto label1;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties userProperties> = $u0;

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack3 = $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties userProperties>;

        virtualinvoke $stack3.<java.util.Properties: void putAll(java.util.Map)>(userProperties);

        goto label2;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties userProperties> = null;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setReactorFailureBehavior(java.lang.String)
    {
        DefaultMavenExecutionRequest this;
        java.lang.String failureBehavior;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        failureBehavior := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String reactorFailureBehavior> = failureBehavior;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setSelectedProjects(java.util.List)
    {
        java.util.List selectedProjects;
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProjectActivation $stack2;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        selectedProjects := @parameter0: java.util.List;

        if selectedProjects == null goto label1;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProjectActivation projectActivation>;

        virtualinvoke $stack2.<org.apache.maven.execution.ProjectActivation: void overwriteActiveProjects(java.util.List)>(selectedProjects);

     label1:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setExcludedProjects(java.util.List)
    {
        java.util.List excludedProjects;
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ProjectActivation $stack2;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        excludedProjects := @parameter0: java.util.List;

        if excludedProjects == null goto label1;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ProjectActivation projectActivation>;

        virtualinvoke $stack2.<org.apache.maven.execution.ProjectActivation: void overwriteInactiveProjects(java.util.List)>(excludedProjects);

     label1:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setResume(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean resume;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        resume := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean resume> = resume;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setResumeFrom(java.lang.String)
    {
        DefaultMavenExecutionRequest this;
        java.lang.String project;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        project := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String resumeFrom> = project;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setMakeBehavior(java.lang.String)
    {
        DefaultMavenExecutionRequest this;
        java.lang.String makeBehavior;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        makeBehavior := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String makeBehavior> = makeBehavior;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addActiveProfile(java.lang.String)
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack2, $stack4;
        java.lang.String profile;
        boolean $stack3;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        profile := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getActiveProfiles()>();

        $stack3 = interfaceinvoke $stack2.<java.util.List: boolean contains(java.lang.Object)>(profile);

        if $stack3 != 0 goto label1;

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack4 = virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getActiveProfiles()>();

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>(profile);

     label1:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addInactiveProfile(java.lang.String)
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack2, $stack4;
        java.lang.String profile;
        boolean $stack3;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        profile := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getInactiveProfiles()>();

        $stack3 = interfaceinvoke $stack2.<java.util.List: boolean contains(java.lang.Object)>(profile);

        if $stack3 != 0 goto label1;

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack4 = virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getInactiveProfiles()>();

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>(profile);

     label1:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addActiveProfiles(java.util.List)
    {
        java.util.List profiles;
        java.util.Iterator l2;
        boolean $stack5;
        DefaultMavenExecutionRequest this;
        java.lang.Object $stack6;
        java.lang.String profile;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        profiles := @parameter0: java.util.List;

        l2 = interfaceinvoke profiles.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        profile = (java.lang.String) $stack6;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest addActiveProfile(java.lang.String)>(profile);

        goto label1;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addInactiveProfiles(java.util.List)
    {
        java.util.List profiles;
        java.util.Iterator l2;
        boolean $stack5;
        DefaultMavenExecutionRequest this;
        java.lang.Object $stack6;
        java.lang.String profile;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        profiles := @parameter0: java.util.List;

        l2 = interfaceinvoke profiles.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        profile = (java.lang.String) $stack6;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest addInactiveProfile(java.lang.String)>(profile);

        goto label1;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setUseReactor(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean reactorActive;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        reactorActive := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean useReactor> = reactorActive;

        return this;
    }

    public boolean useReactor()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean useReactor>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setPomFile(java.lang.String)
    {
        java.lang.String pomFilename;
        DefaultMavenExecutionRequest this;
        java.io.File $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        pomFilename := @parameter0: java.lang.String;

        if pomFilename == null goto label1;

        $u0 = new java.io.File;

        specialinvoke $u0.<java.io.File: void <init>(java.lang.String)>(pomFilename);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File pom> = $u0;

     label1:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setPom(java.io.File)
    {
        DefaultMavenExecutionRequest this;
        java.io.File pom;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        pom := @parameter0: java.io.File;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File pom> = pom;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setInteractiveMode(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean interactive;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        interactive := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean interactiveMode> = interactive;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setTransferListener(org.eclipse.aether.transfer.TransferListener)
    {
        DefaultMavenExecutionRequest this;
        org.eclipse.aether.transfer.TransferListener transferListener;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        transferListener := @parameter0: org.eclipse.aether.transfer.TransferListener;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.eclipse.aether.transfer.TransferListener transferListener> = transferListener;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setLoggingLevel(int)
    {
        DefaultMavenExecutionRequest this;
        int loggingLevel;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        loggingLevel := @parameter0: int;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: int loggingLevel> = loggingLevel;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setOffline(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean offline;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        offline := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean offline> = offline;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setUpdateSnapshots(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean updateSnapshots;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        updateSnapshots := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean updateSnapshots> = updateSnapshots;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setNoSnapshotUpdates(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean noSnapshotUpdates;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        noSnapshotUpdates := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean noSnapshotUpdates> = noSnapshotUpdates;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setGlobalChecksumPolicy(java.lang.String)
    {
        DefaultMavenExecutionRequest this;
        java.lang.String globalChecksumPolicy;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        globalChecksumPolicy := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String globalChecksumPolicy> = globalChecksumPolicy;

        return this;
    }

    public java.util.List getProxies()
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List proxies>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List proxies> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List proxies>;

        return $stack2;
    }

    public org.apache.maven.execution.MavenExecutionRequest setProxies(java.util.List)
    {
        java.util.List proxies;
        DefaultMavenExecutionRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        proxies := @parameter0: java.util.List;

        if proxies == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(proxies);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List proxies> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List proxies> = null;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addProxy(org.apache.maven.settings.Proxy)
    {
        org.apache.maven.settings.Proxy proxy, p;
        DefaultMavenExecutionRequest this;
        java.util.List $stack5, $stack8;
        java.util.Iterator l2;
        boolean $stack7, $stack15;
        java.lang.Object $stack10;
        java.lang.String $stack11, $stack13, $stack14;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        proxy := @parameter0: org.apache.maven.settings.Proxy;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(proxy, "proxy cannot be null");

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getProxies()>();

        l2 = interfaceinvoke $stack5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack10 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        p = (org.apache.maven.settings.Proxy) $stack10;

        $stack11 = virtualinvoke p.<org.apache.maven.settings.Proxy: java.lang.String getId()>();

        if $stack11 == null goto label2;

        $stack13 = virtualinvoke p.<org.apache.maven.settings.Proxy: java.lang.String getId()>();

        $stack14 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getId()>();

        $stack15 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>($stack14);

        if $stack15 == 0 goto label2;

        return this;

     label2:
        goto label1;

     label3:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack8 = virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getProxies()>();

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>(proxy);

        return this;
    }

    public java.util.List getServers()
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List servers>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List servers> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List servers>;

        return $stack2;
    }

    public org.apache.maven.execution.MavenExecutionRequest setServers(java.util.List)
    {
        java.util.List servers;
        DefaultMavenExecutionRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        servers := @parameter0: java.util.List;

        if servers == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(servers);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List servers> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List servers> = null;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addServer(org.apache.maven.settings.Server)
    {
        org.apache.maven.settings.Server server, p;
        DefaultMavenExecutionRequest this;
        java.util.List $stack5, $stack8;
        java.util.Iterator l2;
        boolean $stack7, $stack15;
        java.lang.Object $stack10;
        java.lang.String $stack11, $stack13, $stack14;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        server := @parameter0: org.apache.maven.settings.Server;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(server, "server cannot be null");

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getServers()>();

        l2 = interfaceinvoke $stack5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack10 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        p = (org.apache.maven.settings.Server) $stack10;

        $stack11 = virtualinvoke p.<org.apache.maven.settings.Server: java.lang.String getId()>();

        if $stack11 == null goto label2;

        $stack13 = virtualinvoke p.<org.apache.maven.settings.Server: java.lang.String getId()>();

        $stack14 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getId()>();

        $stack15 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>($stack14);

        if $stack15 == 0 goto label2;

        return this;

     label2:
        goto label1;

     label3:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack8 = virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getServers()>();

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>(server);

        return this;
    }

    public java.util.List getMirrors()
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List mirrors>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List mirrors> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List mirrors>;

        return $stack2;
    }

    public org.apache.maven.execution.MavenExecutionRequest setMirrors(java.util.List)
    {
        java.util.List mirrors;
        DefaultMavenExecutionRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        mirrors := @parameter0: java.util.List;

        if mirrors == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(mirrors);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List mirrors> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List mirrors> = null;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addMirror(org.apache.maven.settings.Mirror)
    {
        org.apache.maven.settings.Mirror mirror, p;
        DefaultMavenExecutionRequest this;
        java.util.List $stack5, $stack8;
        java.util.Iterator l2;
        boolean $stack7, $stack15;
        java.lang.Object $stack10;
        java.lang.String $stack11, $stack13, $stack14;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        mirror := @parameter0: org.apache.maven.settings.Mirror;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(mirror, "mirror cannot be null");

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getMirrors()>();

        l2 = interfaceinvoke $stack5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack10 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        p = (org.apache.maven.settings.Mirror) $stack10;

        $stack11 = virtualinvoke p.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        if $stack11 == null goto label2;

        $stack13 = virtualinvoke p.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        $stack14 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        $stack15 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>($stack14);

        if $stack15 == 0 goto label2;

        return this;

     label2:
        goto label1;

     label3:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack8 = virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getMirrors()>();

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>(mirror);

        return this;
    }

    public java.util.List getProfiles()
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List profiles>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List profiles> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List profiles>;

        return $stack2;
    }

    public org.apache.maven.execution.MavenExecutionRequest setProfiles(java.util.List)
    {
        java.util.List profiles;
        DefaultMavenExecutionRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        profiles := @parameter0: java.util.List;

        if profiles == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(profiles);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List profiles> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List profiles> = null;

     label2:
        return this;
    }

    public java.util.List getPluginGroups()
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginGroups>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginGroups> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginGroups>;

        return $stack2;
    }

    public org.apache.maven.execution.MavenExecutionRequest setPluginGroups(java.util.List)
    {
        java.util.List pluginGroups;
        DefaultMavenExecutionRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        pluginGroups := @parameter0: java.util.List;

        if pluginGroups == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(pluginGroups);

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginGroups> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginGroups> = null;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addPluginGroup(java.lang.String)
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack2, $stack4;
        java.lang.String pluginGroup;
        boolean $stack3;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        pluginGroup := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getPluginGroups()>();

        $stack3 = interfaceinvoke $stack2.<java.util.List: boolean contains(java.lang.Object)>(pluginGroup);

        if $stack3 != 0 goto label1;

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack4 = virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getPluginGroups()>();

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>(pluginGroup);

     label1:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addPluginGroups(java.util.List)
    {
        java.util.List pluginGroups;
        java.util.Iterator l2;
        boolean $stack5;
        DefaultMavenExecutionRequest this;
        java.lang.Object $stack6;
        java.lang.String pluginGroup;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        pluginGroups := @parameter0: java.util.List;

        l2 = interfaceinvoke pluginGroups.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        pluginGroup = (java.lang.String) $stack6;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest addPluginGroup(java.lang.String)>(pluginGroup);

        goto label1;

     label2:
        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setRecursive(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean recursive;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        recursive := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean recursive> = recursive;

        return this;
    }

    public boolean isProjectPresent()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean isProjectPresent>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setProjectPresent(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean projectPresent;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        projectPresent := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean isProjectPresent> = projectPresent;

        return this;
    }

    public java.io.File getUserSettingsFile()
    {
        DefaultMavenExecutionRequest this;
        java.io.File $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File userSettingsFile>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setUserSettingsFile(java.io.File)
    {
        DefaultMavenExecutionRequest this;
        java.io.File userSettingsFile;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        userSettingsFile := @parameter0: java.io.File;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File userSettingsFile> = userSettingsFile;

        return this;
    }

    public java.io.File getGlobalSettingsFile()
    {
        DefaultMavenExecutionRequest this;
        java.io.File $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File globalSettingsFile>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setGlobalSettingsFile(java.io.File)
    {
        DefaultMavenExecutionRequest this;
        java.io.File globalSettingsFile;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        globalSettingsFile := @parameter0: java.io.File;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File globalSettingsFile> = globalSettingsFile;

        return this;
    }

    public java.io.File getUserToolchainsFile()
    {
        DefaultMavenExecutionRequest this;
        java.io.File $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File userToolchainsFile>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setUserToolchainsFile(java.io.File)
    {
        DefaultMavenExecutionRequest this;
        java.io.File userToolchainsFile;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        userToolchainsFile := @parameter0: java.io.File;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File userToolchainsFile> = userToolchainsFile;

        return this;
    }

    public java.io.File getGlobalToolchainsFile()
    {
        DefaultMavenExecutionRequest this;
        java.io.File $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File globalToolchainsFile>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setGlobalToolchainsFile(java.io.File)
    {
        DefaultMavenExecutionRequest this;
        java.io.File globalToolchainsFile;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        globalToolchainsFile := @parameter0: java.io.File;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File globalToolchainsFile> = globalToolchainsFile;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest addRemoteRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack4, $stack7;
        java.util.Iterator l2;
        boolean $stack6, $stack14;
        org.apache.maven.artifact.repository.ArtifactRepository repository, repo;
        java.lang.Object $stack9;
        java.lang.String $stack10, $stack12, $stack13;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        repository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getRemoteRepositories()>();

        l2 = interfaceinvoke $stack4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label3;

        $stack9 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        repo = (org.apache.maven.artifact.repository.ArtifactRepository) $stack9;

        $stack10 = interfaceinvoke repo.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        if $stack10 == null goto label2;

        $stack12 = interfaceinvoke repo.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        $stack13 = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        $stack14 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>($stack13);

        if $stack14 == 0 goto label2;

        return this;

     label2:
        goto label1;

     label3:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack7 = virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getRemoteRepositories()>();

        interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(repository);

        return this;
    }

    public java.util.List getRemoteRepositories()
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List remoteRepositories>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List remoteRepositories> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List remoteRepositories>;

        return $stack2;
    }

    public org.apache.maven.execution.MavenExecutionRequest addPluginArtifactRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack4, $stack7;
        java.util.Iterator l2;
        boolean $stack6, $stack14;
        org.apache.maven.artifact.repository.ArtifactRepository repository, repo;
        java.lang.Object $stack9;
        java.lang.String $stack10, $stack12, $stack13;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        repository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getPluginArtifactRepositories()>();

        l2 = interfaceinvoke $stack4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label3;

        $stack9 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        repo = (org.apache.maven.artifact.repository.ArtifactRepository) $stack9;

        $stack10 = interfaceinvoke repo.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        if $stack10 == null goto label2;

        $stack12 = interfaceinvoke repo.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        $stack13 = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        $stack14 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>($stack13);

        if $stack14 == 0 goto label2;

        return this;

     label2:
        goto label1;

     label3:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack7 = virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getPluginArtifactRepositories()>();

        interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>(repository);

        return this;
    }

    public java.util.List getPluginArtifactRepositories()
    {
        DefaultMavenExecutionRequest this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginArtifactRepositories>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginArtifactRepositories> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List pluginArtifactRepositories>;

        return $stack2;
    }

    public org.apache.maven.project.ProjectBuildingRequest getProjectBuildingRequest()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.project.ProjectBuildingRequest $stack1, $stack2, $stack4, $stack7, $stack10, $stack13, $stack16, $stack19, $stack21, $stack23, $stack25, $stack27, $r2;
        org.apache.maven.artifact.repository.ArtifactRepository $stack5;
        java.util.Properties $stack8, $stack11;
        java.util.List $stack14, $stack17, $stack20, $stack22, $stack24;
        java.util.Date $stack28;
        org.apache.maven.project.DefaultProjectBuildingRequest $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        if $stack1 != null goto label1;

        $u0 = new org.apache.maven.project.DefaultProjectBuildingRequest;

        specialinvoke $u0.<org.apache.maven.project.DefaultProjectBuildingRequest: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r2 = (org.apache.maven.project.ProjectBuildingRequest) $u0;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest> = $r2;

        $r3 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack4 = $r3.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $r4 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack5 = virtualinvoke $r4.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        interfaceinvoke $stack4.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>($stack5);

        $r5 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack7 = $r5.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $r6 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack8 = virtualinvoke $r6.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties getSystemProperties()>();

        interfaceinvoke $stack7.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setSystemProperties(java.util.Properties)>($stack8);

        $r7 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack10 = $r7.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $r8 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack11 = virtualinvoke $r8.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Properties getUserProperties()>();

        interfaceinvoke $stack10.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setUserProperties(java.util.Properties)>($stack11);

        $r9 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack13 = $r9.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $r10 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack14 = virtualinvoke $r10.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getRemoteRepositories()>();

        interfaceinvoke $stack13.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setRemoteRepositories(java.util.List)>($stack14);

        $r11 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack16 = $r11.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $r12 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack17 = virtualinvoke $r12.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getPluginArtifactRepositories()>();

        interfaceinvoke $stack16.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setPluginArtifactRepositories(java.util.List)>($stack17);

        $r13 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack19 = $r13.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $r14 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack20 = virtualinvoke $r14.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getActiveProfiles()>();

        interfaceinvoke $stack19.<org.apache.maven.project.ProjectBuildingRequest: void setActiveProfileIds(java.util.List)>($stack20);

        $r15 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack21 = $r15.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $r16 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack22 = virtualinvoke $r16.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getInactiveProfiles()>();

        interfaceinvoke $stack21.<org.apache.maven.project.ProjectBuildingRequest: void setInactiveProfileIds(java.util.List)>($stack22);

        $r17 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack23 = $r17.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $r18 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack24 = virtualinvoke $r18.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getProfiles()>();

        interfaceinvoke $stack23.<org.apache.maven.project.ProjectBuildingRequest: void setProfiles(java.util.List)>($stack24);

        $r19 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack25 = $r19.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        interfaceinvoke $stack25.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setProcessPlugins(boolean)>(1);

        $r20 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack27 = $r20.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $r21 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack28 = virtualinvoke $r21.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Date getStartTime()>();

        interfaceinvoke $stack27.<org.apache.maven.project.ProjectBuildingRequest: void setBuildStartTime(java.util.Date)>($stack28);

     label1:
        $r22 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r22.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        return $stack2;
    }

    public org.apache.maven.execution.MavenExecutionRequest addProfile(org.apache.maven.model.Profile)
    {
        org.apache.maven.model.Profile profile, p;
        DefaultMavenExecutionRequest this;
        java.util.List $stack5, $stack8;
        java.util.Iterator l2;
        boolean $stack7, $stack15;
        java.lang.Object $stack10;
        java.lang.String $stack11, $stack13, $stack14;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1;

        this := @this: DefaultMavenExecutionRequest;

        profile := @parameter0: org.apache.maven.model.Profile;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(profile, "profile cannot be null");

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getProfiles()>();

        l2 = interfaceinvoke $stack5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack10 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        p = (org.apache.maven.model.Profile) $stack10;

        $stack11 = virtualinvoke p.<org.apache.maven.model.Profile: java.lang.String getId()>();

        if $stack11 == null goto label2;

        $stack13 = virtualinvoke p.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack14 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack15 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>($stack14);

        if $stack15 == 0 goto label2;

        return this;

     label2:
        goto label1;

     label3:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack8 = virtualinvoke $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.List getProfiles()>();

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>(profile);

        return this;
    }

    public org.eclipse.aether.RepositoryCache getRepositoryCache()
    {
        DefaultMavenExecutionRequest this;
        org.eclipse.aether.RepositoryCache $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.eclipse.aether.RepositoryCache repositoryCache>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setRepositoryCache(org.eclipse.aether.RepositoryCache)
    {
        DefaultMavenExecutionRequest this;
        org.eclipse.aether.RepositoryCache repositoryCache;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        repositoryCache := @parameter0: org.eclipse.aether.RepositoryCache;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.eclipse.aether.RepositoryCache repositoryCache> = repositoryCache;

        return this;
    }

    public org.apache.maven.execution.ExecutionListener getExecutionListener()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ExecutionListener $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ExecutionListener executionListener>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setExecutionListener(org.apache.maven.execution.ExecutionListener)
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.execution.ExecutionListener executionListener;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        executionListener := @parameter0: org.apache.maven.execution.ExecutionListener;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.ExecutionListener executionListener> = executionListener;

        return this;
    }

    public void setDegreeOfConcurrency(int)
    {
        DefaultMavenExecutionRequest this;
        int degreeOfConcurrency;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        degreeOfConcurrency := @parameter0: int;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: int degreeOfConcurrency> = degreeOfConcurrency;

        return;
    }

    public int getDegreeOfConcurrency()
    {
        DefaultMavenExecutionRequest this;
        int $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: int degreeOfConcurrency>;

        return $stack1;
    }

    public org.eclipse.aether.repository.WorkspaceReader getWorkspaceReader()
    {
        DefaultMavenExecutionRequest this;
        org.eclipse.aether.repository.WorkspaceReader $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.eclipse.aether.repository.WorkspaceReader workspaceReader>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setWorkspaceReader(org.eclipse.aether.repository.WorkspaceReader)
    {
        DefaultMavenExecutionRequest this;
        org.eclipse.aether.repository.WorkspaceReader workspaceReader;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        workspaceReader := @parameter0: org.eclipse.aether.repository.WorkspaceReader;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.eclipse.aether.repository.WorkspaceReader workspaceReader> = workspaceReader;

        return this;
    }

    public boolean isCacheTransferError()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean cacheTransferError>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setCacheTransferError(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean cacheTransferError;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        cacheTransferError := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean cacheTransferError> = cacheTransferError;

        return this;
    }

    public boolean isCacheNotFound()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean cacheNotFound>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setCacheNotFound(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean cacheNotFound;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        cacheNotFound := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean cacheNotFound> = cacheNotFound;

        return this;
    }

    public boolean isUseLegacyLocalRepository()
    {
        DefaultMavenExecutionRequest this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean useLegacyLocalRepositoryManager>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setUseLegacyLocalRepository(boolean)
    {
        DefaultMavenExecutionRequest this;
        boolean useLegacyLocalRepositoryManager;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        useLegacyLocalRepositoryManager := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: boolean useLegacyLocalRepositoryManager> = useLegacyLocalRepositoryManager;

        return this;
    }

    public org.apache.maven.execution.MavenExecutionRequest setBuilderId(java.lang.String)
    {
        DefaultMavenExecutionRequest this;
        java.lang.String builderId;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        builderId := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String builderId> = builderId;

        return this;
    }

    public java.lang.String getBuilderId()
    {
        DefaultMavenExecutionRequest this;
        java.lang.String $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.lang.String builderId>;

        return $stack1;
    }

    public java.util.Map getToolchains()
    {
        DefaultMavenExecutionRequest this;
        java.util.Map $stack1, $stack2;
        java.util.HashMap $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Map toolchains>;

        if $stack1 != null goto label1;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Map toolchains> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Map toolchains>;

        return $stack2;
    }

    public org.apache.maven.execution.MavenExecutionRequest setToolchains(java.util.Map)
    {
        DefaultMavenExecutionRequest this;
        java.util.Map toolchains;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        toolchains := @parameter0: java.util.Map;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Map toolchains> = toolchains;

        return this;
    }

    public void setMultiModuleProjectDirectory(java.io.File)
    {
        DefaultMavenExecutionRequest this;
        java.io.File directory;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        directory := @parameter0: java.io.File;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File multiModuleProjectDirectory> = directory;

        return;
    }

    public java.io.File getMultiModuleProjectDirectory()
    {
        DefaultMavenExecutionRequest this;
        java.io.File $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.io.File multiModuleProjectDirectory>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionRequest setEventSpyDispatcher(org.apache.maven.eventspy.internal.EventSpyDispatcher)
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.eventspy.internal.EventSpyDispatcher eventSpyDispatcher;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        eventSpyDispatcher := @parameter0: org.apache.maven.eventspy.internal.EventSpyDispatcher;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.eventspy.internal.EventSpyDispatcher eventSpyDispatcher> = eventSpyDispatcher;

        return this;
    }

    public org.apache.maven.eventspy.internal.EventSpyDispatcher getEventSpyDispatcher()
    {
        DefaultMavenExecutionRequest this;
        org.apache.maven.eventspy.internal.EventSpyDispatcher $stack1;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.eventspy.internal.EventSpyDispatcher eventSpyDispatcher>;

        return $stack1;
    }

    public java.util.Map getData()
    {
        DefaultMavenExecutionRequest this;
        java.util.Map $stack1, $stack2;
        java.util.HashMap $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $r0, $r1, $r2;

        this := @this: DefaultMavenExecutionRequest;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Map data>;

        if $stack1 != null goto label1;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Map data> = $u0;

     label1:
        $r2 = (org.apache.maven.execution.DefaultMavenExecutionRequest) this;

        $stack2 = $r2.<org.apache.maven.execution.DefaultMavenExecutionRequest: java.util.Map data>;

        return $stack2;
    }
}
