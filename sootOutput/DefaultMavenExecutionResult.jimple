public class DefaultMavenExecutionResult extends java.lang.Object implements org.apache.maven.execution.MavenExecutionResult
{
    private org.apache.maven.project.MavenProject project;
    private java.util.List topologicallySortedProjects;
    private org.apache.maven.project.DependencyResolutionResult dependencyResolutionResult;
    private final java.util.List exceptions;
    private final java.util.Map buildSummaries;
    private boolean canResume;

    public void <init>()
    {
        DefaultMavenExecutionResult this;
        java.util.List $stack1;
        java.util.Map $stack4;
        java.util.concurrent.CopyOnWriteArrayList $u0;
        java.util.IdentityHashMap $u1;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0, $r1, $r2, $r3;

        this := @this: DefaultMavenExecutionResult;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.List topologicallySortedProjects> = $stack1;

        $u0 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $u0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        $r1 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $r1.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.List exceptions> = $u0;

        $u1 = new java.util.IdentityHashMap;

        specialinvoke $u1.<java.util.IdentityHashMap: void <init>()>();

        $stack4 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($u1);

        $r2 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $r2.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.Map buildSummaries> = $stack4;

        $r3 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $r3.<org.apache.maven.execution.DefaultMavenExecutionResult: boolean canResume> = 0;

        return;
    }

    public org.apache.maven.execution.MavenExecutionResult setProject(org.apache.maven.project.MavenProject)
    {
        DefaultMavenExecutionResult this;
        org.apache.maven.project.MavenProject project;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        project := @parameter0: org.apache.maven.project.MavenProject;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: org.apache.maven.project.MavenProject project> = project;

        return this;
    }

    public org.apache.maven.project.MavenProject getProject()
    {
        DefaultMavenExecutionResult this;
        org.apache.maven.project.MavenProject $stack1;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: org.apache.maven.project.MavenProject project>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionResult setTopologicallySortedProjects(java.util.List)
    {
        DefaultMavenExecutionResult this;
        java.util.List topologicallySortedProjects;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        topologicallySortedProjects := @parameter0: java.util.List;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.List topologicallySortedProjects> = topologicallySortedProjects;

        return this;
    }

    public java.util.List getTopologicallySortedProjects()
    {
        DefaultMavenExecutionResult this;
        java.util.List $stack1, $stack2, $stack3;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0, $r1;

        this := @this: DefaultMavenExecutionResult;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.List topologicallySortedProjects>;

        if null != $stack1 goto label1;

        $stack3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        goto label2;

     label1:
        $r1 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack2 = $r1.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.List topologicallySortedProjects>;

        $stack3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack2);

     label2:
        return $stack3;
    }

    public org.apache.maven.project.DependencyResolutionResult getDependencyResolutionResult()
    {
        DefaultMavenExecutionResult this;
        org.apache.maven.project.DependencyResolutionResult $stack1;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: org.apache.maven.project.DependencyResolutionResult dependencyResolutionResult>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionResult setDependencyResolutionResult(org.apache.maven.project.DependencyResolutionResult)
    {
        DefaultMavenExecutionResult this;
        org.apache.maven.project.DependencyResolutionResult dependencyResolutionResult;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        dependencyResolutionResult := @parameter0: org.apache.maven.project.DependencyResolutionResult;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: org.apache.maven.project.DependencyResolutionResult dependencyResolutionResult> = dependencyResolutionResult;

        return this;
    }

    public java.util.List getExceptions()
    {
        DefaultMavenExecutionResult this;
        java.util.List $stack1;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.List exceptions>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionResult addException(java.lang.Throwable)
    {
        DefaultMavenExecutionResult this;
        java.lang.Throwable t;
        java.util.List $stack2;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        t := @parameter0: java.lang.Throwable;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack2 = $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.List exceptions>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(t);

        return this;
    }

    public boolean hasExceptions()
    {
        DefaultMavenExecutionResult this;
        java.util.List $stack1;
        boolean $stack2, $stack3;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.List getExceptions()>();

        $stack2 = interfaceinvoke $stack1.<java.util.List: boolean isEmpty()>();

        if $stack2 != 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    public org.apache.maven.execution.BuildSummary getBuildSummary(org.apache.maven.project.MavenProject)
    {
        DefaultMavenExecutionResult this;
        org.apache.maven.project.MavenProject project;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.apache.maven.execution.BuildSummary $stack4;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        project := @parameter0: org.apache.maven.project.MavenProject;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack2 = $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.Map buildSummaries>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(project);

        $stack4 = (org.apache.maven.execution.BuildSummary) $stack3;

        return $stack4;
    }

    public void addBuildSummary(org.apache.maven.execution.BuildSummary)
    {
        DefaultMavenExecutionResult this;
        org.apache.maven.execution.BuildSummary summary;
        java.util.Map $stack2;
        org.apache.maven.project.MavenProject $stack3;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        summary := @parameter0: org.apache.maven.execution.BuildSummary;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack2 = $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: java.util.Map buildSummaries>;

        $stack3 = virtualinvoke summary.<org.apache.maven.execution.BuildSummary: org.apache.maven.project.MavenProject getProject()>();

        interfaceinvoke $stack2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, summary);

        return;
    }

    public boolean canResume()
    {
        DefaultMavenExecutionResult this;
        boolean $stack1;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $stack1 = $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: boolean canResume>;

        return $stack1;
    }

    public void setCanResume(boolean)
    {
        DefaultMavenExecutionResult this;
        boolean canResume;
        org.apache.maven.execution.DefaultMavenExecutionResult $r0;

        this := @this: DefaultMavenExecutionResult;

        canResume := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.DefaultMavenExecutionResult) this;

        $r0.<org.apache.maven.execution.DefaultMavenExecutionResult: boolean canResume> = canResume;

        return;
    }
}
