public class DefaultMavenExecutionTest extends java.lang.Object
{

    public void <init>()
    {
        DefaultMavenExecutionTest this;

        this := @this: DefaultMavenExecutionTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testCopyDefault()
    {
        org.apache.maven.execution.MavenExecutionRequest copy, $r0;
        DefaultMavenExecutionTest this;
        org.apache.maven.execution.DefaultMavenExecutionRequest $u0;

        this := @this: DefaultMavenExecutionTest;

        $u0 = new org.apache.maven.execution.DefaultMavenExecutionRequest;

        specialinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionRequest: void <init>()>();

        $r0 = (org.apache.maven.execution.MavenExecutionRequest) $u0;

        copy = staticinvoke <org.apache.maven.execution.DefaultMavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest copy(org.apache.maven.execution.MavenExecutionRequest)>($r0);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(copy);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotSame(java.lang.Object,java.lang.Object)>(copy, $u0);

        return;
    }

    public void testResultWithNullTopologicallySortedProjectsIsEmptyList()
    {
        java.util.List projects;
        org.hamcrest.Matcher $stack6, $stack7;
        DefaultMavenExecutionTest this;
        org.apache.maven.execution.DefaultMavenExecutionResult $u0;
        org.apache.maven.execution.MavenExecutionResult $r0, $r1;

        this := @this: DefaultMavenExecutionTest;

        $u0 = new org.apache.maven.execution.DefaultMavenExecutionResult;

        specialinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionResult: void <init>()>();

        $r0 = (org.apache.maven.execution.MavenExecutionResult) $u0;

        interfaceinvoke $r0.<org.apache.maven.execution.MavenExecutionResult: org.apache.maven.execution.MavenExecutionResult setTopologicallySortedProjects(java.util.List)>(null);

        $r1 = (org.apache.maven.execution.MavenExecutionResult) $u0;

        projects = interfaceinvoke $r1.<org.apache.maven.execution.MavenExecutionResult: java.util.List getTopologicallySortedProjects()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(projects);

        $stack6 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher empty()>();

        $stack7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack6);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(projects, $stack7);

        return;
    }
}
