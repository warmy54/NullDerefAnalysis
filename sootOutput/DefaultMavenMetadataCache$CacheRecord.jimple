public class DefaultMavenMetadataCache$CacheRecord extends java.lang.Object
{
    private org.apache.maven.artifact.Artifact pomArtifact;
    private org.apache.maven.artifact.Artifact relocatedArtifact;
    private java.util.List artifacts;
    private java.util.Map managedVersions;
    private java.util.List remoteRepositories;
    private long length;
    private long timestamp;
    final org.apache.maven.project.artifact.DefaultMavenMetadataCache this$0;

    void <init>(org.apache.maven.project.artifact.DefaultMavenMetadataCache, org.apache.maven.artifact.Artifact, org.apache.maven.artifact.Artifact, java.util.Set, java.util.Map, java.util.List)
    {
        DefaultMavenMetadataCache$CacheRecord this;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache this$0;
        org.apache.maven.artifact.Artifact pomArtifact, $stack8, relocatedArtifact, $stack9;
        java.util.Set artifacts;
        java.util.Collection $stack11;
        java.util.List $stack12, remoteRepositories;
        java.util.Map managedVersions, $stack23;
        java.io.File pomFile;
        boolean $stack15;
        long $stack20, $stack21;
        java.util.ArrayList $u0, $u1;
        java.util.LinkedHashMap $u2;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: DefaultMavenMetadataCache$CacheRecord;

        this$0 := @parameter0: org.apache.maven.project.artifact.DefaultMavenMetadataCache;

        pomArtifact := @parameter1: org.apache.maven.artifact.Artifact;

        relocatedArtifact := @parameter2: org.apache.maven.artifact.Artifact;

        artifacts := @parameter3: java.util.Set;

        managedVersions := @parameter4: java.util.Map;

        remoteRepositories := @parameter5: java.util.List;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: org.apache.maven.project.artifact.DefaultMavenMetadataCache this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack8 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: org.apache.maven.artifact.Artifact copyArtifact(org.apache.maven.artifact.Artifact)>(pomArtifact);

        $r1 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r1.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: org.apache.maven.artifact.Artifact pomArtifact> = $stack8;

        $stack9 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: org.apache.maven.artifact.Artifact copyArtifactSafe(org.apache.maven.artifact.Artifact)>(relocatedArtifact);

        $r2 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r2.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: org.apache.maven.artifact.Artifact relocatedArtifact> = $stack9;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $stack11 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.util.Collection copyArtifacts(java.util.Collection,java.util.Collection)>(artifacts, $u0);

        $stack12 = (java.util.List) $stack11;

        $r3 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r3.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.List artifacts> = $stack12;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>(java.util.Collection)>(remoteRepositories);

        $r4 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r4.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.List remoteRepositories> = $u1;

        $r5 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r5.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.Map managedVersions> = managedVersions;

        if managedVersions == null goto label1;

        $u2 = new java.util.LinkedHashMap;

        specialinvoke $u2.<java.util.LinkedHashMap: void <init>()>();

        $stack23 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.util.Map copyArtifacts(java.util.Map,java.util.Map)>(managedVersions, $u2);

        $r6 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r6.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.Map managedVersions> = $stack23;

     label1:
        pomFile = interfaceinvoke pomArtifact.<org.apache.maven.artifact.Artifact: java.io.File getFile()>();

        if pomFile == null goto label2;

        $stack15 = virtualinvoke pomFile.<java.io.File: boolean canRead()>();

        if $stack15 == 0 goto label2;

        $stack20 = virtualinvoke pomFile.<java.io.File: long length()>();

        $r7 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r7.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: long length> = $stack20;

        $stack21 = virtualinvoke pomFile.<java.io.File: long lastModified()>();

        $r8 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r8.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: long timestamp> = $stack21;

        goto label3;

     label2:
        $r9 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r9.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: long length> = -1L;

        $r10 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $r10.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: long timestamp> = -1L;

     label3:
        return;
    }

    public org.apache.maven.artifact.Artifact getArtifact()
    {
        DefaultMavenMetadataCache$CacheRecord this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord $r0;

        this := @this: DefaultMavenMetadataCache$CacheRecord;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: org.apache.maven.artifact.Artifact pomArtifact>;

        return $stack1;
    }

    public org.apache.maven.artifact.Artifact getRelocatedArtifact()
    {
        DefaultMavenMetadataCache$CacheRecord this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord $r0;

        this := @this: DefaultMavenMetadataCache$CacheRecord;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: org.apache.maven.artifact.Artifact relocatedArtifact>;

        return $stack1;
    }

    public java.util.List getArtifacts()
    {
        DefaultMavenMetadataCache$CacheRecord this;
        java.util.List $stack1;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord $r0;

        this := @this: DefaultMavenMetadataCache$CacheRecord;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.List artifacts>;

        return $stack1;
    }

    public java.util.Map getManagedVersions()
    {
        DefaultMavenMetadataCache$CacheRecord this;
        java.util.Map $stack1;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord $r0;

        this := @this: DefaultMavenMetadataCache$CacheRecord;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.Map managedVersions>;

        return $stack1;
    }

    public java.util.List getRemoteRepositories()
    {
        DefaultMavenMetadataCache$CacheRecord this;
        java.util.List $stack1;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord $r0;

        this := @this: DefaultMavenMetadataCache$CacheRecord;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.List remoteRepositories>;

        return $stack1;
    }

    public boolean isStale()
    {
        DefaultMavenMetadataCache$CacheRecord this;
        org.apache.maven.artifact.Artifact $stack6, $stack14;
        java.io.File pomFile;
        long $stack8, $stack10, $stack29, $stack30, $stack32, $stack33;
        byte $stack9, $stack11, $stack31, $stack34;
        boolean $stack13, snapshot, $stack18, $stack25, $stack35, $stack12;
        java.util.List $stack16;
        java.util.Iterator l3;
        java.lang.Object $stack21;
        org.apache.maven.artifact.repository.ArtifactRepository repository;
        java.lang.String $stack23, $stack24;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $stack22;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: DefaultMavenMetadataCache$CacheRecord;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack6 = $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: org.apache.maven.artifact.Artifact pomArtifact>;

        pomFile = interfaceinvoke $stack6.<org.apache.maven.artifact.Artifact: java.io.File getFile()>();

        if pomFile == null goto label09;

        $stack13 = virtualinvoke pomFile.<java.io.File: boolean canRead()>();

        if $stack13 == 0 goto label04;

        $r1 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack29 = $r1.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: long length>;

        $stack30 = virtualinvoke pomFile.<java.io.File: long length()>();

        $stack31 = $stack29 cmp $stack30;

        if $stack31 != 0 goto label01;

        $r2 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack32 = $r2.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: long timestamp>;

        $stack33 = virtualinvoke pomFile.<java.io.File: long lastModified()>();

        $stack34 = $stack32 cmp $stack33;

        if $stack34 == 0 goto label02;

     label01:
        $stack35 = 1;

        goto label03;

     label02:
        $stack35 = 0;

     label03:
        return $stack35;

     label04:
        $r3 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack14 = $r3.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: org.apache.maven.artifact.Artifact pomArtifact>;

        snapshot = interfaceinvoke $stack14.<org.apache.maven.artifact.Artifact: boolean isSnapshot()>();

        $r4 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack16 = $r4.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.List remoteRepositories>;

        l3 = interfaceinvoke $stack16.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $stack18 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack18 == 0 goto label09;

        $stack21 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        repository = (org.apache.maven.artifact.repository.ArtifactRepository) $stack21;

        if snapshot == 0 goto label06;

        $stack22 = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getSnapshots()>();

        goto label07;

     label06:
        $stack22 = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getReleases()>();

     label07:
        $stack23 = "always";

        $stack24 = virtualinvoke $stack22.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack25 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>($stack24);

        if $stack25 == 0 goto label08;

        return 1;

     label08:
        goto label05;

     label09:
        $r5 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack8 = $r5.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: long length>;

        $stack9 = $stack8 cmp -1L;

        if $stack9 != 0 goto label10;

        $r6 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) this;

        $stack10 = $r6.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: long timestamp>;

        $stack11 = $stack10 cmp -1L;

        if $stack11 == 0 goto label11;

     label10:
        $stack12 = 1;

        goto label12;

     label11:
        $stack12 = 0;

     label12:
        return $stack12;
    }
}
