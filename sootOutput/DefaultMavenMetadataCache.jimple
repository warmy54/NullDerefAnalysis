public class DefaultMavenMetadataCache extends java.lang.Object implements org.apache.maven.project.artifact.MavenMetadataCache
{
    protected final java.util.Map cache;

    public void <init>()
    {
        DefaultMavenMetadataCache this;
        java.util.concurrent.ConcurrentHashMap $u0;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache $r0;

        this := @this: DefaultMavenMetadataCache;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $u0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache) this;

        $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache: java.util.Map cache> = $u0;

        return;
    }

    private static int artifactHashCode(org.apache.maven.artifact.Artifact)
    {
        org.apache.maven.artifact.Artifact a;
        int $stack2, $stack4, $stack5, $stack7, $stack8, $stack10, $stack12, $stack14, $stack16, $stack18, $stack41, $stack43, result#2, $stack36, $stack30, $stack24;
        java.lang.String $stack3, $stack6, $stack9, $stack11, $stack13, $stack15, $stack29, $stack35, $stack42;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter $stack17, $stack23;
        boolean $stack19;
        byte $stack20;

        a := @parameter0: org.apache.maven.artifact.Artifact;

        $stack2 = 31 * 17;

        $stack3 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $stack4 = virtualinvoke $stack3.<java.lang.String: int hashCode()>();

        result#2 = $stack2 + $stack4;

        $stack5 = 31 * result#2;

        $stack6 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack7 = virtualinvoke $stack6.<java.lang.String: int hashCode()>();

        result#2 = $stack5 + $stack7;

        $stack8 = 31 * result#2;

        $stack9 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        $stack10 = virtualinvoke $stack9.<java.lang.String: int hashCode()>();

        result#2 = $stack8 + $stack10;

        $stack11 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        if $stack11 == null goto label1;

        $stack41 = 31 * result#2;

        $stack42 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        $stack43 = virtualinvoke $stack42.<java.lang.String: int hashCode()>();

        result#2 = $stack41 + $stack43;

     label1:
        $stack12 = 31 * result#2;

        $stack13 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        if $stack13 == null goto label2;

        $stack35 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        $stack36 = virtualinvoke $stack35.<java.lang.String: int hashCode()>();

        goto label3;

     label2:
        $stack36 = 0;

     label3:
        result#2 = $stack12 + $stack36;

        $stack14 = 31 * result#2;

        $stack15 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        if $stack15 == null goto label4;

        $stack29 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        $stack30 = virtualinvoke $stack29.<java.lang.String: int hashCode()>();

        goto label5;

     label4:
        $stack30 = 0;

     label5:
        result#2 = $stack14 + $stack30;

        $stack16 = 31 * result#2;

        $stack17 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter()>();

        if $stack17 == null goto label6;

        $stack23 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter()>();

        $stack24 = virtualinvoke $stack23.<java.lang.Object: int hashCode()>();

        goto label7;

     label6:
        $stack24 = 0;

     label7:
        result#2 = $stack16 + $stack24;

        $stack18 = 31 * result#2;

        $stack19 = interfaceinvoke a.<org.apache.maven.artifact.Artifact: boolean isOptional()>();

        if $stack19 == 0 goto label8;

        $stack20 = 1;

        goto label9;

     label8:
        $stack20 = 0;

     label9:
        result#2 = $stack18 + $stack20;

        return result#2;
    }

    private static boolean artifactEquals(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.Artifact)
    {
        org.apache.maven.artifact.Artifact a1, a2;
        java.lang.String $stack2, $stack3, $stack5, $stack6, $stack9, $stack10, $stack12, $stack13, $stack15, $stack16, $stack18, $stack19;
        boolean $stack4, $stack7, $stack11, $stack14, $stack17, $stack20, $stack23, $stack24, $stack25, $stack8;
        org.apache.maven.artifact.resolver.filter.ArtifactFilter $stack21, $stack22;

        a1 := @parameter0: org.apache.maven.artifact.Artifact;

        a2 := @parameter1: org.apache.maven.artifact.Artifact;

        if a1 != a2 goto label1;

        return 1;

     label1:
        $stack2 = interfaceinvoke a1.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $stack3 = interfaceinvoke a2.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $stack4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack2, $stack3);

        if $stack4 == 0 goto label2;

        $stack5 = interfaceinvoke a1.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack6 = interfaceinvoke a2.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack6);

        if $stack7 == 0 goto label2;

        $stack9 = interfaceinvoke a1.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        $stack10 = interfaceinvoke a2.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        $stack11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack9, $stack10);

        if $stack11 == 0 goto label2;

        $stack12 = interfaceinvoke a1.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        $stack13 = interfaceinvoke a2.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        $stack14 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack12, $stack13);

        if $stack14 == 0 goto label2;

        $stack15 = interfaceinvoke a1.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        $stack16 = interfaceinvoke a2.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        $stack17 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack15, $stack16);

        if $stack17 == 0 goto label2;

        $stack18 = interfaceinvoke a1.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        $stack19 = interfaceinvoke a2.<org.apache.maven.artifact.Artifact: java.lang.String getScope()>();

        $stack20 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack18, $stack19);

        if $stack20 == 0 goto label2;

        $stack21 = interfaceinvoke a1.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter()>();

        $stack22 = interfaceinvoke a2.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.resolver.filter.ArtifactFilter getDependencyFilter()>();

        $stack23 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack21, $stack22);

        if $stack23 == 0 goto label2;

        $stack24 = interfaceinvoke a1.<org.apache.maven.artifact.Artifact: boolean isOptional()>();

        $stack25 = interfaceinvoke a2.<org.apache.maven.artifact.Artifact: boolean isOptional()>();

        if $stack24 != $stack25 goto label2;

        $stack8 = 1;

        goto label3;

     label2:
        $stack8 = 0;

     label3:
        return $stack8;
    }

    private static int repositoryHashCode(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        org.apache.maven.artifact.repository.ArtifactRepository repository;
        int $stack2, $stack5, result#3;
        java.lang.String $stack3, $stack4;

        repository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $stack2 = 31 * 17;

        $stack3 = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        if $stack3 == null goto label1;

        $stack4 = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        $stack5 = virtualinvoke $stack4.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $stack5 = 0;

     label2:
        result#3 = $stack2 + $stack5;

        return result#3;
    }

    private static int repositoriesHashCode(java.util.List)
    {
        java.util.List repositories;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.apache.maven.artifact.repository.ArtifactRepository repository;
        int $stack7, $stack8, result;

        repositories := @parameter0: java.util.List;

        result = 17;

        l2 = interfaceinvoke repositories.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        repository = (org.apache.maven.artifact.repository.ArtifactRepository) $stack6;

        $stack7 = 31 * result;

        $stack8 = staticinvoke <org.apache.maven.project.artifact.DefaultMavenMetadataCache: int repositoryHashCode(org.apache.maven.artifact.repository.ArtifactRepository)>(repository);

        result = $stack7 + $stack8;

        goto label1;

     label2:
        return result;
    }

    private static boolean repositoryEquals(org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.artifact.repository.ArtifactRepository)
    {
        org.apache.maven.artifact.repository.ArtifactRepository r1, r2;
        java.lang.String $stack2, $stack3, $stack5, $stack6;
        boolean $stack4, $stack7, $stack11, $stack14, $stack8;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $stack9, $stack10, $stack12, $stack13;

        r1 := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        r2 := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        if r1 != r2 goto label1;

        return 1;

     label1:
        $stack2 = interfaceinvoke r1.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        $stack3 = interfaceinvoke r2.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        $stack4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack2, $stack3);

        if $stack4 == 0 goto label2;

        $stack5 = interfaceinvoke r1.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getUrl()>();

        $stack6 = interfaceinvoke r2.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getUrl()>();

        $stack7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack6);

        if $stack7 == 0 goto label2;

        $stack9 = interfaceinvoke r1.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getReleases()>();

        $stack10 = interfaceinvoke r2.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getReleases()>();

        $stack11 = staticinvoke <org.apache.maven.project.artifact.DefaultMavenMetadataCache: boolean repositoryPolicyEquals(org.apache.maven.artifact.repository.ArtifactRepositoryPolicy,org.apache.maven.artifact.repository.ArtifactRepositoryPolicy)>($stack9, $stack10);

        if $stack11 == 0 goto label2;

        $stack12 = interfaceinvoke r1.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getSnapshots()>();

        $stack13 = interfaceinvoke r2.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getSnapshots()>();

        $stack14 = staticinvoke <org.apache.maven.project.artifact.DefaultMavenMetadataCache: boolean repositoryPolicyEquals(org.apache.maven.artifact.repository.ArtifactRepositoryPolicy,org.apache.maven.artifact.repository.ArtifactRepositoryPolicy)>($stack12, $stack13);

        if $stack14 == 0 goto label2;

        $stack8 = 1;

        goto label3;

     label2:
        $stack8 = 0;

     label3:
        return $stack8;
    }

    private static boolean repositoryPolicyEquals(org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy)
    {
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy p1, p2;
        boolean $stack2, $stack3, $stack6, $stack7;
        java.lang.String $stack4, $stack5;

        p1 := @parameter0: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;

        p2 := @parameter1: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;

        if p1 != p2 goto label1;

        return 1;

     label1:
        $stack2 = virtualinvoke p1.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean isEnabled()>();

        $stack3 = virtualinvoke p2.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean isEnabled()>();

        if $stack2 != $stack3 goto label2;

        $stack4 = virtualinvoke p1.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack5 = virtualinvoke p2.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack4, $stack5);

        if $stack6 == 0 goto label2;

        $stack7 = 1;

        goto label3;

     label2:
        $stack7 = 0;

     label3:
        return $stack7;
    }

    private static boolean repositoriesEquals(java.util.List, java.util.List)
    {
        java.util.List r1, r2;
        int $stack4, $stack5;
        java.util.Iterator it1, it2;
        boolean $stack8, $stack13;
        java.lang.Object $stack9, $stack11;
        org.apache.maven.artifact.repository.ArtifactRepository $stack10, $stack12;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        $stack4 = interfaceinvoke r1.<java.util.List: int size()>();

        $stack5 = interfaceinvoke r2.<java.util.List: int size()>();

        if $stack4 == $stack5 goto label1;

        return 0;

     label1:
        it1 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        it2 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack8 = interfaceinvoke it1.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label3;

        $stack9 = interfaceinvoke it1.<java.util.Iterator: java.lang.Object next()>();

        $stack10 = (org.apache.maven.artifact.repository.ArtifactRepository) $stack9;

        $stack11 = interfaceinvoke it2.<java.util.Iterator: java.lang.Object next()>();

        $stack12 = (org.apache.maven.artifact.repository.ArtifactRepository) $stack11;

        $stack13 = staticinvoke <org.apache.maven.project.artifact.DefaultMavenMetadataCache: boolean repositoryEquals(org.apache.maven.artifact.repository.ArtifactRepository,org.apache.maven.artifact.repository.ArtifactRepository)>($stack10, $stack12);

        if $stack13 != 0 goto label2;

        return 0;

     label3:
        return 1;
    }

    public org.apache.maven.artifact.metadata.ResolutionGroup get(org.apache.maven.artifact.Artifact, boolean, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List)
    {
        DefaultMavenMetadataCache this;
        org.apache.maven.artifact.Artifact artifact, $stack20, pomArtifact, $stack22, relocatedArtifact;
        boolean resolveManagedVersions, $stack16;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        java.util.List remoteRepositories, $stack24, $stack29;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey cacheKey;
        java.util.Map $stack12, $stack14, managedVersions;
        java.lang.Object $stack13;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord cacheRecord;
        java.util.Collection $stack26;
        java.util.Set artifacts;
        java.util.LinkedHashSet $u0;
        java.util.LinkedHashMap $u1;
        org.apache.maven.artifact.metadata.ResolutionGroup $u2;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache $r0, $r1, $r2;

        this := @this: DefaultMavenMetadataCache;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        resolveManagedVersions := @parameter1: boolean;

        localRepository := @parameter2: org.apache.maven.artifact.repository.ArtifactRepository;

        remoteRepositories := @parameter3: java.util.List;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache) this;

        cacheKey = virtualinvoke $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache: org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey newCacheKey(org.apache.maven.artifact.Artifact,boolean,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>(artifact, resolveManagedVersions, localRepository, remoteRepositories);

        $r1 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache) this;

        $stack12 = $r1.<org.apache.maven.project.artifact.DefaultMavenMetadataCache: java.util.Map cache>;

        $stack13 = interfaceinvoke $stack12.<java.util.Map: java.lang.Object get(java.lang.Object)>(cacheKey);

        cacheRecord = (org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord) $stack13;

        if cacheRecord == null goto label2;

        $stack16 = virtualinvoke cacheRecord.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: boolean isStale()>();

        if $stack16 != 0 goto label2;

        $stack20 = virtualinvoke cacheRecord.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: org.apache.maven.artifact.Artifact getArtifact()>();

        pomArtifact = staticinvoke <org.apache.maven.artifact.ArtifactUtils: org.apache.maven.artifact.Artifact copyArtifact(org.apache.maven.artifact.Artifact)>($stack20);

        $stack22 = virtualinvoke cacheRecord.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: org.apache.maven.artifact.Artifact getRelocatedArtifact()>();

        relocatedArtifact = staticinvoke <org.apache.maven.artifact.ArtifactUtils: org.apache.maven.artifact.Artifact copyArtifactSafe(org.apache.maven.artifact.Artifact)>($stack22);

        $stack24 = virtualinvoke cacheRecord.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.List getArtifacts()>();

        $u0 = new java.util.LinkedHashSet;

        specialinvoke $u0.<java.util.LinkedHashSet: void <init>()>();

        $stack26 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.util.Collection copyArtifacts(java.util.Collection,java.util.Collection)>($stack24, $u0);

        artifacts = (java.util.Set) $stack26;

        managedVersions = virtualinvoke cacheRecord.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.Map getManagedVersions()>();

        if managedVersions == null goto label1;

        $u1 = new java.util.LinkedHashMap;

        specialinvoke $u1.<java.util.LinkedHashMap: void <init>()>();

        managedVersions = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.util.Map copyArtifacts(java.util.Map,java.util.Map)>(managedVersions, $u1);

     label1:
        $u2 = new org.apache.maven.artifact.metadata.ResolutionGroup;

        $stack29 = virtualinvoke cacheRecord.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: java.util.List getRemoteRepositories()>();

        specialinvoke $u2.<org.apache.maven.artifact.metadata.ResolutionGroup: void <init>(org.apache.maven.artifact.Artifact,org.apache.maven.artifact.Artifact,java.util.Set,java.util.Map,java.util.List)>(pomArtifact, relocatedArtifact, artifacts, managedVersions, $stack29);

        return $u2;

     label2:
        $r2 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache) this;

        $stack14 = $r2.<org.apache.maven.project.artifact.DefaultMavenMetadataCache: java.util.Map cache>;

        interfaceinvoke $stack14.<java.util.Map: java.lang.Object remove(java.lang.Object)>(cacheKey);

        return null;
    }

    public void put(org.apache.maven.artifact.Artifact, boolean, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List, org.apache.maven.artifact.metadata.ResolutionGroup)
    {
        DefaultMavenMetadataCache this;
        org.apache.maven.artifact.Artifact artifact;
        boolean resolveManagedVersions;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        java.util.List remoteRepositories;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey $stack6;
        org.apache.maven.artifact.metadata.ResolutionGroup result;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache $r0, $r1;

        this := @this: DefaultMavenMetadataCache;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        resolveManagedVersions := @parameter1: boolean;

        localRepository := @parameter2: org.apache.maven.artifact.repository.ArtifactRepository;

        remoteRepositories := @parameter3: java.util.List;

        result := @parameter4: org.apache.maven.artifact.metadata.ResolutionGroup;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache) this;

        $stack6 = virtualinvoke $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache: org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey newCacheKey(org.apache.maven.artifact.Artifact,boolean,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>(artifact, resolveManagedVersions, localRepository, remoteRepositories);

        $r1 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache) this;

        virtualinvoke $r1.<org.apache.maven.project.artifact.DefaultMavenMetadataCache: void put(org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey,org.apache.maven.artifact.metadata.ResolutionGroup)>($stack6, result);

        return;
    }

    protected org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey newCacheKey(org.apache.maven.artifact.Artifact, boolean, org.apache.maven.artifact.repository.ArtifactRepository, java.util.List)
    {
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey $stack5;
        org.apache.maven.artifact.Artifact artifact;
        boolean resolveManagedVersions;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        java.util.List remoteRepositories;
        DefaultMavenMetadataCache this;

        this := @this: DefaultMavenMetadataCache;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        resolveManagedVersions := @parameter1: boolean;

        localRepository := @parameter2: org.apache.maven.artifact.repository.ArtifactRepository;

        remoteRepositories := @parameter3: java.util.List;

        $stack5 = new org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey;

        specialinvoke $stack5.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey: void <init>(org.apache.maven.artifact.Artifact,boolean,org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>(artifact, resolveManagedVersions, localRepository, remoteRepositories);

        return $stack5;
    }

    protected void put(org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey, org.apache.maven.artifact.metadata.ResolutionGroup)
    {
        DefaultMavenMetadataCache this;
        org.apache.maven.artifact.metadata.ResolutionGroup result;
        org.apache.maven.artifact.Artifact $stack5, $stack6;
        java.util.Set $stack7;
        java.util.Map $stack8, $stack10;
        java.util.List $stack9;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey cacheKey;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord $u0;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache $r0, $r1;

        this := @this: DefaultMavenMetadataCache;

        cacheKey := @parameter0: org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheKey;

        result := @parameter1: org.apache.maven.artifact.metadata.ResolutionGroup;

        $u0 = new org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord;

        $stack5 = virtualinvoke result.<org.apache.maven.artifact.metadata.ResolutionGroup: org.apache.maven.artifact.Artifact getPomArtifact()>();

        $stack6 = virtualinvoke result.<org.apache.maven.artifact.metadata.ResolutionGroup: org.apache.maven.artifact.Artifact getRelocatedArtifact()>();

        $stack7 = virtualinvoke result.<org.apache.maven.artifact.metadata.ResolutionGroup: java.util.Set getArtifacts()>();

        $stack8 = virtualinvoke result.<org.apache.maven.artifact.metadata.ResolutionGroup: java.util.Map getManagedVersions()>();

        $stack9 = virtualinvoke result.<org.apache.maven.artifact.metadata.ResolutionGroup: java.util.List getResolutionRepositories()>();

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache) this;

        specialinvoke $u0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache$CacheRecord: void <init>(org.apache.maven.project.artifact.DefaultMavenMetadataCache,org.apache.maven.artifact.Artifact,org.apache.maven.artifact.Artifact,java.util.Set,java.util.Map,java.util.List)>($r0, $stack5, $stack6, $stack7, $stack8, $stack9);

        $r1 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache) this;

        $stack10 = $r1.<org.apache.maven.project.artifact.DefaultMavenMetadataCache: java.util.Map cache>;

        interfaceinvoke $stack10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(cacheKey, $u0);

        return;
    }

    public void flush()
    {
        DefaultMavenMetadataCache this;
        java.util.Map $stack1;
        org.apache.maven.project.artifact.DefaultMavenMetadataCache $r0;

        this := @this: DefaultMavenMetadataCache;

        $r0 = (org.apache.maven.project.artifact.DefaultMavenMetadataCache) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.DefaultMavenMetadataCache: java.util.Map cache>;

        interfaceinvoke $stack1.<java.util.Map: void clear()>();

        return;
    }

    static int access$000(org.apache.maven.artifact.Artifact)
    {
        org.apache.maven.artifact.Artifact x0;
        int $stack1;

        x0 := @parameter0: org.apache.maven.artifact.Artifact;

        $stack1 = staticinvoke <org.apache.maven.project.artifact.DefaultMavenMetadataCache: int artifactHashCode(org.apache.maven.artifact.Artifact)>(x0);

        return $stack1;
    }

    static int access$100(java.util.List)
    {
        java.util.List x0;
        int $stack1;

        x0 := @parameter0: java.util.List;

        $stack1 = staticinvoke <org.apache.maven.project.artifact.DefaultMavenMetadataCache: int repositoriesHashCode(java.util.List)>(x0);

        return $stack1;
    }

    static boolean access$200(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.Artifact)
    {
        org.apache.maven.artifact.Artifact x0, x1;
        boolean $stack2;

        x0 := @parameter0: org.apache.maven.artifact.Artifact;

        x1 := @parameter1: org.apache.maven.artifact.Artifact;

        $stack2 = staticinvoke <org.apache.maven.project.artifact.DefaultMavenMetadataCache: boolean artifactEquals(org.apache.maven.artifact.Artifact,org.apache.maven.artifact.Artifact)>(x0, x1);

        return $stack2;
    }

    static boolean access$300(java.util.List, java.util.List)
    {
        java.util.List x0, x1;
        boolean $stack2;

        x0 := @parameter0: java.util.List;

        x1 := @parameter1: java.util.List;

        $stack2 = staticinvoke <org.apache.maven.project.artifact.DefaultMavenMetadataCache: boolean repositoriesEquals(java.util.List,java.util.List)>(x0, x1);

        return $stack2;
    }
}
