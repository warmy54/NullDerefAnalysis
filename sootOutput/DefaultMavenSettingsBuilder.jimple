public class DefaultMavenSettingsBuilder extends org.codehaus.plexus.logging.AbstractLogEnabled implements org.apache.maven.settings.MavenSettingsBuilder
{
    private org.apache.maven.settings.building.SettingsBuilder settingsBuilder;

    public void <init>()
    {
        DefaultMavenSettingsBuilder this;

        this := @this: DefaultMavenSettingsBuilder;

        specialinvoke this.<org.codehaus.plexus.logging.AbstractLogEnabled: void <init>()>();

        return;
    }

    public org.apache.maven.settings.Settings buildSettings() throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        DefaultMavenSettingsBuilder this;
        java.io.File userSettingsFile;
        org.apache.maven.settings.Settings $stack3;
        org.apache.maven.settings.DefaultMavenSettingsBuilder $r0, $r1;

        this := @this: DefaultMavenSettingsBuilder;

        $r0 = (org.apache.maven.settings.DefaultMavenSettingsBuilder) this;

        userSettingsFile = specialinvoke $r0.<org.apache.maven.settings.DefaultMavenSettingsBuilder: java.io.File getFile(java.lang.String,java.lang.String,java.lang.String)>("${user.home}/.m2/settings.xml", "user.home", "org.apache.maven.user-settings");

        $r1 = (org.apache.maven.settings.DefaultMavenSettingsBuilder) this;

        $stack3 = virtualinvoke $r1.<org.apache.maven.settings.DefaultMavenSettingsBuilder: org.apache.maven.settings.Settings buildSettings(java.io.File)>(userSettingsFile);

        return $stack3;
    }

    public org.apache.maven.settings.Settings buildSettings(boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        DefaultMavenSettingsBuilder this;
        org.apache.maven.settings.Settings $stack2;
        boolean useCachedSettings;
        org.apache.maven.settings.DefaultMavenSettingsBuilder $r0;

        this := @this: DefaultMavenSettingsBuilder;

        useCachedSettings := @parameter0: boolean;

        $r0 = (org.apache.maven.settings.DefaultMavenSettingsBuilder) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.DefaultMavenSettingsBuilder: org.apache.maven.settings.Settings buildSettings()>();

        return $stack2;
    }

    public org.apache.maven.settings.Settings buildSettings(java.io.File) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        DefaultMavenSettingsBuilder this;
        java.io.File globalSettingsFile, userSettingsFile;
        java.util.Properties $stack8;
        org.apache.maven.settings.Settings $stack10;
        org.apache.maven.settings.building.DefaultSettingsBuildingRequest $u0;
        org.apache.maven.settings.DefaultMavenSettingsBuilder $r0, $r4;
        org.apache.maven.settings.building.SettingsBuildingRequest $r1, $r2, $r3, $r5;

        this := @this: DefaultMavenSettingsBuilder;

        userSettingsFile := @parameter0: java.io.File;

        $r0 = (org.apache.maven.settings.DefaultMavenSettingsBuilder) this;

        globalSettingsFile = specialinvoke $r0.<org.apache.maven.settings.DefaultMavenSettingsBuilder: java.io.File getFile(java.lang.String,java.lang.String,java.lang.String)>("${maven.conf}/settings.xml", "maven.conf", "org.apache.maven.global-settings");

        $u0 = new org.apache.maven.settings.building.DefaultSettingsBuildingRequest;

        specialinvoke $u0.<org.apache.maven.settings.building.DefaultSettingsBuildingRequest: void <init>()>();

        $r1 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u0;

        interfaceinvoke $r1.<org.apache.maven.settings.building.SettingsBuildingRequest: org.apache.maven.settings.building.SettingsBuildingRequest setUserSettingsFile(java.io.File)>(userSettingsFile);

        $r2 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u0;

        interfaceinvoke $r2.<org.apache.maven.settings.building.SettingsBuildingRequest: org.apache.maven.settings.building.SettingsBuildingRequest setGlobalSettingsFile(java.io.File)>(globalSettingsFile);

        $stack8 = staticinvoke <org.apache.maven.properties.internal.SystemProperties: java.util.Properties getSystemProperties()>();

        $r3 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u0;

        interfaceinvoke $r3.<org.apache.maven.settings.building.SettingsBuildingRequest: org.apache.maven.settings.building.SettingsBuildingRequest setSystemProperties(java.util.Properties)>($stack8);

        $r4 = (org.apache.maven.settings.DefaultMavenSettingsBuilder) this;

        $r5 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u0;

        $stack10 = specialinvoke $r4.<org.apache.maven.settings.DefaultMavenSettingsBuilder: org.apache.maven.settings.Settings build(org.apache.maven.settings.building.SettingsBuildingRequest)>($r5);

        return $stack10;
    }

    public org.apache.maven.settings.Settings buildSettings(java.io.File, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        DefaultMavenSettingsBuilder this;
        java.io.File userSettingsFile;
        org.apache.maven.settings.Settings $stack3;
        boolean useCachedSettings;
        org.apache.maven.settings.DefaultMavenSettingsBuilder $r0;

        this := @this: DefaultMavenSettingsBuilder;

        userSettingsFile := @parameter0: java.io.File;

        useCachedSettings := @parameter1: boolean;

        $r0 = (org.apache.maven.settings.DefaultMavenSettingsBuilder) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.settings.DefaultMavenSettingsBuilder: org.apache.maven.settings.Settings buildSettings(java.io.File)>(userSettingsFile);

        return $stack3;
    }

    private org.apache.maven.settings.Settings build(org.apache.maven.settings.building.SettingsBuildingRequest) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        DefaultMavenSettingsBuilder this;
        org.apache.maven.settings.building.SettingsBuildingRequest request;
        org.apache.maven.settings.building.SettingsBuilder $stack3;
        org.apache.maven.settings.building.SettingsBuildingResult $stack4;
        org.apache.maven.settings.Settings $stack5;
        java.lang.Throwable $stack6, $stack9;
        java.lang.String $stack8;
        java.io.IOException $stack10, $u0;
        org.apache.maven.settings.DefaultMavenSettingsBuilder $r0;
        org.apache.maven.settings.building.SettingsBuildingException $r1;

        this := @this: DefaultMavenSettingsBuilder;

        request := @parameter0: org.apache.maven.settings.building.SettingsBuildingRequest;

     label1:
        $r0 = (org.apache.maven.settings.DefaultMavenSettingsBuilder) this;

        $stack3 = $r0.<org.apache.maven.settings.DefaultMavenSettingsBuilder: org.apache.maven.settings.building.SettingsBuilder settingsBuilder>;

        $stack4 = interfaceinvoke $stack3.<org.apache.maven.settings.building.SettingsBuilder: org.apache.maven.settings.building.SettingsBuildingResult build(org.apache.maven.settings.building.SettingsBuildingRequest)>(request);

        $stack5 = interfaceinvoke $stack4.<org.apache.maven.settings.building.SettingsBuildingResult: org.apache.maven.settings.Settings getEffectiveSettings()>();

     label2:
        return $stack5;

     label3:
        $stack6 := @caughtexception;

        $u0 = new java.io.IOException;

        $r1 = (org.apache.maven.settings.building.SettingsBuildingException) $stack6;

        $stack8 = virtualinvoke $r1.<org.apache.maven.settings.building.SettingsBuildingException: java.lang.String getMessage()>();

        specialinvoke $u0.<java.io.IOException: void <init>(java.lang.String)>($stack8);

        $stack9 = virtualinvoke $u0.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>($stack6);

        $stack10 = (java.io.IOException) $stack9;

        throw $stack10;

        catch org.apache.maven.settings.building.SettingsBuildingException from label1 to label2 with label3;
    }

    public org.apache.maven.settings.Settings buildSettings(org.apache.maven.execution.MavenExecutionRequest) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.apache.maven.execution.MavenExecutionRequest request;
        java.io.File $stack4, $stack6;
        java.util.Properties $stack8, $stack10;
        DefaultMavenSettingsBuilder this;
        org.apache.maven.settings.Settings $stack12;
        org.apache.maven.settings.building.DefaultSettingsBuildingRequest $u0;
        org.apache.maven.settings.building.SettingsBuildingRequest $r0, $r1, $r2, $r3, $r5;
        org.apache.maven.settings.DefaultMavenSettingsBuilder $r4;

        this := @this: DefaultMavenSettingsBuilder;

        request := @parameter0: org.apache.maven.execution.MavenExecutionRequest;

        $u0 = new org.apache.maven.settings.building.DefaultSettingsBuildingRequest;

        specialinvoke $u0.<org.apache.maven.settings.building.DefaultSettingsBuildingRequest: void <init>()>();

        $stack4 = interfaceinvoke request.<org.apache.maven.execution.MavenExecutionRequest: java.io.File getUserSettingsFile()>();

        $r0 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u0;

        interfaceinvoke $r0.<org.apache.maven.settings.building.SettingsBuildingRequest: org.apache.maven.settings.building.SettingsBuildingRequest setUserSettingsFile(java.io.File)>($stack4);

        $stack6 = interfaceinvoke request.<org.apache.maven.execution.MavenExecutionRequest: java.io.File getGlobalSettingsFile()>();

        $r1 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u0;

        interfaceinvoke $r1.<org.apache.maven.settings.building.SettingsBuildingRequest: org.apache.maven.settings.building.SettingsBuildingRequest setGlobalSettingsFile(java.io.File)>($stack6);

        $stack8 = interfaceinvoke request.<org.apache.maven.execution.MavenExecutionRequest: java.util.Properties getUserProperties()>();

        $r2 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u0;

        interfaceinvoke $r2.<org.apache.maven.settings.building.SettingsBuildingRequest: org.apache.maven.settings.building.SettingsBuildingRequest setUserProperties(java.util.Properties)>($stack8);

        $stack10 = interfaceinvoke request.<org.apache.maven.execution.MavenExecutionRequest: java.util.Properties getSystemProperties()>();

        $r3 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u0;

        interfaceinvoke $r3.<org.apache.maven.settings.building.SettingsBuildingRequest: org.apache.maven.settings.building.SettingsBuildingRequest setSystemProperties(java.util.Properties)>($stack10);

        $r4 = (org.apache.maven.settings.DefaultMavenSettingsBuilder) this;

        $r5 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u0;

        $stack12 = specialinvoke $r4.<org.apache.maven.settings.DefaultMavenSettingsBuilder: org.apache.maven.settings.Settings build(org.apache.maven.settings.building.SettingsBuildingRequest)>($r5);

        return $stack12;
    }

    private java.io.File getFile(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String altLocationSysProp, basedirSysProp, pathPattern, $stack17, path, basedir;
        boolean $stack7;
        java.io.File $stack8, $stack9, $stack20, $stack21;
        java.lang.StringBuilder $stack13, $stack14, $stack15, $stack16;
        DefaultMavenSettingsBuilder this;

        this := @this: DefaultMavenSettingsBuilder;

        pathPattern := @parameter0: java.lang.String;

        basedirSysProp := @parameter1: java.lang.String;

        altLocationSysProp := @parameter2: java.lang.String;

        path = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(altLocationSysProp);

        $stack7 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isEmpty(java.lang.String)>(path);

        if $stack7 == 0 goto label2;

        basedir = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(basedirSysProp);

        if basedir != null goto label1;

        basedir = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

     label1:
        basedir = virtualinvoke basedir.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\", "/");

        basedir = virtualinvoke basedir.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\$", "\\\\\\$");

        $stack13 = new java.lang.StringBuilder;

        specialinvoke $stack13.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\$\\{");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(basedirSysProp);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\}");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        path = virtualinvoke pathPattern.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>($stack17, basedir);

        path = virtualinvoke path.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\", "/");

        $stack20 = new java.io.File;

        specialinvoke $stack20.<java.io.File: void <init>(java.lang.String)>(path);

        $stack21 = virtualinvoke $stack20.<java.io.File: java.io.File getAbsoluteFile()>();

        return $stack21;

     label2:
        $stack8 = new java.io.File;

        specialinvoke $stack8.<java.io.File: void <init>(java.lang.String)>(path);

        $stack9 = virtualinvoke $stack8.<java.io.File: java.io.File getAbsoluteFile()>();

        return $stack9;
    }
}
