public class DefaultMetadataResolutionRequest extends java.lang.Object implements org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest
{
    private org.apache.maven.artifact.Artifact artifact;
    private boolean resolveManagedVersions;
    private org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest;

    public void <init>()
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.repository.DefaultRepositoryRequest $u0;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new org.apache.maven.artifact.repository.DefaultRepositoryRequest;

        specialinvoke $u0.<org.apache.maven.artifact.repository.DefaultRepositoryRequest: void <init>()>();

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $u0;

        $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest> = $r1;

        return;
    }

    public void <init>(org.apache.maven.artifact.repository.RepositoryRequest)
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest, $r1;
        org.apache.maven.artifact.repository.DefaultRepositoryRequest $u0;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0;

        this := @this: DefaultMetadataResolutionRequest;

        repositoryRequest := @parameter0: org.apache.maven.artifact.repository.RepositoryRequest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new org.apache.maven.artifact.repository.DefaultRepositoryRequest;

        specialinvoke $u0.<org.apache.maven.artifact.repository.DefaultRepositoryRequest: void <init>(org.apache.maven.artifact.repository.RepositoryRequest)>(repositoryRequest);

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $u0;

        $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest> = $r1;

        return;
    }

    public void <init>(org.apache.maven.artifact.resolver.ArtifactResolutionRequest)
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest resolutionRequest;
        org.apache.maven.artifact.repository.DefaultRepositoryRequest $u0;
        org.apache.maven.artifact.repository.RepositoryRequest $r0, $r2;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        resolutionRequest := @parameter0: org.apache.maven.artifact.resolver.ArtifactResolutionRequest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new org.apache.maven.artifact.repository.DefaultRepositoryRequest;

        $r0 = (org.apache.maven.artifact.repository.RepositoryRequest) resolutionRequest;

        specialinvoke $u0.<org.apache.maven.artifact.repository.DefaultRepositoryRequest: void <init>(org.apache.maven.artifact.repository.RepositoryRequest)>($r0);

        $r1 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $r2 = (org.apache.maven.artifact.repository.RepositoryRequest) $u0;

        $r1.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest> = $r2;

        return;
    }

    public org.apache.maven.artifact.Artifact getArtifact()
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.Artifact $stack1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0;

        this := @this: DefaultMetadataResolutionRequest;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.Artifact artifact>;

        return $stack1;
    }

    public org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setArtifact(org.apache.maven.artifact.Artifact)
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.Artifact artifact;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0, $r1;

        this := @this: DefaultMetadataResolutionRequest;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.Artifact artifact> = artifact;

        $r1 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        return $r1;
    }

    public org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.repository.RepositoryRequest $stack1;
        org.apache.maven.artifact.repository.ArtifactRepository $stack2;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0;

        this := @this: DefaultMetadataResolutionRequest;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.repository.RepositoryRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        return $stack2;
    }

    public org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        org.apache.maven.artifact.repository.RepositoryRequest $stack2;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0, $r1;

        this := @this: DefaultMetadataResolutionRequest;

        localRepository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.repository.RepositoryRequest: org.apache.maven.artifact.repository.RepositoryRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>(localRepository);

        $r1 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        return $r1;
    }

    public java.util.List getRemoteRepositories()
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.repository.RepositoryRequest $stack1;
        java.util.List $stack2;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0;

        this := @this: DefaultMetadataResolutionRequest;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.repository.RepositoryRequest: java.util.List getRemoteRepositories()>();

        return $stack2;
    }

    public org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setRemoteRepositories(java.util.List)
    {
        DefaultMetadataResolutionRequest this;
        java.util.List remoteRepositories;
        org.apache.maven.artifact.repository.RepositoryRequest $stack2;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0, $r1;

        this := @this: DefaultMetadataResolutionRequest;

        remoteRepositories := @parameter0: java.util.List;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.repository.RepositoryRequest: org.apache.maven.artifact.repository.RepositoryRequest setRemoteRepositories(java.util.List)>(remoteRepositories);

        $r1 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        return $r1;
    }

    public boolean isResolveManagedVersions()
    {
        DefaultMetadataResolutionRequest this;
        boolean $stack1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0;

        this := @this: DefaultMetadataResolutionRequest;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: boolean resolveManagedVersions>;

        return $stack1;
    }

    public org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setResolveManagedVersions(boolean)
    {
        DefaultMetadataResolutionRequest this;
        boolean resolveManagedVersions;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0, $r1;

        this := @this: DefaultMetadataResolutionRequest;

        resolveManagedVersions := @parameter0: boolean;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: boolean resolveManagedVersions> = resolveManagedVersions;

        $r1 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        return $r1;
    }

    public boolean isOffline()
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.repository.RepositoryRequest $stack1;
        boolean $stack2;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0;

        this := @this: DefaultMetadataResolutionRequest;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.repository.RepositoryRequest: boolean isOffline()>();

        return $stack2;
    }

    public org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setOffline(boolean)
    {
        DefaultMetadataResolutionRequest this;
        boolean offline;
        org.apache.maven.artifact.repository.RepositoryRequest $stack2;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0, $r1;

        this := @this: DefaultMetadataResolutionRequest;

        offline := @parameter0: boolean;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.repository.RepositoryRequest: org.apache.maven.artifact.repository.RepositoryRequest setOffline(boolean)>(offline);

        $r1 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        return $r1;
    }

    public boolean isForceUpdate()
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.repository.RepositoryRequest $stack1;
        boolean $stack2;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0;

        this := @this: DefaultMetadataResolutionRequest;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack1 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.artifact.repository.RepositoryRequest: boolean isForceUpdate()>();

        return $stack2;
    }

    public org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setForceUpdate(boolean)
    {
        DefaultMetadataResolutionRequest this;
        boolean forceUpdate;
        org.apache.maven.artifact.repository.RepositoryRequest $stack2;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $r0, $r1;

        this := @this: DefaultMetadataResolutionRequest;

        forceUpdate := @parameter0: boolean;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.artifact.repository.RepositoryRequest repositoryRequest>;

        interfaceinvoke $stack2.<org.apache.maven.artifact.repository.RepositoryRequest: org.apache.maven.artifact.repository.RepositoryRequest setForceUpdate(boolean)>(forceUpdate);

        $r1 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        return $r1;
    }

    public volatile org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setResolveManagedVersions(boolean)
    {
        DefaultMetadataResolutionRequest this;
        boolean l1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $stack2, $r0;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        l1 := @parameter0: boolean;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setResolveManagedVersions(boolean)>(l1);

        $r1 = (org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setRemoteRepositories(java.util.List)
    {
        DefaultMetadataResolutionRequest this;
        java.util.List l1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $stack2, $r0;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        l1 := @parameter0: java.util.List;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setRemoteRepositories(java.util.List)>(l1);

        $r1 = (org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository l1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $stack2, $r0;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        l1 := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>(l1);

        $r1 = (org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setArtifact(org.apache.maven.artifact.Artifact)
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.Artifact l1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $stack2, $r0;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        l1 := @parameter0: org.apache.maven.artifact.Artifact;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setArtifact(org.apache.maven.artifact.Artifact)>(l1);

        $r1 = (org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setOffline(boolean)
    {
        DefaultMetadataResolutionRequest this;
        boolean l1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $stack2, $r0;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        l1 := @parameter0: boolean;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setOffline(boolean)>(l1);

        $r1 = (org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setRemoteRepositories(java.util.List)
    {
        DefaultMetadataResolutionRequest this;
        java.util.List l1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        l1 := @parameter0: java.util.List;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setRemoteRepositories(java.util.List)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultMetadataResolutionRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository l1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        l1 := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setForceUpdate(boolean)
    {
        DefaultMetadataResolutionRequest this;
        boolean l1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        l1 := @parameter0: boolean;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setForceUpdate(boolean)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setOffline(boolean)
    {
        DefaultMetadataResolutionRequest this;
        boolean l1;
        org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: DefaultMetadataResolutionRequest;

        l1 := @parameter0: boolean;

        $r0 = (org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.DefaultMetadataResolutionRequest setOffline(boolean)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }
}
