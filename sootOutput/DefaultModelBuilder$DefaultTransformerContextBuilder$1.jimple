class DefaultModelBuilder$DefaultTransformerContextBuilder$1 extends java.lang.Object implements org.apache.maven.model.building.TransformerContext
{
    final org.apache.maven.model.building.ModelBuildingRequest val$request;
    final org.apache.maven.model.building.DefaultModelProblemCollector val$problems;
    final org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder this$1;

    void <init>(org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector)
    {
        DefaultModelBuilder$DefaultTransformerContextBuilder$1 this;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder this$1;
        org.apache.maven.model.building.ModelBuildingRequest l2;
        org.apache.maven.model.building.DefaultModelProblemCollector l3;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1 $r0, $r1, $r2;

        this := @this: DefaultModelBuilder$DefaultTransformerContextBuilder$1;

        this$1 := @parameter0: org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder;

        l2 := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        l3 := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder this$1> = this$1;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $r1.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.ModelBuildingRequest val$request> = l2;

        $r2 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $r2.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelProblemCollector val$problems> = l3;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getUserProperty(java.lang.String)
    {
        DefaultModelBuilder$DefaultTransformerContextBuilder$1 this;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder $stack2;
        org.apache.maven.model.building.DefaultTransformerContext $stack3;
        java.lang.String key, $stack8;
        org.apache.maven.model.building.ModelBuildingRequest $stack4;
        java.util.Map $stack5;
        java.util.function.Function $stack6;
        java.lang.Object $stack7;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1 $r0, $r1;

        this := @this: DefaultModelBuilder$DefaultTransformerContextBuilder$1;

        key := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder this$1>;

        $stack3 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder: org.apache.maven.model.building.DefaultTransformerContext access$100(org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder)>($stack2);

        $stack5 = $stack3.<org.apache.maven.model.building.DefaultTransformerContext: java.util.Map userProperties>;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack4 = $r1.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.ModelBuildingRequest val$request>;

        $stack6 = staticinvoke <DefaultModelBuilder$DefaultTransformerContextBuilder$1$lambda_getUserProperty_0__309: java.util.function.Function bootstrap$(org.apache.maven.model.building.ModelBuildingRequest,java.lang.String)>($stack4, key);

        $stack7 = interfaceinvoke $stack5.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(key, $stack6);

        $stack8 = (java.lang.String) $stack7;

        return $stack8;
    }

    public org.apache.maven.model.Model getRawModel(java.lang.String, java.lang.String)
    {
        DefaultModelBuilder$DefaultTransformerContextBuilder$1 this;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder $stack3;
        org.apache.maven.model.building.DefaultTransformerContext $stack4;
        java.lang.String gId, aId;
        java.util.Map $stack6;
        java.util.function.Function $stack7;
        java.lang.Object $stack8;
        org.apache.maven.model.building.DefaultTransformerContext$Holder $stack9;
        java.util.function.Supplier $stack10;
        org.apache.maven.model.Model $stack11;
        org.apache.maven.model.building.DefaultTransformerContext$GAKey $u0;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1 $r0, $r1;

        this := @this: DefaultModelBuilder$DefaultTransformerContextBuilder$1;

        gId := @parameter0: java.lang.String;

        aId := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack3 = $r0.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder this$1>;

        $stack4 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder: org.apache.maven.model.building.DefaultTransformerContext access$100(org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder)>($stack3);

        $stack6 = $stack4.<org.apache.maven.model.building.DefaultTransformerContext: java.util.Map modelByGA>;

        $u0 = new org.apache.maven.model.building.DefaultTransformerContext$GAKey;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultTransformerContext$GAKey: void <init>(java.lang.String,java.lang.String)>(gId, aId);

        $stack7 = staticinvoke <DefaultModelBuilder$DefaultTransformerContextBuilder$1$lambda_getRawModel_1__311: java.util.function.Function bootstrap$()>();

        $stack8 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>($u0, $stack7);

        $stack9 = (org.apache.maven.model.building.DefaultTransformerContext$Holder) $stack8;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack10 = staticinvoke <DefaultModelBuilder$DefaultTransformerContextBuilder$1$lambda_getRawModel_2__313: java.util.function.Supplier bootstrap$(org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1,java.lang.String,java.lang.String)>($r1, gId, aId);

        $stack11 = virtualinvoke $stack9.<org.apache.maven.model.building.DefaultTransformerContext$Holder: org.apache.maven.model.Model computeIfAbsent(java.util.function.Supplier)>($stack10);

        return $stack11;
    }

    public org.apache.maven.model.Model getRawModel(java.nio.file.Path)
    {
        DefaultModelBuilder$DefaultTransformerContextBuilder$1 this;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder $stack2;
        org.apache.maven.model.building.DefaultTransformerContext $stack3;
        java.nio.file.Path path;
        java.util.Map $stack4;
        java.util.function.Function $stack5;
        java.lang.Object $stack6;
        org.apache.maven.model.building.DefaultTransformerContext$Holder $stack7;
        java.util.function.Supplier $stack8;
        org.apache.maven.model.Model $stack9;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1 $r0, $r1;

        this := @this: DefaultModelBuilder$DefaultTransformerContextBuilder$1;

        path := @parameter0: java.nio.file.Path;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder this$1>;

        $stack3 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder: org.apache.maven.model.building.DefaultTransformerContext access$100(org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder)>($stack2);

        $stack4 = $stack3.<org.apache.maven.model.building.DefaultTransformerContext: java.util.Map modelByPath>;

        $stack5 = staticinvoke <DefaultModelBuilder$DefaultTransformerContextBuilder$1$lambda_getRawModel_3__310: java.util.function.Function bootstrap$()>();

        $stack6 = interfaceinvoke $stack4.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(path, $stack5);

        $stack7 = (org.apache.maven.model.building.DefaultTransformerContext$Holder) $stack6;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack8 = staticinvoke <DefaultModelBuilder$DefaultTransformerContextBuilder$1$lambda_getRawModel_4__312: java.util.function.Supplier bootstrap$(org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1,java.nio.file.Path)>($r1, path);

        $stack9 = virtualinvoke $stack7.<org.apache.maven.model.building.DefaultTransformerContext$Holder: org.apache.maven.model.Model computeIfAbsent(java.util.function.Supplier)>($stack8);

        return $stack9;
    }

    private org.apache.maven.model.Model findRawModel(java.lang.String, java.lang.String)
    {
        DefaultModelBuilder$DefaultTransformerContextBuilder$1 this;
        java.lang.String groupId, artifactId;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder $stack5, $stack11;
        org.apache.maven.building.Source source;
        org.apache.maven.model.building.ModelBuildingRequest $stack8, $r4;
        org.apache.maven.model.building.ModelSource $stack9;
        org.apache.maven.model.building.DefaultModelProblemCollector $stack12;
        org.apache.maven.model.building.DefaultModelBuilder $stack13;
        org.apache.maven.model.Model $stack14;
        java.lang.Throwable $stack15;
        org.apache.maven.model.building.DefaultModelBuildingRequest gaBuildingRequest, $u0;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1 $r0, $r1, $r2, $r3;

        this := @this: DefaultModelBuilder$DefaultTransformerContextBuilder$1;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack5 = $r0.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder this$1>;

        source = virtualinvoke $stack5.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder: org.apache.maven.building.Source getSource(java.lang.String,java.lang.String)>(groupId, artifactId);

        if source == null goto label4;

     label1:
        $u0 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack8 = $r1.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.ModelBuildingRequest val$request>;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>(org.apache.maven.model.building.ModelBuildingRequest)>($stack8);

        $stack9 = (org.apache.maven.model.building.ModelSource) source;

        gaBuildingRequest = virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setModelSource(org.apache.maven.model.building.ModelSource)>($stack9);

        $r2 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack11 = $r2.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder this$1>;

        $stack13 = $stack11.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder: org.apache.maven.model.building.DefaultModelBuilder this$0>;

        $r3 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack12 = $r3.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelProblemCollector val$problems>;

        $r4 = (org.apache.maven.model.building.ModelBuildingRequest) gaBuildingRequest;

        $stack14 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model access$200(org.apache.maven.model.building.DefaultModelBuilder,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>($stack13, $r4, $stack12);

     label2:
        return $stack14;

     label3:
        $stack15 := @caughtexception;

     label4:
        return null;

        catch org.apache.maven.model.building.ModelBuildingException from label1 to label2 with label3;
    }

    private org.apache.maven.model.Model findRawModel(java.nio.file.Path)
    {
        java.nio.file.Path p;
        java.nio.file.LinkOption[] $stack4;
        boolean $stack5;
        DefaultModelBuilder$DefaultTransformerContextBuilder$1 this;
        org.apache.maven.model.building.ModelBuildingRequest $stack7, $r4;
        java.io.File $stack8, $stack11;
        org.apache.maven.model.building.DefaultModelBuildingRequest $stack9, req, $u2;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder $stack13;
        org.apache.maven.model.building.DefaultModelProblemCollector $stack14;
        org.apache.maven.model.building.DefaultModelBuilder $stack15;
        org.apache.maven.model.Model $stack16;
        java.lang.StringBuilder $stack19, $stack20, $u0;
        java.lang.String $stack21;
        java.lang.Throwable $stack22;
        java.lang.IllegalArgumentException $u1;
        org.apache.maven.model.building.FileModelSource $u3;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1 $r0, $r2, $r3;
        org.apache.maven.model.building.ModelSource $r1;

        this := @this: DefaultModelBuilder$DefaultTransformerContextBuilder$1;

        p := @parameter0: java.nio.file.Path;

        $stack4 = newarray (java.nio.file.LinkOption)[0];

        $stack5 = staticinvoke <java.nio.file.Files: boolean isRegularFile(java.nio.file.Path,java.nio.file.LinkOption[])>(p, $stack4);

        if $stack5 != 0 goto label1;

        $u1 = new java.lang.IllegalArgumentException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a regular file: ");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(p);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($stack21);

        throw $u1;

     label1:
        $u2 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack7 = $r0.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.ModelBuildingRequest val$request>;

        specialinvoke $u2.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>(org.apache.maven.model.building.ModelBuildingRequest)>($stack7);

        $stack8 = interfaceinvoke p.<java.nio.file.Path: java.io.File toFile()>();

        $stack9 = virtualinvoke $u2.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setPomFile(java.io.File)>($stack8);

        $u3 = new org.apache.maven.model.building.FileModelSource;

        $stack11 = interfaceinvoke p.<java.nio.file.Path: java.io.File toFile()>();

        specialinvoke $u3.<org.apache.maven.model.building.FileModelSource: void <init>(java.io.File)>($stack11);

        $r1 = (org.apache.maven.model.building.ModelSource) $u3;

        req = virtualinvoke $stack9.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setModelSource(org.apache.maven.model.building.ModelSource)>($r1);

     label2:
        $r2 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack13 = $r2.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder this$1>;

        $stack15 = $stack13.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder: org.apache.maven.model.building.DefaultModelBuilder this$0>;

        $r3 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack14 = $r3.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.building.DefaultModelProblemCollector val$problems>;

        $r4 = (org.apache.maven.model.building.ModelBuildingRequest) req;

        $stack16 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model access$200(org.apache.maven.model.building.DefaultModelBuilder,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>($stack15, $r4, $stack14);

     label3:
        return $stack16;

     label4:
        $stack22 := @caughtexception;

        return null;

        catch org.apache.maven.model.building.ModelBuildingException from label2 to label3 with label4;
    }

    private org.apache.maven.model.Model lambda$getRawModel$4(java.nio.file.Path)
    {
        DefaultModelBuilder$DefaultTransformerContextBuilder$1 this;
        java.nio.file.Path path;
        org.apache.maven.model.Model $stack2;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1 $r0;

        this := @this: DefaultModelBuilder$DefaultTransformerContextBuilder$1;

        path := @parameter0: java.nio.file.Path;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.Model findRawModel(java.nio.file.Path)>(path);

        return $stack2;
    }

    private static org.apache.maven.model.building.DefaultTransformerContext$Holder lambda$getRawModel$3(java.nio.file.Path)
    {
        org.apache.maven.model.building.DefaultTransformerContext$Holder $stack1;
        java.nio.file.Path k;

        k := @parameter0: java.nio.file.Path;

        $stack1 = new org.apache.maven.model.building.DefaultTransformerContext$Holder;

        specialinvoke $stack1.<org.apache.maven.model.building.DefaultTransformerContext$Holder: void <init>()>();

        return $stack1;
    }

    private org.apache.maven.model.Model lambda$getRawModel$2(java.lang.String, java.lang.String)
    {
        DefaultModelBuilder$DefaultTransformerContextBuilder$1 this;
        java.lang.String gId, aId;
        org.apache.maven.model.Model $stack3;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1 $r0;

        this := @this: DefaultModelBuilder$DefaultTransformerContextBuilder$1;

        gId := @parameter0: java.lang.String;

        aId := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder$1: org.apache.maven.model.Model findRawModel(java.lang.String,java.lang.String)>(gId, aId);

        return $stack3;
    }

    private static org.apache.maven.model.building.DefaultTransformerContext$Holder lambda$getRawModel$1(org.apache.maven.model.building.DefaultTransformerContext$GAKey)
    {
        org.apache.maven.model.building.DefaultTransformerContext$Holder $stack1;
        org.apache.maven.model.building.DefaultTransformerContext$GAKey k;

        k := @parameter0: org.apache.maven.model.building.DefaultTransformerContext$GAKey;

        $stack1 = new org.apache.maven.model.building.DefaultTransformerContext$Holder;

        specialinvoke $stack1.<org.apache.maven.model.building.DefaultTransformerContext$Holder: void <init>()>();

        return $stack1;
    }

    private static java.lang.String lambda$getUserProperty$0(org.apache.maven.model.building.ModelBuildingRequest, java.lang.String, java.lang.String)
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        java.util.Properties $stack3;
        java.lang.String key, $stack4, k;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        key := @parameter1: java.lang.String;

        k := @parameter2: java.lang.String;

        $stack3 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getUserProperties()>();

        $stack4 = virtualinvoke $stack3.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(key);

        return $stack4;
    }
}
