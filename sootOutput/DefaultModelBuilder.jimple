public class DefaultModelBuilder extends java.lang.Object implements org.apache.maven.model.building.ModelBuilder
{
    private org.apache.maven.model.building.ModelProcessor modelProcessor;
    private org.apache.maven.model.validation.ModelValidator modelValidator;
    private org.apache.maven.model.normalization.ModelNormalizer modelNormalizer;
    private org.apache.maven.model.interpolation.ModelInterpolator modelInterpolator;
    private org.apache.maven.model.path.ModelPathTranslator modelPathTranslator;
    private org.apache.maven.model.path.ModelUrlNormalizer modelUrlNormalizer;
    private org.apache.maven.model.superpom.SuperPomProvider superPomProvider;
    private org.apache.maven.model.inheritance.InheritanceAssembler inheritanceAssembler;
    private org.apache.maven.model.profile.ProfileSelector profileSelector;
    private org.apache.maven.model.profile.ProfileInjector profileInjector;
    private org.apache.maven.model.management.PluginManagementInjector pluginManagementInjector;
    private org.apache.maven.model.management.DependencyManagementInjector dependencyManagementInjector;
    private org.apache.maven.model.composition.DependencyManagementImporter dependencyManagementImporter;
    private org.apache.maven.model.plugin.LifecycleBindingsInjector lifecycleBindingsInjector;
    private org.apache.maven.model.plugin.PluginConfigurationExpander pluginConfigurationExpander;
    private org.apache.maven.model.plugin.ReportConfigurationExpander reportConfigurationExpander;
    private org.apache.maven.model.plugin.ReportingConverter reportingConverter;
    private org.apache.maven.model.merge.ModelMerger modelMerger;
    private org.apache.maven.model.path.ProfileActivationFilePathInterpolator profileActivationFilePathInterpolator;

    public void <init>()
    {
        DefaultModelBuilder this;
        org.apache.maven.model.building.FileToRawModelMerger $u0;
        org.apache.maven.model.building.DefaultModelBuilder $r0;
        org.apache.maven.model.merge.ModelMerger $r1;

        this := @this: DefaultModelBuilder;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new org.apache.maven.model.building.FileToRawModelMerger;

        specialinvoke $u0.<org.apache.maven.model.building.FileToRawModelMerger: void <init>()>();

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r1 = (org.apache.maven.model.merge.ModelMerger) $u0;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.merge.ModelMerger modelMerger> = $r1;

        return;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setModelProcessor(org.apache.maven.model.building.ModelProcessor)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelProcessor modelProcessor;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        modelProcessor := @parameter0: org.apache.maven.model.building.ModelProcessor;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelProcessor modelProcessor> = modelProcessor;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setModelValidator(org.apache.maven.model.validation.ModelValidator)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.validation.ModelValidator modelValidator;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        modelValidator := @parameter0: org.apache.maven.model.validation.ModelValidator;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.validation.ModelValidator modelValidator> = modelValidator;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setModelNormalizer(org.apache.maven.model.normalization.ModelNormalizer)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.normalization.ModelNormalizer modelNormalizer;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        modelNormalizer := @parameter0: org.apache.maven.model.normalization.ModelNormalizer;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.normalization.ModelNormalizer modelNormalizer> = modelNormalizer;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setModelInterpolator(org.apache.maven.model.interpolation.ModelInterpolator)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.interpolation.ModelInterpolator modelInterpolator;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        modelInterpolator := @parameter0: org.apache.maven.model.interpolation.ModelInterpolator;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.interpolation.ModelInterpolator modelInterpolator> = modelInterpolator;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setModelPathTranslator(org.apache.maven.model.path.ModelPathTranslator)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.path.ModelPathTranslator modelPathTranslator;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        modelPathTranslator := @parameter0: org.apache.maven.model.path.ModelPathTranslator;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.path.ModelPathTranslator modelPathTranslator> = modelPathTranslator;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setModelUrlNormalizer(org.apache.maven.model.path.ModelUrlNormalizer)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.path.ModelUrlNormalizer modelUrlNormalizer;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        modelUrlNormalizer := @parameter0: org.apache.maven.model.path.ModelUrlNormalizer;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.path.ModelUrlNormalizer modelUrlNormalizer> = modelUrlNormalizer;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setSuperPomProvider(org.apache.maven.model.superpom.SuperPomProvider)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.superpom.SuperPomProvider superPomProvider;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        superPomProvider := @parameter0: org.apache.maven.model.superpom.SuperPomProvider;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.superpom.SuperPomProvider superPomProvider> = superPomProvider;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setProfileSelector(org.apache.maven.model.profile.ProfileSelector)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.profile.ProfileSelector profileSelector;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        profileSelector := @parameter0: org.apache.maven.model.profile.ProfileSelector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.ProfileSelector profileSelector> = profileSelector;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setProfileInjector(org.apache.maven.model.profile.ProfileInjector)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.profile.ProfileInjector profileInjector;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        profileInjector := @parameter0: org.apache.maven.model.profile.ProfileInjector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.ProfileInjector profileInjector> = profileInjector;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setInheritanceAssembler(org.apache.maven.model.inheritance.InheritanceAssembler)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.inheritance.InheritanceAssembler inheritanceAssembler;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        inheritanceAssembler := @parameter0: org.apache.maven.model.inheritance.InheritanceAssembler;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.inheritance.InheritanceAssembler inheritanceAssembler> = inheritanceAssembler;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setDependencyManagementImporter(org.apache.maven.model.composition.DependencyManagementImporter)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.composition.DependencyManagementImporter depMgmtImporter;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        depMgmtImporter := @parameter0: org.apache.maven.model.composition.DependencyManagementImporter;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.composition.DependencyManagementImporter dependencyManagementImporter> = depMgmtImporter;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setDependencyManagementInjector(org.apache.maven.model.management.DependencyManagementInjector)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.management.DependencyManagementInjector depMgmtInjector;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        depMgmtInjector := @parameter0: org.apache.maven.model.management.DependencyManagementInjector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.management.DependencyManagementInjector dependencyManagementInjector> = depMgmtInjector;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setLifecycleBindingsInjector(org.apache.maven.model.plugin.LifecycleBindingsInjector)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.plugin.LifecycleBindingsInjector lifecycleBindingsInjector;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        lifecycleBindingsInjector := @parameter0: org.apache.maven.model.plugin.LifecycleBindingsInjector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.plugin.LifecycleBindingsInjector lifecycleBindingsInjector> = lifecycleBindingsInjector;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setPluginConfigurationExpander(org.apache.maven.model.plugin.PluginConfigurationExpander)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.plugin.PluginConfigurationExpander pluginConfigurationExpander;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        pluginConfigurationExpander := @parameter0: org.apache.maven.model.plugin.PluginConfigurationExpander;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.plugin.PluginConfigurationExpander pluginConfigurationExpander> = pluginConfigurationExpander;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setPluginManagementInjector(org.apache.maven.model.management.PluginManagementInjector)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.management.PluginManagementInjector pluginManagementInjector;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        pluginManagementInjector := @parameter0: org.apache.maven.model.management.PluginManagementInjector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.management.PluginManagementInjector pluginManagementInjector> = pluginManagementInjector;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setReportConfigurationExpander(org.apache.maven.model.plugin.ReportConfigurationExpander)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.plugin.ReportConfigurationExpander reportConfigurationExpander;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        reportConfigurationExpander := @parameter0: org.apache.maven.model.plugin.ReportConfigurationExpander;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.plugin.ReportConfigurationExpander reportConfigurationExpander> = reportConfigurationExpander;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setReportingConverter(org.apache.maven.model.plugin.ReportingConverter)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.plugin.ReportingConverter reportingConverter;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        reportingConverter := @parameter0: org.apache.maven.model.plugin.ReportingConverter;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.plugin.ReportingConverter reportingConverter> = reportingConverter;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder setProfileActivationFilePathInterpolator(org.apache.maven.model.path.ProfileActivationFilePathInterpolator)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.path.ProfileActivationFilePathInterpolator profileActivationFilePathInterpolator;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        profileActivationFilePathInterpolator := @parameter0: org.apache.maven.model.path.ProfileActivationFilePathInterpolator;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.path.ProfileActivationFilePathInterpolator profileActivationFilePathInterpolator> = profileActivationFilePathInterpolator;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        return $r1;
    }

    public org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder newTransformerContextBuilder()
    {
        DefaultModelBuilder this;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder $u0;
        org.apache.maven.model.building.DefaultModelBuilder $r0;

        this := @this: DefaultModelBuilder;

        $u0 = new org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder: void <init>(org.apache.maven.model.building.DefaultModelBuilder,org.apache.maven.model.building.DefaultModelBuilder$1)>($r0, null);

        return $u0;
    }

    public org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest) throws org.apache.maven.model.building.ModelBuildingException
    {
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelBuildingResult $stack3;
        java.util.LinkedHashSet $u0;
        org.apache.maven.model.building.DefaultModelBuilder $r0;

        this := @this: DefaultModelBuilder;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        $u0 = new java.util.LinkedHashSet;

        specialinvoke $u0.<java.util.LinkedHashSet: void <init>()>();

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest,java.util.Collection)>(request, $u0);

        return $stack3;
    }

    protected org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest, java.util.Collection) throws org.apache.maven.model.building.ModelBuildingException
    {
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.Model fileModel;
        boolean $stack11, $stack12;
        org.apache.maven.model.building.ModelBuildingException $stack13;
        java.util.Collection importIds;
        org.apache.maven.model.building.ModelBuildingResult $stack14, $r0, $r4, $r8;
        org.apache.maven.model.building.DefaultModelBuildingResult $u0;
        org.apache.maven.model.building.DefaultModelProblemCollector $u1;
        org.apache.maven.model.building.DefaultModelBuilder $r1, $r2, $r3, $r5;
        org.apache.maven.model.building.ModelProblemCollectorExt $r6;
        java.lang.Throwable $r7;

        this := @this: DefaultModelBuilder;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        importIds := @parameter1: java.util.Collection;

        $u0 = new org.apache.maven.model.building.DefaultModelBuildingResult;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: void <init>()>();

        $u1 = new org.apache.maven.model.building.DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.ModelBuildingResult) $u0;

        specialinvoke $u1.<org.apache.maven.model.building.DefaultModelProblemCollector: void <init>(org.apache.maven.model.building.ModelBuildingResult)>($r0);

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        fileModel = specialinvoke $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model readFileModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>(request, $u1);

        interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setFileModel(org.apache.maven.model.Model)>(fileModel);

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setFileModel(org.apache.maven.model.Model)>(fileModel);

        $r2 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $r2.<org.apache.maven.model.building.DefaultModelBuilder: void activateFileModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelBuildingResult,org.apache.maven.model.building.DefaultModelProblemCollector)>(request, $u0, $u1);

        $stack11 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: boolean isTwoPhaseBuilding()>();

        if $stack11 != 0 goto label1;

        $r3 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r4 = (org.apache.maven.model.building.ModelBuildingResult) $u0;

        $stack14 = specialinvoke $r3.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelBuildingResult,java.util.Collection)>(request, $r4, importIds);

        return $stack14;

     label1:
        $r5 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r6 = (org.apache.maven.model.building.ModelProblemCollectorExt) $u1;

        $stack12 = virtualinvoke $r5.<org.apache.maven.model.building.DefaultModelBuilder: boolean hasModelErrors(org.apache.maven.model.building.ModelProblemCollectorExt)>($r6);

        if $stack12 == 0 goto label2;

        $stack13 = virtualinvoke $u1.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingException newModelBuildingException()>();

        $r7 = (java.lang.Throwable) $stack13;

        throw $r7;

     label2:
        $r8 = (org.apache.maven.model.building.ModelBuildingResult) $u0;

        return $r8;
    }

    private void activateFileModel(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelBuildingResult, org.apache.maven.model.building.DefaultModelProblemCollector) throws org.apache.maven.model.building.ModelBuildingException
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.Model inputModel;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        DefaultModelBuilder this;
        org.apache.maven.model.profile.DefaultProfileActivationContext profileActivationContext;
        org.apache.maven.model.profile.ProfileSelector $stack13, $stack20;
        java.util.List $stack14, activeExternalProfiles, $stack21, profileProps#4;
        org.apache.maven.model.building.DefaultModelBuildingResult result;
        boolean $stack17, $stack28, $stack37, $stack26;
        java.util.Properties $stack18, $stack62, $u0;
        org.apache.maven.model.normalization.ModelNormalizer $stack23;
        java.lang.Object $stack29, $stack32, $stack61;
        org.apache.maven.model.profile.ProfileInjector $stack30, $stack33;
        java.util.Map $stack38, interpolatedActivations#5;
        java.util.Iterator interpolatedActivations, profile#6;
        org.apache.maven.model.Profile profile, activeProfile;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1, $r4, $r7, $r9, $r10, $r11, $r13;
        org.apache.maven.model.profile.ProfileActivationContext $r2, $r5;
        org.apache.maven.model.building.ModelProblemCollector $r3, $r6, $r8, $r12, $r14;

        this := @this: DefaultModelBuilder;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        result := @parameter1: org.apache.maven.model.building.DefaultModelBuildingResult;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        inputModel = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.Model getFileModel()>();

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setRootModel(org.apache.maven.model.Model)>(inputModel);

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        profileActivationContext = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.DefaultProfileActivationContext getProfileActivationContext(org.apache.maven.model.building.ModelBuildingRequest)>(request);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(java.lang.String)>("(external profiles)");

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack13 = $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.ProfileSelector profileSelector>;

        $stack14 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.List getProfiles()>();

        $r2 = (org.apache.maven.model.profile.ProfileActivationContext) profileActivationContext;

        $r3 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        activeExternalProfiles = interfaceinvoke $stack13.<org.apache.maven.model.profile.ProfileSelector: java.util.List getActiveProfiles(java.util.Collection,org.apache.maven.model.profile.ProfileActivationContext,org.apache.maven.model.building.ModelProblemCollector)>($stack14, $r2, $r3);

        virtualinvoke result.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setActiveExternalProfiles(java.util.List)>(activeExternalProfiles);

        $stack17 = interfaceinvoke activeExternalProfiles.<java.util.List: boolean isEmpty()>();

        if $stack17 != 0 goto label3;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        interpolatedActivations = interfaceinvoke activeExternalProfiles.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack37 = interfaceinvoke interpolatedActivations.<java.util.Iterator: boolean hasNext()>();

        if $stack37 == 0 goto label2;

        $stack61 = interfaceinvoke interpolatedActivations.<java.util.Iterator: java.lang.Object next()>();

        profile = (org.apache.maven.model.Profile) $stack61;

        $stack62 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        virtualinvoke $u0.<java.util.Properties: void putAll(java.util.Map)>($stack62);

        goto label1;

     label2:
        $stack38 = virtualinvoke profileActivationContext.<org.apache.maven.model.profile.DefaultProfileActivationContext: java.util.Map getUserProperties()>();

        virtualinvoke $u0.<java.util.Properties: void putAll(java.util.Map)>($stack38);

        virtualinvoke profileActivationContext.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setUserProperties(java.util.Properties)>($u0);

     label3:
        $stack18 = virtualinvoke inputModel.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        virtualinvoke profileActivationContext.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setProjectProperties(java.util.Properties)>($stack18);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(inputModel);

        $r4 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack20 = $r4.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.ProfileSelector profileSelector>;

        $stack21 = virtualinvoke inputModel.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        $r5 = (org.apache.maven.model.profile.ProfileActivationContext) profileActivationContext;

        $r6 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        profileProps#4 = interfaceinvoke $stack20.<org.apache.maven.model.profile.ProfileSelector: java.util.List getActiveProfiles(java.util.Collection,org.apache.maven.model.profile.ProfileActivationContext,org.apache.maven.model.building.ModelProblemCollector)>($stack21, $r5, $r6);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(inputModel);

        $r7 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack23 = $r7.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.normalization.ModelNormalizer modelNormalizer>;

        $r8 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        interfaceinvoke $stack23.<org.apache.maven.model.normalization.ModelNormalizer: void mergeDuplicates(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(inputModel, request, $r8);

        $r9 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        interpolatedActivations#5 = specialinvoke $r9.<org.apache.maven.model.building.DefaultModelBuilder: java.util.Map getProfileActivations(org.apache.maven.model.Model,boolean)>(inputModel, 0);

        $r10 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $r10.<org.apache.maven.model.building.DefaultModelBuilder: void injectProfileActivations(org.apache.maven.model.Model,java.util.Map)>(inputModel, interpolatedActivations#5);

        profile#6 = interfaceinvoke profileProps#4.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack26 = interfaceinvoke profile#6.<java.util.Iterator: boolean hasNext()>();

        if $stack26 == 0 goto label5;

        $stack32 = interfaceinvoke profile#6.<java.util.Iterator: java.lang.Object next()>();

        activeProfile = (org.apache.maven.model.Profile) $stack32;

        $r11 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack33 = $r11.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.ProfileInjector profileInjector>;

        $r12 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        interfaceinvoke $stack33.<org.apache.maven.model.profile.ProfileInjector: void injectProfile(org.apache.maven.model.Model,org.apache.maven.model.Profile,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(inputModel, activeProfile, request, $r12);

        goto label4;

     label5:
        profile#6 = interfaceinvoke activeExternalProfiles.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $stack28 = interfaceinvoke profile#6.<java.util.Iterator: boolean hasNext()>();

        if $stack28 == 0 goto label7;

        $stack29 = interfaceinvoke profile#6.<java.util.Iterator: java.lang.Object next()>();

        activeProfile = (org.apache.maven.model.Profile) $stack29;

        $r13 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack30 = $r13.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.ProfileInjector profileInjector>;

        $r14 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        interfaceinvoke $stack30.<org.apache.maven.model.profile.ProfileInjector: void injectProfile(org.apache.maven.model.Model,org.apache.maven.model.Profile,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(inputModel, activeProfile, request, $r14);

        goto label6;

     label7:
        return;
    }

    private org.apache.maven.model.Model readEffectiveModel(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelBuildingResult, org.apache.maven.model.building.DefaultModelProblemCollector) throws org.apache.maven.model.building.ModelBuildingException
    {
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.Model inputModel, $stack26, rawModel, tmpModel, $stack52, $stack109, profile#115;
        org.apache.maven.model.building.ModelSource $stack23;
        org.apache.maven.model.profile.DefaultProfileActivationContext profileActivationContext;
        org.apache.maven.model.building.DefaultModelBuildingResult result;
        java.util.List activeExternalProfiles, activePomProfiles, $stack39, $stack47;
        boolean $stack29, $stack56, $stack96, $stack116, $stack129, $stack49;
        java.lang.String modelId, $stack55, $stack97, $stack102, parentId;
        java.util.Map interpolatedActivations, $stack130;
        org.apache.maven.model.resolution.ModelResolver $stack51, $stack114;
        org.apache.maven.building.Source $stack53, $r1;
        java.util.Iterator l19, lineage, parentData;
        org.apache.maven.model.building.ModelProblem$Version $stack100;
        org.apache.maven.model.building.ModelProblem$Severity $stack101;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack103, $u6;
        org.apache.maven.model.building.ModelBuildingException $stack104;
        java.lang.Object $stack105, $stack110, $stack122, $stack125, $stack133;
        java.lang.StringBuilder $stack106, $u5;
        org.apache.maven.model.path.ModelUrlNormalizer $stack112;
        org.apache.maven.model.profile.ProfileInjector $stack123, $stack126;
        java.util.Properties $stack134, $stack36, $stack44, $u2;
        org.apache.maven.model.Profile profile, activeProfile;
        org.apache.maven.model.building.ModelData profile#6, parentData#113, $u0, $u1;
        org.apache.maven.model.profile.ProfileSelector $stack38;
        org.apache.maven.model.normalization.ModelNormalizer $stack43;
        java.util.LinkedHashSet $u3;
        java.util.ArrayList $u4;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r2, $r3, $r4, $r7, $r9, $r10, $r11, $r13, $r15, $r16, $r19, $r21, $r23, $r25, $r26;
        org.apache.maven.model.profile.ProfileActivationContext $r5;
        org.apache.maven.model.building.ModelProblemCollector $r6, $r8, $r12, $r14, $r20, $r22, $r24;
        org.apache.maven.model.building.ModelBuildingResult $r17;
        java.lang.Throwable $r18;

        this := @this: DefaultModelBuilder;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        result := @parameter1: org.apache.maven.model.building.DefaultModelBuildingResult;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        inputModel = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model readRawModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>(request, problems);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setRootModel(org.apache.maven.model.Model)>(inputModel);

        $u0 = new org.apache.maven.model.building.ModelData;

        $stack23 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelSource getModelSource()>();

        $r1 = (org.apache.maven.building.Source) $stack23;

        specialinvoke $u0.<org.apache.maven.model.building.ModelData: void <init>(org.apache.maven.building.Source,org.apache.maven.model.Model)>($r1, inputModel);

        $u1 = new org.apache.maven.model.building.ModelData;

        $r2 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack26 = specialinvoke $r2.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model getSuperModel()>();

        specialinvoke $u1.<org.apache.maven.model.building.ModelData: void <init>(org.apache.maven.building.Source,org.apache.maven.model.Model)>(null, $stack26);

        $r3 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        profileActivationContext = specialinvoke $r3.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.DefaultProfileActivationContext getProfileActivationContext(org.apache.maven.model.building.ModelBuildingRequest)>(request);

        activeExternalProfiles = virtualinvoke result.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List getActiveExternalProfiles()>();

        $stack29 = interfaceinvoke activeExternalProfiles.<java.util.List: boolean isEmpty()>();

        if $stack29 != 0 goto label03;

        $u2 = new java.util.Properties;

        specialinvoke $u2.<java.util.Properties: void <init>()>();

        lineage = interfaceinvoke activeExternalProfiles.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $stack129 = interfaceinvoke lineage.<java.util.Iterator: boolean hasNext()>();

        if $stack129 == 0 goto label02;

        $stack133 = interfaceinvoke lineage.<java.util.Iterator: java.lang.Object next()>();

        profile = (org.apache.maven.model.Profile) $stack133;

        $stack134 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        virtualinvoke $u2.<java.util.Properties: void putAll(java.util.Map)>($stack134);

        goto label01;

     label02:
        $stack130 = virtualinvoke profileActivationContext.<org.apache.maven.model.profile.DefaultProfileActivationContext: java.util.Map getUserProperties()>();

        virtualinvoke $u2.<java.util.Properties: void putAll(java.util.Map)>($stack130);

        virtualinvoke profileActivationContext.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setUserProperties(java.util.Properties)>($u2);

     label03:
        $u3 = new java.util.LinkedHashSet;

        specialinvoke $u3.<java.util.LinkedHashSet: void <init>()>();

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        profile#6 = $u0;

     label04:
        modelId = virtualinvoke profile#6.<org.apache.maven.model.building.ModelData: java.lang.String getId()>();

        virtualinvoke result.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult addModelId(java.lang.String)>(modelId);

        rawModel = virtualinvoke profile#6.<org.apache.maven.model.building.ModelData: org.apache.maven.model.Model getModel()>();

        virtualinvoke result.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setRawModel(java.lang.String,org.apache.maven.model.Model)>(modelId, rawModel);

        $stack36 = virtualinvoke rawModel.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        virtualinvoke profileActivationContext.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setProjectProperties(java.util.Properties)>($stack36);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(rawModel);

        $r4 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack38 = $r4.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.ProfileSelector profileSelector>;

        $stack39 = virtualinvoke rawModel.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        $r5 = (org.apache.maven.model.profile.ProfileActivationContext) profileActivationContext;

        $r6 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        activePomProfiles = interfaceinvoke $stack38.<org.apache.maven.model.profile.ProfileSelector: java.util.List getActiveProfiles(java.util.Collection,org.apache.maven.model.profile.ProfileActivationContext,org.apache.maven.model.building.ModelProblemCollector)>($stack39, $r5, $r6);

        virtualinvoke result.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setActivePomProfiles(java.lang.String,java.util.List)>(modelId, activePomProfiles);

        tmpModel = virtualinvoke rawModel.<org.apache.maven.model.Model: org.apache.maven.model.Model clone()>();

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(tmpModel);

        $r7 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack43 = $r7.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.normalization.ModelNormalizer modelNormalizer>;

        $r8 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        interfaceinvoke $stack43.<org.apache.maven.model.normalization.ModelNormalizer: void mergeDuplicates(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(tmpModel, request, $r8);

        $stack44 = virtualinvoke tmpModel.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        virtualinvoke profileActivationContext.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setProjectProperties(java.util.Properties)>($stack44);

        $r9 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        interpolatedActivations = specialinvoke $r9.<org.apache.maven.model.building.DefaultModelBuilder: java.util.Map getInterpolatedActivations(org.apache.maven.model.Model,org.apache.maven.model.profile.DefaultProfileActivationContext,org.apache.maven.model.building.DefaultModelProblemCollector)>(rawModel, profileActivationContext, problems);

        $r10 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $r10.<org.apache.maven.model.building.DefaultModelBuilder: void injectProfileActivations(org.apache.maven.model.Model,java.util.Map)>(tmpModel, interpolatedActivations);

        $stack47 = virtualinvoke result.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List getActivePomProfiles(java.lang.String)>(modelId);

        parentData = interfaceinvoke $stack47.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $stack49 = interfaceinvoke parentData.<java.util.Iterator: boolean hasNext()>();

        if $stack49 == 0 goto label06;

        $stack125 = interfaceinvoke parentData.<java.util.Iterator: java.lang.Object next()>();

        activeProfile = (org.apache.maven.model.Profile) $stack125;

        $r11 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack126 = $r11.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.ProfileInjector profileInjector>;

        $r12 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        interfaceinvoke $stack126.<org.apache.maven.model.profile.ProfileInjector: void injectProfile(org.apache.maven.model.Model,org.apache.maven.model.Profile,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(tmpModel, activeProfile, request, $r12);

        goto label05;

     label06:
        if profile#6 != $u0 goto label09;

        parentData = interfaceinvoke activeExternalProfiles.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $stack116 = interfaceinvoke parentData.<java.util.Iterator: boolean hasNext()>();

        if $stack116 == 0 goto label08;

        $stack122 = interfaceinvoke parentData.<java.util.Iterator: java.lang.Object next()>();

        activeProfile = (org.apache.maven.model.Profile) $stack122;

        $r13 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack123 = $r13.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.profile.ProfileInjector profileInjector>;

        $r14 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        interfaceinvoke $stack123.<org.apache.maven.model.profile.ProfileInjector: void injectProfile(org.apache.maven.model.Model,org.apache.maven.model.Profile,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(tmpModel, activeProfile, request, $r14);

        goto label07;

     label08:
        virtualinvoke result.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setEffectiveModel(org.apache.maven.model.Model)>(tmpModel);

     label09:
        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>(tmpModel);

        if profile#6 != $u1 goto label10;

        goto label16;

     label10:
        $stack51 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.resolution.ModelResolver getModelResolver()>();

        $r15 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $r15.<org.apache.maven.model.building.DefaultModelBuilder: void configureResolver(org.apache.maven.model.resolution.ModelResolver,org.apache.maven.model.Model,org.apache.maven.model.building.DefaultModelProblemCollector)>($stack51, tmpModel, problems);

        $stack52 = virtualinvoke profile#6.<org.apache.maven.model.building.ModelData: org.apache.maven.model.Model getModel()>();

        $stack53 = virtualinvoke profile#6.<org.apache.maven.model.building.ModelData: org.apache.maven.building.Source getSource()>();

        $r16 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r17 = (org.apache.maven.model.building.ModelBuildingResult) result;

        parentData#113 = specialinvoke $r16.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelData readParent(org.apache.maven.model.Model,org.apache.maven.building.Source,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelBuildingResult,org.apache.maven.model.building.DefaultModelProblemCollector)>($stack52, $stack53, request, $r17, problems);

        if parentData#113 != null goto label11;

        profile#6 = $u1;

        goto label15;

     label11:
        $stack55 = virtualinvoke parentData#113.<org.apache.maven.model.building.ModelData: java.lang.String getId()>();

        $stack56 = interfaceinvoke $u3.<java.util.Collection: boolean add(java.lang.Object)>($stack55);

        if $stack56 != 0 goto label14;

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>(java.lang.String)>("The parents form a cycle: ");

        l19 = interfaceinvoke $u3.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $stack96 = interfaceinvoke l19.<java.util.Iterator: boolean hasNext()>();

        if $stack96 == 0 goto label13;

        $stack105 = interfaceinvoke l19.<java.util.Iterator: java.lang.Object next()>();

        parentId = (java.lang.String) $stack105;

        $stack106 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parentId);

        virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        goto label12;

     label13:
        $stack97 = virtualinvoke parentData#113.<org.apache.maven.model.building.ModelData: java.lang.String getId()>();

        virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack97);

        $u6 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack101 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack100 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u6.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack101, $stack100);

        $stack102 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack103 = virtualinvoke $u6.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack102);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack103);

        $stack104 = virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingException newModelBuildingException()>();

        $r18 = (java.lang.Throwable) $stack104;

        throw $r18;

     label14:
        profile#6 = parentData#113;

     label15:
        goto label04;

     label16:
        $stack109 = virtualinvoke result.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.Model getRawModel()>();

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>($stack109);

        $r19 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r20 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        specialinvoke $r19.<org.apache.maven.model.building.DefaultModelBuilder: void checkPluginVersions(java.util.List,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u4, request, $r20);

        $r21 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r22 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        specialinvoke $r21.<org.apache.maven.model.building.DefaultModelBuilder: void assembleInheritance(java.util.List,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u4, request, $r22);

        $stack110 = interfaceinvoke $u4.<java.util.List: java.lang.Object get(int)>(0);

        profile#115 = (org.apache.maven.model.Model) $stack110;

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(profile#115);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setRootModel(org.apache.maven.model.Model)>(profile#115);

        $r23 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r24 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        profile#115 = specialinvoke $r23.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model interpolateModel(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(profile#115, request, $r24);

        $r25 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack112 = $r25.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.path.ModelUrlNormalizer modelUrlNormalizer>;

        interfaceinvoke $stack112.<org.apache.maven.model.path.ModelUrlNormalizer: void normalize(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest)>(profile#115, request);

        virtualinvoke result.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setEffectiveModel(org.apache.maven.model.Model)>(profile#115);

        $stack114 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.resolution.ModelResolver getModelResolver()>();

        $r26 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $r26.<org.apache.maven.model.building.DefaultModelBuilder: void configureResolver(org.apache.maven.model.resolution.ModelResolver,org.apache.maven.model.Model,org.apache.maven.model.building.DefaultModelProblemCollector,boolean)>($stack114, profile#115, problems, 1);

        return profile#115;
    }

    private java.util.Map getInterpolatedActivations(org.apache.maven.model.Model, org.apache.maven.model.profile.DefaultProfileActivationContext, org.apache.maven.model.building.DefaultModelProblemCollector)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.Model rawModel;
        java.util.Map interpolatedActivations;
        java.util.Collection $stack8;
        java.util.Iterator l5;
        boolean $stack10;
        java.lang.Object $stack11;
        org.apache.maven.model.Activation activation;
        org.apache.maven.model.ActivationFile $stack12, $stack14;
        org.apache.maven.model.profile.DefaultProfileActivationContext context;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;
        org.apache.maven.model.profile.ProfileActivationContext $r2;

        this := @this: DefaultModelBuilder;

        rawModel := @parameter0: org.apache.maven.model.Model;

        context := @parameter1: org.apache.maven.model.profile.DefaultProfileActivationContext;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        interpolatedActivations = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: java.util.Map getProfileActivations(org.apache.maven.model.Model,boolean)>(rawModel, 1);

        $stack8 = interfaceinvoke interpolatedActivations.<java.util.Map: java.util.Collection values()>();

        l5 = interfaceinvoke $stack8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label3;

        $stack11 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        activation = (org.apache.maven.model.Activation) $stack11;

        $stack12 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationFile getFile()>();

        if $stack12 == null goto label2;

        $stack14 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationFile getFile()>();

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r2 = (org.apache.maven.model.profile.ProfileActivationContext) context;

        specialinvoke $r1.<org.apache.maven.model.building.DefaultModelBuilder: void replaceWithInterpolatedValue(org.apache.maven.model.ActivationFile,org.apache.maven.model.profile.ProfileActivationContext,org.apache.maven.model.building.DefaultModelProblemCollector)>($stack14, $r2, problems);

     label2:
        goto label1;

     label3:
        return interpolatedActivations;
    }

    private void replaceWithInterpolatedValue(org.apache.maven.model.ActivationFile, org.apache.maven.model.profile.ProfileActivationContext, org.apache.maven.model.building.DefaultModelProblemCollector)
    {
        org.apache.maven.model.ActivationFile activationFile;
        java.lang.String $stack6, $stack8, $stack17, $stack27, $stack29, $stack31, path, absolutePath, $stack19, $stack36;
        boolean $stack7, $stack9, $stack18, $stack32;
        DefaultModelBuilder this;
        org.apache.maven.model.profile.ProfileActivationContext context;
        org.apache.maven.model.path.ProfileActivationFilePathInterpolator $stack11, $stack14;
        java.lang.Throwable $stack16;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Version $stack21;
        org.apache.maven.model.building.ModelProblem$Severity $stack22;
        java.lang.StringBuilder $stack24, $stack25, $stack26, $stack28, $u1;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack30, $stack34, $stack35, $u0;
        org.apache.maven.model.InputLocation $stack33;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;
        org.codehaus.plexus.interpolation.InterpolationException $r2;
        java.lang.Exception $r3;

        this := @this: DefaultModelBuilder;

        activationFile := @parameter0: org.apache.maven.model.ActivationFile;

        context := @parameter1: org.apache.maven.model.profile.ProfileActivationContext;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

     label1:
        $stack6 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        $stack7 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder: boolean isNotEmpty(java.lang.String)>($stack6);

        if $stack7 == 0 goto label2;

        path = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack14 = $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.path.ProfileActivationFilePathInterpolator profileActivationFilePathInterpolator>;

        absolutePath = virtualinvoke $stack14.<org.apache.maven.model.path.ProfileActivationFilePathInterpolator: java.lang.String interpolate(java.lang.String,org.apache.maven.model.profile.ProfileActivationContext)>(path, context);

        virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: void setExists(java.lang.String)>(absolutePath);

        goto label3;

     label2:
        $stack8 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

        $stack9 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder: boolean isNotEmpty(java.lang.String)>($stack8);

        if $stack9 == 0 goto label3;

        path = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack11 = $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.path.ProfileActivationFilePathInterpolator profileActivationFilePathInterpolator>;

        absolutePath = virtualinvoke $stack11.<org.apache.maven.model.path.ProfileActivationFilePathInterpolator: java.lang.String interpolate(java.lang.String,org.apache.maven.model.profile.ProfileActivationContext)>(path, context);

        virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: void setMissing(java.lang.String)>(absolutePath);

     label3:
        goto label9;

     label4:
        $stack16 := @caughtexception;

        $stack17 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        $stack18 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder: boolean isNotEmpty(java.lang.String)>($stack17);

        if $stack18 == 0 goto label5;

        $stack19 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        goto label6;

     label5:
        $stack19 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

     label6:
        $u0 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack22 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack21 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack22, $stack21);

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack24 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to interpolate file location ");

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r2 = (org.codehaus.plexus.interpolation.InterpolationException) $stack16;

        $stack27 = virtualinvoke $r2.<org.codehaus.plexus.interpolation.InterpolationException: java.lang.String getMessage()>();

        $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack30 = virtualinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack29);

        $stack31 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        $stack32 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder: boolean isNotEmpty(java.lang.String)>($stack31);

        if $stack32 == 0 goto label7;

        $stack36 = "exists";

        goto label8;

     label7:
        $stack36 = "missing";

     label8:
        $stack33 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>($stack36);

        $stack34 = virtualinvoke $stack30.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack33);

        $r3 = (java.lang.Exception) $stack16;

        $stack35 = virtualinvoke $stack34.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($r3);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack35);

     label9:
        return;

        catch org.codehaus.plexus.interpolation.InterpolationException from label1 to label3 with label4;
    }

    private static boolean isNotEmpty(java.lang.String)
    {
        java.lang.String string;
        boolean $stack1, $stack2;

        string := @parameter0: java.lang.String;

        if string == null goto label1;

        $stack1 = virtualinvoke string.<java.lang.String: boolean isEmpty()>();

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    public org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult) throws org.apache.maven.model.building.ModelBuildingException
    {
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelBuildingResult result, $stack4;
        java.util.LinkedHashSet $u0;
        org.apache.maven.model.building.DefaultModelBuilder $r0;

        this := @this: DefaultModelBuilder;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        result := @parameter1: org.apache.maven.model.building.ModelBuildingResult;

        $u0 = new java.util.LinkedHashSet;

        specialinvoke $u0.<java.util.LinkedHashSet: void <init>()>();

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelBuildingResult,java.util.Collection)>(request, result, $u0);

        return $stack4;
    }

    private org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, java.util.Collection) throws org.apache.maven.model.building.ModelBuildingException
    {
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelBuildingResult phaseOneResult, $r1, $r27;
        org.apache.maven.model.building.DefaultModelBuildingResult result;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.Model resultModel;
        org.apache.maven.model.path.ModelPathTranslator $stack10;
        java.io.File $stack11;
        org.apache.maven.model.management.PluginManagementInjector $stack12;
        org.apache.maven.model.building.ModelBuildingEventCatapult $stack13;
        boolean $stack14, $stack17, $stack19;
        java.util.Collection imports;
        org.apache.maven.model.management.DependencyManagementInjector $stack15;
        org.apache.maven.model.normalization.ModelNormalizer $stack16;
        org.apache.maven.model.validation.ModelValidator $stack18;
        org.apache.maven.model.building.ModelBuildingException $stack20;
        org.apache.maven.model.plugin.ReportConfigurationExpander $stack21;
        org.apache.maven.model.plugin.ReportingConverter $stack22;
        org.apache.maven.model.plugin.PluginConfigurationExpander $stack23;
        org.apache.maven.model.plugin.LifecycleBindingsInjector $stack30, $stack31;
        org.apache.maven.model.building.DefaultModelProblemCollector $u0;
        java.lang.IllegalStateException $u1;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r2, $r3, $r4, $r6, $r8, $r9, $r11, $r12, $r14, $r16, $r18, $r20, $r22, $r24;
        org.apache.maven.model.building.ModelProblemCollector $r5, $r7, $r10, $r13, $r15, $r17, $r19, $r21, $r23;
        org.apache.maven.model.building.ModelProblemCollectorExt $r25;
        java.lang.Throwable $r26;

        this := @this: DefaultModelBuilder;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        phaseOneResult := @parameter1: org.apache.maven.model.building.ModelBuildingResult;

        imports := @parameter2: java.util.Collection;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        result = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.DefaultModelBuildingResult asDefaultModelBuildingResult(org.apache.maven.model.building.ModelBuildingResult)>(phaseOneResult);

        $u0 = new org.apache.maven.model.building.DefaultModelProblemCollector;

        $r1 = (org.apache.maven.model.building.ModelBuildingResult) result;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelProblemCollector: void <init>(org.apache.maven.model.building.ModelBuildingResult)>($r1);

        $r2 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        resultModel = specialinvoke $r2.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model readEffectiveModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelBuildingResult,org.apache.maven.model.building.DefaultModelProblemCollector)>(request, result, $u0);

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(resultModel);

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelProblemCollector: void setRootModel(org.apache.maven.model.Model)>(resultModel);

        $r3 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack10 = $r3.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.path.ModelPathTranslator modelPathTranslator>;

        $stack11 = virtualinvoke resultModel.<org.apache.maven.model.Model: java.io.File getProjectDirectory()>();

        interfaceinvoke $stack10.<org.apache.maven.model.path.ModelPathTranslator: void alignToBaseDirectory(org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest)>(resultModel, $stack11, request);

        $r4 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack12 = $r4.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.management.PluginManagementInjector pluginManagementInjector>;

        $r5 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        interfaceinvoke $stack12.<org.apache.maven.model.management.PluginManagementInjector: void injectManagement(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(resultModel, request, $r5);

        $stack13 = <org.apache.maven.model.building.ModelBuildingEventCatapult: org.apache.maven.model.building.ModelBuildingEventCatapult BUILD_EXTENSIONS_ASSEMBLED>;

        $r6 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r7 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        specialinvoke $r6.<org.apache.maven.model.building.DefaultModelBuilder: void fireEvent(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelBuildingEventCatapult)>(resultModel, request, $r7, $stack13);

        $stack14 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: boolean isProcessPlugins()>();

        if $stack14 == 0 goto label2;

        $r8 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack30 = $r8.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.plugin.LifecycleBindingsInjector lifecycleBindingsInjector>;

        if $stack30 != null goto label1;

        $u1 = new java.lang.IllegalStateException;

        specialinvoke $u1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("lifecycle bindings injector is missing");

        throw $u1;

     label1:
        $r9 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack31 = $r9.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.plugin.LifecycleBindingsInjector lifecycleBindingsInjector>;

        $r10 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        interfaceinvoke $stack31.<org.apache.maven.model.plugin.LifecycleBindingsInjector: void injectLifecycleBindings(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(resultModel, request, $r10);

     label2:
        $r11 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $r11.<org.apache.maven.model.building.DefaultModelBuilder: void importDependencyManagement(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector,java.util.Collection)>(resultModel, request, $u0, imports);

        $r12 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack15 = $r12.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.management.DependencyManagementInjector dependencyManagementInjector>;

        $r13 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        interfaceinvoke $stack15.<org.apache.maven.model.management.DependencyManagementInjector: void injectManagement(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(resultModel, request, $r13);

        $r14 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack16 = $r14.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.normalization.ModelNormalizer modelNormalizer>;

        $r15 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        interfaceinvoke $stack16.<org.apache.maven.model.normalization.ModelNormalizer: void injectDefaultValues(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(resultModel, request, $r15);

        $stack17 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: boolean isProcessPlugins()>();

        if $stack17 == 0 goto label3;

        $r16 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack21 = $r16.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.plugin.ReportConfigurationExpander reportConfigurationExpander>;

        $r17 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        interfaceinvoke $stack21.<org.apache.maven.model.plugin.ReportConfigurationExpander: void expandPluginConfiguration(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(resultModel, request, $r17);

        $r18 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack22 = $r18.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.plugin.ReportingConverter reportingConverter>;

        $r19 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        interfaceinvoke $stack22.<org.apache.maven.model.plugin.ReportingConverter: void convertReporting(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(resultModel, request, $r19);

        $r20 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack23 = $r20.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.plugin.PluginConfigurationExpander pluginConfigurationExpander>;

        $r21 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        interfaceinvoke $stack23.<org.apache.maven.model.plugin.PluginConfigurationExpander: void expandPluginConfiguration(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(resultModel, request, $r21);

     label3:
        $r22 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack18 = $r22.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.validation.ModelValidator modelValidator>;

        $r23 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        interfaceinvoke $stack18.<org.apache.maven.model.validation.ModelValidator: void validateEffectiveModel(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(resultModel, request, $r23);

        $r24 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r25 = (org.apache.maven.model.building.ModelProblemCollectorExt) $u0;

        $stack19 = virtualinvoke $r24.<org.apache.maven.model.building.DefaultModelBuilder: boolean hasModelErrors(org.apache.maven.model.building.ModelProblemCollectorExt)>($r25);

        if $stack19 == 0 goto label4;

        $stack20 = virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingException newModelBuildingException()>();

        $r26 = (java.lang.Throwable) $stack20;

        throw $r26;

     label4:
        $r27 = (org.apache.maven.model.building.ModelBuildingResult) result;

        return $r27;
    }

    private org.apache.maven.model.building.DefaultModelBuildingResult asDefaultModelBuildingResult(org.apache.maven.model.building.ModelBuildingResult)
    {
        org.apache.maven.model.building.ModelBuildingResult phaseOneResult;
        boolean $stack2;
        org.apache.maven.model.building.DefaultModelBuildingResult $stack3, $stack4;
        DefaultModelBuilder this;

        this := @this: DefaultModelBuilder;

        phaseOneResult := @parameter0: org.apache.maven.model.building.ModelBuildingResult;

        $stack2 = phaseOneResult instanceof org.apache.maven.model.building.DefaultModelBuildingResult;

        if $stack2 == 0 goto label1;

        $stack4 = (org.apache.maven.model.building.DefaultModelBuildingResult) phaseOneResult;

        return $stack4;

     label1:
        $stack3 = new org.apache.maven.model.building.DefaultModelBuildingResult;

        specialinvoke $stack3.<org.apache.maven.model.building.DefaultModelBuildingResult: void <init>(org.apache.maven.model.building.ModelBuildingResult)>(phaseOneResult);

        return $stack3;
    }

    public org.apache.maven.model.building.Result buildRawModel(java.io.File, int, boolean)
    {
        int validationLevel;
        org.apache.maven.model.building.DefaultModelBuildingRequest $stack8, request, $u0;
        boolean locationTracking;
        DefaultModelBuilder this;
        org.apache.maven.model.Model $stack12;
        java.util.List $stack13, $stack16;
        org.apache.maven.model.building.Result $stack14, $stack17;
        java.lang.Throwable $stack15;
        java.io.File pomFile;
        org.apache.maven.model.building.DefaultModelBuildingResult $u1;
        org.apache.maven.model.building.DefaultModelProblemCollector $u2;
        org.apache.maven.model.building.ModelBuildingResult $r0;
        org.apache.maven.model.building.DefaultModelBuilder $r1;
        org.apache.maven.model.building.ModelBuildingRequest $r2;

        this := @this: DefaultModelBuilder;

        pomFile := @parameter0: java.io.File;

        validationLevel := @parameter1: int;

        locationTracking := @parameter2: boolean;

        $u0 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>()>();

        $stack8 = virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setValidationLevel(int)>(validationLevel);

        request = virtualinvoke $stack8.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setLocationTracking(boolean)>(locationTracking);

        $u2 = new org.apache.maven.model.building.DefaultModelProblemCollector;

        $u1 = new org.apache.maven.model.building.DefaultModelBuildingResult;

        specialinvoke $u1.<org.apache.maven.model.building.DefaultModelBuildingResult: void <init>()>();

        $r0 = (org.apache.maven.model.building.ModelBuildingResult) $u1;

        specialinvoke $u2.<org.apache.maven.model.building.DefaultModelProblemCollector: void <init>(org.apache.maven.model.building.ModelBuildingResult)>($r0);

     label1:
        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r2 = (org.apache.maven.model.building.ModelBuildingRequest) request;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model readFileModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>($r2, $u2);

        $stack13 = virtualinvoke $u2.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.List getProblems()>();

        $stack14 = staticinvoke <org.apache.maven.model.building.Result: org.apache.maven.model.building.Result newResult(java.lang.Object,java.lang.Iterable)>($stack12, $stack13);

     label2:
        return $stack14;

     label3:
        $stack15 := @caughtexception;

        $stack16 = virtualinvoke $u2.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.List getProblems()>();

        $stack17 = staticinvoke <org.apache.maven.model.building.Result: org.apache.maven.model.building.Result error(java.lang.Iterable)>($stack16);

        return $stack17;

        catch org.apache.maven.model.building.ModelBuildingException from label1 to label2 with label3;
    }

    private org.apache.maven.model.Model readFileModel(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector) throws org.apache.maven.model.building.ModelBuildingException
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelSource modelSource;
        org.apache.maven.model.building.ModelCache $stack7, $stack18;
        org.apache.maven.model.building.ModelCacheTag $stack8, $stack19;
        java.lang.Object $stack9;
        boolean $stack10, $stack12;
        org.apache.maven.model.building.TransformerContextBuilder $stack11, $stack14;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder contextBuilder;
        DefaultModelBuilder this;
        java.lang.String $stack15, $stack16;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.Model model;
        org.apache.maven.building.Source $r0, $r3, $r5;
        org.apache.maven.model.building.DefaultModelBuilder $r1, $r2, $r4;

        this := @this: DefaultModelBuilder;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter1: org.apache.maven.model.building.DefaultModelProblemCollector;

        modelSource = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelSource getModelSource()>();

        $stack7 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelCache getModelCache()>();

        $stack8 = <org.apache.maven.model.building.ModelCacheTag: org.apache.maven.model.building.ModelCacheTag FILE>;

        $r0 = (org.apache.maven.building.Source) modelSource;

        $stack9 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder: java.lang.Object fromCache(org.apache.maven.model.building.ModelCache,org.apache.maven.building.Source,org.apache.maven.model.building.ModelCacheTag)>($stack7, $r0, $stack8);

        model = (org.apache.maven.model.Model) $stack9;

        if model != null goto label1;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        model = specialinvoke $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model doReadFileModel(org.apache.maven.model.building.ModelSource,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>(modelSource, request, problems);

        $stack18 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelCache getModelCache()>();

        $stack19 = <org.apache.maven.model.building.ModelCacheTag: org.apache.maven.model.building.ModelCacheTag FILE>;

        $r2 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r3 = (org.apache.maven.building.Source) modelSource;

        specialinvoke $r2.<org.apache.maven.model.building.DefaultModelBuilder: void intoCache(org.apache.maven.model.building.ModelCache,org.apache.maven.building.Source,org.apache.maven.model.building.ModelCacheTag,java.lang.Object)>($stack18, $r3, $stack19, model);

     label1:
        $stack10 = modelSource instanceof org.apache.maven.model.building.FileModelSource;

        if $stack10 == 0 goto label2;

        $stack11 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.TransformerContextBuilder getTransformerContextBuilder()>();

        $stack12 = $stack11 instanceof org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder;

        if $stack12 == 0 goto label2;

        $stack14 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.TransformerContextBuilder getTransformerContextBuilder()>();

        contextBuilder = (org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder) $stack14;

        $r4 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack15 = specialinvoke $r4.<org.apache.maven.model.building.DefaultModelBuilder: java.lang.String getGroupId(org.apache.maven.model.Model)>(model);

        $stack16 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $r5 = (org.apache.maven.building.Source) modelSource;

        virtualinvoke contextBuilder.<org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder: void putSource(java.lang.String,java.lang.String,org.apache.maven.building.Source)>($stack15, $stack16, $r5);

     label2:
        return model;
    }

    private org.apache.maven.model.Model doReadFileModel(org.apache.maven.model.building.ModelSource, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector) throws org.apache.maven.model.building.ModelBuildingException
    {
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.building.ModelSource modelSource;
        java.lang.String $stack10, $stack35, $stack36, $stack54, $stack87, $stack90, $stack92, $stack108, $stack111, $stack113, options#13, $stack63, $stack67;
        org.apache.maven.model.building.ModelBuildingRequest request;
        int $stack11, $stack78;
        java.lang.Boolean $stack14, $stack98;
        boolean $stack17, $stack21, $stack23, $stack55, $stack103, $stack43, strict;
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelProcessor $stack18, $stack100;
        java.io.InputStream $stack19, $stack101;
        org.apache.maven.model.validation.ModelValidator $stack22;
        org.apache.maven.model.building.ModelBuildingException $stack24, $stack95, $stack70;
        org.apache.maven.model.building.FileModelSource $stack25;
        java.io.File $stack26;
        java.util.function.Function $stack38;
        java.lang.Object $stack39;
        java.io.IOException $stack51;
        java.lang.Class $stack53, $stack56;
        java.lang.Throwable $stack81, $stack96, $stack97, $r6, $r7, $r12;
        org.apache.maven.model.building.ModelProblem$Version $stack83, $stack105, $stack59;
        org.apache.maven.model.building.ModelProblem$Severity $stack84, $stack117, $stack60;
        java.lang.StringBuilder $stack86, $stack88, $stack89, $stack91, $stack107, $stack109, $stack110, $stack112, $stack62, $stack64, $stack65, $stack66, $u2, $u4, $u6;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack93, $stack94, $stack114, $stack115, $stack68, $stack69, $u1, $u3, $u5;
        org.apache.maven.model.InputSource source;
        org.apache.maven.model.Model model;
        java.util.HashMap $u0;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1, $r8, $r10;
        org.apache.maven.model.io.ModelParseException $r2, $r4;
        java.lang.Exception $r3, $r5;
        org.apache.maven.model.building.ModelProblemCollector $r9;
        org.apache.maven.model.building.ModelProblemCollectorExt $r11;

        this := @this: DefaultModelBuilder;

        modelSource := @parameter0: org.apache.maven.model.building.ModelSource;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        $stack10 = interfaceinvoke modelSource.<org.apache.maven.model.building.ModelSource: java.lang.String getLocation()>();

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(java.lang.String)>($stack10);

     label01:
        $stack11 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack11 < 20 goto label02;

        $stack43 = 1;

        goto label03;

     label02:
        $stack43 = 0;

     label03:
        strict = $stack43;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>(int)>(3);

        $stack14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack43);

        interfaceinvoke $u0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.maven.model.io.isStrict", $stack14);

        interfaceinvoke $u0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.maven.model.building.source", modelSource);

        $stack17 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: boolean isLocationTracking()>();

        if $stack17 == 0 goto label04;

        $stack38 = staticinvoke <DefaultModelBuilder$lambda_doReadFileModel_0__309: java.util.function.Function bootstrap$()>();

        $stack39 = interfaceinvoke $u0.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>("org.apache.maven.model.io.inputSource", $stack38);

        source = (org.apache.maven.model.InputSource) $stack39;

        goto label05;

     label04:
        source = null;

     label05:
        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack18 = $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelProcessor modelProcessor>;

        $stack19 = interfaceinvoke modelSource.<org.apache.maven.model.building.ModelSource: java.io.InputStream getInputStream()>();

        model = interfaceinvoke $stack18.<org.apache.maven.model.building.ModelProcessor: org.apache.maven.model.Model read(java.io.InputStream,java.util.Map)>($stack19, $u0);

     label06:
        goto label15;

     label07:
        $stack97 := @caughtexception;

        if strict != 0 goto label08;

        throw $stack97;

     label08:
        $stack98 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        interfaceinvoke $u0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("org.apache.maven.model.io.isStrict", $stack98);

     label09:
        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack100 = $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelProcessor modelProcessor>;

        $stack101 = interfaceinvoke modelSource.<org.apache.maven.model.building.ModelSource: java.io.InputStream getInputStream()>();

        model = interfaceinvoke $stack100.<org.apache.maven.model.building.ModelProcessor: org.apache.maven.model.Model read(java.io.InputStream,java.util.Map)>($stack101, $u0);

     label10:
        goto label12;

     label11:
        $stack96 := @caughtexception;

        throw $stack97;

     label12:
        $stack103 = modelSource instanceof org.apache.maven.model.building.FileModelSource;

        if $stack103 == 0 goto label13;

        $stack117 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        goto label14;

     label13:
        $stack117 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

     label14:
        $u1 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack105 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        specialinvoke $u1.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack117, $stack105);

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack107 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed POM ");

        $stack108 = interfaceinvoke modelSource.<org.apache.maven.model.building.ModelSource: java.lang.String getLocation()>();

        $stack109 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack108);

        $stack110 = virtualinvoke $stack109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r2 = (org.apache.maven.model.io.ModelParseException) $stack97;

        $stack111 = virtualinvoke $r2.<org.apache.maven.model.io.ModelParseException: java.lang.String getMessage()>();

        $stack112 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack111);

        $stack113 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack114 = virtualinvoke $u1.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack113);

        $r3 = (java.lang.Exception) $stack97;

        $stack115 = virtualinvoke $stack114.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($r3);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack115);

     label15:
        if source == null goto label16;

        $stack35 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(org.apache.maven.model.Model)>(model);

        virtualinvoke source.<org.apache.maven.model.InputSource: void setModelId(java.lang.String)>($stack35);

        $stack36 = interfaceinvoke modelSource.<org.apache.maven.model.building.ModelSource: java.lang.String getLocation()>();

        virtualinvoke source.<org.apache.maven.model.InputSource: void setLocation(java.lang.String)>($stack36);

     label16:
        goto label22;

     label17:
        $stack81 := @caughtexception;

        $u3 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack84 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack83 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u3.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack84, $stack83);

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack86 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-parseable POM ");

        $stack87 = interfaceinvoke modelSource.<org.apache.maven.model.building.ModelSource: java.lang.String getLocation()>();

        $stack88 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack87);

        $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = (org.apache.maven.model.io.ModelParseException) $stack81;

        $stack90 = virtualinvoke $r4.<org.apache.maven.model.io.ModelParseException: java.lang.String getMessage()>();

        $stack91 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack90);

        $stack92 = virtualinvoke $stack91.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack93 = virtualinvoke $u3.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack92);

        $r5 = (java.lang.Exception) $stack81;

        $stack94 = virtualinvoke $stack93.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($r5);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack94);

        $stack95 = virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingException newModelBuildingException()>();

        $r6 = (java.lang.Throwable) $stack95;

        throw $r6;

     label18:
        $stack51 := @caughtexception;

        options#13 = virtualinvoke $stack51.<java.io.IOException: java.lang.String getMessage()>();

        if options#13 == null goto label19;

        $stack78 = virtualinvoke options#13.<java.lang.String: int length()>();

        if $stack78 > 0 goto label21;

     label19:
        $stack53 = virtualinvoke $stack51.<java.lang.Object: java.lang.Class getClass()>();

        $stack54 = virtualinvoke $stack53.<java.lang.Class: java.lang.String getName()>();

        $stack55 = virtualinvoke $stack54.<java.lang.String: boolean endsWith(java.lang.String)>("MalformedInputException");

        if $stack55 == 0 goto label20;

        options#13 = "Some input bytes do not match the file encoding.";

        goto label21;

     label20:
        $stack56 = virtualinvoke $stack51.<java.lang.Object: java.lang.Class getClass()>();

        options#13 = virtualinvoke $stack56.<java.lang.Class: java.lang.String getSimpleName()>();

     label21:
        $u5 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack60 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack59 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u5.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack60, $stack59);

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack62 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-readable POM ");

        $stack63 = interfaceinvoke modelSource.<org.apache.maven.model.building.ModelSource: java.lang.String getLocation()>();

        $stack64 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack63);

        $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(options#13);

        $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack68 = virtualinvoke $u5.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack67);

        $stack69 = virtualinvoke $stack68.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($stack51);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack69);

        $stack70 = virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingException newModelBuildingException()>();

        $r7 = (java.lang.Throwable) $stack70;

        throw $r7;

     label22:
        $stack21 = modelSource instanceof org.apache.maven.model.building.FileModelSource;

        if $stack21 == 0 goto label23;

        $stack25 = (org.apache.maven.model.building.FileModelSource) modelSource;

        $stack26 = virtualinvoke $stack25.<org.apache.maven.model.building.FileModelSource: java.io.File getFile()>();

        virtualinvoke model.<org.apache.maven.model.Model: void setPomFile(java.io.File)>($stack26);

     label23:
        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(model);

        $r8 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack22 = $r8.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.validation.ModelValidator modelValidator>;

        $r9 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        interfaceinvoke $stack22.<org.apache.maven.model.validation.ModelValidator: void validateFileModel(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(model, request, $r9);

        $r10 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r11 = (org.apache.maven.model.building.ModelProblemCollectorExt) problems;

        $stack23 = virtualinvoke $r10.<org.apache.maven.model.building.DefaultModelBuilder: boolean hasFatalErrors(org.apache.maven.model.building.ModelProblemCollectorExt)>($r11);

        if $stack23 == 0 goto label24;

        $stack24 = virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingException newModelBuildingException()>();

        $r12 = (java.lang.Throwable) $stack24;

        throw $r12;

     label24:
        return model;

        catch org.apache.maven.model.io.ModelParseException from label05 to label06 with label07;
        catch org.apache.maven.model.io.ModelParseException from label09 to label10 with label11;
        catch org.apache.maven.model.io.ModelParseException from label01 to label16 with label17;
        catch java.io.IOException from label01 to label16 with label18;
    }

    private org.apache.maven.model.Model readRawModel(org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector) throws org.apache.maven.model.building.ModelBuildingException
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelSource modelSource;
        org.apache.maven.model.building.ModelCache $stack11, $stack26;
        org.apache.maven.model.building.ModelCacheTag $stack12, $stack27;
        java.lang.Object $stack13;
        org.apache.maven.model.building.ModelData cachedData, $u1;
        java.util.Properties $stack14;
        org.apache.maven.feature.Features$Feature $stack15;
        boolean $stack16, $stack36, $stack21;
        org.apache.maven.model.Model $stack17, $stack18, $stack57, rawModel, transformedFileModel;
        DefaultModelBuilder this;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.building.ModelBuildingException $stack28;
        org.apache.maven.model.building.FileModelSource $stack39;
        org.apache.maven.model.building.TransformerContextBuilder $stack41, $stack46;
        org.apache.maven.model.building.ModelProcessor $stack42;
        java.util.Map $stack43;
        org.apache.maven.model.merge.ModelMerger $stack45;
        java.io.IOException $stack58;
        org.apache.maven.model.building.ModelProblem$Version $stack60;
        org.apache.maven.model.building.ModelProblem$Severity $stack61;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack62, $u0;
        java.io.File pomFile;
        org.apache.maven.model.building.TransformerContext context;
        org.apache.maven.model.validation.ModelValidator $stack20;
        java.lang.String pomFile#22, context#23, transformedFileModel#24;
        org.apache.maven.building.Source $r0, $r13, $r15;
        org.apache.maven.model.building.DefaultModelBuilder $r1, $r3, $r4, $r5, $r6, $r8, $r11, $r12, $r14;
        org.apache.maven.model.building.ModelProblemCollector $r2, $r7;
        org.apache.maven.model.building.ModelProblemCollectorExt $r9;
        java.lang.Throwable $r10;

        this := @this: DefaultModelBuilder;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter1: org.apache.maven.model.building.DefaultModelProblemCollector;

        modelSource = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelSource getModelSource()>();

        $stack11 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelCache getModelCache()>();

        $stack12 = <org.apache.maven.model.building.ModelCacheTag: org.apache.maven.model.building.ModelCacheTag RAW>;

        $r0 = (org.apache.maven.building.Source) modelSource;

        $stack13 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder: java.lang.Object fromCache(org.apache.maven.model.building.ModelCache,org.apache.maven.building.Source,org.apache.maven.model.building.ModelCacheTag)>($stack11, $r0, $stack12);

        cachedData = (org.apache.maven.model.building.ModelData) $stack13;

        if cachedData == null goto label1;

        $stack57 = virtualinvoke cachedData.<org.apache.maven.model.building.ModelData: org.apache.maven.model.Model getModel()>();

        return $stack57;

     label1:
        $stack14 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getUserProperties()>();

        $stack15 = staticinvoke <org.apache.maven.feature.Features: org.apache.maven.feature.Features$Feature buildConsumer(java.util.Properties)>($stack14);

        $stack16 = virtualinvoke $stack15.<org.apache.maven.feature.Features$Feature: boolean isActive()>();

        if $stack16 == 0 goto label6;

        $stack36 = modelSource instanceof org.apache.maven.model.building.FileModelSource;

        if $stack36 == 0 goto label6;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        rawModel = specialinvoke $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model readFileModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>(request, problems);

        $stack39 = (org.apache.maven.model.building.FileModelSource) modelSource;

        pomFile = virtualinvoke $stack39.<org.apache.maven.model.building.FileModelSource: java.io.File getFile()>();

        context = null;

        $stack41 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.TransformerContextBuilder getTransformerContextBuilder()>();

        if $stack41 == null goto label2;

        $stack46 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.TransformerContextBuilder getTransformerContextBuilder()>();

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        context = interfaceinvoke $stack46.<org.apache.maven.model.building.TransformerContextBuilder: org.apache.maven.model.building.TransformerContext initialize(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(request, $r2);

     label2:
        $r3 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack42 = $r3.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelProcessor modelProcessor>;

        $stack43 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("transformerContext", context);

        transformedFileModel = interfaceinvoke $stack42.<org.apache.maven.model.building.ModelProcessor: org.apache.maven.model.Model read(java.io.File,java.util.Map)>(pomFile, $stack43);

        $r4 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack45 = $r4.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.merge.ModelMerger modelMerger>;

        virtualinvoke $stack45.<org.apache.maven.model.merge.ModelMerger: void merge(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(rawModel, transformedFileModel, 0, null);

     label3:
        goto label5;

     label4:
        $stack58 := @caughtexception;

        $u0 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack61 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack60 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V40>;

        specialinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack61, $stack60);

        $stack62 = virtualinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($stack58);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack62);

     label5:
        goto label8;

     label6:
        $stack17 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.Model getFileModel()>();

        if $stack17 != null goto label7;

        $r5 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        rawModel = specialinvoke $r5.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model readFileModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>(request, problems);

        goto label8;

     label7:
        $stack18 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.Model getFileModel()>();

        rawModel = virtualinvoke $stack18.<org.apache.maven.model.Model: org.apache.maven.model.Model clone()>();

     label8:
        $r6 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack20 = $r6.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.validation.ModelValidator modelValidator>;

        $r7 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        interfaceinvoke $stack20.<org.apache.maven.model.validation.ModelValidator: void validateRawModel(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(rawModel, request, $r7);

        $r8 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r9 = (org.apache.maven.model.building.ModelProblemCollectorExt) problems;

        $stack21 = virtualinvoke $r8.<org.apache.maven.model.building.DefaultModelBuilder: boolean hasFatalErrors(org.apache.maven.model.building.ModelProblemCollectorExt)>($r9);

        if $stack21 == 0 goto label9;

        $stack28 = virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingException newModelBuildingException()>();

        $r10 = (java.lang.Throwable) $stack28;

        throw $r10;

     label9:
        $r11 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        pomFile#22 = specialinvoke $r11.<org.apache.maven.model.building.DefaultModelBuilder: java.lang.String getGroupId(org.apache.maven.model.Model)>(rawModel);

        context#23 = virtualinvoke rawModel.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $r12 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        transformedFileModel#24 = specialinvoke $r12.<org.apache.maven.model.building.DefaultModelBuilder: java.lang.String getVersion(org.apache.maven.model.Model)>(rawModel);

        $u1 = new org.apache.maven.model.building.ModelData;

        $r13 = (org.apache.maven.building.Source) modelSource;

        specialinvoke $u1.<org.apache.maven.model.building.ModelData: void <init>(org.apache.maven.building.Source,org.apache.maven.model.Model,java.lang.String,java.lang.String,java.lang.String)>($r13, rawModel, pomFile#22, context#23, transformedFileModel#24);

        $stack26 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelCache getModelCache()>();

        $stack27 = <org.apache.maven.model.building.ModelCacheTag: org.apache.maven.model.building.ModelCacheTag RAW>;

        $r14 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r15 = (org.apache.maven.building.Source) modelSource;

        specialinvoke $r14.<org.apache.maven.model.building.DefaultModelBuilder: void intoCache(org.apache.maven.model.building.ModelCache,org.apache.maven.building.Source,org.apache.maven.model.building.ModelCacheTag,java.lang.Object)>($stack26, $r15, $stack27, $u1);

        return rawModel;

        catch java.io.IOException from label2 to label3 with label4;
    }

    private java.lang.String getGroupId(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model model;
        org.apache.maven.model.Parent $stack4, $stack6;
        DefaultModelBuilder this;
        java.lang.String groupId;

        this := @this: DefaultModelBuilder;

        model := @parameter0: org.apache.maven.model.Model;

        groupId = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        if groupId != null goto label1;

        $stack4 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack4 == null goto label1;

        $stack6 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        groupId = virtualinvoke $stack6.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

     label1:
        return groupId;
    }

    private java.lang.String getVersion(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model model;
        org.apache.maven.model.Parent $stack4, $stack6;
        DefaultModelBuilder this;
        java.lang.String version;

        this := @this: DefaultModelBuilder;

        model := @parameter0: org.apache.maven.model.Model;

        version = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if version != null goto label1;

        $stack4 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack4 == null goto label1;

        $stack6 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        version = virtualinvoke $stack6.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

     label1:
        return version;
    }

    private org.apache.maven.model.profile.DefaultProfileActivationContext getProfileActivationContext(org.apache.maven.model.building.ModelBuildingRequest)
    {
        org.apache.maven.model.profile.DefaultProfileActivationContext $stack3;
        org.apache.maven.model.building.ModelBuildingRequest request;
        java.util.List $stack4, $stack6;
        java.util.Properties $stack8, $stack10;
        java.io.File $stack12, $stack14, $stack15;
        DefaultModelBuilder this;

        this := @this: DefaultModelBuilder;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        $stack3 = new org.apache.maven.model.profile.DefaultProfileActivationContext;

        specialinvoke $stack3.<org.apache.maven.model.profile.DefaultProfileActivationContext: void <init>()>();

        $stack4 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.List getActiveProfileIds()>();

        virtualinvoke $stack3.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setActiveProfileIds(java.util.List)>($stack4);

        $stack6 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.List getInactiveProfileIds()>();

        virtualinvoke $stack3.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setInactiveProfileIds(java.util.List)>($stack6);

        $stack8 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        virtualinvoke $stack3.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setSystemProperties(java.util.Properties)>($stack8);

        $stack10 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getUserProperties()>();

        virtualinvoke $stack3.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setUserProperties(java.util.Properties)>($stack10);

        $stack12 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.io.File getPomFile()>();

        if $stack12 == null goto label1;

        $stack14 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.io.File getPomFile()>();

        $stack15 = virtualinvoke $stack14.<java.io.File: java.io.File getParentFile()>();

        goto label2;

     label1:
        $stack15 = null;

     label2:
        virtualinvoke $stack3.<org.apache.maven.model.profile.DefaultProfileActivationContext: org.apache.maven.model.profile.DefaultProfileActivationContext setProjectDirectory(java.io.File)>($stack15);

        return $stack3;
    }

    private void configureResolver(org.apache.maven.model.resolution.ModelResolver, org.apache.maven.model.Model, org.apache.maven.model.building.DefaultModelProblemCollector)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.resolution.ModelResolver modelResolver;
        org.apache.maven.model.Model model;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.building.DefaultModelBuilder $r0;

        this := @this: DefaultModelBuilder;

        modelResolver := @parameter0: org.apache.maven.model.resolution.ModelResolver;

        model := @parameter1: org.apache.maven.model.Model;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: void configureResolver(org.apache.maven.model.resolution.ModelResolver,org.apache.maven.model.Model,org.apache.maven.model.building.DefaultModelProblemCollector,boolean)>(modelResolver, model, problems, 0);

        return;
    }

    private void configureResolver(org.apache.maven.model.resolution.ModelResolver, org.apache.maven.model.Model, org.apache.maven.model.building.DefaultModelProblemCollector, boolean)
    {
        org.apache.maven.model.resolution.ModelResolver modelResolver;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.Model model;
        java.util.List repositories;
        java.util.Iterator l6;
        boolean $stack11, replaceRepositories;
        java.lang.Object $stack12;
        org.apache.maven.model.Repository repository;
        java.lang.Throwable $stack14;
        org.apache.maven.model.building.ModelProblem$Version $stack16;
        org.apache.maven.model.building.ModelProblem$Severity $stack17;
        java.lang.StringBuilder $stack19, $stack21, $stack22, $stack24, $u1;
        java.lang.String $stack20, $stack23, $stack25;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack26, $stack28, $stack29, $u0;
        org.apache.maven.model.InputLocation $stack27;
        DefaultModelBuilder this;
        org.apache.maven.model.resolution.InvalidRepositoryException $r0;
        java.lang.Exception $r1;

        this := @this: DefaultModelBuilder;

        modelResolver := @parameter0: org.apache.maven.model.resolution.ModelResolver;

        model := @parameter1: org.apache.maven.model.Model;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        replaceRepositories := @parameter3: boolean;

        if modelResolver != null goto label1;

        return;

     label1:
        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(model);

        repositories = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        l6 = interfaceinvoke repositories.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack11 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label7;

        $stack12 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        repository = (org.apache.maven.model.Repository) $stack12;

     label3:
        interfaceinvoke modelResolver.<org.apache.maven.model.resolution.ModelResolver: void addRepository(org.apache.maven.model.Repository,boolean)>(repository, replaceRepositories);

     label4:
        goto label6;

     label5:
        $stack14 := @caughtexception;

        $u0 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack17 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack16 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack17, $stack16);

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid repository ");

        $stack20 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r0 = (org.apache.maven.model.resolution.InvalidRepositoryException) $stack14;

        $stack23 = virtualinvoke $r0.<org.apache.maven.model.resolution.InvalidRepositoryException: java.lang.String getMessage()>();

        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack26 = virtualinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack25);

        $stack27 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack28 = virtualinvoke $stack26.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack27);

        $r1 = (java.lang.Exception) $stack14;

        $stack29 = virtualinvoke $stack28.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($r1);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack29);

     label6:
        goto label2;

     label7:
        return;

        catch org.apache.maven.model.resolution.InvalidRepositoryException from label3 to label4 with label5;
    }

    private void checkPluginVersions(java.util.List, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        int $stack14, $stack18, i;
        java.util.HashMap $stack15, $stack16, $stack17;
        java.util.List lineage, $stack42, $stack46;
        java.util.Set $stack19;
        boolean $stack21, $stack44, $stack48;
        java.lang.Object $stack22, $stack23, $stack25, $stack26, $stack39, $stack49, $stack54, $stack56;
        org.apache.maven.model.Plugin $stack27, plugin, key;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack29, $stack37, $stack38;
        org.apache.maven.model.building.ModelProblem$Version $stack30;
        org.apache.maven.model.building.ModelProblem$Severity $stack31;
        java.lang.StringBuilder $stack32, $stack33, $stack34, $stack35;
        java.lang.String $stack36, key, $stack58, model#11;
        java.util.function.Function $stack51;
        DefaultModelBuilder this;
        org.apache.maven.model.Model model;
        org.apache.maven.model.Build build;
        java.util.Iterator mgmt, plugin#8, i#10;
        org.apache.maven.model.PluginManagement mgmt#7;
        org.apache.maven.model.InputLocation build#12;

        this := @this: DefaultModelBuilder;

        lineage := @parameter0: java.util.List;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        $stack14 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack14 >= 20 goto label01;

        return;

     label01:
        $stack15 = new java.util.HashMap;

        specialinvoke $stack15.<java.util.HashMap: void <init>()>();

        $stack16 = new java.util.HashMap;

        specialinvoke $stack16.<java.util.HashMap: void <init>()>();

        $stack17 = new java.util.HashMap;

        specialinvoke $stack17.<java.util.HashMap: void <init>()>();

        $stack18 = interfaceinvoke lineage.<java.util.List: int size()>();

        i = $stack18 - 1;

     label02:
        if i < 0 goto label08;

        $stack39 = interfaceinvoke lineage.<java.util.List: java.lang.Object get(int)>(i);

        model = (org.apache.maven.model.Model) $stack39;

        build = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if build == null goto label07;

        $stack42 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        mgmt = interfaceinvoke $stack42.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $stack44 = interfaceinvoke mgmt.<java.util.Iterator: boolean hasNext()>();

        if $stack44 == 0 goto label05;

        $stack54 = interfaceinvoke mgmt.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack54;

        key = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getKey()>();

        $stack56 = interfaceinvoke $stack16.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        if $stack56 != null goto label04;

        $stack58 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        interfaceinvoke $stack16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $stack58);

        interfaceinvoke $stack15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, plugin);

     label04:
        goto label03;

     label05:
        mgmt#7 = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if mgmt#7 == null goto label07;

        $stack46 = virtualinvoke mgmt#7.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        plugin#8 = interfaceinvoke $stack46.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack48 = interfaceinvoke plugin#8.<java.util.Iterator: boolean hasNext()>();

        if $stack48 == 0 goto label07;

        $stack49 = interfaceinvoke plugin#8.<java.util.Iterator: java.lang.Object next()>();

        key = (org.apache.maven.model.Plugin) $stack49;

        key = virtualinvoke key.<org.apache.maven.model.Plugin: java.lang.String getKey()>();

        $stack51 = staticinvoke <DefaultModelBuilder$lambda_checkPluginVersions_1__310: java.util.function.Function bootstrap$(org.apache.maven.model.Plugin)>(key);

        interfaceinvoke $stack17.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(key, $stack51);

        goto label06;

     label07:
        i = i + -1;

        goto label02;

     label08:
        $stack19 = interfaceinvoke $stack16.<java.util.Map: java.util.Set keySet()>();

        i#10 = interfaceinvoke $stack19.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $stack21 = interfaceinvoke i#10.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label11;

        $stack22 = interfaceinvoke i#10.<java.util.Iterator: java.lang.Object next()>();

        model#11 = (java.lang.String) $stack22;

        $stack23 = interfaceinvoke $stack16.<java.util.Map: java.lang.Object get(java.lang.Object)>(model#11);

        if $stack23 != null goto label10;

        $stack25 = interfaceinvoke $stack17.<java.util.Map: java.lang.Object get(java.lang.Object)>(model#11);

        if $stack25 != null goto label10;

        $stack26 = interfaceinvoke $stack15.<java.util.Map: java.lang.Object get(java.lang.Object)>(model#11);

        $stack27 = (org.apache.maven.model.Plugin) $stack26;

        build#12 = virtualinvoke $stack27.<org.apache.maven.model.Plugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack29 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack31 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack30 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        specialinvoke $stack29.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack31, $stack30);

        $stack32 = new java.lang.StringBuilder;

        specialinvoke $stack32.<java.lang.StringBuilder: void <init>()>();

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'build.plugins.plugin.version\' for ");

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(model#11);

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing.");

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack37 = virtualinvoke $stack29.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack36);

        $stack38 = virtualinvoke $stack37.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>(build#12);

        interfaceinvoke problems.<org.apache.maven.model.building.ModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack38);

     label10:
        goto label09;

     label11:
        return;
    }

    private void assembleInheritance(java.util.List, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        java.util.List lineage;
        int $stack7, $stack8, i;
        java.lang.Object $stack9, $stack10;
        org.apache.maven.model.Model parent, child;
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.inheritance.InheritanceAssembler $stack11;
        org.apache.maven.model.building.DefaultModelBuilder $r0;

        this := @this: DefaultModelBuilder;

        lineage := @parameter0: java.util.List;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        $stack7 = interfaceinvoke lineage.<java.util.List: int size()>();

        i = $stack7 - 2;

     label1:
        if i < 0 goto label2;

        $stack8 = i + 1;

        $stack9 = interfaceinvoke lineage.<java.util.List: java.lang.Object get(int)>($stack8);

        parent = (org.apache.maven.model.Model) $stack9;

        $stack10 = interfaceinvoke lineage.<java.util.List: java.lang.Object get(int)>(i);

        child = (org.apache.maven.model.Model) $stack10;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack11 = $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.inheritance.InheritanceAssembler inheritanceAssembler>;

        interfaceinvoke $stack11.<org.apache.maven.model.inheritance.InheritanceAssembler: void assembleModelInheritance(org.apache.maven.model.Model,org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(child, parent, request, problems);

        i = i + -1;

        goto label1;

     label2:
        return;
    }

    private java.util.Map getProfileActivations(org.apache.maven.model.Model, boolean)
    {
        java.util.HashMap $stack7;
        org.apache.maven.model.Model model;
        java.util.List $stack8;
        java.util.Iterator l4;
        java.lang.Object $stack11;
        org.apache.maven.model.Profile profile;
        boolean clone, $stack10;
        java.lang.String $stack13;
        DefaultModelBuilder this;
        org.apache.maven.model.Activation activation;

        this := @this: DefaultModelBuilder;

        model := @parameter0: org.apache.maven.model.Model;

        clone := @parameter1: boolean;

        $stack7 = new java.util.HashMap;

        specialinvoke $stack7.<java.util.HashMap: void <init>()>();

        $stack8 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        l4 = interfaceinvoke $stack8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label4;

        $stack11 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        profile = (org.apache.maven.model.Profile) $stack11;

        activation = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        if activation != null goto label2;

        goto label1;

     label2:
        if clone == 0 goto label3;

        activation = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.Activation clone()>();

     label3:
        $stack13 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        interfaceinvoke $stack7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack13, activation);

        goto label1;

     label4:
        return $stack7;
    }

    private void injectProfileActivations(org.apache.maven.model.Model, java.util.Map)
    {
        org.apache.maven.model.Model model;
        java.util.List $stack6;
        java.util.Iterator l3;
        java.lang.Object $stack9, $stack12;
        org.apache.maven.model.Profile profile;
        org.apache.maven.model.Activation activation, $stack13;
        java.util.Map activations;
        java.lang.String $stack11;
        DefaultModelBuilder this;
        boolean $stack8;

        this := @this: DefaultModelBuilder;

        model := @parameter0: org.apache.maven.model.Model;

        activations := @parameter1: java.util.Map;

        $stack6 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        l3 = interfaceinvoke $stack6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label3;

        $stack9 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        profile = (org.apache.maven.model.Profile) $stack9;

        activation = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        if activation != null goto label2;

        goto label1;

     label2:
        $stack11 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack12 = interfaceinvoke activations.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack11);

        $stack13 = (org.apache.maven.model.Activation) $stack12;

        virtualinvoke profile.<org.apache.maven.model.Profile: void setActivation(org.apache.maven.model.Activation)>($stack13);

        goto label1;

     label3:
        return;
    }

    private org.apache.maven.model.Model interpolateModel(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        DefaultModelBuilder this;
        org.apache.maven.model.Model model, interpolatedModel;
        java.util.Map originalActivations;
        org.apache.maven.model.interpolation.ModelInterpolator $stack10;
        java.io.File $stack11, $stack14;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.Parent $stack13, $stack22, $stack25, $stack38;
        java.util.Properties $stack17, $stack19, $stack21;
        java.lang.String $stack23, $stack39, $stack42, interpolated;
        java.lang.Exception $stack32;
        org.apache.maven.model.building.ModelProblem$Version $stack34;
        org.apache.maven.model.building.ModelProblem$Severity $stack35;
        java.lang.StringBuilder $stack37, $stack40, $stack41, $u5;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack43, mpcr, $u4;
        org.codehaus.plexus.interpolation.StringSearchInterpolator $u0;
        org.codehaus.plexus.interpolation.MapBasedValueSource $u1, $u2, $u3;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1, $r5;
        org.codehaus.plexus.interpolation.ValueSource $r2, $r3, $r4;

        this := @this: DefaultModelBuilder;

        model := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        originalActivations = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: java.util.Map getProfileActivations(org.apache.maven.model.Model,boolean)>(model, 1);

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack10 = $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.interpolation.ModelInterpolator modelInterpolator>;

        $stack11 = virtualinvoke model.<org.apache.maven.model.Model: java.io.File getProjectDirectory()>();

        interpolatedModel = interfaceinvoke $stack10.<org.apache.maven.model.interpolation.ModelInterpolator: org.apache.maven.model.Model interpolateModel(org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(model, $stack11, request, problems);

        $stack13 = virtualinvoke interpolatedModel.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack13 == null goto label4;

        $u0 = new org.codehaus.plexus.interpolation.StringSearchInterpolator;

        specialinvoke $u0.<org.codehaus.plexus.interpolation.StringSearchInterpolator: void <init>()>();

        $u1 = new org.codehaus.plexus.interpolation.MapBasedValueSource;

        $stack17 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getUserProperties()>();

        specialinvoke $u1.<org.codehaus.plexus.interpolation.MapBasedValueSource: void <init>(java.util.Map)>($stack17);

        $r2 = (org.codehaus.plexus.interpolation.ValueSource) $u1;

        virtualinvoke $u0.<org.codehaus.plexus.interpolation.StringSearchInterpolator: void addValueSource(org.codehaus.plexus.interpolation.ValueSource)>($r2);

        $u2 = new org.codehaus.plexus.interpolation.MapBasedValueSource;

        $stack19 = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        specialinvoke $u2.<org.codehaus.plexus.interpolation.MapBasedValueSource: void <init>(java.util.Map)>($stack19);

        $r3 = (org.codehaus.plexus.interpolation.ValueSource) $u2;

        virtualinvoke $u0.<org.codehaus.plexus.interpolation.StringSearchInterpolator: void addValueSource(org.codehaus.plexus.interpolation.ValueSource)>($r3);

        $u3 = new org.codehaus.plexus.interpolation.MapBasedValueSource;

        $stack21 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        specialinvoke $u3.<org.codehaus.plexus.interpolation.MapBasedValueSource: void <init>(java.util.Map)>($stack21);

        $r4 = (org.codehaus.plexus.interpolation.ValueSource) $u3;

        virtualinvoke $u0.<org.codehaus.plexus.interpolation.StringSearchInterpolator: void addValueSource(org.codehaus.plexus.interpolation.ValueSource)>($r4);

     label1:
        $stack22 = virtualinvoke interpolatedModel.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        $stack23 = virtualinvoke $stack22.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        interpolated = virtualinvoke $u0.<org.codehaus.plexus.interpolation.StringSearchInterpolator: java.lang.String interpolate(java.lang.String)>($stack23);

        $stack25 = virtualinvoke interpolatedModel.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        virtualinvoke $stack25.<org.apache.maven.model.Parent: void setVersion(java.lang.String)>(interpolated);

     label2:
        goto label4;

     label3:
        $stack32 := @caughtexception;

        $u4 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack35 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack34 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack35, $stack34);

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack37 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to interpolate field: ");

        $stack38 = virtualinvoke interpolatedModel.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        $stack39 = virtualinvoke $stack38.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $stack40 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack39);

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on class: ");

        $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack43 = virtualinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack42);

        mpcr = virtualinvoke $stack43.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($stack32);

        interfaceinvoke problems.<org.apache.maven.model.building.ModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>(mpcr);

     label4:
        $stack14 = virtualinvoke model.<org.apache.maven.model.Model: java.io.File getPomFile()>();

        virtualinvoke interpolatedModel.<org.apache.maven.model.Model: void setPomFile(java.io.File)>($stack14);

        $r5 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $r5.<org.apache.maven.model.building.DefaultModelBuilder: void injectProfileActivations(org.apache.maven.model.Model,java.util.Map)>(model, originalActivations);

        return interpolatedModel;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private org.apache.maven.model.building.ModelData readParent(org.apache.maven.model.Model, org.apache.maven.building.Source, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, org.apache.maven.model.building.DefaultModelProblemCollector) throws org.apache.maven.model.building.ModelBuildingException
    {
        org.apache.maven.model.Model childModel, parentModel;
        org.apache.maven.model.Parent parent;
        DefaultModelBuilder this;
        org.apache.maven.building.Source childSource;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelBuildingResult result;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        java.lang.String $stack12, $stack13, $stack21, $stack24, $stack27;
        boolean $stack14;
        org.apache.maven.model.building.ModelProblem$Version $stack17;
        org.apache.maven.model.building.ModelProblem$Severity $stack18;
        java.lang.StringBuilder $stack20, $stack22, $stack23, $stack25, $stack26, $u1;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack28, $stack30, $u0;
        org.apache.maven.model.InputLocation $stack29;
        org.apache.maven.model.building.ModelData parentData;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        childModel := @parameter0: org.apache.maven.model.Model;

        childSource := @parameter1: org.apache.maven.building.Source;

        request := @parameter2: org.apache.maven.model.building.ModelBuildingRequest;

        result := @parameter3: org.apache.maven.model.building.ModelBuildingResult;

        problems := @parameter4: org.apache.maven.model.building.DefaultModelProblemCollector;

        parentData = null;

        parent = virtualinvoke childModel.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if parent == null goto label2;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        parentData = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelData readParentLocally(org.apache.maven.model.Model,org.apache.maven.building.Source,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelBuildingResult,org.apache.maven.model.building.DefaultModelProblemCollector)>(childModel, childSource, request, result, problems);

        if parentData != null goto label1;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        parentData = specialinvoke $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelData readParentExternally(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelBuildingResult,org.apache.maven.model.building.DefaultModelProblemCollector)>(childModel, request, result, problems);

     label1:
        parentModel = virtualinvoke parentData.<org.apache.maven.model.building.ModelData: org.apache.maven.model.Model getModel()>();

        $stack12 = "pom";

        $stack13 = virtualinvoke parentModel.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $stack14 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>($stack13);

        if $stack14 != 0 goto label2;

        $u0 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack18 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack17 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack18, $stack17);

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packaging for parent POM ");

        $stack21 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toSourceHint(org.apache.maven.model.Model)>(parentModel);

        $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", must be \"pom\" but is \"");

        $stack24 = virtualinvoke parentModel.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack28 = virtualinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack27);

        $stack29 = virtualinvoke parentModel.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("packaging");

        $stack30 = virtualinvoke $stack28.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack29);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack30);

     label2:
        return parentData;
    }

    private org.apache.maven.model.building.ModelData readParentLocally(org.apache.maven.model.Model, org.apache.maven.building.Source, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, org.apache.maven.model.building.DefaultModelProblemCollector) throws org.apache.maven.model.building.ModelBuildingException
    {
        org.apache.maven.model.Model childModel, candidateModel, $stack26;
        org.apache.maven.model.Parent parent;
        org.apache.maven.model.building.ModelBuildingRequest request, $r3;
        org.apache.maven.model.resolution.WorkspaceModelResolver resolver;
        java.lang.String $stack16, $stack17, $stack18, artifactId, $stack32, $stack35, $stack41, $stack46, $stack67, $stack74, $stack78, $stack84, $stack86, $stack91, $stack92, $stack119, candidateBuildRequest#5, buffer#30;
        java.io.File $stack21;
        DefaultModelBuilder this;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        java.lang.StringBuilder $stack27, $stack28, $stack29, $stack31, $stack33, $stack36, $stack45, $u3;
        org.apache.maven.model.building.ModelProblem$Version $stack39, $stack95, $stack101, $stack117;
        org.apache.maven.model.building.ModelProblem$Severity $stack40, $stack96, $stack102, $stack118;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack42, $stack44, $stack97, $stack99, $stack103, $stack105, $stack120, $stack122, $stack123, $u1, $u4, $u6, $u7;
        org.apache.maven.model.InputLocation $stack43, $stack98, $stack104, $stack121;
        boolean $stack68, $stack75, $stack85, $stack88, $stack90, $stack93;
        org.apache.maven.building.Source childSource, $r10;
        java.lang.Throwable $stack114, $stack115, $r6;
        org.apache.maven.model.building.ModelBuildingException $stack124;
        org.apache.maven.model.building.ModelBuildingResult result;
        java.lang.Object candidateSource;
        org.apache.maven.model.building.DefaultModelBuildingRequest candidateBuildRequest, $u0;
        org.apache.maven.artifact.versioning.VersionRange parentRange;
        org.apache.maven.model.building.FileModelSource $u2;
        org.apache.maven.artifact.versioning.DefaultArtifactVersion $u5;
        org.apache.maven.model.building.ModelData $u8;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r2, $r7, $r8;
        org.apache.maven.model.building.ModelSource $r1;
        org.apache.maven.model.resolution.UnresolvableModelException $r4;
        java.lang.Exception $r5;
        org.apache.maven.artifact.versioning.ArtifactVersion $r9;

        this := @this: DefaultModelBuilder;

        childModel := @parameter0: org.apache.maven.model.Model;

        childSource := @parameter1: org.apache.maven.building.Source;

        request := @parameter2: org.apache.maven.model.building.ModelBuildingRequest;

        result := @parameter3: org.apache.maven.model.building.ModelBuildingResult;

        problems := @parameter4: org.apache.maven.model.building.DefaultModelProblemCollector;

        parent = virtualinvoke childModel.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        resolver = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.resolution.WorkspaceModelResolver getWorkspaceModelResolver()>();

        if resolver != null goto label02;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        candidateSource = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelSource getParentPomFile(org.apache.maven.model.Model,org.apache.maven.building.Source)>(childModel, childSource);

        if candidateSource != null goto label01;

        return null;

     label01:
        $u0 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>(org.apache.maven.model.building.ModelBuildingRequest)>(request);

        $r1 = (org.apache.maven.model.building.ModelSource) candidateSource;

        candidateBuildRequest = virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setModelSource(org.apache.maven.model.building.ModelSource)>($r1);

        $r2 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r3 = (org.apache.maven.model.building.ModelBuildingRequest) candidateBuildRequest;

        candidateModel = specialinvoke $r2.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model readRawModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>($r3, problems);

        goto label07;

     label02:
        $stack16 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack17 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack18 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        candidateModel = interfaceinvoke resolver.<org.apache.maven.model.resolution.WorkspaceModelResolver: org.apache.maven.model.Model resolveRawModel(java.lang.String,java.lang.String,java.lang.String)>($stack16, $stack17, $stack18);

     label03:
        goto label05;

     label04:
        $stack115 := @caughtexception;

        $u1 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack118 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack117 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u1.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack118, $stack117);

        $r4 = (org.apache.maven.model.resolution.UnresolvableModelException) $stack115;

        $stack119 = virtualinvoke $r4.<org.apache.maven.model.resolution.UnresolvableModelException: java.lang.String getMessage()>();

        $stack120 = virtualinvoke $u1.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack119);

        $stack121 = virtualinvoke parent.<org.apache.maven.model.Parent: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack122 = virtualinvoke $stack120.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack121);

        $r5 = (java.lang.Exception) $stack115;

        $stack123 = virtualinvoke $stack122.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($r5);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack123);

        $stack124 = virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingException newModelBuildingException()>();

        $r6 = (java.lang.Throwable) $stack124;

        throw $r6;

     label05:
        if candidateModel != null goto label06;

        return null;

     label06:
        $u2 = new org.apache.maven.model.building.FileModelSource;

        $stack21 = virtualinvoke candidateModel.<org.apache.maven.model.Model: java.io.File getPomFile()>();

        specialinvoke $u2.<org.apache.maven.model.building.FileModelSource: void <init>(java.io.File)>($stack21);

        candidateSource = $u2;

     label07:
        $r7 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        candidateBuildRequest#5 = specialinvoke $r7.<org.apache.maven.model.building.DefaultModelBuilder: java.lang.String getGroupId(org.apache.maven.model.Model)>(candidateModel);

        artifactId = virtualinvoke candidateModel.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        if candidateBuildRequest#5 == null goto label08;

        $stack67 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack68 = virtualinvoke candidateBuildRequest#5.<java.lang.String: boolean equals(java.lang.Object)>($stack67);

        if $stack68 == 0 goto label08;

        if artifactId == null goto label08;

        $stack74 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack75 = virtualinvoke artifactId.<java.lang.String: boolean equals(java.lang.Object)>($stack74);

        if $stack75 != 0 goto label10;

     label08:
        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>(int)>(256);

        virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'parent.relativePath\'");

        $stack26 = virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model getRootModel()>();

        if childModel == $stack26 goto label09;

        $stack45 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of POM ");

        $stack46 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toSourceHint(org.apache.maven.model.Model)>(childModel);

        virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46);

     label09:
        $stack27 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" points at ");

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(candidateBuildRequest#5);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(artifactId);

        $stack31 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" instead of ");

        $stack32 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32);

        virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack35 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack36 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35);

        virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", please verify your project structure");

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(childModel);

        $u4 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack40 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack39 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack40, $stack39);

        $stack41 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack42 = virtualinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack41);

        $stack43 = virtualinvoke parent.<org.apache.maven.model.Parent: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack44 = virtualinvoke $stack42.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack43);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack44);

        return null;

     label10:
        $r8 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        buffer#30 = specialinvoke $r8.<org.apache.maven.model.building.DefaultModelBuilder: java.lang.String getVersion(org.apache.maven.model.Model)>(candidateModel);

        if buffer#30 == null goto label19;

        $stack78 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        if $stack78 == null goto label19;

        $stack84 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $stack85 = virtualinvoke buffer#30.<java.lang.String: boolean equals(java.lang.Object)>($stack84);

        if $stack85 != 0 goto label19;

     label11:
        $stack86 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        parentRange = staticinvoke <org.apache.maven.artifact.versioning.VersionRange: org.apache.maven.artifact.versioning.VersionRange createFromVersionSpec(java.lang.String)>($stack86);

        $stack88 = virtualinvoke parentRange.<org.apache.maven.artifact.versioning.VersionRange: boolean hasRestrictions()>();

        if $stack88 != 0 goto label13;

     label12:
        return null;

     label13:
        $u5 = new org.apache.maven.artifact.versioning.DefaultArtifactVersion;

        specialinvoke $u5.<org.apache.maven.artifact.versioning.DefaultArtifactVersion: void <init>(java.lang.String)>(buffer#30);

        $r9 = (org.apache.maven.artifact.versioning.ArtifactVersion) $u5;

        $stack90 = virtualinvoke parentRange.<org.apache.maven.artifact.versioning.VersionRange: boolean containsVersion(org.apache.maven.artifact.versioning.ArtifactVersion)>($r9);

        if $stack90 != 0 goto label15;

     label14:
        return null;

     label15:
        $stack91 = virtualinvoke childModel.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if $stack91 != null goto label16;

        $u6 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack102 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack101 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V31>;

        specialinvoke $u6.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack102, $stack101);

        $stack103 = virtualinvoke $u6.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>("Version must be a constant");

        $stack104 = virtualinvoke childModel.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack105 = virtualinvoke $stack103.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack104);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack105);

        goto label17;

     label16:
        $stack92 = virtualinvoke childModel.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $stack93 = virtualinvoke $stack92.<java.lang.String: boolean contains(java.lang.CharSequence)>("${");

        if $stack93 == 0 goto label17;

        $u7 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack96 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack95 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V31>;

        specialinvoke $u7.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack96, $stack95);

        $stack97 = virtualinvoke $u7.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>("Version must be a constant");

        $stack98 = virtualinvoke childModel.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        $stack99 = virtualinvoke $stack97.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack98);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack99);

     label17:
        goto label19;

     label18:
        $stack114 := @caughtexception;

        return null;

     label19:
        $u8 = new org.apache.maven.model.building.ModelData;

        $r10 = (org.apache.maven.building.Source) candidateSource;

        specialinvoke $u8.<org.apache.maven.model.building.ModelData: void <init>(org.apache.maven.building.Source,org.apache.maven.model.Model,java.lang.String,java.lang.String,java.lang.String)>($r10, candidateModel, candidateBuildRequest#5, artifactId, buffer#30);

        return $u8;

        catch org.apache.maven.model.resolution.UnresolvableModelException from label02 to label03 with label04;
        catch org.apache.maven.artifact.versioning.InvalidVersionSpecificationException from label11 to label12 with label18;
        catch org.apache.maven.artifact.versioning.InvalidVersionSpecificationException from label13 to label14 with label18;
        catch org.apache.maven.artifact.versioning.InvalidVersionSpecificationException from label15 to label17 with label18;
    }

    private org.apache.maven.model.building.ModelSource getParentPomFile(org.apache.maven.model.Model, org.apache.maven.building.Source)
    {
        org.apache.maven.building.Source source;
        boolean $stack4;
        org.apache.maven.model.Model childModel;
        org.apache.maven.model.Parent $stack5;
        java.lang.String parentPath;
        int $stack7;
        org.apache.maven.model.building.ModelSource2 $stack8, $stack9;
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelSource $r0;

        this := @this: DefaultModelBuilder;

        childModel := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.building.Source;

        $stack4 = source instanceof org.apache.maven.model.building.ModelSource2;

        if $stack4 != 0 goto label1;

        return null;

     label1:
        $stack5 = virtualinvoke childModel.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        parentPath = virtualinvoke $stack5.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        if parentPath == null goto label2;

        $stack7 = virtualinvoke parentPath.<java.lang.String: int length()>();

        if $stack7 > 0 goto label3;

     label2:
        return null;

     label3:
        $stack8 = (org.apache.maven.model.building.ModelSource2) source;

        $stack9 = interfaceinvoke $stack8.<org.apache.maven.model.building.ModelSource2: org.apache.maven.model.building.ModelSource2 getRelatedSource(java.lang.String)>(parentPath);

        $r0 = (org.apache.maven.model.building.ModelSource) $stack9;

        return $r0;
    }

    private org.apache.maven.model.building.ModelData readParentExternally(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelBuildingResult, org.apache.maven.model.building.DefaultModelProblemCollector) throws org.apache.maven.model.building.ModelBuildingException
    {
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.Model childModel, parentModel, $stack66;
        org.apache.maven.model.Parent parent;
        java.lang.String groupId, artifactId, version, $stack22, $stack24, $stack25, $stack35, $stack41, $stack42, $stack64, $stack68, $stack80, $stack88, $stack94, $stack101, $stack74, $stack38, $stack39, $stack40;
        org.apache.maven.model.building.ModelBuildingRequest request, $stack32, buffer#35;
        org.apache.maven.model.resolution.ModelResolver modelResolver;
        java.lang.Object[] $stack19;
        org.apache.maven.model.building.ModelSource modelSource;
        int $stack28, $stack89, e#34;
        org.apache.maven.model.building.DefaultModelBuildingRequest $stack31, $u2;
        DefaultModelBuilder this;
        boolean $stack36, $stack43, $stack65;
        org.apache.maven.model.building.ModelProblem$Version $stack50, $stack56, $stack72;
        org.apache.maven.model.building.ModelProblem$Severity $stack51, $stack57, $stack73;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack52, $stack54, $stack58, $stack60, $stack75, $stack77, $stack78, $u1, $u3, $u4;
        org.apache.maven.model.InputLocation $stack53, $stack59, $stack76;
        java.lang.Throwable $stack61, $r4;
        java.lang.StringBuilder $stack67, $stack93, $stack100, $u0;
        java.io.File $stack70;
        org.apache.maven.model.building.ModelBuildingResult result;
        org.apache.maven.model.building.ModelBuildingException $stack79;
        org.apache.maven.model.building.ModelData $u5;
        org.apache.maven.model.resolution.UnresolvableModelException $r0, $r2;
        org.apache.maven.model.building.DefaultModelBuilder $r1, $r5;
        java.lang.Exception $r3;
        org.apache.maven.building.Source $r6;

        this := @this: DefaultModelBuilder;

        childModel := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        result := @parameter2: org.apache.maven.model.building.ModelBuildingResult;

        problems := @parameter3: org.apache.maven.model.building.DefaultModelProblemCollector;

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void setSource(org.apache.maven.model.Model)>(childModel);

        parent = virtualinvoke childModel.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        groupId = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        artifactId = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        version = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        modelResolver = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.resolution.ModelResolver getModelResolver()>();

        $stack19 = newarray (java.lang.Object)[2];

        $stack22 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(java.lang.String,java.lang.String,java.lang.String)>(groupId, artifactId, version);

        $stack19[0] = $stack22;

        $stack24 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toSourceHint(org.apache.maven.model.Model)>(childModel);

        $stack19[1] = $stack24;

        $stack25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("request.modelResolver cannot be null (parent POM %s and POM %s)", $stack19);

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(modelResolver, $stack25);

     label01:
        modelSource = interfaceinvoke modelResolver.<org.apache.maven.model.resolution.ModelResolver: org.apache.maven.model.building.ModelSource resolveModel(org.apache.maven.model.Parent)>(parent);

     label02:
        goto label09;

     label03:
        $stack61 := @caughtexception;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(256);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-resolvable parent POM");

        $r0 = (org.apache.maven.model.resolution.UnresolvableModelException) $stack61;

        $stack64 = virtualinvoke $r0.<org.apache.maven.model.resolution.UnresolvableModelException: java.lang.String getMessage()>();

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack65 = specialinvoke $r1.<org.apache.maven.model.building.DefaultModelBuilder: boolean containsCoordinates(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack64, groupId, artifactId, version);

        if $stack65 != 0 goto label04;

        $stack100 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $stack101 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(java.lang.String,java.lang.String,java.lang.String)>(groupId, artifactId, version);

        virtualinvoke $stack100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack101);

     label04:
        $stack66 = virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model getRootModel()>();

        if childModel == $stack66 goto label05;

        $stack93 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $stack94 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(org.apache.maven.model.Model)>(childModel);

        virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack94);

     label05:
        $stack67 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r2 = (org.apache.maven.model.resolution.UnresolvableModelException) $stack61;

        $stack68 = virtualinvoke $r2.<org.apache.maven.model.resolution.UnresolvableModelException: java.lang.String getMessage()>();

        virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack68);

        $stack70 = virtualinvoke childModel.<org.apache.maven.model.Model: java.io.File getProjectDirectory()>();

        if $stack70 == null goto label08;

        $stack80 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        if $stack80 == null goto label06;

        $stack88 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        $stack89 = virtualinvoke $stack88.<java.lang.String: int length()>();

        if $stack89 > 0 goto label07;

     label06:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and \'parent.relativePath\' points at no local POM");

        goto label08;

     label07:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and \'parent.relativePath\' points at wrong local POM");

     label08:
        $u1 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack73 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack72 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u1.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack73, $stack72);

        $stack74 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack75 = virtualinvoke $u1.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack74);

        $stack76 = virtualinvoke parent.<org.apache.maven.model.Parent: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack77 = virtualinvoke $stack75.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack76);

        $r3 = (java.lang.Exception) $stack61;

        $stack78 = virtualinvoke $stack77.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($r3);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack78);

        $stack79 = virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingException newModelBuildingException()>();

        $r4 = (java.lang.Throwable) $stack79;

        throw $r4;

     label09:
        $stack28 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        e#34 = staticinvoke <java.lang.Math: int min(int,int)>($stack28, 20);

        $u2 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        specialinvoke $u2.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>(org.apache.maven.model.building.ModelBuildingRequest)>(request);

        $stack31 = virtualinvoke $u2.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setValidationLevel(int)>(e#34);

        $stack32 = virtualinvoke $stack31.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setFileModel(org.apache.maven.model.Model)>(null);

        buffer#35 = interfaceinvoke $stack32.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setModelSource(org.apache.maven.model.building.ModelSource)>(modelSource);

        $r5 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        parentModel = specialinvoke $r5.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model readRawModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>(buffer#35, problems);

        $stack35 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>(version);

        if $stack36 != 0 goto label11;

        $stack41 = virtualinvoke childModel.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if $stack41 != null goto label10;

        $u3 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack57 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack56 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V31>;

        specialinvoke $u3.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack57, $stack56);

        $stack58 = virtualinvoke $u3.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>("Version must be a constant");

        $stack59 = virtualinvoke childModel.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack60 = virtualinvoke $stack58.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack59);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack60);

        goto label11;

     label10:
        $stack42 = virtualinvoke childModel.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $stack43 = virtualinvoke $stack42.<java.lang.String: boolean contains(java.lang.CharSequence)>("${");

        if $stack43 == 0 goto label11;

        $u4 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack51 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack50 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V31>;

        specialinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack51, $stack50);

        $stack52 = virtualinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>("Version must be a constant");

        $stack53 = virtualinvoke childModel.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        $stack54 = virtualinvoke $stack52.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack53);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack54);

     label11:
        $u5 = new org.apache.maven.model.building.ModelData;

        $stack38 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack39 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack40 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $r6 = (org.apache.maven.building.Source) modelSource;

        specialinvoke $u5.<org.apache.maven.model.building.ModelData: void <init>(org.apache.maven.building.Source,org.apache.maven.model.Model,java.lang.String,java.lang.String,java.lang.String)>($r6, parentModel, $stack38, $stack39, $stack40);

        return $u5;

        catch org.apache.maven.model.resolution.UnresolvableModelException from label01 to label02 with label03;
    }

    private org.apache.maven.model.Model getSuperModel()
    {
        DefaultModelBuilder this;
        org.apache.maven.model.superpom.SuperPomProvider $stack1;
        org.apache.maven.model.Model $stack2, $stack3;
        org.apache.maven.model.building.DefaultModelBuilder $r0;

        this := @this: DefaultModelBuilder;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.superpom.SuperPomProvider superPomProvider>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.model.superpom.SuperPomProvider: org.apache.maven.model.Model getSuperModel(java.lang.String)>("4.0.0");

        $stack3 = virtualinvoke $stack2.<org.apache.maven.model.Model: org.apache.maven.model.Model clone()>();

        return $stack3;
    }

    private void importDependencyManagement(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector, java.util.Collection)
    {
        org.apache.maven.model.Model model;
        org.apache.maven.model.DependencyManagement depMgmt, importMgmt;
        java.lang.String $stack13, $stack16, $stack19, importing, $stack29, $stack30, $stack33, $stack34;
        java.lang.StringBuilder $stack14, $stack15, $stack17, $stack18, $stack20, $u0;
        java.util.Collection importIds;
        java.util.List $stack23;
        java.util.Iterator it;
        DefaultModelBuilder this;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.composition.DependencyManagementImporter $stack27;
        java.lang.Object $stack28;
        org.apache.maven.model.Dependency dependency;
        boolean $stack31, $stack35, $stack25;
        java.util.ArrayList importMgmts, $u1;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: DefaultModelBuilder;

        model := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        importIds := @parameter3: java.util.Collection;

        depMgmt = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if depMgmt != null goto label1;

        return;

     label1:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $stack14 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack16 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack19 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        importing = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke importIds.<java.util.Collection: boolean add(java.lang.Object)>(importing);

        importMgmts = null;

        $stack23 = virtualinvoke depMgmt.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        it = interfaceinvoke $stack23.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack25 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();

        if $stack25 == 0 goto label6;

        $stack28 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();

        dependency = (org.apache.maven.model.Dependency) $stack28;

        $stack29 = "pom";

        $stack30 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        $stack31 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>($stack30);

        if $stack31 == 0 goto label2;

        $stack33 = "import";

        $stack34 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $stack35 = virtualinvoke $stack33.<java.lang.String: boolean equals(java.lang.Object)>($stack34);

        if $stack35 != 0 goto label3;

        goto label2;

     label3:
        interfaceinvoke it.<java.util.Iterator: void remove()>();

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        importMgmt = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.DependencyManagement loadDependencyManagement(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector,org.apache.maven.model.Dependency,java.util.Collection)>(model, request, problems, dependency, importIds);

        if importMgmt == null goto label5;

        if importMgmts != null goto label4;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        importMgmts = $u1;

     label4:
        interfaceinvoke importMgmts.<java.util.List: boolean add(java.lang.Object)>(importMgmt);

     label5:
        goto label2;

     label6:
        interfaceinvoke importIds.<java.util.Collection: boolean remove(java.lang.Object)>(importing);

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack27 = $r1.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.composition.DependencyManagementImporter dependencyManagementImporter>;

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) problems;

        interfaceinvoke $stack27.<org.apache.maven.model.composition.DependencyManagementImporter: void importManagement(org.apache.maven.model.Model,java.util.List,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(model, importMgmts, request, $r2);

        return;
    }

    private org.apache.maven.model.DependencyManagement loadDependencyManagement(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector, org.apache.maven.model.Dependency, java.util.Collection)
    {
        org.apache.maven.model.Dependency dependency;
        java.lang.String groupId, artifactId, version, $stack21, $stack24, $stack34, $stack37, $stack47, $stack50, imported, modelId, message;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Version $stack17, $stack30, $stack43, $stack77;
        org.apache.maven.model.building.ModelProblem$Severity $stack18, $stack31, $stack44, $stack78;
        java.lang.StringBuilder $stack20, $stack22, $stack23, $stack33, $stack35, $stack36, $stack46, $stack48, $stack49, $stack56, $stack57, $stack58, $stack59, $stack60, $stack73, $stack74, $stack82, $stack83, $stack84, $u1, $u3, $u5, $u6, $u7, $u8;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack25, $stack27, $stack38, $stack40, $stack51, $stack53, $stack79, $u0, $u2, $u4, $u9;
        org.apache.maven.model.InputLocation $stack26, $stack39, $stack52;
        int $stack28, $stack41, $stack54;
        java.util.Collection importIds;
        boolean $stack62, $stack71;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelCache $stack63, $stack68;
        org.apache.maven.model.building.ModelCacheTag $stack64, $stack69;
        java.lang.Object $stack65, $stack80;
        DefaultModelBuilder this;
        org.apache.maven.model.Model model;
        java.util.Iterator l11;
        org.apache.maven.model.DependencyManagement message#3;
        org.apache.maven.model.building.DefaultModelBuilder $r0, $r1;

        this := @this: DefaultModelBuilder;

        model := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        dependency := @parameter3: org.apache.maven.model.Dependency;

        importIds := @parameter4: java.util.Collection;

        groupId = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        artifactId = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        version = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        if groupId == null goto label01;

        $stack28 = virtualinvoke groupId.<java.lang.String: int length()>();

        if $stack28 > 0 goto label02;

     label01:
        $u0 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack18 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack17 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack18, $stack17);

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'dependencyManagement.dependencies.dependency.groupId\' for ");

        $stack21 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing.");

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack25 = virtualinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack24);

        $stack26 = virtualinvoke dependency.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack27 = virtualinvoke $stack25.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack26);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack27);

        return null;

     label02:
        if artifactId == null goto label03;

        $stack41 = virtualinvoke artifactId.<java.lang.String: int length()>();

        if $stack41 > 0 goto label04;

     label03:
        $u2 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack31 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack30 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u2.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack31, $stack30);

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack33 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'dependencyManagement.dependencies.dependency.artifactId\' for ");

        $stack34 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing.");

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack38 = virtualinvoke $u2.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack37);

        $stack39 = virtualinvoke dependency.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack40 = virtualinvoke $stack38.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack39);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack40);

        return null;

     label04:
        if version == null goto label05;

        $stack54 = virtualinvoke version.<java.lang.String: int length()>();

        if $stack54 > 0 goto label06;

     label05:
        $u4 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack44 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack43 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack44, $stack43);

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack46 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'dependencyManagement.dependencies.dependency.version\' for ");

        $stack47 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47);

        $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing.");

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack51 = virtualinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack50);

        $stack52 = virtualinvoke dependency.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack53 = virtualinvoke $stack51.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack52);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack53);

        return null;

     label06:
        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack56 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(groupId);

        $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(artifactId);

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        imported = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack62 = interfaceinvoke importIds.<java.util.Collection: boolean contains(java.lang.Object)>(imported);

        if $stack62 == 0 goto label09;

        message = "The dependencies of type=pom and with scope=import form a cycle: ";

        l11 = interfaceinvoke importIds.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $stack71 = interfaceinvoke l11.<java.util.Iterator: boolean hasNext()>();

        if $stack71 == 0 goto label08;

        $stack80 = interfaceinvoke l11.<java.util.Iterator: java.lang.Object next()>();

        modelId = (java.lang.String) $stack80;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        $stack82 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(modelId);

        $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        message = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label08:
        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $stack73 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(imported);

        message = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>();

        $u9 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack78 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack77 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u9.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack78, $stack77);

        $stack79 = virtualinvoke $u9.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>(message);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack79);

        return null;

     label09:
        $stack63 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelCache getModelCache()>();

        $stack64 = <org.apache.maven.model.building.ModelCacheTag: org.apache.maven.model.building.ModelCacheTag IMPORT>;

        $stack65 = staticinvoke <org.apache.maven.model.building.DefaultModelBuilder: java.lang.Object fromCache(org.apache.maven.model.building.ModelCache,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelCacheTag)>($stack63, groupId, artifactId, version, $stack64);

        message#3 = (org.apache.maven.model.DependencyManagement) $stack65;

        if message#3 != null goto label10;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        message#3 = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.DependencyManagement doLoadDependencyManagement(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector,org.apache.maven.model.Dependency,java.lang.String,java.lang.String,java.lang.String,java.util.Collection)>(model, request, problems, dependency, groupId, artifactId, version, importIds);

        if message#3 == null goto label10;

        $stack68 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelCache getModelCache()>();

        $stack69 = <org.apache.maven.model.building.ModelCacheTag: org.apache.maven.model.building.ModelCacheTag IMPORT>;

        $r1 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        specialinvoke $r1.<org.apache.maven.model.building.DefaultModelBuilder: void intoCache(org.apache.maven.model.building.ModelCache,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelCacheTag,java.lang.Object)>($stack68, groupId, artifactId, version, $stack69, message#3);

     label10:
        return message#3;
    }

    private org.apache.maven.model.DependencyManagement doLoadDependencyManagement(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector, org.apache.maven.model.Dependency, java.lang.String, java.lang.String, java.lang.String, java.util.Collection)
    {
        org.apache.maven.model.building.ModelBuildingRequest request, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        org.apache.maven.model.resolution.WorkspaceModelResolver workspaceResolver;
        org.apache.maven.model.resolution.ModelResolver modelResolver, $stack33;
        org.apache.maven.model.Dependency dependency;
        org.apache.maven.model.building.ModelCache $stack24;
        java.util.Properties $stack26, $stack28;
        boolean $stack30, $stack58;
        DefaultModelBuilder this;
        java.util.Collection importIds;
        org.apache.maven.model.building.DefaultModelProblemCollector problems;
        java.util.List $stack36, $stack53;
        java.lang.String groupId, artifactId, version, $stack48, $stack50, $stack51, $stack57, $stack60, $stack65, $stack71, $stack86;
        java.lang.Object[] $stack45;
        org.apache.maven.model.Model model, importModel;
        java.lang.Throwable $stack52, $stack54, $stack82;
        java.lang.StringBuilder $stack59, $stack70, $u2;
        org.apache.maven.model.building.ModelProblem$Version $stack63, $stack84;
        org.apache.maven.model.building.ModelProblem$Severity $stack64, $stack85;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack66, $stack68, $stack69, $stack87, $stack88, $u1, $u3;
        org.apache.maven.model.InputLocation $stack67;
        org.apache.maven.model.building.ModelSource e#3;
        org.apache.maven.model.building.ModelBuildingResult e#7;
        org.apache.maven.model.DependencyManagement importMgmt, $u5;
        java.lang.NullPointerException $u0;
        org.apache.maven.model.building.DefaultModelBuildingRequest $u4;
        org.apache.maven.model.resolution.UnresolvableModelException $r0, $r2, $r4;
        java.lang.Exception $r1, $r5;
        org.apache.maven.model.building.DefaultModelBuilder $r3, $r13;
        org.apache.maven.model.building.ModelBuildingException $r15;

        this := @this: DefaultModelBuilder;

        model := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        dependency := @parameter3: org.apache.maven.model.Dependency;

        groupId := @parameter4: java.lang.String;

        artifactId := @parameter5: java.lang.String;

        version := @parameter6: java.lang.String;

        importIds := @parameter7: java.util.Collection;

        workspaceResolver = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.resolution.WorkspaceModelResolver getWorkspaceModelResolver()>();

        modelResolver = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.resolution.ModelResolver getModelResolver()>();

        if workspaceResolver != null goto label01;

        if modelResolver != null goto label01;

        $u0 = new java.lang.NullPointerException;

        $stack45 = newarray (java.lang.Object)[2];

        $stack48 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(java.lang.String,java.lang.String,java.lang.String)>(groupId, artifactId, version);

        $stack45[0] = $stack48;

        $stack50 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toSourceHint(org.apache.maven.model.Model)>(model);

        $stack45[1] = $stack50;

        $stack51 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("request.workspaceModelResolver and request.modelResolver cannot be null (parent POM %s and POM %s)", $stack45);

        specialinvoke $u0.<java.lang.NullPointerException: void <init>(java.lang.String)>($stack51);

        throw $u0;

     label01:
        importModel = null;

        if workspaceResolver == null goto label05;

     label02:
        importModel = interfaceinvoke workspaceResolver.<org.apache.maven.model.resolution.WorkspaceModelResolver: org.apache.maven.model.Model resolveEffectiveModel(java.lang.String,java.lang.String,java.lang.String)>(groupId, artifactId, version);

     label03:
        goto label05;

     label04:
        $stack82 := @caughtexception;

        $u1 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack85 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack84 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u1.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack85, $stack84);

        $r0 = (org.apache.maven.model.resolution.UnresolvableModelException) $stack82;

        $stack86 = virtualinvoke $r0.<org.apache.maven.model.resolution.UnresolvableModelException: java.lang.String getMessage()>();

        $stack87 = virtualinvoke $u1.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack86);

        $r1 = (java.lang.Exception) $stack82;

        $stack88 = virtualinvoke $stack87.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($r1);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack88);

        return null;

     label05:
        if importModel != null goto label14;

     label06:
        e#3 = interfaceinvoke modelResolver.<org.apache.maven.model.resolution.ModelResolver: org.apache.maven.model.building.ModelSource resolveModel(org.apache.maven.model.Dependency)>(dependency);

     label07:
        goto label10;

     label08:
        $stack54 := @caughtexception;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>(int)>(256);

        virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Non-resolvable import POM");

        $r2 = (org.apache.maven.model.resolution.UnresolvableModelException) $stack54;

        $stack57 = virtualinvoke $r2.<org.apache.maven.model.resolution.UnresolvableModelException: java.lang.String getMessage()>();

        $r3 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack58 = specialinvoke $r3.<org.apache.maven.model.building.DefaultModelBuilder: boolean containsCoordinates(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack57, groupId, artifactId, version);

        if $stack58 != 0 goto label09;

        $stack70 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $stack71 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(java.lang.String,java.lang.String,java.lang.String)>(groupId, artifactId, version);

        virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack71);

     label09:
        $stack59 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r4 = (org.apache.maven.model.resolution.UnresolvableModelException) $stack54;

        $stack60 = virtualinvoke $r4.<org.apache.maven.model.resolution.UnresolvableModelException: java.lang.String getMessage()>();

        virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack60);

        $u3 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack64 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack63 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u3.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack64, $stack63);

        $stack65 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack66 = virtualinvoke $u3.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack65);

        $stack67 = virtualinvoke dependency.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        $stack68 = virtualinvoke $stack66.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack67);

        $r5 = (java.lang.Exception) $stack54;

        $stack69 = virtualinvoke $stack68.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($r5);

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack69);

        return null;

     label10:
        $u4 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        specialinvoke $u4.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>()>();

        $r6 = (org.apache.maven.model.building.ModelBuildingRequest) $u4;

        interfaceinvoke $r6.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setValidationLevel(int)>(0);

        $stack24 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelCache getModelCache()>();

        $r7 = (org.apache.maven.model.building.ModelBuildingRequest) $u4;

        interfaceinvoke $r7.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setModelCache(org.apache.maven.model.building.ModelCache)>($stack24);

        $stack26 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        $r8 = (org.apache.maven.model.building.ModelBuildingRequest) $u4;

        interfaceinvoke $r8.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setSystemProperties(java.util.Properties)>($stack26);

        $stack28 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getUserProperties()>();

        $r9 = (org.apache.maven.model.building.ModelBuildingRequest) $u4;

        interfaceinvoke $r9.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setUserProperties(java.util.Properties)>($stack28);

        $stack30 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: boolean isLocationTracking()>();

        $r10 = (org.apache.maven.model.building.ModelBuildingRequest) $u4;

        interfaceinvoke $r10.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setLocationTracking(boolean)>($stack30);

        $r11 = (org.apache.maven.model.building.ModelBuildingRequest) $u4;

        interfaceinvoke $r11.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setModelSource(org.apache.maven.model.building.ModelSource)>(e#3);

        $stack33 = interfaceinvoke modelResolver.<org.apache.maven.model.resolution.ModelResolver: org.apache.maven.model.resolution.ModelResolver newCopy()>();

        $r12 = (org.apache.maven.model.building.ModelBuildingRequest) $u4;

        interfaceinvoke $r12.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setModelResolver(org.apache.maven.model.resolution.ModelResolver)>($stack33);

        $r13 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $r14 = (org.apache.maven.model.building.ModelBuildingRequest) $u4;

        e#7 = virtualinvoke $r13.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.ModelBuildingResult build(org.apache.maven.model.building.ModelBuildingRequest,java.util.Collection)>($r14, importIds);

     label11:
        goto label13;

     label12:
        $stack52 := @caughtexception;

        $r15 = (org.apache.maven.model.building.ModelBuildingException) $stack52;

        $stack53 = virtualinvoke $r15.<org.apache.maven.model.building.ModelBuildingException: java.util.List getProblems()>();

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void addAll(java.util.List)>($stack53);

        return null;

     label13:
        $stack36 = interfaceinvoke e#7.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getProblems()>();

        virtualinvoke problems.<org.apache.maven.model.building.DefaultModelProblemCollector: void addAll(java.util.List)>($stack36);

        importModel = interfaceinvoke e#7.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getEffectiveModel()>();

     label14:
        importMgmt = virtualinvoke importModel.<org.apache.maven.model.Model: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if importMgmt != null goto label15;

        $u5 = new org.apache.maven.model.DependencyManagement;

        specialinvoke $u5.<org.apache.maven.model.DependencyManagement: void <init>()>();

        importMgmt = $u5;

     label15:
        return importMgmt;

        catch org.apache.maven.model.resolution.UnresolvableModelException from label02 to label03 with label04;
        catch org.apache.maven.model.resolution.UnresolvableModelException from label06 to label07 with label08;
        catch org.apache.maven.model.building.ModelBuildingException from label10 to label11 with label12;
    }

    private void intoCache(org.apache.maven.model.building.ModelCache, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.model.building.ModelCacheTag, java.lang.Object)
    {
        org.apache.maven.model.building.ModelCache modelCache;
        java.lang.String groupId, artifactId, version;
        org.apache.maven.model.building.ModelCacheTag tag;
        java.lang.Object data;
        DefaultModelBuilder this;

        this := @this: DefaultModelBuilder;

        modelCache := @parameter0: org.apache.maven.model.building.ModelCache;

        groupId := @parameter1: java.lang.String;

        artifactId := @parameter2: java.lang.String;

        version := @parameter3: java.lang.String;

        tag := @parameter4: org.apache.maven.model.building.ModelCacheTag;

        data := @parameter5: java.lang.Object;

        if modelCache == null goto label1;

        interfaceinvoke modelCache.<org.apache.maven.model.building.ModelCache: void put(java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelCacheTag,java.lang.Object)>(groupId, artifactId, version, tag, data);

     label1:
        return;
    }

    private void intoCache(org.apache.maven.model.building.ModelCache, org.apache.maven.building.Source, org.apache.maven.model.building.ModelCacheTag, java.lang.Object)
    {
        org.apache.maven.model.building.ModelCache modelCache;
        org.apache.maven.building.Source source;
        org.apache.maven.model.building.ModelCacheTag tag;
        java.lang.Object data;
        DefaultModelBuilder this;

        this := @this: DefaultModelBuilder;

        modelCache := @parameter0: org.apache.maven.model.building.ModelCache;

        source := @parameter1: org.apache.maven.building.Source;

        tag := @parameter2: org.apache.maven.model.building.ModelCacheTag;

        data := @parameter3: java.lang.Object;

        if modelCache == null goto label1;

        interfaceinvoke modelCache.<org.apache.maven.model.building.ModelCache: void put(org.apache.maven.building.Source,org.apache.maven.model.building.ModelCacheTag,java.lang.Object)>(source, tag, data);

     label1:
        return;
    }

    private static java.lang.Object fromCache(org.apache.maven.model.building.ModelCache, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.model.building.ModelCacheTag)
    {
        org.apache.maven.model.building.ModelCache modelCache;
        java.lang.String groupId, artifactId, version;
        org.apache.maven.model.building.ModelCacheTag tag;
        java.lang.Object $stack5;

        modelCache := @parameter0: org.apache.maven.model.building.ModelCache;

        groupId := @parameter1: java.lang.String;

        artifactId := @parameter2: java.lang.String;

        version := @parameter3: java.lang.String;

        tag := @parameter4: org.apache.maven.model.building.ModelCacheTag;

        if modelCache == null goto label1;

        $stack5 = interfaceinvoke modelCache.<org.apache.maven.model.building.ModelCache: java.lang.Object get(java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelCacheTag)>(groupId, artifactId, version, tag);

        return $stack5;

     label1:
        return null;
    }

    private static java.lang.Object fromCache(org.apache.maven.model.building.ModelCache, org.apache.maven.building.Source, org.apache.maven.model.building.ModelCacheTag)
    {
        org.apache.maven.model.building.ModelCache modelCache;
        org.apache.maven.building.Source source;
        org.apache.maven.model.building.ModelCacheTag tag;
        java.lang.Object $stack3;

        modelCache := @parameter0: org.apache.maven.model.building.ModelCache;

        source := @parameter1: org.apache.maven.building.Source;

        tag := @parameter2: org.apache.maven.model.building.ModelCacheTag;

        if modelCache == null goto label1;

        $stack3 = interfaceinvoke modelCache.<org.apache.maven.model.building.ModelCache: java.lang.Object get(org.apache.maven.building.Source,org.apache.maven.model.building.ModelCacheTag)>(source, tag);

        return $stack3;

     label1:
        return null;
    }

    private void fireEvent(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelBuildingEventCatapult) throws org.apache.maven.model.building.ModelBuildingException
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelBuildingListener listener;
        org.apache.maven.model.Model model;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelBuildingEventCatapult catapult;
        DefaultModelBuilder this;
        org.apache.maven.model.building.DefaultModelBuildingEvent $u0;
        org.apache.maven.model.building.ModelBuildingEvent $r0;

        this := @this: DefaultModelBuilder;

        model := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        catapult := @parameter3: org.apache.maven.model.building.ModelBuildingEventCatapult;

        listener = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingListener getModelBuildingListener()>();

        if listener == null goto label1;

        $u0 = new org.apache.maven.model.building.DefaultModelBuildingEvent;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingEvent: void <init>(org.apache.maven.model.Model,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(model, request, problems);

        $r0 = (org.apache.maven.model.building.ModelBuildingEvent) $u0;

        interfaceinvoke catapult.<org.apache.maven.model.building.ModelBuildingEventCatapult: void fire(org.apache.maven.model.building.ModelBuildingListener,org.apache.maven.model.building.ModelBuildingEvent)>(listener, $r0);

     label1:
        return;
    }

    private boolean containsCoordinates(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String message, groupId, artifactId, version;
        boolean $stack6, $stack7, $stack9, $stack5;
        DefaultModelBuilder this;

        this := @this: DefaultModelBuilder;

        message := @parameter0: java.lang.String;

        groupId := @parameter1: java.lang.String;

        artifactId := @parameter2: java.lang.String;

        version := @parameter3: java.lang.String;

        if message == null goto label4;

        if groupId == null goto label1;

        $stack9 = virtualinvoke message.<java.lang.String: boolean contains(java.lang.CharSequence)>(groupId);

        if $stack9 == 0 goto label4;

     label1:
        if artifactId == null goto label2;

        $stack7 = virtualinvoke message.<java.lang.String: boolean contains(java.lang.CharSequence)>(artifactId);

        if $stack7 == 0 goto label4;

     label2:
        if version == null goto label3;

        $stack6 = virtualinvoke message.<java.lang.String: boolean contains(java.lang.CharSequence)>(version);

        if $stack6 == 0 goto label4;

     label3:
        $stack5 = 1;

        goto label5;

     label4:
        $stack5 = 0;

     label5:
        return $stack5;
    }

    protected boolean hasModelErrors(org.apache.maven.model.building.ModelProblemCollectorExt)
    {
        org.apache.maven.model.building.ModelProblemCollectorExt problems;
        boolean $stack2, $stack5;
        java.lang.IllegalStateException $stack3;
        org.apache.maven.model.building.DefaultModelProblemCollector $stack4;
        DefaultModelBuilder this;

        this := @this: DefaultModelBuilder;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollectorExt;

        $stack2 = problems instanceof org.apache.maven.model.building.DefaultModelProblemCollector;

        if $stack2 == 0 goto label1;

        $stack4 = (org.apache.maven.model.building.DefaultModelProblemCollector) problems;

        $stack5 = virtualinvoke $stack4.<org.apache.maven.model.building.DefaultModelProblemCollector: boolean hasErrors()>();

        return $stack5;

     label1:
        $stack3 = new java.lang.IllegalStateException;

        specialinvoke $stack3.<java.lang.IllegalStateException: void <init>()>();

        throw $stack3;
    }

    protected boolean hasFatalErrors(org.apache.maven.model.building.ModelProblemCollectorExt)
    {
        org.apache.maven.model.building.ModelProblemCollectorExt problems;
        boolean $stack2, $stack5;
        java.lang.IllegalStateException $stack3;
        org.apache.maven.model.building.DefaultModelProblemCollector $stack4;
        DefaultModelBuilder this;

        this := @this: DefaultModelBuilder;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollectorExt;

        $stack2 = problems instanceof org.apache.maven.model.building.DefaultModelProblemCollector;

        if $stack2 == 0 goto label1;

        $stack4 = (org.apache.maven.model.building.DefaultModelProblemCollector) problems;

        $stack5 = virtualinvoke $stack4.<org.apache.maven.model.building.DefaultModelProblemCollector: boolean hasFatalErrors()>();

        return $stack5;

     label1:
        $stack3 = new java.lang.IllegalStateException;

        specialinvoke $stack3.<java.lang.IllegalStateException: void <init>()>();

        throw $stack3;
    }

    public volatile org.apache.maven.model.building.TransformerContextBuilder newTransformerContextBuilder()
    {
        DefaultModelBuilder this;
        org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder $stack1;
        org.apache.maven.model.building.DefaultModelBuilder $r0;
        org.apache.maven.model.building.TransformerContextBuilder $r1;

        this := @this: DefaultModelBuilder;

        $r0 = (org.apache.maven.model.building.DefaultModelBuilder) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.building.DefaultModelBuilder$DefaultTransformerContextBuilder newTransformerContextBuilder()>();

        $r1 = (org.apache.maven.model.building.TransformerContextBuilder) $stack1;

        return $r1;
    }

    private static java.lang.String lambda$checkPluginVersions$1(org.apache.maven.model.Plugin, java.lang.String)
    {
        org.apache.maven.model.Plugin plugin;
        java.lang.String $stack2, k;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        k := @parameter1: java.lang.String;

        $stack2 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        return $stack2;
    }

    private static java.lang.Object lambda$doReadFileModel$0(java.lang.String)
    {
        org.apache.maven.model.InputSource $stack1;
        java.lang.String k;

        k := @parameter0: java.lang.String;

        $stack1 = new org.apache.maven.model.InputSource;

        specialinvoke $stack1.<org.apache.maven.model.InputSource: void <init>()>();

        return $stack1;
    }

    static org.apache.maven.model.Model access$200(org.apache.maven.model.building.DefaultModelBuilder, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.DefaultModelProblemCollector) throws org.apache.maven.model.building.ModelBuildingException
    {
        org.apache.maven.model.building.DefaultModelBuilder x0;
        org.apache.maven.model.building.ModelBuildingRequest x1;
        org.apache.maven.model.building.DefaultModelProblemCollector x2;
        org.apache.maven.model.Model $stack3;

        x0 := @parameter0: org.apache.maven.model.building.DefaultModelBuilder;

        x1 := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        x2 := @parameter2: org.apache.maven.model.building.DefaultModelProblemCollector;

        $stack3 = specialinvoke x0.<org.apache.maven.model.building.DefaultModelBuilder: org.apache.maven.model.Model readRawModel(org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.DefaultModelProblemCollector)>(x1, x2);

        return $stack3;
    }
}
