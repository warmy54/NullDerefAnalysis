public class DefaultModelBuildingListener extends org.apache.maven.model.building.AbstractModelBuildingListener
{
    private org.apache.maven.project.MavenProject project;
    private org.apache.maven.project.ProjectBuildingHelper projectBuildingHelper;
    private org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest;
    private java.util.List remoteRepositories;
    private java.util.List pluginRepositories;

    public void <init>(org.apache.maven.project.MavenProject, org.apache.maven.project.ProjectBuildingHelper, org.apache.maven.project.ProjectBuildingRequest)
    {
        DefaultModelBuildingListener this;
        org.apache.maven.project.MavenProject project, $stack5;
        java.lang.Object $stack4, $stack6, $stack8;
        org.apache.maven.project.ProjectBuildingHelper projectBuildingHelper, $stack7;
        org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest, $stack9;
        java.util.List $stack10, $stack11;
        org.apache.maven.project.DefaultModelBuildingListener $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultModelBuildingListener;

        project := @parameter0: org.apache.maven.project.MavenProject;

        projectBuildingHelper := @parameter1: org.apache.maven.project.ProjectBuildingHelper;

        projectBuildingRequest := @parameter2: org.apache.maven.project.ProjectBuildingRequest;

        specialinvoke this.<org.apache.maven.model.building.AbstractModelBuildingListener: void <init>()>();

        $stack4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(project, "project cannot be null");

        $stack5 = (org.apache.maven.project.MavenProject) $stack4;

        $r0 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $r0.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.MavenProject project> = $stack5;

        $stack6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(projectBuildingHelper, "projectBuildingHelper cannot be null");

        $stack7 = (org.apache.maven.project.ProjectBuildingHelper) $stack6;

        $r1 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $r1.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.ProjectBuildingHelper projectBuildingHelper> = $stack7;

        $stack8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(projectBuildingRequest, "projectBuildingRequest cannot be null");

        $stack9 = (org.apache.maven.project.ProjectBuildingRequest) $stack8;

        $r2 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $r2.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest> = $stack9;

        $stack10 = interfaceinvoke projectBuildingRequest.<org.apache.maven.project.ProjectBuildingRequest: java.util.List getRemoteRepositories()>();

        $r3 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $r3.<org.apache.maven.project.DefaultModelBuildingListener: java.util.List remoteRepositories> = $stack10;

        $stack11 = interfaceinvoke projectBuildingRequest.<org.apache.maven.project.ProjectBuildingRequest: java.util.List getPluginArtifactRepositories()>();

        $r4 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $r4.<org.apache.maven.project.DefaultModelBuildingListener: java.util.List pluginRepositories> = $stack11;

        return;
    }

    public org.apache.maven.project.MavenProject getProject()
    {
        DefaultModelBuildingListener this;
        org.apache.maven.project.MavenProject $stack1;
        org.apache.maven.project.DefaultModelBuildingListener $r0;

        this := @this: DefaultModelBuildingListener;

        $r0 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.MavenProject project>;

        return $stack1;
    }

    public void buildExtensionsAssembled(org.apache.maven.model.building.ModelBuildingEvent)
    {
        org.apache.maven.model.building.ModelBuildingEvent event;
        org.apache.maven.model.Model model;
        DefaultModelBuildingListener this;
        org.apache.maven.project.ProjectBuildingHelper $stack5, $stack23, $stack30, $stack14;
        java.util.List $stack6, $stack8, $stack9, $stack10, $stack19, $stack15, $stack17, $stack18;
        org.apache.maven.project.ProjectBuildingRequest $stack7, $stack21, $stack16;
        org.apache.maven.project.MavenProject $stack11, $stack20, $stack22, $stack25, $stack27, $stack29;
        org.apache.maven.model.building.ModelBuildingRequest $stack12;
        boolean $stack13;
        org.codehaus.plexus.classworlds.realm.ClassRealm $stack26;
        org.eclipse.aether.graph.DependencyFilter $stack28;
        java.lang.Exception $stack36, $stack64, $r11, $r12;
        org.apache.maven.model.building.ModelProblemCollector $stack37, $stack51, $stack65;
        org.apache.maven.model.building.ModelProblem$Version $stack39, $stack53, $stack67;
        org.apache.maven.model.building.ModelProblem$Severity $stack40, $stack54, $stack68;
        java.lang.StringBuilder $stack42, $stack44, $stack56, $stack58, $stack70, $stack72, $u1, $u3, $u5;
        java.lang.String $stack43, $stack45, $stack57, $stack59, $stack71, $stack73;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack46, $stack47, $stack60, $stack61, $stack74, $stack75, $u0, $u2, $u4;
        java.lang.Throwable $stack50;
        org.apache.maven.project.ProjectRealmCache$CacheRecord e#2;
        org.apache.maven.project.DefaultModelBuildingListener $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        this := @this: DefaultModelBuildingListener;

        event := @parameter0: org.apache.maven.model.building.ModelBuildingEvent;

        model = interfaceinvoke event.<org.apache.maven.model.building.ModelBuildingEvent: org.apache.maven.model.Model getModel()>();

     label01:
        $r0 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack5 = $r0.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.ProjectBuildingHelper projectBuildingHelper>;

        $stack6 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getPluginRepositories()>();

        $r1 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack8 = $r1.<org.apache.maven.project.DefaultModelBuildingListener: java.util.List pluginRepositories>;

        $r2 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack7 = $r2.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $stack9 = interfaceinvoke $stack5.<org.apache.maven.project.ProjectBuildingHelper: java.util.List createArtifactRepositories(java.util.List,java.util.List,org.apache.maven.project.ProjectBuildingRequest)>($stack6, $stack8, $stack7);

        $r3 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $r3.<org.apache.maven.project.DefaultModelBuildingListener: java.util.List pluginRepositories> = $stack9;

     label02:
        goto label04;

     label03:
        $stack64 := @caughtexception;

        $stack65 = interfaceinvoke event.<org.apache.maven.model.building.ModelBuildingEvent: org.apache.maven.model.building.ModelProblemCollector getProblems()>();

        $u0 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack68 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack67 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack68, $stack67);

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack70 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid plugin repository: ");

        $stack71 = virtualinvoke $stack64.<java.lang.Exception: java.lang.String getMessage()>();

        $stack72 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack71);

        $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack74 = virtualinvoke $u0.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack73);

        $stack75 = virtualinvoke $stack74.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($stack64);

        interfaceinvoke $stack65.<org.apache.maven.model.building.ModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack75);

     label04:
        $r4 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack11 = $r4.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.MavenProject project>;

        $r5 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack10 = $r5.<org.apache.maven.project.DefaultModelBuildingListener: java.util.List pluginRepositories>;

        virtualinvoke $stack11.<org.apache.maven.project.MavenProject: void setPluginArtifactRepositories(java.util.List)>($stack10);

        $stack12 = interfaceinvoke event.<org.apache.maven.model.building.ModelBuildingEvent: org.apache.maven.model.building.ModelBuildingRequest getRequest()>();

        $stack13 = interfaceinvoke $stack12.<org.apache.maven.model.building.ModelBuildingRequest: boolean isProcessPlugins()>();

        if $stack13 == 0 goto label09;

     label05:
        $r6 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack23 = $r6.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.ProjectBuildingHelper projectBuildingHelper>;

        $r7 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack22 = $r7.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.MavenProject project>;

        $r8 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack21 = $r8.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        e#2 = interfaceinvoke $stack23.<org.apache.maven.project.ProjectBuildingHelper: org.apache.maven.project.ProjectRealmCache$CacheRecord createProjectRealm(org.apache.maven.project.MavenProject,org.apache.maven.model.Model,org.apache.maven.project.ProjectBuildingRequest)>($stack22, model, $stack21);

        $r9 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack25 = $r9.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.MavenProject project>;

        $stack26 = virtualinvoke e#2.<org.apache.maven.project.ProjectRealmCache$CacheRecord: org.codehaus.plexus.classworlds.realm.ClassRealm getRealm()>();

        virtualinvoke $stack25.<org.apache.maven.project.MavenProject: void setClassRealm(org.codehaus.plexus.classworlds.realm.ClassRealm)>($stack26);

        $r10 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack27 = $r10.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.MavenProject project>;

        $stack28 = virtualinvoke e#2.<org.apache.maven.project.ProjectRealmCache$CacheRecord: org.eclipse.aether.graph.DependencyFilter getExtensionArtifactFilter()>();

        virtualinvoke $stack27.<org.apache.maven.project.MavenProject: void setExtensionDependencyFilter(org.eclipse.aether.graph.DependencyFilter)>($stack28);

     label06:
        goto label08;

     label07:
        $stack50 := @caughtexception;

        $stack51 = interfaceinvoke event.<org.apache.maven.model.building.ModelBuildingEvent: org.apache.maven.model.building.ModelProblemCollector getProblems()>();

        $u2 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack54 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack53 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u2.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack54, $stack53);

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack56 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unresolvable build extension: ");

        $r11 = (java.lang.Exception) $stack50;

        $stack57 = virtualinvoke $r11.<java.lang.Exception: java.lang.String getMessage()>();

        $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57);

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack60 = virtualinvoke $u2.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack59);

        $r12 = (java.lang.Exception) $stack50;

        $stack61 = virtualinvoke $stack60.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($r12);

        interfaceinvoke $stack51.<org.apache.maven.model.building.ModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack61);

     label08:
        $r13 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack30 = $r13.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.ProjectBuildingHelper projectBuildingHelper>;

        $r14 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack29 = $r14.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.MavenProject project>;

        interfaceinvoke $stack30.<org.apache.maven.project.ProjectBuildingHelper: void selectProjectRealm(org.apache.maven.project.MavenProject)>($stack29);

     label09:
        $r15 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack14 = $r15.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.ProjectBuildingHelper projectBuildingHelper>;

        $stack15 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        $r16 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack17 = $r16.<org.apache.maven.project.DefaultModelBuildingListener: java.util.List remoteRepositories>;

        $r17 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack16 = $r17.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest>;

        $stack18 = interfaceinvoke $stack14.<org.apache.maven.project.ProjectBuildingHelper: java.util.List createArtifactRepositories(java.util.List,java.util.List,org.apache.maven.project.ProjectBuildingRequest)>($stack15, $stack17, $stack16);

        $r18 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $r18.<org.apache.maven.project.DefaultModelBuildingListener: java.util.List remoteRepositories> = $stack18;

     label10:
        goto label12;

     label11:
        $stack36 := @caughtexception;

        $stack37 = interfaceinvoke event.<org.apache.maven.model.building.ModelBuildingEvent: org.apache.maven.model.building.ModelProblemCollector getProblems()>();

        $u4 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack40 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack39 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack40, $stack39);

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack42 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid artifact repository: ");

        $stack43 = virtualinvoke $stack36.<java.lang.Exception: java.lang.String getMessage()>();

        $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43);

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack46 = virtualinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack45);

        $stack47 = virtualinvoke $stack46.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setException(java.lang.Exception)>($stack36);

        interfaceinvoke $stack37.<org.apache.maven.model.building.ModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack47);

     label12:
        $r19 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack20 = $r19.<org.apache.maven.project.DefaultModelBuildingListener: org.apache.maven.project.MavenProject project>;

        $r20 = (org.apache.maven.project.DefaultModelBuildingListener) this;

        $stack19 = $r20.<org.apache.maven.project.DefaultModelBuildingListener: java.util.List remoteRepositories>;

        virtualinvoke $stack20.<org.apache.maven.project.MavenProject: void setRemoteArtifactRepositories(java.util.List)>($stack19);

        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch org.apache.maven.plugin.PluginResolutionException from label05 to label06 with label07;
        catch org.apache.maven.plugin.PluginManagerException from label05 to label06 with label07;
        catch org.apache.maven.plugin.version.PluginVersionResolutionException from label05 to label06 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
    }
}
