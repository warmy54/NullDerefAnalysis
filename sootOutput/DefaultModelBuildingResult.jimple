class DefaultModelBuildingResult extends java.lang.Object implements org.apache.maven.model.building.ModelBuildingResult
{
    private org.apache.maven.model.Model fileModel;
    private org.apache.maven.model.Model effectiveModel;
    private java.util.List modelIds;
    private java.util.Map rawModels;
    private java.util.Map activePomProfiles;
    private java.util.List activeExternalProfiles;
    private java.util.List problems;

    void <init>()
    {
        DefaultModelBuildingResult this;
        java.util.ArrayList $u0, $u3, $u4;
        java.util.HashMap $u1, $u2;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultModelBuildingResult;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List modelIds> = $u0;

        $u1 = new java.util.HashMap;

        specialinvoke $u1.<java.util.HashMap: void <init>()>();

        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r1.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map rawModels> = $u1;

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>()>();

        $r2 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r2.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map activePomProfiles> = $u2;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        $r3 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r3.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List activeExternalProfiles> = $u3;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        $r4 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r4.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List problems> = $u4;

        return;
    }

    void <init>(org.apache.maven.model.building.ModelBuildingResult)
    {
        DefaultModelBuildingResult this;
        org.apache.maven.model.building.ModelBuildingResult result;
        java.util.List $stack4, $stack5, $stack9, $stack10, $stack12, $stack16, $stack22;
        org.apache.maven.model.Model $stack7, $stack8, $stack19;
        java.util.Iterator l2;
        boolean $stack14;
        java.lang.Object $stack15;
        java.lang.String modelId;
        java.util.Map $stack18, $stack21;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: DefaultModelBuildingResult;

        result := @parameter0: org.apache.maven.model.building.ModelBuildingResult;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        specialinvoke $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: void <init>()>();

        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack4 = $r1.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List activeExternalProfiles>;

        $stack5 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getActiveExternalProfiles()>();

        interfaceinvoke $stack4.<java.util.List: boolean addAll(java.util.Collection)>($stack5);

        $stack7 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getEffectiveModel()>();

        $r2 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r2.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.Model effectiveModel> = $stack7;

        $stack8 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getFileModel()>();

        $r3 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r3.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.Model fileModel> = $stack8;

        $r4 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack9 = $r4.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List problems>;

        $stack10 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getProblems()>();

        interfaceinvoke $stack9.<java.util.List: boolean addAll(java.util.Collection)>($stack10);

        $stack12 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getModelIds()>();

        l2 = interfaceinvoke $stack12.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack14 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack14 == 0 goto label2;

        $stack15 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        modelId = (java.lang.String) $stack15;

        $r5 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack16 = $r5.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List modelIds>;

        interfaceinvoke $stack16.<java.util.List: boolean add(java.lang.Object)>(modelId);

        $r6 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack18 = $r6.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map rawModels>;

        $stack19 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getRawModel(java.lang.String)>(modelId);

        interfaceinvoke $stack18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(modelId, $stack19);

        $r7 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack21 = $r7.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map activePomProfiles>;

        $stack22 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getActivePomProfiles(java.lang.String)>(modelId);

        interfaceinvoke $stack21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(modelId, $stack22);

        goto label1;

     label2:
        return;
    }

    public org.apache.maven.model.Model getFileModel()
    {
        DefaultModelBuildingResult this;
        org.apache.maven.model.Model $stack1;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0;

        this := @this: DefaultModelBuildingResult;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.Model fileModel>;

        return $stack1;
    }

    public org.apache.maven.model.building.DefaultModelBuildingResult setFileModel(org.apache.maven.model.Model)
    {
        DefaultModelBuildingResult this;
        org.apache.maven.model.Model fileModel;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1;

        this := @this: DefaultModelBuildingResult;

        fileModel := @parameter0: org.apache.maven.model.Model;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.Model fileModel> = fileModel;

        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        return $r1;
    }

    public org.apache.maven.model.Model getEffectiveModel()
    {
        DefaultModelBuildingResult this;
        org.apache.maven.model.Model $stack1;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0;

        this := @this: DefaultModelBuildingResult;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.Model effectiveModel>;

        return $stack1;
    }

    public org.apache.maven.model.building.DefaultModelBuildingResult setEffectiveModel(org.apache.maven.model.Model)
    {
        DefaultModelBuildingResult this;
        org.apache.maven.model.Model model;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1;

        this := @this: DefaultModelBuildingResult;

        model := @parameter0: org.apache.maven.model.Model;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.Model effectiveModel> = model;

        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        return $r1;
    }

    public java.util.List getModelIds()
    {
        DefaultModelBuildingResult this;
        java.util.List $stack1;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0;

        this := @this: DefaultModelBuildingResult;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List modelIds>;

        return $stack1;
    }

    public org.apache.maven.model.building.DefaultModelBuildingResult addModelId(java.lang.String)
    {
        java.lang.String modelId;
        DefaultModelBuildingResult this;
        java.util.List $stack3;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1;

        this := @this: DefaultModelBuildingResult;

        modelId := @parameter0: java.lang.String;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(modelId, "modelId cannot null");

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack3 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List modelIds>;

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>(modelId);

        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        return $r1;
    }

    public org.apache.maven.model.Model getRawModel()
    {
        DefaultModelBuildingResult this;
        java.util.List $stack1;
        java.util.Map $stack2;
        java.lang.Object $stack3, $stack4;
        org.apache.maven.model.Model $stack5;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1;

        this := @this: DefaultModelBuildingResult;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map rawModels>;

        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack1 = $r1.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List modelIds>;

        $stack3 = interfaceinvoke $stack1.<java.util.List: java.lang.Object get(int)>(0);

        $stack4 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack3);

        $stack5 = (org.apache.maven.model.Model) $stack4;

        return $stack5;
    }

    public org.apache.maven.model.Model getRawModel(java.lang.String)
    {
        DefaultModelBuildingResult this;
        java.lang.String modelId;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.apache.maven.model.Model $stack4;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0;

        this := @this: DefaultModelBuildingResult;

        modelId := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map rawModels>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(modelId);

        $stack4 = (org.apache.maven.model.Model) $stack3;

        return $stack4;
    }

    public org.apache.maven.model.building.DefaultModelBuildingResult setRawModel(java.lang.String, org.apache.maven.model.Model)
    {
        java.lang.String modelId;
        DefaultModelBuildingResult this;
        org.apache.maven.model.Model rawModel;
        java.util.Map $stack4;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1;

        this := @this: DefaultModelBuildingResult;

        modelId := @parameter0: java.lang.String;

        rawModel := @parameter1: org.apache.maven.model.Model;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(modelId, "modelId cannot null");

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack4 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map rawModels>;

        interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(modelId, rawModel);

        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        return $r1;
    }

    public java.util.List getActivePomProfiles(java.lang.String)
    {
        DefaultModelBuildingResult this;
        java.lang.String modelId;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        java.util.List $stack4;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0;

        this := @this: DefaultModelBuildingResult;

        modelId := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map activePomProfiles>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(modelId);

        $stack4 = (java.util.List) $stack3;

        return $stack4;
    }

    public org.apache.maven.model.building.DefaultModelBuildingResult setActivePomProfiles(java.lang.String, java.util.List)
    {
        java.lang.String modelId;
        java.util.List activeProfiles;
        DefaultModelBuildingResult this;
        java.util.Map $stack4, $stack7;
        java.util.ArrayList $u0;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1, $r2;

        this := @this: DefaultModelBuildingResult;

        modelId := @parameter0: java.lang.String;

        activeProfiles := @parameter1: java.util.List;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(modelId, "modelId cannot null");

        if activeProfiles == null goto label1;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack7 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map activePomProfiles>;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(activeProfiles);

        interfaceinvoke $stack7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(modelId, $u0);

        goto label2;

     label1:
        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack4 = $r1.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.Map activePomProfiles>;

        interfaceinvoke $stack4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(modelId);

     label2:
        $r2 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        return $r2;
    }

    public java.util.List getActiveExternalProfiles()
    {
        DefaultModelBuildingResult this;
        java.util.List $stack1;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0;

        this := @this: DefaultModelBuildingResult;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List activeExternalProfiles>;

        return $stack1;
    }

    public org.apache.maven.model.building.DefaultModelBuildingResult setActiveExternalProfiles(java.util.List)
    {
        java.util.List activeProfiles, $stack2;
        DefaultModelBuildingResult this;
        java.util.ArrayList $u0;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1, $r2;

        this := @this: DefaultModelBuildingResult;

        activeProfiles := @parameter0: java.util.List;

        if activeProfiles == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(activeProfiles);

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List activeExternalProfiles> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack2 = $r1.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List activeExternalProfiles>;

        interfaceinvoke $stack2.<java.util.List: void clear()>();

     label2:
        $r2 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        return $r2;
    }

    public java.util.List getProblems()
    {
        DefaultModelBuildingResult this;
        java.util.List $stack1;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0;

        this := @this: DefaultModelBuildingResult;

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List problems>;

        return $stack1;
    }

    public org.apache.maven.model.building.DefaultModelBuildingResult setProblems(java.util.List)
    {
        java.util.List problems, $stack2;
        DefaultModelBuildingResult this;
        java.util.ArrayList $u0;
        org.apache.maven.model.building.DefaultModelBuildingResult $r0, $r1, $r2;

        this := @this: DefaultModelBuildingResult;

        problems := @parameter0: java.util.List;

        if problems == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(problems);

        $r0 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $r0.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List problems> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        $stack2 = $r1.<org.apache.maven.model.building.DefaultModelBuildingResult: java.util.List problems>;

        interfaceinvoke $stack2.<java.util.List: void clear()>();

     label2:
        $r2 = (org.apache.maven.model.building.DefaultModelBuildingResult) this;

        return $r2;
    }
}
