class DefaultModelProblemCollector extends java.lang.Object implements org.apache.maven.model.building.ModelProblemCollectorExt
{
    private final org.apache.maven.model.building.ModelBuildingResult result;
    private java.util.List problems;
    private java.lang.String source;
    private org.apache.maven.model.Model sourceModel;
    private org.apache.maven.model.Model rootModel;
    private java.util.Set severities;

    void <init>(org.apache.maven.model.building.ModelBuildingResult)
    {
        DefaultModelProblemCollector this;
        java.util.EnumSet $stack4;
        org.apache.maven.model.building.ModelBuildingResult result;
        java.util.List $stack5, $stack6;
        java.util.Iterator l2;
        boolean $stack8;
        java.lang.Object $stack9;
        org.apache.maven.model.building.ModelProblem problem;
        java.util.Set $stack10;
        org.apache.maven.model.building.ModelProblem$Severity $stack11;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultModelProblemCollector;

        result := @parameter0: org.apache.maven.model.building.ModelBuildingResult;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack4 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Lorg/apache/maven/model/building/ModelProblem$Severity;");

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.Set severities> = $stack4;

        $r1 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r1.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingResult result> = result;

        $stack5 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getProblems()>();

        $r2 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r2.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.List problems> = $stack5;

        $r3 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack6 = $r3.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.List problems>;

        l2 = interfaceinvoke $stack6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label2;

        $stack9 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        problem = (org.apache.maven.model.building.ModelProblem) $stack9;

        $r4 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack10 = $r4.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.Set severities>;

        $stack11 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: org.apache.maven.model.building.ModelProblem$Severity getSeverity()>();

        interfaceinvoke $stack10.<java.util.Set: boolean add(java.lang.Object)>($stack11);

        goto label1;

     label2:
        return;
    }

    public boolean hasFatalErrors()
    {
        DefaultModelProblemCollector this;
        org.apache.maven.model.building.ModelProblem$Severity $stack1;
        java.util.Set $stack2;
        boolean $stack3;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0;

        this := @this: DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.Set severities>;

        $stack1 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack3 = interfaceinvoke $stack2.<java.util.Set: boolean contains(java.lang.Object)>($stack1);

        return $stack3;
    }

    public boolean hasErrors()
    {
        DefaultModelProblemCollector this;
        org.apache.maven.model.building.ModelProblem$Severity $stack1, $stack4;
        java.util.Set $stack2, $stack5;
        boolean $stack3, $stack6, $stack7;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0, $r1;

        this := @this: DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.Set severities>;

        $stack1 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack3 = interfaceinvoke $stack2.<java.util.Set: boolean contains(java.lang.Object)>($stack1);

        if $stack3 != 0 goto label1;

        $r1 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack5 = $r1.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.Set severities>;

        $stack4 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack6 = interfaceinvoke $stack5.<java.util.Set: boolean contains(java.lang.Object)>($stack4);

        if $stack6 == 0 goto label2;

     label1:
        $stack7 = 1;

        goto label3;

     label2:
        $stack7 = 0;

     label3:
        return $stack7;
    }

    public java.util.List getProblems()
    {
        DefaultModelProblemCollector this;
        java.util.List $stack1;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0;

        this := @this: DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.List problems>;

        return $stack1;
    }

    public void setSource(java.lang.String)
    {
        DefaultModelProblemCollector this;
        java.lang.String source;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0, $r1;

        this := @this: DefaultModelProblemCollector;

        source := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: java.lang.String source> = source;

        $r1 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r1.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model sourceModel> = null;

        return;
    }

    public void setSource(org.apache.maven.model.Model)
    {
        DefaultModelProblemCollector this;
        org.apache.maven.model.Model source, $stack2;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0, $r1, $r2, $r3;

        this := @this: DefaultModelProblemCollector;

        source := @parameter0: org.apache.maven.model.Model;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model sourceModel> = source;

        $r1 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r1.<org.apache.maven.model.building.DefaultModelProblemCollector: java.lang.String source> = null;

        $r2 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack2 = $r2.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model rootModel>;

        if $stack2 != null goto label1;

        $r3 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r3.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model rootModel> = source;

     label1:
        return;
    }

    private java.lang.String getSource()
    {
        DefaultModelProblemCollector this;
        java.lang.String $stack1, $stack6, $stack2;
        org.apache.maven.model.Model $stack3, $stack5;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: java.lang.String source>;

        if $stack1 != null goto label1;

        $r1 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack3 = $r1.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model sourceModel>;

        if $stack3 == null goto label1;

        $r2 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack5 = $r2.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model sourceModel>;

        $stack6 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toPath(org.apache.maven.model.Model)>($stack5);

        $r3 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r3.<org.apache.maven.model.building.DefaultModelProblemCollector: java.lang.String source> = $stack6;

     label1:
        $r4 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack2 = $r4.<org.apache.maven.model.building.DefaultModelProblemCollector: java.lang.String source>;

        return $stack2;
    }

    private java.lang.String getModelId()
    {
        DefaultModelProblemCollector this;
        org.apache.maven.model.Model $stack1;
        java.lang.String $stack2;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0;

        this := @this: DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model sourceModel>;

        $stack2 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(org.apache.maven.model.Model)>($stack1);

        return $stack2;
    }

    public void setRootModel(org.apache.maven.model.Model)
    {
        DefaultModelProblemCollector this;
        org.apache.maven.model.Model rootModel;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0;

        this := @this: DefaultModelProblemCollector;

        rootModel := @parameter0: org.apache.maven.model.Model;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model rootModel> = rootModel;

        return;
    }

    public org.apache.maven.model.Model getRootModel()
    {
        DefaultModelProblemCollector this;
        org.apache.maven.model.Model $stack1;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0;

        this := @this: DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model rootModel>;

        return $stack1;
    }

    public java.lang.String getRootModelId()
    {
        DefaultModelProblemCollector this;
        org.apache.maven.model.Model $stack1;
        java.lang.String $stack2;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0;

        this := @this: DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack1 = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model rootModel>;

        $stack2 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(org.apache.maven.model.Model)>($stack1);

        return $stack2;
    }

    public void add(org.apache.maven.model.building.ModelProblem)
    {
        DefaultModelProblemCollector this;
        org.apache.maven.model.building.ModelProblem problem;
        java.util.List $stack2;
        java.util.Set $stack4;
        org.apache.maven.model.building.ModelProblem$Severity $stack5;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0, $r1;

        this := @this: DefaultModelProblemCollector;

        problem := @parameter0: org.apache.maven.model.building.ModelProblem;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.List problems>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(problem);

        $r1 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack4 = $r1.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.Set severities>;

        $stack5 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: org.apache.maven.model.building.ModelProblem$Severity getSeverity()>();

        interfaceinvoke $stack4.<java.util.Set: boolean add(java.lang.Object)>($stack5);

        return;
    }

    public void addAll(java.util.List)
    {
        DefaultModelProblemCollector this;
        java.util.List problems, $stack4;
        java.util.Iterator l2;
        boolean $stack7;
        java.lang.Object $stack8;
        org.apache.maven.model.building.ModelProblem problem;
        java.util.Set $stack9;
        org.apache.maven.model.building.ModelProblem$Severity $stack10;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0, $r1;

        this := @this: DefaultModelProblemCollector;

        problems := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack4 = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.List problems>;

        interfaceinvoke $stack4.<java.util.List: boolean addAll(java.util.Collection)>(problems);

        l2 = interfaceinvoke problems.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label2;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        problem = (org.apache.maven.model.building.ModelProblem) $stack8;

        $r1 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack9 = $r1.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.Set severities>;

        $stack10 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: org.apache.maven.model.building.ModelProblem$Severity getSeverity()>();

        interfaceinvoke $stack9.<java.util.Set: boolean add(java.lang.Object)>($stack10);

        goto label1;

     label2:
        return;
    }

    public void add(org.apache.maven.model.building.ModelProblemCollectorRequest)
    {
        org.apache.maven.model.building.ModelProblemCollectorRequest req;
        org.apache.maven.model.InputLocation $stack7, $stack31, $stack33, $stack35, $stack38, $stack41;
        DefaultModelProblemCollector this;
        java.lang.Exception $stack23, $stack25, $stack12;
        boolean $stack24;
        org.apache.maven.model.InputSource $stack36, $stack39, $stack42;
        int line, column;
        java.lang.String source, modelId, $stack9;
        org.apache.maven.model.io.ModelParseException e;
        org.apache.maven.model.building.ModelProblem$Severity $stack10;
        org.apache.maven.model.building.ModelProblem$Version $stack11;
        org.apache.maven.model.building.DefaultModelProblem $u0;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0, $r1, $r2;
        org.apache.maven.model.building.ModelProblem $r3;

        this := @this: DefaultModelProblemCollector;

        req := @parameter0: org.apache.maven.model.building.ModelProblemCollectorRequest;

        line = -1;

        column = -1;

        source = null;

        modelId = null;

        $stack7 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.InputLocation getLocation()>();

        if $stack7 == null goto label1;

        $stack31 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.InputLocation getLocation()>();

        line = virtualinvoke $stack31.<org.apache.maven.model.InputLocation: int getLineNumber()>();

        $stack33 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.InputLocation getLocation()>();

        column = virtualinvoke $stack33.<org.apache.maven.model.InputLocation: int getColumnNumber()>();

        $stack35 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.InputLocation getLocation()>();

        $stack36 = virtualinvoke $stack35.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputSource getSource()>();

        if $stack36 == null goto label1;

        $stack38 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.InputLocation getLocation()>();

        $stack39 = virtualinvoke $stack38.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputSource getSource()>();

        modelId = virtualinvoke $stack39.<org.apache.maven.model.InputSource: java.lang.String getModelId()>();

        $stack41 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.InputLocation getLocation()>();

        $stack42 = virtualinvoke $stack41.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputSource getSource()>();

        source = virtualinvoke $stack42.<org.apache.maven.model.InputSource: java.lang.String getLocation()>();

     label1:
        if modelId != null goto label2;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        modelId = specialinvoke $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: java.lang.String getModelId()>();

        $r1 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        source = specialinvoke $r1.<org.apache.maven.model.building.DefaultModelProblemCollector: java.lang.String getSource()>();

     label2:
        if line > 0 goto label3;

        if column > 0 goto label3;

        $stack23 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: java.lang.Exception getException()>();

        $stack24 = $stack23 instanceof org.apache.maven.model.io.ModelParseException;

        if $stack24 == 0 goto label3;

        $stack25 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: java.lang.Exception getException()>();

        e = (org.apache.maven.model.io.ModelParseException) $stack25;

        line = virtualinvoke e.<org.apache.maven.model.io.ModelParseException: int getLineNumber()>();

        column = virtualinvoke e.<org.apache.maven.model.io.ModelParseException: int getColumnNumber()>();

     label3:
        $u0 = new org.apache.maven.model.building.DefaultModelProblem;

        $stack9 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: java.lang.String getMessage()>();

        $stack10 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblem$Severity getSeverity()>();

        $stack11 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblem$Version getVersion()>();

        $stack12 = virtualinvoke req.<org.apache.maven.model.building.ModelProblemCollectorRequest: java.lang.Exception getException()>();

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelProblem: void <init>(java.lang.String,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,int,int,java.lang.String,java.lang.Exception)>($stack9, $stack10, $stack11, source, line, column, modelId, $stack12);

        $r2 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $r3 = (org.apache.maven.model.building.ModelProblem) $u0;

        virtualinvoke $r2.<org.apache.maven.model.building.DefaultModelProblemCollector: void add(org.apache.maven.model.building.ModelProblem)>($r3);

        return;
    }

    public org.apache.maven.model.building.ModelBuildingException newModelBuildingException()
    {
        DefaultModelProblemCollector this;
        java.util.List $stack4, $stack10, $stack12;
        boolean $stack5;
        org.apache.maven.model.Model $stack8, $stack16;
        java.lang.String id;
        java.lang.Object result;
        org.apache.maven.model.building.DefaultModelBuildingResult $u0;
        org.apache.maven.model.building.ModelBuildingException $u1;
        org.apache.maven.model.building.DefaultModelProblemCollector $r0, $r3, $r5, $r6;
        org.apache.maven.model.building.ModelBuildingResult $r1, $r2, $r4, $r7;

        this := @this: DefaultModelProblemCollector;

        $r0 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        result = $r0.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.building.ModelBuildingResult result>;

        $r1 = (org.apache.maven.model.building.ModelBuildingResult) result;

        $stack4 = interfaceinvoke $r1.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getModelIds()>();

        $stack5 = interfaceinvoke $stack4.<java.util.List: boolean isEmpty()>();

        if $stack5 == 0 goto label1;

        $u0 = new org.apache.maven.model.building.DefaultModelBuildingResult;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: void <init>()>();

        $r2 = (org.apache.maven.model.building.ModelBuildingResult) result;

        $stack8 = interfaceinvoke $r2.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getEffectiveModel()>();

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setEffectiveModel(org.apache.maven.model.Model)>($stack8);

        $r3 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack10 = virtualinvoke $r3.<org.apache.maven.model.building.DefaultModelProblemCollector: java.util.List getProblems()>();

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setProblems(java.util.List)>($stack10);

        $r4 = (org.apache.maven.model.building.ModelBuildingResult) result;

        $stack12 = interfaceinvoke $r4.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getActiveExternalProfiles()>();

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setActiveExternalProfiles(java.util.List)>($stack12);

        $r5 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        id = virtualinvoke $r5.<org.apache.maven.model.building.DefaultModelProblemCollector: java.lang.String getRootModelId()>();

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult addModelId(java.lang.String)>(id);

        $r6 = (org.apache.maven.model.building.DefaultModelProblemCollector) this;

        $stack16 = virtualinvoke $r6.<org.apache.maven.model.building.DefaultModelProblemCollector: org.apache.maven.model.Model getRootModel()>();

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setRawModel(java.lang.String,org.apache.maven.model.Model)>(id, $stack16);

        result = $u0;

     label1:
        $u1 = new org.apache.maven.model.building.ModelBuildingException;

        $r7 = (org.apache.maven.model.building.ModelBuildingResult) result;

        specialinvoke $u1.<org.apache.maven.model.building.ModelBuildingException: void <init>(org.apache.maven.model.building.ModelBuildingResult)>($r7);

        return $u1;
    }
}
