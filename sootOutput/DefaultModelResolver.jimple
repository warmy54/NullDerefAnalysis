class DefaultModelResolver extends java.lang.Object implements org.apache.maven.model.resolution.ModelResolver
{
    private final org.eclipse.aether.RepositorySystemSession session;
    private final org.eclipse.aether.RequestTrace trace;
    private final java.lang.String context;
    private java.util.List repositories;
    private final java.util.List externalRepositories;
    private final org.eclipse.aether.impl.ArtifactResolver resolver;
    private final org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver;
    private final org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager;
    private final java.util.Set repositoryIds;

    void <init>(org.eclipse.aether.RepositorySystemSession, org.eclipse.aether.RequestTrace, java.lang.String, org.eclipse.aether.impl.ArtifactResolver, org.eclipse.aether.impl.VersionRangeResolver, org.eclipse.aether.impl.RemoteRepositoryManager, java.util.List)
    {
        DefaultModelResolver this;
        org.eclipse.aether.RepositorySystemSession session;
        org.eclipse.aether.RequestTrace trace;
        java.lang.String context;
        org.eclipse.aether.impl.ArtifactResolver resolver;
        org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver;
        org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager;
        java.util.List repositories, $stack9;
        java.util.ArrayList $u0;
        java.util.HashSet $u1;
        org.apache.maven.repository.internal.DefaultModelResolver $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: DefaultModelResolver;

        session := @parameter0: org.eclipse.aether.RepositorySystemSession;

        trace := @parameter1: org.eclipse.aether.RequestTrace;

        context := @parameter2: java.lang.String;

        resolver := @parameter3: org.eclipse.aether.impl.ArtifactResolver;

        versionRangeResolver := @parameter4: org.eclipse.aether.impl.VersionRangeResolver;

        remoteRepositoryManager := @parameter5: org.eclipse.aether.impl.RemoteRepositoryManager;

        repositories := @parameter6: java.util.List;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r0.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RepositorySystemSession session> = session;

        $r1 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r1.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RequestTrace trace> = trace;

        $r2 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r2.<org.apache.maven.repository.internal.DefaultModelResolver: java.lang.String context> = context;

        $r3 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r3.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.ArtifactResolver resolver> = resolver;

        $r4 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r4.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver> = versionRangeResolver;

        $r5 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r5.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager> = remoteRepositoryManager;

        $r6 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r6.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List repositories> = repositories;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(repositories);

        $stack9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($u0);

        $r7 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r7.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List externalRepositories> = $stack9;

        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

        $r8 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r8.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.Set repositoryIds> = $u1;

        return;
    }

    private void <init>(org.apache.maven.repository.internal.DefaultModelResolver)
    {
        DefaultModelResolver this;
        org.apache.maven.repository.internal.DefaultModelResolver original, $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        org.eclipse.aether.RepositorySystemSession $stack2;
        org.eclipse.aether.RequestTrace $stack3;
        java.lang.String $stack4;
        org.eclipse.aether.impl.ArtifactResolver $stack5;
        org.eclipse.aether.impl.VersionRangeResolver $stack6;
        org.eclipse.aether.impl.RemoteRepositoryManager $stack7;
        java.util.List $stack9, $stack10;
        java.util.Set $stack12;
        java.util.ArrayList $u0;
        java.util.HashSet $u1;

        this := @this: DefaultModelResolver;

        original := @parameter0: org.apache.maven.repository.internal.DefaultModelResolver;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = original.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RepositorySystemSession session>;

        $r0 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r0.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RepositorySystemSession session> = $stack2;

        $stack3 = original.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RequestTrace trace>;

        $r1 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r1.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RequestTrace trace> = $stack3;

        $stack4 = original.<org.apache.maven.repository.internal.DefaultModelResolver: java.lang.String context>;

        $r2 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r2.<org.apache.maven.repository.internal.DefaultModelResolver: java.lang.String context> = $stack4;

        $stack5 = original.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.ArtifactResolver resolver>;

        $r3 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r3.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.ArtifactResolver resolver> = $stack5;

        $stack6 = original.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver>;

        $r4 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r4.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver> = $stack6;

        $stack7 = original.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager>;

        $r5 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r5.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager> = $stack7;

        $u0 = new java.util.ArrayList;

        $stack9 = original.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List repositories>;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>($stack9);

        $r6 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r6.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List repositories> = $u0;

        $stack10 = original.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List externalRepositories>;

        $r7 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r7.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List externalRepositories> = $stack10;

        $u1 = new java.util.HashSet;

        $stack12 = original.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.Set repositoryIds>;

        specialinvoke $u1.<java.util.HashSet: void <init>(java.util.Collection)>($stack12);

        $r8 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r8.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.Set repositoryIds> = $u1;

        return;
    }

    public void addRepository(org.apache.maven.model.Repository) throws org.apache.maven.model.resolution.InvalidRepositoryException
    {
        DefaultModelResolver this;
        org.apache.maven.model.Repository repository;
        org.apache.maven.repository.internal.DefaultModelResolver $r0;

        this := @this: DefaultModelResolver;

        repository := @parameter0: org.apache.maven.model.Repository;

        $r0 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        virtualinvoke $r0.<org.apache.maven.repository.internal.DefaultModelResolver: void addRepository(org.apache.maven.model.Repository,boolean)>(repository, 0);

        return;
    }

    public void addRepository(org.apache.maven.model.Repository, boolean) throws org.apache.maven.model.resolution.InvalidRepositoryException
    {
        DefaultModelResolver this;
        org.eclipse.aether.RepositorySystemSession $stack4, $stack12;
        boolean $stack5, $stack8, replace;
        org.apache.maven.model.Repository repository;
        java.util.Set $stack6;
        java.lang.String $stack7, $stack16;
        org.eclipse.aether.repository.RemoteRepository $stack9;
        java.util.List newRepositories, $stack11, $stack14, $stack15;
        org.eclipse.aether.impl.RemoteRepositoryManager $stack13;
        org.apache.maven.repository.internal.DefaultModelResolver $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: DefaultModelResolver;

        repository := @parameter0: org.apache.maven.model.Repository;

        replace := @parameter1: boolean;

        $r0 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack4 = $r0.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RepositorySystemSession session>;

        $stack5 = interfaceinvoke $stack4.<org.eclipse.aether.RepositorySystemSession: boolean isIgnoreArtifactDescriptorRepositories()>();

        if $stack5 == 0 goto label1;

        return;

     label1:
        $r1 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack6 = $r1.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.Set repositoryIds>;

        $stack7 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $stack8 = interfaceinvoke $stack6.<java.util.Set: boolean add(java.lang.Object)>($stack7);

        if $stack8 != 0 goto label3;

        if replace != 0 goto label2;

        return;

     label2:
        $r2 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack15 = $r2.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List repositories>;

        $stack16 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        staticinvoke <org.apache.maven.repository.internal.DefaultModelResolver: void removeMatchingRepository(java.lang.Iterable,java.lang.String)>($stack15, $stack16);

     label3:
        $stack9 = staticinvoke <org.apache.maven.repository.internal.ArtifactDescriptorUtils: org.eclipse.aether.repository.RemoteRepository toRemoteRepository(org.apache.maven.model.Repository)>(repository);

        newRepositories = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($stack9);

        $r3 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack13 = $r3.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.RemoteRepositoryManager remoteRepositoryManager>;

        $r4 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack12 = $r4.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RepositorySystemSession session>;

        $r5 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack11 = $r5.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List repositories>;

        $stack14 = interfaceinvoke $stack13.<org.eclipse.aether.impl.RemoteRepositoryManager: java.util.List aggregateRepositories(org.eclipse.aether.RepositorySystemSession,java.util.List,java.util.List,boolean)>($stack12, $stack11, newRepositories, 1);

        $r6 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $r6.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List repositories> = $stack14;

        return;
    }

    private static void removeMatchingRepository(java.lang.Iterable, java.lang.String)
    {
        java.lang.Iterable repositories;
        java.util.Iterator iterator;
        boolean $stack5, $stack8;
        java.lang.Object $stack6;
        org.eclipse.aether.repository.RemoteRepository remoteRepository;
        java.lang.String $stack7, id;

        repositories := @parameter0: java.lang.Iterable;

        id := @parameter1: java.lang.String;

        iterator = interfaceinvoke repositories.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke iterator.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label3;

        $stack6 = interfaceinvoke iterator.<java.util.Iterator: java.lang.Object next()>();

        remoteRepository = (org.eclipse.aether.repository.RemoteRepository) $stack6;

        $stack7 = virtualinvoke remoteRepository.<org.eclipse.aether.repository.RemoteRepository: java.lang.String getId()>();

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(id);

        if $stack8 == 0 goto label2;

        interfaceinvoke iterator.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    public org.apache.maven.model.resolution.ModelResolver newCopy()
    {
        DefaultModelResolver this;
        org.apache.maven.repository.internal.DefaultModelResolver $u0, $r0;
        org.apache.maven.model.resolution.ModelResolver $r1;

        this := @this: DefaultModelResolver;

        $u0 = new org.apache.maven.repository.internal.DefaultModelResolver;

        $r0 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        specialinvoke $u0.<org.apache.maven.repository.internal.DefaultModelResolver: void <init>(org.apache.maven.repository.internal.DefaultModelResolver)>($r0);

        $r1 = (org.apache.maven.model.resolution.ModelResolver) $u0;

        return $r1;
    }

    public org.apache.maven.model.building.ModelSource resolveModel(java.lang.String, java.lang.String, java.lang.String) throws org.apache.maven.model.resolution.UnresolvableModelException
    {
        java.lang.String groupId, artifactId, version, $stack8, $stack20;
        DefaultModelResolver this;
        java.util.List $stack9;
        org.eclipse.aether.RequestTrace $stack10;
        org.eclipse.aether.RepositorySystemSession $stack12;
        org.eclipse.aether.impl.ArtifactResolver $stack13;
        org.eclipse.aether.resolution.ArtifactResult $stack14;
        java.io.File $stack17;
        java.lang.Throwable $stack18, $r7;
        org.eclipse.aether.artifact.Artifact pomArtifact#3, $r2;
        org.eclipse.aether.artifact.DefaultArtifact $u0;
        org.eclipse.aether.resolution.ArtifactRequest $u1;
        org.apache.maven.model.resolution.UnresolvableModelException $u2;
        org.apache.maven.model.building.ArtifactModelSource $u3;
        org.apache.maven.repository.internal.DefaultModelResolver $r0, $r1, $r3, $r4, $r5;
        org.eclipse.aether.resolution.ArtifactResolutionException $r6;
        org.apache.maven.model.building.ModelSource $r8;

        this := @this: DefaultModelResolver;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        version := @parameter2: java.lang.String;

        $u0 = new org.eclipse.aether.artifact.DefaultArtifact;

        specialinvoke $u0.<org.eclipse.aether.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(groupId, artifactId, "", "pom", version);

     label1:
        $u1 = new org.eclipse.aether.resolution.ArtifactRequest;

        $r0 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack9 = $r0.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List repositories>;

        $r1 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack8 = $r1.<org.apache.maven.repository.internal.DefaultModelResolver: java.lang.String context>;

        $r2 = (org.eclipse.aether.artifact.Artifact) $u0;

        specialinvoke $u1.<org.eclipse.aether.resolution.ArtifactRequest: void <init>(org.eclipse.aether.artifact.Artifact,java.util.List,java.lang.String)>($r2, $stack9, $stack8);

        $r3 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack10 = $r3.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RequestTrace trace>;

        virtualinvoke $u1.<org.eclipse.aether.resolution.ArtifactRequest: org.eclipse.aether.resolution.ArtifactRequest setTrace(org.eclipse.aether.RequestTrace)>($stack10);

        $r4 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack13 = $r4.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.ArtifactResolver resolver>;

        $r5 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack12 = $r5.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RepositorySystemSession session>;

        $stack14 = interfaceinvoke $stack13.<org.eclipse.aether.impl.ArtifactResolver: org.eclipse.aether.resolution.ArtifactResult resolveArtifact(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.ArtifactRequest)>($stack12, $u1);

        pomArtifact#3 = virtualinvoke $stack14.<org.eclipse.aether.resolution.ArtifactResult: org.eclipse.aether.artifact.Artifact getArtifact()>();

     label2:
        goto label4;

     label3:
        $stack18 := @caughtexception;

        $u2 = new org.apache.maven.model.resolution.UnresolvableModelException;

        $r6 = (org.eclipse.aether.resolution.ArtifactResolutionException) $stack18;

        $stack20 = virtualinvoke $r6.<org.eclipse.aether.resolution.ArtifactResolutionException: java.lang.String getMessage()>();

        specialinvoke $u2.<org.apache.maven.model.resolution.UnresolvableModelException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($stack20, groupId, artifactId, version, $stack18);

        $r7 = (java.lang.Throwable) $u2;

        throw $r7;

     label4:
        $u3 = new org.apache.maven.model.building.ArtifactModelSource;

        $stack17 = interfaceinvoke pomArtifact#3.<org.eclipse.aether.artifact.Artifact: java.io.File getFile()>();

        specialinvoke $u3.<org.apache.maven.model.building.ArtifactModelSource: void <init>(java.io.File,java.lang.String,java.lang.String,java.lang.String)>($stack17, groupId, artifactId, version);

        $r8 = (org.apache.maven.model.building.ModelSource) $u3;

        return $r8;

        catch org.eclipse.aether.resolution.ArtifactResolutionException from label1 to label2 with label3;
    }

    public org.apache.maven.model.building.ModelSource resolveModel(org.apache.maven.model.Parent) throws org.apache.maven.model.resolution.UnresolvableModelException
    {
        org.apache.maven.model.Parent parent;
        java.lang.String $stack6, $stack7, $stack10, $stack12, $stack42, $stack43, $stack44, $stack45, $stack46, $stack51, $stack52, $stack53, $stack54, $stack55, $stack58, $stack59, $stack60, $stack61, $stack22, $stack23, $stack24, $stack25;
        DefaultModelResolver this;
        java.util.List $stack13;
        org.eclipse.aether.RequestTrace $stack14;
        org.eclipse.aether.RepositorySystemSession $stack16;
        org.eclipse.aether.impl.VersionRangeResolver $stack17;
        org.eclipse.aether.resolution.VersionRangeResult versionRangeResult;
        org.eclipse.aether.version.Version $stack19, $stack21;
        org.eclipse.aether.version.VersionConstraint $stack20, $stack27, $stack35;
        org.eclipse.aether.version.VersionRange $stack28, $stack36;
        org.eclipse.aether.version.VersionRange$Bound $stack37;
        java.lang.Object[] $stack39, $stack48;
        java.lang.Throwable $stack56, $r6, $r7, $r10;
        org.apache.maven.model.building.ModelSource $stack26;
        org.eclipse.aether.artifact.DefaultArtifact $u0;
        org.eclipse.aether.resolution.VersionRangeRequest $u1;
        org.apache.maven.model.resolution.UnresolvableModelException $u2, $u3, $u4;
        org.apache.maven.repository.internal.DefaultModelResolver $r0, $r1, $r3, $r4, $r5, $r8;
        org.eclipse.aether.artifact.Artifact $r2;
        org.eclipse.aether.resolution.VersionRangeResolutionException $r9;

        this := @this: DefaultModelResolver;

        parent := @parameter0: org.apache.maven.model.Parent;

     label1:
        $u0 = new org.eclipse.aether.artifact.DefaultArtifact;

        $stack6 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack7 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack10 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        specialinvoke $u0.<org.eclipse.aether.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack6, $stack7, "", "pom", $stack10);

        $u1 = new org.eclipse.aether.resolution.VersionRangeRequest;

        $r0 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack13 = $r0.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List repositories>;

        $r1 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack12 = $r1.<org.apache.maven.repository.internal.DefaultModelResolver: java.lang.String context>;

        $r2 = (org.eclipse.aether.artifact.Artifact) $u0;

        specialinvoke $u1.<org.eclipse.aether.resolution.VersionRangeRequest: void <init>(org.eclipse.aether.artifact.Artifact,java.util.List,java.lang.String)>($r2, $stack13, $stack12);

        $r3 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack14 = $r3.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RequestTrace trace>;

        virtualinvoke $u1.<org.eclipse.aether.resolution.VersionRangeRequest: org.eclipse.aether.resolution.VersionRangeRequest setTrace(org.eclipse.aether.RequestTrace)>($stack14);

        $r4 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack17 = $r4.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver>;

        $r5 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack16 = $r5.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RepositorySystemSession session>;

        versionRangeResult = interfaceinvoke $stack17.<org.eclipse.aether.impl.VersionRangeResolver: org.eclipse.aether.resolution.VersionRangeResult resolveVersionRange(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.VersionRangeRequest)>($stack16, $u1);

        $stack19 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.Version getHighestVersion()>();

        if $stack19 != null goto label2;

        $u2 = new org.apache.maven.model.resolution.UnresolvableModelException;

        $stack48 = newarray (java.lang.Object)[1];

        $stack51 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $stack48[0] = $stack51;

        $stack52 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No versions matched the requested parent version range \'%s\'", $stack48);

        $stack53 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack54 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack55 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        specialinvoke $u2.<org.apache.maven.model.resolution.UnresolvableModelException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack52, $stack53, $stack54, $stack55);

        $r6 = (java.lang.Throwable) $u2;

        throw $r6;

     label2:
        $stack20 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.VersionConstraint getVersionConstraint()>();

        if $stack20 == null goto label3;

        $stack27 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.VersionConstraint getVersionConstraint()>();

        $stack28 = interfaceinvoke $stack27.<org.eclipse.aether.version.VersionConstraint: org.eclipse.aether.version.VersionRange getRange()>();

        if $stack28 == null goto label3;

        $stack35 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.VersionConstraint getVersionConstraint()>();

        $stack36 = interfaceinvoke $stack35.<org.eclipse.aether.version.VersionConstraint: org.eclipse.aether.version.VersionRange getRange()>();

        $stack37 = interfaceinvoke $stack36.<org.eclipse.aether.version.VersionRange: org.eclipse.aether.version.VersionRange$Bound getUpperBound()>();

        if $stack37 != null goto label3;

        $u3 = new org.apache.maven.model.resolution.UnresolvableModelException;

        $stack39 = newarray (java.lang.Object)[1];

        $stack42 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $stack39[0] = $stack42;

        $stack43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The requested parent version range \'%s\' does not specify an upper bound", $stack39);

        $stack44 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack45 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack46 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        specialinvoke $u3.<org.apache.maven.model.resolution.UnresolvableModelException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack43, $stack44, $stack45, $stack46);

        $r7 = (java.lang.Throwable) $u3;

        throw $r7;

     label3:
        $stack21 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.Version getHighestVersion()>();

        $stack22 = interfaceinvoke $stack21.<org.eclipse.aether.version.Version: java.lang.String toString()>();

        virtualinvoke parent.<org.apache.maven.model.Parent: void setVersion(java.lang.String)>($stack22);

        $stack23 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack24 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack25 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $r8 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack26 = virtualinvoke $r8.<org.apache.maven.repository.internal.DefaultModelResolver: org.apache.maven.model.building.ModelSource resolveModel(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25);

     label4:
        return $stack26;

     label5:
        $stack56 := @caughtexception;

        $u4 = new org.apache.maven.model.resolution.UnresolvableModelException;

        $r9 = (org.eclipse.aether.resolution.VersionRangeResolutionException) $stack56;

        $stack58 = virtualinvoke $r9.<org.eclipse.aether.resolution.VersionRangeResolutionException: java.lang.String getMessage()>();

        $stack59 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack60 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack61 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        specialinvoke $u4.<org.apache.maven.model.resolution.UnresolvableModelException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($stack58, $stack59, $stack60, $stack61, $stack56);

        $r10 = (java.lang.Throwable) $u4;

        throw $r10;

        catch org.eclipse.aether.resolution.VersionRangeResolutionException from label1 to label4 with label5;
    }

    public org.apache.maven.model.building.ModelSource resolveModel(org.apache.maven.model.Dependency) throws org.apache.maven.model.resolution.UnresolvableModelException
    {
        org.apache.maven.model.Dependency dependency;
        java.lang.String $stack6, $stack7, $stack10, $stack12, $stack42, $stack43, $stack44, $stack45, $stack46, $stack51, $stack52, $stack53, $stack54, $stack55, $stack58, $stack59, $stack60, $stack61, $stack22, $stack23, $stack24, $stack25;
        DefaultModelResolver this;
        java.util.List $stack13;
        org.eclipse.aether.RequestTrace $stack14;
        org.eclipse.aether.RepositorySystemSession $stack16;
        org.eclipse.aether.impl.VersionRangeResolver $stack17;
        org.eclipse.aether.resolution.VersionRangeResult versionRangeResult;
        org.eclipse.aether.version.Version $stack19, $stack21;
        org.eclipse.aether.version.VersionConstraint $stack20, $stack27, $stack35;
        org.eclipse.aether.version.VersionRange $stack28, $stack36;
        org.eclipse.aether.version.VersionRange$Bound $stack37;
        java.lang.Object[] $stack39, $stack48;
        java.lang.Throwable $stack56, $r6, $r7, $r10;
        org.apache.maven.model.building.ModelSource $stack26;
        org.eclipse.aether.artifact.DefaultArtifact $u0;
        org.eclipse.aether.resolution.VersionRangeRequest $u1;
        org.apache.maven.model.resolution.UnresolvableModelException $u2, $u3, $u4;
        org.apache.maven.repository.internal.DefaultModelResolver $r0, $r1, $r3, $r4, $r5, $r8;
        org.eclipse.aether.artifact.Artifact $r2;
        org.eclipse.aether.resolution.VersionRangeResolutionException $r9;

        this := @this: DefaultModelResolver;

        dependency := @parameter0: org.apache.maven.model.Dependency;

     label1:
        $u0 = new org.eclipse.aether.artifact.DefaultArtifact;

        $stack6 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack7 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack10 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        specialinvoke $u0.<org.eclipse.aether.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack6, $stack7, "", "pom", $stack10);

        $u1 = new org.eclipse.aether.resolution.VersionRangeRequest;

        $r0 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack13 = $r0.<org.apache.maven.repository.internal.DefaultModelResolver: java.util.List repositories>;

        $r1 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack12 = $r1.<org.apache.maven.repository.internal.DefaultModelResolver: java.lang.String context>;

        $r2 = (org.eclipse.aether.artifact.Artifact) $u0;

        specialinvoke $u1.<org.eclipse.aether.resolution.VersionRangeRequest: void <init>(org.eclipse.aether.artifact.Artifact,java.util.List,java.lang.String)>($r2, $stack13, $stack12);

        $r3 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack14 = $r3.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RequestTrace trace>;

        virtualinvoke $u1.<org.eclipse.aether.resolution.VersionRangeRequest: org.eclipse.aether.resolution.VersionRangeRequest setTrace(org.eclipse.aether.RequestTrace)>($stack14);

        $r4 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack17 = $r4.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.impl.VersionRangeResolver versionRangeResolver>;

        $r5 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack16 = $r5.<org.apache.maven.repository.internal.DefaultModelResolver: org.eclipse.aether.RepositorySystemSession session>;

        versionRangeResult = interfaceinvoke $stack17.<org.eclipse.aether.impl.VersionRangeResolver: org.eclipse.aether.resolution.VersionRangeResult resolveVersionRange(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.VersionRangeRequest)>($stack16, $u1);

        $stack19 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.Version getHighestVersion()>();

        if $stack19 != null goto label2;

        $u2 = new org.apache.maven.model.resolution.UnresolvableModelException;

        $stack48 = newarray (java.lang.Object)[1];

        $stack51 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack48[0] = $stack51;

        $stack52 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("No versions matched the requested dependency version range \'%s\'", $stack48);

        $stack53 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack54 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack55 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        specialinvoke $u2.<org.apache.maven.model.resolution.UnresolvableModelException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack52, $stack53, $stack54, $stack55);

        $r6 = (java.lang.Throwable) $u2;

        throw $r6;

     label2:
        $stack20 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.VersionConstraint getVersionConstraint()>();

        if $stack20 == null goto label3;

        $stack27 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.VersionConstraint getVersionConstraint()>();

        $stack28 = interfaceinvoke $stack27.<org.eclipse.aether.version.VersionConstraint: org.eclipse.aether.version.VersionRange getRange()>();

        if $stack28 == null goto label3;

        $stack35 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.VersionConstraint getVersionConstraint()>();

        $stack36 = interfaceinvoke $stack35.<org.eclipse.aether.version.VersionConstraint: org.eclipse.aether.version.VersionRange getRange()>();

        $stack37 = interfaceinvoke $stack36.<org.eclipse.aether.version.VersionRange: org.eclipse.aether.version.VersionRange$Bound getUpperBound()>();

        if $stack37 != null goto label3;

        $u3 = new org.apache.maven.model.resolution.UnresolvableModelException;

        $stack39 = newarray (java.lang.Object)[1];

        $stack42 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack39[0] = $stack42;

        $stack43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The requested dependency version range \'%s\' does not specify an upper bound", $stack39);

        $stack44 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack45 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack46 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        specialinvoke $u3.<org.apache.maven.model.resolution.UnresolvableModelException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack43, $stack44, $stack45, $stack46);

        $r7 = (java.lang.Throwable) $u3;

        throw $r7;

     label3:
        $stack21 = virtualinvoke versionRangeResult.<org.eclipse.aether.resolution.VersionRangeResult: org.eclipse.aether.version.Version getHighestVersion()>();

        $stack22 = interfaceinvoke $stack21.<org.eclipse.aether.version.Version: java.lang.String toString()>();

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void setVersion(java.lang.String)>($stack22);

        $stack23 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack24 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack25 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $r8 = (org.apache.maven.repository.internal.DefaultModelResolver) this;

        $stack26 = virtualinvoke $r8.<org.apache.maven.repository.internal.DefaultModelResolver: org.apache.maven.model.building.ModelSource resolveModel(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25);

     label4:
        return $stack26;

     label5:
        $stack56 := @caughtexception;

        $u4 = new org.apache.maven.model.resolution.UnresolvableModelException;

        $r9 = (org.eclipse.aether.resolution.VersionRangeResolutionException) $stack56;

        $stack58 = virtualinvoke $r9.<org.eclipse.aether.resolution.VersionRangeResolutionException: java.lang.String getMessage()>();

        $stack59 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack60 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack61 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        specialinvoke $u4.<org.apache.maven.model.resolution.UnresolvableModelException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>($stack58, $stack59, $stack60, $stack61, $stack56);

        $r10 = (java.lang.Throwable) $u4;

        throw $r10;

        catch org.eclipse.aether.resolution.VersionRangeResolutionException from label1 to label4 with label5;
    }
}
