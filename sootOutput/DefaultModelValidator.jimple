public class DefaultModelValidator extends java.lang.Object implements org.apache.maven.model.validation.ModelValidator
{
    private static final java.util.regex.Pattern EXPRESSION_NAME_PATTERN;
    private static final java.util.List CI_FRIENDLY_POSSIBLE_PROPERTY_NAMES;
    private static final java.lang.String ILLEGAL_FS_CHARS;
    private static final java.lang.String ILLEGAL_VERSION_CHARS;
    private static final java.lang.String ILLEGAL_REPO_ID_CHARS;
    private static final java.lang.String EMPTY;
    private final java.util.Set validCoordinateIds;
    private final java.util.Set validProfileIds;

    public void <init>()
    {
        DefaultModelValidator this;
        java.util.HashSet $u0, $u1;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r1;

        this := @this: DefaultModelValidator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.HashSet;

        specialinvoke $u0.<java.util.HashSet: void <init>()>();

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r0.<org.apache.maven.model.validation.DefaultModelValidator: java.util.Set validCoordinateIds> = $u0;

        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

        $r1 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r1.<org.apache.maven.model.validation.DefaultModelValidator: java.util.Set validProfileIds> = $u1;

        return;
    }

    public void validateFileModel(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        org.apache.maven.model.Model m;
        org.apache.maven.model.Parent parent;
        org.apache.maven.model.building.ModelBuildingRequest request;
        java.util.List $stack17, $stack48, $stack49, $stack51, $stack52, $stack74, $stack76, $stack77, $stack80, $stack82, $stack84, $stack121, $stack124, $stack126, $stack177, $stack55;
        DefaultModelValidator this;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity $stack21, $stack29, $stack34, $stack39, $stack44, $stack66, $stack142, $stack160, $stack183, $stack196, $stack201, $stack212, $stack228, i#21;
        org.apache.maven.model.building.ModelProblem$Version $stack22, $stack30, $stack35, $stack40, $stack45, $stack67, $stack100, $stack143, $stack161, $stack184, $stack197, $stack202, $stack211, $stack227;
        java.lang.String $stack23, $stack25, $stack31, $stack36, $stack41, $stack46, $stack61, prefix, $stack68, $stack70, $stack73, $stack104, $stack106, $stack144, $stack162, $stack188, $stack193, $stack198, $stack203, $stack205, $stack206, $stack216, $stack223, $stack224, $stack209, module;
        java.lang.String[] $stack26;
        org.apache.maven.model.DependencyManagement $stack50, $stack75, $stack83, $stack125;
        java.util.Iterator l9;
        java.lang.Object $stack58, $stack178;
        org.apache.maven.model.Profile profile;
        java.lang.StringBuilder $stack60, $stack62, $stack63, $stack103, $stack105, $stack185, $stack186, $stack187, $stack191, $stack192, $u1, $u2, $u4, $u5;
        boolean $stack71, $stack179, $stack207, $stack217, $stack225, $stack210, $stack57;
        org.apache.maven.model.Activation $stack72;
        org.apache.maven.model.BuildBase buildBase;
        org.apache.maven.model.PluginManagement mgmt, module#23;
        org.apache.maven.model.InputLocation $stack194;
        int $stack15, i, n;
        org.apache.maven.model.Build n#22;
        java.util.HashSet $u0, $u3;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r2, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r33, $r34, $r35, $r36, $r37, $r38, $r39;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r4, $r5, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r31, $r32;

        this := @this: DefaultModelValidator;

        m := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        parent = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if parent == null goto label03;

        $stack196 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack197 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack198 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) parent;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("parent.groupId", problems, $stack196, $stack197, $stack198, $r1);

        $stack201 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack202 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack203 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $r2 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) parent;

        specialinvoke $r2.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("parent.artifactId", problems, $stack201, $stack202, $stack203, $r3);

        $stack205 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack206 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $stack207 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: boolean equals(java.lang.String,java.lang.String)>($stack205, $stack206);

        if $stack207 == 0 goto label01;

        $stack223 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack224 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $stack225 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: boolean equals(java.lang.String,java.lang.String)>($stack223, $stack224);

        if $stack225 == 0 goto label01;

        $stack228 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack227 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $r4 = (org.apache.maven.model.InputLocationTracker) parent;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack228, $stack227, "parent.artifactId", null, "must be changed, the parent element cannot have the same groupId:artifactId as the project.", $r4);

     label01:
        $stack209 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $stack210 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: boolean equals(java.lang.String,java.lang.String)>("LATEST", $stack209);

        if $stack210 != 0 goto label02;

        $stack216 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $stack217 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: boolean equals(java.lang.String,java.lang.String)>("RELEASE", $stack216);

        if $stack217 == 0 goto label03;

     label02:
        $stack212 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack211 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $r5 = (org.apache.maven.model.InputLocationTracker) parent;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack212, $stack211, "parent.version", null, "is either LATEST or RELEASE (both of them are being deprecated)", $r5);

     label03:
        $stack15 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack15 < 20 goto label15;

        $u0 = new java.util.HashSet;

        specialinvoke $u0.<java.util.HashSet: void <init>()>();

        i = 0;

        $stack17 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getModules()>();

        n = interfaceinvoke $stack17.<java.util.List: int size()>();

     label04:
        if i >= n goto label06;

        $stack177 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getModules()>();

        $stack178 = interfaceinvoke $stack177.<java.util.List: java.lang.Object get(int)>(i);

        module = (java.lang.String) $stack178;

        $stack179 = interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>(module);

        if $stack179 != 0 goto label05;

        $stack183 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack184 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack185 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("modules.module[");

        $stack186 = virtualinvoke $stack185.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        $stack187 = virtualinvoke $stack186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack188 = virtualinvoke $stack187.<java.lang.StringBuilder: java.lang.String toString()>();

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack191 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("specifies duplicate child module ");

        $stack192 = virtualinvoke $stack191.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(module);

        $stack193 = virtualinvoke $stack192.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack194 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("modules");

        $r6 = (org.apache.maven.model.InputLocationTracker) $stack194;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack183, $stack184, $stack188, null, $stack193, $r6);

     label05:
        i = i + 1;

        goto label04;

     label06:
        i#21 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 30);

        $stack21 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack22 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack23 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        $r7 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r8 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r7.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("modelVersion", problems, $stack21, $stack22, $stack23, $r8);

        $stack25 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        $stack26 = newarray (java.lang.String)[1];

        $stack26[0] = "4.0.0";

        $r9 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r10 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r9.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateModelVersion(org.apache.maven.model.building.ModelProblemCollector,java.lang.String,org.apache.maven.model.InputLocationTracker,java.lang.String[])>(problems, $stack25, $r10, $stack26);

        $stack29 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack30 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack31 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $r11 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r12 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r11.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNoExpression(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("groupId", problems, $stack29, $stack30, $stack31, $r12);

        if parent != null goto label07;

        $stack160 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack161 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack162 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $r13 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r14 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r13.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("groupId", problems, $stack160, $stack161, $stack162, $r14);

     label07:
        $stack34 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack35 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack36 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $r15 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r16 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r15.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNoExpression(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("artifactId", problems, $stack34, $stack35, $stack36, $r16);

        $stack39 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack40 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack41 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $r17 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r18 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r17.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("artifactId", problems, $stack39, $stack40, $stack41, $r18);

        $stack44 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack45 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack46 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $r19 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r20 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r19.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateVersionNoExpression(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("version", problems, $stack44, $stack45, $stack46, $r20);

        if parent != null goto label08;

        $stack142 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack143 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack144 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $r21 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r22 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r21.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("version", problems, $stack142, $stack143, $stack144, $r22);

     label08:
        $stack48 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getDependencies()>();

        $r23 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r23.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawDependencies(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack48, "dependencies.dependency.", "", request);

        $stack49 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getDependencies()>();

        $r24 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r24.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawDependenciesSelfReferencing(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Model,java.util.List,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, m, $stack49, "dependencies.dependency", request);

        $stack50 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if $stack50 == null goto label09;

        $stack125 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        $stack126 = virtualinvoke $stack125.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        $r25 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r25.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawDependencies(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack126, "dependencyManagement.dependencies.dependency.", "", request);

     label09:
        $stack51 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        $r26 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r26.<org.apache.maven.model.validation.DefaultModelValidator: void validateRawRepositories(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack51, "repositories.repository.", "", request);

        $stack52 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getPluginRepositories()>();

        $r27 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r27.<org.apache.maven.model.validation.DefaultModelValidator: void validateRawRepositories(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack52, "pluginRepositories.pluginRepository.", "", request);

        n#22 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if n#22 == null goto label10;

        $stack121 = virtualinvoke n#22.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        $r28 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r28.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawPlugins(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack121, "build.plugins.plugin.", "", request);

        module#23 = virtualinvoke n#22.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if module#23 == null goto label10;

        $stack124 = virtualinvoke module#23.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        $r29 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r29.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawPlugins(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack124, "build.pluginManagement.plugins.plugin.", "", request);

     label10:
        $u3 = new java.util.HashSet;

        specialinvoke $u3.<java.util.HashSet: void <init>()>();

        $stack55 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        l9 = interfaceinvoke $stack55.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $stack57 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        if $stack57 == 0 goto label15;

        $stack58 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        profile = (org.apache.maven.model.Profile) $stack58;

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack60 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("profiles.profile[");

        $stack61 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack61);

        $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        prefix = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack66 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack67 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V40>;

        $stack68 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $r30 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r31 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r30.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateProfileId(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "id", problems, $stack66, $stack67, $stack68, null, $r31);

        $stack70 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack71 = interfaceinvoke $u3.<java.util.Set: boolean add(java.lang.Object)>($stack70);

        if $stack71 != 0 goto label12;

        $stack100 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack103 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be unique but found duplicate profile with id ");

        $stack104 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack105 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack104);

        $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = (org.apache.maven.model.InputLocationTracker) profile;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, i#21, $stack100, "profiles.profile.id", null, $stack106, $r32);

     label12:
        $stack72 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        $stack73 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $r33 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r33.<org.apache.maven.model.validation.DefaultModelValidator: void validate30RawProfileActivation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Activation,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack72, $stack73, prefix, "activation", request);

        $stack74 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getDependencies()>();

        $r34 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r34.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawDependencies(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack74, prefix, "dependencies.dependency.", request);

        $stack75 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if $stack75 == null goto label13;

        $stack83 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        $stack84 = virtualinvoke $stack83.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        $r35 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r35.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawDependencies(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack84, prefix, "dependencyManagement.dependencies.dependency.", request);

     label13:
        $stack76 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getRepositories()>();

        $r36 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r36.<org.apache.maven.model.validation.DefaultModelValidator: void validateRawRepositories(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack76, prefix, "repositories.repository.", request);

        $stack77 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getPluginRepositories()>();

        $r37 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r37.<org.apache.maven.model.validation.DefaultModelValidator: void validateRawRepositories(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack77, prefix, "pluginRepositories.pluginRepository.", request);

        buildBase = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.BuildBase getBuild()>();

        if buildBase == null goto label14;

        $stack80 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getPlugins()>();

        $r38 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r38.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawPlugins(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack80, prefix, "plugins.plugin.", request);

        mgmt = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if mgmt == null goto label14;

        $stack82 = virtualinvoke mgmt.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        $r39 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r39.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawPlugins(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack82, prefix, "pluginManagement.plugins.plugin.", request);

     label14:
        goto label11;

     label15:
        return;
    }

    public void validateRawModel(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        org.apache.maven.model.Model m;
        org.apache.maven.model.Parent parent;
        DefaultModelValidator this;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity $stack7;
        org.apache.maven.model.building.ModelProblem$Version $stack8;
        java.lang.String $stack9;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.validation.DefaultModelValidator $r0;
        org.apache.maven.model.InputLocationTracker $r1;

        this := @this: DefaultModelValidator;

        m := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        parent = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if parent == null goto label1;

        $stack7 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack8 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack9 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) parent;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("parent.version", problems, $stack7, $stack8, $stack9, $r1);

     label1:
        return;
    }

    private void validate30RawProfileActivation(org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.Activation, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.model.building.ModelBuildingRequest)
    {
        org.apache.maven.model.Activation activation;
        org.apache.maven.model.ActivationFile file;
        java.lang.String $stack11, $stack13, prefix, fieldName, $stack24, sourceHint, $stack32, $stack50, $stack58, path, $stack63, $stack60, $stack37, $stack34;
        boolean $stack12, $stack14, $stack16, $stack17, missing;
        DefaultModelValidator this;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity $stack19, $stack45;
        org.apache.maven.model.building.ModelProblem$Version $stack20, $stack46;
        java.lang.StringBuilder $stack21, $stack22, $stack23, $stack27, $stack28, $stack29, $stack30, $stack31, $stack47, $stack48, $stack49, $stack53, $stack54, $stack55, $stack56, $stack57, $u0, $u1, $u2, $u3;
        org.apache.maven.model.InputLocation $stack33, $stack59;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.InputLocationTracker $r0, $r2;
        org.apache.maven.model.validation.DefaultModelValidator $r1;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        activation := @parameter1: org.apache.maven.model.Activation;

        sourceHint := @parameter2: java.lang.String;

        prefix := @parameter3: java.lang.String;

        fieldName := @parameter4: java.lang.String;

        request := @parameter5: org.apache.maven.model.building.ModelBuildingRequest;

        if activation != null goto label01;

        return;

     label01:
        file = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationFile getFile()>();

        if file == null goto label14;

        $stack11 = virtualinvoke file.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        $stack12 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>($stack11);

        if $stack12 == 0 goto label02;

        path = virtualinvoke file.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        missing = 0;

        goto label04;

     label02:
        $stack13 = virtualinvoke file.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

        $stack14 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>($stack13);

        if $stack14 == 0 goto label03;

        path = virtualinvoke file.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

        missing = 1;

        goto label04;

     label03:
        return;

     label04:
        $stack16 = virtualinvoke path.<java.lang.String: boolean contains(java.lang.CharSequence)>("${project.basedir}");

        if $stack16 == 0 goto label09;

        $stack45 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack46 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V30>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack47 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        if missing == 0 goto label05;

        $stack63 = ".file.missing";

        goto label06;

     label05:
        $stack63 = ".file.exists";

     label06:
        $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack63);

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>();

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack53 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to interpolate file location ");

        $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path);

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for profile ");

        $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(sourceHint);

        $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ${project.basedir} expression not supported during profile activation, use ${basedir} instead");

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>();

        if missing == 0 goto label07;

        $stack60 = "missing";

        goto label08;

     label07:
        $stack60 = "exists";

     label08:
        $stack59 = virtualinvoke file.<org.apache.maven.model.ActivationFile: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>($stack60);

        $r0 = (org.apache.maven.model.InputLocationTracker) $stack59;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack45, $stack46, $stack50, null, $stack58, $r0);

        goto label14;

     label09:
        $r1 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.validation.DefaultModelValidator: boolean hasProjectExpression(java.lang.String)>(path);

        if $stack17 == 0 goto label14;

        $stack19 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack20 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V30>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        if missing == 0 goto label10;

        $stack37 = ".file.missing";

        goto label11;

     label10:
        $stack37 = ".file.exists";

     label11:
        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack27 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to interpolate file location ");

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(path);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for profile ");

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(sourceHint);

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ${project.*} expressions are not supported during profile activation");

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>();

        if missing == 0 goto label12;

        $stack34 = "missing";

        goto label13;

     label12:
        $stack34 = "exists";

     label13:
        $stack33 = virtualinvoke file.<org.apache.maven.model.ActivationFile: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>($stack34);

        $r2 = (org.apache.maven.model.InputLocationTracker) $stack33;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack19, $stack20, $stack24, null, $stack32, $r2);

     label14:
        return;
    }

    private void validate20RawPlugins(org.apache.maven.model.building.ModelProblemCollector, java.util.List, java.lang.String, java.lang.String, org.apache.maven.model.building.ModelBuildingRequest)
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblem$Severity errOn31, $stack22, $stack30, $stack50, $stack86;
        java.util.List plugins, $stack41;
        java.util.Iterator l8, l13;
        boolean $stack18, $stack47, $stack79, $stack96, $stack108, $stack43;
        java.lang.Object $stack19, $stack45, $stack38;
        org.apache.maven.model.Plugin plugin, existing;
        java.lang.String $stack20, prefix, prefix2, $stack27, $stack35, key, $stack46, $stack55, $stack58, $stack62, $stack64, $stack70, $stack75, $stack77, $stack78, $stack91, $stack92, $stack94, $stack95, $stack104, $stack106, $stack107, $stack28, $stack36;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Version $stack23, $stack31, $stack51, $stack66, $stack87;
        java.lang.StringBuilder $stack24, $stack25, $stack26, $stack32, $stack33, $stack34, $stack52, $stack53, $stack54, $stack56, $stack57, $stack61, $stack63, $stack67, $stack68, $stack69, $stack73, $stack74, $stack88, $stack89, $stack90, $u1, $u2, $u3, $u4, $u5, $u7, $u8;
        org.apache.maven.model.PluginExecution exec;
        DefaultModelValidator this;
        java.util.HashMap $u0;
        java.util.HashSet $u6;
        org.apache.maven.model.InputLocationTracker $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        plugins := @parameter1: java.util.List;

        prefix := @parameter2: java.lang.String;

        prefix2 := @parameter3: java.lang.String;

        request := @parameter4: org.apache.maven.model.building.ModelBuildingRequest;

        errOn31 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 31);

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        l8 = interfaceinvoke plugins.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $stack18 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        if $stack18 == 0 goto label12;

        $stack19 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack19;

        $stack20 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        if $stack20 == null goto label02;

        $stack104 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        if $stack104 == null goto label03;

        $stack106 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack107 = virtualinvoke $stack106.<java.lang.String: java.lang.String trim()>();

        $stack108 = virtualinvoke $stack107.<java.lang.String: boolean isEmpty()>();

        if $stack108 == 0 goto label03;

     label02:
        $stack22 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack23 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack24 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(groupId:artifactId)");

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = (org.apache.maven.model.InputLocationTracker) plugin;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack22, $stack23, $stack27, null, "groupId of a plugin must be defined. ", $r0);

     label03:
        $stack28 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        if $stack28 == null goto label04;

        $stack92 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        if $stack92 == null goto label05;

        $stack94 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $stack95 = virtualinvoke $stack94.<java.lang.String: java.lang.String trim()>();

        $stack96 = virtualinvoke $stack95.<java.lang.String: boolean isEmpty()>();

        if $stack96 == 0 goto label05;

     label04:
        $stack30 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack31 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack32 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(groupId:artifactId)");

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = (org.apache.maven.model.InputLocationTracker) plugin;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack30, $stack31, $stack35, null, "artifactId of a plugin must be defined. ", $r1);

     label05:
        $stack36 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        if $stack36 == null goto label06;

        $stack77 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        $stack78 = virtualinvoke $stack77.<java.lang.String: java.lang.String trim()>();

        $stack79 = virtualinvoke $stack78.<java.lang.String: boolean isEmpty()>();

        if $stack79 == 0 goto label06;

        $stack86 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack87 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack88 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack89 = virtualinvoke $stack88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(groupId:artifactId)");

        $stack91 = virtualinvoke $stack90.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = (org.apache.maven.model.InputLocationTracker) plugin;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack86, $stack87, $stack91, null, "version of a plugin must be defined. ", $r2);

     label06:
        key = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getKey()>();

        $stack38 = interfaceinvoke $u0.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        existing = (org.apache.maven.model.Plugin) $stack38;

        if existing == null goto label07;

        $stack66 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack67 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(groupId:artifactId)");

        $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.String toString()>();

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack73 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be unique but found duplicate declaration of plugin ");

        $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);

        $stack75 = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = (org.apache.maven.model.InputLocationTracker) plugin;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, errOn31, $stack66, $stack70, null, $stack75, $r3);

        goto label08;

     label07:
        interfaceinvoke $u0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, plugin);

     label08:
        $u6 = new java.util.HashSet;

        specialinvoke $u6.<java.util.HashSet: void <init>()>();

        $stack41 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        l13 = interfaceinvoke $stack41.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $stack43 = interfaceinvoke l13.<java.util.Iterator: boolean hasNext()>();

        if $stack43 == 0 goto label11;

        $stack45 = interfaceinvoke l13.<java.util.Iterator: java.lang.Object next()>();

        exec = (org.apache.maven.model.PluginExecution) $stack45;

        $stack46 = virtualinvoke exec.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        $stack47 = interfaceinvoke $u6.<java.util.Set: boolean add(java.lang.Object)>($stack46);

        if $stack47 != 0 goto label10;

        $stack50 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack51 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        $stack52 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack55 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getKey()>();

        $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack55);

        $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].executions.execution.id");

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>();

        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $stack61 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be unique but found duplicate execution with id ");

        $stack62 = virtualinvoke exec.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack62);

        $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = (org.apache.maven.model.InputLocationTracker) exec;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack50, $stack51, $stack58, null, $stack64, $r4);

     label10:
        goto label09;

     label11:
        goto label01;

     label12:
        return;
    }

    public void validateEffectiveModel(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        DefaultModelValidator this;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.Model m;
        org.apache.maven.model.building.ModelProblem$Severity $stack12, $stack23, $stack30, $stack61, $stack82, $stack87, $stack101, $stack106, $stack155, $stack165, i#8, module#10;
        org.apache.maven.model.building.ModelProblem$Version $stack13, $stack24, $stack31, $stack41, $stack45, $stack60, $stack83, $stack88, $stack102, $stack107, $stack116, $stack122, $stack156, $stack166;
        java.lang.String $stack14, $stack17, $stack20, $stack25, $stack32, $stack42, $stack46, $stack57, $stack84, $stack89, $stack103, $stack108, $stack111, $stack112, $stack117, $stack118, $stack123, $stack124, $stack130, $stack131, $stack160, $stack170, $stack173, module;
        java.util.List $stack27, $stack35, $stack50, $stack53, $stack76, $stack92, $stack95, $stack96, $stack127, $stack133, $stack149;
        boolean $stack28, $stack55, $stack78, $stack94, $stack132, $stack151, $stack52;
        org.apache.maven.model.building.ModelBuildingRequest request;
        int $stack37, i, n;
        org.apache.maven.model.Build build;
        org.apache.maven.model.DeploymentRepository $stack58, $stack59;
        java.lang.Object $stack72, $stack74, $stack80, $stack99, $stack150;
        java.lang.StringBuilder $stack157, $stack158, $stack159, $stack169, $stack171, $stack172, $u0, $u1;
        org.apache.maven.model.InputLocation $stack163;
        org.apache.maven.model.DependencyManagement n#9;
        java.util.Iterator reporting, p#14;
        org.apache.maven.model.Plugin p;
        org.apache.maven.model.Reporting reporting#13;
        org.apache.maven.model.ReportPlugin p#15;
        org.apache.maven.model.Repository p#21, $r39, $r41;
        org.apache.maven.model.DistributionManagement p#24;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r2, $r4, $r6, $r10, $r12, $r13, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r29, $r30, $r31, $r33, $r35, $r36, $r38, $r40;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r8, $r9, $r11, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r32, $r34, $r37;

        this := @this: DefaultModelValidator;

        m := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        $stack12 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack13 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack14 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("modelVersion", problems, $stack12, $stack13, $stack14, $r1);

        $stack17 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $r2 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r2.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateCoordinateId(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,java.lang.String,org.apache.maven.model.InputLocationTracker)>("groupId", problems, $stack17, $r3);

        $stack20 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $r4 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r4.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateCoordinateId(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,java.lang.String,org.apache.maven.model.InputLocationTracker)>("artifactId", problems, $stack20, $r5);

        $stack23 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack24 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack25 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $r6 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r6.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("packaging", problems, $stack23, $stack24, $stack25, $r7);

        $stack27 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getModules()>();

        $stack28 = interfaceinvoke $stack27.<java.util.List: boolean isEmpty()>();

        if $stack28 != 0 goto label04;

        $stack130 = "pom";

        $stack131 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $stack132 = virtualinvoke $stack130.<java.lang.String: boolean equals(java.lang.Object)>($stack131);

        if $stack132 != 0 goto label01;

        $stack165 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack166 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack169 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with value \'");

        $stack170 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $stack171 = virtualinvoke $stack169.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack170);

        $stack172 = virtualinvoke $stack171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is invalid. Aggregator projects require \'pom\' as packaging.");

        $stack173 = virtualinvoke $stack172.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = (org.apache.maven.model.InputLocationTracker) m;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack165, $stack166, "packaging", null, $stack173, $r8);

     label01:
        i = 0;

        $stack133 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getModules()>();

        n = interfaceinvoke $stack133.<java.util.List: int size()>();

     label02:
        if i >= n goto label04;

        $stack149 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getModules()>();

        $stack150 = interfaceinvoke $stack149.<java.util.List: java.lang.Object get(int)>(i);

        module = (java.lang.String) $stack150;

        $stack151 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isBlank(java.lang.String)>(module);

        if $stack151 == 0 goto label03;

        $stack155 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack156 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack157 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("modules.module[");

        $stack158 = virtualinvoke $stack157.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        $stack159 = virtualinvoke $stack158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack160 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack163 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("modules");

        $r9 = (org.apache.maven.model.InputLocationTracker) $stack163;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack155, $stack156, $stack160, null, "has been specified without a path to the project directory.", $r9);

     label03:
        i = i + 1;

        goto label02;

     label04:
        $stack30 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack31 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack32 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $r10 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r11 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r10.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("version", problems, $stack30, $stack31, $stack32, $r11);

        i#8 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 30);

        $stack35 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getDependencies()>();

        $r12 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r12.<org.apache.maven.model.validation.DefaultModelValidator: void validateEffectiveDependencies(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Model,java.util.List,boolean,org.apache.maven.model.building.ModelBuildingRequest)>(problems, m, $stack35, 0, request);

        n#9 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if n#9 == null goto label05;

        $stack127 = virtualinvoke n#9.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        $r13 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r13.<org.apache.maven.model.validation.DefaultModelValidator: void validateEffectiveDependencies(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Model,java.util.List,boolean,org.apache.maven.model.building.ModelBuildingRequest)>(problems, m, $stack127, 1, request);

     label05:
        $stack37 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack37 < 20 goto label16;

        module#10 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 31);

        $stack41 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack42 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $r14 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r15 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r14.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateBannedCharacters(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker,java.lang.String)>("", "version", problems, module#10, $stack41, $stack42, null, $r15, "\\/:\"<>|?*");

        $stack45 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack46 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $r16 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r17 = (org.apache.maven.model.InputLocationTracker) m;

        specialinvoke $r16.<org.apache.maven.model.validation.DefaultModelValidator: boolean validate20ProperSnapshotVersion(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>("version", problems, module#10, $stack45, $stack46, null, $r17);

        build = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if build == null goto label08;

        $stack92 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        reporting = interfaceinvoke $stack92.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack94 = interfaceinvoke reporting.<java.util.Iterator: boolean hasNext()>();

        if $stack94 == 0 goto label07;

        $stack99 = interfaceinvoke reporting.<java.util.Iterator: java.lang.Object next()>();

        p = (org.apache.maven.model.Plugin) $stack99;

        $stack101 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack102 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack103 = virtualinvoke p.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $r18 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r19 = (org.apache.maven.model.InputLocationTracker) p;

        specialinvoke $r18.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("build.plugins.plugin.artifactId", problems, $stack101, $stack102, $stack103, $r19);

        $stack106 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack107 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack108 = virtualinvoke p.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $r20 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r21 = (org.apache.maven.model.InputLocationTracker) p;

        specialinvoke $r20.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("build.plugins.plugin.groupId", problems, $stack106, $stack107, $stack108, $r21);

        $stack111 = virtualinvoke p.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        $stack112 = virtualinvoke p.<org.apache.maven.model.Plugin: java.lang.String getKey()>();

        $r22 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r23 = (org.apache.maven.model.InputLocationTracker) p;

        specialinvoke $r22.<org.apache.maven.model.validation.DefaultModelValidator: boolean validate20PluginVersion(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker,org.apache.maven.model.building.ModelBuildingRequest)>("build.plugins.plugin.version", problems, $stack111, $stack112, $r23, request);

        $stack116 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack117 = virtualinvoke p.<org.apache.maven.model.Plugin: java.lang.String getInherited()>();

        $stack118 = virtualinvoke p.<org.apache.maven.model.Plugin: java.lang.String getKey()>();

        $r24 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r25 = (org.apache.maven.model.InputLocationTracker) p;

        specialinvoke $r24.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateBoolean(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>("build.plugins.plugin.inherited", "", problems, i#8, $stack116, $stack117, $stack118, $r25);

        $stack122 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack123 = virtualinvoke p.<org.apache.maven.model.Plugin: java.lang.String getExtensions()>();

        $stack124 = virtualinvoke p.<org.apache.maven.model.Plugin: java.lang.String getKey()>();

        $r26 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r27 = (org.apache.maven.model.InputLocationTracker) p;

        specialinvoke $r26.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateBoolean(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>("build.plugins.plugin.extensions", "", problems, i#8, $stack122, $stack123, $stack124, $r27);

        $r28 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r28.<org.apache.maven.model.validation.DefaultModelValidator: void validate20EffectivePluginDependencies(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Plugin,org.apache.maven.model.building.ModelBuildingRequest)>(problems, p, request);

        goto label06;

     label07:
        $stack95 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getResources()>();

        $r29 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r29.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawResources(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack95, "build.resources.resource.", request);

        $stack96 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getTestResources()>();

        $r30 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r30.<org.apache.maven.model.validation.DefaultModelValidator: void validate20RawResources(org.apache.maven.model.building.ModelProblemCollector,java.util.List,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $stack96, "build.testResources.testResource.", request);

     label08:
        reporting#13 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.Reporting getReporting()>();

        if reporting#13 == null goto label10;

        $stack76 = virtualinvoke reporting#13.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        p#14 = interfaceinvoke $stack76.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $stack78 = interfaceinvoke p#14.<java.util.Iterator: boolean hasNext()>();

        if $stack78 == 0 goto label10;

        $stack80 = interfaceinvoke p#14.<java.util.Iterator: java.lang.Object next()>();

        p#15 = (org.apache.maven.model.ReportPlugin) $stack80;

        $stack82 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack83 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack84 = virtualinvoke p#15.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        $r31 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r32 = (org.apache.maven.model.InputLocationTracker) p#15;

        specialinvoke $r31.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("reporting.plugins.plugin.artifactId", problems, $stack82, $stack83, $stack84, $r32);

        $stack87 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack88 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack89 = virtualinvoke p#15.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        $r33 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r34 = (org.apache.maven.model.InputLocationTracker) p#15;

        specialinvoke $r33.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>("reporting.plugins.plugin.groupId", problems, $stack87, $stack88, $stack89, $r34);

        goto label09;

     label10:
        $stack50 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        p#14 = interfaceinvoke $stack50.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $stack52 = interfaceinvoke p#14.<java.util.Iterator: boolean hasNext()>();

        if $stack52 == 0 goto label12;

        $stack74 = interfaceinvoke p#14.<java.util.Iterator: java.lang.Object next()>();

        p#21 = (org.apache.maven.model.Repository) $stack74;

        $r35 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r35.<org.apache.maven.model.validation.DefaultModelValidator: void validate20EffectiveRepository(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Repository,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, p#21, "repositories.repository.", request);

        goto label11;

     label12:
        $stack53 = virtualinvoke m.<org.apache.maven.model.Model: java.util.List getPluginRepositories()>();

        p#14 = interfaceinvoke $stack53.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $stack55 = interfaceinvoke p#14.<java.util.Iterator: boolean hasNext()>();

        if $stack55 == 0 goto label14;

        $stack72 = interfaceinvoke p#14.<java.util.Iterator: java.lang.Object next()>();

        p#21 = (org.apache.maven.model.Repository) $stack72;

        $r36 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r36.<org.apache.maven.model.validation.DefaultModelValidator: void validate20EffectiveRepository(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Repository,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, p#21, "pluginRepositories.pluginRepository.", request);

        goto label13;

     label14:
        p#24 = virtualinvoke m.<org.apache.maven.model.Model: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if p#24 == null goto label16;

        $stack57 = virtualinvoke p#24.<org.apache.maven.model.DistributionManagement: java.lang.String getStatus()>();

        if $stack57 == null goto label15;

        $stack61 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack60 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $r37 = (org.apache.maven.model.InputLocationTracker) p#24;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack61, $stack60, "distributionManagement.status", null, "must not be specified.", $r37);

     label15:
        $stack58 = virtualinvoke p#24.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getRepository()>();

        $r38 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r39 = (org.apache.maven.model.Repository) $stack58;

        specialinvoke $r38.<org.apache.maven.model.validation.DefaultModelValidator: void validate20EffectiveRepository(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Repository,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $r39, "distributionManagement.repository.", request);

        $stack59 = virtualinvoke p#24.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getSnapshotRepository()>();

        $r40 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r41 = (org.apache.maven.model.Repository) $stack59;

        specialinvoke $r40.<org.apache.maven.model.validation.DefaultModelValidator: void validate20EffectiveRepository(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Repository,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, $r41, "distributionManagement.snapshotRepository.", request);

     label16:
        return;
    }

    private void validate20RawDependencies(org.apache.maven.model.building.ModelProblemCollector, java.util.List, java.lang.String, java.lang.String, org.apache.maven.model.building.ModelBuildingRequest)
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblem$Severity errOn30, errOn31, $stack31, $stack103, $stack125, $stack136, $stack156;
        java.util.List dependencies;
        java.util.Iterator l9;
        boolean $stack18, $stack23, $stack26, $stack42, $stack84, $stack98, $stack100, $stack101, $stack114, $stack146, $stack148, $stack29;
        java.lang.Object $stack19, $stack37;
        org.apache.maven.model.Dependency dependency, sysPath#42;
        java.lang.String key, $stack21, $stack22, $stack24, $stack25, prefix, prefix2, $stack36, $stack40, $stack41, $stack45, $stack46, $stack49, $stack50, $stack58, $stack65, $stack68, $stack69, $stack83, $stack108, $stack113, $stack130, $stack134, $stack141, $stack144, $stack145, $stack147, $stack154, $stack161, sysPath, $stack28, msg;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Version $stack32, $stack54, $stack104, $stack126, $stack137, $stack150, $stack157;
        java.lang.StringBuilder $stack33, $stack34, $stack35, $stack44, $stack47, $stack48, $stack51, $stack55, $stack56, $stack57, $stack61, $stack62, $stack63, $stack64, $stack67, $stack70, $stack105, $stack106, $stack107, $stack110, $stack111, $stack112, $stack127, $stack128, $stack129, $stack132, $stack133, $stack138, $stack139, $stack140, $stack151, $stack152, $stack153, $stack158, $stack159, $stack160, $u1, $u2, $u3, $u4, $u5, $u6, $u7, $u8, $u9, $u10, $u11, $u12;
        int $stack96;
        DefaultModelValidator this;
        java.util.HashMap $u0;
        org.apache.maven.model.InputLocationTracker $r0, $r1, $r2, $r4, $r5, $r6, $r7;
        org.apache.maven.model.validation.DefaultModelValidator $r3;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        dependencies := @parameter1: java.util.List;

        prefix := @parameter2: java.lang.String;

        prefix2 := @parameter3: java.lang.String;

        request := @parameter4: org.apache.maven.model.building.ModelBuildingRequest;

        errOn30 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 30);

        errOn31 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 31);

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        l9 = interfaceinvoke dependencies.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $stack18 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        if $stack18 == 0 goto label14;

        $stack19 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        dependency = (org.apache.maven.model.Dependency) $stack19;

        key = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $stack21 = "import";

        $stack22 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $stack23 = virtualinvoke $stack21.<java.lang.String: boolean equals(java.lang.Object)>($stack22);

        if $stack23 == 0 goto label03;

        $stack144 = "pom";

        $stack145 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        $stack146 = virtualinvoke $stack144.<java.lang.String: boolean equals(java.lang.Object)>($stack145);

        if $stack146 != 0 goto label02;

        $stack156 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack157 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack158 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack159 = virtualinvoke $stack158.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack160 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type");

        $stack161 = virtualinvoke $stack160.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = (org.apache.maven.model.InputLocationTracker) dependency;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack156, $stack157, $stack161, key, "must be \'pom\' to import the managed dependencies.", $r0);

        goto label07;

     label02:
        $stack147 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        $stack148 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>($stack147);

        if $stack148 == 0 goto label07;

        $stack150 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack151 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack152 = virtualinvoke $stack151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack153 = virtualinvoke $stack152.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("classifier");

        $stack154 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = (org.apache.maven.model.InputLocationTracker) dependency;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, errOn30, $stack150, $stack154, key, "must be empty, imported POM cannot have a classifier.", $r1);

        goto label07;

     label03:
        $stack24 = "system";

        $stack25 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $stack26 = virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>($stack25);

        if $stack26 == 0 goto label07;

        $stack96 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack96 < 31 goto label04;

        $stack136 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack137 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V31>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack138 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack139 = virtualinvoke $stack138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack140 = virtualinvoke $stack139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scope");

        $stack141 = virtualinvoke $stack140.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = (org.apache.maven.model.InputLocationTracker) dependency;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack136, $stack137, $stack141, key, "declares usage of deprecated \'system\' scope ", $r2);

     label04:
        sysPath = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        $stack98 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(sysPath);

        if $stack98 == 0 goto label07;

        $r3 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack100 = specialinvoke $r3.<org.apache.maven.model.validation.DefaultModelValidator: boolean hasExpression(java.lang.String)>(sysPath);

        if $stack100 != 0 goto label05;

        $stack125 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack126 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack127 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack128 = virtualinvoke $stack127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack129 = virtualinvoke $stack128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("systemPath");

        $stack130 = virtualinvoke $stack129.<java.lang.StringBuilder: java.lang.String toString()>();

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack132 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("should use a variable instead of a hard-coded path ");

        $stack133 = virtualinvoke $stack132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(sysPath);

        $stack134 = virtualinvoke $stack133.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = (org.apache.maven.model.InputLocationTracker) dependency;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack125, $stack126, $stack130, key, $stack134, $r4);

        goto label07;

     label05:
        $stack101 = virtualinvoke sysPath.<java.lang.String: boolean contains(java.lang.CharSequence)>("${basedir}");

        if $stack101 != 0 goto label06;

        $stack114 = virtualinvoke sysPath.<java.lang.String: boolean contains(java.lang.CharSequence)>("${project.basedir}");

        if $stack114 == 0 goto label07;

     label06:
        $stack103 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack104 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack105 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack106 = virtualinvoke $stack105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("systemPath");

        $stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.String toString()>();

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        $stack110 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("should not point at files within the project directory, ");

        $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(sysPath);

        $stack112 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" will be unresolvable by dependent projects");

        $stack113 = virtualinvoke $stack112.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = (org.apache.maven.model.InputLocationTracker) dependency;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack103, $stack104, $stack108, key, $stack113, $r5);

     label07:
        $stack28 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack29 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: boolean equals(java.lang.String,java.lang.String)>("LATEST", $stack28);

        if $stack29 != 0 goto label08;

        $stack83 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack84 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: boolean equals(java.lang.String,java.lang.String)>("RELEASE", $stack83);

        if $stack84 == 0 goto label09;

     label08:
        $stack31 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack32 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $stack33 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version");

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = (org.apache.maven.model.InputLocationTracker) dependency;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack31, $stack32, $stack36, key, "is either LATEST or RELEASE (both of them are being deprecated)", $r6);

     label09:
        $stack37 = interfaceinvoke $u0.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        sysPath#42 = (org.apache.maven.model.Dependency) $stack37;

        if sysPath#42 == null goto label12;

        $stack40 = virtualinvoke sysPath#42.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack41 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack42 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: boolean equals(java.lang.String,java.lang.String)>($stack40, $stack41);

        if $stack42 == 0 goto label10;

        $u9 = new java.lang.StringBuilder;

        specialinvoke $u9.<java.lang.StringBuilder: void <init>()>();

        $stack67 = virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("duplicate declaration of version ");

        $stack68 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack69 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($stack68, "(?)");

        $stack70 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack69);

        msg = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;

     label10:
        $u10 = new java.lang.StringBuilder;

        specialinvoke $u10.<java.lang.StringBuilder: void <init>()>();

        $stack44 = virtualinvoke $u10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("version ");

        $stack45 = virtualinvoke sysPath#42.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack46 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($stack45, "(?)");

        $stack47 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46);

        $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $stack49 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack50 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($stack49, "(?)");

        $stack51 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack50);

        msg = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        $stack54 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u11 = new java.lang.StringBuilder;

        specialinvoke $u11.<java.lang.StringBuilder: void <init>()>();

        $stack55 = virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(groupId:artifactId:type:classifier)");

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>();

        $u12 = new java.lang.StringBuilder;

        specialinvoke $u12.<java.lang.StringBuilder: void <init>()>();

        $stack61 = virtualinvoke $u12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be unique: ");

        $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);

        $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $stack64 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg);

        $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = (org.apache.maven.model.InputLocationTracker) dependency;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, errOn31, $stack54, $stack58, null, $stack65, $r7);

        goto label13;

     label12:
        interfaceinvoke $u0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, dependency);

     label13:
        goto label01;

     label14:
        return;
    }

    private void validate20RawDependenciesSelfReferencing(org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.Model, java.util.List, java.lang.String, org.apache.maven.model.building.ModelBuildingRequest)
    {
        java.util.List dependencies;
        java.util.Iterator l6;
        boolean $stack11, $stack35;
        java.lang.Object $stack12;
        org.apache.maven.model.Dependency dependency;
        java.lang.String $stack14, $stack17, $stack20, $stack22, key, $stack26, $stack29, $stack32, mKey, prefix, $stack44, $stack47, $stack49;
        java.lang.StringBuilder $stack15, $stack16, $stack18, $stack19, $stack21, $stack23, $stack27, $stack28, $stack30, $stack31, $stack33, $stack40, $stack41, $stack42, $stack43, $stack46, $stack48, $u0, $u1, $u2, $u3;
        org.apache.maven.model.Model m;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity $stack38;
        org.apache.maven.model.building.ModelProblem$Version $stack39;
        DefaultModelValidator this;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.InputLocationTracker $r0;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        m := @parameter1: org.apache.maven.model.Model;

        dependencies := @parameter2: java.util.List;

        prefix := @parameter3: java.lang.String;

        request := @parameter4: org.apache.maven.model.building.ModelBuildingRequest;

        l6 = interfaceinvoke dependencies.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack11 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label5;

        $stack12 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        dependency = (org.apache.maven.model.Dependency) $stack12;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack15 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack17 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack20 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        if $stack22 == null goto label2;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack46 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack47 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        $stack48 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack47);

        $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $stack49 = "";

     label3:
        $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49);

        key = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack26 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $stack27 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26);

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack29 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $stack30 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29);

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack32 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $stack33 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32);

        mKey = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack35 = virtualinvoke key.<java.lang.String: boolean equals(java.lang.Object)>(mKey);

        if $stack35 == 0 goto label4;

        $stack38 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack39 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V31>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack40 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);

        $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = (org.apache.maven.model.InputLocationTracker) dependency;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack38, $stack39, $stack44, key, "is referencing itself.", $r0);

     label4:
        goto label1;

     label5:
        return;
    }

    private void validateEffectiveDependencies(org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.Model, java.util.List, boolean, org.apache.maven.model.building.ModelBuildingRequest)
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblem$Severity errOn30, $stack22, $stack34;
        boolean management, $stack12;
        java.lang.String prefix, $stack18, $stack19, $stack24, $stack25, $stack30, $stack31, $stack36, $stack37, $stack40;
        java.util.List dependencies;
        java.util.Iterator l8;
        java.lang.Object $stack13;
        org.apache.maven.model.Dependency d;
        DefaultModelValidator this;
        org.apache.maven.model.building.ModelProblemCollector problems;
        int $stack14;
        org.apache.maven.model.building.ModelProblem$Version $stack17, $stack23, $stack29, $stack35;
        java.lang.String[] $stack26, $stack38;
        org.apache.maven.model.Model m;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r1, $r3, $r5, $r7, $r8;
        org.apache.maven.model.InputLocationTracker $r2, $r4, $r6, $r9;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        m := @parameter1: org.apache.maven.model.Model;

        dependencies := @parameter2: java.util.List;

        management := @parameter3: boolean;

        request := @parameter4: org.apache.maven.model.building.ModelBuildingRequest;

        errOn30 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 30);

        if management == 0 goto label1;

        $stack40 = "dependencyManagement.dependencies.dependency.";

        goto label2;

     label1:
        $stack40 = "dependencies.dependency.";

     label2:
        prefix = $stack40;

        l8 = interfaceinvoke dependencies.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack12 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label6;

        $stack13 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        d = (org.apache.maven.model.Dependency) $stack13;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: void validateEffectiveDependency(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Dependency,boolean,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, d, management, prefix, request);

        $stack14 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack14 < 20 goto label5;

        $stack17 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack18 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getOptional()>();

        $stack19 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r1 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r2 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r1.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateBoolean(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "optional", problems, errOn30, $stack17, $stack18, $stack19, $r2);

        if management != 0 goto label4;

        $stack29 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack30 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack31 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r3 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r4 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r3.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateVersion(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "version", problems, errOn30, $stack29, $stack30, $stack31, $r4);

        $stack34 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack35 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack36 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $stack37 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $stack38 = newarray (java.lang.String)[5];

        $stack38[0] = "provided";

        $stack38[1] = "compile";

        $stack38[2] = "runtime";

        $stack38[3] = "test";

        $stack38[4] = "system";

        $r5 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r6 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r5.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateEnum(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker,java.lang.String[])>(prefix, "scope", problems, $stack34, $stack35, $stack36, $stack37, $r6, $stack38);

        $r7 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r7.<org.apache.maven.model.validation.DefaultModelValidator: void validateEffectiveModelAgainstDependency(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Model,org.apache.maven.model.Dependency,org.apache.maven.model.building.ModelBuildingRequest)>(prefix, problems, m, d, request);

        goto label5;

     label4:
        $stack22 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack23 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack24 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $stack25 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $stack26 = newarray (java.lang.String)[6];

        $stack26[0] = "provided";

        $stack26[1] = "compile";

        $stack26[2] = "runtime";

        $stack26[3] = "test";

        $stack26[4] = "system";

        $stack26[5] = "import";

        $r8 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r8.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateEnum(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker,java.lang.String[])>(prefix, "scope", problems, $stack22, $stack23, $stack24, $stack25, $r9, $stack26);

     label5:
        goto label3;

     label6:
        return;
    }

    private void validateEffectiveModelAgainstDependency(java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.Model, org.apache.maven.model.Dependency, org.apache.maven.model.building.ModelBuildingRequest)
    {
        org.apache.maven.model.Dependency d;
        java.lang.String $stack9, $stack12, $stack15, $stack17, key, $stack21, $stack24, $stack27, mKey, prefix, $stack38, $stack41, $stack43;
        java.lang.StringBuilder $stack10, $stack11, $stack13, $stack14, $stack16, $stack18, $stack22, $stack23, $stack25, $stack26, $stack28, $stack34, $stack35, $stack36, $stack37, $stack40, $stack42, $u0, $u1, $u2, $u3;
        org.apache.maven.model.Model m;
        boolean $stack30;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity $stack32;
        org.apache.maven.model.building.ModelProblem$Version $stack33;
        DefaultModelValidator this;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.InputLocationTracker $r0;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        problems := @parameter1: org.apache.maven.model.building.ModelProblemCollector;

        m := @parameter2: org.apache.maven.model.Model;

        d := @parameter3: org.apache.maven.model.Dependency;

        request := @parameter4: org.apache.maven.model.building.ModelBuildingRequest;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack12 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack15 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        if $stack17 == null goto label1;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack40 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack41 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41);

        $stack43 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $stack43 = "";

     label2:
        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43);

        key = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $stack22 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack24 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack27 = virtualinvoke m.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27);

        mKey = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack30 = virtualinvoke key.<java.lang.String: boolean equals(java.lang.Object)>(mKey);

        if $stack30 == 0 goto label3;

        $stack32 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack33 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V31>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack34 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = (org.apache.maven.model.InputLocationTracker) d;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack32, $stack33, $stack38, key, "is referencing itself.", $r0);

     label3:
        return;
    }

    private void validate20EffectivePluginDependencies(org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.Plugin, org.apache.maven.model.building.ModelBuildingRequest)
    {
        org.apache.maven.model.Plugin plugin;
        java.util.List dependencies;
        boolean $stack10, $stack19;
        java.lang.StringBuilder $stack12, $stack14, $stack15, $u0;
        java.lang.String $stack13, prefix, $stack23, $stack24, $stack28, $stack29;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblem$Severity errOn30;
        java.util.Iterator l7;
        java.lang.Object $stack20;
        org.apache.maven.model.Dependency d;
        DefaultModelValidator this;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Version $stack22, $stack27;
        java.lang.String[] $stack30;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r1, $r3;
        org.apache.maven.model.InputLocationTracker $r2, $r4;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        plugin := @parameter1: org.apache.maven.model.Plugin;

        request := @parameter2: org.apache.maven.model.building.ModelBuildingRequest;

        dependencies = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        $stack10 = interfaceinvoke dependencies.<java.util.List: boolean isEmpty()>();

        if $stack10 != 0 goto label2;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("build.plugins.plugin[");

        $stack13 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getKey()>();

        $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].dependencies.dependency.");

        prefix = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        errOn30 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 30);

        l7 = interfaceinvoke dependencies.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack19 = interfaceinvoke l7.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label2;

        $stack20 = interfaceinvoke l7.<java.util.Iterator: java.lang.Object next()>();

        d = (org.apache.maven.model.Dependency) $stack20;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: void validateEffectiveDependency(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Dependency,boolean,java.lang.String,org.apache.maven.model.building.ModelBuildingRequest)>(problems, d, 0, prefix, request);

        $stack22 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack23 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack24 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r1 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r2 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r1.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateVersion(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "version", problems, errOn30, $stack22, $stack23, $stack24, $r2);

        $stack27 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack28 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $stack29 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $stack30 = newarray (java.lang.String)[3];

        $stack30[0] = "compile";

        $stack30[1] = "runtime";

        $stack30[2] = "system";

        $r3 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r4 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r3.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateEnum(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker,java.lang.String[])>(prefix, "scope", problems, errOn30, $stack27, $stack28, $stack29, $r4, $stack30);

        goto label1;

     label2:
        return;
    }

    private void validateEffectiveDependency(org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.Dependency, boolean, java.lang.String, org.apache.maven.model.building.ModelBuildingRequest)
    {
        DefaultModelValidator this;
        java.lang.String prefix, $stack13, $stack14, $stack19, $stack20, $stack22, $stack23, $stack25, $stack36, $stack37, $stack42, $stack43, $stack49, $stack50, $stack55, $stack56, $stack63, $stack64, $stack74, $stack78, $stack83, $stack85, jdkHome, $stack95, $stack96, $stack112, $stack113, $stack117, $stack123, $stack124, $stack128, $stack129, systemPath, msg;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.Dependency d;
        org.apache.maven.model.building.ModelProblem$Severity $stack11, $stack17, $stack34, $stack40, $stack47, $stack53, $stack59, $stack91, $stack108, $stack119, $stack126;
        org.apache.maven.model.building.ModelProblem$Version $stack12, $stack18, $stack35, $stack41, $stack48, $stack54, $stack60, $stack92, $stack109, $stack120, $stack127;
        boolean management, $stack24, $stack26, $stack30, $stack68, $stack70, $stack71, $stack89;
        org.apache.maven.model.building.ModelBuildingRequest request;
        java.util.List $stack28;
        java.lang.Object $stack31;
        int $stack32, $stack27;
        java.lang.StringBuilder $stack61, $stack62, $stack73, $stack75, $stack84, $stack86, $stack87, $stack93, $stack94, $stack98, $stack99, $stack110, $stack111, $stack115, $stack116, $stack121, $stack122, $u0, $u2, $u3, $u4, $u5, $u6, $u7, $u8;
        char $stack77, $stack79;
        java.util.Properties $stack82;
        java.util.Iterator systemPath#11;
        org.apache.maven.model.Exclusion sysFile#12;
        java.io.File $u1;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r2, $r4, $r6, $r11, $r13, $r15, $r17;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r8, $r9, $r10, $r12, $r14, $r16, $r18;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        d := @parameter1: org.apache.maven.model.Dependency;

        management := @parameter2: boolean;

        prefix := @parameter3: java.lang.String;

        request := @parameter4: org.apache.maven.model.building.ModelBuildingRequest;

        $stack11 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack12 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack13 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack14 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateCoordinateId(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "artifactId", problems, $stack11, $stack12, $stack13, $stack14, $r1);

        $stack17 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack18 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack19 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack20 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r2 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r2.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateCoordinateId(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "groupId", problems, $stack17, $stack18, $stack19, $stack20, $r3);

        if management != 0 goto label01;

        $stack126 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack127 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack128 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        $stack129 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r4 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r4.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "type", problems, $stack126, $stack127, $stack128, $stack129, $r5);

        $r6 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        virtualinvoke $r6.<org.apache.maven.model.validation.DefaultModelValidator: void validateDependencyVersion(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.Dependency,java.lang.String)>(problems, d, prefix);

     label01:
        $stack22 = "system";

        $stack23 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23);

        if $stack24 == 0 goto label06;

        systemPath = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        $stack68 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isEmpty(java.lang.String)>(systemPath);

        if $stack68 == 0 goto label02;

        $stack119 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack120 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack121 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack122 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("systemPath");

        $stack123 = virtualinvoke $stack122.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack124 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r7 = (org.apache.maven.model.InputLocationTracker) d;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack119, $stack120, $stack123, $stack124, "is missing.", $r7);

        goto label05;

     label02:
        $u1 = new java.io.File;

        specialinvoke $u1.<java.io.File: void <init>(java.lang.String)>(systemPath);

        $stack70 = virtualinvoke $u1.<java.io.File: boolean isAbsolute()>();

        if $stack70 != 0 goto label03;

        $stack108 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack109 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack110 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack111 = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("systemPath");

        $stack112 = virtualinvoke $stack111.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack113 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack115 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must specify an absolute path but is ");

        $stack116 = virtualinvoke $stack115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(systemPath);

        $stack117 = virtualinvoke $stack116.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = (org.apache.maven.model.InputLocationTracker) d;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack108, $stack109, $stack112, $stack113, $stack117, $r8);

        goto label05;

     label03:
        $stack71 = virtualinvoke $u1.<java.io.File: boolean isFile()>();

        if $stack71 != 0 goto label05;

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack73 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("refers to a non-existing file ");

        $stack74 = virtualinvoke $u1.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack74);

        msg = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack77 = <java.io.File: char separatorChar>;

        $stack78 = virtualinvoke systemPath.<java.lang.String: java.lang.String replace(char,char)>(47, $stack77);

        $stack79 = <java.io.File: char separatorChar>;

        systemPath = virtualinvoke $stack78.<java.lang.String: java.lang.String replace(char,char)>(92, $stack79);

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack82 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: java.util.Properties getSystemProperties()>();

        $stack83 = virtualinvoke $stack82.<java.util.Properties: java.lang.String getProperty(java.lang.String,java.lang.String)>("java.home", "");

        $stack84 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack83);

        $stack85 = <java.io.File: java.lang.String separator>;

        $stack86 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack85);

        $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("..");

        jdkHome = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack89 = virtualinvoke systemPath.<java.lang.String: boolean startsWith(java.lang.String)>(jdkHome);

        if $stack89 == 0 goto label04;

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack98 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg);

        $stack99 = virtualinvoke $stack98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Please verify that you run Maven using a JDK and not just a JRE.");

        msg = virtualinvoke $stack99.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $stack91 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack92 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        $stack93 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack94 = virtualinvoke $stack93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("systemPath");

        $stack95 = virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack96 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r9 = (org.apache.maven.model.InputLocationTracker) d;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack91, $stack92, $stack95, $stack96, msg, $r9);

     label05:
        goto label07;

     label06:
        $stack25 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        $stack26 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>($stack25);

        if $stack26 == 0 goto label07;

        $stack59 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack60 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $stack61 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("systemPath");

        $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack64 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r10 = (org.apache.maven.model.InputLocationTracker) d;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack59, $stack60, $stack63, $stack64, "must be omitted. This field may only be specified for a dependency with system scope.", $r10);

     label07:
        $stack27 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack27 < 20 goto label11;

        $stack28 = virtualinvoke d.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        systemPath#11 = interfaceinvoke $stack28.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack30 = interfaceinvoke systemPath#11.<java.util.Iterator: boolean hasNext()>();

        if $stack30 == 0 goto label11;

        $stack31 = interfaceinvoke systemPath#11.<java.util.Iterator: java.lang.Object next()>();

        sysFile#12 = (org.apache.maven.model.Exclusion) $stack31;

        $stack32 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        if $stack32 >= 30 goto label09;

        $stack47 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack48 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack49 = virtualinvoke sysFile#12.<org.apache.maven.model.Exclusion: java.lang.String getGroupId()>();

        $stack50 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r11 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r12 = (org.apache.maven.model.InputLocationTracker) sysFile#12;

        specialinvoke $r11.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateCoordinateId(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "exclusions.exclusion.groupId", problems, $stack47, $stack48, $stack49, $stack50, $r12);

        $stack53 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack54 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack55 = virtualinvoke sysFile#12.<org.apache.maven.model.Exclusion: java.lang.String getArtifactId()>();

        $stack56 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r13 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r14 = (org.apache.maven.model.InputLocationTracker) sysFile#12;

        specialinvoke $r13.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateCoordinateId(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "exclusions.exclusion.artifactId", problems, $stack53, $stack54, $stack55, $stack56, $r14);

        goto label10;

     label09:
        $stack34 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack35 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V30>;

        $stack36 = virtualinvoke sysFile#12.<org.apache.maven.model.Exclusion: java.lang.String getGroupId()>();

        $stack37 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r15 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r16 = (org.apache.maven.model.InputLocationTracker) sysFile#12;

        specialinvoke $r15.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateCoordinateIdWithWildcards(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "exclusions.exclusion.groupId", problems, $stack34, $stack35, $stack36, $stack37, $r16);

        $stack40 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack41 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V30>;

        $stack42 = virtualinvoke sysFile#12.<org.apache.maven.model.Exclusion: java.lang.String getArtifactId()>();

        $stack43 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r17 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r18 = (org.apache.maven.model.InputLocationTracker) sysFile#12;

        specialinvoke $r17.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateCoordinateIdWithWildcards(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "exclusions.exclusion.artifactId", problems, $stack40, $stack41, $stack42, $stack43, $r18);

     label10:
        goto label08;

     label11:
        return;
    }

    protected void validateDependencyVersion(org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.Dependency, java.lang.String)
    {
        DefaultModelValidator this;
        java.lang.String prefix, $stack7, $stack8;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.Dependency d;
        org.apache.maven.model.building.ModelProblem$Severity $stack5;
        org.apache.maven.model.building.ModelProblem$Version $stack6;
        org.apache.maven.model.validation.DefaultModelValidator $r0;
        org.apache.maven.model.InputLocationTracker $r1;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        d := @parameter1: org.apache.maven.model.Dependency;

        prefix := @parameter2: java.lang.String;

        $stack5 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack6 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $stack7 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack8 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) d;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "version", problems, $stack5, $stack6, $stack7, $stack8, $r1);

        return;
    }

    private void validateRawRepositories(org.apache.maven.model.building.ModelProblemCollector, java.util.List, java.lang.String, java.lang.String, org.apache.maven.model.building.ModelBuildingRequest)
    {
        java.util.List repositories;
        java.util.Iterator l7;
        boolean $stack14, $stack30, $stack65, $stack69, $stack57;
        java.lang.Object $stack15, $stack32;
        org.apache.maven.model.Repository repository, existing;
        DefaultModelValidator this;
        java.lang.String prefix, prefix2, $stack19, $stack23, $stack26, $stack29, $stack41, $stack45, $stack48, $stack51, $stack53, $stack55, $stack63, $stack64, $stack67, $stack68, $stack74, $stack77, $stack80, m#10;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity $stack17, $stack27, errOn30, $stack78;
        org.apache.maven.model.building.ModelProblem$Version $stack18, $stack28, $stack37, $stack79;
        java.lang.StringBuilder $stack22, $stack24, $stack25, $stack38, $stack39, $stack40, $stack44, $stack46, $stack47, $stack49, $stack50, $stack52, $stack71, $stack72, $stack73, $stack75, $stack76, $u1, $u2, $u3, $u4;
        org.apache.maven.model.building.ModelBuildingRequest request;
        java.util.regex.Pattern $stack54;
        java.util.regex.Matcher m;
        java.util.HashMap $u0;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r2, $r4;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r6;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        repositories := @parameter1: java.util.List;

        prefix := @parameter2: java.lang.String;

        prefix2 := @parameter3: java.lang.String;

        request := @parameter4: org.apache.maven.model.building.ModelBuildingRequest;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        l7 = interfaceinvoke repositories.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack14 = interfaceinvoke l7.<java.util.Iterator: boolean hasNext()>();

        if $stack14 == 0 goto label6;

        $stack15 = interfaceinvoke l7.<java.util.Iterator: java.lang.Object next()>();

        repository = (org.apache.maven.model.Repository) $stack15;

        $stack17 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack18 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack19 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) repository;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, prefix2, "id", problems, $stack17, $stack18, $stack19, null, $r1);

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack22 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack23 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].url");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack27 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack28 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack29 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getUrl()>();

        $r2 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) repository;

        $stack30 = specialinvoke $r2.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, prefix2, $stack26, problems, $stack27, $stack28, $stack29, null, $r3);

        if $stack30 == 0 goto label3;

        $stack54 = <org.apache.maven.model.validation.DefaultModelValidator: java.util.regex.Pattern EXPRESSION_NAME_PATTERN>;

        $stack55 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getUrl()>();

        m = virtualinvoke $stack54.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack55);

     label2:
        $stack57 = virtualinvoke m.<java.util.regex.Matcher: boolean find()>();

        if $stack57 == 0 goto label3;

        $stack63 = "basedir";

        $stack64 = virtualinvoke m.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $stack65 = virtualinvoke $stack63.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack65 != 0 goto label2;

        $stack67 = "project.basedir";

        $stack68 = virtualinvoke m.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $stack69 = virtualinvoke $stack67.<java.lang.String: boolean equals(java.lang.Object)>($stack68);

        if $stack69 != 0 goto label2;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack71 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack74 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack74);

        $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].url");

        $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack78 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack79 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V40>;

        $stack80 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getUrl()>();

        $r4 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) repository;

        specialinvoke $r4.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNoExpression(java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,org.apache.maven.model.InputLocationTracker)>($stack77, problems, $stack78, $stack79, $stack80, $r5);

        goto label3;

     label3:
        m#10 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $stack32 = interfaceinvoke $u0.<java.util.Map: java.lang.Object get(java.lang.Object)>(m#10);

        existing = (org.apache.maven.model.Repository) $stack32;

        if existing == null goto label4;

        errOn30 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 30);

        $stack37 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack38 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id");

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>();

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack44 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be unique: ");

        $stack45 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $stack46 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack45);

        $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $stack48 = virtualinvoke existing.<org.apache.maven.model.Repository: java.lang.String getUrl()>();

        $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48);

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $stack51 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getUrl()>();

        $stack52 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack51);

        $stack53 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = (org.apache.maven.model.InputLocationTracker) repository;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, errOn30, $stack37, $stack41, null, $stack53, $r6);

        goto label5;

     label4:
        interfaceinvoke $u0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(m#10, repository);

     label5:
        goto label1;

     label6:
        return;
    }

    private void validate20EffectiveRepository(org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.Repository, java.lang.String, org.apache.maven.model.building.ModelBuildingRequest)
    {
        org.apache.maven.model.Repository repository;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblem$Severity errOn31, $stack18;
        DefaultModelValidator this;
        java.lang.String prefix, $stack9, $stack11, $stack12, $stack14, $stack15, $stack22, $stack23, $stack28;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Version $stack8, $stack19, $stack25;
        boolean $stack13, $stack16;
        java.lang.StringBuilder $stack20, $stack21, $stack26, $stack27, $u0, $u1;
        org.apache.maven.model.validation.DefaultModelValidator $r0;
        org.apache.maven.model.InputLocationTracker $r1, $r2, $r3;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        repository := @parameter1: org.apache.maven.model.Repository;

        prefix := @parameter2: java.lang.String;

        request := @parameter3: org.apache.maven.model.building.ModelBuildingRequest;

        if repository == null goto label2;

        errOn31 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 31);

        $stack8 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack9 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) repository;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateBannedCharacters(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker,java.lang.String)>(prefix, "id", problems, errOn31, $stack8, $stack9, null, $r1, "\\/:\"<>|?*");

        $stack11 = "local";

        $stack12 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $stack13 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>($stack12);

        if $stack13 == 0 goto label1;

        $stack25 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack26 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("id");

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = (org.apache.maven.model.InputLocationTracker) repository;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, errOn31, $stack25, $stack28, null, "must not be \'local\', this identifier is reserved for the local repository, using it for other repositories will corrupt your repository metadata.", $r2);

     label1:
        $stack14 = "legacy";

        $stack15 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getLayout()>();

        $stack16 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>($stack15);

        if $stack16 == 0 goto label2;

        $stack18 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack19 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("layout");

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack23 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $r3 = (org.apache.maven.model.InputLocationTracker) repository;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack18, $stack19, $stack22, $stack23, "uses the unsupported value \'legacy\', artifact resolution might fail.", $r3);

     label2:
        return;
    }

    private void validate20RawResources(org.apache.maven.model.building.ModelProblemCollector, java.util.List, java.lang.String, org.apache.maven.model.building.ModelBuildingRequest)
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblem$Severity errOn30, $stack13;
        java.util.List resources;
        java.util.Iterator l6;
        boolean $stack10;
        java.lang.Object $stack11;
        org.apache.maven.model.Resource resource;
        DefaultModelValidator this;
        java.lang.String prefix, $stack15, $stack19, $stack20;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Version $stack14, $stack18;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r2;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        resources := @parameter1: java.util.List;

        prefix := @parameter2: java.lang.String;

        request := @parameter3: org.apache.maven.model.building.ModelBuildingRequest;

        errOn30 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 30);

        l6 = interfaceinvoke resources.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label2;

        $stack11 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        resource = (org.apache.maven.model.Resource) $stack11;

        $stack13 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack14 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack15 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getDirectory()>();

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) resource;

        specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "directory", problems, $stack13, $stack14, $stack15, null, $r1);

        $stack18 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack19 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getFiltering()>();

        $stack20 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getDirectory()>();

        $r2 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) resource;

        specialinvoke $r2.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateBoolean(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, "filtering", problems, errOn30, $stack18, $stack19, $stack20, $r3);

        goto label1;

     label2:
        return;
    }

    private boolean validateCoordinateId(java.lang.String, org.apache.maven.model.building.ModelProblemCollector, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        DefaultModelValidator this;
        java.lang.String fieldName, id;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.InputLocationTracker tracker;
        org.apache.maven.model.building.ModelProblem$Version $stack5;
        org.apache.maven.model.building.ModelProblem$Severity $stack6;
        boolean $stack7;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        fieldName := @parameter0: java.lang.String;

        problems := @parameter1: org.apache.maven.model.building.ModelProblemCollector;

        id := @parameter2: java.lang.String;

        tracker := @parameter3: org.apache.maven.model.InputLocationTracker;

        $stack6 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack5 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack7 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateCoordinateId(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>("", fieldName, problems, $stack6, $stack5, id, null, tracker);

        return $stack7;
    }

    private boolean validateCoordinateId(java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        DefaultModelValidator this;
        java.lang.String id, prefix, fieldName, sourceHint, $stack18, $stack23;
        java.util.Set $stack9, $stack13;
        boolean $stack10, $stack11, $stack12;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        java.lang.StringBuilder $stack16, $stack17, $stack20, $stack21, $stack22, $u0, $u1;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r1, $r2, $r3;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        fieldName := @parameter1: java.lang.String;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter3: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter4: org.apache.maven.model.building.ModelProblem$Version;

        id := @parameter5: java.lang.String;

        sourceHint := @parameter6: java.lang.String;

        tracker := @parameter7: org.apache.maven.model.InputLocationTracker;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack9 = $r0.<org.apache.maven.model.validation.DefaultModelValidator: java.util.Set validCoordinateIds>;

        $stack10 = interfaceinvoke $stack9.<java.util.Set: boolean contains(java.lang.Object)>(id);

        if $stack10 == 0 goto label1;

        return 1;

     label1:
        $r1 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack11 = specialinvoke $r1.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, fieldName, problems, severity, version, id, sourceHint, tracker);

        if $stack11 != 0 goto label2;

        return 0;

     label2:
        $r2 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack12 = specialinvoke $r2.<org.apache.maven.model.validation.DefaultModelValidator: boolean isValidCoordinateId(java.lang.String)>(id);

        if $stack12 != 0 goto label3;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with value \'");

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(id);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not match a valid coordinate id pattern.");

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack18, sourceHint, $stack23, tracker);

        return 0;

     label3:
        $r3 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack13 = $r3.<org.apache.maven.model.validation.DefaultModelValidator: java.util.Set validCoordinateIds>;

        interfaceinvoke $stack13.<java.util.Set: boolean add(java.lang.Object)>(id);

        return 1;
    }

    private boolean isValidCoordinateId(java.lang.String)
    {
        java.lang.String id;
        int $stack4, i;
        char c;
        DefaultModelValidator this;
        boolean $stack6;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        id := @parameter0: java.lang.String;

        i = 0;

     label1:
        $stack4 = virtualinvoke id.<java.lang.String: int length()>();

        if i >= $stack4 goto label3;

        c = virtualinvoke id.<java.lang.String: char charAt(int)>(i);

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack6 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean isValidCoordinateIdCharacter(char)>(c);

        if $stack6 != 0 goto label2;

        return 0;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isValidCoordinateIdCharacter(char)
    {
        char c;
        DefaultModelValidator this;
        boolean $stack2;

        this := @this: DefaultModelValidator;

        c := @parameter0: char;

        if c < 97 goto label1;

        if c <= 122 goto label4;

     label1:
        if c < 65 goto label2;

        if c <= 90 goto label4;

     label2:
        if c < 48 goto label3;

        if c <= 57 goto label4;

     label3:
        if c == 45 goto label4;

        if c == 95 goto label4;

        if c != 46 goto label5;

     label4:
        $stack2 = 1;

        goto label6;

     label5:
        $stack2 = 0;

     label6:
        return $stack2;
    }

    private boolean validateProfileId(java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        DefaultModelValidator this;
        java.lang.String id, prefix, fieldName, sourceHint, $stack18, $stack23;
        java.util.Set $stack9, $stack13;
        boolean $stack10, $stack11, $stack12;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        java.lang.StringBuilder $stack16, $stack17, $stack20, $stack21, $stack22, $u0, $u1;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r1, $r2, $r3;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        fieldName := @parameter1: java.lang.String;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter3: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter4: org.apache.maven.model.building.ModelProblem$Version;

        id := @parameter5: java.lang.String;

        sourceHint := @parameter6: java.lang.String;

        tracker := @parameter7: org.apache.maven.model.InputLocationTracker;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack9 = $r0.<org.apache.maven.model.validation.DefaultModelValidator: java.util.Set validProfileIds>;

        $stack10 = interfaceinvoke $stack9.<java.util.Set: boolean contains(java.lang.Object)>(id);

        if $stack10 == 0 goto label1;

        return 1;

     label1:
        $r1 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack11 = specialinvoke $r1.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, fieldName, problems, severity, version, id, sourceHint, tracker);

        if $stack11 != 0 goto label2;

        return 0;

     label2:
        $r2 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack12 = specialinvoke $r2.<org.apache.maven.model.validation.DefaultModelValidator: boolean isValidProfileId(java.lang.String)>(id);

        if $stack12 != 0 goto label3;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with value \'");

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(id);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not match a valid profile id pattern.");

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack18, sourceHint, $stack23, tracker);

        return 0;

     label3:
        $r3 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack13 = $r3.<org.apache.maven.model.validation.DefaultModelValidator: java.util.Set validProfileIds>;

        interfaceinvoke $stack13.<java.util.Set: boolean add(java.lang.Object)>(id);

        return 1;
    }

    private boolean isValidProfileId(java.lang.String)
    {
        java.lang.String id;
        char $stack2;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        id := @parameter0: java.lang.String;

        $stack2 = virtualinvoke id.<java.lang.String: char charAt(int)>(0);

        lookupswitch($stack2)
        {
            case 33: goto label1;
            case 43: goto label1;
            case 45: goto label1;
            case 63: goto label1;
            default: goto label2;
        };

     label1:
        return 0;

     label2:
        return 1;
    }

    private boolean validateCoordinateIdWithWildcards(java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        DefaultModelValidator this;
        java.lang.String prefix, fieldName, id, sourceHint, $stack14, $stack19;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        boolean $stack9, $stack10;
        java.lang.StringBuilder $stack12, $stack13, $stack16, $stack17, $stack18, $u0, $u1;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r1;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        fieldName := @parameter1: java.lang.String;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter3: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter4: org.apache.maven.model.building.ModelProblem$Version;

        id := @parameter5: java.lang.String;

        sourceHint := @parameter6: java.lang.String;

        tracker := @parameter7: org.apache.maven.model.InputLocationTracker;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack9 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, fieldName, problems, severity, version, id, sourceHint, tracker);

        if $stack9 != 0 goto label1;

        return 0;

     label1:
        $r1 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack10 = specialinvoke $r1.<org.apache.maven.model.validation.DefaultModelValidator: boolean isValidCoordinateIdWithWildCards(java.lang.String)>(id);

        if $stack10 != 0 goto label2;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with value \'");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(id);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not match a valid coordinate id pattern.");

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack14, sourceHint, $stack19, tracker);

        return 0;

     label2:
        return 1;
    }

    private boolean isValidCoordinateIdWithWildCards(java.lang.String)
    {
        java.lang.String id;
        int $stack4, i;
        char c;
        DefaultModelValidator this;
        boolean $stack6;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        id := @parameter0: java.lang.String;

        i = 0;

     label1:
        $stack4 = virtualinvoke id.<java.lang.String: int length()>();

        if i >= $stack4 goto label3;

        c = virtualinvoke id.<java.lang.String: char charAt(int)>(i);

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack6 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean isValidCoordinateIdWithWildCardCharacter(char)>(c);

        if $stack6 != 0 goto label2;

        return 0;

     label2:
        i = i + 1;

        goto label1;

     label3:
        return 1;
    }

    private boolean isValidCoordinateIdWithWildCardCharacter(char)
    {
        DefaultModelValidator this;
        char c;
        boolean $stack2, $stack3;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        c := @parameter0: char;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean isValidCoordinateIdCharacter(char)>(c);

        if $stack2 != 0 goto label1;

        if c == 63 goto label1;

        if c != 42 goto label2;

     label1:
        $stack3 = 1;

        goto label3;

     label2:
        $stack3 = 0;

     label3:
        return $stack3;
    }

    private boolean validateStringNoExpression(java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        DefaultModelValidator this;
        java.lang.String string, fieldName;
        boolean $stack7;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        fieldName := @parameter0: java.lang.String;

        problems := @parameter1: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter2: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter3: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter4: java.lang.String;

        tracker := @parameter5: org.apache.maven.model.InputLocationTracker;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack7 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean hasExpression(java.lang.String)>(string);

        if $stack7 != 0 goto label1;

        return 1;

     label1:
        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, fieldName, null, "contains an expression but should be a constant.", tracker);

        return 0;
    }

    private boolean validateVersionNoExpression(java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        DefaultModelValidator this;
        java.lang.String string, $stack10, $stack14, fieldName;
        boolean $stack8, $stack12, $stack15;
        java.util.regex.Pattern $stack9;
        java.util.regex.Matcher m;
        java.util.List $stack13;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        fieldName := @parameter0: java.lang.String;

        problems := @parameter1: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter2: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter3: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter4: java.lang.String;

        tracker := @parameter5: org.apache.maven.model.InputLocationTracker;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack8 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean hasExpression(java.lang.String)>(string);

        if $stack8 != 0 goto label1;

        return 1;

     label1:
        $stack9 = <org.apache.maven.model.validation.DefaultModelValidator: java.util.regex.Pattern EXPRESSION_NAME_PATTERN>;

        $stack10 = virtualinvoke string.<java.lang.String: java.lang.String trim()>();

        m = virtualinvoke $stack9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack10);

     label2:
        $stack12 = virtualinvoke m.<java.util.regex.Matcher: boolean find()>();

        if $stack12 == 0 goto label3;

        $stack13 = <org.apache.maven.model.validation.DefaultModelValidator: java.util.List CI_FRIENDLY_POSSIBLE_PROPERTY_NAMES>;

        $stack14 = virtualinvoke m.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $stack15 = interfaceinvoke $stack13.<java.util.List: boolean contains(java.lang.Object)>($stack14);

        if $stack15 != 0 goto label2;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, fieldName, null, "contains an expression but should be a constant.", tracker);

        return 0;

     label3:
        return 1;
    }

    private boolean hasExpression(java.lang.String)
    {
        java.lang.String value;
        boolean $stack2, $stack3;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        value := @parameter0: java.lang.String;

        if value == null goto label1;

        $stack2 = virtualinvoke value.<java.lang.String: boolean contains(java.lang.CharSequence)>("${");

        if $stack2 == 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    private boolean hasProjectExpression(java.lang.String)
    {
        java.lang.String value;
        boolean $stack2, $stack3;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        value := @parameter0: java.lang.String;

        if value == null goto label1;

        $stack2 = virtualinvoke value.<java.lang.String: boolean contains(java.lang.CharSequence)>("${project.");

        if $stack2 == 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    private boolean validateStringNotEmpty(java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        DefaultModelValidator this;
        java.lang.String fieldName, string;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        boolean $stack7;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        fieldName := @parameter0: java.lang.String;

        problems := @parameter1: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter2: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter3: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter4: java.lang.String;

        tracker := @parameter5: org.apache.maven.model.InputLocationTracker;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack7 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateStringNotEmpty(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>("", fieldName, problems, severity, version, string, null, tracker);

        return $stack7;
    }

    private boolean validateStringNotEmpty(java.lang.String, java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        DefaultModelValidator this;
        java.lang.String prefix, prefix2, fieldName, string, sourceHint, $stack16;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        boolean $stack10, $stack11;
        java.lang.StringBuilder $stack13, $stack14, $stack15, $u0;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        prefix2 := @parameter1: java.lang.String;

        fieldName := @parameter2: java.lang.String;

        problems := @parameter3: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter4: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter5: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter6: java.lang.String;

        sourceHint := @parameter7: java.lang.String;

        tracker := @parameter8: org.apache.maven.model.InputLocationTracker;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack10 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateNotNull(java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.Object,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, prefix2, fieldName, problems, severity, version, string, sourceHint, tracker);

        if $stack10 != 0 goto label1;

        return 0;

     label1:
        $stack11 = virtualinvoke string.<java.lang.String: boolean isEmpty()>();

        if $stack11 != 0 goto label2;

        return 1;

     label2:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack16, sourceHint, "is missing.", tracker);

        return 0;
    }

    private boolean validateStringNotEmpty(java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        DefaultModelValidator this;
        java.lang.String prefix, fieldName, string, sourceHint, $stack14;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        boolean $stack9;
        int $stack10;
        java.lang.StringBuilder $stack12, $stack13, $u0;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        fieldName := @parameter1: java.lang.String;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter3: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter4: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter5: java.lang.String;

        sourceHint := @parameter6: java.lang.String;

        tracker := @parameter7: org.apache.maven.model.InputLocationTracker;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack9 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateNotNull(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.Object,java.lang.String,org.apache.maven.model.InputLocationTracker)>(prefix, fieldName, problems, severity, version, string, sourceHint, tracker);

        if $stack9 != 0 goto label1;

        return 0;

     label1:
        $stack10 = virtualinvoke string.<java.lang.String: int length()>();

        if $stack10 <= 0 goto label2;

        return 1;

     label2:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack14, sourceHint, "is missing.", tracker);

        return 0;
    }

    private boolean validateNotNull(java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.Object, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        java.lang.Object object;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        java.lang.StringBuilder $stack9, $stack10, $stack11;
        java.lang.String prefix, fieldName, $stack12, sourceHint;
        org.apache.maven.model.InputLocationTracker tracker;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        fieldName := @parameter1: java.lang.String;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter3: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter4: org.apache.maven.model.building.ModelProblem$Version;

        object := @parameter5: java.lang.Object;

        sourceHint := @parameter6: java.lang.String;

        tracker := @parameter7: org.apache.maven.model.InputLocationTracker;

        if object == null goto label1;

        return 1;

     label1:
        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack12, sourceHint, "is missing.", tracker);

        return 0;
    }

    private boolean validateNotNull(java.lang.String, java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.Object, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        java.lang.Object object;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        java.lang.StringBuilder $stack10, $stack11, $stack12, $stack13;
        java.lang.String prefix, prefix2, fieldName, $stack14, sourceHint;
        org.apache.maven.model.InputLocationTracker tracker;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        prefix2 := @parameter1: java.lang.String;

        fieldName := @parameter2: java.lang.String;

        problems := @parameter3: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter4: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter5: org.apache.maven.model.building.ModelProblem$Version;

        object := @parameter6: java.lang.Object;

        sourceHint := @parameter7: java.lang.String;

        tracker := @parameter8: org.apache.maven.model.InputLocationTracker;

        if object == null goto label1;

        return 1;

     label1:
        $stack10 = new java.lang.StringBuilder;

        specialinvoke $stack10.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix2);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack14, sourceHint, "is missing.", tracker);

        return 0;
    }

    private boolean validateBoolean(java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        java.lang.String string, $stack10, $stack12, prefix, fieldName, $stack17, sourceHint, $stack22;
        int $stack9;
        boolean $stack11, $stack13;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        java.lang.StringBuilder $stack14, $stack15, $stack16, $stack18, $stack19, $stack20, $stack21;
        org.apache.maven.model.InputLocationTracker tracker;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        fieldName := @parameter1: java.lang.String;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter3: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter4: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter5: java.lang.String;

        sourceHint := @parameter6: java.lang.String;

        tracker := @parameter7: org.apache.maven.model.InputLocationTracker;

        if string == null goto label1;

        $stack9 = virtualinvoke string.<java.lang.String: int length()>();

        if $stack9 > 0 goto label2;

     label1:
        return 1;

     label2:
        $stack10 = "true";

        $stack11 = virtualinvoke $stack10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(string);

        if $stack11 != 0 goto label3;

        $stack12 = "false";

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(string);

        if $stack13 == 0 goto label4;

     label3:
        return 1;

     label4:
        $stack14 = new java.lang.StringBuilder;

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>();

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack18 = new java.lang.StringBuilder;

        specialinvoke $stack18.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be \'true\' or \'false\' but is \'");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(string);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack17, sourceHint, $stack22, tracker);

        return 0;
    }

    private transient boolean validateEnum(java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker, java.lang.String[])
    {
        java.lang.String string, prefix, fieldName, $stack17, sourceHint, $stack24;
        int $stack11;
        java.lang.String[] validValues;
        java.util.List values;
        boolean $stack13;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        java.lang.StringBuilder $stack14, $stack15, $stack16, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23;
        org.apache.maven.model.InputLocationTracker tracker;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        fieldName := @parameter1: java.lang.String;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter3: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter4: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter5: java.lang.String;

        sourceHint := @parameter6: java.lang.String;

        tracker := @parameter7: org.apache.maven.model.InputLocationTracker;

        validValues := @parameter8: java.lang.String[];

        if string == null goto label1;

        $stack11 = virtualinvoke string.<java.lang.String: int length()>();

        if $stack11 > 0 goto label2;

     label1:
        return 1;

     label2:
        values = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(validValues);

        $stack13 = interfaceinvoke values.<java.util.List: boolean contains(java.lang.Object)>(string);

        if $stack13 == 0 goto label3;

        return 1;

     label3:
        $stack14 = new java.lang.StringBuilder;

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>();

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack18 = new java.lang.StringBuilder;

        specialinvoke $stack18.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be one of ");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(values);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is \'");

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(string);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack17, sourceHint, $stack24, tracker);

        return 0;
    }

    private transient boolean validateModelVersion(org.apache.maven.model.building.ModelProblemCollector, java.lang.String, org.apache.maven.model.InputLocationTracker, java.lang.String[])
    {
        java.lang.String string, $stack26, $stack37, $stack49, validValue;
        int $stack13, l9, comparison, l10;
        java.lang.String[] validVersions;
        java.util.List values;
        boolean $stack15, newerThanAll, olderThanAll, $stack54, $stack53;
        org.apache.maven.model.building.ModelProblemCollector problems;
        java.lang.StringBuilder $stack16, $stack21, $stack22, $stack23, $stack24, $stack25, $stack27, $stack32, $stack33, $stack34, $stack35, $stack36, $stack39, $stack44, $stack45, $stack46, $stack47, $stack48;
        org.apache.maven.model.building.ModelProblem$Severity $stack17, $stack28, $stack40;
        org.apache.maven.model.building.ModelProblem$Version $stack18, $stack29, $stack41;
        org.apache.maven.model.InputLocationTracker tracker;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        string := @parameter1: java.lang.String;

        tracker := @parameter2: org.apache.maven.model.InputLocationTracker;

        validVersions := @parameter3: java.lang.String[];

        if string == null goto label01;

        $stack13 = virtualinvoke string.<java.lang.String: int length()>();

        if $stack13 > 0 goto label02;

     label01:
        return 1;

     label02:
        values = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(validVersions);

        $stack15 = interfaceinvoke values.<java.util.List: boolean contains(java.lang.Object)>(string);

        if $stack15 == 0 goto label03;

        return 1;

     label03:
        newerThanAll = 1;

        olderThanAll = 1;

        l9 = lengthof validVersions;

        l10 = 0;

     label04:
        if l10 >= l9 goto label09;

        validValue = validVersions[l10];

        comparison = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: int compareModelVersions(java.lang.String,java.lang.String)>(validValue, string);

        if newerThanAll == 0 goto label05;

        if comparison >= 0 goto label05;

        $stack54 = 1;

        goto label06;

     label05:
        $stack54 = 0;

     label06:
        newerThanAll = $stack54;

        if olderThanAll == 0 goto label07;

        if comparison <= 0 goto label07;

        $stack53 = 1;

        goto label08;

     label07:
        $stack53 = 0;

     label08:
        olderThanAll = $stack53;

        l10 = l10 + 1;

        goto label04;

     label09:
        if newerThanAll == 0 goto label10;

        $stack40 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack41 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack39 = new java.lang.StringBuilder;

        specialinvoke $stack39.<java.lang.StringBuilder: void <init>()>();

        $stack44 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("of \'");

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(string);

        $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is newer than the versions supported by this version of Maven: ");

        $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(values);

        $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Building this project requires a newer version of Maven.");

        $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack40, $stack41, "modelVersion", null, $stack49, tracker);

        goto label12;

     label10:
        if olderThanAll == 0 goto label11;

        $stack28 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity FATAL>;

        $stack29 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack27 = new java.lang.StringBuilder;

        specialinvoke $stack27.<java.lang.StringBuilder: void <init>()>();

        $stack32 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("of \'");

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(string);

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is older than the versions supported by this version of Maven: ");

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(values);

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Building this project requires an older version of Maven.");

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack28, $stack29, "modelVersion", null, $stack37, tracker);

        goto label12;

     label11:
        $stack17 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        $stack18 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $stack16 = new java.lang.StringBuilder;

        specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be one of ");

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(values);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but is \'");

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(string);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, $stack17, $stack18, "modelVersion", null, $stack26, tracker);

     label12:
        return 0;
    }

    private static int compareModelVersions(java.lang.String, java.lang.String)
    {
        java.lang.String first, second, $stack16, $stack18;
        java.lang.String[] firstSegments, secondSegments;
        int $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, result, i;
        java.lang.Long $stack17, $stack19;
        byte $stack15;

        first := @parameter0: java.lang.String;

        second := @parameter1: java.lang.String;

        firstSegments = staticinvoke <org.codehaus.plexus.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(first, ".");

        secondSegments = staticinvoke <org.codehaus.plexus.util.StringUtils: java.lang.String[] split(java.lang.String,java.lang.String)>(second, ".");

        i = 0;

     label1:
        $stack9 = lengthof firstSegments;

        $stack8 = lengthof secondSegments;

        $stack10 = staticinvoke <java.lang.Math: int min(int,int)>($stack9, $stack8);

        if i >= $stack10 goto label3;

        $stack16 = firstSegments[i];

        $stack17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($stack16);

        $stack18 = secondSegments[i];

        $stack19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($stack18);

        result = virtualinvoke $stack17.<java.lang.Long: int compareTo(java.lang.Long)>($stack19);

        if result == 0 goto label2;

        return result;

     label2:
        i = i + 1;

        goto label1;

     label3:
        $stack12 = lengthof firstSegments;

        $stack11 = lengthof secondSegments;

        if $stack12 != $stack11 goto label4;

        return 0;

     label4:
        $stack14 = lengthof firstSegments;

        $stack13 = lengthof secondSegments;

        if $stack14 <= $stack13 goto label5;

        $stack15 = -1;

        goto label6;

     label5:
        $stack15 = 1;

     label6:
        return $stack15;
    }

    private boolean validateBannedCharacters(java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker, java.lang.String)
    {
        java.lang.String string, banned, prefix, fieldName, $stack19, sourceHint, $stack26;
        int $stack11, $stack14, i;
        char $stack13, $stack24;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        java.lang.StringBuilder $stack16, $stack17, $stack18, $stack20, $stack21, $stack22, $stack23, $stack25;
        org.apache.maven.model.InputLocationTracker tracker;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        fieldName := @parameter1: java.lang.String;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter3: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter4: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter5: java.lang.String;

        sourceHint := @parameter6: java.lang.String;

        tracker := @parameter7: org.apache.maven.model.InputLocationTracker;

        banned := @parameter8: java.lang.String;

        if string == null goto label3;

        $stack11 = virtualinvoke string.<java.lang.String: int length()>();

        i = $stack11 - 1;

     label1:
        if i < 0 goto label3;

        $stack13 = virtualinvoke string.<java.lang.String: char charAt(int)>(i);

        $stack14 = virtualinvoke banned.<java.lang.String: int indexOf(int)>($stack13);

        if $stack14 < 0 goto label2;

        $stack16 = new java.lang.StringBuilder;

        specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack20 = new java.lang.StringBuilder;

        specialinvoke $stack20.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must not contain any of these characters ");

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(banned);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but found ");

        $stack24 = virtualinvoke string.<java.lang.String: char charAt(int)>(i);

        $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack19, sourceHint, $stack26, tracker);

        return 0;

     label2:
        i = i + -1;

        goto label1;

     label3:
        return 1;
    }

    private boolean validateVersion(java.lang.String, java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        java.lang.String string, prefix, fieldName, sourceHint, $stack15, $stack20;
        int $stack9;
        DefaultModelValidator this;
        boolean $stack10, $stack11;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        java.lang.StringBuilder $stack13, $stack14, $stack17, $stack18, $stack19, $u0, $u1;
        org.apache.maven.model.validation.DefaultModelValidator $r0, $r1;

        this := @this: DefaultModelValidator;

        prefix := @parameter0: java.lang.String;

        fieldName := @parameter1: java.lang.String;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter3: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter4: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter5: java.lang.String;

        sourceHint := @parameter6: java.lang.String;

        tracker := @parameter7: org.apache.maven.model.InputLocationTracker;

        if string == null goto label1;

        $stack9 = virtualinvoke string.<java.lang.String: int length()>();

        if $stack9 > 0 goto label2;

     label1:
        return 1;

     label2:
        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack10 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean hasExpression(java.lang.String)>(string);

        if $stack10 == 0 goto label3;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be a valid version but is \'");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(string);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, $stack15, sourceHint, $stack20, tracker);

        return 0;

     label3:
        $r1 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack11 = specialinvoke $r1.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateBannedCharacters(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker,java.lang.String)>(prefix, fieldName, problems, severity, version, string, sourceHint, tracker, "\\/:\"<>|?*");

        return $stack11;
    }

    private boolean validate20ProperSnapshotVersion(java.lang.String, org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        java.lang.String string, fieldName, sourceHint;
        int $stack8;
        boolean $stack9, $stack10;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        DefaultModelValidator this;

        this := @this: DefaultModelValidator;

        fieldName := @parameter0: java.lang.String;

        problems := @parameter1: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter2: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter3: org.apache.maven.model.building.ModelProblem$Version;

        string := @parameter4: java.lang.String;

        sourceHint := @parameter5: java.lang.String;

        tracker := @parameter6: org.apache.maven.model.InputLocationTracker;

        if string == null goto label1;

        $stack8 = virtualinvoke string.<java.lang.String: int length()>();

        if $stack8 > 0 goto label2;

     label1:
        return 1;

     label2:
        $stack9 = virtualinvoke string.<java.lang.String: boolean endsWith(java.lang.String)>("SNAPSHOT");

        if $stack9 == 0 goto label3;

        $stack10 = virtualinvoke string.<java.lang.String: boolean endsWith(java.lang.String)>("-SNAPSHOT");

        if $stack10 != 0 goto label3;

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, severity, version, fieldName, sourceHint, "uses an unsupported snapshot version format, should be \'*-SNAPSHOT\' instead.", tracker);

        return 0;

     label3:
        return 1;
    }

    private boolean validate20PluginVersion(java.lang.String, org.apache.maven.model.building.ModelProblemCollector, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker, org.apache.maven.model.building.ModelBuildingRequest)
    {
        java.lang.String string, fieldName, sourceHint, $stack18, $stack29, $stack17;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblem$Severity errOn30;
        DefaultModelValidator this;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.InputLocationTracker tracker;
        org.apache.maven.model.building.ModelProblem$Version $stack9, $stack13;
        boolean $stack10, $stack19, $stack30;
        int $stack11;
        java.lang.StringBuilder $stack14, $stack15, $stack16, $u0;
        org.apache.maven.model.validation.DefaultModelValidator $r0;

        this := @this: DefaultModelValidator;

        fieldName := @parameter0: java.lang.String;

        problems := @parameter1: org.apache.maven.model.building.ModelProblemCollector;

        string := @parameter2: java.lang.String;

        sourceHint := @parameter3: java.lang.String;

        tracker := @parameter4: org.apache.maven.model.InputLocationTracker;

        request := @parameter5: org.apache.maven.model.building.ModelBuildingRequest;

        if string != null goto label1;

        return 1;

     label1:
        errOn30 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest,int)>(request, 30);

        $stack9 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $r0 = (org.apache.maven.model.validation.DefaultModelValidator) this;

        $stack10 = specialinvoke $r0.<org.apache.maven.model.validation.DefaultModelValidator: boolean validateVersion(java.lang.String,java.lang.String,org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>("", fieldName, problems, errOn30, $stack9, string, sourceHint, tracker);

        if $stack10 != 0 goto label2;

        return 0;

     label2:
        $stack11 = virtualinvoke string.<java.lang.String: int length()>();

        if $stack11 <= 0 goto label3;

        $stack18 = "RELEASE";

        $stack19 = virtualinvoke $stack18.<java.lang.String: boolean equals(java.lang.Object)>(string);

        if $stack19 != 0 goto label3;

        $stack29 = "LATEST";

        $stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>(string);

        if $stack30 == 0 goto label4;

     label3:
        $stack13 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version V20>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be a valid version but is \'");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(string);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'.");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: void addViolation(org.apache.maven.model.building.ModelProblemCollector,org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.model.InputLocationTracker)>(problems, errOn30, $stack13, fieldName, sourceHint, $stack17, tracker);

        return 0;

     label4:
        return 1;
    }

    private static void addViolation(org.apache.maven.model.building.ModelProblemCollector, org.apache.maven.model.building.ModelProblem$Severity, org.apache.maven.model.building.ModelProblem$Version, java.lang.String, java.lang.String, java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        java.lang.StringBuilder $stack8, $stack9, $stack10, $stack12, $stack19;
        java.lang.String fieldName, sourceHint, message, $stack15;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack14, $stack16, $stack18;
        org.apache.maven.model.building.ModelProblem$Severity severity;
        org.apache.maven.model.building.ModelProblem$Version version;
        org.apache.maven.model.InputLocationTracker tracker;
        org.apache.maven.model.InputLocation $stack17;

        problems := @parameter0: org.apache.maven.model.building.ModelProblemCollector;

        severity := @parameter1: org.apache.maven.model.building.ModelProblem$Severity;

        version := @parameter2: org.apache.maven.model.building.ModelProblem$Version;

        fieldName := @parameter3: java.lang.String;

        sourceHint := @parameter4: java.lang.String;

        message := @parameter5: java.lang.String;

        tracker := @parameter6: org.apache.maven.model.InputLocationTracker;

        $stack8 = new java.lang.StringBuilder;

        specialinvoke $stack8.<java.lang.StringBuilder: void <init>(int)>(256);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        if sourceHint == null goto label1;

        $stack19 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(sourceHint);

     label1:
        $stack12 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack14 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        specialinvoke $stack14.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>(severity, version);

        $stack15 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack16 = virtualinvoke $stack14.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>($stack15);

        $stack17 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.InputLocation getLocation(java.lang.String,org.apache.maven.model.InputLocationTracker)>(fieldName, tracker);

        $stack18 = virtualinvoke $stack16.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack17);

        interfaceinvoke problems.<org.apache.maven.model.building.ModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack18);

        return;
    }

    private static org.apache.maven.model.InputLocation getLocation(java.lang.String, org.apache.maven.model.InputLocationTracker)
    {
        org.apache.maven.model.InputLocationTracker tracker;
        int idx, $stack12, $stack13, $stack14, $stack15, $stack21;
        boolean $stack9;
        java.lang.String $stack17, fieldName;
        java.lang.NumberFormatException $stack25;
        org.apache.maven.model.InputLocation location;
        java.io.Serializable key;

        fieldName := @parameter0: java.lang.String;

        tracker := @parameter1: org.apache.maven.model.InputLocationTracker;

        location = null;

        if tracker == null goto label7;

        if fieldName == null goto label6;

        key = fieldName;

        idx = virtualinvoke fieldName.<java.lang.String: int lastIndexOf(int)>(46);

        if idx < 0 goto label1;

        $stack21 = idx + 1;

        fieldName = virtualinvoke fieldName.<java.lang.String: java.lang.String substring(int)>($stack21);

        key = fieldName;

     label1:
        $stack9 = virtualinvoke fieldName.<java.lang.String: boolean endsWith(java.lang.String)>("]");

        if $stack9 == 0 goto label5;

        $stack12 = virtualinvoke fieldName.<java.lang.String: int lastIndexOf(int)>(91);

        $stack13 = $stack12 + 1;

        $stack14 = virtualinvoke fieldName.<java.lang.String: int length()>();

        $stack15 = $stack14 - 1;

        key = virtualinvoke fieldName.<java.lang.String: java.lang.String substring(int,int)>($stack13, $stack15);

     label2:
        $stack17 = virtualinvoke key.<java.lang.Object: java.lang.String toString()>();

        key = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($stack17);

     label3:
        goto label5;

     label4:
        $stack25 := @caughtexception;

     label5:
        location = interfaceinvoke tracker.<org.apache.maven.model.InputLocationTracker: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>(key);

     label6:
        if location != null goto label7;

        location = interfaceinvoke tracker.<org.apache.maven.model.InputLocationTracker: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

     label7:
        return location;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    private static boolean equals(java.lang.String, java.lang.String)
    {
        java.lang.String s1, $stack2, s2, $stack3;
        boolean $stack4;

        s1 := @parameter0: java.lang.String;

        s2 := @parameter1: java.lang.String;

        $stack2 = staticinvoke <org.codehaus.plexus.util.StringUtils: java.lang.String clean(java.lang.String)>(s1);

        $stack3 = staticinvoke <org.codehaus.plexus.util.StringUtils: java.lang.String clean(java.lang.String)>(s2);

        $stack4 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>($stack3);

        return $stack4;
    }

    private static org.apache.maven.model.building.ModelProblem$Severity getSeverity(org.apache.maven.model.building.ModelBuildingRequest, int)
    {
        org.apache.maven.model.building.ModelBuildingRequest request;
        int $stack2, errorThreshold;
        org.apache.maven.model.building.ModelProblem$Severity $stack3;

        request := @parameter0: org.apache.maven.model.building.ModelBuildingRequest;

        errorThreshold := @parameter1: int;

        $stack2 = interfaceinvoke request.<org.apache.maven.model.building.ModelBuildingRequest: int getValidationLevel()>();

        $stack3 = staticinvoke <org.apache.maven.model.validation.DefaultModelValidator: org.apache.maven.model.building.ModelProblem$Severity getSeverity(int,int)>($stack2, errorThreshold);

        return $stack3;
    }

    private static org.apache.maven.model.building.ModelProblem$Severity getSeverity(int, int)
    {
        int validationLevel, errorThreshold;
        org.apache.maven.model.building.ModelProblem$Severity $stack2, $stack3;

        validationLevel := @parameter0: int;

        errorThreshold := @parameter1: int;

        if validationLevel >= errorThreshold goto label1;

        $stack3 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        return $stack3;

     label1:
        $stack2 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity ERROR>;

        return $stack2;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $stack0;
        java.lang.String[] $stack1;
        java.util.List $stack2;

        <DefaultModelValidator: java.lang.String EMPTY> = "";

        <DefaultModelValidator: java.lang.String ILLEGAL_REPO_ID_CHARS> = "\\/:\"<>|?*";

        <DefaultModelValidator: java.lang.String ILLEGAL_VERSION_CHARS> = "\\/:\"<>|?*";

        <DefaultModelValidator: java.lang.String ILLEGAL_FS_CHARS> = "\\/:\"<>|?*";

        $stack0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\$\\{(.+?)\\}");

        <org.apache.maven.model.validation.DefaultModelValidator: java.util.regex.Pattern EXPRESSION_NAME_PATTERN> = $stack0;

        $stack1 = newarray (java.lang.String)[3];

        $stack1[0] = "revision";

        $stack1[1] = "changelist";

        $stack1[2] = "sha1";

        $stack2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack1);

        <org.apache.maven.model.validation.DefaultModelValidator: java.util.List CI_FRIENDLY_POSSIBLE_PROPERTY_NAMES> = $stack2;

        return;
    }
}
