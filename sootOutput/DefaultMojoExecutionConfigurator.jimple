public class DefaultMojoExecutionConfigurator extends java.lang.Object implements org.apache.maven.lifecycle.MojoExecutionConfigurator
{

    public void <init>()
    {
        DefaultMojoExecutionConfigurator this;

        this := @this: DefaultMojoExecutionConfigurator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void configure(org.apache.maven.project.MavenProject, org.apache.maven.plugin.MojoExecution, boolean)
    {
        org.apache.maven.plugin.MojoExecution mojoExecution;
        java.lang.String g, a, $stack14;
        DefaultMojoExecutionConfigurator this;
        org.apache.maven.project.MavenProject project;
        java.util.List $stack12, $stack15, $stack30;
        org.apache.maven.model.PluginExecution pluginExecution;
        boolean allowPluginLevelConfig;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack17, pomConfiguration, $stack19, mojoConfiguration, $u0;
        java.lang.Object $stack24, $stack26;
        org.apache.maven.model.PluginManagement $stack27, $stack29;
        org.apache.maven.model.Plugin plugin;
        org.apache.maven.lifecycle.internal.DefaultMojoExecutionConfigurator $r0, $r1, $r2;

        this := @this: DefaultMojoExecutionConfigurator;

        project := @parameter0: org.apache.maven.project.MavenProject;

        mojoExecution := @parameter1: org.apache.maven.plugin.MojoExecution;

        allowPluginLevelConfig := @parameter2: boolean;

        g = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.lang.String getGroupId()>();

        a = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.lang.String getArtifactId()>();

        $stack12 = virtualinvoke project.<org.apache.maven.project.MavenProject: java.util.List getBuildPlugins()>();

        $r0 = (org.apache.maven.lifecycle.internal.DefaultMojoExecutionConfigurator) this;

        plugin = specialinvoke $r0.<org.apache.maven.lifecycle.internal.DefaultMojoExecutionConfigurator: org.apache.maven.model.Plugin findPlugin(java.lang.String,java.lang.String,java.util.Collection)>(g, a, $stack12);

        if plugin != null goto label1;

        $stack27 = virtualinvoke project.<org.apache.maven.project.MavenProject: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if $stack27 == null goto label1;

        $stack29 = virtualinvoke project.<org.apache.maven.project.MavenProject: org.apache.maven.model.PluginManagement getPluginManagement()>();

        $stack30 = virtualinvoke $stack29.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        $r1 = (org.apache.maven.lifecycle.internal.DefaultMojoExecutionConfigurator) this;

        plugin = specialinvoke $r1.<org.apache.maven.lifecycle.internal.DefaultMojoExecutionConfigurator: org.apache.maven.model.Plugin findPlugin(java.lang.String,java.lang.String,java.util.Collection)>(g, a, $stack30);

     label1:
        if plugin == null goto label6;

        $stack14 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.lang.String getExecutionId()>();

        $stack15 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        $r2 = (org.apache.maven.lifecycle.internal.DefaultMojoExecutionConfigurator) this;

        pluginExecution = specialinvoke $r2.<org.apache.maven.lifecycle.internal.DefaultMojoExecutionConfigurator: org.apache.maven.model.PluginExecution findPluginExecution(java.lang.String,java.util.Collection)>($stack14, $stack15);

        pomConfiguration = null;

        if pluginExecution == null goto label2;

        $stack26 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.Object getConfiguration()>();

        pomConfiguration = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack26;

        goto label3;

     label2:
        if allowPluginLevelConfig == 0 goto label3;

        $stack24 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getConfiguration()>();

        pomConfiguration = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack24;

     label3:
        if pomConfiguration == null goto label4;

        $u0 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        $stack19 = $u0;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(org.codehaus.plexus.util.xml.Xpp3Dom)>(pomConfiguration);

        goto label5;

     label4:
        $stack19 = null;

     label5:
        $stack17 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: org.codehaus.plexus.util.xml.Xpp3Dom getConfiguration()>();

        mojoConfiguration = staticinvoke <org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom mergeXpp3Dom(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.Xpp3Dom)>($stack17, $stack19);

        virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: void setConfiguration(org.codehaus.plexus.util.xml.Xpp3Dom)>(mojoConfiguration);

     label6:
        return;
    }

    private org.apache.maven.model.Plugin findPlugin(java.lang.String, java.lang.String, java.util.Collection)
    {
        java.util.Collection plugins;
        java.util.Iterator l4;
        boolean $stack7, $stack10, $stack13;
        java.lang.Object $stack8;
        org.apache.maven.model.Plugin plugin;
        java.lang.String artifactId, $stack9, groupId, $stack12;
        DefaultMojoExecutionConfigurator this;

        this := @this: DefaultMojoExecutionConfigurator;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        plugins := @parameter2: java.util.Collection;

        l4 = interfaceinvoke plugins.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack8 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack8;

        $stack9 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $stack10 = virtualinvoke artifactId.<java.lang.String: boolean equals(java.lang.Object)>($stack9);

        if $stack10 == 0 goto label2;

        $stack12 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack13 = virtualinvoke groupId.<java.lang.String: boolean equals(java.lang.Object)>($stack12);

        if $stack13 == 0 goto label2;

        return plugin;

     label2:
        goto label1;

     label3:
        return null;
    }

    private org.apache.maven.model.PluginExecution findPluginExecution(java.lang.String, java.util.Collection)
    {
        java.lang.String executionId, $stack10;
        boolean $stack5, $stack7, $stack11;
        java.util.Collection executions;
        java.util.Iterator l3;
        java.lang.Object $stack9;
        org.apache.maven.model.PluginExecution execution;
        DefaultMojoExecutionConfigurator this;

        this := @this: DefaultMojoExecutionConfigurator;

        executionId := @parameter0: java.lang.String;

        executions := @parameter1: java.util.Collection;

        $stack5 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(executionId);

        if $stack5 == 0 goto label3;

        l3 = interfaceinvoke executions.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack9 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        execution = (org.apache.maven.model.PluginExecution) $stack9;

        $stack10 = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        $stack11 = virtualinvoke executionId.<java.lang.String: boolean equals(java.lang.Object)>($stack10);

        if $stack11 == 0 goto label2;

        return execution;

     label2:
        goto label1;

     label3:
        return null;
    }
}
