public class DefaultPathTranslatorTest extends java.lang.Object
{

    public void <init>()
    {
        DefaultPathTranslatorTest this;

        this := @this: DefaultPathTranslatorTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testAlignToBasedirWhereBasedirExpressionIsTheCompleteValue()
    {
        java.io.File $stack3, basedir;
        java.lang.String $stack4, aligned, $stack8;
        org.apache.maven.project.path.DefaultPathTranslator $stack6;
        DefaultPathTranslatorTest this;

        this := @this: DefaultPathTranslatorTest;

        $stack3 = new java.io.File;

        $stack4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        specialinvoke $stack3.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack4, "test");

        basedir = virtualinvoke $stack3.<java.io.File: java.io.File getAbsoluteFile()>();

        $stack6 = new org.apache.maven.project.path.DefaultPathTranslator;

        specialinvoke $stack6.<org.apache.maven.project.path.DefaultPathTranslator: void <init>()>();

        aligned = virtualinvoke $stack6.<org.apache.maven.project.path.DefaultPathTranslator: java.lang.String alignToBaseDirectory(java.lang.String,java.io.File)>("${basedir}", basedir);

        $stack8 = virtualinvoke basedir.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack8, aligned);

        return;
    }

    public void testAlignToBasedirWhereBasedirExpressionIsTheValuePrefix()
    {
        java.io.File $stack3, basedir, $stack8;
        java.lang.String $stack4, aligned, $stack9;
        org.apache.maven.project.path.DefaultPathTranslator $stack6;
        DefaultPathTranslatorTest this;

        this := @this: DefaultPathTranslatorTest;

        $stack3 = new java.io.File;

        $stack4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        specialinvoke $stack3.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack4, "test");

        basedir = virtualinvoke $stack3.<java.io.File: java.io.File getAbsoluteFile()>();

        $stack6 = new org.apache.maven.project.path.DefaultPathTranslator;

        specialinvoke $stack6.<org.apache.maven.project.path.DefaultPathTranslator: void <init>()>();

        aligned = virtualinvoke $stack6.<org.apache.maven.project.path.DefaultPathTranslator: java.lang.String alignToBaseDirectory(java.lang.String,java.io.File)>("${basedir}/dir", basedir);

        $stack8 = new java.io.File;

        specialinvoke $stack8.<java.io.File: void <init>(java.io.File,java.lang.String)>(basedir, "dir");

        $stack9 = virtualinvoke $stack8.<java.io.File: java.lang.String getAbsolutePath()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack9, aligned);

        return;
    }

    public void testUnalignToBasedirWherePathEqualsBasedir()
    {
        java.io.File $stack3, basedir;
        java.lang.String $stack4, $stack7, unaligned;
        org.apache.maven.project.path.DefaultPathTranslator $stack6;
        DefaultPathTranslatorTest this;

        this := @this: DefaultPathTranslatorTest;

        $stack3 = new java.io.File;

        $stack4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");

        specialinvoke $stack3.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack4, "test");

        basedir = virtualinvoke $stack3.<java.io.File: java.io.File getAbsoluteFile()>();

        $stack6 = new org.apache.maven.project.path.DefaultPathTranslator;

        specialinvoke $stack6.<org.apache.maven.project.path.DefaultPathTranslator: void <init>()>();

        $stack7 = virtualinvoke basedir.<java.io.File: java.lang.String getAbsolutePath()>();

        unaligned = virtualinvoke $stack6.<org.apache.maven.project.path.DefaultPathTranslator: java.lang.String unalignFromBaseDirectory(java.lang.String,java.io.File)>($stack7, basedir);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>(".", unaligned);

        return;
    }
}
