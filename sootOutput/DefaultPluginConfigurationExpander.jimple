public class DefaultPluginConfigurationExpander extends java.lang.Object implements org.apache.maven.model.plugin.PluginConfigurationExpander
{

    public void <init>()
    {
        DefaultPluginConfigurationExpander this;

        this := @this: DefaultPluginConfigurationExpander;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void expandPluginConfiguration(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        org.apache.maven.model.Model model;
        org.apache.maven.model.Build build;
        DefaultPluginConfigurationExpander this;
        java.util.List $stack7, $stack9;
        org.apache.maven.model.PluginManagement pluginManagement;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.plugin.DefaultPluginConfigurationExpander $r0, $r1;

        this := @this: DefaultPluginConfigurationExpander;

        model := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        build = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if build == null goto label1;

        $stack7 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        $r0 = (org.apache.maven.model.plugin.DefaultPluginConfigurationExpander) this;

        specialinvoke $r0.<org.apache.maven.model.plugin.DefaultPluginConfigurationExpander: void expand(java.util.List)>($stack7);

        pluginManagement = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if pluginManagement == null goto label1;

        $stack9 = virtualinvoke pluginManagement.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        $r1 = (org.apache.maven.model.plugin.DefaultPluginConfigurationExpander) this;

        specialinvoke $r1.<org.apache.maven.model.plugin.DefaultPluginConfigurationExpander: void expand(java.util.List)>($stack9);

     label1:
        return;
    }

    private void expand(java.util.List)
    {
        java.util.List plugins, $stack13;
        java.util.Iterator l2, l5;
        boolean $stack9, $stack15;
        java.lang.Object $stack10, $stack11, $stack16, $stack17;
        org.apache.maven.model.Plugin plugin;
        org.codehaus.plexus.util.xml.Xpp3Dom pluginConfiguration, $stack18, executionConfiguration;
        org.apache.maven.model.PluginExecution execution;
        DefaultPluginConfigurationExpander this;

        this := @this: DefaultPluginConfigurationExpander;

        plugins := @parameter0: java.util.List;

        l2 = interfaceinvoke plugins.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label4;

        $stack10 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack10;

        $stack11 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getConfiguration()>();

        pluginConfiguration = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack11;

        if pluginConfiguration == null goto label3;

        $stack13 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        l5 = interfaceinvoke $stack13.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack15 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack15 == 0 goto label3;

        $stack16 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        execution = (org.apache.maven.model.PluginExecution) $stack16;

        $stack17 = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.lang.Object getConfiguration()>();

        executionConfiguration = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack17;

        $stack18 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        specialinvoke $stack18.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(org.codehaus.plexus.util.xml.Xpp3Dom)>(pluginConfiguration);

        executionConfiguration = staticinvoke <org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom mergeXpp3Dom(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.Xpp3Dom)>(executionConfiguration, $stack18);

        virtualinvoke execution.<org.apache.maven.model.PluginExecution: void setConfiguration(java.lang.Object)>(executionConfiguration);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }
}
