public class DefaultProfileInjector extends java.lang.Object implements org.apache.maven.model.profile.ProfileInjector
{
    private org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger merger;

    public void <init>()
    {
        DefaultProfileInjector this;
        org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger $u0;
        org.apache.maven.model.profile.DefaultProfileInjector $r0;

        this := @this: DefaultProfileInjector;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger;

        specialinvoke $u0.<org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger: void <init>()>();

        $r0 = (org.apache.maven.model.profile.DefaultProfileInjector) this;

        $r0.<org.apache.maven.model.profile.DefaultProfileInjector: org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger merger> = $u0;

        return;
    }

    public void injectProfile(org.apache.maven.model.Model, org.apache.maven.model.Profile, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        org.apache.maven.model.Profile profile;
        DefaultProfileInjector this;
        org.apache.maven.model.Model model;
        org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger $stack5, $stack8;
        org.apache.maven.model.BuildBase $stack6, $stack10, $r4;
        org.apache.maven.model.Build $stack7, $stack9, $u0;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.profile.DefaultProfileInjector $r0, $r3;
        org.apache.maven.model.ModelBase $r1, $r2;

        this := @this: DefaultProfileInjector;

        model := @parameter0: org.apache.maven.model.Model;

        profile := @parameter1: org.apache.maven.model.Profile;

        request := @parameter2: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter3: org.apache.maven.model.building.ModelProblemCollector;

        if profile == null goto label2;

        $r0 = (org.apache.maven.model.profile.DefaultProfileInjector) this;

        $stack5 = $r0.<org.apache.maven.model.profile.DefaultProfileInjector: org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger merger>;

        $r1 = (org.apache.maven.model.ModelBase) model;

        $r2 = (org.apache.maven.model.ModelBase) profile;

        virtualinvoke $stack5.<org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger: void mergeModelBase(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase)>($r1, $r2);

        $stack6 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.BuildBase getBuild()>();

        if $stack6 == null goto label2;

        $stack7 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if $stack7 != null goto label1;

        $u0 = new org.apache.maven.model.Build;

        specialinvoke $u0.<org.apache.maven.model.Build: void <init>()>();

        virtualinvoke model.<org.apache.maven.model.Model: void setBuild(org.apache.maven.model.Build)>($u0);

     label1:
        $r3 = (org.apache.maven.model.profile.DefaultProfileInjector) this;

        $stack8 = $r3.<org.apache.maven.model.profile.DefaultProfileInjector: org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger merger>;

        $stack9 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        $stack10 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.BuildBase getBuild()>();

        $r4 = (org.apache.maven.model.BuildBase) $stack9;

        virtualinvoke $stack8.<org.apache.maven.model.profile.DefaultProfileInjector$ProfileModelMerger: void mergeBuildBase(org.apache.maven.model.BuildBase,org.apache.maven.model.BuildBase)>($r4, $stack10);

     label2:
        return;
    }
}
