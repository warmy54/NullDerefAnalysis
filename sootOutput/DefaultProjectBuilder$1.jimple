class DefaultProjectBuilder$1 extends java.util.AbstractMap
{
    java.util.HashMap delegate;
    final org.apache.maven.model.DependencyManagement val$dependencyManagement;
    final org.apache.maven.project.DefaultProjectBuilder this$0;

    void <init>(org.apache.maven.project.DefaultProjectBuilder, org.apache.maven.model.DependencyManagement)
    {
        DefaultProjectBuilder$1 this;
        org.apache.maven.project.DefaultProjectBuilder this$0;
        org.apache.maven.model.DependencyManagement l2;
        org.apache.maven.project.DefaultProjectBuilder$1 $r0, $r1;

        this := @this: DefaultProjectBuilder$1;

        this$0 := @parameter0: org.apache.maven.project.DefaultProjectBuilder;

        l2 := @parameter1: org.apache.maven.model.DependencyManagement;

        $r0 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $r0.<org.apache.maven.project.DefaultProjectBuilder$1: org.apache.maven.project.DefaultProjectBuilder this$0> = this$0;

        $r1 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $r1.<org.apache.maven.project.DefaultProjectBuilder$1: org.apache.maven.model.DependencyManagement val$dependencyManagement> = l2;

        specialinvoke this.<java.util.AbstractMap: void <init>()>();

        return;
    }

    public java.util.Set entrySet()
    {
        DefaultProjectBuilder$1 this;
        java.util.HashMap $stack1;
        java.util.Set $stack2, $stack3;
        org.apache.maven.project.DefaultProjectBuilder$1 $r0;

        this := @this: DefaultProjectBuilder$1;

        $r0 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap compute()>();

        $stack2 = virtualinvoke $stack1.<java.util.HashMap: java.util.Set entrySet()>();

        $stack3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($stack2);

        return $stack3;
    }

    public java.util.Set keySet()
    {
        DefaultProjectBuilder$1 this;
        java.util.HashMap $stack1;
        java.util.Set $stack2, $stack3;
        org.apache.maven.project.DefaultProjectBuilder$1 $r0;

        this := @this: DefaultProjectBuilder$1;

        $r0 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap compute()>();

        $stack2 = virtualinvoke $stack1.<java.util.HashMap: java.util.Set keySet()>();

        $stack3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($stack2);

        return $stack3;
    }

    public java.util.Collection values()
    {
        DefaultProjectBuilder$1 this;
        java.util.HashMap $stack1;
        java.util.Collection $stack2, $stack3;
        org.apache.maven.project.DefaultProjectBuilder$1 $r0;

        this := @this: DefaultProjectBuilder$1;

        $r0 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap compute()>();

        $stack2 = virtualinvoke $stack1.<java.util.HashMap: java.util.Collection values()>();

        $stack3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($stack2);

        return $stack3;
    }

    public boolean containsValue(java.lang.Object)
    {
        DefaultProjectBuilder$1 this;
        java.util.HashMap $stack2;
        java.lang.Object value;
        boolean $stack3;
        org.apache.maven.project.DefaultProjectBuilder$1 $r0;

        this := @this: DefaultProjectBuilder$1;

        value := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap compute()>();

        $stack3 = virtualinvoke $stack2.<java.util.HashMap: boolean containsValue(java.lang.Object)>(value);

        return $stack3;
    }

    public boolean containsKey(java.lang.Object)
    {
        DefaultProjectBuilder$1 this;
        java.util.HashMap $stack2;
        java.lang.Object key;
        boolean $stack3;
        org.apache.maven.project.DefaultProjectBuilder$1 $r0;

        this := @this: DefaultProjectBuilder$1;

        key := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap compute()>();

        $stack3 = virtualinvoke $stack2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(key);

        return $stack3;
    }

    public org.apache.maven.artifact.Artifact get(java.lang.Object)
    {
        DefaultProjectBuilder$1 this;
        java.util.HashMap $stack2;
        java.lang.Object key, $stack3;
        org.apache.maven.artifact.Artifact $stack4;
        org.apache.maven.project.DefaultProjectBuilder$1 $r0;

        this := @this: DefaultProjectBuilder$1;

        key := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap compute()>();

        $stack3 = virtualinvoke $stack2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (org.apache.maven.artifact.Artifact) $stack3;

        return $stack4;
    }

    java.util.HashMap compute()
    {
        DefaultProjectBuilder$1 this;
        java.util.HashMap $stack4, $stack5, $stack17, $u0;
        org.apache.maven.model.DependencyManagement $stack7;
        java.util.List $stack8;
        java.util.Iterator l1;
        boolean $stack10;
        java.lang.Object $stack12;
        org.apache.maven.model.Dependency d;
        org.apache.maven.project.DefaultProjectBuilder $stack13;
        org.apache.maven.bridge.MavenRepositorySystem $stack14;
        org.apache.maven.artifact.Artifact artifact;
        java.lang.String $stack18;
        org.apache.maven.project.DefaultProjectBuilder$1 $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: DefaultProjectBuilder$1;

        $r0 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack4 = $r0.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap delegate>;

        if $stack4 != null goto label3;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r1 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $r1.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap delegate> = $u0;

        $r2 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack7 = $r2.<org.apache.maven.project.DefaultProjectBuilder$1: org.apache.maven.model.DependencyManagement val$dependencyManagement>;

        $stack8 = virtualinvoke $stack7.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        l1 = interfaceinvoke $stack8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label3;

        $stack12 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        d = (org.apache.maven.model.Dependency) $stack12;

        $r3 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack13 = $r3.<org.apache.maven.project.DefaultProjectBuilder$1: org.apache.maven.project.DefaultProjectBuilder this$0>;

        $stack14 = staticinvoke <org.apache.maven.project.DefaultProjectBuilder: org.apache.maven.bridge.MavenRepositorySystem access$500(org.apache.maven.project.DefaultProjectBuilder)>($stack13);

        artifact = virtualinvoke $stack14.<org.apache.maven.bridge.MavenRepositorySystem: org.apache.maven.artifact.Artifact createDependencyArtifact(org.apache.maven.model.Dependency)>(d);

        if artifact == null goto label2;

        $r4 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack17 = $r4.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap delegate>;

        $stack18 = virtualinvoke d.<org.apache.maven.model.Dependency: java.lang.String getManagementKey()>();

        virtualinvoke $stack17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack18, artifact);

     label2:
        goto label1;

     label3:
        $r5 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack5 = $r5.<org.apache.maven.project.DefaultProjectBuilder$1: java.util.HashMap delegate>;

        return $stack5;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        DefaultProjectBuilder$1 this;
        java.lang.Object l1;
        org.apache.maven.artifact.Artifact $stack2;
        org.apache.maven.project.DefaultProjectBuilder$1 $r0;

        this := @this: DefaultProjectBuilder$1;

        l1 := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.project.DefaultProjectBuilder$1) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.project.DefaultProjectBuilder$1: org.apache.maven.artifact.Artifact get(java.lang.Object)>(l1);

        return $stack2;
    }
}
