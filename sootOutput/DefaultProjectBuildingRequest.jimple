public class DefaultProjectBuildingRequest extends java.lang.Object implements org.apache.maven.project.ProjectBuildingRequest
{
    private org.eclipse.aether.RepositorySystemSession repositorySession;
    private org.apache.maven.artifact.repository.ArtifactRepository localRepository;
    private java.util.List remoteRepositories;
    private java.util.List pluginArtifactRepositories;
    private org.apache.maven.project.MavenProject project;
    private int validationLevel;
    private boolean processPlugins;
    private java.util.List profiles;
    private java.util.List activeProfileIds;
    private java.util.List inactiveProfileIds;
    private java.util.Properties systemProperties;
    private java.util.Properties userProperties;
    private java.util.Date buildStartTime;
    private boolean resolveDependencies;
    private boolean resolveVersionRanges;
    private org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging repositoryMerging;

    public void <init>()
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging $stack1;
        java.util.ArrayList $u0, $u1, $u2, $u5, $u6;
        java.util.Properties $u3, $u4;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: DefaultProjectBuildingRequest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: int validationLevel> = 31;

        $stack1 = <org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging: org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging POM_DOMINANT>;

        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r1.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging repositoryMerging> = $stack1;

        $r2 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r2.<org.apache.maven.project.DefaultProjectBuildingRequest: boolean processPlugins> = 1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r3 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r3.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List profiles> = $u0;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        $r4 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r4.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List activeProfileIds> = $u1;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        $r5 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r5.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List inactiveProfileIds> = $u2;

        $u3 = new java.util.Properties;

        specialinvoke $u3.<java.util.Properties: void <init>()>();

        $r6 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r6.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Properties systemProperties> = $u3;

        $u4 = new java.util.Properties;

        specialinvoke $u4.<java.util.Properties: void <init>()>();

        $r7 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r7.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Properties userProperties> = $u4;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        $r8 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r8.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List remoteRepositories> = $u5;

        $u6 = new java.util.ArrayList;

        specialinvoke $u6.<java.util.ArrayList: void <init>()>();

        $r9 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r9.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List pluginArtifactRepositories> = $u6;

        return;
    }

    public void <init>(org.apache.maven.project.ProjectBuildingRequest)
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.project.ProjectBuildingRequest request;
        boolean $stack2, $stack21, $stack25;
        java.util.List $stack4, $stack5, $stack6, $stack11, $stack13;
        java.util.Properties $stack7, $stack9;
        org.eclipse.aether.RepositorySystemSession $stack15;
        org.apache.maven.artifact.repository.ArtifactRepository $stack17;
        java.util.Date $stack19;
        org.apache.maven.project.MavenProject $stack20;
        int $stack23;
        org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging $stack27;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        this := @this: DefaultProjectBuildingRequest;

        request := @parameter0: org.apache.maven.project.ProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        specialinvoke $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: void <init>()>();

        $stack2 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: boolean isProcessPlugins()>();

        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r1.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setProcessPlugins(boolean)>($stack2);

        $stack4 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: java.util.List getProfiles()>();

        $r2 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r2.<org.apache.maven.project.DefaultProjectBuildingRequest: void setProfiles(java.util.List)>($stack4);

        $stack5 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: java.util.List getActiveProfileIds()>();

        $r3 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r3.<org.apache.maven.project.DefaultProjectBuildingRequest: void setActiveProfileIds(java.util.List)>($stack5);

        $stack6 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: java.util.List getInactiveProfileIds()>();

        $r4 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r4.<org.apache.maven.project.DefaultProjectBuildingRequest: void setInactiveProfileIds(java.util.List)>($stack6);

        $stack7 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: java.util.Properties getSystemProperties()>();

        $r5 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r5.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setSystemProperties(java.util.Properties)>($stack7);

        $stack9 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: java.util.Properties getUserProperties()>();

        $r6 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r6.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setUserProperties(java.util.Properties)>($stack9);

        $stack11 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: java.util.List getRemoteRepositories()>();

        $r7 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r7.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setRemoteRepositories(java.util.List)>($stack11);

        $stack13 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: java.util.List getPluginArtifactRepositories()>();

        $r8 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r8.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setPluginArtifactRepositories(java.util.List)>($stack13);

        $stack15 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: org.eclipse.aether.RepositorySystemSession getRepositorySession()>();

        $r9 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r9.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.DefaultProjectBuildingRequest setRepositorySession(org.eclipse.aether.RepositorySystemSession)>($stack15);

        $stack17 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        $r10 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r10.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>($stack17);

        $stack19 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: java.util.Date getBuildStartTime()>();

        $r11 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r11.<org.apache.maven.project.DefaultProjectBuildingRequest: void setBuildStartTime(java.util.Date)>($stack19);

        $stack20 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.project.MavenProject getProject()>();

        $r12 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r12.<org.apache.maven.project.DefaultProjectBuildingRequest: void setProject(org.apache.maven.project.MavenProject)>($stack20);

        $stack21 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: boolean isResolveDependencies()>();

        $r13 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r13.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setResolveDependencies(boolean)>($stack21);

        $stack23 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: int getValidationLevel()>();

        $r14 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r14.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setValidationLevel(int)>($stack23);

        $stack25 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: boolean isResolveVersionRanges()>();

        $r15 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r15.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setResolveVersionRanges(boolean)>($stack25);

        $stack27 = interfaceinvoke request.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging getRepositoryMerging()>();

        $r16 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        virtualinvoke $r16.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.DefaultProjectBuildingRequest setRepositoryMerging(org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging)>($stack27);

        return;
    }

    public org.apache.maven.project.MavenProject getProject()
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.project.MavenProject $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.MavenProject project>;

        return $stack1;
    }

    public void setProject(org.apache.maven.project.MavenProject)
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.project.MavenProject mavenProject;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        mavenProject := @parameter0: org.apache.maven.project.MavenProject;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.MavenProject project> = mavenProject;

        return;
    }

    public org.apache.maven.project.ProjectBuildingRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        localRepository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.artifact.repository.ArtifactRepository localRepository> = localRepository;

        return this;
    }

    public org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.artifact.repository.ArtifactRepository localRepository>;

        return $stack1;
    }

    public java.util.List getRemoteRepositories()
    {
        DefaultProjectBuildingRequest this;
        java.util.List $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List remoteRepositories>;

        return $stack1;
    }

    public org.apache.maven.project.ProjectBuildingRequest setRemoteRepositories(java.util.List)
    {
        java.util.List remoteRepositories, $stack2;
        DefaultProjectBuildingRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1;

        this := @this: DefaultProjectBuildingRequest;

        remoteRepositories := @parameter0: java.util.List;

        if remoteRepositories == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(remoteRepositories);

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List remoteRepositories> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = $r1.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List remoteRepositories>;

        interfaceinvoke $stack2.<java.util.List: void clear()>();

     label2:
        return this;
    }

    public java.util.List getPluginArtifactRepositories()
    {
        DefaultProjectBuildingRequest this;
        java.util.List $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List pluginArtifactRepositories>;

        return $stack1;
    }

    public org.apache.maven.project.ProjectBuildingRequest setPluginArtifactRepositories(java.util.List)
    {
        java.util.List pluginArtifactRepositories, $stack2;
        DefaultProjectBuildingRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1;

        this := @this: DefaultProjectBuildingRequest;

        pluginArtifactRepositories := @parameter0: java.util.List;

        if pluginArtifactRepositories == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(pluginArtifactRepositories);

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List pluginArtifactRepositories> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = $r1.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List pluginArtifactRepositories>;

        interfaceinvoke $stack2.<java.util.List: void clear()>();

     label2:
        return this;
    }

    public java.util.Properties getSystemProperties()
    {
        DefaultProjectBuildingRequest this;
        java.util.Properties $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Properties systemProperties>;

        return $stack1;
    }

    public org.apache.maven.project.ProjectBuildingRequest setSystemProperties(java.util.Properties)
    {
        java.util.Properties systemProperties, $stack2, $stack3;
        DefaultProjectBuildingRequest this;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1;

        this := @this: DefaultProjectBuildingRequest;

        systemProperties := @parameter0: java.util.Properties;

        if systemProperties == null goto label1;

        $stack3 = staticinvoke <org.apache.maven.properties.internal.SystemProperties: java.util.Properties copyProperties(java.util.Properties)>(systemProperties);

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Properties systemProperties> = $stack3;

        goto label2;

     label1:
        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = $r1.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Properties systemProperties>;

        virtualinvoke $stack2.<java.util.Properties: void clear()>();

     label2:
        return this;
    }

    public java.util.Properties getUserProperties()
    {
        DefaultProjectBuildingRequest this;
        java.util.Properties $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Properties userProperties>;

        return $stack1;
    }

    public org.apache.maven.project.ProjectBuildingRequest setUserProperties(java.util.Properties)
    {
        java.util.Properties userProperties, $stack2, $stack4, $u0;
        DefaultProjectBuildingRequest this;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1, $r2;

        this := @this: DefaultProjectBuildingRequest;

        userProperties := @parameter0: java.util.Properties;

        if userProperties == null goto label1;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Properties userProperties> = $u0;

        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack4 = $r1.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Properties userProperties>;

        virtualinvoke $stack4.<java.util.Properties: void putAll(java.util.Map)>(userProperties);

        goto label2;

     label1:
        $r2 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = $r2.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Properties userProperties>;

        virtualinvoke $stack2.<java.util.Properties: void clear()>();

     label2:
        return this;
    }

    public boolean isProcessPlugins()
    {
        DefaultProjectBuildingRequest this;
        boolean $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: boolean processPlugins>;

        return $stack1;
    }

    public org.apache.maven.project.ProjectBuildingRequest setProcessPlugins(boolean)
    {
        DefaultProjectBuildingRequest this;
        boolean processPlugins;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        processPlugins := @parameter0: boolean;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: boolean processPlugins> = processPlugins;

        return this;
    }

    public org.apache.maven.project.ProjectBuildingRequest setResolveDependencies(boolean)
    {
        DefaultProjectBuildingRequest this;
        boolean resolveDependencies;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        resolveDependencies := @parameter0: boolean;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: boolean resolveDependencies> = resolveDependencies;

        return this;
    }

    public boolean isResolveDependencies()
    {
        DefaultProjectBuildingRequest this;
        boolean $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: boolean resolveDependencies>;

        return $stack1;
    }

    public org.apache.maven.project.ProjectBuildingRequest setResolveVersionRanges(boolean)
    {
        DefaultProjectBuildingRequest this;
        boolean value;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        value := @parameter0: boolean;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: boolean resolveVersionRanges> = value;

        return this;
    }

    public boolean isResolveVersionRanges()
    {
        DefaultProjectBuildingRequest this;
        boolean $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: boolean resolveVersionRanges>;

        return $stack1;
    }

    public org.apache.maven.project.ProjectBuildingRequest setValidationLevel(int)
    {
        DefaultProjectBuildingRequest this;
        int validationLevel;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        validationLevel := @parameter0: int;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: int validationLevel> = validationLevel;

        return this;
    }

    public int getValidationLevel()
    {
        DefaultProjectBuildingRequest this;
        int $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: int validationLevel>;

        return $stack1;
    }

    public java.util.List getActiveProfileIds()
    {
        DefaultProjectBuildingRequest this;
        java.util.List $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List activeProfileIds>;

        return $stack1;
    }

    public void setActiveProfileIds(java.util.List)
    {
        java.util.List activeProfileIds, $stack2;
        DefaultProjectBuildingRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1;

        this := @this: DefaultProjectBuildingRequest;

        activeProfileIds := @parameter0: java.util.List;

        if activeProfileIds == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(activeProfileIds);

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List activeProfileIds> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = $r1.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List activeProfileIds>;

        interfaceinvoke $stack2.<java.util.List: void clear()>();

     label2:
        return;
    }

    public java.util.List getInactiveProfileIds()
    {
        DefaultProjectBuildingRequest this;
        java.util.List $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List inactiveProfileIds>;

        return $stack1;
    }

    public void setInactiveProfileIds(java.util.List)
    {
        java.util.List inactiveProfileIds, $stack2;
        DefaultProjectBuildingRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1;

        this := @this: DefaultProjectBuildingRequest;

        inactiveProfileIds := @parameter0: java.util.List;

        if inactiveProfileIds == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(inactiveProfileIds);

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List inactiveProfileIds> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = $r1.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List inactiveProfileIds>;

        interfaceinvoke $stack2.<java.util.List: void clear()>();

     label2:
        return;
    }

    public void setProfiles(java.util.List)
    {
        java.util.List profiles, $stack2;
        DefaultProjectBuildingRequest this;
        java.util.ArrayList $u0;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1;

        this := @this: DefaultProjectBuildingRequest;

        profiles := @parameter0: java.util.List;

        if profiles == null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(profiles);

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List profiles> = $u0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = $r1.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List profiles>;

        interfaceinvoke $stack2.<java.util.List: void clear()>();

     label2:
        return;
    }

    public void addProfile(org.apache.maven.model.Profile)
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.model.Profile profile;
        java.util.List $stack2;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        profile := @parameter0: org.apache.maven.model.Profile;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List profiles>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(profile);

        return;
    }

    public java.util.List getProfiles()
    {
        DefaultProjectBuildingRequest this;
        java.util.List $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.List profiles>;

        return $stack1;
    }

    public java.util.Date getBuildStartTime()
    {
        DefaultProjectBuildingRequest this;
        java.util.Date $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Date buildStartTime>;

        return $stack1;
    }

    public void setBuildStartTime(java.util.Date)
    {
        DefaultProjectBuildingRequest this;
        java.util.Date buildStartTime;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        buildStartTime := @parameter0: java.util.Date;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: java.util.Date buildStartTime> = buildStartTime;

        return;
    }

    public org.eclipse.aether.RepositorySystemSession getRepositorySession()
    {
        DefaultProjectBuildingRequest this;
        org.eclipse.aether.RepositorySystemSession $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.eclipse.aether.RepositorySystemSession repositorySession>;

        return $stack1;
    }

    public org.apache.maven.project.DefaultProjectBuildingRequest setRepositorySession(org.eclipse.aether.RepositorySystemSession)
    {
        DefaultProjectBuildingRequest this;
        org.eclipse.aether.RepositorySystemSession repositorySession;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1;

        this := @this: DefaultProjectBuildingRequest;

        repositorySession := @parameter0: org.eclipse.aether.RepositorySystemSession;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.eclipse.aether.RepositorySystemSession repositorySession> = repositorySession;

        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        return $r1;
    }

    public org.apache.maven.project.DefaultProjectBuildingRequest setRepositoryMerging(org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging)
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging repositoryMerging, $stack3;
        java.lang.Object $stack2;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0, $r1;

        this := @this: DefaultProjectBuildingRequest;

        repositoryMerging := @parameter0: org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging;

        $stack2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(repositoryMerging, "repositoryMerging cannot be null");

        $stack3 = (org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging) $stack2;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging repositoryMerging> = $stack3;

        $r1 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        return $r1;
    }

    public org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging getRepositoryMerging()
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging $stack1;
        org.apache.maven.project.DefaultProjectBuildingRequest $r0;

        this := @this: DefaultProjectBuildingRequest;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging repositoryMerging>;

        return $stack1;
    }

    public volatile org.apache.maven.project.ProjectBuildingRequest setRepositoryMerging(org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging)
    {
        DefaultProjectBuildingRequest this;
        org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging l1;
        org.apache.maven.project.DefaultProjectBuildingRequest $stack2, $r0;
        org.apache.maven.project.ProjectBuildingRequest $r1;

        this := @this: DefaultProjectBuildingRequest;

        l1 := @parameter0: org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.DefaultProjectBuildingRequest setRepositoryMerging(org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging)>(l1);

        $r1 = (org.apache.maven.project.ProjectBuildingRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.project.ProjectBuildingRequest setRepositorySession(org.eclipse.aether.RepositorySystemSession)
    {
        DefaultProjectBuildingRequest this;
        org.eclipse.aether.RepositorySystemSession l1;
        org.apache.maven.project.DefaultProjectBuildingRequest $stack2, $r0;
        org.apache.maven.project.ProjectBuildingRequest $r1;

        this := @this: DefaultProjectBuildingRequest;

        l1 := @parameter0: org.eclipse.aether.RepositorySystemSession;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingRequest) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.project.DefaultProjectBuildingRequest: org.apache.maven.project.DefaultProjectBuildingRequest setRepositorySession(org.eclipse.aether.RepositorySystemSession)>(l1);

        $r1 = (org.apache.maven.project.ProjectBuildingRequest) $stack2;

        return $r1;
    }
}
