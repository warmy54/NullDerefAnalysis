class DefaultProjectBuildingResult extends java.lang.Object implements org.apache.maven.project.ProjectBuildingResult
{
    private java.lang.String projectId;
    private java.io.File pomFile;
    private org.apache.maven.project.MavenProject project;
    private java.util.List problems;
    private org.apache.maven.project.DependencyResolutionResult dependencyResolutionResult;

    void <init>(org.apache.maven.project.MavenProject, java.util.List, org.apache.maven.project.DependencyResolutionResult)
    {
        DefaultProjectBuildingResult this;
        org.apache.maven.project.MavenProject project;
        java.util.List problems;
        org.apache.maven.project.DependencyResolutionResult dependencyResolutionResult;
        java.lang.String $stack13, $stack16, $stack19, $stack21;
        java.lang.StringBuilder $stack14, $stack15, $stack17, $stack18, $stack20, $u0;
        java.io.File $stack4;
        org.apache.maven.project.DefaultProjectBuildingResult $r0, $r1, $r2, $r3, $r4;

        this := @this: DefaultProjectBuildingResult;

        project := @parameter0: org.apache.maven.project.MavenProject;

        problems := @parameter1: java.util.List;

        dependencyResolutionResult := @parameter2: org.apache.maven.project.DependencyResolutionResult;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if project == null goto label1;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke project.<org.apache.maven.project.MavenProject: java.lang.String getGroupId()>();

        $stack14 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack16 = virtualinvoke project.<org.apache.maven.project.MavenProject: java.lang.String getArtifactId()>();

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack19 = virtualinvoke project.<org.apache.maven.project.MavenProject: java.lang.String getVersion()>();

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $stack21 = "";

     label2:
        $r0 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingResult: java.lang.String projectId> = $stack21;

        if project == null goto label3;

        $stack4 = virtualinvoke project.<org.apache.maven.project.MavenProject: java.io.File getFile()>();

        goto label4;

     label3:
        $stack4 = null;

     label4:
        $r1 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $r1.<org.apache.maven.project.DefaultProjectBuildingResult: java.io.File pomFile> = $stack4;

        $r2 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $r2.<org.apache.maven.project.DefaultProjectBuildingResult: org.apache.maven.project.MavenProject project> = project;

        $r3 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $r3.<org.apache.maven.project.DefaultProjectBuildingResult: java.util.List problems> = problems;

        $r4 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $r4.<org.apache.maven.project.DefaultProjectBuildingResult: org.apache.maven.project.DependencyResolutionResult dependencyResolutionResult> = dependencyResolutionResult;

        return;
    }

    void <init>(java.lang.String, java.io.File, java.util.List)
    {
        DefaultProjectBuildingResult this;
        java.lang.String projectId, $stack4;
        java.io.File pomFile;
        java.util.List problems;
        org.apache.maven.project.DefaultProjectBuildingResult $r0, $r1, $r2;

        this := @this: DefaultProjectBuildingResult;

        projectId := @parameter0: java.lang.String;

        pomFile := @parameter1: java.io.File;

        problems := @parameter2: java.util.List;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if projectId == null goto label1;

        $stack4 = projectId;

        goto label2;

     label1:
        $stack4 = "";

     label2:
        $r0 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $r0.<org.apache.maven.project.DefaultProjectBuildingResult: java.lang.String projectId> = $stack4;

        $r1 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $r1.<org.apache.maven.project.DefaultProjectBuildingResult: java.io.File pomFile> = pomFile;

        $r2 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $r2.<org.apache.maven.project.DefaultProjectBuildingResult: java.util.List problems> = problems;

        return;
    }

    public java.lang.String getProjectId()
    {
        DefaultProjectBuildingResult this;
        java.lang.String $stack1;
        org.apache.maven.project.DefaultProjectBuildingResult $r0;

        this := @this: DefaultProjectBuildingResult;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingResult: java.lang.String projectId>;

        return $stack1;
    }

    public java.io.File getPomFile()
    {
        DefaultProjectBuildingResult this;
        java.io.File $stack1;
        org.apache.maven.project.DefaultProjectBuildingResult $r0;

        this := @this: DefaultProjectBuildingResult;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingResult: java.io.File pomFile>;

        return $stack1;
    }

    public org.apache.maven.project.MavenProject getProject()
    {
        DefaultProjectBuildingResult this;
        org.apache.maven.project.MavenProject $stack1;
        org.apache.maven.project.DefaultProjectBuildingResult $r0;

        this := @this: DefaultProjectBuildingResult;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingResult: org.apache.maven.project.MavenProject project>;

        return $stack1;
    }

    public java.util.List getProblems()
    {
        DefaultProjectBuildingResult this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.project.DefaultProjectBuildingResult $r0, $r1, $r2;

        this := @this: DefaultProjectBuildingResult;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingResult: java.util.List problems>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $r1.<org.apache.maven.project.DefaultProjectBuildingResult: java.util.List problems> = $u0;

     label1:
        $r2 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $stack2 = $r2.<org.apache.maven.project.DefaultProjectBuildingResult: java.util.List problems>;

        return $stack2;
    }

    public org.apache.maven.project.DependencyResolutionResult getDependencyResolutionResult()
    {
        DefaultProjectBuildingResult this;
        org.apache.maven.project.DependencyResolutionResult $stack1;
        org.apache.maven.project.DefaultProjectBuildingResult $r0;

        this := @this: DefaultProjectBuildingResult;

        $r0 = (org.apache.maven.project.DefaultProjectBuildingResult) this;

        $stack1 = $r0.<org.apache.maven.project.DefaultProjectBuildingResult: org.apache.maven.project.DependencyResolutionResult dependencyResolutionResult>;

        return $stack1;
    }
}
