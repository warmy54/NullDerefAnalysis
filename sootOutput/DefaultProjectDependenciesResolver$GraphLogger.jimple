class DefaultProjectDependenciesResolver$GraphLogger extends java.lang.Object implements org.eclipse.aether.graph.DependencyVisitor
{
    private final org.apache.maven.project.MavenProject project;
    private java.lang.String indent;
    final org.apache.maven.project.DefaultProjectDependenciesResolver this$0;

    void <init>(org.apache.maven.project.DefaultProjectDependenciesResolver, org.apache.maven.project.MavenProject)
    {
        DefaultProjectDependenciesResolver$GraphLogger this;
        org.apache.maven.project.DefaultProjectDependenciesResolver this$0;
        org.apache.maven.project.MavenProject project;
        org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger $r0, $r1, $r2;

        this := @this: DefaultProjectDependenciesResolver$GraphLogger;

        this$0 := @parameter0: org.apache.maven.project.DefaultProjectDependenciesResolver;

        project := @parameter1: org.apache.maven.project.MavenProject;

        $r0 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $r0.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: org.apache.maven.project.DefaultProjectDependenciesResolver this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r1 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $r1.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: java.lang.String indent> = "";

        $r2 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $r2.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: org.apache.maven.project.MavenProject project> = project;

        return;
    }

    public boolean visitEnter(org.eclipse.aether.graph.DependencyNode)
    {
        DefaultProjectDependenciesResolver$GraphLogger this;
        java.lang.String $stack7, $stack11, $stack15, $stack19, $stack23, $stack27, $stack29, $stack32, $stack35, $stack55, $stack60, $stack68, $stack76, $stack84, $stack95, premanagedScope;
        org.eclipse.aether.graph.DependencyNode node;
        org.eclipse.aether.graph.Dependency dep;
        org.apache.maven.project.MavenProject $stack10, $stack14, $stack18, $stack22;
        java.lang.StringBuilder $stack13, $stack17, $stack21, $stack30, $stack31, $stack94, $u0, $u1;
        org.apache.maven.project.DefaultProjectDependenciesResolver $stack25;
        org.codehaus.plexus.logging.Logger $stack26;
        org.eclipse.aether.artifact.Artifact art;
        boolean $stack36, $stack37;
        int $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47;
        java.lang.Boolean premanagedScope#3;
        java.util.Collection premanagedScope#4;
        java.util.Map premanagedScope#5;
        org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: DefaultProjectDependenciesResolver$GraphLogger;

        node := @parameter0: org.eclipse.aether.graph.DependencyNode;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(128);

        $r0 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $stack7 = $r0.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: java.lang.String indent>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        dep = interfaceinvoke node.<org.eclipse.aether.graph.DependencyNode: org.eclipse.aether.graph.Dependency getDependency()>();

        if dep == null goto label8;

        art = virtualinvoke dep.<org.eclipse.aether.graph.Dependency: org.eclipse.aether.artifact.Artifact getArtifact()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(art);

        $stack35 = virtualinvoke dep.<org.eclipse.aether.graph.Dependency: java.lang.String getScope()>();

        $stack36 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>($stack35);

        if $stack36 == 0 goto label1;

        $stack94 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack95 = virtualinvoke dep.<org.eclipse.aether.graph.Dependency: java.lang.String getScope()>();

        virtualinvoke $stack94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack95);

     label1:
        $stack37 = virtualinvoke dep.<org.eclipse.aether.graph.Dependency: boolean isOptional()>();

        if $stack37 == 0 goto label2;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (optional)");

     label2:
        $stack38 = interfaceinvoke node.<org.eclipse.aether.graph.DependencyNode: int getManagedBits()>();

        $stack39 = $stack38 & 2;

        if $stack39 != 2 goto label3;

        premanagedScope = staticinvoke <org.eclipse.aether.util.graph.manager.DependencyManagerUtils: java.lang.String getPremanagedScope(org.eclipse.aether.graph.DependencyNode)>(node);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (scope managed from ");

        $stack84 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>(premanagedScope, "default");

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack84);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label3:
        $stack40 = interfaceinvoke node.<org.eclipse.aether.graph.DependencyNode: int getManagedBits()>();

        $stack41 = $stack40 & 1;

        if $stack41 != 1 goto label4;

        premanagedScope = staticinvoke <org.eclipse.aether.util.graph.manager.DependencyManagerUtils: java.lang.String getPremanagedVersion(org.eclipse.aether.graph.DependencyNode)>(node);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (version managed from ");

        $stack76 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>(premanagedScope, "default");

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack76);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label4:
        $stack42 = interfaceinvoke node.<org.eclipse.aether.graph.DependencyNode: int getManagedBits()>();

        $stack43 = $stack42 & 4;

        if $stack43 != 4 goto label5;

        premanagedScope#3 = staticinvoke <org.eclipse.aether.util.graph.manager.DependencyManagerUtils: java.lang.Boolean getPremanagedOptional(org.eclipse.aether.graph.DependencyNode)>(node);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (optionality managed from ");

        $stack68 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>(premanagedScope#3, "default");

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack68);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label5:
        $stack44 = interfaceinvoke node.<org.eclipse.aether.graph.DependencyNode: int getManagedBits()>();

        $stack45 = $stack44 & 16;

        if $stack45 != 16 goto label6;

        premanagedScope#4 = staticinvoke <org.eclipse.aether.util.graph.manager.DependencyManagerUtils: java.util.Collection getPremanagedExclusions(org.eclipse.aether.graph.DependencyNode)>(node);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (exclusions managed from ");

        $stack60 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>(premanagedScope#4, "default");

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack60);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label6:
        $stack46 = interfaceinvoke node.<org.eclipse.aether.graph.DependencyNode: int getManagedBits()>();

        $stack47 = $stack46 & 8;

        if $stack47 != 8 goto label7;

        premanagedScope#5 = staticinvoke <org.eclipse.aether.util.graph.manager.DependencyManagerUtils: java.util.Map getPremanagedProperties(org.eclipse.aether.graph.DependencyNode)>(node);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (properties managed from ");

        $stack55 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>(premanagedScope#5, "default");

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack55);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label7:
        goto label9;

     label8:
        $r1 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $stack10 = $r1.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: org.apache.maven.project.MavenProject project>;

        $stack11 = virtualinvoke $stack10.<org.apache.maven.project.MavenProject: java.lang.String getGroupId()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r2 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $stack14 = $r2.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: org.apache.maven.project.MavenProject project>;

        $stack15 = virtualinvoke $stack14.<org.apache.maven.project.MavenProject: java.lang.String getArtifactId()>();

        virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r3 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $stack18 = $r3.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: org.apache.maven.project.MavenProject project>;

        $stack19 = virtualinvoke $stack18.<org.apache.maven.project.MavenProject: java.lang.String getPackaging()>();

        virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r4 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $stack22 = $r4.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: org.apache.maven.project.MavenProject project>;

        $stack23 = virtualinvoke $stack22.<org.apache.maven.project.MavenProject: java.lang.String getVersion()>();

        virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

     label9:
        $r5 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $stack25 = $r5.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: org.apache.maven.project.DefaultProjectDependenciesResolver this$0>;

        $stack26 = staticinvoke <org.apache.maven.project.DefaultProjectDependenciesResolver: org.codehaus.plexus.logging.Logger access$000(org.apache.maven.project.DefaultProjectDependenciesResolver)>($stack25);

        $stack27 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack26.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack27);

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $r6 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $stack29 = $r6.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: java.lang.String indent>;

        $stack30 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29);

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   ");

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $r7.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: java.lang.String indent> = $stack32;

        return 1;
    }

    public boolean visitLeave(org.eclipse.aether.graph.DependencyNode)
    {
        DefaultProjectDependenciesResolver$GraphLogger this;
        java.lang.String $stack2, $stack3, $stack7;
        int $stack5, $stack6;
        org.eclipse.aether.graph.DependencyNode node;
        org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger $r0, $r1, $r2;

        this := @this: DefaultProjectDependenciesResolver$GraphLogger;

        node := @parameter0: org.eclipse.aether.graph.DependencyNode;

        $r0 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $stack3 = $r0.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: java.lang.String indent>;

        $r1 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $stack2 = $r1.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: java.lang.String indent>;

        $stack5 = virtualinvoke $stack2.<java.lang.String: int length()>();

        $stack6 = $stack5 - 3;

        $stack7 = virtualinvoke $stack3.<java.lang.String: java.lang.String substring(int,int)>(0, $stack6);

        $r2 = (org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger) this;

        $r2.<org.apache.maven.project.DefaultProjectDependenciesResolver$GraphLogger: java.lang.String indent> = $stack7;

        return 1;
    }
}
