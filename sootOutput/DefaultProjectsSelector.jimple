public class DefaultProjectsSelector extends java.lang.Object implements org.apache.maven.project.collector.ProjectsSelector
{
    private static final org.slf4j.Logger LOGGER;
    private final org.apache.maven.project.ProjectBuilder projectBuilder;

    public void <init>(org.apache.maven.project.ProjectBuilder)
    {
        DefaultProjectsSelector this;
        org.apache.maven.project.ProjectBuilder projectBuilder;
        org.apache.maven.project.collector.DefaultProjectsSelector $r0;

        this := @this: DefaultProjectsSelector;

        projectBuilder := @parameter0: org.apache.maven.project.ProjectBuilder;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.project.collector.DefaultProjectsSelector) this;

        $r0.<org.apache.maven.project.collector.DefaultProjectsSelector: org.apache.maven.project.ProjectBuilder projectBuilder> = projectBuilder;

        return;
    }

    public java.util.List selectProjects(java.util.List, org.apache.maven.execution.MavenExecutionRequest) throws org.apache.maven.project.ProjectBuildingException
    {
        org.apache.maven.execution.MavenExecutionRequest request;
        org.apache.maven.project.ProjectBuildingRequest projectBuildingRequest;
        org.apache.maven.execution.ProjectActivation $stack15;
        boolean $stack16, $stack33, $stack36, $stack44, $stack51, $stack57, $stack66, $stack58, problems, $stack22;
        DefaultProjectsSelector this;
        java.util.List files, results, $stack32, $stack42;
        org.apache.maven.project.ProjectBuilder $stack17;
        int $stack20;
        java.util.Iterator l9, l11;
        org.slf4j.Logger $stack23, $stack24, $stack25, $stack26, $stack27, $stack35, $stack37, $stack38, $stack48;
        java.lang.Object $stack29, $stack45;
        org.apache.maven.project.ProjectBuildingResult result;
        org.apache.maven.project.MavenProject $stack30, $stack40;
        java.lang.String $stack41, $stack46, loc, $stack50, $stack56;
        org.apache.maven.model.building.ModelProblem problem;
        java.lang.StringBuilder $stack54, $stack55, $u1;
        java.util.ArrayList $u0;
        org.apache.maven.project.collector.DefaultProjectsSelector $r0;

        this := @this: DefaultProjectsSelector;

        files := @parameter0: java.util.List;

        request := @parameter1: org.apache.maven.execution.MavenExecutionRequest;

        projectBuildingRequest = interfaceinvoke request.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest getProjectBuildingRequest()>();

        $stack15 = interfaceinvoke request.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.execution.ProjectActivation getProjectActivation()>();

        $stack16 = virtualinvoke $stack15.<org.apache.maven.execution.ProjectActivation: boolean isEmpty()>();

        if $stack16 != 0 goto label01;

        $stack66 = 1;

        goto label02;

     label01:
        $stack66 = 0;

     label02:
        if $stack66 != 0 goto label03;

        $stack57 = interfaceinvoke request.<org.apache.maven.execution.MavenExecutionRequest: boolean isRecursive()>();

        if $stack57 == 0 goto label04;

     label03:
        $stack58 = 1;

        goto label05;

     label04:
        $stack58 = 0;

     label05:
        $r0 = (org.apache.maven.project.collector.DefaultProjectsSelector) this;

        $stack17 = $r0.<org.apache.maven.project.collector.DefaultProjectsSelector: org.apache.maven.project.ProjectBuilder projectBuilder>;

        results = interfaceinvoke $stack17.<org.apache.maven.project.ProjectBuilder: java.util.List build(java.util.List,boolean,org.apache.maven.project.ProjectBuildingRequest)>(files, $stack58, projectBuildingRequest);

        $u0 = new java.util.ArrayList;

        $stack20 = interfaceinvoke results.<java.util.List: int size()>();

        specialinvoke $u0.<java.util.ArrayList: void <init>(int)>($stack20);

        problems = 0;

        l9 = interfaceinvoke results.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack22 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        if $stack22 == 0 goto label12;

        $stack29 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        result = (org.apache.maven.project.ProjectBuildingResult) $stack29;

        $stack30 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: org.apache.maven.project.MavenProject getProject()>();

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($stack30);

        $stack32 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.util.List getProblems()>();

        $stack33 = interfaceinvoke $stack32.<java.util.List: boolean isEmpty()>();

        if $stack33 != 0 goto label11;

        $stack35 = <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER>;

        $stack36 = interfaceinvoke $stack35.<org.slf4j.Logger: boolean isWarnEnabled()>();

        if $stack36 == 0 goto label11;

        $stack37 = <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER>;

        interfaceinvoke $stack37.<org.slf4j.Logger: void warn(java.lang.String)>("");

        $stack38 = <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER>;

        $stack40 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: org.apache.maven.project.MavenProject getProject()>();

        $stack41 = virtualinvoke $stack40.<org.apache.maven.project.MavenProject: java.lang.String getId()>();

        interfaceinvoke $stack38.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object)>("Some problems were encountered while building the effective model for \'{}\'", $stack41);

        $stack42 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.util.List getProblems()>();

        l11 = interfaceinvoke $stack42.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $stack44 = interfaceinvoke l11.<java.util.Iterator: boolean hasNext()>();

        if $stack44 == 0 goto label10;

        $stack45 = interfaceinvoke l11.<java.util.Iterator: java.lang.Object next()>();

        problem = (org.apache.maven.model.building.ModelProblem) $stack45;

        $stack46 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.lang.String getProjectId()>();

        loc = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String formatLocation(org.apache.maven.model.building.ModelProblem,java.lang.String)>(problem, $stack46);

        $stack48 = <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER>;

        $stack50 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.String getMessage()>();

        $stack51 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(loc);

        if $stack51 == 0 goto label08;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack54 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(loc);

        $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label09;

     label08:
        $stack56 = "";

     label09:
        interfaceinvoke $stack48.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Object,java.lang.Object)>("{}{}", $stack50, $stack56);

        goto label07;

     label10:
        problems = 1;

     label11:
        goto label06;

     label12:
        if problems == 0 goto label13;

        $stack23 = <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER>;

        interfaceinvoke $stack23.<org.slf4j.Logger: void warn(java.lang.String)>("");

        $stack24 = <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER>;

        interfaceinvoke $stack24.<org.slf4j.Logger: void warn(java.lang.String)>("It is highly recommended to fix these problems because they threaten the stability of your build.");

        $stack25 = <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER>;

        interfaceinvoke $stack25.<org.slf4j.Logger: void warn(java.lang.String)>("");

        $stack26 = <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER>;

        interfaceinvoke $stack26.<org.slf4j.Logger: void warn(java.lang.String)>("For this reason, future Maven versions might no longer support building such malformed projects.");

        $stack27 = <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER>;

        interfaceinvoke $stack27.<org.slf4j.Logger: void warn(java.lang.String)>("");

     label13:
        return $u0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $stack0;

        $stack0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/maven/project/collector/DefaultProjectsSelector;");

        <org.apache.maven.project.collector.DefaultProjectsSelector: org.slf4j.Logger LOGGER> = $stack0;

        return;
    }
}
