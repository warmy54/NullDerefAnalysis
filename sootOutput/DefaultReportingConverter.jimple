public class DefaultReportingConverter extends java.lang.Object implements org.apache.maven.model.plugin.ReportingConverter
{
    private final org.apache.maven.model.InputLocation location;

    public void <init>()
    {
        DefaultReportingConverter this;
        java.lang.StringBuilder $stack4, $stack8, $stack9, $u0;
        java.lang.Class $stack5;
        java.lang.Package $stack6;
        java.lang.String $stack7, modelId;
        org.apache.maven.model.InputLocation $stack13, $stack15, $u2;
        java.lang.Integer $stack14;
        org.apache.maven.model.InputSource $u1;
        org.apache.maven.model.plugin.DefaultReportingConverter $r0, $r1, $r2;

        this := @this: DefaultReportingConverter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("org.apache.maven:maven-model-builder:");

        $stack5 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack6 = virtualinvoke $stack5.<java.lang.Class: java.lang.Package getPackage()>();

        $stack7 = virtualinvoke $stack6.<java.lang.Package: java.lang.String getImplementationVersion()>();

        $stack8 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":reporting-converter");

        modelId = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        $u1 = new org.apache.maven.model.InputSource;

        specialinvoke $u1.<org.apache.maven.model.InputSource: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.model.InputSource: void setModelId(java.lang.String)>(modelId);

        $u2 = new org.apache.maven.model.InputLocation;

        specialinvoke $u2.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>(-1, -1, $u1);

        $r0 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $r0.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location> = $u2;

        $r1 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack13 = $r1.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location>;

        $stack14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r2 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack15 = $r2.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location>;

        virtualinvoke $stack13.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack14, $stack15);

        return;
    }

    public void convertReporting(org.apache.maven.model.Model, org.apache.maven.model.building.ModelBuildingRequest, org.apache.maven.model.building.ModelProblemCollector)
    {
        org.apache.maven.model.Model model;
        org.apache.maven.model.Reporting reporting;
        DefaultReportingConverter this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack18, reportPlugin, pluginManagement#10, reportPlugins, $u3, $u5, $u6;
        org.apache.maven.model.InputLocation $stack20, $stack26, $stack39, $stack50, $stack53, $stack58, $stack67;
        java.util.List $stack21;
        boolean $stack24, $stack29, $stack33, $stack36, hasMavenProjectInfoReportsPlugin, $stack23;
        java.lang.Object $stack27, $stack16;
        org.apache.maven.model.ReportPlugin plugin;
        java.lang.String $stack31, $stack32, $stack34, $stack35, $stack38;
        org.apache.maven.model.building.ModelProblemCollector problems;
        org.apache.maven.model.building.ModelProblem$Version $stack47;
        org.apache.maven.model.building.ModelProblem$Severity $stack48;
        org.apache.maven.model.building.ModelProblemCollectorRequest $stack49, $stack51, $u4;
        org.apache.maven.model.building.ModelBuildingRequest request;
        org.apache.maven.model.Build build, $u0;
        org.apache.maven.model.Plugin sitePlugin, $u1;
        org.apache.maven.model.PluginManagement pluginManagement, $u2;
        java.util.Iterator dom;
        org.apache.maven.model.plugin.DefaultReportingConverter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: DefaultReportingConverter;

        model := @parameter0: org.apache.maven.model.Model;

        request := @parameter1: org.apache.maven.model.building.ModelBuildingRequest;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        reporting = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Reporting getReporting()>();

        if reporting != null goto label01;

        return;

     label01:
        build = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if build != null goto label02;

        $u0 = new org.apache.maven.model.Build;

        specialinvoke $u0.<org.apache.maven.model.Build: void <init>()>();

        build = $u0;

        virtualinvoke model.<org.apache.maven.model.Model: void setBuild(org.apache.maven.model.Build)>($u0);

        $r0 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack67 = $r0.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location>;

        virtualinvoke model.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("build", $stack67);

     label02:
        $r1 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        sitePlugin = specialinvoke $r1.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.Plugin findSitePlugin(org.apache.maven.model.Build)>(build);

        if sitePlugin != null goto label04;

        $u1 = new org.apache.maven.model.Plugin;

        specialinvoke $u1.<org.apache.maven.model.Plugin: void <init>()>();

        sitePlugin = $u1;

        virtualinvoke $u1.<org.apache.maven.model.Plugin: void setArtifactId(java.lang.String)>("maven-site-plugin");

        $r2 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack58 = $r2.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location>;

        virtualinvoke $u1.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $stack58);

        pluginManagement = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if pluginManagement != null goto label03;

        $u2 = new org.apache.maven.model.PluginManagement;

        specialinvoke $u2.<org.apache.maven.model.PluginManagement: void <init>()>();

        pluginManagement = $u2;

        virtualinvoke build.<org.apache.maven.model.Build: void setPluginManagement(org.apache.maven.model.PluginManagement)>($u2);

     label03:
        virtualinvoke pluginManagement.<org.apache.maven.model.PluginManagement: void addPlugin(org.apache.maven.model.Plugin)>($u1);

     label04:
        $stack16 = virtualinvoke sitePlugin.<org.apache.maven.model.Plugin: java.lang.Object getConfiguration()>();

        pluginManagement#10 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack16;

        if pluginManagement#10 != null goto label05;

        $u3 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        $r3 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack53 = $r3.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location>;

        specialinvoke $u3.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(java.lang.String,java.lang.Object)>("configuration", $stack53);

        pluginManagement#10 = $u3;

        virtualinvoke sitePlugin.<org.apache.maven.model.Plugin: void setConfiguration(java.lang.Object)>($u3);

     label05:
        reportPlugins = virtualinvoke pluginManagement#10.<org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom getChild(java.lang.String)>("reportPlugins");

        if reportPlugins == null goto label06;

        $u4 = new org.apache.maven.model.building.ModelProblemCollectorRequest;

        $stack48 = <org.apache.maven.model.building.ModelProblem$Severity: org.apache.maven.model.building.ModelProblem$Severity WARNING>;

        $stack47 = <org.apache.maven.model.building.ModelProblem$Version: org.apache.maven.model.building.ModelProblem$Version BASE>;

        specialinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: void <init>(org.apache.maven.model.building.ModelProblem$Severity,org.apache.maven.model.building.ModelProblem$Version)>($stack48, $stack47);

        $stack49 = virtualinvoke $u4.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setMessage(java.lang.String)>("Reporting configuration should be done in <reporting> section, not in maven-site-plugin <configuration> as reportPlugins parameter.");

        $stack50 = virtualinvoke sitePlugin.<org.apache.maven.model.Plugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("configuration");

        $stack51 = virtualinvoke $stack49.<org.apache.maven.model.building.ModelProblemCollectorRequest: org.apache.maven.model.building.ModelProblemCollectorRequest setLocation(org.apache.maven.model.InputLocation)>($stack50);

        interfaceinvoke problems.<org.apache.maven.model.building.ModelProblemCollector: void add(org.apache.maven.model.building.ModelProblemCollectorRequest)>($stack51);

        return;

     label06:
        $stack18 = virtualinvoke pluginManagement#10.<org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom getChild(java.lang.String)>("outputDirectory");

        if $stack18 != null goto label07;

        $stack38 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getOutputDirectory()>();

        $stack39 = virtualinvoke reporting.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("outputDirectory");

        $r4 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        specialinvoke $r4.<org.apache.maven.model.plugin.DefaultReportingConverter: void addDom(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.String,org.apache.maven.model.InputLocation)>(pluginManagement#10, "outputDirectory", $stack38, $stack39);

     label07:
        $u5 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        $r5 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack20 = $r5.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location>;

        specialinvoke $u5.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(java.lang.String,java.lang.Object)>("reportPlugins", $stack20);

        virtualinvoke pluginManagement#10.<org.codehaus.plexus.util.xml.Xpp3Dom: void addChild(org.codehaus.plexus.util.xml.Xpp3Dom)>($u5);

        hasMavenProjectInfoReportsPlugin = 0;

        $stack21 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        dom = interfaceinvoke $stack21.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack23 = interfaceinvoke dom.<java.util.Iterator: boolean hasNext()>();

        if $stack23 == 0 goto label10;

        $stack27 = interfaceinvoke dom.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.ReportPlugin) $stack27;

        $r6 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        reportPlugin = specialinvoke $r6.<org.apache.maven.model.plugin.DefaultReportingConverter: org.codehaus.plexus.util.xml.Xpp3Dom convert(org.apache.maven.model.ReportPlugin)>(plugin);

        virtualinvoke $u5.<org.codehaus.plexus.util.xml.Xpp3Dom: void addChild(org.codehaus.plexus.util.xml.Xpp3Dom)>(reportPlugin);

        $stack29 = virtualinvoke reporting.<org.apache.maven.model.Reporting: boolean isExcludeDefaults()>();

        if $stack29 != 0 goto label09;

        if hasMavenProjectInfoReportsPlugin != 0 goto label09;

        $stack31 = "org.apache.maven.plugins";

        $stack32 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        $stack33 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>($stack32);

        if $stack33 == 0 goto label09;

        $stack34 = "maven-project-info-reports-plugin";

        $stack35 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        $stack36 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>($stack35);

        if $stack36 == 0 goto label09;

        hasMavenProjectInfoReportsPlugin = 1;

     label09:
        goto label08;

     label10:
        $stack24 = virtualinvoke reporting.<org.apache.maven.model.Reporting: boolean isExcludeDefaults()>();

        if $stack24 != 0 goto label11;

        if hasMavenProjectInfoReportsPlugin != 0 goto label11;

        $u6 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        $r7 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack26 = $r7.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location>;

        specialinvoke $u6.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(java.lang.String,java.lang.Object)>("reportPlugin", $stack26);

        $r8 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        specialinvoke $r8.<org.apache.maven.model.plugin.DefaultReportingConverter: void addDom(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.String)>($u6, "groupId", "org.apache.maven.plugins");

        $r9 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        specialinvoke $r9.<org.apache.maven.model.plugin.DefaultReportingConverter: void addDom(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.String)>($u6, "artifactId", "maven-project-info-reports-plugin");

        virtualinvoke $u5.<org.codehaus.plexus.util.xml.Xpp3Dom: void addChild(org.codehaus.plexus.util.xml.Xpp3Dom)>($u6);

     label11:
        return;
    }

    private org.apache.maven.model.Plugin findSitePlugin(org.apache.maven.model.Build)
    {
        org.apache.maven.model.Build build;
        java.util.List $stack5, $stack9;
        boolean $stack7, $stack11, $stack14, $stack17;
        java.lang.Object $stack13, $stack16;
        org.apache.maven.model.Plugin plugin;
        DefaultReportingConverter this;
        java.util.Iterator pluginManagement, plugin;
        org.apache.maven.model.PluginManagement pluginManagement#3;
        org.apache.maven.model.plugin.DefaultReportingConverter $r0, $r1;

        this := @this: DefaultReportingConverter;

        build := @parameter0: org.apache.maven.model.Build;

        $stack5 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        pluginManagement = interfaceinvoke $stack5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke pluginManagement.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack16 = interfaceinvoke pluginManagement.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack16;

        $r0 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack17 = specialinvoke $r0.<org.apache.maven.model.plugin.DefaultReportingConverter: boolean isSitePlugin(org.apache.maven.model.Plugin)>(plugin);

        if $stack17 == 0 goto label2;

        return plugin;

     label2:
        goto label1;

     label3:
        pluginManagement#3 = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if pluginManagement#3 == null goto label6;

        $stack9 = virtualinvoke pluginManagement#3.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        plugin = interfaceinvoke $stack9.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack11 = interfaceinvoke plugin.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label6;

        $stack13 = interfaceinvoke plugin.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack13;

        $r1 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack14 = specialinvoke $r1.<org.apache.maven.model.plugin.DefaultReportingConverter: boolean isSitePlugin(org.apache.maven.model.Plugin)>(plugin);

        if $stack14 == 0 goto label5;

        return plugin;

     label5:
        goto label4;

     label6:
        return null;
    }

    private boolean isSitePlugin(org.apache.maven.model.Plugin)
    {
        org.apache.maven.model.Plugin plugin;
        java.lang.String $stack2, $stack3, $stack5, $stack6;
        boolean $stack4, $stack7, $stack8;
        DefaultReportingConverter this;

        this := @this: DefaultReportingConverter;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        $stack2 = "maven-site-plugin";

        $stack3 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $stack4 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>($stack3);

        if $stack4 == 0 goto label1;

        $stack5 = "org.apache.maven.plugins";

        $stack6 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack7 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack6);

        if $stack7 == 0 goto label1;

        $stack8 = 1;

        goto label2;

     label1:
        $stack8 = 0;

     label2:
        return $stack8;
    }

    private org.codehaus.plexus.util.xml.Xpp3Dom convert(org.apache.maven.model.ReportPlugin)
    {
        org.apache.maven.model.ReportPlugin plugin;
        org.apache.maven.model.InputLocation $stack10, $stack13, $stack16, $stack19, $stack25;
        DefaultReportingConverter this;
        java.lang.String $stack12, $stack15, $stack18;
        java.lang.Object $stack20, $stack30;
        java.util.List $stack21, $stack26;
        boolean $stack22, $stack28;
        java.util.Iterator l5;
        org.apache.maven.model.ReportSet reportSet;
        org.codehaus.plexus.util.xml.Xpp3Dom rs, configuration, $u0, $u1, $u2;
        org.apache.maven.model.plugin.DefaultReportingConverter $r0, $r1, $r2, $r3;

        this := @this: DefaultReportingConverter;

        plugin := @parameter0: org.apache.maven.model.ReportPlugin;

        $u0 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        $stack10 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        specialinvoke $u0.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(java.lang.String,java.lang.Object)>("reportPlugin", $stack10);

        $stack12 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        $stack13 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("groupId");

        $r0 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        specialinvoke $r0.<org.apache.maven.model.plugin.DefaultReportingConverter: void addDom(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.String,org.apache.maven.model.InputLocation)>($u0, "groupId", $stack12, $stack13);

        $stack15 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        $stack16 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("artifactId");

        $r1 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        specialinvoke $r1.<org.apache.maven.model.plugin.DefaultReportingConverter: void addDom(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.String,org.apache.maven.model.InputLocation)>($u0, "artifactId", $stack15, $stack16);

        $stack18 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.String getVersion()>();

        $stack19 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        $r2 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        specialinvoke $r2.<org.apache.maven.model.plugin.DefaultReportingConverter: void addDom(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.String,org.apache.maven.model.InputLocation)>($u0, "version", $stack18, $stack19);

        $stack20 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.Object getConfiguration()>();

        configuration = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack20;

        if configuration == null goto label1;

        $u1 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        specialinvoke $u1.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(org.codehaus.plexus.util.xml.Xpp3Dom)>(configuration);

        virtualinvoke $u0.<org.codehaus.plexus.util.xml.Xpp3Dom: void addChild(org.codehaus.plexus.util.xml.Xpp3Dom)>($u1);

     label1:
        $stack21 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        $stack22 = interfaceinvoke $stack21.<java.util.List: boolean isEmpty()>();

        if $stack22 != 0 goto label4;

        $u2 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        $stack25 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("reportSets");

        specialinvoke $u2.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(java.lang.String,java.lang.Object)>("reportSets", $stack25);

        $stack26 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        l5 = interfaceinvoke $stack26.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack28 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack28 == 0 goto label3;

        $stack30 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        reportSet = (org.apache.maven.model.ReportSet) $stack30;

        $r3 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        rs = specialinvoke $r3.<org.apache.maven.model.plugin.DefaultReportingConverter: org.codehaus.plexus.util.xml.Xpp3Dom convert(org.apache.maven.model.ReportSet)>(reportSet);

        virtualinvoke $u2.<org.codehaus.plexus.util.xml.Xpp3Dom: void addChild(org.codehaus.plexus.util.xml.Xpp3Dom)>(rs);

        goto label2;

     label3:
        virtualinvoke $u0.<org.codehaus.plexus.util.xml.Xpp3Dom: void addChild(org.codehaus.plexus.util.xml.Xpp3Dom)>($u2);

     label4:
        return $u0;
    }

    private org.codehaus.plexus.util.xml.Xpp3Dom convert(org.apache.maven.model.ReportSet)
    {
        org.apache.maven.model.ReportSet reportSet;
        org.apache.maven.model.InputLocation $stack12, idLocation, location, $stack37, $stack29;
        DefaultReportingConverter this;
        java.lang.String $stack15, report;
        java.lang.Object $stack16, $stack25;
        java.util.List $stack17, $stack21;
        boolean $stack18, $stack23;
        java.util.Iterator l8;
        int $stack26, n;
        java.lang.Integer $stack28;
        org.codehaus.plexus.util.xml.Xpp3Dom configuration, $u0, $u1, $u2;
        org.apache.maven.model.plugin.DefaultReportingConverter $r0, $r1, $r2;

        this := @this: DefaultReportingConverter;

        reportSet := @parameter0: org.apache.maven.model.ReportSet;

        $u0 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        $stack12 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("");

        specialinvoke $u0.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(java.lang.String,java.lang.Object)>("reportSet", $stack12);

        idLocation = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("id");

        $stack15 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        if idLocation != null goto label1;

        $r0 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack37 = $r0.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location>;

        goto label2;

     label1:
        $stack37 = idLocation;

     label2:
        $r1 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        specialinvoke $r1.<org.apache.maven.model.plugin.DefaultReportingConverter: void addDom(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.String,org.apache.maven.model.InputLocation)>($u0, "id", $stack15, $stack37);

        $stack16 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.Object getConfiguration()>();

        configuration = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack16;

        if configuration == null goto label3;

        $u1 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        specialinvoke $u1.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(org.codehaus.plexus.util.xml.Xpp3Dom)>(configuration);

        virtualinvoke $u0.<org.codehaus.plexus.util.xml.Xpp3Dom: void addChild(org.codehaus.plexus.util.xml.Xpp3Dom)>($u1);

     label3:
        $stack17 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        $stack18 = interfaceinvoke $stack17.<java.util.List: boolean isEmpty()>();

        if $stack18 != 0 goto label8;

        location = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("reports");

        $u2 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        specialinvoke $u2.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(java.lang.String,java.lang.Object)>("reports", location);

        n = 0;

        $stack21 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        l8 = interfaceinvoke $stack21.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack23 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        if $stack23 == 0 goto label7;

        $stack25 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        report = (java.lang.String) $stack25;

        if location != null goto label5;

        $stack29 = null;

        goto label6;

     label5:
        $stack26 = n;

        n = n + 1;

        $stack28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack26);

        $stack29 = virtualinvoke location.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>($stack28);

     label6:
        $r2 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        specialinvoke $r2.<org.apache.maven.model.plugin.DefaultReportingConverter: void addDom(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.String,org.apache.maven.model.InputLocation)>($u2, "report", report, $stack29);

        goto label4;

     label7:
        virtualinvoke $u0.<org.codehaus.plexus.util.xml.Xpp3Dom: void addChild(org.codehaus.plexus.util.xml.Xpp3Dom)>($u2);

     label8:
        return $u0;
    }

    private void addDom(org.codehaus.plexus.util.xml.Xpp3Dom, java.lang.String, java.lang.String)
    {
        DefaultReportingConverter this;
        org.codehaus.plexus.util.xml.Xpp3Dom parent;
        java.lang.String childName, childValue;
        org.apache.maven.model.InputLocation $stack4;
        org.apache.maven.model.plugin.DefaultReportingConverter $r0, $r1;

        this := @this: DefaultReportingConverter;

        parent := @parameter0: org.codehaus.plexus.util.xml.Xpp3Dom;

        childName := @parameter1: java.lang.String;

        childValue := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack4 = $r0.<org.apache.maven.model.plugin.DefaultReportingConverter: org.apache.maven.model.InputLocation location>;

        $r1 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        specialinvoke $r1.<org.apache.maven.model.plugin.DefaultReportingConverter: void addDom(org.codehaus.plexus.util.xml.Xpp3Dom,java.lang.String,java.lang.String,org.apache.maven.model.InputLocation)>(parent, childName, childValue, $stack4);

        return;
    }

    private void addDom(org.codehaus.plexus.util.xml.Xpp3Dom, java.lang.String, java.lang.String, org.apache.maven.model.InputLocation)
    {
        java.lang.String childValue, childName;
        boolean $stack5;
        org.codehaus.plexus.util.xml.Xpp3Dom parent, $stack6;
        DefaultReportingConverter this;
        org.apache.maven.model.InputLocation location;
        org.apache.maven.model.plugin.DefaultReportingConverter $r0;

        this := @this: DefaultReportingConverter;

        parent := @parameter0: org.codehaus.plexus.util.xml.Xpp3Dom;

        childName := @parameter1: java.lang.String;

        childValue := @parameter2: java.lang.String;

        location := @parameter3: org.apache.maven.model.InputLocation;

        $stack5 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(childValue);

        if $stack5 == 0 goto label1;

        $r0 = (org.apache.maven.model.plugin.DefaultReportingConverter) this;

        $stack6 = specialinvoke $r0.<org.apache.maven.model.plugin.DefaultReportingConverter: org.codehaus.plexus.util.xml.Xpp3Dom newDom(java.lang.String,java.lang.String,org.apache.maven.model.InputLocation)>(childName, childValue, location);

        virtualinvoke parent.<org.codehaus.plexus.util.xml.Xpp3Dom: void addChild(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack6);

     label1:
        return;
    }

    private org.codehaus.plexus.util.xml.Xpp3Dom newDom(java.lang.String, java.lang.String, org.apache.maven.model.InputLocation)
    {
        org.codehaus.plexus.util.xml.Xpp3Dom $stack5;
        java.lang.String name, value;
        org.apache.maven.model.InputLocation location;
        DefaultReportingConverter this;

        this := @this: DefaultReportingConverter;

        name := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        location := @parameter2: org.apache.maven.model.InputLocation;

        $stack5 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        specialinvoke $stack5.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(java.lang.String,java.lang.Object)>(name, location);

        virtualinvoke $stack5.<org.codehaus.plexus.util.xml.Xpp3Dom: void setValue(java.lang.String)>(value);

        return $stack5;
    }
}
