public class DefaultResolutionErrorHandler extends java.lang.Object implements org.apache.maven.artifact.resolver.ResolutionErrorHandler
{

    public void <init>()
    {
        DefaultResolutionErrorHandler this;

        this := @this: DefaultResolutionErrorHandler;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void throwErrors(org.apache.maven.artifact.resolver.ArtifactResolutionRequest, org.apache.maven.artifact.resolver.ArtifactResolutionResult) throws org.apache.maven.artifact.resolver.ArtifactResolutionException
    {
        org.apache.maven.artifact.resolver.ArtifactResolutionResult result;
        boolean $stack3, $stack4, $stack5, $stack6, $stack7, $stack8;
        java.lang.StringBuilder $stack11, $stack12, $stack13, $stack15, $u1;
        org.apache.maven.artifact.resolver.ArtifactResolutionRequest request;
        java.util.List $stack14, $stack18, $stack22, $stack23, $stack24, $stack25;
        java.lang.String $stack16;
        org.apache.maven.artifact.Artifact $stack17, $stack20;
        java.util.Set $stack21;
        java.lang.Object $stack26;
        org.apache.maven.artifact.resolver.ArtifactResolutionException $stack27, $stack30, $u2;
        org.apache.maven.artifact.versioning.OverConstrainedVersionException $stack28;
        org.apache.maven.artifact.resolver.CyclicDependencyException $stack29;
        DefaultResolutionErrorHandler this;
        org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException $u0;
        java.lang.Throwable $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: DefaultResolutionErrorHandler;

        request := @parameter0: org.apache.maven.artifact.resolver.ArtifactResolutionRequest;

        result := @parameter1: org.apache.maven.artifact.resolver.ArtifactResolutionResult;

        $stack3 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasMetadataResolutionExceptions()>();

        if $stack3 == 0 goto label1;

        $stack30 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: org.apache.maven.artifact.resolver.ArtifactResolutionException getMetadataResolutionException(int)>(0);

        $r0 = (java.lang.Throwable) $stack30;

        throw $r0;

     label1:
        $stack4 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasCircularDependencyExceptions()>();

        if $stack4 == 0 goto label2;

        $stack29 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: org.apache.maven.artifact.resolver.CyclicDependencyException getCircularDependencyException(int)>(0);

        $r1 = (java.lang.Throwable) $stack29;

        throw $r1;

     label2:
        $stack5 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasVersionRangeViolations()>();

        if $stack5 == 0 goto label3;

        $stack28 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: org.apache.maven.artifact.versioning.OverConstrainedVersionException getVersionRangeViolation(int)>(0);

        $r2 = (java.lang.Throwable) $stack28;

        throw $r2;

     label3:
        $stack6 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasErrorArtifactExceptions()>();

        if $stack6 == 0 goto label4;

        $stack25 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.List getErrorArtifactExceptions()>();

        $stack26 = interfaceinvoke $stack25.<java.util.List: java.lang.Object get(int)>(0);

        $stack27 = (org.apache.maven.artifact.resolver.ArtifactResolutionException) $stack26;

        $r3 = (java.lang.Throwable) $stack27;

        throw $r3;

     label4:
        $stack7 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasMissingArtifacts()>();

        if $stack7 == 0 goto label5;

        $u0 = new org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException;

        $stack20 = virtualinvoke request.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.Artifact getArtifact()>();

        $stack21 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.Set getArtifacts()>();

        $stack22 = staticinvoke <org.apache.maven.artifact.resolver.DefaultResolutionErrorHandler: java.util.List toList(java.util.Collection)>($stack21);

        $stack23 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.List getMissingArtifacts()>();

        $stack24 = virtualinvoke request.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List getRemoteRepositories()>();

        specialinvoke $u0.<org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: void <init>(org.apache.maven.artifact.Artifact,java.util.List,java.util.List,java.util.List)>($stack20, $stack22, $stack23, $stack24);

        $r4 = (java.lang.Throwable) $u0;

        throw $r4;

     label5:
        $stack8 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: boolean hasExceptions()>();

        if $stack8 == 0 goto label6;

        $u2 = new org.apache.maven.artifact.resolver.ArtifactResolutionException;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown error during artifact resolution, ");

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(request);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $stack14 = virtualinvoke result.<org.apache.maven.artifact.resolver.ArtifactResolutionResult: java.util.List getExceptions()>();

        $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack17 = virtualinvoke request.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: org.apache.maven.artifact.Artifact getArtifact()>();

        $stack18 = virtualinvoke request.<org.apache.maven.artifact.resolver.ArtifactResolutionRequest: java.util.List getRemoteRepositories()>();

        specialinvoke $u2.<org.apache.maven.artifact.resolver.ArtifactResolutionException: void <init>(java.lang.String,org.apache.maven.artifact.Artifact,java.util.List)>($stack16, $stack17, $stack18);

        $r5 = (java.lang.Throwable) $u2;

        throw $r5;

     label6:
        return;
    }

    private static java.util.List toList(java.util.Collection)
    {
        java.util.Collection items;
        java.util.ArrayList $stack1;

        items := @parameter0: java.util.Collection;

        if items == null goto label1;

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>(java.util.Collection)>(items);

        goto label2;

     label1:
        $stack1 = null;

     label2:
        return $stack1;
    }
}
