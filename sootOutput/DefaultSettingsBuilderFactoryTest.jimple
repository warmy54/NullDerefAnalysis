public class DefaultSettingsBuilderFactoryTest extends java.lang.Object
{

    public void <init>()
    {
        DefaultSettingsBuilderFactoryTest this;

        this := @this: DefaultSettingsBuilderFactoryTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private java.io.File getSettings(java.lang.String)
    {
        java.io.File $stack2, $stack8;
        java.lang.StringBuilder $stack3, $stack4, $stack5, $stack6;
        java.lang.String name, $stack7;
        DefaultSettingsBuilderFactoryTest this;

        this := @this: DefaultSettingsBuilderFactoryTest;

        name := @parameter0: java.lang.String;

        $stack2 = new java.io.File;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("src/test/resources/settings/factory/");

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xml");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack2.<java.io.File: void <init>(java.lang.String)>($stack7);

        $stack8 = virtualinvoke $stack2.<java.io.File: java.io.File getAbsoluteFile()>();

        return $stack8;
    }

    public void testCompleteWiring() throws java.lang.Exception
    {
        org.apache.maven.settings.building.DefaultSettingsBuilder builder;
        java.util.Properties $stack7;
        DefaultSettingsBuilderFactoryTest this;
        java.io.File $stack9;
        org.apache.maven.settings.building.SettingsBuildingResult result;
        org.apache.maven.settings.Settings $stack12;
        org.apache.maven.settings.building.DefaultSettingsBuilderFactory $u0;
        org.apache.maven.settings.building.DefaultSettingsBuildingRequest $u1;
        org.apache.maven.settings.building.DefaultSettingsBuilderFactoryTest $r0;
        org.apache.maven.settings.building.SettingsBuilder $r1;
        org.apache.maven.settings.building.SettingsBuildingRequest $r2;

        this := @this: DefaultSettingsBuilderFactoryTest;

        $u0 = new org.apache.maven.settings.building.DefaultSettingsBuilderFactory;

        specialinvoke $u0.<org.apache.maven.settings.building.DefaultSettingsBuilderFactory: void <init>()>();

        builder = virtualinvoke $u0.<org.apache.maven.settings.building.DefaultSettingsBuilderFactory: org.apache.maven.settings.building.DefaultSettingsBuilder newInstance()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(builder);

        $u1 = new org.apache.maven.settings.building.DefaultSettingsBuildingRequest;

        specialinvoke $u1.<org.apache.maven.settings.building.DefaultSettingsBuildingRequest: void <init>()>();

        $stack7 = staticinvoke <java.lang.System: java.util.Properties getProperties()>();

        virtualinvoke $u1.<org.apache.maven.settings.building.DefaultSettingsBuildingRequest: org.apache.maven.settings.building.DefaultSettingsBuildingRequest setSystemProperties(java.util.Properties)>($stack7);

        $r0 = (org.apache.maven.settings.building.DefaultSettingsBuilderFactoryTest) this;

        $stack9 = specialinvoke $r0.<org.apache.maven.settings.building.DefaultSettingsBuilderFactoryTest: java.io.File getSettings(java.lang.String)>("simple");

        virtualinvoke $u1.<org.apache.maven.settings.building.DefaultSettingsBuildingRequest: org.apache.maven.settings.building.DefaultSettingsBuildingRequest setUserSettingsFile(java.io.File)>($stack9);

        $r1 = (org.apache.maven.settings.building.SettingsBuilder) builder;

        $r2 = (org.apache.maven.settings.building.SettingsBuildingRequest) $u1;

        result = interfaceinvoke $r1.<org.apache.maven.settings.building.SettingsBuilder: org.apache.maven.settings.building.SettingsBuildingResult build(org.apache.maven.settings.building.SettingsBuildingRequest)>($r2);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(result);

        $stack12 = interfaceinvoke result.<org.apache.maven.settings.building.SettingsBuildingResult: org.apache.maven.settings.Settings getEffectiveSettings()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack12);

        return;
    }
}
