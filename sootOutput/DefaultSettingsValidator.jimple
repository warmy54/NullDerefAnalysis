public class DefaultSettingsValidator extends java.lang.Object implements org.apache.maven.settings.validation.SettingsValidator
{
    private static final java.lang.String ID_REGEX;
    private static final java.lang.String ILLEGAL_FS_CHARS;
    private static final java.lang.String ILLEGAL_REPO_ID_CHARS;

    public void <init>()
    {
        DefaultSettingsValidator this;

        this := @this: DefaultSettingsValidator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void validate(org.apache.maven.settings.Settings, org.apache.maven.settings.building.SettingsProblemCollector)
    {
        org.apache.maven.settings.Settings settings;
        boolean $stack11, $stack19, $stack22, $stack41, $stack46, $stack86, $stack100, $stack130, $stack147, $stack148;
        java.util.List pluginGroups, $stack53, $stack58, i#3, pluginGroup#7, server#15;
        java.lang.Object $stack20, $stack44, $stack89, $stack121, $stack144;
        java.lang.String $stack21, $stack24, $stack25, $stack33, $stack35, $stack45, $stack49, $stack57, $stack62, $stack69, $stack71, $stack91, $stack92, $stack96, $stack98, $stack99, $stack102, $stack103, $stack106, $stack107, $stack126, $stack127, $stack129, $stack138, $stack140, $stack145, $stack156, $stack162, pluginGroup, prefix;
        org.apache.maven.settings.building.SettingsProblemCollector problems;
        org.apache.maven.settings.building.SettingsProblem$Severity $stack29, $stack65, $stack95, $stack110, $stack134, $stack152, $stack158, $stack163;
        java.lang.StringBuilder $stack32, $stack34, $stack48, $stack50, $stack51, $stack55, $stack56, $stack60, $stack61, $stack68, $stack70, $stack123, $stack124, $stack125, $stack137, $stack139, $stack153, $stack154, $stack155, $stack159, $stack160, $stack161, $u0, $u1, $u3, $u4, $u6, $u7, $u8, $u9, $u11;
        DefaultSettingsValidator this;
        int $stack118, $stack141, i;
        org.apache.maven.settings.Server server;
        java.util.Iterator i#8, proxyIds, profile#17;
        org.apache.maven.settings.Mirror server#9;
        org.apache.maven.settings.Profile profile;
        org.apache.maven.settings.Proxy prefix#18;
        java.util.HashSet $u2, $u5, $u10;
        org.apache.maven.settings.validation.DefaultSettingsValidator $r0, $r1;

        this := @this: DefaultSettingsValidator;

        settings := @parameter0: org.apache.maven.settings.Settings;

        problems := @parameter1: org.apache.maven.settings.building.SettingsProblemCollector;

        $stack11 = virtualinvoke settings.<org.apache.maven.settings.Settings: boolean isUsePluginRegistry()>();

        if $stack11 == 0 goto label01;

        $stack163 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack163, "usePluginRegistry", null, "is deprecated and has no effect.");

     label01:
        pluginGroups = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getPluginGroups()>();

        if pluginGroups == null goto label05;

        i = 0;

     label02:
        $stack141 = interfaceinvoke pluginGroups.<java.util.List: int size()>();

        if i >= $stack141 goto label05;

        $stack144 = interfaceinvoke pluginGroups.<java.util.List: java.lang.Object get(int)>(i);

        $stack145 = (java.lang.String) $stack144;

        pluginGroup = virtualinvoke $stack145.<java.lang.String: java.lang.String trim()>();

        $stack147 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isBlank(java.lang.String)>(pluginGroup);

        if $stack147 == 0 goto label03;

        $stack158 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity ERROR>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack159 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pluginGroups.pluginGroup[");

        $stack160 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        $stack161 = virtualinvoke $stack160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack162 = virtualinvoke $stack161.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack158, $stack162, null, "must not be empty");

        goto label04;

     label03:
        $stack148 = virtualinvoke pluginGroup.<java.lang.String: boolean matches(java.lang.String)>("[A-Za-z0-9_\\-.]+");

        if $stack148 != 0 goto label04;

        $stack152 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity ERROR>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack153 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pluginGroups.pluginGroup[");

        $stack154 = virtualinvoke $stack153.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        $stack155 = virtualinvoke $stack154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack156 = virtualinvoke $stack155.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack152, $stack156, null, "must denote a valid group id and match the pattern [A-Za-z0-9_\\-.]+");

     label04:
        i = i + 1;

        goto label02;

     label05:
        i#3 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getServers()>();

        if i#3 == null goto label08;

        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

        i = 0;

     label06:
        $stack118 = interfaceinvoke i#3.<java.util.List: int size()>();

        if i >= $stack118 goto label08;

        $stack121 = interfaceinvoke i#3.<java.util.List: java.lang.Object get(int)>(i);

        server = (org.apache.maven.settings.Server) $stack121;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack123 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("servers.server[");

        $stack124 = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i);

        $stack125 = virtualinvoke $stack124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].id");

        $stack126 = virtualinvoke $stack125.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack127 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getId()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack126, $stack127, null);

        $stack129 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getId()>();

        $stack130 = interfaceinvoke $u2.<java.util.Set: boolean add(java.lang.Object)>($stack129);

        if $stack130 != 0 goto label07;

        $stack134 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack137 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be unique but found duplicate server with id ");

        $stack138 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getId()>();

        $stack139 = virtualinvoke $stack137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack138);

        $stack140 = virtualinvoke $stack139.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack134, "servers.server.id", null, $stack140);

     label07:
        i = i + 1;

        goto label06;

     label08:
        pluginGroup#7 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getMirrors()>();

        if pluginGroup#7 == null goto label11;

        i#8 = interfaceinvoke pluginGroup#7.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $stack86 = interfaceinvoke i#8.<java.util.Iterator: boolean hasNext()>();

        if $stack86 == 0 goto label11;

        $stack89 = interfaceinvoke i#8.<java.util.Iterator: java.lang.Object next()>();

        server#9 = (org.apache.maven.settings.Mirror) $stack89;

        $stack91 = virtualinvoke server#9.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        $stack92 = virtualinvoke server#9.<org.apache.maven.settings.Mirror: java.lang.String getUrl()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,java.lang.String,java.lang.String)>(problems, "mirrors.mirror.id", $stack91, $stack92);

        $stack95 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        $stack96 = virtualinvoke server#9.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateBannedCharacters(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, "mirrors.mirror.id", $stack95, $stack96, null, "\\/:\"<>|?*");

        $stack98 = "local";

        $stack99 = virtualinvoke server#9.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        $stack100 = virtualinvoke $stack98.<java.lang.String: boolean equals(java.lang.Object)>($stack99);

        if $stack100 == 0 goto label10;

        $stack110 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack110, "mirrors.mirror.id", null, "must not be \'local\', this identifier is reserved for the local repository, using it for other repositories will corrupt your repository metadata.");

     label10:
        $stack102 = virtualinvoke server#9.<org.apache.maven.settings.Mirror: java.lang.String getUrl()>();

        $stack103 = virtualinvoke server#9.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,java.lang.String,java.lang.String)>(problems, "mirrors.mirror.url", $stack102, $stack103);

        $stack106 = virtualinvoke server#9.<org.apache.maven.settings.Mirror: java.lang.String getMirrorOf()>();

        $stack107 = virtualinvoke server#9.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,java.lang.String,java.lang.String)>(problems, "mirrors.mirror.mirrorOf", $stack106, $stack107);

        goto label09;

     label11:
        i#3 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getProfiles()>();

        if i#3 == null goto label14;

        $u5 = new java.util.HashSet;

        specialinvoke $u5.<java.util.HashSet: void <init>()>();

        proxyIds = interfaceinvoke i#3.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $stack41 = interfaceinvoke proxyIds.<java.util.Iterator: boolean hasNext()>();

        if $stack41 == 0 goto label14;

        $stack44 = interfaceinvoke proxyIds.<java.util.Iterator: java.lang.Object next()>();

        profile = (org.apache.maven.settings.Profile) $stack44;

        $stack45 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.lang.String getId()>();

        $stack46 = interfaceinvoke $u5.<java.util.Set: boolean add(java.lang.Object)>($stack45);

        if $stack46 != 0 goto label13;

        $stack65 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack68 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be unique but found duplicate profile with id ");

        $stack69 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.lang.String getId()>();

        $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack69);

        $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack65, "profiles.profile.id", null, $stack71);

     label13:
        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        $stack48 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("profiles.profile[");

        $stack49 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.lang.String getId()>();

        $stack50 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49);

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("].");

        prefix = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack53 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.List getRepositories()>();

        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $stack55 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack56 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("repositories.repository");

        $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidator) this;

        specialinvoke $r0.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validateRepositories(org.apache.maven.settings.building.SettingsProblemCollector,java.util.List,java.lang.String)>(problems, $stack53, $stack57);

        $stack58 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.List getPluginRepositories()>();

        $u9 = new java.lang.StringBuilder;

        specialinvoke $u9.<java.lang.StringBuilder: void <init>()>();

        $stack60 = virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pluginRepositories.pluginRepository");

        $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = (org.apache.maven.settings.validation.DefaultSettingsValidator) this;

        specialinvoke $r1.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validateRepositories(org.apache.maven.settings.building.SettingsProblemCollector,java.util.List,java.lang.String)>(problems, $stack58, $stack62);

        goto label12;

     label14:
        server#15 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getProxies()>();

        if server#15 == null goto label17;

        $u10 = new java.util.HashSet;

        specialinvoke $u10.<java.util.HashSet: void <init>()>();

        profile#17 = interfaceinvoke server#15.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $stack19 = interfaceinvoke profile#17.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label17;

        $stack20 = interfaceinvoke profile#17.<java.util.Iterator: java.lang.Object next()>();

        prefix#18 = (org.apache.maven.settings.Proxy) $stack20;

        $stack21 = virtualinvoke prefix#18.<org.apache.maven.settings.Proxy: java.lang.String getId()>();

        $stack22 = interfaceinvoke $u10.<java.util.Set: boolean add(java.lang.Object)>($stack21);

        if $stack22 != 0 goto label16;

        $stack29 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        $u11 = new java.lang.StringBuilder;

        specialinvoke $u11.<java.lang.StringBuilder: void <init>()>();

        $stack32 = virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be unique but found duplicate proxy with id ");

        $stack33 = virtualinvoke prefix#18.<org.apache.maven.settings.Proxy: java.lang.String getId()>();

        $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33);

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack29, "proxies.proxy.id", null, $stack35);

     label16:
        $stack24 = virtualinvoke prefix#18.<org.apache.maven.settings.Proxy: java.lang.String getHost()>();

        $stack25 = virtualinvoke prefix#18.<org.apache.maven.settings.Proxy: java.lang.String getId()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,java.lang.String,java.lang.String)>(problems, "proxies.proxy.host", $stack24, $stack25);

        goto label15;

     label17:
        return;
    }

    private void validateRepositories(org.apache.maven.settings.building.SettingsProblemCollector, java.util.List, java.lang.String)
    {
        java.util.HashSet $stack7;
        java.util.List repositories;
        java.util.Iterator l5;
        boolean $stack9, $stack27, $stack29, $stack39;
        java.lang.Object $stack10;
        org.apache.maven.settings.Repository repository;
        org.apache.maven.settings.building.SettingsProblemCollector problems;
        java.lang.StringBuilder $stack11, $stack12, $stack13, $stack18, $stack19, $stack20, $stack30, $stack31, $stack32, $stack41, $stack43, $stack44, $stack47, $stack49, $stack50, $stack52, $stack54, $stack56, $stack64, $stack66, $stack67;
        java.lang.String prefix, $stack14, $stack15, $stack16, $stack21, $stack23, $stack25, $stack26, $stack28, $stack33, $stack34, $stack35, $stack37, $stack38, $stack45, $stack46, $stack51, $stack55, $stack57, $stack68;
        org.apache.maven.settings.building.SettingsProblem$Severity $stack22, $stack42, $stack48, $stack65;
        DefaultSettingsValidator this;

        this := @this: DefaultSettingsValidator;

        problems := @parameter0: org.apache.maven.settings.building.SettingsProblemCollector;

        repositories := @parameter1: java.util.List;

        prefix := @parameter2: java.lang.String;

        $stack7 = new java.util.HashSet;

        specialinvoke $stack7.<java.util.HashSet: void <init>()>();

        l5 = interfaceinvoke repositories.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label5;

        $stack10 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        repository = (org.apache.maven.settings.Repository) $stack10;

        $stack11 = new java.lang.StringBuilder;

        specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".id");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack15 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getId()>();

        $stack16 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getUrl()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack14, $stack15, $stack16);

        $stack18 = new java.lang.StringBuilder;

        specialinvoke $stack18.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".id");

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack22 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        $stack23 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getId()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateBannedCharacters(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack21, $stack22, $stack23, null, "\\/:\"<>|?*");

        $stack25 = "local";

        $stack26 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getId()>();

        $stack27 = virtualinvoke $stack25.<java.lang.String: boolean equals(java.lang.Object)>($stack26);

        if $stack27 == 0 goto label2;

        $stack65 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        $stack64 = new java.lang.StringBuilder;

        specialinvoke $stack64.<java.lang.StringBuilder: void <init>()>();

        $stack66 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".id");

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack65, $stack68, null, "must not be \'local\', this identifier is reserved for the local repository, using it for other repositories will corrupt your repository metadata.");

     label2:
        $stack28 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getId()>();

        $stack29 = interfaceinvoke $stack7.<java.util.Set: boolean add(java.lang.Object)>($stack28);

        if $stack29 != 0 goto label3;

        $stack48 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        $stack47 = new java.lang.StringBuilder;

        specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>();

        $stack49 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".id");

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack52 = new java.lang.StringBuilder;

        specialinvoke $stack52.<java.lang.StringBuilder: void <init>()>();

        $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must be unique but found duplicate repository with id ");

        $stack55 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getId()>();

        $stack56 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack55);

        $stack57 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack48, $stack51, null, $stack57);

     label3:
        $stack30 = new java.lang.StringBuilder;

        specialinvoke $stack30.<java.lang.StringBuilder: void <init>()>();

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".url");

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack34 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getUrl()>();

        $stack35 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getId()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack33, $stack34, $stack35);

        $stack37 = "legacy";

        $stack38 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getLayout()>();

        $stack39 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>($stack38);

        if $stack39 == 0 goto label4;

        $stack42 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity WARNING>;

        $stack41 = new java.lang.StringBuilder;

        specialinvoke $stack41.<java.lang.StringBuilder: void <init>()>();

        $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack44 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".layout");

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack46 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getId()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack42, $stack45, $stack46, "uses the unsupported value \'legacy\', artifact resolution might fail.");

     label4:
        goto label1;

     label5:
        return;
    }

    private static boolean validateStringNotEmpty(org.apache.maven.settings.building.SettingsProblemCollector, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.maven.settings.building.SettingsProblemCollector problems;
        java.lang.String fieldName, string, sourceHint;
        boolean $stack4;
        int $stack5;
        org.apache.maven.settings.building.SettingsProblem$Severity $stack6;

        problems := @parameter0: org.apache.maven.settings.building.SettingsProblemCollector;

        fieldName := @parameter1: java.lang.String;

        string := @parameter2: java.lang.String;

        sourceHint := @parameter3: java.lang.String;

        $stack4 = staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: boolean validateNotNull(org.apache.maven.settings.building.SettingsProblemCollector,java.lang.String,java.lang.Object,java.lang.String)>(problems, fieldName, string, sourceHint);

        if $stack4 != 0 goto label1;

        return 0;

     label1:
        $stack5 = virtualinvoke string.<java.lang.String: int length()>();

        if $stack5 <= 0 goto label2;

        return 1;

     label2:
        $stack6 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity ERROR>;

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack6, fieldName, sourceHint, "is missing");

        return 0;
    }

    private static boolean validateNotNull(org.apache.maven.settings.building.SettingsProblemCollector, java.lang.String, java.lang.Object, java.lang.String)
    {
        java.lang.Object object;
        org.apache.maven.settings.building.SettingsProblemCollector problems;
        java.lang.String fieldName, sourceHint;
        org.apache.maven.settings.building.SettingsProblem$Severity $stack4;

        problems := @parameter0: org.apache.maven.settings.building.SettingsProblemCollector;

        fieldName := @parameter1: java.lang.String;

        object := @parameter2: java.lang.Object;

        sourceHint := @parameter3: java.lang.String;

        if object == null goto label1;

        return 1;

     label1:
        $stack4 = <org.apache.maven.settings.building.SettingsProblem$Severity: org.apache.maven.settings.building.SettingsProblem$Severity ERROR>;

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, $stack4, fieldName, sourceHint, "is missing");

        return 0;
    }

    private static boolean validateBannedCharacters(org.apache.maven.settings.building.SettingsProblemCollector, java.lang.String, org.apache.maven.settings.building.SettingsProblem$Severity, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String string, banned, fieldName, sourceHint, $stack18;
        int $stack7, $stack10, i;
        char $stack9, $stack16;
        org.apache.maven.settings.building.SettingsProblemCollector problems;
        org.apache.maven.settings.building.SettingsProblem$Severity severity;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $stack15, $stack17;

        problems := @parameter0: org.apache.maven.settings.building.SettingsProblemCollector;

        fieldName := @parameter1: java.lang.String;

        severity := @parameter2: org.apache.maven.settings.building.SettingsProblem$Severity;

        string := @parameter3: java.lang.String;

        sourceHint := @parameter4: java.lang.String;

        banned := @parameter5: java.lang.String;

        if string == null goto label3;

        $stack7 = virtualinvoke string.<java.lang.String: int length()>();

        i = $stack7 - 1;

     label1:
        if i < 0 goto label3;

        $stack9 = virtualinvoke string.<java.lang.String: char charAt(int)>(i);

        $stack10 = virtualinvoke banned.<java.lang.String: int indexOf(int)>($stack9);

        if $stack10 < 0 goto label2;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("must not contain any of these characters ");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(banned);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but found ");

        $stack16 = virtualinvoke string.<java.lang.String: char charAt(int)>(i);

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack16);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.settings.validation.DefaultSettingsValidator: void addViolation(org.apache.maven.settings.building.SettingsProblemCollector,org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,java.lang.String,java.lang.String)>(problems, severity, fieldName, sourceHint, $stack18);

        return 0;

     label2:
        i = i + -1;

        goto label1;

     label3:
        return 1;
    }

    private static void addViolation(org.apache.maven.settings.building.SettingsProblemCollector, org.apache.maven.settings.building.SettingsProblem$Severity, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $stack6, $stack7, $stack8, $stack10, $stack13;
        java.lang.String fieldName, sourceHint, message, $stack12;
        org.apache.maven.settings.building.SettingsProblemCollector problems;
        org.apache.maven.settings.building.SettingsProblem$Severity severity;

        problems := @parameter0: org.apache.maven.settings.building.SettingsProblemCollector;

        severity := @parameter1: org.apache.maven.settings.building.SettingsProblem$Severity;

        fieldName := @parameter2: java.lang.String;

        sourceHint := @parameter3: java.lang.String;

        message := @parameter4: java.lang.String;

        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>(int)>(256);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(fieldName);

        virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        if sourceHint == null goto label1;

        $stack13 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(sourceHint);

     label1:
        $stack10 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack12 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke problems.<org.apache.maven.settings.building.SettingsProblemCollector: void add(org.apache.maven.settings.building.SettingsProblem$Severity,java.lang.String,int,int,java.lang.Exception)>(severity, $stack12, -1, -1, null);

        return;
    }

    public static void <clinit>()
    {
        <DefaultSettingsValidator: java.lang.String ILLEGAL_REPO_ID_CHARS> = "\\/:\"<>|?*";

        <DefaultSettingsValidator: java.lang.String ILLEGAL_FS_CHARS> = "\\/:\"<>|?*";

        <DefaultSettingsValidator: java.lang.String ID_REGEX> = "[A-Za-z0-9_\\-.]+";

        return;
    }
}
