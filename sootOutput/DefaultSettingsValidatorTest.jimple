public class DefaultSettingsValidatorTest extends java.lang.Object
{
    private org.apache.maven.settings.validation.DefaultSettingsValidator validator;

    public void <init>()
    {
        DefaultSettingsValidatorTest this;

        this := @this: DefaultSettingsValidatorTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void setUp() throws java.lang.Exception
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidator $u0;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0;

        this := @this: DefaultSettingsValidatorTest;

        $u0 = new org.apache.maven.settings.validation.DefaultSettingsValidator;

        specialinvoke $u0.<org.apache.maven.settings.validation.DefaultSettingsValidator: void <init>()>();

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator> = $u0;

        return;
    }

    public void tearDown() throws java.lang.Exception
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0;

        this := @this: DefaultSettingsValidatorTest;

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator> = null;

        return;
    }

    private void assertContains(java.lang.String, java.lang.String)
    {
        java.lang.String msg, substring, $stack9;
        boolean $stack3;
        java.lang.StringBuilder $stack4, $stack5, $stack6, $stack7, $stack8;
        DefaultSettingsValidatorTest this;

        this := @this: DefaultSettingsValidatorTest;

        msg := @parameter0: java.lang.String;

        substring := @parameter1: java.lang.String;

        $stack3 = virtualinvoke msg.<java.lang.String: boolean contains(java.lang.CharSequence)>(substring);

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(substring);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" was not found in: ");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack3, $stack9);

        return;
    }

    public void testValidate()
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidator $stack8, $stack14, $stack19, $stack24;
        java.util.List $stack9, $stack15, $stack20, $stack25;
        int $stack11, $stack17, $stack22, $stack27;
        org.apache.maven.settings.Settings $u0;
        org.apache.maven.settings.Profile $u1;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector $u2, $u4, $u5, $u6;
        org.apache.maven.settings.Repository $u3;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0, $r2, $r4, $r6;
        org.apache.maven.settings.building.SettingsProblemCollector $r1, $r3, $r5, $r7;

        this := @this: DefaultSettingsValidatorTest;

        $u0 = new org.apache.maven.settings.Settings;

        specialinvoke $u0.<org.apache.maven.settings.Settings: void <init>()>();

        $u1 = new org.apache.maven.settings.Profile;

        specialinvoke $u1.<org.apache.maven.settings.Profile: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.settings.Profile: void setId(java.lang.String)>("xxx");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addProfile(org.apache.maven.settings.Profile)>($u1);

        $u2 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack8 = $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r1 = (org.apache.maven.settings.building.SettingsProblemCollector) $u2;

        virtualinvoke $stack8.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r1);

        $stack9 = $u2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack11 = interfaceinvoke $stack9.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(0, $stack11);

        $u3 = new org.apache.maven.settings.Repository;

        specialinvoke $u3.<org.apache.maven.settings.Repository: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.settings.Profile: void addRepository(org.apache.maven.settings.Repository)>($u3);

        $u4 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r2 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack14 = $r2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r3 = (org.apache.maven.settings.building.SettingsProblemCollector) $u4;

        virtualinvoke $stack14.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r3);

        $stack15 = $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack17 = interfaceinvoke $stack15.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(2, $stack17);

        virtualinvoke $u3.<org.apache.maven.settings.Repository: void setUrl(java.lang.String)>("http://xxx.xxx.com");

        $u5 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u5.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r4 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack19 = $r4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r5 = (org.apache.maven.settings.building.SettingsProblemCollector) $u5;

        virtualinvoke $stack19.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r5);

        $stack20 = $u5.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack22 = interfaceinvoke $stack20.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack22);

        virtualinvoke $u3.<org.apache.maven.settings.Repository: void setId(java.lang.String)>("xxx");

        $u6 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u6.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r6 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack24 = $r6.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r7 = (org.apache.maven.settings.building.SettingsProblemCollector) $u6;

        virtualinvoke $stack24.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r7);

        $stack25 = $u6.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack27 = interfaceinvoke $stack25.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(0, $stack27);

        return;
    }

    public void testValidateMirror() throws java.lang.Exception
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidator $stack8;
        java.util.List $stack9, $stack12, $stack15, $stack18, $stack21;
        int $stack11;
        java.lang.Object $stack13, $stack16, $stack19, $stack22;
        java.lang.String $stack14, $stack17, $stack20, $stack23;
        org.apache.maven.settings.Settings $u0;
        org.apache.maven.settings.Mirror $u1, $u2;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector $u3;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0, $r2, $r3, $r4, $r5;
        org.apache.maven.settings.building.SettingsProblemCollector $r1;

        this := @this: DefaultSettingsValidatorTest;

        $u0 = new org.apache.maven.settings.Settings;

        specialinvoke $u0.<org.apache.maven.settings.Settings: void <init>()>();

        $u1 = new org.apache.maven.settings.Mirror;

        specialinvoke $u1.<org.apache.maven.settings.Mirror: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.settings.Mirror: void setId(java.lang.String)>("local");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addMirror(org.apache.maven.settings.Mirror)>($u1);

        $u2 = new org.apache.maven.settings.Mirror;

        specialinvoke $u2.<org.apache.maven.settings.Mirror: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.settings.Mirror: void setId(java.lang.String)>("illegal\\:/chars");

        virtualinvoke $u2.<org.apache.maven.settings.Mirror: void setUrl(java.lang.String)>("http://void");

        virtualinvoke $u2.<org.apache.maven.settings.Mirror: void setMirrorOf(java.lang.String)>("void");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addMirror(org.apache.maven.settings.Mirror)>($u2);

        $u3 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack8 = $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r1 = (org.apache.maven.settings.building.SettingsProblemCollector) $u3;

        virtualinvoke $stack8.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r1);

        $stack9 = $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack11 = interfaceinvoke $stack9.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(4, $stack11);

        $stack12 = $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack13 = interfaceinvoke $stack12.<java.util.List: java.lang.Object get(int)>(0);

        $stack14 = (java.lang.String) $stack13;

        $r2 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack14, "\'mirrors.mirror.id\' must not be \'local\'");

        $stack15 = $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack16 = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(1);

        $stack17 = (java.lang.String) $stack16;

        $r3 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack17, "\'mirrors.mirror.url\' for local is missing");

        $stack18 = $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack19 = interfaceinvoke $stack18.<java.util.List: java.lang.Object get(int)>(2);

        $stack20 = (java.lang.String) $stack19;

        $r4 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack20, "\'mirrors.mirror.mirrorOf\' for local is missing");

        $stack21 = $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack22 = interfaceinvoke $stack21.<java.util.List: java.lang.Object get(int)>(3);

        $stack23 = (java.lang.String) $stack22;

        $r5 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r5.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack23, "\'mirrors.mirror.id\' must not contain any of these characters");

        return;
    }

    public void testValidateRepository() throws java.lang.Exception
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidator $stack10;
        java.util.List $stack11, $stack14, $stack17, $stack20;
        int $stack13;
        java.lang.Object $stack15, $stack18, $stack21;
        java.lang.String $stack16, $stack19, $stack22;
        org.apache.maven.settings.Profile $u0;
        org.apache.maven.settings.Repository $u1, $u2;
        org.apache.maven.settings.Settings $u3;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector $u4;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0, $r2, $r3, $r4;
        org.apache.maven.settings.building.SettingsProblemCollector $r1;

        this := @this: DefaultSettingsValidatorTest;

        $u0 = new org.apache.maven.settings.Profile;

        specialinvoke $u0.<org.apache.maven.settings.Profile: void <init>()>();

        $u1 = new org.apache.maven.settings.Repository;

        specialinvoke $u1.<org.apache.maven.settings.Repository: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.settings.Repository: void setId(java.lang.String)>("local");

        virtualinvoke $u0.<org.apache.maven.settings.Profile: void addRepository(org.apache.maven.settings.Repository)>($u1);

        $u2 = new org.apache.maven.settings.Repository;

        specialinvoke $u2.<org.apache.maven.settings.Repository: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.settings.Repository: void setId(java.lang.String)>("illegal\\:/chars");

        virtualinvoke $u2.<org.apache.maven.settings.Repository: void setUrl(java.lang.String)>("http://void");

        virtualinvoke $u0.<org.apache.maven.settings.Profile: void addRepository(org.apache.maven.settings.Repository)>($u2);

        $u3 = new org.apache.maven.settings.Settings;

        specialinvoke $u3.<org.apache.maven.settings.Settings: void <init>()>();

        virtualinvoke $u3.<org.apache.maven.settings.Settings: void addProfile(org.apache.maven.settings.Profile)>($u0);

        $u4 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack10 = $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r1 = (org.apache.maven.settings.building.SettingsProblemCollector) $u4;

        virtualinvoke $stack10.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u3, $r1);

        $stack11 = $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack13 = interfaceinvoke $stack11.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(3, $stack13);

        $stack14 = $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack15 = interfaceinvoke $stack14.<java.util.List: java.lang.Object get(int)>(0);

        $stack16 = (java.lang.String) $stack15;

        $r2 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack16, "\'profiles.profile[default].repositories.repository.id\' must not be \'local\'");

        $stack17 = $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack18 = interfaceinvoke $stack17.<java.util.List: java.lang.Object get(int)>(1);

        $stack19 = (java.lang.String) $stack18;

        $r3 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack19, "\'profiles.profile[default].repositories.repository.url\' for local is missing");

        $stack20 = $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack21 = interfaceinvoke $stack20.<java.util.List: java.lang.Object get(int)>(2);

        $stack22 = (java.lang.String) $stack21;

        $r4 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack22, "\'profiles.profile[default].repositories.repository.id\' must not contain any of these characters");

        return;
    }

    public void testValidateUniqueServerId() throws java.lang.Exception
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidator $stack9;
        java.util.List $stack10, $stack13;
        int $stack12;
        java.lang.Object $stack14;
        java.lang.String $stack15;
        org.apache.maven.settings.Settings $u0;
        org.apache.maven.settings.Server $u1, $u2;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector $u3;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0, $r2;
        org.apache.maven.settings.building.SettingsProblemCollector $r1;

        this := @this: DefaultSettingsValidatorTest;

        $u0 = new org.apache.maven.settings.Settings;

        specialinvoke $u0.<org.apache.maven.settings.Settings: void <init>()>();

        $u1 = new org.apache.maven.settings.Server;

        specialinvoke $u1.<org.apache.maven.settings.Server: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.settings.Server: void setId(java.lang.String)>("test");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addServer(org.apache.maven.settings.Server)>($u1);

        $u2 = new org.apache.maven.settings.Server;

        specialinvoke $u2.<org.apache.maven.settings.Server: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.settings.Server: void setId(java.lang.String)>("test");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addServer(org.apache.maven.settings.Server)>($u2);

        $u3 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack9 = $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r1 = (org.apache.maven.settings.building.SettingsProblemCollector) $u3;

        virtualinvoke $stack9.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r1);

        $stack10 = $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack12 = interfaceinvoke $stack10.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack12);

        $stack13 = $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack14 = interfaceinvoke $stack13.<java.util.List: java.lang.Object get(int)>(0);

        $stack15 = (java.lang.String) $stack14;

        $r2 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack15, "\'servers.server.id\' must be unique but found duplicate server with id test");

        return;
    }

    public void testValidateUniqueProfileId() throws java.lang.Exception
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidator $stack9;
        java.util.List $stack10, $stack13;
        int $stack12;
        java.lang.Object $stack14;
        java.lang.String $stack15;
        org.apache.maven.settings.Settings $u0;
        org.apache.maven.settings.Profile $u1, $u2;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector $u3;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0, $r2;
        org.apache.maven.settings.building.SettingsProblemCollector $r1;

        this := @this: DefaultSettingsValidatorTest;

        $u0 = new org.apache.maven.settings.Settings;

        specialinvoke $u0.<org.apache.maven.settings.Settings: void <init>()>();

        $u1 = new org.apache.maven.settings.Profile;

        specialinvoke $u1.<org.apache.maven.settings.Profile: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.settings.Profile: void setId(java.lang.String)>("test");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addProfile(org.apache.maven.settings.Profile)>($u1);

        $u2 = new org.apache.maven.settings.Profile;

        specialinvoke $u2.<org.apache.maven.settings.Profile: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.settings.Profile: void setId(java.lang.String)>("test");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addProfile(org.apache.maven.settings.Profile)>($u2);

        $u3 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack9 = $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r1 = (org.apache.maven.settings.building.SettingsProblemCollector) $u3;

        virtualinvoke $stack9.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r1);

        $stack10 = $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack12 = interfaceinvoke $stack10.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack12);

        $stack13 = $u3.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack14 = interfaceinvoke $stack13.<java.util.List: java.lang.Object get(int)>(0);

        $stack15 = (java.lang.String) $stack14;

        $r2 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack15, "\'profiles.profile.id\' must be unique but found duplicate profile with id test");

        return;
    }

    public void testValidateUniqueRepositoryId() throws java.lang.Exception
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidator $stack11;
        java.util.List $stack12, $stack15;
        int $stack14;
        java.lang.Object $stack16;
        java.lang.String $stack17;
        org.apache.maven.settings.Settings $u0;
        org.apache.maven.settings.Profile $u1;
        org.apache.maven.settings.Repository $u2, $u3;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector $u4;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0, $r2;
        org.apache.maven.settings.building.SettingsProblemCollector $r1;

        this := @this: DefaultSettingsValidatorTest;

        $u0 = new org.apache.maven.settings.Settings;

        specialinvoke $u0.<org.apache.maven.settings.Settings: void <init>()>();

        $u1 = new org.apache.maven.settings.Profile;

        specialinvoke $u1.<org.apache.maven.settings.Profile: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.settings.Profile: void setId(java.lang.String)>("pro");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addProfile(org.apache.maven.settings.Profile)>($u1);

        $u2 = new org.apache.maven.settings.Repository;

        specialinvoke $u2.<org.apache.maven.settings.Repository: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.settings.Repository: void setUrl(java.lang.String)>("http://apache.org/");

        virtualinvoke $u2.<org.apache.maven.settings.Repository: void setId(java.lang.String)>("test");

        virtualinvoke $u1.<org.apache.maven.settings.Profile: void addRepository(org.apache.maven.settings.Repository)>($u2);

        $u3 = new org.apache.maven.settings.Repository;

        specialinvoke $u3.<org.apache.maven.settings.Repository: void <init>()>();

        virtualinvoke $u3.<org.apache.maven.settings.Repository: void setUrl(java.lang.String)>("http://apache.org/");

        virtualinvoke $u3.<org.apache.maven.settings.Repository: void setId(java.lang.String)>("test");

        virtualinvoke $u1.<org.apache.maven.settings.Profile: void addRepository(org.apache.maven.settings.Repository)>($u3);

        $u4 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack11 = $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r1 = (org.apache.maven.settings.building.SettingsProblemCollector) $u4;

        virtualinvoke $stack11.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r1);

        $stack12 = $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack14 = interfaceinvoke $stack12.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack14);

        $stack15 = $u4.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack16 = interfaceinvoke $stack15.<java.util.List: java.lang.Object get(int)>(0);

        $stack17 = (java.lang.String) $stack16;

        $r2 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack17, "\'profiles.profile[pro].repositories.repository.id\' must be unique but found duplicate repository with id test");

        return;
    }

    public void testValidateUniqueProxyId() throws java.lang.Exception
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidator $stack8;
        java.util.List $stack9, $stack12;
        int $stack11;
        java.lang.Object $stack13;
        java.lang.String $stack15, $stack18;
        java.lang.StringBuilder $stack16, $stack17, $u3;
        org.apache.maven.settings.Settings $u0;
        org.apache.maven.settings.Proxy $u1;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector $u2;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0, $r2;
        org.apache.maven.settings.building.SettingsProblemCollector $r1;

        this := @this: DefaultSettingsValidatorTest;

        $u0 = new org.apache.maven.settings.Settings;

        specialinvoke $u0.<org.apache.maven.settings.Settings: void <init>()>();

        $u1 = new org.apache.maven.settings.Proxy;

        specialinvoke $u1.<org.apache.maven.settings.Proxy: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.settings.Proxy: void setId(java.lang.String)>(null);

        virtualinvoke $u1.<org.apache.maven.settings.Proxy: void setHost(java.lang.String)>("www.example.com");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addProxy(org.apache.maven.settings.Proxy)>($u1);

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addProxy(org.apache.maven.settings.Proxy)>($u1);

        $u2 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack8 = $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r1 = (org.apache.maven.settings.building.SettingsProblemCollector) $u2;

        virtualinvoke $stack8.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r1);

        $stack9 = $u2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack11 = interfaceinvoke $stack9.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack11);

        $stack12 = $u2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack13 = interfaceinvoke $stack12.<java.util.List: java.lang.Object get(int)>(0);

        $stack15 = (java.lang.String) $stack13;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'proxies.proxy.id\' must be unique but found duplicate proxy with id ");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(null);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r2 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack15, $stack18);

        return;
    }

    public void testValidateProxy() throws java.lang.Exception
    {
        DefaultSettingsValidatorTest this;
        org.apache.maven.settings.validation.DefaultSettingsValidator $stack7;
        java.util.List $stack8, $stack11;
        int $stack10;
        java.lang.Object $stack12;
        java.lang.String $stack13;
        org.apache.maven.settings.Settings $u0;
        org.apache.maven.settings.Proxy $u1;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector $u2;
        org.apache.maven.settings.validation.DefaultSettingsValidatorTest $r0, $r2;
        org.apache.maven.settings.building.SettingsProblemCollector $r1;

        this := @this: DefaultSettingsValidatorTest;

        $u0 = new org.apache.maven.settings.Settings;

        specialinvoke $u0.<org.apache.maven.settings.Settings: void <init>()>();

        $u1 = new org.apache.maven.settings.Proxy;

        specialinvoke $u1.<org.apache.maven.settings.Proxy: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void addProxy(org.apache.maven.settings.Proxy)>($u1);

        $u2 = new org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector;

        specialinvoke $u2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: void <init>(org.apache.maven.settings.validation.DefaultSettingsValidatorTest$1)>(null);

        $r0 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        $stack7 = $r0.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: org.apache.maven.settings.validation.DefaultSettingsValidator validator>;

        $r1 = (org.apache.maven.settings.building.SettingsProblemCollector) $u2;

        virtualinvoke $stack7.<org.apache.maven.settings.validation.DefaultSettingsValidator: void validate(org.apache.maven.settings.Settings,org.apache.maven.settings.building.SettingsProblemCollector)>($u0, $r1);

        $stack8 = $u2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack10 = interfaceinvoke $stack8.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack10);

        $stack11 = $u2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest$SimpleProblemCollector: java.util.List messages>;

        $stack12 = interfaceinvoke $stack11.<java.util.List: java.lang.Object get(int)>(0);

        $stack13 = (java.lang.String) $stack12;

        $r2 = (org.apache.maven.settings.validation.DefaultSettingsValidatorTest) this;

        specialinvoke $r2.<org.apache.maven.settings.validation.DefaultSettingsValidatorTest: void assertContains(java.lang.String,java.lang.String)>($stack13, "\'proxies.proxy.host\' for default is missing");

        return;
    }
}
