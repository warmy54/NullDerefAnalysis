public abstract class DefaultToolchain extends java.lang.Object implements org.apache.maven.toolchain.Toolchain, org.apache.maven.toolchain.ToolchainPrivate
{
    private java.lang.String type;
    private java.util.Map provides;
    public static final java.lang.String KEY_TYPE;
    private org.apache.maven.toolchain.model.ToolchainModel model;
    private org.codehaus.plexus.logging.Logger logger;

    protected void <init>(org.apache.maven.toolchain.model.ToolchainModel, org.codehaus.plexus.logging.Logger)
    {
        DefaultToolchain this;
        org.apache.maven.toolchain.model.ToolchainModel model;
        org.codehaus.plexus.logging.Logger logger;
        java.util.HashMap $u0;
        org.apache.maven.toolchain.DefaultToolchain $r0, $r1, $r2;

        this := @this: DefaultToolchain;

        model := @parameter0: org.apache.maven.toolchain.model.ToolchainModel;

        logger := @parameter1: org.codehaus.plexus.logging.Logger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $r0.<org.apache.maven.toolchain.DefaultToolchain: java.util.Map provides> = $u0;

        $r1 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $r1.<org.apache.maven.toolchain.DefaultToolchain: org.apache.maven.toolchain.model.ToolchainModel model> = model;

        $r2 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $r2.<org.apache.maven.toolchain.DefaultToolchain: org.codehaus.plexus.logging.Logger logger> = logger;

        return;
    }

    protected void <init>(org.apache.maven.toolchain.model.ToolchainModel, java.lang.String, org.codehaus.plexus.logging.Logger)
    {
        DefaultToolchain this;
        org.apache.maven.toolchain.model.ToolchainModel model;
        org.codehaus.plexus.logging.Logger logger;
        java.lang.String type;
        org.apache.maven.toolchain.DefaultToolchain $r0, $r1;

        this := @this: DefaultToolchain;

        model := @parameter0: org.apache.maven.toolchain.model.ToolchainModel;

        type := @parameter1: java.lang.String;

        logger := @parameter2: org.codehaus.plexus.logging.Logger;

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        specialinvoke $r0.<org.apache.maven.toolchain.DefaultToolchain: void <init>(org.apache.maven.toolchain.model.ToolchainModel,org.codehaus.plexus.logging.Logger)>(model, logger);

        $r1 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $r1.<org.apache.maven.toolchain.DefaultToolchain: java.lang.String type> = type;

        return;
    }

    public final java.lang.String getType()
    {
        DefaultToolchain this;
        java.lang.String $stack1, $stack3;
        org.apache.maven.toolchain.model.ToolchainModel $stack2;
        org.apache.maven.toolchain.DefaultToolchain $r0, $r1, $r2;

        this := @this: DefaultToolchain;

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack1 = $r0.<org.apache.maven.toolchain.DefaultToolchain: java.lang.String type>;

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack3 = $r1.<org.apache.maven.toolchain.DefaultToolchain: java.lang.String type>;

        goto label2;

     label1:
        $r2 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack2 = $r2.<org.apache.maven.toolchain.DefaultToolchain: org.apache.maven.toolchain.model.ToolchainModel model>;

        $stack3 = virtualinvoke $stack2.<org.apache.maven.toolchain.model.ToolchainModel: java.lang.String getType()>();

     label2:
        return $stack3;
    }

    public final org.apache.maven.toolchain.model.ToolchainModel getModel()
    {
        DefaultToolchain this;
        org.apache.maven.toolchain.model.ToolchainModel $stack1;
        org.apache.maven.toolchain.DefaultToolchain $r0;

        this := @this: DefaultToolchain;

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack1 = $r0.<org.apache.maven.toolchain.DefaultToolchain: org.apache.maven.toolchain.model.ToolchainModel model>;

        return $stack1;
    }

    public final void addProvideToken(java.lang.String, org.apache.maven.toolchain.RequirementMatcher)
    {
        DefaultToolchain this;
        java.lang.String type;
        org.apache.maven.toolchain.RequirementMatcher matcher;
        java.util.Map $stack3;
        org.apache.maven.toolchain.DefaultToolchain $r0;

        this := @this: DefaultToolchain;

        type := @parameter0: java.lang.String;

        matcher := @parameter1: org.apache.maven.toolchain.RequirementMatcher;

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack3 = $r0.<org.apache.maven.toolchain.DefaultToolchain: java.util.Map provides>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(type, matcher);

        return;
    }

    public boolean matchesRequirements(java.util.Map)
    {
        java.util.Map requirements, $stack11;
        java.util.Set $stack6;
        java.util.Iterator l2;
        boolean $stack8, $stack15;
        java.lang.Object $stack9, $stack10, $stack12, $stack13;
        java.util.Map$Entry requirement;
        java.lang.String key, $stack14, $stack23, $stack30;
        DefaultToolchain this;
        org.apache.maven.toolchain.RequirementMatcher matcher;
        org.codehaus.plexus.logging.Logger $stack17, $stack24;
        java.lang.StringBuilder $stack19, $stack20, $stack21, $stack22, $stack26, $stack27, $stack28, $stack29, $u0, $u1;
        org.apache.maven.toolchain.DefaultToolchain $r0, $r1, $r2;

        this := @this: DefaultToolchain;

        requirements := @parameter0: java.util.Map;

        $stack6 = interfaceinvoke requirements.<java.util.Map: java.util.Set entrySet()>();

        l2 = interfaceinvoke $stack6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label4;

        $stack9 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        requirement = (java.util.Map$Entry) $stack9;

        $stack10 = interfaceinvoke requirement.<java.util.Map$Entry: java.lang.Object getKey()>();

        key = (java.lang.String) $stack10;

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack11 = $r0.<org.apache.maven.toolchain.DefaultToolchain: java.util.Map provides>;

        $stack12 = interfaceinvoke $stack11.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        matcher = (org.apache.maven.toolchain.RequirementMatcher) $stack12;

        if matcher != null goto label2;

        $r1 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack24 = virtualinvoke $r1.<org.apache.maven.toolchain.DefaultToolchain: org.codehaus.plexus.logging.Logger getLog()>();

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack26 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Toolchain ");

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing required property: ");

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack24.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack30);

        return 0;

     label2:
        $stack13 = interfaceinvoke requirement.<java.util.Map$Entry: java.lang.Object getValue()>();

        $stack14 = (java.lang.String) $stack13;

        $stack15 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>($stack14);

        if $stack15 != 0 goto label3;

        $r2 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack17 = virtualinvoke $r2.<org.apache.maven.toolchain.DefaultToolchain: org.codehaus.plexus.logging.Logger getLog()>();

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Toolchain ");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(this);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match required property: ");

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack17.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack23);

        return 0;

     label3:
        goto label1;

     label4:
        return 1;
    }

    protected org.codehaus.plexus.logging.Logger getLog()
    {
        DefaultToolchain this;
        org.codehaus.plexus.logging.Logger $stack1;
        org.apache.maven.toolchain.DefaultToolchain $r0;

        this := @this: DefaultToolchain;

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack1 = $r0.<org.apache.maven.toolchain.DefaultToolchain: org.codehaus.plexus.logging.Logger logger>;

        return $stack1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        DefaultToolchain this;
        boolean $stack5, $stack8, $stack13;
        org.apache.maven.toolchain.DefaultToolchain other, $r0, $r1;
        java.lang.String $stack6, $stack7;
        org.apache.maven.toolchain.model.ToolchainModel $stack9, $stack11;
        java.util.Properties thisProvides, otherProvides;

        this := @this: DefaultToolchain;

        obj := @parameter0: java.lang.Object;

        if obj != null goto label1;

        return 0;

     label1:
        if this != obj goto label2;

        return 1;

     label2:
        $stack5 = obj instanceof org.apache.maven.toolchain.DefaultToolchain;

        if $stack5 != 0 goto label3;

        return 0;

     label3:
        other = (org.apache.maven.toolchain.DefaultToolchain) obj;

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack7 = $r0.<org.apache.maven.toolchain.DefaultToolchain: java.lang.String type>;

        $stack6 = other.<org.apache.maven.toolchain.DefaultToolchain: java.lang.String type>;

        $stack8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack7, $stack6);

        if $stack8 != 0 goto label4;

        return 0;

     label4:
        $r1 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack9 = virtualinvoke $r1.<org.apache.maven.toolchain.DefaultToolchain: org.apache.maven.toolchain.model.ToolchainModel getModel()>();

        thisProvides = virtualinvoke $stack9.<org.apache.maven.toolchain.model.ToolchainModel: java.util.Properties getProvides()>();

        $stack11 = virtualinvoke other.<org.apache.maven.toolchain.DefaultToolchain: org.apache.maven.toolchain.model.ToolchainModel getModel()>();

        otherProvides = virtualinvoke $stack11.<org.apache.maven.toolchain.model.ToolchainModel: java.util.Properties getProvides()>();

        $stack13 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(thisProvides, otherProvides);

        return $stack13;
    }

    public int hashCode()
    {
        DefaultToolchain this;
        java.lang.String $stack2, $stack3;
        org.apache.maven.toolchain.model.ToolchainModel $stack5, $stack8;
        java.util.Properties $stack6, $stack9;
        int $stack7, $stack10, $stack4, hashCode;
        org.apache.maven.toolchain.DefaultToolchain $r0, $r1, $r2, $r3;

        this := @this: DefaultToolchain;

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack2 = $r0.<org.apache.maven.toolchain.DefaultToolchain: java.lang.String type>;

        if $stack2 != null goto label1;

        $stack4 = 0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack3 = $r1.<org.apache.maven.toolchain.DefaultToolchain: java.lang.String type>;

        $stack4 = virtualinvoke $stack3.<java.lang.String: int hashCode()>();

     label2:
        hashCode = $stack4;

        $r2 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack5 = virtualinvoke $r2.<org.apache.maven.toolchain.DefaultToolchain: org.apache.maven.toolchain.model.ToolchainModel getModel()>();

        $stack6 = virtualinvoke $stack5.<org.apache.maven.toolchain.model.ToolchainModel: java.util.Properties getProvides()>();

        if $stack6 == null goto label3;

        $stack7 = 31 * $stack4;

        $r3 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack8 = virtualinvoke $r3.<org.apache.maven.toolchain.DefaultToolchain: org.apache.maven.toolchain.model.ToolchainModel getModel()>();

        $stack9 = virtualinvoke $stack8.<org.apache.maven.toolchain.model.ToolchainModel: java.util.Properties getProvides()>();

        $stack10 = virtualinvoke $stack9.<java.util.Properties: int hashCode()>();

        hashCode = $stack7 + $stack10;

     label3:
        return hashCode;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack5, $stack18, $stack19, $u0;
        DefaultToolchain this;
        java.lang.String $stack6, $stack14, $stack17;
        java.util.Map $stack9;
        java.util.Set $stack10;
        java.util.Iterator providesIter;
        boolean $stack12, $stack22;
        java.lang.Object $stack15, $stack16, $stack20;
        java.util.Map$Entry provideEntry;
        org.apache.maven.toolchain.DefaultToolchain $r0, $r1;

        this := @this: DefaultToolchain;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("type:");

        $r0 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack6 = virtualinvoke $r0.<org.apache.maven.toolchain.DefaultToolchain: java.lang.String getType()>();

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $r1 = (org.apache.maven.toolchain.DefaultToolchain) this;

        $stack9 = $r1.<org.apache.maven.toolchain.DefaultToolchain: java.util.Map provides>;

        $stack10 = interfaceinvoke $stack9.<java.util.Map: java.util.Set entrySet()>();

        providesIter = interfaceinvoke $stack10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack12 = interfaceinvoke providesIter.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label3;

        $stack15 = interfaceinvoke providesIter.<java.util.Iterator: java.lang.Object next()>();

        provideEntry = (java.util.Map$Entry) $stack15;

        $stack16 = interfaceinvoke provideEntry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack17 = (java.lang.String) $stack16;

        $stack18 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $stack20 = interfaceinvoke provideEntry.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack20);

        $stack22 = interfaceinvoke providesIter.<java.util.Iterator: boolean hasNext()>();

        if $stack22 == 0 goto label2;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);

     label2:
        goto label1;

     label3:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $stack14 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack14;
    }

    public static void <clinit>()
    {
        <DefaultToolchain: java.lang.String KEY_TYPE> = "type";

        return;
    }
}
