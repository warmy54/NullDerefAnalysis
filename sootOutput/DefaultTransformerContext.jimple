class DefaultTransformerContext extends java.lang.Object implements org.apache.maven.model.building.TransformerContext
{
    final java.util.Map userProperties;
    final java.util.Map modelByPath;
    final java.util.Map modelByGA;

    void <init>()
    {
        DefaultTransformerContext this;
        java.util.concurrent.ConcurrentHashMap $u0, $u1, $u2;
        org.apache.maven.model.building.DefaultTransformerContext $r0, $r1, $r2;

        this := @this: DefaultTransformerContext;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $u0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0 = (org.apache.maven.model.building.DefaultTransformerContext) this;

        $r0.<org.apache.maven.model.building.DefaultTransformerContext: java.util.Map userProperties> = $u0;

        $u1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $u1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r1 = (org.apache.maven.model.building.DefaultTransformerContext) this;

        $r1.<org.apache.maven.model.building.DefaultTransformerContext: java.util.Map modelByPath> = $u1;

        $u2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $u2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r2 = (org.apache.maven.model.building.DefaultTransformerContext) this;

        $r2.<org.apache.maven.model.building.DefaultTransformerContext: java.util.Map modelByGA> = $u2;

        return;
    }

    public java.lang.String getUserProperty(java.lang.String)
    {
        DefaultTransformerContext this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.apache.maven.model.building.DefaultTransformerContext $r0;

        this := @this: DefaultTransformerContext;

        key := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultTransformerContext) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultTransformerContext: java.util.Map userProperties>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public org.apache.maven.model.Model getRawModel(java.nio.file.Path)
    {
        DefaultTransformerContext this;
        java.nio.file.Path p;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.apache.maven.model.building.DefaultTransformerContext$Holder $stack4;
        org.apache.maven.model.Model $stack5;
        org.apache.maven.model.building.DefaultTransformerContext $r0;

        this := @this: DefaultTransformerContext;

        p := @parameter0: java.nio.file.Path;

        $r0 = (org.apache.maven.model.building.DefaultTransformerContext) this;

        $stack2 = $r0.<org.apache.maven.model.building.DefaultTransformerContext: java.util.Map modelByPath>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(p);

        $stack4 = (org.apache.maven.model.building.DefaultTransformerContext$Holder) $stack3;

        $stack5 = staticinvoke <org.apache.maven.model.building.DefaultTransformerContext$Holder: org.apache.maven.model.Model deref(org.apache.maven.model.building.DefaultTransformerContext$Holder)>($stack4);

        return $stack5;
    }

    public org.apache.maven.model.Model getRawModel(java.lang.String, java.lang.String)
    {
        DefaultTransformerContext this;
        java.lang.String groupId, artifactId;
        java.util.Map $stack4;
        java.lang.Object $stack5;
        org.apache.maven.model.building.DefaultTransformerContext$Holder $stack6;
        org.apache.maven.model.Model $stack7;
        org.apache.maven.model.building.DefaultTransformerContext$GAKey $u0;
        org.apache.maven.model.building.DefaultTransformerContext $r0;

        this := @this: DefaultTransformerContext;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.model.building.DefaultTransformerContext) this;

        $stack4 = $r0.<org.apache.maven.model.building.DefaultTransformerContext: java.util.Map modelByGA>;

        $u0 = new org.apache.maven.model.building.DefaultTransformerContext$GAKey;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultTransformerContext$GAKey: void <init>(java.lang.String,java.lang.String)>(groupId, artifactId);

        $stack5 = interfaceinvoke $stack4.<java.util.Map: java.lang.Object get(java.lang.Object)>($u0);

        $stack6 = (org.apache.maven.model.building.DefaultTransformerContext$Holder) $stack5;

        $stack7 = staticinvoke <org.apache.maven.model.building.DefaultTransformerContext$Holder: org.apache.maven.model.Model deref(org.apache.maven.model.building.DefaultTransformerContext$Holder)>($stack6);

        return $stack7;
    }
}
