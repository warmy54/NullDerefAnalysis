public class DefaultVersionResolverTest extends org.apache.maven.repository.internal.AbstractRepositoryTestCase
{
    private org.apache.maven.repository.internal.DefaultVersionResolver versionResolver;

    public void <init>()
    {
        DefaultVersionResolverTest this;

        this := @this: DefaultVersionResolverTest;

        specialinvoke this.<org.apache.maven.repository.internal.AbstractRepositoryTestCase: void <init>()>();

        return;
    }

    public void testResolveSeparateInstalledClassifiedNonUniqueVersionedArtifacts() throws java.lang.Exception
    {
        org.eclipse.aether.repository.RemoteRepository $stack8, $stack18;
        DefaultVersionResolverTest this;
        org.eclipse.aether.RepositorySystemSession $stack12, $stack22;
        org.apache.maven.repository.internal.DefaultVersionResolver $stack13, $stack23;
        org.eclipse.aether.resolution.VersionResult resultB, resultA;
        java.lang.String $stack16, $stack26;
        org.eclipse.aether.resolution.VersionRequest $u0, $u2;
        org.eclipse.aether.artifact.DefaultArtifact $u1, $u3;
        org.eclipse.aether.artifact.Artifact $r0, $r3;
        org.apache.maven.repository.internal.DefaultVersionResolverTest $r1, $r2, $r4, $r5;

        this := @this: DefaultVersionResolverTest;

        $u0 = new org.eclipse.aether.resolution.VersionRequest;

        specialinvoke $u0.<org.eclipse.aether.resolution.VersionRequest: void <init>()>();

        $stack8 = staticinvoke <org.apache.maven.repository.internal.DefaultVersionResolverTest: org.eclipse.aether.repository.RemoteRepository newTestRepository()>();

        virtualinvoke $u0.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest addRepository(org.eclipse.aether.repository.RemoteRepository)>($stack8);

        $u1 = new org.eclipse.aether.artifact.DefaultArtifact;

        specialinvoke $u1.<org.eclipse.aether.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("org.apache.maven.its", "dep-mng5324", "classifierB", "jar", "07.20.3-SNAPSHOT");

        $r0 = (org.eclipse.aether.artifact.Artifact) $u1;

        virtualinvoke $u0.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest setArtifact(org.eclipse.aether.artifact.Artifact)>($r0);

        $r1 = (org.apache.maven.repository.internal.DefaultVersionResolverTest) this;

        $stack13 = $r1.<org.apache.maven.repository.internal.DefaultVersionResolverTest: org.apache.maven.repository.internal.DefaultVersionResolver versionResolver>;

        $r2 = (org.apache.maven.repository.internal.DefaultVersionResolverTest) this;

        $stack12 = $r2.<org.apache.maven.repository.internal.DefaultVersionResolverTest: org.eclipse.aether.RepositorySystemSession session>;

        resultB = virtualinvoke $stack13.<org.apache.maven.repository.internal.DefaultVersionResolver: org.eclipse.aether.resolution.VersionResult resolveVersion(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.VersionRequest)>($stack12, $u0);

        $stack16 = virtualinvoke resultB.<org.eclipse.aether.resolution.VersionResult: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("07.20.3-20120809.112920-97", $stack16);

        $u2 = new org.eclipse.aether.resolution.VersionRequest;

        specialinvoke $u2.<org.eclipse.aether.resolution.VersionRequest: void <init>()>();

        $stack18 = staticinvoke <org.apache.maven.repository.internal.DefaultVersionResolverTest: org.eclipse.aether.repository.RemoteRepository newTestRepository()>();

        virtualinvoke $u2.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest addRepository(org.eclipse.aether.repository.RemoteRepository)>($stack18);

        $u3 = new org.eclipse.aether.artifact.DefaultArtifact;

        specialinvoke $u3.<org.eclipse.aether.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("org.apache.maven.its", "dep-mng5324", "classifierA", "jar", "07.20.3-SNAPSHOT");

        $r3 = (org.eclipse.aether.artifact.Artifact) $u3;

        virtualinvoke $u2.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest setArtifact(org.eclipse.aether.artifact.Artifact)>($r3);

        $r4 = (org.apache.maven.repository.internal.DefaultVersionResolverTest) this;

        $stack23 = $r4.<org.apache.maven.repository.internal.DefaultVersionResolverTest: org.apache.maven.repository.internal.DefaultVersionResolver versionResolver>;

        $r5 = (org.apache.maven.repository.internal.DefaultVersionResolverTest) this;

        $stack22 = $r5.<org.apache.maven.repository.internal.DefaultVersionResolverTest: org.eclipse.aether.RepositorySystemSession session>;

        resultA = virtualinvoke $stack23.<org.apache.maven.repository.internal.DefaultVersionResolver: org.eclipse.aether.resolution.VersionResult resolveVersion(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.VersionRequest)>($stack22, $u2);

        $stack26 = virtualinvoke resultA.<org.eclipse.aether.resolution.VersionResult: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("07.20.3-20120809.112124-88", $stack26);

        return;
    }

    public void testResolveSeparateInstalledClassifiedNonVersionedArtifacts() throws java.lang.Exception
    {
        org.eclipse.aether.repository.RemoteRepository $stack10, $stack19;
        DefaultVersionResolverTest this;
        org.eclipse.aether.RepositorySystemSession $stack14, $stack23;
        org.apache.maven.repository.internal.DefaultVersionResolver $stack15, $stack24;
        org.eclipse.aether.resolution.VersionResult resultA, resultB;
        java.lang.String $stack17, $stack26;
        org.eclipse.aether.resolution.VersionRequest $u0, $u2;
        org.eclipse.aether.artifact.DefaultArtifact $u1, $u3;
        org.eclipse.aether.artifact.Artifact $r0, $r3;
        org.apache.maven.repository.internal.DefaultVersionResolverTest $r1, $r2, $r4, $r5;

        this := @this: DefaultVersionResolverTest;

        $u0 = new org.eclipse.aether.resolution.VersionRequest;

        specialinvoke $u0.<org.eclipse.aether.resolution.VersionRequest: void <init>()>();

        $stack10 = staticinvoke <org.apache.maven.repository.internal.DefaultVersionResolverTest: org.eclipse.aether.repository.RemoteRepository newTestRepository()>();

        virtualinvoke $u0.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest addRepository(org.eclipse.aether.repository.RemoteRepository)>($stack10);

        $u1 = new org.eclipse.aether.artifact.DefaultArtifact;

        specialinvoke $u1.<org.eclipse.aether.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("org.apache.maven.its", "dep-mng5324", "classifierA", "jar", "07.20.3-20120809.112124-88");

        $r0 = (org.eclipse.aether.artifact.Artifact) $u1;

        virtualinvoke $u0.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest setArtifact(org.eclipse.aether.artifact.Artifact)>($r0);

        $r1 = (org.apache.maven.repository.internal.DefaultVersionResolverTest) this;

        $stack15 = $r1.<org.apache.maven.repository.internal.DefaultVersionResolverTest: org.apache.maven.repository.internal.DefaultVersionResolver versionResolver>;

        $r2 = (org.apache.maven.repository.internal.DefaultVersionResolverTest) this;

        $stack14 = $r2.<org.apache.maven.repository.internal.DefaultVersionResolverTest: org.eclipse.aether.RepositorySystemSession session>;

        resultA = virtualinvoke $stack15.<org.apache.maven.repository.internal.DefaultVersionResolver: org.eclipse.aether.resolution.VersionResult resolveVersion(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.VersionRequest)>($stack14, $u0);

        $stack17 = virtualinvoke resultA.<org.eclipse.aether.resolution.VersionResult: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("07.20.3-20120809.112124-88", $stack17);

        $u2 = new org.eclipse.aether.resolution.VersionRequest;

        specialinvoke $u2.<org.eclipse.aether.resolution.VersionRequest: void <init>()>();

        $stack19 = staticinvoke <org.apache.maven.repository.internal.DefaultVersionResolverTest: org.eclipse.aether.repository.RemoteRepository newTestRepository()>();

        virtualinvoke $u2.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest addRepository(org.eclipse.aether.repository.RemoteRepository)>($stack19);

        $u3 = new org.eclipse.aether.artifact.DefaultArtifact;

        specialinvoke $u3.<org.eclipse.aether.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("org.apache.maven.its", "dep-mng5324", "classifierB", "jar", "07.20.3-20120809.112920-97");

        $r3 = (org.eclipse.aether.artifact.Artifact) $u3;

        virtualinvoke $u2.<org.eclipse.aether.resolution.VersionRequest: org.eclipse.aether.resolution.VersionRequest setArtifact(org.eclipse.aether.artifact.Artifact)>($r3);

        $r4 = (org.apache.maven.repository.internal.DefaultVersionResolverTest) this;

        $stack24 = $r4.<org.apache.maven.repository.internal.DefaultVersionResolverTest: org.apache.maven.repository.internal.DefaultVersionResolver versionResolver>;

        $r5 = (org.apache.maven.repository.internal.DefaultVersionResolverTest) this;

        $stack23 = $r5.<org.apache.maven.repository.internal.DefaultVersionResolverTest: org.eclipse.aether.RepositorySystemSession session>;

        resultB = virtualinvoke $stack24.<org.apache.maven.repository.internal.DefaultVersionResolver: org.eclipse.aether.resolution.VersionResult resolveVersion(org.eclipse.aether.RepositorySystemSession,org.eclipse.aether.resolution.VersionRequest)>($stack23, $u2);

        $stack26 = virtualinvoke resultB.<org.eclipse.aether.resolution.VersionResult: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("07.20.3-20120809.112920-97", $stack26);

        return;
    }
}
