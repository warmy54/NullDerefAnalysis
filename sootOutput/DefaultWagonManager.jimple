public class DefaultWagonManager extends org.apache.maven.repository.legacy.DefaultWagonManager implements org.apache.maven.artifact.manager.WagonManager
{
    private org.codehaus.plexus.logging.Logger log;
    private org.apache.maven.plugin.LegacySupport legacySupport;
    private org.apache.maven.settings.crypto.SettingsDecrypter settingsDecrypter;
    private org.apache.maven.repository.MirrorSelector mirrorSelector;
    private org.apache.maven.artifact.repository.ArtifactRepositoryFactory artifactRepositoryFactory;

    public void <init>()
    {
        DefaultWagonManager this;

        this := @this: DefaultWagonManager;

        specialinvoke this.<org.apache.maven.repository.legacy.DefaultWagonManager: void <init>()>();

        return;
    }

    public org.apache.maven.wagon.authentication.AuthenticationInfo getAuthenticationInfo(java.lang.String)
    {
        DefaultWagonManager this;
        org.apache.maven.plugin.LegacySupport $stack9;
        org.apache.maven.execution.MavenSession session;
        java.lang.String id, $stack17, $stack25, $stack26, $stack27, $stack28;
        org.apache.maven.execution.MavenExecutionRequest request;
        java.util.List servers;
        java.util.Iterator l5;
        boolean $stack15, $stack18;
        java.lang.Object $stack16;
        org.apache.maven.settings.crypto.SettingsDecrypter $stack21;
        org.apache.maven.settings.crypto.SettingsDecryptionResult result;
        org.apache.maven.settings.Server server;
        org.apache.maven.settings.crypto.DefaultSettingsDecryptionRequest $u0;
        org.apache.maven.wagon.authentication.AuthenticationInfo $u1, $u2;
        org.apache.maven.artifact.manager.DefaultWagonManager $r0, $r1;
        org.apache.maven.settings.crypto.SettingsDecryptionRequest $r2;

        this := @this: DefaultWagonManager;

        id := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        $stack9 = $r0.<org.apache.maven.artifact.manager.DefaultWagonManager: org.apache.maven.plugin.LegacySupport legacySupport>;

        session = interfaceinvoke $stack9.<org.apache.maven.plugin.LegacySupport: org.apache.maven.execution.MavenSession getSession()>();

        if session == null goto label3;

        if id == null goto label3;

        request = virtualinvoke session.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest getRequest()>();

        if request == null goto label3;

        servers = interfaceinvoke request.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getServers()>();

        if servers == null goto label3;

        l5 = interfaceinvoke servers.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack15 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack15 == 0 goto label3;

        $stack16 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        server = (org.apache.maven.settings.Server) $stack16;

        $stack17 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getId()>();

        $stack18 = virtualinvoke id.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($stack17);

        if $stack18 == 0 goto label2;

        $r1 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        $stack21 = $r1.<org.apache.maven.artifact.manager.DefaultWagonManager: org.apache.maven.settings.crypto.SettingsDecrypter settingsDecrypter>;

        $u0 = new org.apache.maven.settings.crypto.DefaultSettingsDecryptionRequest;

        specialinvoke $u0.<org.apache.maven.settings.crypto.DefaultSettingsDecryptionRequest: void <init>(org.apache.maven.settings.Server)>(server);

        $r2 = (org.apache.maven.settings.crypto.SettingsDecryptionRequest) $u0;

        result = interfaceinvoke $stack21.<org.apache.maven.settings.crypto.SettingsDecrypter: org.apache.maven.settings.crypto.SettingsDecryptionResult decrypt(org.apache.maven.settings.crypto.SettingsDecryptionRequest)>($r2);

        server = interfaceinvoke result.<org.apache.maven.settings.crypto.SettingsDecryptionResult: org.apache.maven.settings.Server getServer()>();

        $u1 = new org.apache.maven.wagon.authentication.AuthenticationInfo;

        specialinvoke $u1.<org.apache.maven.wagon.authentication.AuthenticationInfo: void <init>()>();

        $stack25 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getUsername()>();

        virtualinvoke $u1.<org.apache.maven.wagon.authentication.AuthenticationInfo: void setUserName(java.lang.String)>($stack25);

        $stack26 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getPassword()>();

        virtualinvoke $u1.<org.apache.maven.wagon.authentication.AuthenticationInfo: void setPassword(java.lang.String)>($stack26);

        $stack27 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getPrivateKey()>();

        virtualinvoke $u1.<org.apache.maven.wagon.authentication.AuthenticationInfo: void setPrivateKey(java.lang.String)>($stack27);

        $stack28 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getPassphrase()>();

        virtualinvoke $u1.<org.apache.maven.wagon.authentication.AuthenticationInfo: void setPassphrase(java.lang.String)>($stack28);

        return $u1;

     label2:
        goto label1;

     label3:
        $u2 = new org.apache.maven.wagon.authentication.AuthenticationInfo;

        specialinvoke $u2.<org.apache.maven.wagon.authentication.AuthenticationInfo: void <init>()>();

        return $u2;
    }

    public org.apache.maven.wagon.proxy.ProxyInfo getProxy(java.lang.String)
    {
        DefaultWagonManager this;
        org.apache.maven.plugin.LegacySupport $stack9;
        org.apache.maven.execution.MavenSession session;
        java.lang.String protocol, $stack19, $stack26, $stack27, $stack29, $stack30, $stack31;
        org.apache.maven.execution.MavenExecutionRequest request;
        java.util.List proxies;
        java.util.Iterator l5;
        boolean $stack15, $stack17, $stack20;
        java.lang.Object $stack16;
        org.apache.maven.settings.crypto.SettingsDecrypter $stack22;
        org.apache.maven.settings.crypto.SettingsDecryptionResult result;
        int $stack28;
        org.apache.maven.settings.Proxy proxy;
        org.apache.maven.settings.crypto.DefaultSettingsDecryptionRequest $u0;
        org.apache.maven.wagon.proxy.ProxyInfo $u1;
        org.apache.maven.artifact.manager.DefaultWagonManager $r0, $r1;
        org.apache.maven.settings.crypto.SettingsDecryptionRequest $r2;

        this := @this: DefaultWagonManager;

        protocol := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        $stack9 = $r0.<org.apache.maven.artifact.manager.DefaultWagonManager: org.apache.maven.plugin.LegacySupport legacySupport>;

        session = interfaceinvoke $stack9.<org.apache.maven.plugin.LegacySupport: org.apache.maven.execution.MavenSession getSession()>();

        if session == null goto label3;

        if protocol == null goto label3;

        request = virtualinvoke session.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest getRequest()>();

        if request == null goto label3;

        proxies = interfaceinvoke request.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getProxies()>();

        if proxies == null goto label3;

        l5 = interfaceinvoke proxies.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack15 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack15 == 0 goto label3;

        $stack16 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        proxy = (org.apache.maven.settings.Proxy) $stack16;

        $stack17 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: boolean isActive()>();

        if $stack17 == 0 goto label2;

        $stack19 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getProtocol()>();

        $stack20 = virtualinvoke protocol.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($stack19);

        if $stack20 == 0 goto label2;

        $r1 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        $stack22 = $r1.<org.apache.maven.artifact.manager.DefaultWagonManager: org.apache.maven.settings.crypto.SettingsDecrypter settingsDecrypter>;

        $u0 = new org.apache.maven.settings.crypto.DefaultSettingsDecryptionRequest;

        specialinvoke $u0.<org.apache.maven.settings.crypto.DefaultSettingsDecryptionRequest: void <init>(org.apache.maven.settings.Proxy)>(proxy);

        $r2 = (org.apache.maven.settings.crypto.SettingsDecryptionRequest) $u0;

        result = interfaceinvoke $stack22.<org.apache.maven.settings.crypto.SettingsDecrypter: org.apache.maven.settings.crypto.SettingsDecryptionResult decrypt(org.apache.maven.settings.crypto.SettingsDecryptionRequest)>($r2);

        proxy = interfaceinvoke result.<org.apache.maven.settings.crypto.SettingsDecryptionResult: org.apache.maven.settings.Proxy getProxy()>();

        $u1 = new org.apache.maven.wagon.proxy.ProxyInfo;

        specialinvoke $u1.<org.apache.maven.wagon.proxy.ProxyInfo: void <init>()>();

        $stack26 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getHost()>();

        virtualinvoke $u1.<org.apache.maven.wagon.proxy.ProxyInfo: void setHost(java.lang.String)>($stack26);

        $stack27 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getProtocol()>();

        virtualinvoke $u1.<org.apache.maven.wagon.proxy.ProxyInfo: void setType(java.lang.String)>($stack27);

        $stack28 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: int getPort()>();

        virtualinvoke $u1.<org.apache.maven.wagon.proxy.ProxyInfo: void setPort(int)>($stack28);

        $stack29 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getNonProxyHosts()>();

        virtualinvoke $u1.<org.apache.maven.wagon.proxy.ProxyInfo: void setNonProxyHosts(java.lang.String)>($stack29);

        $stack30 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getUsername()>();

        virtualinvoke $u1.<org.apache.maven.wagon.proxy.ProxyInfo: void setUserName(java.lang.String)>($stack30);

        $stack31 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getPassword()>();

        virtualinvoke $u1.<org.apache.maven.wagon.proxy.ProxyInfo: void setPassword(java.lang.String)>($stack31);

        return $u1;

     label2:
        goto label1;

     label3:
        return null;
    }

    public void getArtifact(org.apache.maven.artifact.Artifact, org.apache.maven.artifact.repository.ArtifactRepository) throws org.apache.maven.wagon.TransferFailedException, org.apache.maven.wagon.ResourceDoesNotExistException
    {
        DefaultWagonManager this;
        org.apache.maven.artifact.Artifact artifact;
        org.apache.maven.artifact.repository.ArtifactRepository repository;
        org.apache.maven.artifact.manager.DefaultWagonManager $r0;

        this := @this: DefaultWagonManager;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        repository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        virtualinvoke $r0.<org.apache.maven.artifact.manager.DefaultWagonManager: void getArtifact(org.apache.maven.artifact.Artifact,org.apache.maven.artifact.repository.ArtifactRepository,org.apache.maven.wagon.events.TransferListener,boolean)>(artifact, repository, null, 0);

        return;
    }

    public void getArtifact(org.apache.maven.artifact.Artifact, java.util.List) throws org.apache.maven.wagon.TransferFailedException, org.apache.maven.wagon.ResourceDoesNotExistException
    {
        DefaultWagonManager this;
        org.apache.maven.artifact.Artifact artifact;
        java.util.List remoteRepositories;
        org.apache.maven.artifact.manager.DefaultWagonManager $r0;

        this := @this: DefaultWagonManager;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        remoteRepositories := @parameter1: java.util.List;

        $r0 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        virtualinvoke $r0.<org.apache.maven.artifact.manager.DefaultWagonManager: void getArtifact(org.apache.maven.artifact.Artifact,java.util.List,org.apache.maven.wagon.events.TransferListener,boolean)>(artifact, remoteRepositories, null, 0);

        return;
    }

    public org.apache.maven.artifact.repository.ArtifactRepository getMirrorRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        DefaultWagonManager this;
        org.apache.maven.plugin.LegacySupport $stack4;
        org.apache.maven.repository.MirrorSelector $stack5;
        org.apache.maven.execution.MavenSession $stack6;
        org.apache.maven.settings.Settings $stack7;
        java.util.List $stack8;
        org.apache.maven.settings.Mirror mirror;
        org.codehaus.plexus.logging.Logger $stack12;
        java.lang.StringBuilder $stack13, $stack15, $stack16, $stack17, $stack18, $u0;
        java.lang.String $stack14, $stack19, $stack21, id;
        org.apache.maven.artifact.repository.ArtifactRepositoryFactory $stack20;
        org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout $stack22;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $stack23, $stack24;
        org.apache.maven.artifact.repository.ArtifactRepository repository;
        org.apache.maven.artifact.manager.DefaultWagonManager $r0, $r1, $r2, $r3;

        this := @this: DefaultWagonManager;

        repository := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        $stack5 = $r0.<org.apache.maven.artifact.manager.DefaultWagonManager: org.apache.maven.repository.MirrorSelector mirrorSelector>;

        $r1 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        $stack4 = $r1.<org.apache.maven.artifact.manager.DefaultWagonManager: org.apache.maven.plugin.LegacySupport legacySupport>;

        $stack6 = interfaceinvoke $stack4.<org.apache.maven.plugin.LegacySupport: org.apache.maven.execution.MavenSession getSession()>();

        $stack7 = virtualinvoke $stack6.<org.apache.maven.execution.MavenSession: org.apache.maven.settings.Settings getSettings()>();

        $stack8 = virtualinvoke $stack7.<org.apache.maven.settings.Settings: java.util.List getMirrors()>();

        mirror = interfaceinvoke $stack5.<org.apache.maven.repository.MirrorSelector: org.apache.maven.settings.Mirror getMirror(org.apache.maven.artifact.repository.ArtifactRepository,java.util.List)>(repository, $stack8);

        if mirror == null goto label2;

        id = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        if id != null goto label1;

        id = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

     label1:
        $r2 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        $stack12 = $r2.<org.apache.maven.artifact.manager.DefaultWagonManager: org.codehaus.plexus.logging.Logger log>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using mirror: ");

        $stack14 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getUrl()>();

        $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (id: ");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(id);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack12.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack19);

        $r3 = (org.apache.maven.artifact.manager.DefaultWagonManager) this;

        $stack20 = $r3.<org.apache.maven.artifact.manager.DefaultWagonManager: org.apache.maven.artifact.repository.ArtifactRepositoryFactory artifactRepositoryFactory>;

        $stack21 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getUrl()>();

        $stack22 = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout getLayout()>();

        $stack23 = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getSnapshots()>();

        $stack24 = interfaceinvoke repository.<org.apache.maven.artifact.repository.ArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getReleases()>();

        repository = interfaceinvoke $stack20.<org.apache.maven.artifact.repository.ArtifactRepositoryFactory: org.apache.maven.artifact.repository.ArtifactRepository createArtifactRepository(java.lang.String,java.lang.String,org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout,org.apache.maven.artifact.repository.ArtifactRepositoryPolicy,org.apache.maven.artifact.repository.ArtifactRepositoryPolicy)>(id, $stack21, $stack22, $stack23, $stack24);

     label2:
        return repository;
    }
}
