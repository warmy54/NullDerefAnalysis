public class DuplicateProjectException extends java.lang.Exception
{
    private final java.lang.String projectId;
    private final java.io.File existingProjectFile;
    private final java.io.File conflictingProjectFile;

    public void <init>(java.lang.String)
    {
        DuplicateProjectException this;
        java.lang.String message;
        org.apache.maven.project.DuplicateProjectException $r0;

        this := @this: DuplicateProjectException;

        message := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.project.DuplicateProjectException) this;

        specialinvoke $r0.<org.apache.maven.project.DuplicateProjectException: void <init>(java.lang.String,java.io.File,java.io.File,java.lang.String)>(null, null, null, message);

        return;
    }

    public void <init>(java.lang.String, java.lang.Exception)
    {
        DuplicateProjectException this;
        java.lang.String message;
        java.lang.Exception e;
        org.apache.maven.project.DuplicateProjectException $r0, $r1, $r2;

        this := @this: DuplicateProjectException;

        message := @parameter0: java.lang.String;

        e := @parameter1: java.lang.Exception;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(message, e);

        $r0 = (org.apache.maven.project.DuplicateProjectException) this;

        $r0.<org.apache.maven.project.DuplicateProjectException: java.lang.String projectId> = null;

        $r1 = (org.apache.maven.project.DuplicateProjectException) this;

        $r1.<org.apache.maven.project.DuplicateProjectException: java.io.File existingProjectFile> = null;

        $r2 = (org.apache.maven.project.DuplicateProjectException) this;

        $r2.<org.apache.maven.project.DuplicateProjectException: java.io.File conflictingProjectFile> = null;

        return;
    }

    public void <init>(java.lang.String, java.io.File, java.io.File, java.lang.String)
    {
        DuplicateProjectException this;
        java.lang.String message, projectId;
        java.io.File existingProjectFile, conflictingProjectFile;
        org.apache.maven.project.DuplicateProjectException $r0, $r1, $r2;

        this := @this: DuplicateProjectException;

        projectId := @parameter0: java.lang.String;

        existingProjectFile := @parameter1: java.io.File;

        conflictingProjectFile := @parameter2: java.io.File;

        message := @parameter3: java.lang.String;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(message);

        $r0 = (org.apache.maven.project.DuplicateProjectException) this;

        $r0.<org.apache.maven.project.DuplicateProjectException: java.lang.String projectId> = projectId;

        $r1 = (org.apache.maven.project.DuplicateProjectException) this;

        $r1.<org.apache.maven.project.DuplicateProjectException: java.io.File existingProjectFile> = existingProjectFile;

        $r2 = (org.apache.maven.project.DuplicateProjectException) this;

        $r2.<org.apache.maven.project.DuplicateProjectException: java.io.File conflictingProjectFile> = conflictingProjectFile;

        return;
    }

    public java.lang.String getProjectId()
    {
        DuplicateProjectException this;
        java.lang.String $stack1;
        org.apache.maven.project.DuplicateProjectException $r0;

        this := @this: DuplicateProjectException;

        $r0 = (org.apache.maven.project.DuplicateProjectException) this;

        $stack1 = $r0.<org.apache.maven.project.DuplicateProjectException: java.lang.String projectId>;

        return $stack1;
    }

    public java.io.File getExistingProjectFile()
    {
        DuplicateProjectException this;
        java.io.File $stack1;
        org.apache.maven.project.DuplicateProjectException $r0;

        this := @this: DuplicateProjectException;

        $r0 = (org.apache.maven.project.DuplicateProjectException) this;

        $stack1 = $r0.<org.apache.maven.project.DuplicateProjectException: java.io.File existingProjectFile>;

        return $stack1;
    }

    public java.io.File getConflictingProjectFile()
    {
        DuplicateProjectException this;
        java.io.File $stack1;
        org.apache.maven.project.DuplicateProjectException $r0;

        this := @this: DuplicateProjectException;

        $r0 = (org.apache.maven.project.DuplicateProjectException) this;

        $stack1 = $r0.<org.apache.maven.project.DuplicateProjectException: java.io.File conflictingProjectFile>;

        return $stack1;
    }
}
