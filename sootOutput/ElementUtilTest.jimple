class ElementUtilTest extends java.lang.Object
{
    private org.jdom.Element parent;
    private org.jdom.Element child;

    void <init>()
    {
        ElementUtilTest this;

        this := @this: ElementUtilTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    void setUp()
    {
        ElementUtilTest this;
        org.jdom.Element $stack3, $stack4, $u0, $u1;
        sortpom.wrapper.ElementUtilTest $r0, $r1, $r2, $r3;
        org.jdom.Content $r4;

        this := @this: ElementUtilTest;

        $u0 = new org.jdom.Element;

        specialinvoke $u0.<org.jdom.Element: void <init>(java.lang.String)>("Parent");

        $r0 = (sortpom.wrapper.ElementUtilTest) this;

        $r0.<sortpom.wrapper.ElementUtilTest: org.jdom.Element parent> = $u0;

        $u1 = new org.jdom.Element;

        specialinvoke $u1.<org.jdom.Element: void <init>(java.lang.String)>("Child");

        $r1 = (sortpom.wrapper.ElementUtilTest) this;

        $r1.<sortpom.wrapper.ElementUtilTest: org.jdom.Element child> = $u1;

        $r2 = (sortpom.wrapper.ElementUtilTest) this;

        $stack4 = $r2.<sortpom.wrapper.ElementUtilTest: org.jdom.Element parent>;

        $r3 = (sortpom.wrapper.ElementUtilTest) this;

        $stack3 = $r3.<sortpom.wrapper.ElementUtilTest: org.jdom.Element child>;

        $r4 = (org.jdom.Content) $stack3;

        virtualinvoke $stack4.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r4);

        return;
    }

    void testConstructor()
    {
        java.lang.Object $stack2;
        sortpom.wrapper.ElementUtil elementUtil;
        org.hamcrest.Matcher $stack3, $stack4;
        ElementUtilTest this;

        this := @this: ElementUtilTest;

        $stack2 = staticinvoke <refutils.ReflectionHelper: java.lang.Object instantiatePrivateConstructor(java.lang.Class)>(class "Lsortpom/wrapper/ElementUtil;");

        elementUtil = (sortpom.wrapper.ElementUtil) $stack2;

        $stack3 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher nullValue()>();

        $stack4 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($stack3);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(elementUtil, $stack4);

        return;
    }

    void parentElementNameShouldBeMatched()
    {
        ElementUtilTest this;
        org.jdom.Element $stack1, $stack6, $stack11;
        boolean $stack2, $stack7, $stack12;
        java.lang.Boolean $stack3, $stack4, $stack8, $stack9, $stack13, $stack14;
        org.hamcrest.Matcher $stack5, $stack10, $stack15;
        sortpom.wrapper.ElementUtilTest $r0, $r1, $r2;

        this := @this: ElementUtilTest;

        $r0 = (sortpom.wrapper.ElementUtilTest) this;

        $stack1 = $r0.<sortpom.wrapper.ElementUtilTest: org.jdom.Element child>;

        $stack2 = staticinvoke <sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>($stack1, "Parent");

        $stack3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack2);

        $stack4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack5 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack4);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack3, $stack5);

        $r1 = (sortpom.wrapper.ElementUtilTest) this;

        $stack6 = $r1.<sortpom.wrapper.ElementUtilTest: org.jdom.Element child>;

        $stack7 = staticinvoke <sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>($stack6, "Gurka");

        $stack8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack7);

        $stack9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack9);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack8, $stack10);

        $r2 = (sortpom.wrapper.ElementUtilTest) this;

        $stack11 = $r2.<sortpom.wrapper.ElementUtilTest: org.jdom.Element parent>;

        $stack12 = staticinvoke <sortpom.wrapper.ElementUtil: boolean isElementParentName(org.jdom.Element,java.lang.String)>($stack11, "Parent");

        $stack13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack12);

        $stack14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack15 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack14);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack13, $stack15);

        return;
    }
}
