public class Else extends org.ooc.frontend.model.ControlStatement
{

    public void <init>(org.ooc.frontend.model.tokens.Token)
    {
        Else this;
        org.ooc.frontend.model.tokens.Token startToken;

        this := @this: Else;

        startToken := @parameter0: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.ControlStatement: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        Else this;
        org.ooc.frontend.model.Node oldie, kiddo;

        this := @this: Else;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        return 0;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        Else this;
        org.ooc.frontend.model.Else $r0;

        this := @this: Else;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Else) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.Else)>($r0);

        return;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        Else this;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.NodeList $stack2;
        org.ooc.frontend.model.Else $r0;

        this := @this: Else;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Else) this;

        $stack2 = $r0.<org.ooc.frontend.model.Else: org.ooc.frontend.model.NodeList body>;

        virtualinvoke $stack2.<org.ooc.frontend.model.NodeList: void accept(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public boolean hasChildren()
    {
        Else this;
        org.ooc.frontend.model.NodeList $stack1;
        boolean $stack2, $stack3;
        org.ooc.frontend.model.Else $r0;

        this := @this: Else;

        $r0 = (org.ooc.frontend.model.Else) this;

        $stack1 = $r0.<org.ooc.frontend.model.Else: org.ooc.frontend.model.NodeList body>;

        $stack2 = virtualinvoke $stack1.<org.ooc.frontend.model.NodeList: boolean isEmpty()>();

        if $stack2 != 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }
}
