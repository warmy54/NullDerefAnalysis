public class EmptyLifecycleExecutor extends java.lang.Object implements org.apache.maven.lifecycle.LifecycleExecutor
{

    public void <init>()
    {
        EmptyLifecycleExecutor this;

        this := @this: EmptyLifecycleExecutor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public transient org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession, java.lang.String[])
    {
        org.apache.maven.lifecycle.MavenExecutionPlan $stack3;
        EmptyLifecycleExecutor this;
        org.apache.maven.execution.MavenSession session;
        java.lang.String[] tasks;

        this := @this: EmptyLifecycleExecutor;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        tasks := @parameter1: java.lang.String[];

        $stack3 = new org.apache.maven.lifecycle.MavenExecutionPlan;

        specialinvoke $stack3.<org.apache.maven.lifecycle.MavenExecutionPlan: void <init>(java.util.List,org.apache.maven.lifecycle.DefaultLifecycles)>(null, null);

        return $stack3;
    }

    public transient org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession, boolean, java.lang.String[])
    {
        org.apache.maven.lifecycle.MavenExecutionPlan $stack4;
        EmptyLifecycleExecutor this;
        org.apache.maven.execution.MavenSession session;
        boolean setup;
        java.lang.String[] tasks;

        this := @this: EmptyLifecycleExecutor;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        setup := @parameter1: boolean;

        tasks := @parameter2: java.lang.String[];

        $stack4 = new org.apache.maven.lifecycle.MavenExecutionPlan;

        specialinvoke $stack4.<org.apache.maven.lifecycle.MavenExecutionPlan: void <init>(java.util.List,org.apache.maven.lifecycle.DefaultLifecycles)>(null, null);

        return $stack4;
    }

    public void execute(org.apache.maven.execution.MavenSession)
    {
        EmptyLifecycleExecutor this;
        org.apache.maven.execution.MavenSession session;

        this := @this: EmptyLifecycleExecutor;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        return;
    }

    public java.util.Set getPluginsBoundByDefaultToAllLifecycles(java.lang.String)
    {
        java.lang.String packaging, $stack3;
        boolean $stack4;
        EmptyLifecycleExecutor this;
        java.lang.String[] $stack7, $stack10, $stack13, $stack16, $stack19, $stack22;
        org.apache.maven.model.Plugin $stack8, $stack11, $stack14, $stack17, $stack20, $stack23;
        java.util.Set plugins;
        java.util.LinkedHashSet $u0;
        org.apache.maven.project.EmptyLifecycleExecutor $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: EmptyLifecycleExecutor;

        packaging := @parameter0: java.lang.String;

        $stack3 = "JAR";

        $stack4 = virtualinvoke $stack3.<java.lang.String: boolean equals(java.lang.Object)>(packaging);

        if $stack4 == 0 goto label1;

        $u0 = new java.util.LinkedHashSet;

        specialinvoke $u0.<java.util.LinkedHashSet: void <init>()>();

        plugins = $u0;

        $stack7 = newarray (java.lang.String)[2];

        $stack7[0] = "compile";

        $stack7[1] = "testCompile";

        $r0 = (org.apache.maven.project.EmptyLifecycleExecutor) this;

        $stack8 = specialinvoke $r0.<org.apache.maven.project.EmptyLifecycleExecutor: org.apache.maven.model.Plugin newPlugin(java.lang.String,java.lang.String[])>("maven-compiler-plugin", $stack7);

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>($stack8);

        $stack10 = newarray (java.lang.String)[2];

        $stack10[0] = "resources";

        $stack10[1] = "testResources";

        $r1 = (org.apache.maven.project.EmptyLifecycleExecutor) this;

        $stack11 = specialinvoke $r1.<org.apache.maven.project.EmptyLifecycleExecutor: org.apache.maven.model.Plugin newPlugin(java.lang.String,java.lang.String[])>("maven-resources-plugin", $stack10);

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>($stack11);

        $stack13 = newarray (java.lang.String)[1];

        $stack13[0] = "test";

        $r2 = (org.apache.maven.project.EmptyLifecycleExecutor) this;

        $stack14 = specialinvoke $r2.<org.apache.maven.project.EmptyLifecycleExecutor: org.apache.maven.model.Plugin newPlugin(java.lang.String,java.lang.String[])>("maven-surefire-plugin", $stack13);

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>($stack14);

        $stack16 = newarray (java.lang.String)[1];

        $stack16[0] = "jar";

        $r3 = (org.apache.maven.project.EmptyLifecycleExecutor) this;

        $stack17 = specialinvoke $r3.<org.apache.maven.project.EmptyLifecycleExecutor: org.apache.maven.model.Plugin newPlugin(java.lang.String,java.lang.String[])>("maven-jar-plugin", $stack16);

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>($stack17);

        $stack19 = newarray (java.lang.String)[1];

        $stack19[0] = "install";

        $r4 = (org.apache.maven.project.EmptyLifecycleExecutor) this;

        $stack20 = specialinvoke $r4.<org.apache.maven.project.EmptyLifecycleExecutor: org.apache.maven.model.Plugin newPlugin(java.lang.String,java.lang.String[])>("maven-install-plugin", $stack19);

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>($stack20);

        $stack22 = newarray (java.lang.String)[1];

        $stack22[0] = "deploy";

        $r5 = (org.apache.maven.project.EmptyLifecycleExecutor) this;

        $stack23 = specialinvoke $r5.<org.apache.maven.project.EmptyLifecycleExecutor: org.apache.maven.model.Plugin newPlugin(java.lang.String,java.lang.String[])>("maven-deploy-plugin", $stack22);

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>($stack23);

        goto label2;

     label1:
        plugins = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

     label2:
        return plugins;
    }

    private transient org.apache.maven.model.Plugin newPlugin(java.lang.String, java.lang.String[])
    {
        org.apache.maven.model.Plugin $stack9;
        java.lang.String artifactId, goal, $stack14;
        java.lang.String[] goals;
        int l5, l6;
        org.apache.maven.model.PluginExecution $stack10;
        java.lang.StringBuilder $stack11, $stack12, $stack13;
        EmptyLifecycleExecutor this;

        this := @this: EmptyLifecycleExecutor;

        artifactId := @parameter0: java.lang.String;

        goals := @parameter1: java.lang.String[];

        $stack9 = new org.apache.maven.model.Plugin;

        specialinvoke $stack9.<org.apache.maven.model.Plugin: void <init>()>();

        virtualinvoke $stack9.<org.apache.maven.model.Plugin: void setGroupId(java.lang.String)>("org.apache.maven.plugins");

        virtualinvoke $stack9.<org.apache.maven.model.Plugin: void setArtifactId(java.lang.String)>(artifactId);

        l5 = lengthof goals;

        l6 = 0;

     label1:
        if l6 >= l5 goto label2;

        goal = goals[l6];

        $stack10 = new org.apache.maven.model.PluginExecution;

        specialinvoke $stack10.<org.apache.maven.model.PluginExecution: void <init>()>();

        $stack11 = new java.lang.StringBuilder;

        specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("default-");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(goal);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack10.<org.apache.maven.model.PluginExecution: void setId(java.lang.String)>($stack14);

        virtualinvoke $stack10.<org.apache.maven.model.PluginExecution: void addGoal(java.lang.String)>(goal);

        virtualinvoke $stack9.<org.apache.maven.model.Plugin: void addExecution(org.apache.maven.model.PluginExecution)>($stack10);

        l6 = l6 + 1;

        goto label1;

     label2:
        return $stack9;
    }

    public void calculateForkedExecutions(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession)
    {
        EmptyLifecycleExecutor this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.execution.MavenSession session;

        this := @this: EmptyLifecycleExecutor;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        session := @parameter1: org.apache.maven.execution.MavenSession;

        return;
    }

    public java.util.List executeForkedExecutions(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession)
    {
        java.util.List $stack3;
        EmptyLifecycleExecutor this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.execution.MavenSession session;

        this := @this: EmptyLifecycleExecutor;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        session := @parameter1: org.apache.maven.execution.MavenSession;

        $stack3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack3;
    }
}
