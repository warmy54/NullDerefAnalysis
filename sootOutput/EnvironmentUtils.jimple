public class EnvironmentUtils extends java.lang.Object
{
    private static java.util.Properties envVars;

    public void <init>()
    {
        EnvironmentUtils this;

        this := @this: EnvironmentUtils;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addEnvVars(java.util.Properties)
    {
        java.util.Properties props, $stack6, $stack7, $stack8;
        boolean $stack9, caseSensitive, $stack32, $stack13;
        java.util.Map $stack10;
        java.util.Set $stack11;
        java.util.Iterator l3;
        java.lang.Object $stack15, $stack18, $stack24, $stack28;
        java.util.Map$Entry entry;
        java.lang.StringBuilder $stack16, $stack17, $stack22;
        java.util.Locale $stack19;
        java.lang.String $stack20, key, $stack25, $stack21;

        props := @parameter0: java.util.Properties;

        if props == null goto label8;

        $stack6 = <org.apache.maven.properties.internal.EnvironmentUtils: java.util.Properties envVars>;

        if $stack6 != null goto label7;

        $stack8 = new java.util.Properties;

        specialinvoke $stack8.<java.util.Properties: void <init>()>();

        $stack9 = staticinvoke <org.codehaus.plexus.util.Os: boolean isFamily(java.lang.String)>("windows");

        if $stack9 != 0 goto label1;

        $stack32 = 1;

        goto label2;

     label1:
        $stack32 = 0;

     label2:
        caseSensitive = $stack32;

        $stack10 = staticinvoke <java.lang.System: java.util.Map getenv()>();

        $stack11 = interfaceinvoke $stack10.<java.util.Map: java.util.Set entrySet()>();

        l3 = interfaceinvoke $stack11.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $stack13 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label6;

        $stack15 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $stack15;

        $stack16 = new java.lang.StringBuilder;

        specialinvoke $stack16.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("env.");

        if caseSensitive == 0 goto label4;

        $stack28 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack21 = (java.lang.String) $stack28;

        goto label5;

     label4:
        $stack18 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack20 = (java.lang.String) $stack18;

        $stack19 = <java.util.Locale: java.util.Locale ENGLISH>;

        $stack21 = virtualinvoke $stack20.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($stack19);

     label5:
        $stack22 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        key = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack24 = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $stack25 = (java.lang.String) $stack24;

        virtualinvoke $stack8.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>(key, $stack25);

        goto label3;

     label6:
        <org.apache.maven.properties.internal.EnvironmentUtils: java.util.Properties envVars> = $stack8;

     label7:
        $stack7 = <org.apache.maven.properties.internal.EnvironmentUtils: java.util.Properties envVars>;

        virtualinvoke props.<java.util.Properties: void putAll(java.util.Map)>($stack7);

     label8:
        return;
    }
}
