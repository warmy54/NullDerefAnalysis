public class ExecutionPlanItem extends java.lang.Object
{
    private final org.apache.maven.plugin.MojoExecution mojoExecution;

    public void <init>(org.apache.maven.plugin.MojoExecution)
    {
        ExecutionPlanItem this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.lifecycle.internal.ExecutionPlanItem $r0;

        this := @this: ExecutionPlanItem;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.ExecutionPlanItem) this;

        $r0.<org.apache.maven.lifecycle.internal.ExecutionPlanItem: org.apache.maven.plugin.MojoExecution mojoExecution> = mojoExecution;

        return;
    }

    public static java.util.List createExecutionPlanItems(org.apache.maven.project.MavenProject, java.util.List)
    {
        org.apache.maven.project.MavenProject mavenProject;
        java.util.ArrayList $stack5;
        java.util.List executions;
        java.util.Iterator l3;
        boolean $stack7;
        java.lang.Object $stack8;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.lifecycle.internal.ExecutionPlanItem $stack9;

        mavenProject := @parameter0: org.apache.maven.project.MavenProject;

        executions := @parameter1: java.util.List;

        staticinvoke <org.apache.maven.lifecycle.internal.builder.BuilderCommon: void attachToThread(org.apache.maven.project.MavenProject)>(mavenProject);

        $stack5 = new java.util.ArrayList;

        specialinvoke $stack5.<java.util.ArrayList: void <init>()>();

        l3 = interfaceinvoke executions.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label2;

        $stack8 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        mojoExecution = (org.apache.maven.plugin.MojoExecution) $stack8;

        $stack9 = new org.apache.maven.lifecycle.internal.ExecutionPlanItem;

        specialinvoke $stack9.<org.apache.maven.lifecycle.internal.ExecutionPlanItem: void <init>(org.apache.maven.plugin.MojoExecution)>(mojoExecution);

        interfaceinvoke $stack5.<java.util.List: boolean add(java.lang.Object)>($stack9);

        goto label1;

     label2:
        return $stack5;
    }

    public org.apache.maven.plugin.MojoExecution getMojoExecution()
    {
        ExecutionPlanItem this;
        org.apache.maven.plugin.MojoExecution $stack1;
        org.apache.maven.lifecycle.internal.ExecutionPlanItem $r0;

        this := @this: ExecutionPlanItem;

        $r0 = (org.apache.maven.lifecycle.internal.ExecutionPlanItem) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ExecutionPlanItem: org.apache.maven.plugin.MojoExecution mojoExecution>;

        return $stack1;
    }

    public java.lang.String getLifecyclePhase()
    {
        ExecutionPlanItem this;
        org.apache.maven.plugin.MojoExecution $stack1;
        java.lang.String $stack2;
        org.apache.maven.lifecycle.internal.ExecutionPlanItem $r0;

        this := @this: ExecutionPlanItem;

        $r0 = (org.apache.maven.lifecycle.internal.ExecutionPlanItem) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ExecutionPlanItem: org.apache.maven.plugin.MojoExecution mojoExecution>;

        $stack2 = virtualinvoke $stack1.<org.apache.maven.plugin.MojoExecution: java.lang.String getLifecyclePhase()>();

        return $stack2;
    }

    public org.apache.maven.model.Plugin getPlugin()
    {
        ExecutionPlanItem this;
        org.apache.maven.plugin.MojoExecution $stack2;
        org.apache.maven.plugin.descriptor.MojoDescriptor mojoDescriptor;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack4;
        org.apache.maven.model.Plugin $stack5;
        org.apache.maven.lifecycle.internal.ExecutionPlanItem $r0;

        this := @this: ExecutionPlanItem;

        $r0 = (org.apache.maven.lifecycle.internal.ExecutionPlanItem) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.lifecycle.internal.ExecutionPlanItem: org.apache.maven.plugin.MojoExecution getMojoExecution()>();

        mojoDescriptor = virtualinvoke $stack2.<org.apache.maven.plugin.MojoExecution: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        $stack4 = virtualinvoke mojoDescriptor.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        $stack5 = virtualinvoke $stack4.<org.apache.maven.plugin.descriptor.PluginDescriptor: org.apache.maven.model.Plugin getPlugin()>();

        return $stack5;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack2, $stack4, $stack5, $stack7, $u0;
        ExecutionPlanItem this;
        org.apache.maven.plugin.MojoExecution $stack3;
        java.lang.String $stack6, $stack8;
        org.apache.maven.lifecycle.internal.ExecutionPlanItem $r0;

        this := @this: ExecutionPlanItem;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ExecutionPlanItem{, mojoExecution=");

        $r0 = (org.apache.maven.lifecycle.internal.ExecutionPlanItem) this;

        $stack3 = $r0.<org.apache.maven.lifecycle.internal.ExecutionPlanItem: org.apache.maven.plugin.MojoExecution mojoExecution>;

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $stack6 = specialinvoke this.<java.lang.Object: java.lang.String toString()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack8;
    }
}
