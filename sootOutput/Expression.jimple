public class Expression extends java.lang.Object implements java.io.Serializable
{
    private java.lang.String syntax;
    private java.lang.String description;
    private java.lang.String configuration;
    private java.util.Properties cliOptions;
    private java.util.Properties apiMethods;
    private java.lang.String deprecation;
    private java.lang.String ban;
    private boolean editable;

    public void <init>()
    {
        Expression this;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $r0.<org.apache.maven.usability.plugin.Expression: boolean editable> = 1;

        return;
    }

    public void addApiMethod(java.lang.String, java.lang.String)
    {
        Expression this;
        java.util.Properties $stack3;
        java.lang.String key, value;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.usability.plugin.Expression: java.util.Properties getApiMethods()>();

        virtualinvoke $stack3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public void addCliOption(java.lang.String, java.lang.String)
    {
        Expression this;
        java.util.Properties $stack3;
        java.lang.String key, value;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.usability.plugin.Expression: java.util.Properties getCliOptions()>();

        virtualinvoke $stack3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.util.Properties getApiMethods()
    {
        Expression this;
        java.util.Properties $stack1, $stack2, $u0;
        org.apache.maven.usability.plugin.Expression $r0, $r1, $r2;

        this := @this: Expression;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack1 = $r0.<org.apache.maven.usability.plugin.Expression: java.util.Properties apiMethods>;

        if $stack1 != null goto label1;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r1 = (org.apache.maven.usability.plugin.Expression) this;

        $r1.<org.apache.maven.usability.plugin.Expression: java.util.Properties apiMethods> = $u0;

     label1:
        $r2 = (org.apache.maven.usability.plugin.Expression) this;

        $stack2 = $r2.<org.apache.maven.usability.plugin.Expression: java.util.Properties apiMethods>;

        return $stack2;
    }

    public java.lang.String getBan()
    {
        Expression this;
        java.lang.String $stack1;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack1 = $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String ban>;

        return $stack1;
    }

    public java.util.Properties getCliOptions()
    {
        Expression this;
        java.util.Properties $stack1, $stack2, $u0;
        org.apache.maven.usability.plugin.Expression $r0, $r1, $r2;

        this := @this: Expression;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack1 = $r0.<org.apache.maven.usability.plugin.Expression: java.util.Properties cliOptions>;

        if $stack1 != null goto label1;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r1 = (org.apache.maven.usability.plugin.Expression) this;

        $r1.<org.apache.maven.usability.plugin.Expression: java.util.Properties cliOptions> = $u0;

     label1:
        $r2 = (org.apache.maven.usability.plugin.Expression) this;

        $stack2 = $r2.<org.apache.maven.usability.plugin.Expression: java.util.Properties cliOptions>;

        return $stack2;
    }

    public java.lang.String getConfiguration()
    {
        Expression this;
        java.lang.String $stack1;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack1 = $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String configuration>;

        return $stack1;
    }

    public java.lang.String getDeprecation()
    {
        Expression this;
        java.lang.String $stack1;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack1 = $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String deprecation>;

        return $stack1;
    }

    public java.lang.String getDescription()
    {
        Expression this;
        java.lang.String $stack1;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack1 = $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String description>;

        return $stack1;
    }

    public java.lang.String getSyntax()
    {
        Expression this;
        java.lang.String $stack1;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack1 = $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String syntax>;

        return $stack1;
    }

    public boolean isEditable()
    {
        Expression this;
        boolean $stack1;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $stack1 = $r0.<org.apache.maven.usability.plugin.Expression: boolean editable>;

        return $stack1;
    }

    public void setApiMethods(java.util.Properties)
    {
        Expression this;
        java.util.Properties apiMethods;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        apiMethods := @parameter0: java.util.Properties;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $r0.<org.apache.maven.usability.plugin.Expression: java.util.Properties apiMethods> = apiMethods;

        return;
    }

    public void setBan(java.lang.String)
    {
        Expression this;
        java.lang.String ban;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        ban := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String ban> = ban;

        return;
    }

    public void setCliOptions(java.util.Properties)
    {
        Expression this;
        java.util.Properties cliOptions;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        cliOptions := @parameter0: java.util.Properties;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $r0.<org.apache.maven.usability.plugin.Expression: java.util.Properties cliOptions> = cliOptions;

        return;
    }

    public void setConfiguration(java.lang.String)
    {
        Expression this;
        java.lang.String configuration;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        configuration := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String configuration> = configuration;

        return;
    }

    public void setDeprecation(java.lang.String)
    {
        Expression this;
        java.lang.String deprecation;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        deprecation := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String deprecation> = deprecation;

        return;
    }

    public void setDescription(java.lang.String)
    {
        Expression this;
        java.lang.String description;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        description := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String description> = description;

        return;
    }

    public void setEditable(boolean)
    {
        Expression this;
        boolean editable;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        editable := @parameter0: boolean;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $r0.<org.apache.maven.usability.plugin.Expression: boolean editable> = editable;

        return;
    }

    public void setSyntax(java.lang.String)
    {
        Expression this;
        java.lang.String syntax;
        org.apache.maven.usability.plugin.Expression $r0;

        this := @this: Expression;

        syntax := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.usability.plugin.Expression) this;

        $r0.<org.apache.maven.usability.plugin.Expression: java.lang.String syntax> = syntax;

        return;
    }
}
