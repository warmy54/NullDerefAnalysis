public class ExtensionDescriptor extends java.lang.Object
{
    private java.util.List exportedPackages;
    private java.util.List exportedArtifacts;

    void <init>()
    {
        ExtensionDescriptor this;

        this := @this: ExtensionDescriptor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List getExportedPackages()
    {
        ExtensionDescriptor this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.project.ExtensionDescriptor $r0, $r1, $r2;

        this := @this: ExtensionDescriptor;

        $r0 = (org.apache.maven.project.ExtensionDescriptor) this;

        $stack1 = $r0.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedPackages>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.project.ExtensionDescriptor) this;

        $r1.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedPackages> = $u0;

     label1:
        $r2 = (org.apache.maven.project.ExtensionDescriptor) this;

        $stack2 = $r2.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedPackages>;

        return $stack2;
    }

    public void setExportedPackages(java.util.List)
    {
        java.util.List exportedPackages;
        ExtensionDescriptor this;
        java.util.ArrayList $u0;
        org.apache.maven.project.ExtensionDescriptor $r0, $r1;

        this := @this: ExtensionDescriptor;

        exportedPackages := @parameter0: java.util.List;

        if exportedPackages != null goto label1;

        $r0 = (org.apache.maven.project.ExtensionDescriptor) this;

        $r0.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedPackages> = null;

        goto label2;

     label1:
        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(exportedPackages);

        $r1 = (org.apache.maven.project.ExtensionDescriptor) this;

        $r1.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedPackages> = $u0;

     label2:
        return;
    }

    public java.util.List getExportedArtifacts()
    {
        ExtensionDescriptor this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.project.ExtensionDescriptor $r0, $r1, $r2;

        this := @this: ExtensionDescriptor;

        $r0 = (org.apache.maven.project.ExtensionDescriptor) this;

        $stack1 = $r0.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedArtifacts>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.project.ExtensionDescriptor) this;

        $r1.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedArtifacts> = $u0;

     label1:
        $r2 = (org.apache.maven.project.ExtensionDescriptor) this;

        $stack2 = $r2.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedArtifacts>;

        return $stack2;
    }

    public void setExportedArtifacts(java.util.List)
    {
        java.util.List exportedArtifacts;
        ExtensionDescriptor this;
        java.util.ArrayList $u0;
        org.apache.maven.project.ExtensionDescriptor $r0, $r1;

        this := @this: ExtensionDescriptor;

        exportedArtifacts := @parameter0: java.util.List;

        if exportedArtifacts != null goto label1;

        $r0 = (org.apache.maven.project.ExtensionDescriptor) this;

        $r0.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedArtifacts> = null;

        goto label2;

     label1:
        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>(exportedArtifacts);

        $r1 = (org.apache.maven.project.ExtensionDescriptor) this;

        $r1.<org.apache.maven.project.ExtensionDescriptor: java.util.List exportedArtifacts> = $u0;

     label2:
        return;
    }
}
