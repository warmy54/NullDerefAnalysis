public class FFmpegLogCallback extends org.bytedeco.ffmpeg.avutil.LogCallback
{
    private static final org.bytedeco.javacpp.tools.Logger logger;
    static final org.bytedeco.javacv.FFmpegLogCallback instance;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        FFmpegLogCallback this;

        this := @this: FFmpegLogCallback;

        specialinvoke this.<org.bytedeco.ffmpeg.avutil.LogCallback: void <init>()>();

        return;
    }

    public static org.bytedeco.javacv.FFmpegLogCallback getInstance()
    {
        org.bytedeco.javacv.FFmpegLogCallback $stack0;

        $stack0 = <org.bytedeco.javacv.FFmpegLogCallback: org.bytedeco.javacv.FFmpegLogCallback instance>;

        return $stack0;
    }

    public static void set()
    {
        org.bytedeco.javacv.FFmpegLogCallback $stack0;
        org.bytedeco.ffmpeg.avutil.LogCallback $r0;

        $stack0 = staticinvoke <org.bytedeco.javacv.FFmpegLogCallback: org.bytedeco.javacv.FFmpegLogCallback getInstance()>();

        $r0 = (org.bytedeco.ffmpeg.avutil.LogCallback) $stack0;

        staticinvoke <org.bytedeco.ffmpeg.global.avutil: void setLogCallback(org.bytedeco.ffmpeg.avutil.LogCallback)>($r0);

        return;
    }

    public static int getLevel()
    {
        int $stack0;

        $stack0 = staticinvoke <org.bytedeco.ffmpeg.global.avutil: int av_log_get_level()>();

        return $stack0;
    }

    public static void setLevel(int)
    {
        int level;

        level := @parameter0: int;

        staticinvoke <org.bytedeco.ffmpeg.global.avutil: void av_log_set_level(int)>(level);

        return;
    }

    public void call(int, org.bytedeco.javacpp.BytePointer)
    {
        int level;
        org.bytedeco.javacpp.BytePointer msg;
        org.bytedeco.javacpp.tools.Logger $stack3, $stack5, $stack7, $stack9;
        java.lang.String $stack4, $stack6, $stack8, $stack10;
        boolean $stack11;
        java.lang.AssertionError $stack12;
        FFmpegLogCallback this;

        this := @this: FFmpegLogCallback;

        level := @parameter0: int;

        msg := @parameter1: org.bytedeco.javacpp.BytePointer;

        lookupswitch(level)
        {
            case 0: goto label1;
            case 8: goto label1;
            case 16: goto label1;
            case 24: goto label2;
            case 32: goto label3;
            case 40: goto label4;
            case 48: goto label4;
            case 56: goto label4;
            default: goto label5;
        };

     label1:
        $stack9 = <org.bytedeco.javacv.FFmpegLogCallback: org.bytedeco.javacpp.tools.Logger logger>;

        $stack10 = virtualinvoke msg.<org.bytedeco.javacpp.BytePointer: java.lang.String getString()>();

        virtualinvoke $stack9.<org.bytedeco.javacpp.tools.Logger: void error(java.lang.String)>($stack10);

        goto label6;

     label2:
        $stack7 = <org.bytedeco.javacv.FFmpegLogCallback: org.bytedeco.javacpp.tools.Logger logger>;

        $stack8 = virtualinvoke msg.<org.bytedeco.javacpp.BytePointer: java.lang.String getString()>();

        virtualinvoke $stack7.<org.bytedeco.javacpp.tools.Logger: void warn(java.lang.String)>($stack8);

        goto label6;

     label3:
        $stack5 = <org.bytedeco.javacv.FFmpegLogCallback: org.bytedeco.javacpp.tools.Logger logger>;

        $stack6 = virtualinvoke msg.<org.bytedeco.javacpp.BytePointer: java.lang.String getString()>();

        virtualinvoke $stack5.<org.bytedeco.javacpp.tools.Logger: void info(java.lang.String)>($stack6);

        goto label6;

     label4:
        $stack3 = <org.bytedeco.javacv.FFmpegLogCallback: org.bytedeco.javacpp.tools.Logger logger>;

        $stack4 = virtualinvoke msg.<org.bytedeco.javacpp.BytePointer: java.lang.String getString()>();

        virtualinvoke $stack3.<org.bytedeco.javacpp.tools.Logger: void debug(java.lang.String)>($stack4);

        goto label6;

     label5:
        $stack11 = <org.bytedeco.javacv.FFmpegLogCallback: boolean $assertionsDisabled>;

        if $stack11 != 0 goto label6;

        $stack12 = new java.lang.AssertionError;

        specialinvoke $stack12.<java.lang.AssertionError: void <init>()>();

        throw $stack12;

     label6:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack6;
        org.bytedeco.javacpp.tools.Logger $stack2;
        org.bytedeco.javacv.FFmpegLogCallback $stack3, $stack5;
        org.bytedeco.javacpp.Pointer $stack4;

        $stack0 = class "Lorg/bytedeco/javacv/FFmpegLogCallback;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack6 = 1;

        goto label2;

     label1:
        $stack6 = 0;

     label2:
        <org.bytedeco.javacv.FFmpegLogCallback: boolean $assertionsDisabled> = $stack6;

        $stack2 = staticinvoke <org.bytedeco.javacpp.tools.Logger: org.bytedeco.javacpp.tools.Logger create(java.lang.Class)>(class "Lorg/bytedeco/javacv/FFmpegLogCallback;");

        <org.bytedeco.javacv.FFmpegLogCallback: org.bytedeco.javacpp.tools.Logger logger> = $stack2;

        $stack3 = new org.bytedeco.javacv.FFmpegLogCallback;

        specialinvoke $stack3.<org.bytedeco.javacv.FFmpegLogCallback: void <init>()>();

        $stack4 = virtualinvoke $stack3.<org.bytedeco.javacv.FFmpegLogCallback: org.bytedeco.javacpp.Pointer retainReference()>();

        $stack5 = (org.bytedeco.javacv.FFmpegLogCallback) $stack4;

        <org.bytedeco.javacv.FFmpegLogCallback: org.bytedeco.javacv.FFmpegLogCallback instance> = $stack5;

        return;
    }
}
