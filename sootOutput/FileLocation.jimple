public class FileLocation extends java.lang.Object
{
    protected java.lang.String fileName;
    protected int lineNumber;
    protected int linePos;
    protected int index;
    protected int length;

    public void <init>(java.lang.String, int, int, int)
    {
        FileLocation this;
        java.lang.String fileName;
        int lineNumber, linePos, index;
        org.ubi.FileLocation $r0;

        this := @this: FileLocation;

        fileName := @parameter0: java.lang.String;

        lineNumber := @parameter1: int;

        linePos := @parameter2: int;

        index := @parameter3: int;

        $r0 = (org.ubi.FileLocation) this;

        specialinvoke $r0.<org.ubi.FileLocation: void <init>(java.lang.String,int,int,int,int)>(fileName, lineNumber, linePos, index, 1);

        return;
    }

    public void <init>(java.lang.String, int, int, int, int)
    {
        FileLocation this;
        java.lang.String fileName;
        int lineNumber, linePos, index, length;
        org.ubi.FileLocation $r0, $r1, $r2, $r3, $r4;

        this := @this: FileLocation;

        fileName := @parameter0: java.lang.String;

        lineNumber := @parameter1: int;

        linePos := @parameter2: int;

        index := @parameter3: int;

        length := @parameter4: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.ubi.FileLocation) this;

        $r0.<org.ubi.FileLocation: java.lang.String fileName> = fileName;

        $r1 = (org.ubi.FileLocation) this;

        $r1.<org.ubi.FileLocation: int lineNumber> = lineNumber;

        $r2 = (org.ubi.FileLocation) this;

        $r2.<org.ubi.FileLocation: int linePos> = linePos;

        $r3 = (org.ubi.FileLocation) this;

        $r3.<org.ubi.FileLocation: int index> = index;

        $r4 = (org.ubi.FileLocation) this;

        $r4.<org.ubi.FileLocation: int length> = length;

        return;
    }

    public java.lang.String getFileName()
    {
        FileLocation this;
        java.lang.String $stack1;
        org.ubi.FileLocation $r0;

        this := @this: FileLocation;

        $r0 = (org.ubi.FileLocation) this;

        $stack1 = $r0.<org.ubi.FileLocation: java.lang.String fileName>;

        return $stack1;
    }

    public int getLineNumber()
    {
        FileLocation this;
        int $stack1;
        org.ubi.FileLocation $r0;

        this := @this: FileLocation;

        $r0 = (org.ubi.FileLocation) this;

        $stack1 = $r0.<org.ubi.FileLocation: int lineNumber>;

        return $stack1;
    }

    public int getLinePos()
    {
        FileLocation this;
        int $stack1;
        org.ubi.FileLocation $r0;

        this := @this: FileLocation;

        $r0 = (org.ubi.FileLocation) this;

        $stack1 = $r0.<org.ubi.FileLocation: int linePos>;

        return $stack1;
    }

    public int getIndex()
    {
        FileLocation this;
        int $stack1;
        org.ubi.FileLocation $r0;

        this := @this: FileLocation;

        $r0 = (org.ubi.FileLocation) this;

        $stack1 = $r0.<org.ubi.FileLocation: int index>;

        return $stack1;
    }

    public int getLength()
    {
        FileLocation this;
        int $stack1;
        org.ubi.FileLocation $r0;

        this := @this: FileLocation;

        $r0 = (org.ubi.FileLocation) this;

        $stack1 = $r0.<org.ubi.FileLocation: int length>;

        return $stack1;
    }

    public java.lang.String toString()
    {
        FileLocation this;
        java.lang.String $stack1, $stack4;
        int $stack2, $stack3;
        org.ubi.FileLocation $r0, $r1, $r2;

        this := @this: FileLocation;

        $r0 = (org.ubi.FileLocation) this;

        $stack1 = $r0.<org.ubi.FileLocation: java.lang.String fileName>;

        $r1 = (org.ubi.FileLocation) this;

        $stack2 = virtualinvoke $r1.<org.ubi.FileLocation: int getLineNumber()>();

        $r2 = (org.ubi.FileLocation) this;

        $stack3 = virtualinvoke $r2.<org.ubi.FileLocation: int getLinePos()>();

        $stack4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int,int)>($stack1, $stack2, $stack3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(" \u0001:\u0001:\u0001");

        return $stack4;
    }
}
