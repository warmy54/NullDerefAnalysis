public class FileModelSource extends org.apache.maven.building.FileSource implements org.apache.maven.model.building.ModelSource2
{

    public void <init>(java.io.File)
    {
        FileModelSource this;
        java.io.File pomFile;

        this := @this: FileModelSource;

        pomFile := @parameter0: java.io.File;

        specialinvoke this.<org.apache.maven.building.FileSource: void <init>(java.io.File)>(pomFile);

        return;
    }

    public java.io.File getPomFile()
    {
        FileModelSource this;
        java.io.File $stack1;
        org.apache.maven.model.building.FileModelSource $r0;

        this := @this: FileModelSource;

        $r0 = (org.apache.maven.model.building.FileModelSource) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.building.FileModelSource: java.io.File getFile()>();

        return $stack1;
    }

    public org.apache.maven.model.building.ModelSource2 getRelatedSource(java.lang.String)
    {
        char $stack3, $stack5;
        java.lang.String $stack4, relPath, relPath#2;
        FileModelSource this;
        java.io.File $stack8, $stack9, relatedPom, $u0, $u1, $u2;
        boolean $stack10, $stack11, $stack12;
        java.net.URI $stack16, $stack17;
        org.apache.maven.model.building.FileModelSource $u3, $r0;
        org.apache.maven.model.building.ModelSource2 $r1;

        this := @this: FileModelSource;

        relPath := @parameter0: java.lang.String;

        $stack3 = <java.io.File: char separatorChar>;

        $stack4 = virtualinvoke relPath.<java.lang.String: java.lang.String replace(char,char)>(92, $stack3);

        $stack5 = <java.io.File: char separatorChar>;

        relPath#2 = virtualinvoke $stack4.<java.lang.String: java.lang.String replace(char,char)>(47, $stack5);

        $u0 = new java.io.File;

        $r0 = (org.apache.maven.model.building.FileModelSource) this;

        $stack8 = virtualinvoke $r0.<org.apache.maven.model.building.FileModelSource: java.io.File getFile()>();

        $stack9 = virtualinvoke $stack8.<java.io.File: java.io.File getParentFile()>();

        specialinvoke $u0.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack9, relPath#2);

        relatedPom = $u0;

        $stack10 = virtualinvoke $u0.<java.io.File: boolean isDirectory()>();

        if $stack10 == 0 goto label1;

        $u1 = new java.io.File;

        specialinvoke $u1.<java.io.File: void <init>(java.io.File,java.lang.String)>($u0, "pom.xml");

        relatedPom = $u1;

     label1:
        $stack11 = virtualinvoke relatedPom.<java.io.File: boolean isFile()>();

        if $stack11 == 0 goto label2;

        $stack12 = virtualinvoke relatedPom.<java.io.File: boolean canRead()>();

        if $stack12 == 0 goto label2;

        $u3 = new org.apache.maven.model.building.FileModelSource;

        $u2 = new java.io.File;

        $stack16 = virtualinvoke relatedPom.<java.io.File: java.net.URI toURI()>();

        $stack17 = virtualinvoke $stack16.<java.net.URI: java.net.URI normalize()>();

        specialinvoke $u2.<java.io.File: void <init>(java.net.URI)>($stack17);

        specialinvoke $u3.<org.apache.maven.model.building.FileModelSource: void <init>(java.io.File)>($u2);

        $r1 = (org.apache.maven.model.building.ModelSource2) $u3;

        return $r1;

     label2:
        return null;
    }

    public java.net.URI getLocationURI()
    {
        FileModelSource this;
        java.io.File $stack1;
        java.net.URI $stack2;
        org.apache.maven.model.building.FileModelSource $r0;

        this := @this: FileModelSource;

        $r0 = (org.apache.maven.model.building.FileModelSource) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.building.FileModelSource: java.io.File getFile()>();

        $stack2 = virtualinvoke $stack1.<java.io.File: java.net.URI toURI()>();

        return $stack2;
    }

    public boolean equals(java.lang.Object)
    {
        FileModelSource this;
        java.lang.Object obj;
        java.lang.Class $stack3, $stack4;
        boolean $stack5, $stack8;
        org.apache.maven.model.building.FileModelSource other, $r0;
        java.io.File $stack6, $stack7;

        this := @this: FileModelSource;

        obj := @parameter0: java.lang.Object;

        if this != obj goto label1;

        return 1;

     label1:
        if obj != null goto label2;

        return 0;

     label2:
        $stack3 = class "Lorg/apache/maven/model/building/FileModelSource;";

        $stack4 = virtualinvoke obj.<java.lang.Object: java.lang.Class getClass()>();

        $stack5 = virtualinvoke $stack3.<java.lang.Object: boolean equals(java.lang.Object)>($stack4);

        if $stack5 != 0 goto label3;

        return 0;

     label3:
        other = (org.apache.maven.model.building.FileModelSource) obj;

        $r0 = (org.apache.maven.model.building.FileModelSource) this;

        $stack6 = virtualinvoke $r0.<org.apache.maven.model.building.FileModelSource: java.io.File getFile()>();

        $stack7 = virtualinvoke other.<org.apache.maven.model.building.FileModelSource: java.io.File getFile()>();

        $stack8 = virtualinvoke $stack6.<java.io.File: boolean equals(java.lang.Object)>($stack7);

        return $stack8;
    }

    public int hashCode()
    {
        FileModelSource this;
        java.io.File $stack1;
        int $stack2;
        org.apache.maven.model.building.FileModelSource $r0;

        this := @this: FileModelSource;

        $r0 = (org.apache.maven.model.building.FileModelSource) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.building.FileModelSource: java.io.File getFile()>();

        $stack2 = virtualinvoke $stack1.<java.io.File: int hashCode()>();

        return $stack2;
    }
}
