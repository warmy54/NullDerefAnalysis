public class FileSizeFormatTest extends java.lang.Object
{

    public void <init>()
    {
        FileSizeFormatTest this;

        this := @this: FileSizeFormatTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testNegativeSize()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat $stack4;
        java.util.Locale $stack5;
        org.junit.jupiter.api.function.Executable $stack7;
        FileSizeFormatTest this;

        this := @this: FileSizeFormatTest;

        $stack4 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        $stack5 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $stack4.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: void <init>(java.util.Locale)>($stack5);

        $stack7 = staticinvoke <FileSizeFormatTest$lambda_testNegativeSize_0__309: org.junit.jupiter.api.function.Executable bootstrap$(org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat,long)>($stack4, -100L);

        staticinvoke <org.junit.jupiter.api.Assertions: java.lang.Throwable assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable)>(class "Ljava/lang/IllegalArgumentException;", $stack7);

        return;
    }

    public void testSize()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat $stack42;
        java.util.Locale $stack43;
        java.lang.String $stack45, $stack47, $stack49, $stack51, $stack53, $stack55, $stack57, $stack59, $stack61, $stack63, $stack65, $stack67, $stack69, $stack71, $stack73, $stack75, $stack77, $stack79, $stack81, $stack83;
        FileSizeFormatTest this;

        this := @this: FileSizeFormatTest;

        $stack42 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        $stack43 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: void <init>(java.util.Locale)>($stack43);

        $stack45 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(0L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 B", $stack45);

        $stack47 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(5L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5 B", $stack47);

        $stack49 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(10L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("10 B", $stack49);

        $stack51 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(15L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("15 B", $stack51);

        $stack53 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(999L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999 B", $stack53);

        $stack55 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(1000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 kB", $stack55);

        $stack57 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(5500L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5.5 kB", $stack57);

        $stack59 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(10000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("10 kB", $stack59);

        $stack61 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(15000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("15 kB", $stack61);

        $stack63 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(999000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999 kB", $stack63);

        $stack65 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(1000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 MB", $stack65);

        $stack67 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(5500000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5.5 MB", $stack67);

        $stack69 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(10000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("10 MB", $stack69);

        $stack71 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(15000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("15 MB", $stack71);

        $stack73 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(999000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999 MB", $stack73);

        $stack75 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(1000000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 GB", $stack75);

        $stack77 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(5500000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5.5 GB", $stack77);

        $stack79 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(10000000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("10 GB", $stack79);

        $stack81 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(15000000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("15 GB", $stack81);

        $stack83 = virtualinvoke $stack42.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(1000000000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1000 GB", $stack83);

        return;
    }

    public void testSizeWithSelectedScaleUnit()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat $stack30;
        java.util.Locale $stack31;
        java.lang.String $stack33, $stack36, $stack39, $stack42, $stack45, $stack47, $stack50, $stack53, $stack56, $stack59, $stack61, $stack64, $stack67, $stack70, $stack73, $stack75, $stack78, $stack81, $stack84, $stack87, $stack89, $stack92, $stack95, $stack98, $stack101, $stack103, $stack106, $stack109, $stack112, $stack115, $stack117, $stack120, $stack123, $stack126, $stack129, $stack131, $stack134, $stack137, $stack140, $stack143, $stack145, $stack148, $stack151, $stack154, $stack157, $stack159, $stack162, $stack165, $stack168, $stack171, $stack173, $stack176, $stack179, $stack182, $stack185, $stack187, $stack190, $stack193, $stack196, $stack199, $stack201, $stack204, $stack207, $stack210, $stack213, $stack215, $stack218, $stack221, $stack224, $stack227;
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit $stack34, $stack37, $stack40, $stack43, $stack48, $stack51, $stack54, $stack57, $stack62, $stack65, $stack68, $stack71, $stack76, $stack79, $stack82, $stack85, $stack90, $stack93, $stack96, $stack99, $stack104, $stack107, $stack110, $stack113, $stack118, $stack121, $stack124, $stack127, $stack132, $stack135, $stack138, $stack141, $stack146, $stack149, $stack152, $stack155, $stack160, $stack163, $stack166, $stack169, $stack174, $stack177, $stack180, $stack183, $stack188, $stack191, $stack194, $stack197, $stack202, $stack205, $stack208, $stack211, $stack216, $stack219, $stack222, $stack225;
        FileSizeFormatTest this;

        this := @this: FileSizeFormatTest;

        $stack30 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        $stack31 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: void <init>(java.util.Locale)>($stack31);

        $stack33 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(0L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 B", $stack33);

        $stack34 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack36 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(0L, $stack34);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 B", $stack36);

        $stack37 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack39 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(0L, $stack37);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 kB", $stack39);

        $stack40 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack42 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(0L, $stack40);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 MB", $stack42);

        $stack43 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack45 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(0L, $stack43);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack45);

        $stack47 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(5L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5 B", $stack47);

        $stack48 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack50 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(5L, $stack48);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5 B", $stack50);

        $stack51 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack53 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(5L, $stack51);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 kB", $stack53);

        $stack54 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack56 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(5L, $stack54);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 MB", $stack56);

        $stack57 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack59 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(5L, $stack57);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack59);

        $stack61 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(49L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("49 B", $stack61);

        $stack62 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack64 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49L, $stack62);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("49 B", $stack64);

        $stack65 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack67 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49L, $stack65);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 kB", $stack67);

        $stack68 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack70 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49L, $stack68);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 MB", $stack70);

        $stack71 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack73 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49L, $stack71);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack73);

        $stack75 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(50L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50 B", $stack75);

        $stack76 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack78 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50L, $stack76);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50 B", $stack78);

        $stack79 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack81 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50L, $stack79);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0.1 kB", $stack81);

        $stack82 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack84 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50L, $stack82);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 MB", $stack84);

        $stack85 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack87 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50L, $stack85);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack87);

        $stack89 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(999L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999 B", $stack89);

        $stack90 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack92 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999L, $stack90);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999 B", $stack92);

        $stack93 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack95 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999L, $stack93);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 kB", $stack95);

        $stack96 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack98 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999L, $stack96);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 MB", $stack98);

        $stack99 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack101 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999L, $stack99);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack101);

        $stack103 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(1000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 kB", $stack103);

        $stack104 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack106 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000L, $stack104);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1000 B", $stack106);

        $stack107 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack109 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000L, $stack107);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 kB", $stack109);

        $stack110 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack112 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000L, $stack110);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 MB", $stack112);

        $stack113 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack115 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000L, $stack113);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack115);

        $stack117 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(49000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("49 kB", $stack117);

        $stack118 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack120 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49000L, $stack118);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("49000 B", $stack120);

        $stack121 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack123 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49000L, $stack121);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("49 kB", $stack123);

        $stack124 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack126 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49000L, $stack124);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 MB", $stack126);

        $stack127 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack129 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49000L, $stack127);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack129);

        $stack131 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(50000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50 kB", $stack131);

        $stack132 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack134 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50000L, $stack132);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50000 B", $stack134);

        $stack135 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack137 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50000L, $stack135);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50 kB", $stack137);

        $stack138 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack140 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50000L, $stack138);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0.1 MB", $stack140);

        $stack141 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack143 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50000L, $stack141);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack143);

        $stack145 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(999000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999 kB", $stack145);

        $stack146 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack148 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999000L, $stack146);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999000 B", $stack148);

        $stack149 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack151 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999000L, $stack149);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999 kB", $stack151);

        $stack152 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack154 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999000L, $stack152);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 MB", $stack154);

        $stack155 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack157 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999000L, $stack155);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack157);

        $stack159 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(1000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 MB", $stack159);

        $stack160 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack162 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000000L, $stack160);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1000000 B", $stack162);

        $stack163 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack165 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000000L, $stack163);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1000 kB", $stack165);

        $stack166 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack168 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000000L, $stack166);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 MB", $stack168);

        $stack169 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack171 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000000L, $stack169);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack171);

        $stack173 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(49000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("49 MB", $stack173);

        $stack174 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack176 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49000000L, $stack174);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("49000000 B", $stack176);

        $stack177 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack179 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49000000L, $stack177);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("49000 kB", $stack179);

        $stack180 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack182 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49000000L, $stack180);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("49 MB", $stack182);

        $stack183 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack185 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(49000000L, $stack183);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 GB", $stack185);

        $stack187 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(50000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50 MB", $stack187);

        $stack188 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack190 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50000000L, $stack188);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50000000 B", $stack190);

        $stack191 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack193 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50000000L, $stack191);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50000 kB", $stack193);

        $stack194 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack196 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50000000L, $stack194);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50 MB", $stack196);

        $stack197 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack199 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(50000000L, $stack197);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0.1 GB", $stack199);

        $stack201 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(999000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999 MB", $stack201);

        $stack202 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack204 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999000000L, $stack202);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999000000 B", $stack204);

        $stack205 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack207 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999000000L, $stack205);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999000 kB", $stack207);

        $stack208 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack210 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999000000L, $stack208);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("999 MB", $stack210);

        $stack211 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack213 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(999000000L, $stack211);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 GB", $stack213);

        $stack215 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(1000000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 GB", $stack215);

        $stack216 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit BYTE>;

        $stack218 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000000000L, $stack216);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1000000000 B", $stack218);

        $stack219 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit KILOBYTE>;

        $stack221 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000000000L, $stack219);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1000000 kB", $stack221);

        $stack222 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit MEGABYTE>;

        $stack224 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000000000L, $stack222);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1000 MB", $stack224);

        $stack225 = <org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit GIGABYTE>;

        $stack227 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long,org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat$ScaleUnit)>(1000000000L, $stack225);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 GB", $stack227);

        return;
    }

    public void testNegativeProgressedSize()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat $stack4;
        java.util.Locale $stack5;
        org.junit.jupiter.api.function.Executable $stack7;
        FileSizeFormatTest this;

        this := @this: FileSizeFormatTest;

        $stack4 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        $stack5 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $stack4.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: void <init>(java.util.Locale)>($stack5);

        $stack7 = staticinvoke <FileSizeFormatTest$lambda_testNegativeProgressedSize_1__311: org.junit.jupiter.api.function.Executable bootstrap$(org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat,long)>($stack4, -100L);

        staticinvoke <org.junit.jupiter.api.Assertions: java.lang.Throwable assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable)>(class "Ljava/lang/IllegalArgumentException;", $stack7);

        return;
    }

    public void testNegativeProgressedSizeBiggerThanSize()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat $stack2;
        java.util.Locale $stack3;
        org.junit.jupiter.api.function.Executable $stack5;
        FileSizeFormatTest this;

        this := @this: FileSizeFormatTest;

        $stack2 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        $stack3 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $stack2.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: void <init>(java.util.Locale)>($stack3);

        $stack5 = staticinvoke <FileSizeFormatTest$lambda_testNegativeProgressedSizeBiggerThanSize_2__310: org.junit.jupiter.api.function.Executable bootstrap$(org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat)>($stack2);

        staticinvoke <org.junit.jupiter.api.Assertions: java.lang.Throwable assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable)>(class "Ljava/lang/IllegalArgumentException;", $stack5);

        return;
    }

    public void testProgressedSizeWithoutSize()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat $stack10;
        java.util.Locale $stack11;
        java.lang.String $stack13, $stack15, $stack17, $stack19;
        FileSizeFormatTest this;

        this := @this: FileSizeFormatTest;

        $stack10 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        $stack11 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $stack10.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: void <init>(java.util.Locale)>($stack11);

        $stack13 = virtualinvoke $stack10.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(0L, -1L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 B", $stack13);

        $stack15 = virtualinvoke $stack10.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(1000L, -1L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 kB", $stack15);

        $stack17 = virtualinvoke $stack10.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(1000000L, -1L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 MB", $stack17);

        $stack19 = virtualinvoke $stack10.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(1000000000L, -1L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0 GB", $stack19);

        return;
    }

    public void testProgressedBothZero()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat $stack4;
        java.util.Locale $stack5;
        java.lang.String $stack7;
        FileSizeFormatTest this;

        this := @this: FileSizeFormatTest;

        $stack4 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        $stack5 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $stack4.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: void <init>(java.util.Locale)>($stack5);

        $stack7 = virtualinvoke $stack4.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(0L, 0L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0 B", $stack7);

        return;
    }

    public void testProgressedSizeWithSize()
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat $stack30;
        java.util.Locale $stack31;
        long _800_bytes, _8000_bytes, $stack48, _1000_kilobytes, _5000_kilobytes, _15_megabytes, _1000_megabytes, _5000_megabytes, _15_gigabytes;
        java.lang.String $stack33, $stack35, $stack37, $stack39, $stack41, $stack43, $stack45, $stack47, $stack50, $stack52, $stack54, $stack56, $stack58, $stack60, $stack62, $stack64, $stack66, $stack68, $stack70, $stack72, $stack74;
        FileSizeFormatTest this;

        this := @this: FileSizeFormatTest;

        $stack30 = new org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        $stack31 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: void <init>(java.util.Locale)>($stack31);

        _800_bytes = 2L * 400L;

        $stack33 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(0L, _800_bytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0/800 B", $stack33);

        $stack35 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(400L, _800_bytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("400/800 B", $stack35);

        $stack37 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_800_bytes, _800_bytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("800 B", $stack37);

        _8000_bytes = 2L * 4000L;

        $stack39 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(0L, _8000_bytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0/8.0 kB", $stack39);

        $stack41 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(400L, _8000_bytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0.4/8.0 kB", $stack41);

        $stack43 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(4000L, _8000_bytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("4.0/8.0 kB", $stack43);

        $stack45 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_8000_bytes, _8000_bytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("8.0 kB", $stack45);

        $stack47 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_8000_bytes, 50000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("8.0/50 kB", $stack47);

        $stack48 = 2L * _8000_bytes;

        $stack50 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>($stack48, 50000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("16/50 kB", $stack50);

        $stack52 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(50000L, 50000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("50 kB", $stack52);

        _1000_kilobytes = 2L * 500000L;

        _5000_kilobytes = 5L * _1000_kilobytes;

        _15_megabytes = 3L * _5000_kilobytes;

        $stack54 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(0L, _5000_kilobytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0/5.0 MB", $stack54);

        $stack56 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(500000L, _5000_kilobytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0.5/5.0 MB", $stack56);

        $stack58 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_1000_kilobytes, _5000_kilobytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0/5.0 MB", $stack58);

        $stack60 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_5000_kilobytes, _5000_kilobytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5.0 MB", $stack60);

        $stack62 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_5000_kilobytes, _15_megabytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5.0/15 MB", $stack62);

        $stack64 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_15_megabytes, _15_megabytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("15 MB", $stack64);

        _1000_megabytes = 2L * 500000000L;

        _5000_megabytes = 5L * _1000_megabytes;

        _15_gigabytes = 3L * _5000_megabytes;

        $stack66 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(0L, 500000000L);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("0/500 MB", $stack66);

        $stack68 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_1000_megabytes, _5000_megabytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.0/5.0 GB", $stack68);

        $stack70 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_5000_megabytes, _5000_megabytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5.0 GB", $stack70);

        $stack72 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_5000_megabytes, _15_gigabytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5.0/15 GB", $stack72);

        $stack74 = virtualinvoke $stack30.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(_15_gigabytes, _15_gigabytes);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("15 GB", $stack74);

        return;
    }

    private static void lambda$testNegativeProgressedSizeBiggerThanSize$2(org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat) throws java.lang.Throwable
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat format;

        format := @parameter0: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        virtualinvoke format.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(100L, 10L);

        return;
    }

    private static void lambda$testNegativeProgressedSize$1(org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat, long) throws java.lang.Throwable
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat format;
        long negativeProgressedSize;

        format := @parameter0: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        negativeProgressedSize := @parameter1: long;

        virtualinvoke format.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String formatProgress(long,long)>(negativeProgressedSize, 10L);

        return;
    }

    private static void lambda$testNegativeSize$0(org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat, long) throws java.lang.Throwable
    {
        org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat format;
        long negativeSize;

        format := @parameter0: org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat;

        negativeSize := @parameter1: long;

        virtualinvoke format.<org.apache.maven.cli.transfer.AbstractMavenTransferListener$FileSizeFormat: java.lang.String format(long)>(negativeSize);

        return;
    }
}
