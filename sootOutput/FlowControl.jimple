public class FlowControl extends org.ooc.frontend.model.ControlStatement
{
    private org.ooc.frontend.model.FlowControl$Mode mode;

    public void <init>(org.ooc.frontend.model.FlowControl$Mode, org.ooc.frontend.model.tokens.Token)
    {
        FlowControl this;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.FlowControl$Mode mode;
        org.ooc.frontend.model.FlowControl $r0;

        this := @this: FlowControl;

        mode := @parameter0: org.ooc.frontend.model.FlowControl$Mode;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.ControlStatement: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.FlowControl) this;

        $r0.<org.ooc.frontend.model.FlowControl: org.ooc.frontend.model.FlowControl$Mode mode> = mode;

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        FlowControl this;
        org.ooc.frontend.model.Node oldie, kiddo;

        this := @this: FlowControl;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        return 0;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        FlowControl this;
        org.ooc.frontend.model.FlowControl $r0;

        this := @this: FlowControl;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.FlowControl) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.FlowControl)>($r0);

        return;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        FlowControl this;
        org.ooc.frontend.Visitor visitor;

        this := @this: FlowControl;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        return;
    }

    public boolean hasChildren()
    {
        FlowControl this;

        this := @this: FlowControl;

        return 0;
    }

    public org.ooc.frontend.model.FlowControl$Mode getMode()
    {
        FlowControl this;
        org.ooc.frontend.model.FlowControl$Mode $stack1;
        org.ooc.frontend.model.FlowControl $r0;

        this := @this: FlowControl;

        $r0 = (org.ooc.frontend.model.FlowControl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FlowControl: org.ooc.frontend.model.FlowControl$Mode mode>;

        return $stack1;
    }

    public java.lang.String getKeyword()
    {
        FlowControl this;
        org.ooc.frontend.model.FlowControl$Mode $stack1;
        int[] $stack2;
        int $stack3, $stack4;
        org.ooc.frontend.model.FlowControl $r0;

        this := @this: FlowControl;

        $stack2 = <org.ooc.frontend.model.FlowControl$1: int[] $SwitchMap$org$ooc$frontend$model$FlowControl$Mode>;

        $r0 = (org.ooc.frontend.model.FlowControl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FlowControl: org.ooc.frontend.model.FlowControl$Mode mode>;

        $stack3 = virtualinvoke $stack1.<org.ooc.frontend.model.FlowControl$Mode: int ordinal()>();

        $stack4 = $stack2[$stack3];

        lookupswitch($stack4)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label2;
        };

     label1:
        return "continue";

     label2:
        return "break";
    }
}
