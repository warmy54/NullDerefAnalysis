public class Foreach extends org.ooc.frontend.model.ControlStatement implements org.ooc.frontend.model.interfaces.MustBeResolved
{
    protected org.ooc.frontend.model.Expression variable;
    protected org.ooc.frontend.model.Expression collection;

    public void <init>(org.ooc.frontend.model.Expression, org.ooc.frontend.model.Expression, org.ooc.frontend.model.tokens.Token)
    {
        Foreach this;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Expression variable, collection;
        org.ooc.frontend.model.Foreach $r0, $r1;

        this := @this: Foreach;

        variable := @parameter0: org.ooc.frontend.model.Expression;

        collection := @parameter1: org.ooc.frontend.model.Expression;

        startToken := @parameter2: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.ControlStatement: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable> = variable;

        $r1 = (org.ooc.frontend.model.Foreach) this;

        $r1.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection> = collection;

        return;
    }

    public org.ooc.frontend.model.Expression getVariable()
    {
        Foreach this;
        org.ooc.frontend.model.Expression $stack1;
        org.ooc.frontend.model.Foreach $r0;

        this := @this: Foreach;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $stack1 = $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        return $stack1;
    }

    public void setVariable(org.ooc.frontend.model.VariableDecl)
    {
        Foreach this;
        org.ooc.frontend.model.VariableDecl variable;
        org.ooc.frontend.model.Foreach $r0;
        org.ooc.frontend.model.Expression $r1;

        this := @this: Foreach;

        variable := @parameter0: org.ooc.frontend.model.VariableDecl;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $r1 = (org.ooc.frontend.model.Expression) variable;

        $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable> = $r1;

        return;
    }

    public org.ooc.frontend.model.Expression getCollection()
    {
        Foreach this;
        org.ooc.frontend.model.Expression $stack1;
        org.ooc.frontend.model.Foreach $r0;

        this := @this: Foreach;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $stack1 = $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        return $stack1;
    }

    public void setCollection(org.ooc.frontend.model.Expression)
    {
        Foreach this;
        org.ooc.frontend.model.Expression range;
        org.ooc.frontend.model.Foreach $r0;

        this := @this: Foreach;

        range := @parameter0: org.ooc.frontend.model.Expression;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection> = range;

        return;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        Foreach this;
        org.ooc.frontend.model.Foreach $r0;

        this := @this: Foreach;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.Foreach)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        Foreach this;

        this := @this: Foreach;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        Foreach this;
        org.ooc.frontend.model.Expression $stack2, $stack4, $stack6;
        boolean $stack3;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.NodeList $stack5;
        org.ooc.frontend.model.Foreach $r0, $r1, $r2, $r3;

        this := @this: Foreach;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $stack2 = $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        $stack3 = $stack2 instanceof org.ooc.frontend.model.VariableDecl;

        if $stack3 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.Foreach) this;

        $stack6 = $r1.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        virtualinvoke $stack6.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>(visitor);

     label1:
        $r2 = (org.ooc.frontend.model.Foreach) this;

        $stack4 = $r2.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        virtualinvoke $stack4.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>(visitor);

        $r3 = (org.ooc.frontend.model.Foreach) this;

        $stack5 = $r3.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.NodeList body>;

        virtualinvoke $stack5.<org.ooc.frontend.model.NodeList: void accept(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        org.ooc.frontend.model.Node oldie, kiddo;
        Foreach this;
        org.ooc.frontend.model.Expression $stack3, $stack4, $stack5, $stack6;
        org.ooc.frontend.model.Foreach $r0, $r1, $r2, $r3;

        this := @this: Foreach;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $stack3 = $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        if oldie != $stack3 goto label1;

        $stack6 = (org.ooc.frontend.model.Expression) kiddo;

        $r1 = (org.ooc.frontend.model.Foreach) this;

        $r1.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable> = $stack6;

        return 1;

     label1:
        $r2 = (org.ooc.frontend.model.Foreach) this;

        $stack4 = $r2.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        if oldie != $stack4 goto label2;

        $stack5 = (org.ooc.frontend.model.Expression) kiddo;

        $r3 = (org.ooc.frontend.model.Foreach) this;

        $r3.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection> = $stack5;

        return 1;

     label2:
        return 0;
    }

    public org.ooc.frontend.model.VariableDecl getVariable(java.lang.String)
    {
        Foreach this;
        org.ooc.frontend.model.Expression $stack3, $stack5, $stack8, $stack15;
        boolean $stack4, $stack6, $stack10, $stack17;
        java.lang.String name, $stack9, $stack16;
        org.ooc.frontend.model.Declaration $stack13;
        org.ooc.frontend.model.VariableDecl $stack14, varDecl, $stack7;
        org.ooc.frontend.model.VariableAccess varDecl#2;
        org.ooc.frontend.model.Foreach $r0, $r1, $r2, $r3;

        this := @this: Foreach;

        name := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $stack3 = $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        $stack4 = $stack3 instanceof org.ooc.frontend.model.VariableDecl;

        if $stack4 == 0 goto label2;

        $r1 = (org.ooc.frontend.model.Foreach) this;

        $stack15 = $r1.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        varDecl = (org.ooc.frontend.model.VariableDecl) $stack15;

        $stack16 = virtualinvoke varDecl.<org.ooc.frontend.model.VariableDecl: java.lang.String getName()>();

        $stack17 = virtualinvoke $stack16.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack17 == 0 goto label1;

        return varDecl;

     label1:
        goto label3;

     label2:
        $r2 = (org.ooc.frontend.model.Foreach) this;

        $stack5 = $r2.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        $stack6 = $stack5 instanceof org.ooc.frontend.model.VariableAccess;

        if $stack6 == 0 goto label3;

        $r3 = (org.ooc.frontend.model.Foreach) this;

        $stack8 = $r3.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        varDecl#2 = (org.ooc.frontend.model.VariableAccess) $stack8;

        $stack9 = virtualinvoke varDecl#2.<org.ooc.frontend.model.VariableAccess: java.lang.String getName()>();

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack10 == 0 goto label3;

        $stack13 = virtualinvoke varDecl#2.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.Declaration getRef()>();

        $stack14 = (org.ooc.frontend.model.VariableDecl) $stack13;

        return $stack14;

     label3:
        $stack7 = specialinvoke this.<org.ooc.frontend.model.ControlStatement: org.ooc.frontend.model.VariableDecl getVariable(java.lang.String)>(name);

        return $stack7;
    }

    public void getVariables(org.ooc.frontend.model.NodeList)
    {
        Foreach this;
        org.ooc.frontend.model.Expression $stack3, $stack5, $stack7, $stack14;
        boolean $stack4, $stack6;
        org.ooc.frontend.model.NodeList variables;
        org.ooc.frontend.model.Declaration $stack8, $stack11;
        org.ooc.frontend.model.VariableDecl $stack12, varDecl;
        org.ooc.frontend.model.VariableAccess varDecl#2;
        org.ooc.frontend.model.Foreach $r0, $r1, $r3, $r4;
        org.ooc.frontend.model.Node $r2, $r5;

        this := @this: Foreach;

        variables := @parameter0: org.ooc.frontend.model.NodeList;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $stack3 = $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        $stack4 = $stack3 instanceof org.ooc.frontend.model.VariableDecl;

        if $stack4 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.Foreach) this;

        $stack14 = $r1.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        varDecl = (org.ooc.frontend.model.VariableDecl) $stack14;

        $r2 = (org.ooc.frontend.model.Node) varDecl;

        virtualinvoke variables.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r2);

        goto label2;

     label1:
        $r3 = (org.ooc.frontend.model.Foreach) this;

        $stack5 = $r3.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        $stack6 = $stack5 instanceof org.ooc.frontend.model.VariableAccess;

        if $stack6 == 0 goto label2;

        $r4 = (org.ooc.frontend.model.Foreach) this;

        $stack7 = $r4.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        varDecl#2 = (org.ooc.frontend.model.VariableAccess) $stack7;

        $stack8 = virtualinvoke varDecl#2.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.Declaration getRef()>();

        if $stack8 == null goto label2;

        $stack11 = virtualinvoke varDecl#2.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.Declaration getRef()>();

        $stack12 = (org.ooc.frontend.model.VariableDecl) $stack11;

        $r5 = (org.ooc.frontend.model.Node) $stack12;

        virtualinvoke variables.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r5);

     label2:
        specialinvoke this.<org.ooc.frontend.model.ControlStatement: void getVariables(org.ooc.frontend.model.NodeList)>(variables);

        return;
    }

    public boolean isResolved()
    {
        Foreach this;

        this := @this: Foreach;

        return 0;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        Foreach this;
        org.ooc.frontend.model.Expression $stack20, $stack24, $stack25, $stack27, $stack28, $stack30, $stack35, $stack39, $stack42, $stack46, $stack70, $stack89, $stack123, $stack127, $stack130, $stack134, $stack136, $stack138, $stack76, $r18, $r27, $r31, $r33, $r35, $r42;
        org.ooc.frontend.model.Type $stack21, $stack26, $stack29, $stack31, $stack36, $stack40, iterType, $stack104, innerType, $stack128, $stack129, $stack139, $u1;
        boolean fatal, $stack38, $stack43, $stack71;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack22, $stack47, $stack115, $stack120, $stack121, $stack137, resp, $stack88;
        org.ooc.frontend.model.NodeList stack, list, $stack105, $stack112, $stack125, $stack72, $stack78, $stack79, $stack82, $stack85;
        java.lang.String $stack33, $stack37, $stack58, $stack110, $stack117;
        int $stack41, lineIndex, $stack53, gardeFou;
        org.ooc.frontend.model.tokens.Token $stack45, $stack56, $stack59, $stack61, $stack63, $stack66, $stack68, $stack111, $stack124, $stack131, $stack135, $stack75;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.model.Declaration $stack50, $stack90, $stack140, $r29;
        org.ooc.frontend.model.Node $stack52, $stack54, $stack106, $r8, $r14, $r22, $r39, $r44, $r47, $r48, $r50, $r52;
        org.ooc.frontend.model.Line line, $u13, $u15, $u16, $u17, $u18;
        org.ooc.frontend.model.VariableAccess varAcc, $u8;
        org.ooc.frontend.model.Access $stack107;
        java.lang.Object $stack32;
        org.ooc.middle.OocCompilationError $u0, $u5;
        org.ooc.frontend.model.TypeAccess $u2;
        org.ooc.frontend.model.Cast $u3;
        org.ooc.frontend.model.MemberCall $u4, $u9, $u11;
        org.ooc.frontend.model.Block $u6;
        org.ooc.frontend.model.VariableDecl $u7, $u12;
        org.ooc.frontend.model.While $u10;
        org.ooc.frontend.model.Assignment $u14;
        org.ooc.frontend.model.Foreach $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r24, $r25, $r26, $r28, $r30, $r32, $r34, $r36, $r37, $r40, $r41, $r45;
        java.lang.Throwable $r9, $r23;
        org.ooc.frontend.model.Statement $r38, $r43, $r46, $r49, $r51;

        this := @this: Foreach;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $r0 = (org.ooc.frontend.model.Foreach) this;

        $stack20 = $r0.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack21 = virtualinvoke $stack20.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack21 == null goto label01;

        $r1 = (org.ooc.frontend.model.Foreach) this;

        $stack35 = $r1.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack36 = virtualinvoke $stack35.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack37 = virtualinvoke $stack36.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>("Range");

        if $stack38 != 0 goto label05;

        $r2 = (org.ooc.frontend.model.Foreach) this;

        $stack138 = $r2.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack139 = virtualinvoke $stack138.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack140 = virtualinvoke $stack139.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        if $stack140 != null goto label05;

     label01:
        if fatal == 0 goto label04;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r3 = (org.ooc.frontend.model.Foreach) this;

        $stack25 = $r3.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $r4 = (org.ooc.frontend.model.Foreach) this;

        $stack24 = $r4.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack26 = virtualinvoke $stack24.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $r5 = (org.ooc.frontend.model.Foreach) this;

        $stack28 = $r5.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $r6 = (org.ooc.frontend.model.Foreach) this;

        $stack27 = $r6.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack29 = virtualinvoke $stack27.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack29 != null goto label02;

        $stack32 = "null";

        goto label03;

     label02:
        $r7 = (org.ooc.frontend.model.Foreach) this;

        $stack30 = $r7.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack31 = virtualinvoke $stack30.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack32 = virtualinvoke $stack31.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

     label03:
        $stack33 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type,org.ooc.frontend.model.Expression,java.lang.Object)>($stack26, $stack28, $stack32) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t resolve type \u0001 of foreach\'s collection \u0001 (ref = \u0001");

        $r8 = (org.ooc.frontend.model.Node) $stack25;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r8, stack, $stack33);

        $r9 = (java.lang.Throwable) $u0;

        throw $r9;

     label04:
        $stack22 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack22;

     label05:
        $r10 = (org.ooc.frontend.model.Foreach) this;

        $stack39 = $r10.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack40 = virtualinvoke $stack39.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack41 = virtualinvoke $stack40.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        if $stack41 <= 0 goto label06;

        $u1 = new org.ooc.frontend.model.Type;

        $r11 = (org.ooc.frontend.model.Foreach) this;

        $stack123 = $r11.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack124 = $stack123.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u1.<org.ooc.frontend.model.Type: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>("ArrayList", $stack124);

        $stack125 = virtualinvoke $u1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $u2 = new org.ooc.frontend.model.TypeAccess;

        $r12 = (org.ooc.frontend.model.Foreach) this;

        $stack127 = $r12.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack128 = virtualinvoke $stack127.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack129 = virtualinvoke $stack128.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type dereference()>();

        $r13 = (org.ooc.frontend.model.Foreach) this;

        $stack130 = $r13.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack131 = $stack130.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u2.<org.ooc.frontend.model.TypeAccess: void <init>(org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>($stack129, $stack131);

        $r14 = (org.ooc.frontend.model.Node) $u2;

        virtualinvoke $stack125.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r14);

        $u3 = new org.ooc.frontend.model.Cast;

        $r15 = (org.ooc.frontend.model.Foreach) this;

        $stack136 = $r15.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $r16 = (org.ooc.frontend.model.Foreach) this;

        $stack134 = $r16.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack135 = $stack134.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u3.<org.ooc.frontend.model.Cast: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>($stack136, $u1, $stack135);

        $r17 = (org.ooc.frontend.model.Foreach) this;

        $r18 = (org.ooc.frontend.model.Expression) $u3;

        $r17.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection> = $r18;

        $stack137 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack137;

     label06:
        $r19 = (org.ooc.frontend.model.Foreach) this;

        $stack42 = $r19.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $stack43 = $stack42 instanceof org.ooc.frontend.model.RangeLiteral;

        if $stack43 == 0 goto label07;

        $stack121 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack121;

     label07:
        $u4 = new org.ooc.frontend.model.MemberCall;

        $r20 = (org.ooc.frontend.model.Foreach) this;

        $stack46 = $r20.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression collection>;

        $r21 = (org.ooc.frontend.model.Foreach) this;

        $stack45 = $r21.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u4.<org.ooc.frontend.model.MemberCall: void <init>(org.ooc.frontend.model.Expression,java.lang.String,java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack46, "iterator", "", $stack45);

        resp = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        gardeFou = 10;

     label08:
        $stack47 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        if resp != $stack47 goto label09;

        resp = virtualinvoke $u4.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, 1);

        gardeFou = gardeFou + -1;

        if gardeFou > 0 goto label08;

        $stack120 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack120;

     label09:
        iterType = virtualinvoke $u4.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Type getType()>();

        virtualinvoke iterType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, 0);

        $stack50 = virtualinvoke iterType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        if $stack50 != null goto label11;

        if fatal == 0 goto label10;

        $u5 = new org.ooc.middle.OocCompilationError;

        $stack117 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type)>(iterType) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("couldn\'t resolve iterType \u0001");

        $r22 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u5.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r22, stack, $stack117);

        $r23 = (java.lang.Throwable) $u5;

        throw $r23;

     label10:
        $stack115 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack115;

     label11:
        lineIndex = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/Line;");

        $stack52 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(lineIndex);

        line = (org.ooc.frontend.model.Line) $stack52;

        $stack53 = lineIndex - 1;

        $stack54 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>($stack53);

        list = (org.ooc.frontend.model.NodeList) $stack54;

        $u6 = new org.ooc.frontend.model.Block;

        $r24 = (org.ooc.frontend.model.Foreach) this;

        $stack56 = $r24.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u6.<org.ooc.frontend.model.Block: void <init>(org.ooc.frontend.model.tokens.Token)>($stack56);

        $u7 = new org.ooc.frontend.model.VariableDecl;

        $r25 = (org.ooc.frontend.model.Foreach) this;

        $stack58 = virtualinvoke $r25.<org.ooc.frontend.model.Foreach: java.lang.String generateTempName(java.lang.String,org.ooc.frontend.model.NodeList)>("iter", stack);

        $r26 = (org.ooc.frontend.model.Foreach) this;

        $stack59 = $r26.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.tokens.Token startToken>;

        $r27 = (org.ooc.frontend.model.Expression) $u4;

        specialinvoke $u7.<org.ooc.frontend.model.VariableDecl: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.Module)>(iterType, $stack58, $r27, $stack59, null);

        $u8 = new org.ooc.frontend.model.VariableAccess;

        $r28 = (org.ooc.frontend.model.Foreach) this;

        $stack61 = $r28.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u8.<org.ooc.frontend.model.VariableAccess: void <init>(org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.tokens.Token)>($u7, $stack61);

        $r29 = (org.ooc.frontend.model.Declaration) $u7;

        virtualinvoke $u8.<org.ooc.frontend.model.VariableAccess: void setRef(org.ooc.frontend.model.Declaration)>($r29);

        $u9 = new org.ooc.frontend.model.MemberCall;

        $r30 = (org.ooc.frontend.model.Foreach) this;

        $stack63 = $r30.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.tokens.Token startToken>;

        $r31 = (org.ooc.frontend.model.Expression) $u8;

        specialinvoke $u9.<org.ooc.frontend.model.MemberCall: void <init>(org.ooc.frontend.model.Expression,java.lang.String,java.lang.String,org.ooc.frontend.model.tokens.Token)>($r31, "hasNext", "", $stack63);

        virtualinvoke $u9.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, 1);

        $u10 = new org.ooc.frontend.model.While;

        $r32 = (org.ooc.frontend.model.Foreach) this;

        $stack66 = $r32.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.tokens.Token startToken>;

        $r33 = (org.ooc.frontend.model.Expression) $u9;

        specialinvoke $u10.<org.ooc.frontend.model.While: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($r33, $stack66);

        $u11 = new org.ooc.frontend.model.MemberCall;

        $r34 = (org.ooc.frontend.model.Foreach) this;

        $stack68 = $r34.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.tokens.Token startToken>;

        $r35 = (org.ooc.frontend.model.Expression) $u8;

        specialinvoke $u11.<org.ooc.frontend.model.MemberCall: void <init>(org.ooc.frontend.model.Expression,java.lang.String,java.lang.String,org.ooc.frontend.model.tokens.Token)>($r35, "next", "", $stack68);

        virtualinvoke $u11.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, 1);

        $r36 = (org.ooc.frontend.model.Foreach) this;

        $stack70 = $r36.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        $stack71 = $stack70 instanceof org.ooc.frontend.model.VariableAccess;

        if $stack71 == 0 goto label12;

        $r37 = (org.ooc.frontend.model.Foreach) this;

        $stack89 = $r37.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        varAcc = (org.ooc.frontend.model.VariableAccess) $stack89;

        $stack90 = virtualinvoke varAcc.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.Declaration getRef()>();

        if $stack90 != null goto label12;

        $stack104 = virtualinvoke $u4.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Type getType()>();

        $stack105 = virtualinvoke $stack104.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack106 = virtualinvoke $stack105.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node getFirst()>();

        $stack107 = (org.ooc.frontend.model.Access) $stack106;

        innerType = virtualinvoke $stack107.<org.ooc.frontend.model.Access: org.ooc.frontend.model.Type getType()>();

        $u12 = new org.ooc.frontend.model.VariableDecl;

        $stack110 = virtualinvoke varAcc.<org.ooc.frontend.model.VariableAccess: java.lang.String getName()>();

        $stack111 = varAcc.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u12.<org.ooc.frontend.model.VariableDecl: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.Module)>(innerType, $stack110, $stack111, null);

        $stack112 = virtualinvoke $u6.<org.ooc.frontend.model.Block: org.ooc.frontend.model.NodeList getBody()>();

        $u13 = new org.ooc.frontend.model.Line;

        $r38 = (org.ooc.frontend.model.Statement) $u12;

        specialinvoke $u13.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r38);

        $r39 = (org.ooc.frontend.model.Node) $u13;

        virtualinvoke $stack112.<org.ooc.frontend.model.NodeList: void add(int,org.ooc.frontend.model.Node)>(0, $r39);

     label12:
        $stack72 = virtualinvoke $u10.<org.ooc.frontend.model.While: org.ooc.frontend.model.NodeList getBody()>();

        $u15 = new org.ooc.frontend.model.Line;

        $u14 = new org.ooc.frontend.model.Assignment;

        $r40 = (org.ooc.frontend.model.Foreach) this;

        $stack76 = $r40.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.Expression variable>;

        $r41 = (org.ooc.frontend.model.Foreach) this;

        $stack75 = $r41.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.tokens.Token startToken>;

        $r42 = (org.ooc.frontend.model.Expression) $u11;

        specialinvoke $u14.<org.ooc.frontend.model.Assignment: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($stack76, $r42, $stack75);

        $r43 = (org.ooc.frontend.model.Statement) $u14;

        specialinvoke $u15.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r43);

        $r44 = (org.ooc.frontend.model.Node) $u15;

        virtualinvoke $stack72.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r44);

        $stack78 = virtualinvoke $u10.<org.ooc.frontend.model.While: org.ooc.frontend.model.NodeList getBody()>();

        $r45 = (org.ooc.frontend.model.Foreach) this;

        $stack79 = virtualinvoke $r45.<org.ooc.frontend.model.Foreach: org.ooc.frontend.model.NodeList getBody()>();

        virtualinvoke $stack78.<org.ooc.frontend.model.NodeList: void addAll(org.ooc.frontend.model.NodeList)>($stack79);

        $u16 = new org.ooc.frontend.model.Line;

        $r46 = (org.ooc.frontend.model.Statement) $u6;

        specialinvoke $u16.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r46);

        $r47 = (org.ooc.frontend.model.Node) line;

        $r48 = (org.ooc.frontend.model.Node) $u16;

        virtualinvoke list.<org.ooc.frontend.model.NodeList: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r47, $r48);

        $stack82 = virtualinvoke $u6.<org.ooc.frontend.model.Block: org.ooc.frontend.model.NodeList getBody()>();

        $u17 = new org.ooc.frontend.model.Line;

        $r49 = (org.ooc.frontend.model.Statement) $u7;

        specialinvoke $u17.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r49);

        $r50 = (org.ooc.frontend.model.Node) $u17;

        virtualinvoke $stack82.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r50);

        $stack85 = virtualinvoke $u6.<org.ooc.frontend.model.Block: org.ooc.frontend.model.NodeList getBody()>();

        $u18 = new org.ooc.frontend.model.Line;

        $r51 = (org.ooc.frontend.model.Statement) $u10;

        specialinvoke $u18.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r51);

        $r52 = (org.ooc.frontend.model.Node) $u18;

        virtualinvoke $stack85.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r52);

        $stack88 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack88;
    }
}
