public abstract class FrameGrabber extends java.lang.Object implements java.io.Closeable
{
    public static final java.util.List list;
    public static final long SENSOR_PATTERN_RGGB;
    public static final long SENSOR_PATTERN_GBRG;
    public static final long SENSOR_PATTERN_GRBG;
    public static final long SENSOR_PATTERN_BGGR;
    protected int videoStream;
    protected int audioStream;
    protected java.lang.String format;
    protected java.lang.String videoCodecName;
    protected java.lang.String audioCodecName;
    protected int imageWidth;
    protected int imageHeight;
    protected int audioChannels;
    protected org.bytedeco.javacv.FrameGrabber$ImageMode imageMode;
    protected long sensorPattern;
    protected int pixelFormat;
    protected int videoCodec;
    protected int videoBitrate;
    protected int imageScalingFlags;
    protected double aspectRatio;
    protected double frameRate;
    protected org.bytedeco.javacv.FrameGrabber$SampleMode sampleMode;
    protected int sampleFormat;
    protected int audioCodec;
    protected int audioBitrate;
    protected int sampleRate;
    protected boolean triggerMode;
    protected int bpp;
    protected int timeout;
    protected int numBuffers;
    protected double gamma;
    protected boolean deinterlace;
    protected java.util.Map options;
    protected java.util.Map videoOptions;
    protected java.util.Map audioOptions;
    protected java.util.Map metadata;
    protected java.util.Map videoMetadata;
    protected java.util.Map audioMetadata;
    protected int frameNumber;
    protected long timestamp;
    protected int maxDelay;
    protected long startTime;
    private java.util.concurrent.ExecutorService executor;
    private java.util.concurrent.Future future;
    private org.bytedeco.javacv.Frame delayedFrame;
    private long delayedTime;

    public void <init>()
    {
        FrameGrabber this;
        org.bytedeco.javacv.FrameGrabber$ImageMode $stack1;
        org.bytedeco.javacv.FrameGrabber$SampleMode $stack2;
        java.util.concurrent.ExecutorService $stack9;
        java.util.HashMap $u0, $u1, $u2, $u3, $u4, $u5;
        org.bytedeco.javacv.FrameGrabber $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;

        this := @this: FrameGrabber;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int videoStream> = -1;

        $r1 = (org.bytedeco.javacv.FrameGrabber) this;

        $r1.<org.bytedeco.javacv.FrameGrabber: int audioStream> = -1;

        $r2 = (org.bytedeco.javacv.FrameGrabber) this;

        $r2.<org.bytedeco.javacv.FrameGrabber: java.lang.String format> = null;

        $r3 = (org.bytedeco.javacv.FrameGrabber) this;

        $r3.<org.bytedeco.javacv.FrameGrabber: java.lang.String videoCodecName> = null;

        $r4 = (org.bytedeco.javacv.FrameGrabber) this;

        $r4.<org.bytedeco.javacv.FrameGrabber: java.lang.String audioCodecName> = null;

        $r5 = (org.bytedeco.javacv.FrameGrabber) this;

        $r5.<org.bytedeco.javacv.FrameGrabber: int imageWidth> = 0;

        $r6 = (org.bytedeco.javacv.FrameGrabber) this;

        $r6.<org.bytedeco.javacv.FrameGrabber: int imageHeight> = 0;

        $r7 = (org.bytedeco.javacv.FrameGrabber) this;

        $r7.<org.bytedeco.javacv.FrameGrabber: int audioChannels> = 0;

        $stack1 = <org.bytedeco.javacv.FrameGrabber$ImageMode: org.bytedeco.javacv.FrameGrabber$ImageMode COLOR>;

        $r8 = (org.bytedeco.javacv.FrameGrabber) this;

        $r8.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber$ImageMode imageMode> = $stack1;

        $r9 = (org.bytedeco.javacv.FrameGrabber) this;

        $r9.<org.bytedeco.javacv.FrameGrabber: long sensorPattern> = -1L;

        $r10 = (org.bytedeco.javacv.FrameGrabber) this;

        $r10.<org.bytedeco.javacv.FrameGrabber: int pixelFormat> = -1;

        $r11 = (org.bytedeco.javacv.FrameGrabber) this;

        $r11.<org.bytedeco.javacv.FrameGrabber: int videoBitrate> = 0;

        $r12 = (org.bytedeco.javacv.FrameGrabber) this;

        $r12.<org.bytedeco.javacv.FrameGrabber: int imageScalingFlags> = 0;

        $r13 = (org.bytedeco.javacv.FrameGrabber) this;

        $r13.<org.bytedeco.javacv.FrameGrabber: double aspectRatio> = 0.0;

        $r14 = (org.bytedeco.javacv.FrameGrabber) this;

        $r14.<org.bytedeco.javacv.FrameGrabber: double frameRate> = 0.0;

        $stack2 = <org.bytedeco.javacv.FrameGrabber$SampleMode: org.bytedeco.javacv.FrameGrabber$SampleMode SHORT>;

        $r15 = (org.bytedeco.javacv.FrameGrabber) this;

        $r15.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber$SampleMode sampleMode> = $stack2;

        $r16 = (org.bytedeco.javacv.FrameGrabber) this;

        $r16.<org.bytedeco.javacv.FrameGrabber: int sampleFormat> = -1;

        $r17 = (org.bytedeco.javacv.FrameGrabber) this;

        $r17.<org.bytedeco.javacv.FrameGrabber: int audioBitrate> = 0;

        $r18 = (org.bytedeco.javacv.FrameGrabber) this;

        $r18.<org.bytedeco.javacv.FrameGrabber: int sampleRate> = 0;

        $r19 = (org.bytedeco.javacv.FrameGrabber) this;

        $r19.<org.bytedeco.javacv.FrameGrabber: boolean triggerMode> = 0;

        $r20 = (org.bytedeco.javacv.FrameGrabber) this;

        $r20.<org.bytedeco.javacv.FrameGrabber: int bpp> = 0;

        $r21 = (org.bytedeco.javacv.FrameGrabber) this;

        $r21.<org.bytedeco.javacv.FrameGrabber: int timeout> = 10000;

        $r22 = (org.bytedeco.javacv.FrameGrabber) this;

        $r22.<org.bytedeco.javacv.FrameGrabber: int numBuffers> = 4;

        $r23 = (org.bytedeco.javacv.FrameGrabber) this;

        $r23.<org.bytedeco.javacv.FrameGrabber: double gamma> = 0.0;

        $r24 = (org.bytedeco.javacv.FrameGrabber) this;

        $r24.<org.bytedeco.javacv.FrameGrabber: boolean deinterlace> = 0;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r25 = (org.bytedeco.javacv.FrameGrabber) this;

        $r25.<org.bytedeco.javacv.FrameGrabber: java.util.Map options> = $u0;

        $u1 = new java.util.HashMap;

        specialinvoke $u1.<java.util.HashMap: void <init>()>();

        $r26 = (org.bytedeco.javacv.FrameGrabber) this;

        $r26.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoOptions> = $u1;

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>()>();

        $r27 = (org.bytedeco.javacv.FrameGrabber) this;

        $r27.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioOptions> = $u2;

        $u3 = new java.util.HashMap;

        specialinvoke $u3.<java.util.HashMap: void <init>()>();

        $r28 = (org.bytedeco.javacv.FrameGrabber) this;

        $r28.<org.bytedeco.javacv.FrameGrabber: java.util.Map metadata> = $u3;

        $u4 = new java.util.HashMap;

        specialinvoke $u4.<java.util.HashMap: void <init>()>();

        $r29 = (org.bytedeco.javacv.FrameGrabber) this;

        $r29.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoMetadata> = $u4;

        $u5 = new java.util.HashMap;

        specialinvoke $u5.<java.util.HashMap: void <init>()>();

        $r30 = (org.bytedeco.javacv.FrameGrabber) this;

        $r30.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioMetadata> = $u5;

        $r31 = (org.bytedeco.javacv.FrameGrabber) this;

        $r31.<org.bytedeco.javacv.FrameGrabber: int frameNumber> = 0;

        $r32 = (org.bytedeco.javacv.FrameGrabber) this;

        $r32.<org.bytedeco.javacv.FrameGrabber: long timestamp> = 0L;

        $r33 = (org.bytedeco.javacv.FrameGrabber) this;

        $r33.<org.bytedeco.javacv.FrameGrabber: int maxDelay> = -1;

        $r34 = (org.bytedeco.javacv.FrameGrabber) this;

        $r34.<org.bytedeco.javacv.FrameGrabber: long startTime> = 0L;

        $stack9 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newSingleThreadExecutor()>();

        $r35 = (org.bytedeco.javacv.FrameGrabber) this;

        $r35.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.ExecutorService executor> = $stack9;

        $r36 = (org.bytedeco.javacv.FrameGrabber) this;

        $r36.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.Future future> = null;

        $r37 = (org.bytedeco.javacv.FrameGrabber) this;

        $r37.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.Frame delayedFrame> = null;

        $r38 = (org.bytedeco.javacv.FrameGrabber) this;

        $r38.<org.bytedeco.javacv.FrameGrabber: long delayedTime> = 0L;

        return;
    }

    public static void init()
    {
        java.util.List $stack3;
        java.util.Iterator l0;
        java.lang.Object $stack6;
        java.lang.String name;
        java.lang.Class[] $stack8;
        java.lang.reflect.Method $stack9;
        java.lang.Object[] $stack10;
        java.lang.Throwable $stack13;
        boolean $stack5;
        java.lang.Class c;

        $stack3 = <org.bytedeco.javacv.FrameGrabber: java.util.List list>;

        l0 = interfaceinvoke $stack3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l0.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label6;

        $stack6 = interfaceinvoke l0.<java.util.Iterator: java.lang.Object next()>();

        name = (java.lang.String) $stack6;

     label2:
        c = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class get(java.lang.String)>(name);

        $stack8 = newarray (java.lang.Class)[0];

        $stack9 = virtualinvoke c.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("tryLoad", $stack8);

        $stack10 = newarray (java.lang.Object)[0];

        virtualinvoke $stack9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $stack10);

     label3:
        goto label5;

     label4:
        $stack13 := @caughtexception;

        goto label1;

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static java.lang.Class getDefault()
    {
        java.util.List $stack5;
        java.util.Iterator l0;
        java.lang.Object $stack8, $stack17;
        java.lang.String name;
        java.lang.Class[] $stack10, $stack14;
        java.lang.reflect.Method $stack11, $stack15;
        java.lang.Object[] $stack12, $stack16;
        int $stack18;
        java.lang.Throwable $stack20, $stack21, $stack22;
        boolean $stack23, $stack7, mayContainCameras;
        java.lang.Class c;
        java.lang.String[] s;

        $stack5 = <org.bytedeco.javacv.FrameGrabber: java.util.List list>;

        l0 = interfaceinvoke $stack5.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $stack7 = interfaceinvoke l0.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label11;

        $stack8 = interfaceinvoke l0.<java.util.Iterator: java.lang.Object next()>();

        name = (java.lang.String) $stack8;

     label02:
        c = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class get(java.lang.String)>(name);

        $stack10 = newarray (java.lang.Class)[0];

        $stack11 = virtualinvoke c.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("tryLoad", $stack10);

        $stack12 = newarray (java.lang.Object)[0];

        virtualinvoke $stack11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $stack12);

        mayContainCameras = 0;

     label03:
        $stack14 = newarray (java.lang.Class)[0];

        $stack15 = virtualinvoke c.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getDeviceDescriptions", $stack14);

        $stack16 = newarray (java.lang.Object)[0];

        $stack17 = virtualinvoke $stack15.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $stack16);

        s = (java.lang.String[]) $stack17;

        $stack18 = lengthof s;

        if $stack18 <= 0 goto label04;

        mayContainCameras = 1;

     label04:
        goto label06;

     label05:
        $stack21 := @caughtexception;

        $stack22 = virtualinvoke $stack21.<java.lang.Throwable: java.lang.Throwable getCause()>();

        $stack23 = $stack22 instanceof java.lang.UnsupportedOperationException;

        if $stack23 == 0 goto label06;

        mayContainCameras = 1;

     label06:
        if mayContainCameras == 0 goto label08;

     label07:
        return c;

     label08:
        goto label10;

     label09:
        $stack20 := @caughtexception;

        goto label01;

     label10:
        goto label01;

     label11:
        return null;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label07 with label09;
    }

    public static java.lang.Class get(java.lang.String) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        java.lang.Class $stack5, $stack12, $stack13, $stack27, $stack28;
        java.lang.Package $stack6;
        java.lang.String $stack7, className2, $stack21, className, className#2;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $stack17, $stack18, $stack19, $stack20, $stack24, $stack25, $u0, $u1, $u2;
        java.lang.ClassNotFoundException $stack14, $stack22;
        org.bytedeco.javacv.FrameGrabber$Exception $u3;
        java.lang.Throwable $r0;

        className := @parameter0: java.lang.String;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack5 = class "Lorg/bytedeco/javacv/FrameGrabber;";

        $stack6 = virtualinvoke $stack5.<java.lang.Class: java.lang.Package getPackage()>();

        $stack7 = virtualinvoke $stack6.<java.lang.Package: java.lang.String getName()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className);

        className#2 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $stack12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className#2);

        $stack13 = virtualinvoke $stack12.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/bytedeco/javacv/FrameGrabber;");

     label2:
        return $stack13;

     label3:
        $stack22 := @caughtexception;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack24 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className#2);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FrameGrabber");

        className2 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $stack27 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className2);

        $stack28 = virtualinvoke $stack27.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/bytedeco/javacv/FrameGrabber;");

     label5:
        return $stack28;

     label6:
        $stack14 := @caughtexception;

        $u3 = new org.bytedeco.javacv.FrameGrabber$Exception;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get FrameGrabber class for ");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className#2);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className2);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u3.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack21, $stack22);

        $r0 = (java.lang.Throwable) $u3;

        throw $r0;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
    }

    public static org.bytedeco.javacv.FrameGrabber create(java.lang.Class, java.lang.Class, java.lang.Object) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        java.lang.Class c, p;
        java.lang.Class[] $stack5;
        java.lang.reflect.Constructor $stack6;
        java.lang.Object[] $stack7;
        java.lang.Object o, $stack8;
        org.bytedeco.javacv.FrameGrabber $stack9;
        java.lang.reflect.InvocationTargetException $stack10;
        java.lang.NoSuchMethodException $stack21;
        java.lang.IllegalArgumentException $stack28;
        java.lang.IllegalAccessException $stack29;
        java.lang.InstantiationException $stack30;
        java.lang.Throwable cause#3, $r0;
        java.lang.StringBuilder $stack14, $stack16, $stack17, $stack18, $stack19, $u0;
        java.lang.String $stack15, $stack20;
        org.bytedeco.javacv.FrameGrabber$Exception $u1;

        c := @parameter0: java.lang.Class;

        p := @parameter1: java.lang.Class;

        o := @parameter2: java.lang.Object;

     label1:
        $stack5 = newarray (java.lang.Class)[1];

        $stack5[0] = p;

        $stack6 = virtualinvoke c.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack5);

        $stack7 = newarray (java.lang.Object)[1];

        $stack7[0] = o;

        $stack8 = virtualinvoke $stack6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack7);

        $stack9 = (org.bytedeco.javacv.FrameGrabber) $stack8;

     label2:
        return $stack9;

     label3:
        $stack30 := @caughtexception;

        cause#3 = $stack30;

        goto label8;

     label4:
        $stack29 := @caughtexception;

        cause#3 = $stack29;

        goto label8;

     label5:
        $stack28 := @caughtexception;

        cause#3 = $stack28;

        goto label8;

     label6:
        $stack21 := @caughtexception;

        cause#3 = $stack21;

        goto label8;

     label7:
        $stack10 := @caughtexception;

        cause#3 = virtualinvoke $stack10.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

     label8:
        $u1 = new org.bytedeco.javacv.FrameGrabber$Exception;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create new ");

        $stack15 = virtualinvoke c.<java.lang.Class: java.lang.String getSimpleName()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(o);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack20, cause#3);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label1 to label2 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
    }

    public static org.bytedeco.javacv.FrameGrabber createDefault(java.io.File) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        java.lang.Class $stack1;
        java.io.File deviceFile;
        org.bytedeco.javacv.FrameGrabber $stack2;

        deviceFile := @parameter0: java.io.File;

        $stack1 = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class getDefault()>();

        $stack2 = staticinvoke <org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber create(java.lang.Class,java.lang.Class,java.lang.Object)>($stack1, class "Ljava/io/File;", deviceFile);

        return $stack2;
    }

    public static org.bytedeco.javacv.FrameGrabber createDefault(java.lang.String) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        java.lang.Class $stack1;
        java.lang.String devicePath;
        org.bytedeco.javacv.FrameGrabber $stack2;

        devicePath := @parameter0: java.lang.String;

        $stack1 = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class getDefault()>();

        $stack2 = staticinvoke <org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber create(java.lang.Class,java.lang.Class,java.lang.Object)>($stack1, class "Ljava/lang/String;", devicePath);

        return $stack2;
    }

    public static org.bytedeco.javacv.FrameGrabber createDefault(int) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        java.lang.Class $stack2, $stack3, $stack7;
        int deviceNumber;
        java.lang.Integer $stack4, $stack9;
        org.bytedeco.javacv.FrameGrabber $stack5, $stack10;
        java.lang.Throwable $stack6;

        deviceNumber := @parameter0: int;

     label1:
        $stack2 = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class getDefault()>();

        $stack3 = <java.lang.Integer: java.lang.Class TYPE>;

        $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(deviceNumber);

        $stack5 = staticinvoke <org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber create(java.lang.Class,java.lang.Class,java.lang.Object)>($stack2, $stack3, $stack4);

     label2:
        return $stack5;

     label3:
        $stack6 := @caughtexception;

        $stack7 = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class getDefault()>();

        $stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(deviceNumber);

        $stack10 = staticinvoke <org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber create(java.lang.Class,java.lang.Class,java.lang.Object)>($stack7, class "Ljava/lang/Integer;", $stack9);

        return $stack10;

        catch org.bytedeco.javacv.FrameGrabber$Exception from label1 to label2 with label3;
    }

    public static org.bytedeco.javacv.FrameGrabber create(java.lang.String, java.io.File) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        java.lang.String className;
        java.lang.Class $stack2;
        java.io.File deviceFile;
        org.bytedeco.javacv.FrameGrabber $stack3;

        className := @parameter0: java.lang.String;

        deviceFile := @parameter1: java.io.File;

        $stack2 = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class get(java.lang.String)>(className);

        $stack3 = staticinvoke <org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber create(java.lang.Class,java.lang.Class,java.lang.Object)>($stack2, class "Ljava/io/File;", deviceFile);

        return $stack3;
    }

    public static org.bytedeco.javacv.FrameGrabber create(java.lang.String, java.lang.String) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        java.lang.String className, devicePath;
        java.lang.Class $stack2;
        org.bytedeco.javacv.FrameGrabber $stack3;

        className := @parameter0: java.lang.String;

        devicePath := @parameter1: java.lang.String;

        $stack2 = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class get(java.lang.String)>(className);

        $stack3 = staticinvoke <org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber create(java.lang.Class,java.lang.Class,java.lang.Object)>($stack2, class "Ljava/lang/String;", devicePath);

        return $stack3;
    }

    public static org.bytedeco.javacv.FrameGrabber create(java.lang.String, int) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        java.lang.String className;
        java.lang.Class $stack3, $stack4, $stack8;
        int deviceNumber;
        java.lang.Integer $stack5, $stack10;
        org.bytedeco.javacv.FrameGrabber $stack6, $stack11;
        java.lang.Throwable $stack7;

        className := @parameter0: java.lang.String;

        deviceNumber := @parameter1: int;

     label1:
        $stack3 = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class get(java.lang.String)>(className);

        $stack4 = <java.lang.Integer: java.lang.Class TYPE>;

        $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(deviceNumber);

        $stack6 = staticinvoke <org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber create(java.lang.Class,java.lang.Class,java.lang.Object)>($stack3, $stack4, $stack5);

     label2:
        return $stack6;

     label3:
        $stack7 := @caughtexception;

        $stack8 = staticinvoke <org.bytedeco.javacv.FrameGrabber: java.lang.Class get(java.lang.String)>(className);

        $stack10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(deviceNumber);

        $stack11 = staticinvoke <org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber create(java.lang.Class,java.lang.Class,java.lang.Object)>($stack8, class "Ljava/lang/Integer;", $stack10);

        return $stack11;

        catch org.bytedeco.javacv.FrameGrabber$Exception from label1 to label2 with label3;
    }

    public int getVideoStream()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int videoStream>;

        return $stack1;
    }

    public void setVideoStream(int)
    {
        FrameGrabber this;
        int videoStream;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        videoStream := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int videoStream> = videoStream;

        return;
    }

    public int getAudioStream()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int audioStream>;

        return $stack1;
    }

    public void setAudioStream(int)
    {
        FrameGrabber this;
        int audioStream;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        audioStream := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int audioStream> = audioStream;

        return;
    }

    public java.lang.String getFormat()
    {
        FrameGrabber this;
        java.lang.String $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.lang.String format>;

        return $stack1;
    }

    public void setFormat(java.lang.String)
    {
        FrameGrabber this;
        java.lang.String format;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        format := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: java.lang.String format> = format;

        return;
    }

    public java.lang.String getVideoCodecName()
    {
        FrameGrabber this;
        java.lang.String $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.lang.String videoCodecName>;

        return $stack1;
    }

    public void setVideoCodecName(java.lang.String)
    {
        FrameGrabber this;
        java.lang.String videoCodecName;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        videoCodecName := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: java.lang.String videoCodecName> = videoCodecName;

        return;
    }

    public java.lang.String getAudioCodecName()
    {
        FrameGrabber this;
        java.lang.String $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.lang.String audioCodecName>;

        return $stack1;
    }

    public void setAudioCodecName(java.lang.String)
    {
        FrameGrabber this;
        java.lang.String audioCodecName;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        audioCodecName := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: java.lang.String audioCodecName> = audioCodecName;

        return;
    }

    public int getImageWidth()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int imageWidth>;

        return $stack1;
    }

    public void setImageWidth(int)
    {
        FrameGrabber this;
        int imageWidth;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        imageWidth := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int imageWidth> = imageWidth;

        return;
    }

    public int getImageHeight()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int imageHeight>;

        return $stack1;
    }

    public void setImageHeight(int)
    {
        FrameGrabber this;
        int imageHeight;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        imageHeight := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int imageHeight> = imageHeight;

        return;
    }

    public int getAudioChannels()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int audioChannels>;

        return $stack1;
    }

    public void setAudioChannels(int)
    {
        FrameGrabber this;
        int audioChannels;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        audioChannels := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int audioChannels> = audioChannels;

        return;
    }

    public org.bytedeco.javacv.FrameGrabber$ImageMode getImageMode()
    {
        FrameGrabber this;
        org.bytedeco.javacv.FrameGrabber$ImageMode $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber$ImageMode imageMode>;

        return $stack1;
    }

    public void setImageMode(org.bytedeco.javacv.FrameGrabber$ImageMode)
    {
        FrameGrabber this;
        org.bytedeco.javacv.FrameGrabber$ImageMode imageMode;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        imageMode := @parameter0: org.bytedeco.javacv.FrameGrabber$ImageMode;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber$ImageMode imageMode> = imageMode;

        return;
    }

    public long getSensorPattern()
    {
        FrameGrabber this;
        long $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: long sensorPattern>;

        return $stack1;
    }

    public void setSensorPattern(long)
    {
        FrameGrabber this;
        long sensorPattern;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        sensorPattern := @parameter0: long;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: long sensorPattern> = sensorPattern;

        return;
    }

    public int getPixelFormat()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int pixelFormat>;

        return $stack1;
    }

    public void setPixelFormat(int)
    {
        FrameGrabber this;
        int pixelFormat;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        pixelFormat := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int pixelFormat> = pixelFormat;

        return;
    }

    public int getVideoCodec()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int videoCodec>;

        return $stack1;
    }

    public void setVideoCodec(int)
    {
        FrameGrabber this;
        int videoCodec;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        videoCodec := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int videoCodec> = videoCodec;

        return;
    }

    public int getVideoBitrate()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int videoBitrate>;

        return $stack1;
    }

    public void setVideoBitrate(int)
    {
        FrameGrabber this;
        int videoBitrate;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        videoBitrate := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int videoBitrate> = videoBitrate;

        return;
    }

    public int getImageScalingFlags()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int imageScalingFlags>;

        return $stack1;
    }

    public void setImageScalingFlags(int)
    {
        FrameGrabber this;
        int imageScalingFlags;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        imageScalingFlags := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int imageScalingFlags> = imageScalingFlags;

        return;
    }

    public double getAspectRatio()
    {
        FrameGrabber this;
        double $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: double aspectRatio>;

        return $stack1;
    }

    public void setAspectRatio(double)
    {
        FrameGrabber this;
        double aspectRatio;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        aspectRatio := @parameter0: double;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: double aspectRatio> = aspectRatio;

        return;
    }

    public double getFrameRate()
    {
        FrameGrabber this;
        double $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: double frameRate>;

        return $stack1;
    }

    public void setFrameRate(double)
    {
        FrameGrabber this;
        double frameRate;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        frameRate := @parameter0: double;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: double frameRate> = frameRate;

        return;
    }

    public int getAudioCodec()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int audioCodec>;

        return $stack1;
    }

    public void setAudioCodec(int)
    {
        FrameGrabber this;
        int audioCodec;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        audioCodec := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int audioCodec> = audioCodec;

        return;
    }

    public int getAudioBitrate()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int audioBitrate>;

        return $stack1;
    }

    public void setAudioBitrate(int)
    {
        FrameGrabber this;
        int audioBitrate;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        audioBitrate := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int audioBitrate> = audioBitrate;

        return;
    }

    public org.bytedeco.javacv.FrameGrabber$SampleMode getSampleMode()
    {
        FrameGrabber this;
        org.bytedeco.javacv.FrameGrabber$SampleMode $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber$SampleMode sampleMode>;

        return $stack1;
    }

    public void setSampleMode(org.bytedeco.javacv.FrameGrabber$SampleMode)
    {
        FrameGrabber this;
        org.bytedeco.javacv.FrameGrabber$SampleMode samplesMode;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        samplesMode := @parameter0: org.bytedeco.javacv.FrameGrabber$SampleMode;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.FrameGrabber$SampleMode sampleMode> = samplesMode;

        return;
    }

    public int getSampleFormat()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int sampleFormat>;

        return $stack1;
    }

    public void setSampleFormat(int)
    {
        FrameGrabber this;
        int sampleFormat;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        sampleFormat := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int sampleFormat> = sampleFormat;

        return;
    }

    public int getSampleRate()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int sampleRate>;

        return $stack1;
    }

    public void setSampleRate(int)
    {
        FrameGrabber this;
        int sampleRate;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        sampleRate := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int sampleRate> = sampleRate;

        return;
    }

    public boolean isTriggerMode()
    {
        FrameGrabber this;
        boolean $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: boolean triggerMode>;

        return $stack1;
    }

    public void setTriggerMode(boolean)
    {
        FrameGrabber this;
        boolean triggerMode;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        triggerMode := @parameter0: boolean;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: boolean triggerMode> = triggerMode;

        return;
    }

    public int getBitsPerPixel()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int bpp>;

        return $stack1;
    }

    public void setBitsPerPixel(int)
    {
        FrameGrabber this;
        int bitsPerPixel;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        bitsPerPixel := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int bpp> = bitsPerPixel;

        return;
    }

    public int getTimeout()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int timeout>;

        return $stack1;
    }

    public void setTimeout(int)
    {
        FrameGrabber this;
        int timeout;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        timeout := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int timeout> = timeout;

        return;
    }

    public int getNumBuffers()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int numBuffers>;

        return $stack1;
    }

    public void setNumBuffers(int)
    {
        FrameGrabber this;
        int numBuffers;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        numBuffers := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int numBuffers> = numBuffers;

        return;
    }

    public double getGamma()
    {
        FrameGrabber this;
        double $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: double gamma>;

        return $stack1;
    }

    public void setGamma(double)
    {
        FrameGrabber this;
        double gamma;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        gamma := @parameter0: double;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: double gamma> = gamma;

        return;
    }

    public boolean isDeinterlace()
    {
        FrameGrabber this;
        boolean $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: boolean deinterlace>;

        return $stack1;
    }

    public void setDeinterlace(boolean)
    {
        FrameGrabber this;
        boolean deinterlace;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        deinterlace := @parameter0: boolean;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: boolean deinterlace> = deinterlace;

        return;
    }

    public java.util.Map getOptions()
    {
        FrameGrabber this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map options>;

        return $stack1;
    }

    public void setOptions(java.util.Map)
    {
        FrameGrabber this;
        java.util.Map options;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        options := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map options> = options;

        return;
    }

    public java.util.Map getVideoOptions()
    {
        FrameGrabber this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoOptions>;

        return $stack1;
    }

    public void setVideoOptions(java.util.Map)
    {
        FrameGrabber this;
        java.util.Map options;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        options := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoOptions> = options;

        return;
    }

    public java.util.Map getAudioOptions()
    {
        FrameGrabber this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioOptions>;

        return $stack1;
    }

    public void setAudioOptions(java.util.Map)
    {
        FrameGrabber this;
        java.util.Map options;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        options := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioOptions> = options;

        return;
    }

    public java.util.Map getMetadata()
    {
        FrameGrabber this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map metadata>;

        return $stack1;
    }

    public void setMetadata(java.util.Map)
    {
        FrameGrabber this;
        java.util.Map metadata;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        metadata := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map metadata> = metadata;

        return;
    }

    public java.util.Map getVideoMetadata()
    {
        FrameGrabber this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoMetadata>;

        return $stack1;
    }

    public void setVideoMetadata(java.util.Map)
    {
        FrameGrabber this;
        java.util.Map metadata;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        metadata := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoMetadata> = metadata;

        return;
    }

    public java.util.Map getAudioMetadata()
    {
        FrameGrabber this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioMetadata>;

        return $stack1;
    }

    public void setAudioMetadata(java.util.Map)
    {
        FrameGrabber this;
        java.util.Map metadata;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        metadata := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioMetadata> = metadata;

        return;
    }

    public java.lang.String getOption(java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map options>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setOption(java.lang.String, java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map options>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getVideoOption(java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoOptions>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setVideoOption(java.lang.String, java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoOptions>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getAudioOption(java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioOptions>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setAudioOption(java.lang.String, java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioOptions>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getMetadata(java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map metadata>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setMetadata(java.lang.String, java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map metadata>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getVideoMetadata(java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoMetadata>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setVideoMetadata(java.lang.String, java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map videoMetadata>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getAudioMetadata(java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioMetadata>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setAudioMetadata(java.lang.String, java.lang.String)
    {
        FrameGrabber this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.Map audioMetadata>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public int getFrameNumber()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int frameNumber>;

        return $stack1;
    }

    public void setFrameNumber(int) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        FrameGrabber this;
        int frameNumber;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        frameNumber := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int frameNumber> = frameNumber;

        return;
    }

    public long getTimestamp()
    {
        FrameGrabber this;
        long $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: long timestamp>;

        return $stack1;
    }

    public void setTimestamp(long) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        FrameGrabber this;
        long timestamp;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        timestamp := @parameter0: long;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: long timestamp> = timestamp;

        return;
    }

    public int getMaxDelay()
    {
        FrameGrabber this;
        int $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: int maxDelay>;

        return $stack1;
    }

    public void setMaxDelay(int)
    {
        FrameGrabber this;
        int maxDelay;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        maxDelay := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: int maxDelay> = maxDelay;

        return;
    }

    public int getLengthInFrames()
    {
        FrameGrabber this;

        this := @this: FrameGrabber;

        return 0;
    }

    public long getLengthInTime()
    {
        FrameGrabber this;

        this := @this: FrameGrabber;

        return 0L;
    }

    public abstract void start() throws org.bytedeco.javacv.FrameGrabber$Exception;

    public abstract void stop() throws org.bytedeco.javacv.FrameGrabber$Exception;

    public abstract void trigger() throws org.bytedeco.javacv.FrameGrabber$Exception;

    public void close() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        FrameGrabber this;
        org.bytedeco.javacv.FrameGrabber $r0, $r1;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        virtualinvoke $r0.<org.bytedeco.javacv.FrameGrabber: void stop()>();

        $r1 = (org.bytedeco.javacv.FrameGrabber) this;

        virtualinvoke $r1.<org.bytedeco.javacv.FrameGrabber: void release()>();

        return;
    }

    public abstract org.bytedeco.javacv.Frame grab() throws org.bytedeco.javacv.FrameGrabber$Exception;

    public org.bytedeco.javacv.Frame grabFrame() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        FrameGrabber this;
        org.bytedeco.javacv.Frame $stack1;
        org.bytedeco.javacv.FrameGrabber $r0;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.Frame grab()>();

        return $stack1;
    }

    public abstract void release() throws org.bytedeco.javacv.FrameGrabber$Exception;

    public void restart() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        FrameGrabber this;
        org.bytedeco.javacv.FrameGrabber $r0, $r1;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        virtualinvoke $r0.<org.bytedeco.javacv.FrameGrabber: void stop()>();

        $r1 = (org.bytedeco.javacv.FrameGrabber) this;

        virtualinvoke $r1.<org.bytedeco.javacv.FrameGrabber: void start()>();

        return;
    }

    public void flush() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        FrameGrabber this;
        int $stack2, $stack3, i;
        org.bytedeco.javacv.FrameGrabber $r0, $r1;

        this := @this: FrameGrabber;

        i = 0;

     label1:
        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameGrabber: int numBuffers>;

        $stack3 = $stack2 + 1;

        if i >= $stack3 goto label2;

        $r1 = (org.bytedeco.javacv.FrameGrabber) this;

        virtualinvoke $r1.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.Frame grab()>();

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    public void delayedGrab(long)
    {
        FrameGrabber this;
        long $stack5, start, delayTime;
        java.util.concurrent.Future $stack6, $stack9, $stack10;
        java.util.concurrent.ExecutorService $stack8;
        boolean $stack11;
        org.bytedeco.javacv.FrameGrabber$1 $u0;
        org.bytedeco.javacv.FrameGrabber $r0, $r1, $r2, $r3, $r4, $r5, $r7;
        java.util.concurrent.Callable $r6;

        this := @this: FrameGrabber;

        delayTime := @parameter0: long;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $r0.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.Frame delayedFrame> = null;

        $r1 = (org.bytedeco.javacv.FrameGrabber) this;

        $r1.<org.bytedeco.javacv.FrameGrabber: long delayedTime> = 0L;

        $stack5 = staticinvoke <java.lang.System: long nanoTime()>();

        start = $stack5 / 1000L;

        $r2 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack6 = $r2.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.Future future>;

        if $stack6 == null goto label1;

        $r3 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack10 = $r3.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.Future future>;

        $stack11 = interfaceinvoke $stack10.<java.util.concurrent.Future: boolean isDone()>();

        if $stack11 != 0 goto label1;

        return;

     label1:
        $r4 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack8 = $r4.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.ExecutorService executor>;

        $u0 = new org.bytedeco.javacv.FrameGrabber$1;

        $r5 = (org.bytedeco.javacv.FrameGrabber) this;

        specialinvoke $u0.<org.bytedeco.javacv.FrameGrabber$1: void <init>(org.bytedeco.javacv.FrameGrabber,long,long)>($r5, start, delayTime);

        $r6 = (java.util.concurrent.Callable) $u0;

        $stack9 = interfaceinvoke $stack8.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r6);

        $r7 = (org.bytedeco.javacv.FrameGrabber) this;

        $r7.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.Future future> = $stack9;

        return;
    }

    public long getDelayedTime() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        FrameGrabber this;
        java.util.concurrent.Future $stack1, $stack2;
        long $stack4;
        org.bytedeco.javacv.FrameGrabber $r0, $r1, $r2;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.Future future>;

        if $stack1 != null goto label1;

        return 0L;

     label1:
        $r1 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack2 = $r1.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.Future future>;

        interfaceinvoke $stack2.<java.util.concurrent.Future: java.lang.Object get()>();

        $r2 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack4 = $r2.<org.bytedeco.javacv.FrameGrabber: long delayedTime>;

        return $stack4;
    }

    public org.bytedeco.javacv.Frame getDelayedFrame() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        FrameGrabber this;
        java.util.concurrent.Future $stack1, $stack2;
        org.bytedeco.javacv.Frame $stack4;
        org.bytedeco.javacv.FrameGrabber $r0, $r1, $r2;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.Future future>;

        if $stack1 != null goto label1;

        return null;

     label1:
        $r1 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack2 = $r1.<org.bytedeco.javacv.FrameGrabber: java.util.concurrent.Future future>;

        interfaceinvoke $stack2.<java.util.concurrent.Future: java.lang.Object get()>();

        $r2 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack4 = $r2.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.Frame delayedFrame>;

        return $stack4;
    }

    public org.bytedeco.javacv.FrameGrabber$Array createArray(org.bytedeco.javacv.FrameGrabber[])
    {
        org.bytedeco.javacv.FrameGrabber$Array $stack2;
        org.bytedeco.javacv.FrameGrabber[] frameGrabbers;
        FrameGrabber this;

        this := @this: FrameGrabber;

        frameGrabbers := @parameter0: org.bytedeco.javacv.FrameGrabber[];

        $stack2 = new org.bytedeco.javacv.FrameGrabber$Array;

        specialinvoke $stack2.<org.bytedeco.javacv.FrameGrabber$Array: void <init>(org.bytedeco.javacv.FrameGrabber[])>(frameGrabbers);

        return $stack2;
    }

    public org.bytedeco.javacv.Frame grabAtFrameRate() throws org.bytedeco.javacv.FrameGrabber$Exception, java.lang.InterruptedException
    {
        FrameGrabber this;
        org.bytedeco.javacv.Frame frame;
        org.bytedeco.javacv.FrameGrabber $r0, $r1;

        this := @this: FrameGrabber;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        frame = virtualinvoke $r0.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.Frame grab()>();

        if frame == null goto label1;

        $r1 = (org.bytedeco.javacv.FrameGrabber) this;

        virtualinvoke $r1.<org.bytedeco.javacv.FrameGrabber: boolean waitForTimestamp(org.bytedeco.javacv.Frame)>(frame);

     label1:
        return frame;
    }

    public boolean waitForTimestamp(org.bytedeco.javacv.Frame) throws java.lang.InterruptedException
    {
        FrameGrabber this;
        long $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, delay, $stack12, $stack15, $stack16, $stack17, $stack18, $stack19;
        byte $stack5, $stack11;
        org.bytedeco.javacv.Frame frame;
        int $stack13, $stack14;
        org.bytedeco.javacv.FrameGrabber $r0, $r1, $r2;

        this := @this: FrameGrabber;

        frame := @parameter0: org.bytedeco.javacv.Frame;

        $r0 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack4 = $r0.<org.bytedeco.javacv.FrameGrabber: long startTime>;

        $stack5 = $stack4 cmp 0L;

        if $stack5 != 0 goto label1;

        $stack16 = staticinvoke <java.lang.System: long nanoTime()>();

        $stack18 = $stack16 / 1000L;

        $stack17 = frame.<org.bytedeco.javacv.Frame: long timestamp>;

        $stack19 = $stack18 - $stack17;

        $r1 = (org.bytedeco.javacv.FrameGrabber) this;

        $r1.<org.bytedeco.javacv.FrameGrabber: long startTime> = $stack19;

        goto label2;

     label1:
        $stack6 = frame.<org.bytedeco.javacv.Frame: long timestamp>;

        $stack7 = staticinvoke <java.lang.System: long nanoTime()>();

        $stack9 = $stack7 / 1000L;

        $r2 = (org.bytedeco.javacv.FrameGrabber) this;

        $stack8 = $r2.<org.bytedeco.javacv.FrameGrabber: long startTime>;

        $stack10 = $stack9 - $stack8;

        delay = $stack6 - $stack10;

        $stack11 = delay cmp 0L;

        if $stack11 <= 0 goto label2;

        $stack15 = delay / 1000L;

        $stack12 = delay % 1000L;

        $stack13 = (int) $stack12;

        $stack14 = $stack13 * 1000;

        staticinvoke <java.lang.Thread: void sleep(long,int)>($stack15, $stack14);

        return 1;

     label2:
        return 0;
    }

    static org.bytedeco.javacv.Frame access$002(org.bytedeco.javacv.FrameGrabber, org.bytedeco.javacv.Frame)
    {
        org.bytedeco.javacv.FrameGrabber x0;
        org.bytedeco.javacv.Frame x1;

        x0 := @parameter0: org.bytedeco.javacv.FrameGrabber;

        x1 := @parameter1: org.bytedeco.javacv.Frame;

        x0.<org.bytedeco.javacv.FrameGrabber: org.bytedeco.javacv.Frame delayedFrame> = x1;

        return x1;
    }

    static long access$102(org.bytedeco.javacv.FrameGrabber, long)
    {
        org.bytedeco.javacv.FrameGrabber x0;
        long x1;

        x0 := @parameter0: org.bytedeco.javacv.FrameGrabber;

        x1 := @parameter1: long;

        x0.<org.bytedeco.javacv.FrameGrabber: long delayedTime> = x1;

        return x1;
    }

    static long access$100(org.bytedeco.javacv.FrameGrabber)
    {
        org.bytedeco.javacv.FrameGrabber x0;
        long $stack1;

        x0 := @parameter0: org.bytedeco.javacv.FrameGrabber;

        $stack1 = x0.<org.bytedeco.javacv.FrameGrabber: long delayedTime>;

        return $stack1;
    }

    static void <clinit>()
    {
        java.util.LinkedList $stack0;
        java.lang.String[] $stack1;
        java.util.List $stack2;

        <FrameGrabber: long SENSOR_PATTERN_BGGR> = 4294967297L;

        <FrameGrabber: long SENSOR_PATTERN_GRBG> = 1L;

        <FrameGrabber: long SENSOR_PATTERN_GBRG> = 4294967296L;

        <FrameGrabber: long SENSOR_PATTERN_RGGB> = 0L;

        $stack0 = new java.util.LinkedList;

        $stack1 = newarray (java.lang.String)[12];

        $stack1[0] = "DC1394";

        $stack1[1] = "FlyCapture";

        $stack1[2] = "FlyCapture2";

        $stack1[3] = "OpenKinect";

        $stack1[4] = "OpenKinect2";

        $stack1[5] = "RealSense";

        $stack1[6] = "RealSense2";

        $stack1[7] = "PS3Eye";

        $stack1[8] = "VideoInput";

        $stack1[9] = "OpenCV";

        $stack1[10] = "FFmpeg";

        $stack1[11] = "IPCamera";

        $stack2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack1);

        specialinvoke $stack0.<java.util.LinkedList: void <init>(java.util.Collection)>($stack2);

        <org.bytedeco.javacv.FrameGrabber: java.util.List list> = $stack0;

        return;
    }
}
