public abstract class FrameRecorder extends java.lang.Object implements java.io.Closeable
{
    public static final java.util.List list;
    protected java.lang.String format;
    protected java.lang.String videoCodecName;
    protected java.lang.String audioCodecName;
    protected int imageWidth;
    protected int imageHeight;
    protected int audioChannels;
    protected int pixelFormat;
    protected int videoCodec;
    protected int videoBitrate;
    protected int imageScalingFlags;
    protected int gopSize;
    protected double aspectRatio;
    protected double frameRate;
    protected double videoQuality;
    protected int sampleFormat;
    protected int audioCodec;
    protected int audioBitrate;
    protected int sampleRate;
    protected double audioQuality;
    protected boolean interleaved;
    protected java.util.Map options;
    protected java.util.Map videoOptions;
    protected java.util.Map audioOptions;
    protected java.util.Map metadata;
    protected java.util.Map videoMetadata;
    protected java.util.Map audioMetadata;
    protected int frameNumber;
    protected long timestamp;
    protected int maxBFrames;
    protected int trellis;
    protected int maxDelay;

    public void <init>()
    {
        FrameRecorder this;
        java.util.HashMap $u0, $u1, $u2, $u3, $u4, $u5;
        org.bytedeco.javacv.FrameRecorder $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: FrameRecorder;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int gopSize> = -1;

        $r1 = (org.bytedeco.javacv.FrameRecorder) this;

        $r1.<org.bytedeco.javacv.FrameRecorder: double videoQuality> = -1.0;

        $r2 = (org.bytedeco.javacv.FrameRecorder) this;

        $r2.<org.bytedeco.javacv.FrameRecorder: double audioQuality> = -1.0;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r3 = (org.bytedeco.javacv.FrameRecorder) this;

        $r3.<org.bytedeco.javacv.FrameRecorder: java.util.Map options> = $u0;

        $u1 = new java.util.HashMap;

        specialinvoke $u1.<java.util.HashMap: void <init>()>();

        $r4 = (org.bytedeco.javacv.FrameRecorder) this;

        $r4.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoOptions> = $u1;

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>()>();

        $r5 = (org.bytedeco.javacv.FrameRecorder) this;

        $r5.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioOptions> = $u2;

        $u3 = new java.util.HashMap;

        specialinvoke $u3.<java.util.HashMap: void <init>()>();

        $r6 = (org.bytedeco.javacv.FrameRecorder) this;

        $r6.<org.bytedeco.javacv.FrameRecorder: java.util.Map metadata> = $u3;

        $u4 = new java.util.HashMap;

        specialinvoke $u4.<java.util.HashMap: void <init>()>();

        $r7 = (org.bytedeco.javacv.FrameRecorder) this;

        $r7.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoMetadata> = $u4;

        $u5 = new java.util.HashMap;

        specialinvoke $u5.<java.util.HashMap: void <init>()>();

        $r8 = (org.bytedeco.javacv.FrameRecorder) this;

        $r8.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioMetadata> = $u5;

        $r9 = (org.bytedeco.javacv.FrameRecorder) this;

        $r9.<org.bytedeco.javacv.FrameRecorder: int frameNumber> = 0;

        $r10 = (org.bytedeco.javacv.FrameRecorder) this;

        $r10.<org.bytedeco.javacv.FrameRecorder: long timestamp> = 0L;

        $r11 = (org.bytedeco.javacv.FrameRecorder) this;

        $r11.<org.bytedeco.javacv.FrameRecorder: int maxBFrames> = -1;

        $r12 = (org.bytedeco.javacv.FrameRecorder) this;

        $r12.<org.bytedeco.javacv.FrameRecorder: int trellis> = -1;

        $r13 = (org.bytedeco.javacv.FrameRecorder) this;

        $r13.<org.bytedeco.javacv.FrameRecorder: int maxDelay> = -1;

        return;
    }

    public static void init()
    {
        java.util.List $stack3;
        java.util.Iterator l0;
        boolean $stack5;
        java.lang.Object $stack6;
        java.lang.String name;
        java.lang.Class[] $stack8;
        java.lang.reflect.Method $stack9;
        java.lang.Object[] $stack10;
        java.lang.Throwable $stack13;
        java.lang.Class c;

        $stack3 = <org.bytedeco.javacv.FrameRecorder: java.util.List list>;

        l0 = interfaceinvoke $stack3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l0.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label6;

        $stack6 = interfaceinvoke l0.<java.util.Iterator: java.lang.Object next()>();

        name = (java.lang.String) $stack6;

     label2:
        c = staticinvoke <org.bytedeco.javacv.FrameRecorder: java.lang.Class get(java.lang.String)>(name);

        $stack8 = newarray (java.lang.Class)[0];

        $stack9 = virtualinvoke c.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("tryLoad", $stack8);

        $stack10 = newarray (java.lang.Object)[0];

        virtualinvoke $stack9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $stack10);

     label3:
        goto label5;

     label4:
        $stack13 := @caughtexception;

     label5:
        goto label1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static java.lang.Class getDefault()
    {
        java.util.List $stack3;
        java.util.Iterator l0;
        boolean $stack5;
        java.lang.Object $stack6;
        java.lang.String name;
        java.lang.Class[] $stack8;
        java.lang.reflect.Method $stack9;
        java.lang.Object[] $stack10;
        java.lang.Throwable $stack12;
        java.lang.Class c;

        $stack3 = <org.bytedeco.javacv.FrameRecorder: java.util.List list>;

        l0 = interfaceinvoke $stack3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l0.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label5;

        $stack6 = interfaceinvoke l0.<java.util.Iterator: java.lang.Object next()>();

        name = (java.lang.String) $stack6;

     label2:
        c = staticinvoke <org.bytedeco.javacv.FrameRecorder: java.lang.Class get(java.lang.String)>(name);

        $stack8 = newarray (java.lang.Class)[0];

        $stack9 = virtualinvoke c.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("tryLoad", $stack8);

        $stack10 = newarray (java.lang.Object)[0];

        virtualinvoke $stack9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $stack10);

     label3:
        return c;

     label4:
        $stack12 := @caughtexception;

        goto label1;

     label5:
        return null;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static java.lang.Class get(java.lang.String) throws org.bytedeco.javacv.FrameRecorder$Exception
    {
        java.lang.Class $stack5, $stack12, $stack13, $stack27, $stack28;
        java.lang.Package $stack6;
        java.lang.String $stack7, className2, $stack21, className, className#2;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $stack17, $stack18, $stack19, $stack20, $stack24, $stack25, $u0, $u1, $u2;
        java.lang.ClassNotFoundException $stack14, $stack22;
        org.bytedeco.javacv.FrameRecorder$Exception $u3;
        java.lang.Throwable $r0;

        className := @parameter0: java.lang.String;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack5 = class "Lorg/bytedeco/javacv/FrameRecorder;";

        $stack6 = virtualinvoke $stack5.<java.lang.Class: java.lang.Package getPackage()>();

        $stack7 = virtualinvoke $stack6.<java.lang.Package: java.lang.String getName()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className);

        className#2 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $stack12 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className#2);

        $stack13 = virtualinvoke $stack12.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/bytedeco/javacv/FrameRecorder;");

     label2:
        return $stack13;

     label3:
        $stack22 := @caughtexception;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack24 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className#2);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FrameRecorder");

        className2 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $stack27 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(className2);

        $stack28 = virtualinvoke $stack27.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/bytedeco/javacv/FrameRecorder;");

     label5:
        return $stack28;

     label6:
        $stack14 := @caughtexception;

        $u3 = new org.bytedeco.javacv.FrameRecorder$Exception;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get FrameRecorder class for ");

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className#2);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(className2);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u3.<org.bytedeco.javacv.FrameRecorder$Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack21, $stack22);

        $r0 = (java.lang.Throwable) $u3;

        throw $r0;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label4 to label5 with label6;
    }

    public static org.bytedeco.javacv.FrameRecorder create(java.lang.Class, java.lang.Class, java.lang.Object, int, int) throws org.bytedeco.javacv.FrameRecorder$Exception
    {
        java.lang.Class c, p, $stack8, $stack9;
        java.lang.Class[] $stack7;
        java.lang.reflect.Constructor $stack10;
        java.lang.Object[] $stack11;
        java.lang.Object o, $stack16;
        int w, h;
        java.lang.Integer $stack13, $stack15;
        org.bytedeco.javacv.FrameRecorder $stack17;
        java.lang.reflect.InvocationTargetException $stack18;
        java.lang.NoSuchMethodException $stack33;
        java.lang.IllegalArgumentException $stack44;
        java.lang.IllegalAccessException $stack45;
        java.lang.InstantiationException $stack46;
        java.lang.Throwable cause#3, $r0;
        java.lang.StringBuilder $stack22, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $u0;
        java.lang.String $stack23, $stack32;
        org.bytedeco.javacv.FrameRecorder$Exception $u1;

        c := @parameter0: java.lang.Class;

        p := @parameter1: java.lang.Class;

        o := @parameter2: java.lang.Object;

        w := @parameter3: int;

        h := @parameter4: int;

     label1:
        $stack7 = newarray (java.lang.Class)[3];

        $stack7[0] = p;

        $stack8 = <java.lang.Integer: java.lang.Class TYPE>;

        $stack7[1] = $stack8;

        $stack9 = <java.lang.Integer: java.lang.Class TYPE>;

        $stack7[2] = $stack9;

        $stack10 = virtualinvoke c.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack7);

        $stack11 = newarray (java.lang.Object)[3];

        $stack11[0] = o;

        $stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(w);

        $stack11[1] = $stack13;

        $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(h);

        $stack11[2] = $stack15;

        $stack16 = virtualinvoke $stack10.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack11);

        $stack17 = (org.bytedeco.javacv.FrameRecorder) $stack16;

     label2:
        return $stack17;

     label3:
        $stack46 := @caughtexception;

        cause#3 = $stack46;

        goto label8;

     label4:
        $stack45 := @caughtexception;

        cause#3 = $stack45;

        goto label8;

     label5:
        $stack44 := @caughtexception;

        cause#3 = $stack44;

        goto label8;

     label6:
        $stack33 := @caughtexception;

        cause#3 = $stack33;

        goto label8;

     label7:
        $stack18 := @caughtexception;

        cause#3 = virtualinvoke $stack18.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

     label8:
        $u1 = new org.bytedeco.javacv.FrameRecorder$Exception;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack22 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create new ");

        $stack23 = virtualinvoke c.<java.lang.Class: java.lang.String getSimpleName()>();

        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(o);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(w);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(h);

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.bytedeco.javacv.FrameRecorder$Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack32, cause#3);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

        catch java.lang.InstantiationException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.IllegalArgumentException from label1 to label2 with label5;
        catch java.lang.NoSuchMethodException from label1 to label2 with label6;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label7;
    }

    public static org.bytedeco.javacv.FrameRecorder createDefault(java.io.File, int, int) throws org.bytedeco.javacv.FrameRecorder$Exception
    {
        java.lang.Class $stack3;
        java.io.File file;
        int width, height;
        org.bytedeco.javacv.FrameRecorder $stack4;

        file := @parameter0: java.io.File;

        width := @parameter1: int;

        height := @parameter2: int;

        $stack3 = staticinvoke <org.bytedeco.javacv.FrameRecorder: java.lang.Class getDefault()>();

        $stack4 = staticinvoke <org.bytedeco.javacv.FrameRecorder: org.bytedeco.javacv.FrameRecorder create(java.lang.Class,java.lang.Class,java.lang.Object,int,int)>($stack3, class "Ljava/io/File;", file, width, height);

        return $stack4;
    }

    public static org.bytedeco.javacv.FrameRecorder createDefault(java.lang.String, int, int) throws org.bytedeco.javacv.FrameRecorder$Exception
    {
        java.lang.Class $stack3;
        java.lang.String filename;
        int width, height;
        org.bytedeco.javacv.FrameRecorder $stack4;

        filename := @parameter0: java.lang.String;

        width := @parameter1: int;

        height := @parameter2: int;

        $stack3 = staticinvoke <org.bytedeco.javacv.FrameRecorder: java.lang.Class getDefault()>();

        $stack4 = staticinvoke <org.bytedeco.javacv.FrameRecorder: org.bytedeco.javacv.FrameRecorder create(java.lang.Class,java.lang.Class,java.lang.Object,int,int)>($stack3, class "Ljava/lang/String;", filename, width, height);

        return $stack4;
    }

    public static org.bytedeco.javacv.FrameRecorder create(java.lang.String, java.io.File, int, int) throws org.bytedeco.javacv.FrameRecorder$Exception
    {
        java.lang.String className;
        java.lang.Class $stack4;
        java.io.File file;
        int width, height;
        org.bytedeco.javacv.FrameRecorder $stack5;

        className := @parameter0: java.lang.String;

        file := @parameter1: java.io.File;

        width := @parameter2: int;

        height := @parameter3: int;

        $stack4 = staticinvoke <org.bytedeco.javacv.FrameRecorder: java.lang.Class get(java.lang.String)>(className);

        $stack5 = staticinvoke <org.bytedeco.javacv.FrameRecorder: org.bytedeco.javacv.FrameRecorder create(java.lang.Class,java.lang.Class,java.lang.Object,int,int)>($stack4, class "Ljava/io/File;", file, width, height);

        return $stack5;
    }

    public static org.bytedeco.javacv.FrameRecorder create(java.lang.String, java.lang.String, int, int) throws org.bytedeco.javacv.FrameRecorder$Exception
    {
        java.lang.String className, filename;
        java.lang.Class $stack4;
        int width, height;
        org.bytedeco.javacv.FrameRecorder $stack5;

        className := @parameter0: java.lang.String;

        filename := @parameter1: java.lang.String;

        width := @parameter2: int;

        height := @parameter3: int;

        $stack4 = staticinvoke <org.bytedeco.javacv.FrameRecorder: java.lang.Class get(java.lang.String)>(className);

        $stack5 = staticinvoke <org.bytedeco.javacv.FrameRecorder: org.bytedeco.javacv.FrameRecorder create(java.lang.Class,java.lang.Class,java.lang.Object,int,int)>($stack4, class "Ljava/lang/String;", filename, width, height);

        return $stack5;
    }

    public java.lang.String getFormat()
    {
        FrameRecorder this;
        java.lang.String $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: java.lang.String format>;

        return $stack1;
    }

    public void setFormat(java.lang.String)
    {
        FrameRecorder this;
        java.lang.String format;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        format := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: java.lang.String format> = format;

        return;
    }

    public java.lang.String getVideoCodecName()
    {
        FrameRecorder this;
        java.lang.String $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: java.lang.String videoCodecName>;

        return $stack1;
    }

    public void setVideoCodecName(java.lang.String)
    {
        FrameRecorder this;
        java.lang.String videoCodecName;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        videoCodecName := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: java.lang.String videoCodecName> = videoCodecName;

        return;
    }

    public java.lang.String getAudioCodecName()
    {
        FrameRecorder this;
        java.lang.String $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: java.lang.String audioCodecName>;

        return $stack1;
    }

    public void setAudioCodecName(java.lang.String)
    {
        FrameRecorder this;
        java.lang.String audioCodecName;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        audioCodecName := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: java.lang.String audioCodecName> = audioCodecName;

        return;
    }

    public int getImageWidth()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int imageWidth>;

        return $stack1;
    }

    public void setImageWidth(int)
    {
        FrameRecorder this;
        int imageWidth;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        imageWidth := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int imageWidth> = imageWidth;

        return;
    }

    public int getImageHeight()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int imageHeight>;

        return $stack1;
    }

    public void setImageHeight(int)
    {
        FrameRecorder this;
        int imageHeight;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        imageHeight := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int imageHeight> = imageHeight;

        return;
    }

    public int getAudioChannels()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int audioChannels>;

        return $stack1;
    }

    public void setAudioChannels(int)
    {
        FrameRecorder this;
        int audioChannels;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        audioChannels := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int audioChannels> = audioChannels;

        return;
    }

    public int getPixelFormat()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int pixelFormat>;

        return $stack1;
    }

    public void setPixelFormat(int)
    {
        FrameRecorder this;
        int pixelFormat;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        pixelFormat := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int pixelFormat> = pixelFormat;

        return;
    }

    public int getVideoCodec()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int videoCodec>;

        return $stack1;
    }

    public void setVideoCodec(int)
    {
        FrameRecorder this;
        int videoCodec;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        videoCodec := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int videoCodec> = videoCodec;

        return;
    }

    public int getVideoBitrate()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int videoBitrate>;

        return $stack1;
    }

    public void setVideoBitrate(int)
    {
        FrameRecorder this;
        int videoBitrate;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        videoBitrate := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int videoBitrate> = videoBitrate;

        return;
    }

    public int getImageScalingFlags()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int imageScalingFlags>;

        return $stack1;
    }

    public void setImageScalingFlags(int)
    {
        FrameRecorder this;
        int imageScalingFlags;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        imageScalingFlags := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int imageScalingFlags> = imageScalingFlags;

        return;
    }

    public int getGopSize()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int gopSize>;

        return $stack1;
    }

    public void setGopSize(int)
    {
        FrameRecorder this;
        int gopSize;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        gopSize := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int gopSize> = gopSize;

        return;
    }

    public double getAspectRatio()
    {
        FrameRecorder this;
        double $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: double aspectRatio>;

        return $stack1;
    }

    public void setAspectRatio(double)
    {
        FrameRecorder this;
        double aspectRatio;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        aspectRatio := @parameter0: double;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: double aspectRatio> = aspectRatio;

        return;
    }

    public double getFrameRate()
    {
        FrameRecorder this;
        double $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: double frameRate>;

        return $stack1;
    }

    public void setFrameRate(double)
    {
        FrameRecorder this;
        double frameRate;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        frameRate := @parameter0: double;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: double frameRate> = frameRate;

        return;
    }

    public double getVideoQuality()
    {
        FrameRecorder this;
        double $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: double videoQuality>;

        return $stack1;
    }

    public void setVideoQuality(double)
    {
        FrameRecorder this;
        double videoQuality;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        videoQuality := @parameter0: double;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: double videoQuality> = videoQuality;

        return;
    }

    public int getSampleFormat()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int sampleFormat>;

        return $stack1;
    }

    public void setSampleFormat(int)
    {
        FrameRecorder this;
        int sampleFormat;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        sampleFormat := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int sampleFormat> = sampleFormat;

        return;
    }

    public int getAudioCodec()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int audioCodec>;

        return $stack1;
    }

    public void setAudioCodec(int)
    {
        FrameRecorder this;
        int audioCodec;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        audioCodec := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int audioCodec> = audioCodec;

        return;
    }

    public int getAudioBitrate()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int audioBitrate>;

        return $stack1;
    }

    public void setAudioBitrate(int)
    {
        FrameRecorder this;
        int audioBitrate;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        audioBitrate := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int audioBitrate> = audioBitrate;

        return;
    }

    public int getSampleRate()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int sampleRate>;

        return $stack1;
    }

    public void setSampleRate(int)
    {
        FrameRecorder this;
        int sampleRate;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        sampleRate := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int sampleRate> = sampleRate;

        return;
    }

    public double getAudioQuality()
    {
        FrameRecorder this;
        double $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: double audioQuality>;

        return $stack1;
    }

    public void setAudioQuality(double)
    {
        FrameRecorder this;
        double audioQuality;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        audioQuality := @parameter0: double;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: double audioQuality> = audioQuality;

        return;
    }

    public boolean isInterleaved()
    {
        FrameRecorder this;
        boolean $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: boolean interleaved>;

        return $stack1;
    }

    public void setInterleaved(boolean)
    {
        FrameRecorder this;
        boolean interleaved;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        interleaved := @parameter0: boolean;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: boolean interleaved> = interleaved;

        return;
    }

    public java.util.Map getOptions()
    {
        FrameRecorder this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map options>;

        return $stack1;
    }

    public void setOptions(java.util.Map)
    {
        FrameRecorder this;
        java.util.Map options;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        options := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map options> = options;

        return;
    }

    public java.util.Map getVideoOptions()
    {
        FrameRecorder this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoOptions>;

        return $stack1;
    }

    public void setVideoOptions(java.util.Map)
    {
        FrameRecorder this;
        java.util.Map options;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        options := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoOptions> = options;

        return;
    }

    public java.util.Map getAudioOptions()
    {
        FrameRecorder this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioOptions>;

        return $stack1;
    }

    public void setAudioOptions(java.util.Map)
    {
        FrameRecorder this;
        java.util.Map options;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        options := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioOptions> = options;

        return;
    }

    public java.util.Map getMetadata()
    {
        FrameRecorder this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map metadata>;

        return $stack1;
    }

    public void setMetadata(java.util.Map)
    {
        FrameRecorder this;
        java.util.Map metadata;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        metadata := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map metadata> = metadata;

        return;
    }

    public java.util.Map getVideoMetadata()
    {
        FrameRecorder this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoMetadata>;

        return $stack1;
    }

    public void setVideoMetadata(java.util.Map)
    {
        FrameRecorder this;
        java.util.Map metadata;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        metadata := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoMetadata> = metadata;

        return;
    }

    public java.util.Map getAudioMetadata()
    {
        FrameRecorder this;
        java.util.Map $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioMetadata>;

        return $stack1;
    }

    public void setAudioMetadata(java.util.Map)
    {
        FrameRecorder this;
        java.util.Map metadata;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        metadata := @parameter0: java.util.Map;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioMetadata> = metadata;

        return;
    }

    public java.lang.String getOption(java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map options>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setOption(java.lang.String, java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map options>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getVideoOption(java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoOptions>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setVideoOption(java.lang.String, java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoOptions>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getAudioOption(java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioOptions>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setAudioOption(java.lang.String, java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioOptions>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getMetadata(java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map metadata>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setMetadata(java.lang.String, java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map metadata>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getVideoMetadata(java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoMetadata>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setVideoMetadata(java.lang.String, java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map videoMetadata>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public java.lang.String getAudioMetadata(java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, $stack4;
        java.util.Map $stack2;
        java.lang.Object $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack2 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioMetadata>;

        $stack3 = interfaceinvoke $stack2.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack4 = (java.lang.String) $stack3;

        return $stack4;
    }

    public void setAudioMetadata(java.lang.String, java.lang.String)
    {
        FrameRecorder this;
        java.lang.String key, value;
        java.util.Map $stack3;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack3 = $r0.<org.bytedeco.javacv.FrameRecorder: java.util.Map audioMetadata>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public int getFrameNumber()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int frameNumber>;

        return $stack1;
    }

    public void setFrameNumber(int)
    {
        FrameRecorder this;
        int frameNumber;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        frameNumber := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int frameNumber> = frameNumber;

        return;
    }

    public long getTimestamp()
    {
        FrameRecorder this;
        long $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: long timestamp>;

        return $stack1;
    }

    public void setTimestamp(long)
    {
        FrameRecorder this;
        long timestamp;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        timestamp := @parameter0: long;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: long timestamp> = timestamp;

        return;
    }

    public int getMaxBFrames()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int maxBFrames>;

        return $stack1;
    }

    public void setMaxBFrames(int)
    {
        FrameRecorder this;
        int maxBFrames;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        maxBFrames := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int maxBFrames> = maxBFrames;

        return;
    }

    public int getTrellis()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int trellis>;

        return $stack1;
    }

    public void setTrellis(int)
    {
        FrameRecorder this;
        int trellis;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        trellis := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int trellis> = trellis;

        return;
    }

    public int getMaxDelay()
    {
        FrameRecorder this;
        int $stack1;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $stack1 = $r0.<org.bytedeco.javacv.FrameRecorder: int maxDelay>;

        return $stack1;
    }

    public void setMaxDelay(int)
    {
        FrameRecorder this;
        int maxDelay;
        org.bytedeco.javacv.FrameRecorder $r0;

        this := @this: FrameRecorder;

        maxDelay := @parameter0: int;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        $r0.<org.bytedeco.javacv.FrameRecorder: int maxDelay> = maxDelay;

        return;
    }

    public abstract void start() throws org.bytedeco.javacv.FrameRecorder$Exception;

    public abstract void flush() throws org.bytedeco.javacv.FrameRecorder$Exception;

    public abstract void stop() throws org.bytedeco.javacv.FrameRecorder$Exception;

    public abstract void record(org.bytedeco.javacv.Frame) throws org.bytedeco.javacv.FrameRecorder$Exception;

    public abstract void release() throws org.bytedeco.javacv.FrameRecorder$Exception;

    public void close() throws org.bytedeco.javacv.FrameRecorder$Exception
    {
        FrameRecorder this;
        org.bytedeco.javacv.FrameRecorder $r0, $r1;

        this := @this: FrameRecorder;

        $r0 = (org.bytedeco.javacv.FrameRecorder) this;

        virtualinvoke $r0.<org.bytedeco.javacv.FrameRecorder: void stop()>();

        $r1 = (org.bytedeco.javacv.FrameRecorder) this;

        virtualinvoke $r1.<org.bytedeco.javacv.FrameRecorder: void release()>();

        return;
    }

    static void <clinit>()
    {
        java.util.LinkedList $stack0;
        java.lang.String[] $stack1;
        java.util.List $stack2;

        $stack0 = new java.util.LinkedList;

        $stack1 = newarray (java.lang.String)[2];

        $stack1[0] = "FFmpeg";

        $stack1[1] = "OpenCV";

        $stack2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack1);

        specialinvoke $stack0.<java.util.LinkedList: void <init>(java.util.Collection)>($stack2);

        <org.bytedeco.javacv.FrameRecorder: java.util.List list> = $stack0;

        return;
    }
}
