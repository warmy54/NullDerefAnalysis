public class FunctionCall extends org.ooc.frontend.model.Access implements org.ooc.frontend.model.interfaces.MustBeResolved
{
    protected boolean dead;
    protected boolean superCall;
    protected java.lang.String name;
    protected java.lang.String suffix;
    protected final org.ooc.frontend.model.NodeList typeParams;
    protected final org.ooc.frontend.model.NodeList arguments;
    protected org.ooc.frontend.model.FunctionDecl impl;
    protected org.ooc.frontend.model.Expression returnArg;
    protected org.ooc.frontend.model.Type realType;

    public void <init>(java.lang.String, org.ooc.frontend.model.tokens.Token)
    {
        FunctionCall this;
        java.lang.String name;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        name := @parameter0: java.lang.String;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        specialinvoke $r0.<org.ooc.frontend.model.FunctionCall: void <init>(java.lang.String,java.lang.String,org.ooc.frontend.model.tokens.Token)>(name, null, startToken);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.ooc.frontend.model.tokens.Token)
    {
        FunctionCall this;
        org.ooc.frontend.model.tokens.Token startToken;
        java.lang.String name, suffix;
        boolean $stack6;
        org.ooc.frontend.model.NodeList $u0, $u1;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: FunctionCall;

        name := @parameter0: java.lang.String;

        suffix := @parameter1: java.lang.String;

        startToken := @parameter2: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Access: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $r0.<org.ooc.frontend.model.FunctionCall: boolean dead> = 0;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $r1.<org.ooc.frontend.model.FunctionCall: java.lang.String name> = name;

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $r2.<org.ooc.frontend.model.FunctionCall: java.lang.String suffix> = suffix;

        $u0 = new org.ooc.frontend.model.NodeList;

        specialinvoke $u0.<org.ooc.frontend.model.NodeList: void <init>()>();

        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $r3.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList typeParams> = $u0;

        $u1 = new org.ooc.frontend.model.NodeList;

        specialinvoke $u1.<org.ooc.frontend.model.NodeList: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r4 = (org.ooc.frontend.model.FunctionCall) this;

        $r4.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments> = $u1;

        $r5 = (org.ooc.frontend.model.FunctionCall) this;

        $r5.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl> = null;

        $r6 = (org.ooc.frontend.model.FunctionCall) this;

        $r6.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg> = null;

        $r7 = (org.ooc.frontend.model.FunctionCall) this;

        $r7.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type realType> = null;

        $stack6 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>("super");

        if $stack6 == 0 goto label1;

        $r8 = (org.ooc.frontend.model.FunctionCall) this;

        virtualinvoke $r8.<org.ooc.frontend.model.FunctionCall: void setSuperCall(boolean)>(1);

     label1:
        return;
    }

    public void <init>(org.ooc.frontend.model.FunctionDecl, org.ooc.frontend.model.tokens.Token)
    {
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl func;
        java.lang.String $stack3, $stack4;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.FunctionCall $r0, $r1;

        this := @this: FunctionCall;

        func := @parameter0: org.ooc.frontend.model.FunctionDecl;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        $stack3 = virtualinvoke func.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        $stack4 = virtualinvoke func.<org.ooc.frontend.model.FunctionDecl: java.lang.String getSuffix()>();

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        specialinvoke $r0.<org.ooc.frontend.model.FunctionCall: void <init>(java.lang.String,java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack3, $stack4, startToken);

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        virtualinvoke $r1.<org.ooc.frontend.model.FunctionCall: void setImpl(org.ooc.frontend.model.FunctionDecl)>(func);

        return;
    }

    public boolean isSuperCall()
    {
        FunctionCall this;
        boolean $stack1;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: boolean superCall>;

        return $stack1;
    }

    public void setSuperCall(boolean)
    {
        FunctionCall this;
        boolean superCall;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        superCall := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $r0.<org.ooc.frontend.model.FunctionCall: boolean superCall> = superCall;

        return;
    }

    public void setImpl(org.ooc.frontend.model.FunctionDecl)
    {
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl impl;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        impl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl> = impl;

        return;
    }

    public org.ooc.frontend.model.FunctionDecl getImpl()
    {
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl $stack1;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        return $stack1;
    }

    public java.lang.String getName()
    {
        FunctionCall this;
        java.lang.String $stack1;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        return $stack1;
    }

    public void setName(java.lang.String)
    {
        FunctionCall this;
        java.lang.String name;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        name := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String name> = name;

        return;
    }

    public java.lang.String getSuffix()
    {
        FunctionCall this;
        java.lang.String $stack1;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String suffix>;

        return $stack1;
    }

    public void setSuffix(java.lang.String)
    {
        FunctionCall this;
        java.lang.String suffix;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        suffix := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String suffix> = suffix;

        return;
    }

    public org.ooc.frontend.model.NodeList getTypeParams()
    {
        FunctionCall this;
        org.ooc.frontend.model.NodeList $stack1;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList typeParams>;

        return $stack1;
    }

    public org.ooc.frontend.model.NodeList getArguments()
    {
        FunctionCall this;
        org.ooc.frontend.model.NodeList $stack1;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        return $stack1;
    }

    public org.ooc.frontend.model.Expression getReturnArg()
    {
        FunctionCall this;
        org.ooc.frontend.model.Expression $stack1;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg>;

        return $stack1;
    }

    public void setReturnArg(org.ooc.frontend.model.Expression)
    {
        FunctionCall this;
        org.ooc.frontend.model.Expression returnArg;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        returnArg := @parameter0: org.ooc.frontend.model.Expression;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg> = returnArg;

        return;
    }

    public org.ooc.frontend.model.Type getType()
    {
        FunctionCall this;
        org.ooc.frontend.model.Type $stack1;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type realType>;

        return $stack1;
    }

    private org.ooc.frontend.model.Type realTypize(org.ooc.frontend.model.Type, org.ooc.middle.hobgoblins.Resolver, org.ooc.frontend.model.NodeList)
    {
        FunctionCall this;
        org.ooc.frontend.model.Type typeArg, type;
        org.ooc.frontend.model.NodeList stack, $stack11, $stack19;
        org.ooc.middle.hobgoblins.Resolver res;
        java.util.Iterator l6;
        java.lang.Object $stack14;
        org.ooc.frontend.model.Access exprParam, expr;
        boolean $stack15, $stack16, $stack13;
        org.ooc.frontend.model.FunctionCall $stack20, $r0, $r1;
        org.ooc.frontend.model.VariableAccess $stack28;
        int i;
        java.lang.String name;
        org.ooc.frontend.model.Node $r2;

        this := @this: FunctionCall;

        typeArg := @parameter0: org.ooc.frontend.model.Type;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        stack := @parameter2: org.ooc.frontend.model.NodeList;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        type = virtualinvoke $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type getRealType(org.ooc.frontend.model.Type,org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(typeArg, stack, res, 1);

        if type != null goto label1;

        type = virtualinvoke typeArg.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type clone()>();

     label1:
        i = -1;

        $stack11 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        l6 = virtualinvoke $stack11.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label2:
        $stack13 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label6;

        $stack14 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        exprParam = (org.ooc.frontend.model.Access) $stack14;

        i = i + 1;

        name = "";

        $stack15 = exprParam instanceof org.ooc.frontend.model.VariableAccess;

        if $stack15 == 0 goto label3;

        $stack28 = (org.ooc.frontend.model.VariableAccess) exprParam;

        name = virtualinvoke $stack28.<org.ooc.frontend.model.VariableAccess: java.lang.String getName()>();

        goto label4;

     label3:
        $stack16 = exprParam instanceof org.ooc.frontend.model.FunctionCall;

        if $stack16 == 0 goto label4;

        $stack20 = (org.ooc.frontend.model.FunctionCall) exprParam;

        name = virtualinvoke $stack20.<org.ooc.frontend.model.FunctionCall: java.lang.String getName()>();

     label4:
        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        expr = virtualinvoke $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Access getExprParam(java.lang.String,org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(name, stack, res, 1);

        if expr == null goto label5;

        $stack19 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $r2 = (org.ooc.frontend.model.Node) expr;

        virtualinvoke $stack19.<org.ooc.frontend.model.NodeList: void set(int,org.ooc.frontend.model.Node)>(i, $r2);

     label5:
        goto label2;

     label6:
        return type;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        FunctionCall this;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.FunctionCall)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        FunctionCall this;

        this := @this: FunctionCall;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        FunctionCall this;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.NodeList $stack2, $stack3;
        org.ooc.frontend.model.Type $stack4, $stack7;
        org.ooc.frontend.model.Expression $stack5, $stack6;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: FunctionCall;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack2 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList typeParams>;

        virtualinvoke $stack2.<org.ooc.frontend.model.NodeList: void accept(org.ooc.frontend.Visitor)>(visitor);

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack3 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        virtualinvoke $stack3.<org.ooc.frontend.model.NodeList: void accept(org.ooc.frontend.Visitor)>(visitor);

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack4 = $r2.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type realType>;

        if $stack4 == null goto label1;

        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack7 = $r3.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type realType>;

        virtualinvoke $stack7.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>(visitor);

     label1:
        $r4 = (org.ooc.frontend.model.FunctionCall) this;

        $stack5 = $r4.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg>;

        if $stack5 == null goto label2;

        $r5 = (org.ooc.frontend.model.FunctionCall) this;

        $stack6 = $r5.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg>;

        virtualinvoke $stack6.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>(visitor);

     label2:
        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        org.ooc.frontend.model.Node oldie, kiddo;
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl $stack3, $stack4;
        org.ooc.frontend.model.FunctionCall $r0, $r1;

        this := @this: FunctionCall;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack3 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if oldie != $stack3 goto label1;

        $stack4 = (org.ooc.frontend.model.FunctionDecl) kiddo;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl> = $stack4;

        return 1;

     label1:
        return 0;
    }

    public boolean isResolved()
    {
        FunctionCall this;

        this := @this: FunctionCall;

        return 0;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        FunctionCall this;
        boolean $stack7, fatal, $stack27, $stack31, $stack33;
        org.ooc.frontend.model.FunctionDecl $stack8, $stack9, $stack10, $stack11, $stack26, fDecl;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack12, $stack13, $stack24, $stack29, $stack35, $stack44, response;
        java.lang.String $stack14, $stack15, $stack30, $stack32, $stack42, $stack43, response#4, fDeclIndex#5;
        org.ooc.frontend.model.NodeList stack;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.model.Node $stack40, $r3, $r18;
        int fDeclIndex;
        org.ooc.middle.OocCompilationError $u0, $u1;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Throwable $r4, $r19;

        this := @this: FunctionCall;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack7 = $r0.<org.ooc.frontend.model.FunctionCall: boolean dead>;

        if $stack7 == 0 goto label01;

        $stack44 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack44;

     label01:
        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack8 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack8 != null goto label05;

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack30 = $r2.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack31 = virtualinvoke $stack30.<java.lang.String: boolean equals(java.lang.Object)>("this");

        if $stack31 == 0 goto label02;

        fDeclIndex = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/FunctionDecl;");

        $stack40 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(fDeclIndex);

        fDecl = (org.ooc.frontend.model.FunctionDecl) $stack40;

        $u0 = new org.ooc.middle.OocCompilationError;

        $stack42 = virtualinvoke fDecl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        $stack43 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack42) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("this calls are deprecated now. Just use \u0001");

        $r3 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r3, stack, $stack43);

        $r4 = (java.lang.Throwable) $u0;

        throw $r4;

     label02:
        $r5 = (org.ooc.frontend.model.FunctionCall) this;

        $stack32 = $r5.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack33 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>("super");

        if $stack33 == 0 goto label03;

        $r6 = (org.ooc.frontend.model.FunctionCall) this;

        response = virtualinvoke $r6.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolveConstructorCall(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, 1);

        goto label04;

     label03:
        $r7 = (org.ooc.frontend.model.FunctionCall) this;

        response = virtualinvoke $r7.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolveRegular(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

     label04:
        $stack35 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        if response == $stack35 goto label05;

        return response;

     label05:
        $r8 = (org.ooc.frontend.model.FunctionCall) this;

        $stack9 = $r8.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack9 == null goto label06;

        $r9 = (org.ooc.frontend.model.FunctionCall) this;

        $stack26 = $r9.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack27 = virtualinvoke $stack26.<org.ooc.frontend.model.FunctionDecl: boolean isMember()>();

        if $stack27 == 0 goto label06;

        $r10 = (org.ooc.frontend.model.FunctionCall) this;

        virtualinvoke $r10.<org.ooc.frontend.model.FunctionCall: void turnIntoMemberCall(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver)>(stack, res);

        $stack29 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack29;

     label06:
        $r11 = (org.ooc.frontend.model.FunctionCall) this;

        $stack10 = $r11.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack10 == null goto label07;

        $r12 = (org.ooc.frontend.model.FunctionCall) this;

        virtualinvoke $r12.<org.ooc.frontend.model.FunctionCall: void autocast(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver)>(stack, res);

        $r13 = (org.ooc.frontend.model.FunctionCall) this;

        response = virtualinvoke $r13.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.interfaces.MustBeResolved$Response handleGenerics(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        $stack24 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        if response == $stack24 goto label07;

        return response;

     label07:
        $r14 = (org.ooc.frontend.model.FunctionCall) this;

        $stack11 = $r14.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack11 != null goto label10;

        if fatal == 0 goto label09;

        $r15 = (org.ooc.frontend.model.FunctionCall) this;

        $stack14 = $r15.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $r16 = (org.ooc.frontend.model.FunctionCall) this;

        $stack15 = virtualinvoke $r16.<org.ooc.frontend.model.FunctionCall: java.lang.String getArgsRepr()>();

        response#4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack14, $stack15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No such function \u0001\u0001.");

        $r17 = (org.ooc.frontend.model.FunctionCall) this;

        fDeclIndex#5 = virtualinvoke $r17.<org.ooc.frontend.model.FunctionCall: java.lang.String guessCorrectName(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver)>(stack, res);

        if fDeclIndex#5 == null goto label08;

        response#4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(response#4, fDeclIndex#5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 Did you mean \u0001 ?");

     label08:
        $u1 = new org.ooc.middle.OocCompilationError;

        $r18 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r18, stack, response#4);

        $r19 = (java.lang.Throwable) $u1;

        throw $r19;

     label09:
        $stack13 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack13;

     label10:
        $stack12 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack12;
    }

    protected org.ooc.frontend.model.interfaces.MustBeResolved$Response handleGenerics(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        FunctionCall this;
        boolean $stack9, $stack12, $stack29, $stack31, $stack37, $stack42, $stack43, fatal, $stack58, $stack75, $stack79, $stack81, $stack94, $stack95, $stack97, andedSomearg;
        org.ooc.frontend.model.FunctionDecl $stack10, $stack11, $stack19, $stack40, $stack52, $stack71, $stack13;
        byte argOffset, $stack101;
        org.ooc.frontend.model.NodeList $stack17, stack, $stack56, $stack63, $stack72, $stack89, $stack100, $stack14;
        int $stack18, $stack21, $stack57, $stack73, $stack86, $stack88, j, $stack15, $stack16, implArg#21;
        java.util.LinkedHashMap $stack20, $stack53;
        org.ooc.frontend.model.Type $stack22, $stack76, $stack78, $stack80, $stack85, $stack87, $stack91, $stack93, $stack96, j#24, implArg#25;
        org.ooc.frontend.model.Expression $stack25, $stack28, $stack30, $stack33, $stack34, $stack35, callArg;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack26, $stack27, $stack39, $stack48, $stack51, $stack66, $stack77, $stack92, $stack103, $stack106, j#32, $stack24;
        org.ooc.frontend.model.interfaces.MustBeResolved $stack36;
        org.ooc.middle.hobgoblins.Resolver res;
        java.lang.String $stack50, $stack61, $stack67, $stack105;
        java.util.Collection $stack54;
        java.lang.Object $stack60;
        org.ooc.frontend.model.Node $stack74, $stack90, $r3, $r10, $r18, $r22;
        org.ooc.frontend.model.tokens.Token $stack99;
        org.ooc.frontend.model.Argument implArg;
        java.util.Iterator j#20;
        org.ooc.frontend.model.TypeParam implArg#22;
        org.ooc.frontend.model.Access callArg#23;
        org.ooc.middle.OocCompilationError $u0, $u2;
        org.ooc.frontend.model.AddressOf $u1;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        java.lang.Throwable $r4, $r23;

        this := @this: FunctionCall;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack9 = $r0.<org.ooc.frontend.model.FunctionCall: boolean dead>;

        if $stack9 == 0 goto label01;

        $stack106 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack106;

     label01:
        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack10 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack10 != null goto label03;

        if fatal == 0 goto label02;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack105 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.FunctionCall)>($r2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Didn\'t find implementation for \u0001, can\'t handle generics.");

        $r3 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r3, stack, $stack105);

        $r4 = (java.lang.Throwable) $u0;

        throw $r4;

     label02:
        $stack103 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack103;

     label03:
        andedSomearg = 0;

        $r5 = (org.ooc.frontend.model.FunctionCall) this;

        $stack11 = $r5.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack12 = virtualinvoke $stack11.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack12 == 0 goto label04;

        $stack101 = 1;

        goto label05;

     label04:
        $stack101 = 0;

     label05:
        argOffset = $stack101;

        j = 0;

     label06:
        $r6 = (org.ooc.frontend.model.FunctionCall) this;

        $stack13 = $r6.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack14 = virtualinvoke $stack13.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        $stack15 = virtualinvoke $stack14.<org.ooc.frontend.model.NodeList: int size()>();

        $stack16 = $stack15 - argOffset;

        if j >= $stack16 goto label14;

        $r7 = (org.ooc.frontend.model.FunctionCall) this;

        $stack71 = $r7.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack72 = virtualinvoke $stack71.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        $stack73 = j + argOffset;

        $stack74 = virtualinvoke $stack72.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>($stack73);

        implArg = (org.ooc.frontend.model.Argument) $stack74;

        $stack75 = implArg instanceof org.ooc.frontend.model.VarArg;

        if $stack75 == 0 goto label07;

        goto label13;

     label07:
        $stack76 = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        if $stack76 == null goto label08;

        $stack78 = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack79 = virtualinvoke $stack78.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack79 != 0 goto label09;

     label08:
        $stack77 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack77;

     label09:
        $stack80 = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack81 = virtualinvoke $stack80.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack81 == 0 goto label13;

        $stack85 = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack86 = virtualinvoke $stack85.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        if $stack86 != 0 goto label13;

        $stack87 = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack88 = virtualinvoke $stack87.<org.ooc.frontend.model.Type: int getReferenceLevel()>();

        if $stack88 == 0 goto label10;

        goto label13;

     label10:
        $r8 = (org.ooc.frontend.model.FunctionCall) this;

        $stack89 = $r8.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        $stack90 = virtualinvoke $stack89.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(j);

        callArg = (org.ooc.frontend.model.Expression) $stack90;

        $stack91 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack91 == null goto label11;

        $stack93 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack94 = virtualinvoke $stack93.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack94 != 0 goto label12;

     label11:
        $stack92 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack92;

     label12:
        $stack95 = callArg instanceof org.ooc.frontend.model.AddressOf;

        if $stack95 != 0 goto label13;

        $stack96 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack97 = virtualinvoke $stack96.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack97 != 0 goto label13;

        $r9 = (org.ooc.frontend.model.FunctionCall) this;

        $stack100 = $r9.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        $u1 = new org.ooc.frontend.model.AddressOf;

        $stack99 = callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u1.<org.ooc.frontend.model.AddressOf: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>(callArg, $stack99);

        $r10 = (org.ooc.frontend.model.Node) $u1;

        virtualinvoke $stack100.<org.ooc.frontend.model.NodeList: void set(int,org.ooc.frontend.model.Node)>(j, $r10);

        andedSomearg = 1;

     label13:
        j = j + 1;

        goto label06;

     label14:
        $r11 = (org.ooc.frontend.model.FunctionCall) this;

        $stack17 = $r11.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList typeParams>;

        $stack18 = virtualinvoke $stack17.<org.ooc.frontend.model.NodeList: int size()>();

        $r12 = (org.ooc.frontend.model.FunctionCall) this;

        $stack19 = $r12.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack20 = virtualinvoke $stack19.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack21 = virtualinvoke $stack20.<java.util.LinkedHashMap: int size()>();

        if $stack18 >= $stack21 goto label19;

        $r13 = (org.ooc.frontend.model.FunctionCall) this;

        $stack52 = $r13.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack53 = virtualinvoke $stack52.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack54 = virtualinvoke $stack53.<java.util.LinkedHashMap: java.util.Collection values()>();

        j#20 = interfaceinvoke $stack54.<java.util.Collection: java.util.Iterator iterator()>();

        implArg#21 = 0;

     label15:
        $r14 = (org.ooc.frontend.model.FunctionCall) this;

        $stack56 = $r14.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList typeParams>;

        $stack57 = virtualinvoke $stack56.<org.ooc.frontend.model.NodeList: int size()>();

        if implArg#21 >= $stack57 goto label16;

        interfaceinvoke j#20.<java.util.Iterator: java.lang.Object next()>();

        implArg#21 = implArg#21 + 1;

        goto label15;

     label16:
        $stack58 = interfaceinvoke j#20.<java.util.Iterator: boolean hasNext()>();

        if $stack58 == 0 goto label19;

        $stack60 = interfaceinvoke j#20.<java.util.Iterator: java.lang.Object next()>();

        implArg#22 = (org.ooc.frontend.model.TypeParam) $stack60;

        $stack61 = virtualinvoke implArg#22.<org.ooc.frontend.model.TypeParam: java.lang.String getName()>();

        $r15 = (org.ooc.frontend.model.FunctionCall) this;

        callArg#23 = virtualinvoke $r15.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Access getExprParam(java.lang.String,org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>($stack61, stack, res, fatal);

        if callArg#23 != null goto label18;

        if fatal == 0 goto label17;

        $stack67 = virtualinvoke implArg#22.<org.ooc.frontend.model.TypeParam: java.lang.String getName()>();

        $r16 = (org.ooc.frontend.model.FunctionCall) this;

        virtualinvoke $r16.<org.ooc.frontend.model.FunctionCall: void throwUnresolvedType(org.ooc.frontend.model.NodeList,java.lang.String,org.ooc.middle.hobgoblins.Resolver)>(stack, $stack67, res);

     label17:
        $stack66 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack66;

     label18:
        $r17 = (org.ooc.frontend.model.FunctionCall) this;

        $stack63 = $r17.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList typeParams>;

        $r18 = (org.ooc.frontend.model.Node) callArg#23;

        virtualinvoke $stack63.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r18);

        goto label16;

     label19:
        $r19 = (org.ooc.frontend.model.FunctionCall) this;

        $stack22 = $r19.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type realType>;

        if $stack22 != null goto label24;

        $r20 = (org.ooc.frontend.model.FunctionCall) this;

        $stack40 = $r20.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        j#24 = virtualinvoke $stack40.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack42 = virtualinvoke j#24.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack42 != 0 goto label20;

        $stack51 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack51;

     label20:
        $stack43 = virtualinvoke j#24.<org.ooc.frontend.model.Type: boolean isGenericRecursive()>();

        if $stack43 == 0 goto label23;

        $r21 = (org.ooc.frontend.model.FunctionCall) this;

        implArg#25 = virtualinvoke $r21.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type realTypize(org.ooc.frontend.model.Type,org.ooc.middle.hobgoblins.Resolver,org.ooc.frontend.model.NodeList)>(j#24, res, stack);

        if implArg#25 != null goto label22;

        if fatal == 0 goto label21;

        $u2 = new org.ooc.middle.OocCompilationError;

        $stack50 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type)>(j#24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("RealType still null, can\'t resolve generic type \u0001");

        $r22 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u2.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r22, stack, $stack50);

        $r23 = (java.lang.Throwable) $u2;

        throw $r23;

     label21:
        $stack48 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack48;

     label22:
        $r24 = (org.ooc.frontend.model.FunctionCall) this;

        $r24.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type realType> = implArg#25;

        goto label24;

     label23:
        $r25 = (org.ooc.frontend.model.FunctionCall) this;

        $r25.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type realType> = j#24;

     label24:
        $r26 = (org.ooc.frontend.model.FunctionCall) this;

        j#32 = virtualinvoke $r26.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.interfaces.MustBeResolved$Response unwrapIfNeeded(org.ooc.frontend.model.NodeList)>(stack);

        $stack24 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        if j#32 == $stack24 goto label25;

        return j#32;

     label25:
        $r27 = (org.ooc.frontend.model.FunctionCall) this;

        $stack25 = $r27.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg>;

        if $stack25 == null goto label27;

        $r28 = (org.ooc.frontend.model.FunctionCall) this;

        $stack28 = $r28.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg>;

        $stack29 = $stack28 instanceof org.ooc.frontend.model.interfaces.MustBeResolved;

        if $stack29 == 0 goto label26;

        $r29 = (org.ooc.frontend.model.FunctionCall) this;

        $stack35 = $r29.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg>;

        $stack36 = (org.ooc.frontend.model.interfaces.MustBeResolved) $stack35;

        $stack37 = interfaceinvoke $stack36.<org.ooc.frontend.model.interfaces.MustBeResolved: boolean isResolved()>();

        if $stack37 != 0 goto label26;

        $stack39 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack39;

     label26:
        $r30 = (org.ooc.frontend.model.FunctionCall) this;

        $stack30 = $r30.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg>;

        $stack31 = $stack30 instanceof org.ooc.frontend.model.AddressOf;

        if $stack31 != 0 goto label27;

        $r31 = (org.ooc.frontend.model.FunctionCall) this;

        $stack33 = $r31.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg>;

        $stack34 = virtualinvoke $stack33.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Expression getGenericOperand()>();

        $r32 = (org.ooc.frontend.model.FunctionCall) this;

        $r32.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression returnArg> = $stack34;

     label27:
        if andedSomearg == 0 goto label28;

        $stack27 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack27;

     label28:
        $stack26 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack26;
    }

    private org.ooc.frontend.model.interfaces.MustBeResolved$Response unwrapIfNeeded(org.ooc.frontend.model.NodeList)
    {
        org.ooc.frontend.model.NodeList stack, $stack28, $stack30;
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl $stack9, $stack11, $stack14;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack10, $stack17, $stack34;
        org.ooc.frontend.model.Type $stack12, $stack15, $stack20, $stack36;
        boolean $stack13, $stack16, $stack18;
        java.lang.String $stack21;
        org.ooc.frontend.model.tokens.Token $stack22, $stack25, $stack27, $stack37;
        org.ooc.frontend.model.Module $stack23;
        org.ooc.frontend.model.Node $stack32, parent, $r12, $r14, $r15, $r16;
        org.ooc.frontend.model.Cast cast, $u3;
        int idx;
        java.lang.Object $stack35;
        org.ooc.frontend.model.VariableDecl $u0;
        org.ooc.frontend.model.VariableAccess $u1;
        org.ooc.frontend.model.CommaSequence $u2;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r11;
        org.ooc.frontend.model.Statement $r7;
        org.ooc.frontend.model.Expression $r10, $r13;

        this := @this: FunctionCall;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        parent = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack9 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack9 == null goto label1;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack11 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack12 = virtualinvoke $stack11.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        if $stack12 != null goto label2;

     label1:
        $stack10 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack10;

     label2:
        cast = null;

        idx = 1;

     label3:
        $stack13 = parent instanceof org.ooc.frontend.model.Cast;

        if $stack13 == 0 goto label4;

        cast = (org.ooc.frontend.model.Cast) parent;

        idx = idx + 1;

        parent = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek(int)>(idx);

        goto label3;

     label4:
        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack14 = $r2.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack15 = virtualinvoke $stack14.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack16 = virtualinvoke $stack15.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack16 == 0 goto label7;

        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack18 = virtualinvoke $r3.<org.ooc.frontend.model.FunctionCall: boolean isFriendlyHost(org.ooc.frontend.model.Node)>(parent);

        if $stack18 != 0 goto label7;

        $u0 = new org.ooc.frontend.model.VariableDecl;

        $r4 = (org.ooc.frontend.model.FunctionCall) this;

        $stack20 = virtualinvoke $r4.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type getType()>();

        $r5 = (org.ooc.frontend.model.FunctionCall) this;

        $stack21 = virtualinvoke $r5.<org.ooc.frontend.model.FunctionCall: java.lang.String generateTempName(java.lang.String,org.ooc.frontend.model.NodeList)>("genCall", stack);

        $r6 = (org.ooc.frontend.model.FunctionCall) this;

        $stack22 = $r6.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.tokens.Token startToken>;

        $stack23 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Module getModule()>();

        specialinvoke $u0.<org.ooc.frontend.model.VariableDecl: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.Module)>($stack20, $stack21, $stack22, $stack23);

        $r7 = (org.ooc.frontend.model.Statement) $u0;

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void addBeforeLine(org.ooc.frontend.model.NodeList,org.ooc.frontend.model.Statement)>(stack, $r7);

        $u1 = new org.ooc.frontend.model.VariableAccess;

        $r8 = (org.ooc.frontend.model.FunctionCall) this;

        $stack25 = $r8.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u1.<org.ooc.frontend.model.VariableAccess: void <init>(org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.tokens.Token)>($u0, $stack25);

        $r9 = (org.ooc.frontend.model.FunctionCall) this;

        $r10 = (org.ooc.frontend.model.Expression) $u1;

        virtualinvoke $r9.<org.ooc.frontend.model.FunctionCall: void setReturnArg(org.ooc.frontend.model.Expression)>($r10);

        $u2 = new org.ooc.frontend.model.CommaSequence;

        $r11 = (org.ooc.frontend.model.FunctionCall) this;

        $stack27 = $r11.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u2.<org.ooc.frontend.model.CommaSequence: void <init>(org.ooc.frontend.model.tokens.Token)>($stack27);

        $stack28 = virtualinvoke $u2.<org.ooc.frontend.model.CommaSequence: org.ooc.frontend.model.NodeList getBody()>();

        $r12 = (org.ooc.frontend.model.Node) this;

        virtualinvoke $stack28.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r12);

        $stack30 = virtualinvoke $u2.<org.ooc.frontend.model.CommaSequence: org.ooc.frontend.model.NodeList getBody()>();

        if cast == null goto label5;

        $u3 = new org.ooc.frontend.model.Cast;

        $stack35 = $u3;

        $stack36 = virtualinvoke cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Type getType()>();

        $stack37 = $u1.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.tokens.Token startToken>;

        $r13 = (org.ooc.frontend.model.Expression) $u1;

        specialinvoke $u3.<org.ooc.frontend.model.Cast: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>($r13, $stack36, $stack37);

        goto label6;

     label5:
        $stack35 = $u1;

     label6:
        $r14 = (org.ooc.frontend.model.Node) $stack35;

        virtualinvoke $stack30.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r14);

        $stack32 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $r15 = (org.ooc.frontend.model.Node) this;

        $r16 = (org.ooc.frontend.model.Node) $u2;

        virtualinvoke $stack32.<org.ooc.frontend.model.Node: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r15, $r16);

        $stack34 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack34;

     label7:
        $stack17 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack17;
    }

    private boolean isFriendlyHost(org.ooc.frontend.model.Node)
    {
        org.ooc.frontend.model.Node node;
        boolean $stack2, $stack3, $stack4, $stack5, $stack6;
        FunctionCall this;

        this := @this: FunctionCall;

        node := @parameter0: org.ooc.frontend.model.Node;

        $stack2 = node instanceof org.ooc.frontend.model.Line;

        if $stack2 != 0 goto label1;

        $stack3 = node instanceof org.ooc.frontend.model.CommaSequence;

        if $stack3 != 0 goto label1;

        $stack4 = node instanceof org.ooc.frontend.model.VariableDecl;

        if $stack4 != 0 goto label1;

        $stack5 = node instanceof org.ooc.frontend.model.Assignment;

        if $stack5 == 0 goto label2;

     label1:
        $stack6 = 1;

        goto label3;

     label2:
        $stack6 = 0;

     label3:
        return $stack6;
    }

    protected final org.ooc.frontend.model.Type getRealType(org.ooc.frontend.model.Type, org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        FunctionCall this;
        org.ooc.frontend.model.Type typeArg, $stack16, $stack10;
        java.lang.String $stack6, $stack12, $stack13;
        org.ooc.frontend.model.NodeList stack;
        org.ooc.middle.hobgoblins.Resolver res;
        boolean fatal, $stack8, $stack9, $stack14;
        org.ooc.frontend.model.Expression realExpr;
        org.ooc.frontend.model.VariableAccess $stack11;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        typeArg := @parameter0: org.ooc.frontend.model.Type;

        stack := @parameter1: org.ooc.frontend.model.NodeList;

        res := @parameter2: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter3: boolean;

        $stack6 = virtualinvoke typeArg.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        realExpr = virtualinvoke $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression getRealExpr(java.lang.String,org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>($stack6, stack, res, fatal);

        if realExpr != null goto label1;

        return null;

     label1:
        $stack8 = realExpr instanceof org.ooc.frontend.model.VariableAccess;

        if $stack8 == 0 goto label2;

        $stack11 = (org.ooc.frontend.model.VariableAccess) realExpr;

        $stack12 = virtualinvoke $stack11.<org.ooc.frontend.model.VariableAccess: java.lang.String getName()>();

        $stack13 = virtualinvoke typeArg.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack14 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>($stack13);

        if $stack14 == 0 goto label2;

        $stack16 = virtualinvoke typeArg.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type clone()>();

        return $stack16;

     label2:
        $stack9 = realExpr instanceof org.ooc.frontend.model.TypeParam;

        if $stack9 == 0 goto label3;

        $stack10 = null;

        goto label4;

     label3:
        $stack10 = virtualinvoke realExpr.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

     label4:
        return $stack10;
    }

    protected org.ooc.frontend.model.Expression getRealExpr(java.lang.String, org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl $stack13, $stack14, $stack80;
        org.ooc.frontend.model.NodeList $stack15, $stack19, stack;
        java.util.Iterator l8;
        java.lang.Object $stack18, result;
        org.ooc.frontend.model.Argument arg;
        org.ooc.frontend.model.Node $stack20;
        org.ooc.frontend.model.Expression callArg, $r5, $r7, $r10, $r11;
        java.lang.String $stack21, typeParam, $stack24, $stack33, $stack40, $stack60, $stack76;
        boolean $stack22, $stack25, $stack27, $stack30, fatal, $stack37, $stack41, $stack53, $stack58, $stack61, $stack74, $stack77, $stack81, isFirst, $stack17;
        org.ooc.frontend.model.Type $stack23, $stack26, $stack32, $stack51, ourType, $stack34;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.BuildParams $stack29, $stack36, $stack57, $stack73;
        java.io.PrintStream $stack31, $stack39, $stack59, $stack75;
        org.ooc.frontend.model.tokens.Token $stack55;
        int i;
        org.ooc.frontend.model.TypeAccess $u0;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3, $r4, $r6, $r8, $r9;

        this := @this: FunctionCall;

        typeParam := @parameter0: java.lang.String;

        stack := @parameter1: org.ooc.frontend.model.NodeList;

        res := @parameter2: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter3: boolean;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack13 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack13 != null goto label01;

        return null;

     label01:
        result = null;

        i = -1;

        isFirst = 1;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack14 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack15 = virtualinvoke $stack14.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        l8 = virtualinvoke $stack15.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label02:
        $stack17 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label13;

        $stack18 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        arg = (org.ooc.frontend.model.Argument) $stack18;

        if isFirst == 0 goto label03;

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack80 = $r2.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack81 = virtualinvoke $stack80.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack81 == 0 goto label03;

        isFirst = 0;

        goto label02;

     label03:
        i = i + 1;

        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack19 = $r3.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        $stack20 = virtualinvoke $stack19.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(i);

        callArg = (org.ooc.frontend.model.Expression) $stack20;

        $stack21 = virtualinvoke arg.<org.ooc.frontend.model.Argument: java.lang.String getName()>();

        $stack22 = virtualinvoke $stack21.<java.lang.String: boolean equals(java.lang.Object)>(typeParam);

        if $stack22 == 0 goto label05;

        result = callArg;

        $stack73 = res.<org.ooc.middle.hobgoblins.Resolver: org.ooc.frontend.BuildParams params>;

        $stack74 = $stack73.<org.ooc.frontend.BuildParams: boolean veryVerbose>;

        if $stack74 != 0 goto label04;

        $r4 = (org.ooc.frontend.model.FunctionCall) this;

        $stack77 = virtualinvoke $r4.<org.ooc.frontend.model.FunctionCall: boolean debugCondition()>();

        if $stack77 == 0 goto label13;

     label04:
        $stack75 = <java.lang.System: java.io.PrintStream out>;

        $r5 = (org.ooc.frontend.model.Expression) callArg;

        $stack76 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.ooc.frontend.model.Expression)>(typeParam, $r5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[getRealExpr] Matched <\u0001> with \u0001, argName-wise");

        virtualinvoke $stack75.<java.io.PrintStream: void println(java.lang.String)>($stack76);

        goto label13;

     label05:
        $stack23 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack24 = virtualinvoke $stack23.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack25 = virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(typeParam);

        if $stack25 == 0 goto label09;

        $stack51 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack51 != null goto label06;

        return null;

     label06:
        ourType = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack53 = virtualinvoke ourType.<org.ooc.frontend.model.Type: boolean isFlat()>();

        if $stack53 != 0 goto label07;

        ourType = virtualinvoke ourType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type clone()>();

        virtualinvoke ourType.<org.ooc.frontend.model.Type: void setPointerLevel(int)>(0);

        virtualinvoke ourType.<org.ooc.frontend.model.Type: void setReferenceLevel(int)>(0);

        virtualinvoke ourType.<org.ooc.frontend.model.Type: void setArray(boolean)>(0);

     label07:
        $u0 = new org.ooc.frontend.model.TypeAccess;

        $stack55 = callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.TypeAccess: void <init>(org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>(ourType, $stack55);

        virtualinvoke $u0.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        result = $u0;

        $stack57 = res.<org.ooc.middle.hobgoblins.Resolver: org.ooc.frontend.BuildParams params>;

        $stack58 = $stack57.<org.ooc.frontend.BuildParams: boolean veryVerbose>;

        if $stack58 != 0 goto label08;

        $r6 = (org.ooc.frontend.model.FunctionCall) this;

        $stack61 = virtualinvoke $r6.<org.ooc.frontend.model.FunctionCall: boolean debugCondition()>();

        if $stack61 == 0 goto label13;

     label08:
        $stack59 = <java.lang.System: java.io.PrintStream out>;

        $r7 = (org.ooc.frontend.model.Expression) $u0;

        $stack60 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.ooc.frontend.model.Expression)>(typeParam, $r7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[getRealExpr] Matched <\u0001> with \u0001, varAccType-wise");

        virtualinvoke $stack59.<java.io.PrintStream: void println(java.lang.String)>($stack60);

        goto label13;

     label09:
        $stack26 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack27 = virtualinvoke $stack26.<org.ooc.frontend.model.Type: boolean isGenericRecursive()>();

        if $stack27 == 0 goto label12;

        $stack29 = res.<org.ooc.middle.hobgoblins.Resolver: org.ooc.frontend.BuildParams params>;

        $stack30 = $stack29.<org.ooc.frontend.BuildParams: boolean veryVerbose>;

        if $stack30 != 0 goto label10;

        $r8 = (org.ooc.frontend.model.FunctionCall) this;

        $stack41 = virtualinvoke $r8.<org.ooc.frontend.model.FunctionCall: boolean debugCondition()>();

        if $stack41 == 0 goto label11;

     label10:
        $stack31 = <java.lang.System: java.io.PrintStream out>;

        $stack32 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack33 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type,java.lang.String)>($stack32, typeParam) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[getRealExpr] \u0001 is generic-recursive, trying to get <\u0001> in it.");

        virtualinvoke $stack31.<java.io.PrintStream: void println(java.lang.String)>($stack33);

     label11:
        $stack34 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $r9 = (org.ooc.frontend.model.FunctionCall) this;

        result = virtualinvoke $r9.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression searchTypeParam(java.lang.String,org.ooc.frontend.model.Type,org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(typeParam, $stack34, stack, res, fatal);

        if result == null goto label12;

        $stack36 = res.<org.ooc.middle.hobgoblins.Resolver: org.ooc.frontend.BuildParams params>;

        $stack37 = $stack36.<org.ooc.frontend.BuildParams: boolean veryVerbose>;

        if $stack37 == 0 goto label13;

        $stack39 = <java.lang.System: java.io.PrintStream out>;

        $r10 = (org.ooc.frontend.model.Expression) result;

        $stack40 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.ooc.frontend.model.Expression)>(typeParam, $r10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[getRealExpr] Matched <\u0001> with \u0001, genericRecursive-wise");

        virtualinvoke $stack39.<java.io.PrintStream: void println(java.lang.String)>($stack40);

        goto label13;

     label12:
        goto label02;

     label13:
        $r11 = (org.ooc.frontend.model.Expression) result;

        return $r11;
    }

    private org.ooc.frontend.model.Expression searchTypeParam(java.lang.String, org.ooc.frontend.model.Type, org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        org.ooc.frontend.model.Type haystack, realType;
        org.ooc.frontend.model.Declaration ref;
        boolean $stack13, $stack17, $stack20, fatal;
        org.ooc.frontend.model.TypeDecl typeDecl;
        java.util.LinkedHashMap $stack14;
        java.util.Set $stack15;
        java.util.Iterator keys;
        java.lang.Object $stack19;
        java.lang.String key, needle;
        FunctionCall this;
        org.ooc.frontend.model.NodeList stack, $stack23, $stack25;
        org.ooc.middle.hobgoblins.Resolver res;
        int $stack24, i;
        org.ooc.frontend.model.Node $stack26;
        org.ooc.frontend.model.Expression $stack27;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        needle := @parameter0: java.lang.String;

        haystack := @parameter1: org.ooc.frontend.model.Type;

        stack := @parameter2: org.ooc.frontend.model.NodeList;

        res := @parameter3: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter4: boolean;

        ref = virtualinvoke haystack.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack13 = ref instanceof org.ooc.frontend.model.TypeDecl;

        if $stack13 == 0 goto label3;

        typeDecl = (org.ooc.frontend.model.TypeDecl) ref;

        $stack14 = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack15 = virtualinvoke $stack14.<java.util.LinkedHashMap: java.util.Set keySet()>();

        keys = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>();

        i = -1;

     label1:
        $stack17 = interfaceinvoke keys.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label3;

        i = i + 1;

        $stack19 = interfaceinvoke keys.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $stack19;

        $stack20 = virtualinvoke key.<java.lang.String: boolean equals(java.lang.Object)>(needle);

        if $stack20 == 0 goto label2;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        realType = virtualinvoke $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Type getRealType(org.ooc.frontend.model.Type,org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(haystack, stack, res, fatal);

        if realType == null goto label2;

        $stack23 = virtualinvoke realType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack24 = virtualinvoke $stack23.<org.ooc.frontend.model.NodeList: int size()>();

        if i >= $stack24 goto label2;

        $stack25 = virtualinvoke realType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack26 = virtualinvoke $stack25.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(i);

        $stack27 = (org.ooc.frontend.model.Expression) $stack26;

        return $stack27;

     label2:
        goto label1;

     label3:
        return null;
    }

    protected org.ooc.frontend.model.Access getExprParam(java.lang.String, org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl $stack8;
        java.lang.String typeParam, $stack12, $stack17;
        org.ooc.frontend.model.NodeList stack;
        org.ooc.middle.hobgoblins.Resolver res;
        boolean fatal, $stack18, $stack20, $stack21, $stack25, $stack27, $stack10;
        org.ooc.frontend.model.Expression callArg;
        java.io.PrintStream $stack11, $stack22, $stack26, $stack28;
        org.ooc.frontend.model.Type $stack14, $stack16, $stack19;
        org.ooc.frontend.model.tokens.Token $stack24;
        java.lang.Object result;
        org.ooc.frontend.model.VariableAccess $u0;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3, $r4, $r5, $r7;
        org.ooc.frontend.model.Access $r6, $r8;

        this := @this: FunctionCall;

        typeParam := @parameter0: java.lang.String;

        stack := @parameter1: org.ooc.frontend.model.NodeList;

        res := @parameter2: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter3: boolean;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack8 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack8 != null goto label1;

        return null;

     label1:
        result = null;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        callArg = virtualinvoke $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression getRealExpr(java.lang.String,org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(typeParam, stack, res, fatal);

        if callArg == null goto label5;

        $stack14 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack14 == null goto label5;

        $stack16 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack17 = virtualinvoke $stack16.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack18 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>("Class");

        if $stack18 == 0 goto label2;

        result = (org.ooc.frontend.model.Access) callArg;

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack27 = virtualinvoke $r2.<org.ooc.frontend.model.FunctionCall: boolean debugCondition()>();

        if $stack27 == 0 goto label5;

        $stack28 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack28.<java.io.PrintStream: void println(java.lang.String)>("[getExprParam] callArg type name is \'Class\'");

        goto label5;

     label2:
        $stack19 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack20 = virtualinvoke $stack19.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack20 == 0 goto label4;

        $u0 = new org.ooc.frontend.model.VariableAccess;

        $stack24 = callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.VariableAccess: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>(typeParam, $stack24);

        result = $u0;

        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack25 = virtualinvoke $r3.<org.ooc.frontend.model.FunctionCall: boolean debugCondition()>();

        if $stack25 == 0 goto label3;

        $stack26 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack26.<java.io.PrintStream: void println(java.lang.String)>("[getExprParam] callArg type is generic");

     label3:
        goto label5;

     label4:
        result = (org.ooc.frontend.model.Access) callArg;

        $r4 = (org.ooc.frontend.model.FunctionCall) this;

        $stack21 = virtualinvoke $r4.<org.ooc.frontend.model.FunctionCall: boolean debugCondition()>();

        if $stack21 == 0 goto label5;

        $stack22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack22.<java.io.PrintStream: void println(java.lang.String)>("[getExprParam] callArg-normal");

     label5:
        $r5 = (org.ooc.frontend.model.FunctionCall) this;

        $stack10 = virtualinvoke $r5.<org.ooc.frontend.model.FunctionCall: boolean debugCondition()>();

        if $stack10 == 0 goto label6;

        $stack11 = <java.lang.System: java.io.PrintStream out>;

        $r6 = (org.ooc.frontend.model.Access) result;

        $r7 = (org.ooc.frontend.model.FunctionCall) this;

        $stack12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Access,java.lang.String,org.ooc.frontend.model.FunctionCall)>($r6, typeParam, $r7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Found exprParam \u0001 for typeParam \u0001 in \u0001");

        virtualinvoke $stack11.<java.io.PrintStream: void println(java.lang.String)>($stack12);

     label6:
        $r8 = (org.ooc.frontend.model.Access) result;

        return $r8;
    }

    private boolean debugCondition()
    {
        FunctionCall this;

        this := @this: FunctionCall;

        return 0;
    }

    protected void autocast(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver)
    {
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl $stack8, $stack11;
        org.ooc.frontend.model.NodeList $stack9, $stack29, $stack33, $stack36, $stack37, $stack39, stack;
        java.util.Iterator callArgs, implArgs;
        boolean $stack14, $stack22, $stack30, $stack13;
        java.lang.Object $stack15, $stack16;
        org.ooc.frontend.model.Expression callArg;
        org.ooc.frontend.model.Argument implArg;
        org.ooc.frontend.model.Type $stack17, $stack19, $stack20, $stack21, $stack23, $stack25, $stack28, $stack38, targetType;
        org.ooc.frontend.model.Declaration $stack24, $stack26;
        org.ooc.frontend.model.tokens.Token $stack32;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.model.Cast $u0;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3;
        org.ooc.frontend.model.Node $r4, $r5;

        this := @this: FunctionCall;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack8 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack8 != null goto label1;

        return;

     label1:
        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack9 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        callArgs = virtualinvoke $stack9.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack11 = $r2.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        implArgs = virtualinvoke $stack11.<org.ooc.frontend.model.FunctionDecl: java.util.Iterator getThisLessArgsIter()>();

     label2:
        $stack13 = interfaceinvoke implArgs.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label6;

        $stack14 = interfaceinvoke callArgs.<java.util.Iterator: boolean hasNext()>();

        if $stack14 == 0 goto label6;

        $stack15 = interfaceinvoke callArgs.<java.util.Iterator: java.lang.Object next()>();

        callArg = (org.ooc.frontend.model.Expression) $stack15;

        $stack16 = interfaceinvoke implArgs.<java.util.Iterator: java.lang.Object next()>();

        implArg = (org.ooc.frontend.model.Argument) $stack16;

        $stack17 = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        if $stack17 == null goto label2;

        $stack19 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack19 != null goto label3;

        goto label2;

     label3:
        $stack20 = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack21 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack22 = virtualinvoke $stack20.<org.ooc.frontend.model.Type: boolean isSuperOf(org.ooc.frontend.model.Type)>($stack21);

        if $stack22 == 0 goto label5;

        $stack23 = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack24 = virtualinvoke $stack23.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        if $stack24 == null goto label5;

        $stack25 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack26 = virtualinvoke $stack25.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        if $stack26 == null goto label5;

        targetType = virtualinvoke implArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack28 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack29 = virtualinvoke $stack28.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack30 = virtualinvoke $stack29.<org.ooc.frontend.model.NodeList: boolean isEmpty()>();

        if $stack30 != 0 goto label4;

        targetType = virtualinvoke targetType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type clone()>();

        $stack36 = virtualinvoke targetType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        virtualinvoke $stack36.<org.ooc.frontend.model.NodeList: void clear()>();

        $stack37 = virtualinvoke targetType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack38 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack39 = virtualinvoke $stack38.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        virtualinvoke $stack37.<org.ooc.frontend.model.NodeList: void addAll(org.ooc.frontend.model.NodeList)>($stack39);

     label4:
        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack33 = $r3.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        $u0 = new org.ooc.frontend.model.Cast;

        $stack32 = callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.Cast: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>(callArg, targetType, $stack32);

        $r4 = (org.ooc.frontend.model.Node) callArg;

        $r5 = (org.ooc.frontend.model.Node) $u0;

        virtualinvoke $stack33.<org.ooc.frontend.model.NodeList: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r4, $r5);

     label5:
        goto label2;

     label6:
        return;
    }

    protected java.lang.String guessCorrectName(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver)
    {
        org.ooc.frontend.model.NodeList mainStack, $stack18, $stack23, $u0;
        int $stack14, distance, bestDistance, i;
        boolean $stack16, $stack20, $stack25, $stack28, $stack41;
        org.ooc.frontend.model.Node $stack17, node;
        java.lang.Object $stack21, $stack27, $stack34;
        org.ooc.frontend.model.Module $stack22, i#8;
        java.util.Iterator l9, i#5, node#9;
        org.ooc.frontend.model.FunctionDecl decl, node;
        FunctionCall this;
        java.lang.String $stack30, $stack31, $stack35, $stack36, bestMatch;
        org.ooc.frontend.model.Scope $stack42;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.model.Import distance;
        org.ooc.frontend.model.FunctionCall $r0, $r1;

        this := @this: FunctionCall;

        mainStack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        bestDistance = 2147483647;

        bestMatch = null;

        $u0 = new org.ooc.frontend.model.NodeList;

        specialinvoke $u0.<org.ooc.frontend.model.NodeList: void <init>()>();

        $stack14 = virtualinvoke mainStack.<org.ooc.frontend.model.NodeList: int size()>();

        i = $stack14 - 1;

     label01:
        if i < 0 goto label04;

        node = virtualinvoke mainStack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(i);

        $stack41 = node instanceof org.ooc.frontend.model.Scope;

        if $stack41 != 0 goto label02;

        goto label03;

     label02:
        $stack42 = (org.ooc.frontend.model.Scope) node;

        interfaceinvoke $stack42.<org.ooc.frontend.model.Scope: void getFunctions(org.ooc.frontend.model.NodeList)>($u0);

     label03:
        i = i + -1;

        goto label01;

     label04:
        i#5 = virtualinvoke $u0.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label05:
        $stack16 = interfaceinvoke i#5.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label07;

        $stack34 = interfaceinvoke i#5.<java.util.Iterator: java.lang.Object next()>();

        node = (org.ooc.frontend.model.FunctionDecl) $stack34;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack35 = $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack36 = virtualinvoke node.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        distance = staticinvoke <org.ooc.frontend.Levenshtein: int distance(java.lang.String,java.lang.String)>($stack35, $stack36);

        if distance >= bestDistance goto label06;

        bestDistance = distance;

        bestMatch = virtualinvoke node.<org.ooc.frontend.model.FunctionDecl: java.lang.String getProtoRepr()>();

     label06:
        goto label05;

     label07:
        $stack17 = virtualinvoke mainStack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(0);

        i#8 = (org.ooc.frontend.model.Module) $stack17;

        $stack18 = virtualinvoke i#8.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getGlobalImports()>();

        node#9 = virtualinvoke $stack18.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label08:
        $stack20 = interfaceinvoke node#9.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label12;

        $stack21 = interfaceinvoke node#9.<java.util.Iterator: java.lang.Object next()>();

        distance = (org.ooc.frontend.model.Import) $stack21;

        $stack22 = virtualinvoke distance.<org.ooc.frontend.model.Import: org.ooc.frontend.model.Module getModule()>();

        $stack23 = $stack22.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList body>;

        l9 = virtualinvoke $stack23.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label09:
        $stack25 = interfaceinvoke l9.<java.util.Iterator: boolean hasNext()>();

        if $stack25 == 0 goto label11;

        $stack27 = interfaceinvoke l9.<java.util.Iterator: java.lang.Object next()>();

        node = (org.ooc.frontend.model.Node) $stack27;

        $stack28 = node instanceof org.ooc.frontend.model.FunctionDecl;

        if $stack28 == 0 goto label10;

        decl = (org.ooc.frontend.model.FunctionDecl) node;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack30 = $r1.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack31 = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        distance = staticinvoke <org.ooc.frontend.Levenshtein: int distance(java.lang.String,java.lang.String)>($stack30, $stack31);

        if distance >= bestDistance goto label10;

        bestDistance = distance;

        bestMatch = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getProtoRepr()>();

     label10:
        goto label09;

     label11:
        goto label08;

     label12:
        if bestDistance <= 3 goto label13;

        return null;

     label13:
        return bestMatch;
    }

    protected org.ooc.frontend.model.interfaces.MustBeResolved$Response resolveConstructorCall(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean) throws org.ooc.middle.OocCompilationError
    {
        org.ooc.frontend.model.NodeList mainStack;
        int typeIndex, classDecl#4;
        org.ooc.frontend.model.Node $stack9, $stack11, $r1, $r5, $r9, $r12;
        boolean isSuper, $stack28;
        org.ooc.frontend.model.FunctionDecl outDecl, $stack14, $stack15, $stack17;
        FunctionCall this;
        java.lang.String $stack12, $stack13, $stack18, $stack22, $stack23, $stack36, $stack37, $stack38, $stack40, $stack41, $stack42, $stack45, $stack46, $stack44, $stack21;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack16, $stack19;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.model.ClassDecl $stack29, classDecl;
        java.lang.Object typeDecl;
        org.ooc.middle.OocCompilationError $u0, $u1, $u2, $u3;
        org.ooc.frontend.model.FunctionCall $r0, $r3, $r7, $r11, $r14, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.Throwable $r2, $r6, $r10, $r13;
        org.ooc.frontend.model.TypeDecl $r4, $r8, $r15;

        this := @this: FunctionCall;

        mainStack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        isSuper := @parameter2: boolean;

        typeIndex = virtualinvoke mainStack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/TypeDecl;");

        if typeIndex != -1 goto label03;

        $u0 = new org.ooc.middle.OocCompilationError;

        if isSuper == 0 goto label01;

        $stack44 = "super";

        goto label02;

     label01:
        $stack44 = "this";

     label02:
        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack45 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String getArgsRepr()>();

        $stack46 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack44, $stack45) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001 call outside a class declaration, doesn\'t make sense.");

        $r1 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r1, mainStack, $stack46);

        $r2 = (java.lang.Throwable) $u0;

        throw $r2;

     label03:
        $stack9 = virtualinvoke mainStack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(typeIndex);

        typeDecl = (org.ooc.frontend.model.TypeDecl) $stack9;

        if isSuper == 0 goto label06;

        $stack28 = typeDecl instanceof org.ooc.frontend.model.ClassDecl;

        if $stack28 != 0 goto label04;

        $u1 = new org.ooc.middle.OocCompilationError;

        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack40 = virtualinvoke $r3.<org.ooc.frontend.model.FunctionCall: java.lang.String getArgsRepr()>();

        $r4 = (org.ooc.frontend.model.TypeDecl) typeDecl;

        $stack41 = virtualinvoke $r4.<org.ooc.frontend.model.TypeDecl: java.lang.String getName()>();

        $stack42 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack40, $stack41) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("super\u0001 call in type def \u0001 which is not a class! wtf?");

        $r5 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r5, mainStack, $stack42);

        $r6 = (java.lang.Throwable) $u1;

        throw $r6;

     label04:
        classDecl = (org.ooc.frontend.model.ClassDecl) typeDecl;

        $stack29 = virtualinvoke classDecl.<org.ooc.frontend.model.ClassDecl: org.ooc.frontend.model.ClassDecl getSuperRef()>();

        if $stack29 != null goto label05;

        $u2 = new org.ooc.middle.OocCompilationError;

        $r7 = (org.ooc.frontend.model.FunctionCall) this;

        $stack36 = virtualinvoke $r7.<org.ooc.frontend.model.FunctionCall: java.lang.String getArgsRepr()>();

        $r8 = (org.ooc.frontend.model.TypeDecl) typeDecl;

        $stack37 = virtualinvoke $r8.<org.ooc.frontend.model.TypeDecl: java.lang.String getName()>();

        $stack38 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack36, $stack37) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("super\u0001 call in class \u0001 which has no super-class!");

        $r9 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u2.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r9, mainStack, $stack38);

        $r10 = (java.lang.Throwable) $u2;

        throw $r10;

     label05:
        typeDecl = virtualinvoke classDecl.<org.ooc.frontend.model.ClassDecl: org.ooc.frontend.model.ClassDecl getSuperRef()>();

     label06:
        classDecl#4 = virtualinvoke mainStack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/FunctionDecl;");

        if classDecl#4 != -1 goto label09;

        $u3 = new org.ooc.middle.OocCompilationError;

        if isSuper == 0 goto label07;

        $stack21 = "super";

        goto label08;

     label07:
        $stack21 = "this";

     label08:
        $r11 = (org.ooc.frontend.model.FunctionCall) this;

        $stack22 = virtualinvoke $r11.<org.ooc.frontend.model.FunctionCall: java.lang.String getArgsRepr()>();

        $stack23 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack21, $stack22) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001 call outside a function declaration, doesn\'t make sense.");

        $r12 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u3.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r12, mainStack, $stack23);

        $r13 = (java.lang.Throwable) $u3;

        throw $r13;

     label09:
        $stack11 = virtualinvoke mainStack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(classDecl#4);

        outDecl = (org.ooc.frontend.model.FunctionDecl) $stack11;

        $stack12 = virtualinvoke outDecl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        $r14 = (org.ooc.frontend.model.FunctionCall) this;

        $stack13 = virtualinvoke $r14.<org.ooc.frontend.model.FunctionCall: java.lang.String getSuffix()>();

        $r15 = (org.ooc.frontend.model.TypeDecl) typeDecl;

        $r16 = (org.ooc.frontend.model.FunctionCall) this;

        $stack14 = virtualinvoke $r15.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.FunctionDecl getFunction(java.lang.String,java.lang.String,org.ooc.frontend.model.FunctionCall)>($stack12, $stack13, $r16);

        $r17 = (org.ooc.frontend.model.FunctionCall) this;

        $r17.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl> = $stack14;

        $r18 = (org.ooc.frontend.model.FunctionCall) this;

        $stack15 = $r18.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack15 == null goto label10;

        $r19 = (org.ooc.frontend.model.FunctionCall) this;

        $stack17 = $r19.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack18 = virtualinvoke $stack17.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        $r20 = (org.ooc.frontend.model.FunctionCall) this;

        virtualinvoke $r20.<org.ooc.frontend.model.FunctionCall: void setName(java.lang.String)>($stack18);

        $r21 = (org.ooc.frontend.model.FunctionCall) this;

        virtualinvoke $r21.<org.ooc.frontend.model.FunctionCall: void turnIntoMemberCall(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver)>(mainStack, res);

        $stack19 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack19;

     label10:
        $stack16 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack16;
    }

    protected org.ooc.frontend.model.interfaces.MustBeResolved$Response resolveRegular(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        FunctionCall this;
        org.ooc.frontend.model.NodeList stack, $stack56;
        java.lang.String $stack9, $stack10, $stack16, $stack18, $stack19, $stack26, $stack28, $stack45, $stack46;
        org.ooc.frontend.model.FunctionDecl $stack11, $stack12, $stack31, $stack34, $stack49, $stack51, $stack54, $stack62, $stack13, $stack14;
        boolean $stack20, $stack22, fatal, $stack32, $stack40, $stack43, $stack47, $stack50, $stack52, $stack58;
        org.ooc.frontend.model.Type $stack21, $stack23, $stack27, $stack30, $stack42, $stack48;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack24, $stack29, $stack15;
        org.ooc.frontend.model.Module $stack33, $stack53, $stack61, module;
        org.ooc.frontend.model.Node $stack37, $stack55, $r20;
        java.lang.Iterable $stack38;
        java.lang.Object $stack41, $stack60;
        org.ooc.frontend.model.VariableDecl varDecl, module#19;
        org.ooc.frontend.model.FuncType funcType, typeDeclaration#20;
        org.ooc.middle.hobgoblins.Resolver res;
        java.util.Iterator typeDeclaration, imp#10;
        org.ooc.frontend.model.Import imp;
        int module#8;
        org.ooc.frontend.model.TypeDecl typeDeclaration#9;
        org.ooc.middle.OocCompilationError $u0;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        java.lang.Throwable $r21;

        this := @this: FunctionCall;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack10 = $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack9 = $r1.<org.ooc.frontend.model.FunctionCall: java.lang.String suffix>;

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack11 = virtualinvoke $r2.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl getFunction(java.lang.String,java.lang.String,org.ooc.frontend.model.FunctionCall,org.ooc.frontend.model.NodeList)>($stack10, $stack9, $r3, stack);

        $r4 = (org.ooc.frontend.model.FunctionCall) this;

        $r4.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl> = $stack11;

        $r5 = (org.ooc.frontend.model.FunctionCall) this;

        $stack12 = $r5.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack12 != null goto label03;

        $stack55 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(0);

        module = (org.ooc.frontend.model.Module) $stack55;

        $stack56 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getGlobalImports()>();

        typeDeclaration = virtualinvoke $stack56.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label01:
        $stack58 = interfaceinvoke typeDeclaration.<java.util.Iterator: boolean hasNext()>();

        if $stack58 == 0 goto label03;

        $stack60 = interfaceinvoke typeDeclaration.<java.util.Iterator: java.lang.Object next()>();

        imp = (org.ooc.frontend.model.Import) $stack60;

        $stack61 = virtualinvoke imp.<org.ooc.frontend.model.Import: org.ooc.frontend.model.Module getModule()>();

        $r6 = (org.ooc.frontend.model.FunctionCall) this;

        virtualinvoke $r6.<org.ooc.frontend.model.FunctionCall: void searchIn(org.ooc.frontend.model.Module)>($stack61);

        $r7 = (org.ooc.frontend.model.FunctionCall) this;

        $stack62 = $r7.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack62 == null goto label02;

        goto label03;

     label02:
        goto label01;

     label03:
        $r8 = (org.ooc.frontend.model.FunctionCall) this;

        $stack13 = $r8.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack13 != null goto label06;

        module#8 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/TypeDecl;");

        if module#8 == -1 goto label06;

        $stack37 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(module#8);

        typeDeclaration#9 = (org.ooc.frontend.model.TypeDecl) $stack37;

        $stack38 = virtualinvoke typeDeclaration#9.<org.ooc.frontend.model.TypeDecl: java.lang.Iterable getVariables()>();

        imp#10 = interfaceinvoke $stack38.<java.lang.Iterable: java.util.Iterator iterator()>();

     label04:
        $stack40 = interfaceinvoke imp#10.<java.util.Iterator: boolean hasNext()>();

        if $stack40 == 0 goto label06;

        $stack41 = interfaceinvoke imp#10.<java.util.Iterator: java.lang.Object next()>();

        varDecl = (org.ooc.frontend.model.VariableDecl) $stack41;

        $stack42 = virtualinvoke varDecl.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        $stack43 = $stack42 instanceof org.ooc.frontend.model.FuncType;

        if $stack43 == 0 goto label05;

        $stack45 = virtualinvoke varDecl.<org.ooc.frontend.model.VariableDecl: java.lang.String getName()>();

        $r9 = (org.ooc.frontend.model.FunctionCall) this;

        $stack46 = $r9.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack47 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>($stack46);

        if $stack47 == 0 goto label05;

        $stack48 = virtualinvoke varDecl.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        funcType = (org.ooc.frontend.model.FuncType) $stack48;

        $stack49 = virtualinvoke funcType.<org.ooc.frontend.model.FuncType: org.ooc.frontend.model.FunctionDecl getDecl()>();

        $r10 = (org.ooc.frontend.model.FunctionCall) this;

        $stack50 = virtualinvoke $r10.<org.ooc.frontend.model.FunctionCall: boolean matchesArgs(org.ooc.frontend.model.FunctionDecl)>($stack49);

        if $stack50 == 0 goto label05;

        $stack51 = virtualinvoke funcType.<org.ooc.frontend.model.FuncType: org.ooc.frontend.model.FunctionDecl getDecl()>();

        $r11 = (org.ooc.frontend.model.FunctionCall) this;

        $r11.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl> = $stack51;

        $stack52 = virtualinvoke varDecl.<org.ooc.frontend.model.VariableDecl: boolean isGlobal()>();

        if $stack52 == 0 goto label06;

        $r12 = (org.ooc.frontend.model.FunctionCall) this;

        $stack54 = $r12.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack53 = varDecl.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Module module>;

        $stack54.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Module module> = $stack53;

        goto label06;

     label05:
        goto label04;

     label06:
        $r13 = (org.ooc.frontend.model.FunctionCall) this;

        $stack14 = $r13.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack14 != null goto label11;

        $r14 = (org.ooc.frontend.model.FunctionCall) this;

        $stack16 = $r14.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $r15 = (org.ooc.frontend.model.FunctionCall) this;

        module#19 = virtualinvoke $r15.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.VariableDecl getVariable(java.lang.String,org.ooc.frontend.model.NodeList,org.ooc.frontend.model.VariableAccess)>($stack16, stack, null);

        if module#19 == null goto label11;

        $stack18 = virtualinvoke module#19.<org.ooc.frontend.model.VariableDecl: java.lang.String getName()>();

        $r16 = (org.ooc.frontend.model.FunctionCall) this;

        $stack19 = $r16.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack20 = virtualinvoke $stack18.<java.lang.String: boolean equals(java.lang.Object)>($stack19);

        if $stack20 == 0 goto label11;

        $stack21 = virtualinvoke module#19.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        $stack22 = $stack21 instanceof org.ooc.frontend.model.FuncType;

        if $stack22 == 0 goto label08;

        $stack30 = virtualinvoke module#19.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        typeDeclaration#20 = (org.ooc.frontend.model.FuncType) $stack30;

        $stack31 = virtualinvoke typeDeclaration#20.<org.ooc.frontend.model.FuncType: org.ooc.frontend.model.FunctionDecl getDecl()>();

        $r17 = (org.ooc.frontend.model.FunctionCall) this;

        $r17.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl> = $stack31;

        $stack32 = virtualinvoke module#19.<org.ooc.frontend.model.VariableDecl: boolean isGlobal()>();

        if $stack32 == 0 goto label07;

        $r18 = (org.ooc.frontend.model.FunctionCall) this;

        $stack34 = $r18.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack33 = module#19.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Module module>;

        $stack34.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Module module> = $stack33;

     label07:
        goto label11;

     label08:
        $stack23 = virtualinvoke module#19.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        if $stack23 != null goto label09;

        $stack29 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack29;

     label09:
        if fatal == 0 goto label10;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r19 = (org.ooc.frontend.model.FunctionCall) this;

        $stack26 = $r19.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack27 = virtualinvoke module#19.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        $stack28 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.ooc.frontend.model.Type)>($stack26, $stack27) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to call \u0001, which isn\'t a function pointer (Func), but a \u0001");

        $r20 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r20, stack, $stack28);

        $r21 = (java.lang.Throwable) $u0;

        throw $r21;

     label10:
        $stack24 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack24;

     label11:
        $stack15 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack15;
    }

    private void turnIntoMemberCall(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver)
    {
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl $stack5, $stack12, $stack28;
        boolean $stack6, $stack13, $stack15, $stack19;
        org.ooc.frontend.model.tokens.Token $stack8, $stack11, $stack32, $stack33;
        org.ooc.frontend.model.NodeList stack;
        org.ooc.middle.hobgoblins.Resolver res;
        java.lang.String $stack14, $stack20, $stack31;
        org.ooc.frontend.model.Node $stack16, $r14, $r15;
        java.io.PrintStream $stack18;
        org.ooc.frontend.model.TypeDecl $stack29;
        org.ooc.frontend.model.Type $stack30;
        org.ooc.frontend.model.MemberCall memberCall#2, $u1, $u3;
        org.ooc.frontend.model.VariableAccess $u0, $u2;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r16;
        org.ooc.frontend.model.Expression $r4, $r8;

        this := @this: FunctionCall;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack5 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack6 = virtualinvoke $stack5.<org.ooc.frontend.model.FunctionDecl: boolean isStatic()>();

        if $stack6 == 0 goto label1;

        $u1 = new org.ooc.frontend.model.MemberCall;

        $u0 = new org.ooc.frontend.model.VariableAccess;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack28 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack29 = virtualinvoke $stack28.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl getTypeDecl()>();

        $stack30 = virtualinvoke $stack29.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getType()>();

        $stack31 = virtualinvoke $stack30.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack32 = $r2.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.VariableAccess: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack31, $stack32);

        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack33 = $r3.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.tokens.Token startToken>;

        $r4 = (org.ooc.frontend.model.Expression) $u0;

        $r5 = (org.ooc.frontend.model.FunctionCall) this;

        specialinvoke $u1.<org.ooc.frontend.model.MemberCall: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.FunctionCall,org.ooc.frontend.model.tokens.Token)>($r4, $r5, $stack33);

        memberCall#2 = $u1;

        goto label2;

     label1:
        $u2 = new org.ooc.frontend.model.VariableAccess;

        $r6 = (org.ooc.frontend.model.FunctionCall) this;

        $stack8 = $r6.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u2.<org.ooc.frontend.model.VariableAccess: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>("this", $stack8);

        virtualinvoke $u2.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, 1);

        $u3 = new org.ooc.frontend.model.MemberCall;

        $r7 = (org.ooc.frontend.model.FunctionCall) this;

        $stack11 = $r7.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.tokens.Token startToken>;

        $r8 = (org.ooc.frontend.model.Expression) $u2;

        $r9 = (org.ooc.frontend.model.FunctionCall) this;

        specialinvoke $u3.<org.ooc.frontend.model.MemberCall: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.FunctionCall,org.ooc.frontend.model.tokens.Token)>($r8, $r9, $stack11);

        memberCall#2 = $u3;

     label2:
        $r10 = (org.ooc.frontend.model.FunctionCall) this;

        $stack12 = $r10.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        virtualinvoke memberCall#2.<org.ooc.frontend.model.MemberCall: void setImpl(org.ooc.frontend.model.FunctionDecl)>($stack12);

        $r11 = (org.ooc.frontend.model.FunctionCall) this;

        $stack13 = virtualinvoke $r11.<org.ooc.frontend.model.FunctionCall: boolean isSuperCall()>();

        virtualinvoke memberCall#2.<org.ooc.frontend.model.MemberCall: void setSuperCall(boolean)>($stack13);

        $r12 = (org.ooc.frontend.model.FunctionCall) this;

        $stack14 = $r12.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("super");

        if $stack15 == 0 goto label3;

        $stack18 = <java.lang.System: java.io.PrintStream out>;

        $stack19 = virtualinvoke memberCall#2.<org.ooc.frontend.model.MemberCall: boolean isSuperCall()>();

        $r13 = (org.ooc.frontend.model.FunctionCall) this;

        $stack20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.FunctionCall,org.ooc.frontend.model.MemberCall,boolean)>($r13, memberCall#2, $stack19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("KALAMAZOO just replaced \u0001 memberCall \u0001, isSuper = \u0001");

        virtualinvoke $stack18.<java.io.PrintStream: void println(java.lang.String)>($stack20);

     label3:
        $stack16 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $r14 = (org.ooc.frontend.model.Node) this;

        $r15 = (org.ooc.frontend.model.Node) memberCall#2;

        virtualinvoke $stack16.<org.ooc.frontend.model.Node: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r14, $r15);

        $r16 = (org.ooc.frontend.model.FunctionCall) this;

        $r16.<org.ooc.frontend.model.FunctionCall: boolean dead> = 1;

        return;
    }

    protected void searchIn(org.ooc.frontend.model.Module)
    {
        org.ooc.frontend.model.Module module;
        org.ooc.frontend.model.NodeList $stack5;
        java.util.Iterator l2;
        boolean $stack7, $stack9, $stack11;
        java.lang.Object $stack8;
        org.ooc.frontend.model.Node node;
        org.ooc.frontend.model.FunctionDecl decl;
        FunctionCall this;
        org.ooc.frontend.model.FunctionCall $r0, $r1;

        this := @this: FunctionCall;

        module := @parameter0: org.ooc.frontend.model.Module;

        $stack5 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getBody()>();

        l2 = virtualinvoke $stack5.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        node = (org.ooc.frontend.model.Node) $stack8;

        $stack9 = node instanceof org.ooc.frontend.model.FunctionDecl;

        if $stack9 == 0 goto label2;

        decl = (org.ooc.frontend.model.FunctionDecl) node;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack11 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionCall: boolean matches(org.ooc.frontend.model.FunctionDecl)>(decl);

        if $stack11 == 0 goto label2;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl> = decl;

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    public boolean matches(org.ooc.frontend.model.FunctionDecl)
    {
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl decl;
        boolean $stack2, $stack3, $stack4;
        org.ooc.frontend.model.FunctionCall $r0, $r1;

        this := @this: FunctionCall;

        decl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack2 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionCall: boolean matchesName(org.ooc.frontend.model.FunctionDecl)>(decl);

        if $stack2 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack3 = virtualinvoke $r1.<org.ooc.frontend.model.FunctionCall: boolean matchesArgs(org.ooc.frontend.model.FunctionDecl)>(decl);

        if $stack3 == 0 goto label1;

        $stack4 = 1;

        goto label2;

     label1:
        $stack4 = 0;

     label2:
        return $stack4;
    }

    public boolean matchesArgs(org.ooc.frontend.model.FunctionDecl)
    {
        org.ooc.frontend.model.FunctionDecl decl;
        org.ooc.frontend.model.NodeList $stack3, $stack6, $stack8, $stack12;
        boolean $stack5, $stack10;
        FunctionCall this;
        int $stack7, $stack13, $stack14, numArgs;
        org.ooc.frontend.model.Node $stack9;
        org.ooc.frontend.model.FunctionCall $r0, $r1;

        this := @this: FunctionCall;

        decl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        $stack3 = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        numArgs = virtualinvoke $stack3.<org.ooc.frontend.model.NodeList: int size()>();

        $stack5 = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack5 == 0 goto label1;

        numArgs = numArgs + -1;

     label1:
        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack6 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        $stack7 = virtualinvoke $stack6.<org.ooc.frontend.model.NodeList: int size()>();

        if numArgs == $stack7 goto label2;

        if numArgs <= 0 goto label3;

        $stack8 = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        $stack9 = virtualinvoke $stack8.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node getLast()>();

        $stack10 = $stack9 instanceof org.ooc.frontend.model.VarArg;

        if $stack10 == 0 goto label3;

        $stack13 = numArgs - 1;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack12 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        $stack14 = virtualinvoke $stack12.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack13 > $stack14 goto label3;

     label2:
        return 1;

     label3:
        return 0;
    }

    public boolean matchesName(org.ooc.frontend.model.FunctionDecl)
    {
        org.ooc.frontend.model.FunctionDecl decl;
        FunctionCall this;
        java.lang.String $stack2, $stack3;
        boolean $stack4;
        org.ooc.frontend.model.FunctionCall $r0, $r1;

        this := @this: FunctionCall;

        decl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack3 = $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack2 = $r1.<org.ooc.frontend.model.FunctionCall: java.lang.String suffix>;

        $stack4 = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: boolean isNamed(java.lang.String,java.lang.String)>($stack3, $stack2);

        return $stack4;
    }

    public java.lang.String getArgsRepr()
    {
        FunctionCall this;
        org.ooc.frontend.model.NodeList $stack6;
        java.util.Iterator iter;
        boolean $stack8, $stack15;
        java.lang.String $stack10, $stack13;
        java.lang.Object $stack11;
        org.ooc.frontend.model.Expression arg;
        org.ooc.frontend.model.Type $stack12;
        java.lang.StringBuilder $u0;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack6 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        iter = virtualinvoke $stack6.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label3;

        $stack11 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        arg = (org.ooc.frontend.model.Expression) $stack11;

        $stack12 = virtualinvoke arg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type,org.ooc.frontend.model.Expression)>($stack12, arg) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack15 == 0 goto label2;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        goto label1;

     label3:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;
    }

    public boolean isConstructorCall()
    {
        FunctionCall this;
        java.lang.String $stack1, $stack3;
        boolean $stack2, $stack4, $stack5;
        org.ooc.frontend.model.FunctionCall $r0, $r1;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack2 = virtualinvoke $stack1.<java.lang.String: boolean equals(java.lang.Object)>("this");

        if $stack2 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack3 = $r1.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack4 = virtualinvoke $stack3.<java.lang.String: boolean equals(java.lang.Object)>("super");

        if $stack4 == 0 goto label2;

     label1:
        $stack5 = 1;

        goto label3;

     label2:
        $stack5 = 0;

     label3:
        return $stack5;
    }

    public java.lang.String getProtoRepr()
    {
        FunctionCall this;
        java.lang.String $stack1, $stack2, $stack3, $stack4, $stack5, $stack7, $stack8, $stack9, $stack10;
        int $stack6;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String suffix>;

        if $stack1 == null goto label1;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack5 = $r1.<org.ooc.frontend.model.FunctionCall: java.lang.String suffix>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: int length()>();

        if $stack6 != 0 goto label2;

     label1:
        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack2 = $r2.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack3 = virtualinvoke $r3.<org.ooc.frontend.model.FunctionCall: java.lang.String getArgsRepr()>();

        $stack4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack2, $stack3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");

        return $stack4;

     label2:
        $r4 = (org.ooc.frontend.model.FunctionCall) this;

        $stack7 = $r4.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $r5 = (org.ooc.frontend.model.FunctionCall) this;

        $stack8 = $r5.<org.ooc.frontend.model.FunctionCall: java.lang.String suffix>;

        $r6 = (org.ooc.frontend.model.FunctionCall) this;

        $stack9 = virtualinvoke $r6.<org.ooc.frontend.model.FunctionCall: java.lang.String getArgsRepr()>();

        $stack10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($stack7, $stack8, $stack9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001~\u0001\u0001");

        return $stack10;
    }

    public java.lang.String toString()
    {
        FunctionCall this;
        java.lang.String $stack1;
        org.ooc.frontend.model.FunctionCall $r0;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionCall: java.lang.String getProtoRepr()>();

        return $stack1;
    }

    public int getScore(org.ooc.frontend.model.FunctionDecl)
    {
        org.ooc.frontend.model.FunctionDecl decl;
        org.ooc.frontend.model.NodeList declArgs, $stack13;
        FunctionCall this;
        boolean $stack9, $stack12, $stack16, $stack23, $stack26, $stack30, $stack15;
        int $stack10, score#2;
        java.util.Iterator declIter, callIter;
        java.lang.Object $stack18, $stack19;
        org.ooc.frontend.model.Argument declArg;
        org.ooc.frontend.model.Expression callArg;
        org.ooc.frontend.model.Type $stack20, $stack21, $stack22, $stack24, $stack25;
        org.ooc.frontend.model.FunctionCall $r0, $r1;

        this := @this: FunctionCall;

        decl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        declArgs = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack9 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionCall: boolean matchesArgs(org.ooc.frontend.model.FunctionDecl)>(decl);

        if $stack9 == 0 goto label1;

        score#2 = 0 + 10;

        goto label2;

     label1:
        return 0;

     label2:
        $stack10 = virtualinvoke declArgs.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack10 != 0 goto label3;

        return score#2;

     label3:
        declIter = virtualinvoke declArgs.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

        $stack12 = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack12 == 0 goto label4;

        $stack30 = interfaceinvoke declIter.<java.util.Iterator: boolean hasNext()>();

        if $stack30 == 0 goto label4;

        interfaceinvoke declIter.<java.util.Iterator: java.lang.Object next()>();

     label4:
        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack13 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList arguments>;

        callIter = virtualinvoke $stack13.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label5:
        $stack15 = interfaceinvoke callIter.<java.util.Iterator: boolean hasNext()>();

        if $stack15 == 0 goto label9;

        $stack16 = interfaceinvoke declIter.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label9;

        $stack18 = interfaceinvoke declIter.<java.util.Iterator: java.lang.Object next()>();

        declArg = (org.ooc.frontend.model.Argument) $stack18;

        $stack19 = interfaceinvoke callIter.<java.util.Iterator: java.lang.Object next()>();

        callArg = (org.ooc.frontend.model.Expression) $stack19;

        $stack20 = virtualinvoke declArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        if $stack20 != null goto label6;

        return -1;

     label6:
        $stack21 = virtualinvoke declArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack22 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack23 = virtualinvoke $stack21.<org.ooc.frontend.model.Type: boolean equals(java.lang.Object)>($stack22);

        if $stack23 == 0 goto label7;

        score#2 = score#2 + 10;

     label7:
        $stack24 = virtualinvoke declArg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack25 = virtualinvoke callArg.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack26 = virtualinvoke $stack24.<org.ooc.frontend.model.Type: boolean isSuperOf(org.ooc.frontend.model.Type)>($stack25);

        if $stack26 == 0 goto label8;

        score#2 = score#2 + 5;

     label8:
        goto label5;

     label9:
        return score#2;
    }

    public void throwUnresolvedType(org.ooc.frontend.model.NodeList, java.lang.String, org.ooc.middle.hobgoblins.Resolver)
    {
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.BuildParams $stack4;
        boolean $stack5;
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl $stack6, $stack11;
        org.ooc.frontend.model.NodeList stack;
        java.lang.String typeName, $stack8, $stack9, $stack12;
        org.ooc.middle.OocCompilationError $u0, $u1;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r4;
        org.ooc.frontend.model.Node $r2, $r5;
        java.lang.Throwable $r3, $r6;

        this := @this: FunctionCall;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        typeName := @parameter1: java.lang.String;

        res := @parameter2: org.ooc.middle.hobgoblins.Resolver;

        $stack4 = res.<org.ooc.middle.hobgoblins.Resolver: org.ooc.frontend.BuildParams params>;

        $stack5 = $stack4.<org.ooc.frontend.BuildParams: boolean veryVerbose>;

        if $stack5 == 0 goto label1;

        staticinvoke <java.lang.Thread: void dumpStack()>();

     label1:
        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack6 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack6 == null goto label2;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack11 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.ooc.frontend.model.FunctionDecl)>(typeName, $stack11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t figure out generic type <\u0001> for call to \u0001");

        $r2 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r2, stack, $stack12);

        $r3 = (java.lang.Throwable) $u0;

        throw $r3;

     label2:
        $u1 = new org.ooc.middle.OocCompilationError;

        $r4 = (org.ooc.frontend.model.FunctionCall) this;

        $stack8 = virtualinvoke $r4.<org.ooc.frontend.model.FunctionCall: java.lang.String getProtoRepr()>();

        $stack9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(typeName, $stack8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t figure out generic type <\u0001> for call to \u0001");

        $r5 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r5, stack, $stack9);

        $r6 = (java.lang.Throwable) $u1;

        throw $r6;
    }

    public java.lang.String getFullName()
    {
        FunctionCall this;
        org.ooc.frontend.model.FunctionDecl $stack1, $stack4;
        org.ooc.frontend.model.Module $stack2, $stack5;
        java.lang.String $stack3, $stack6, $stack7, $stack8;
        org.ooc.frontend.model.FunctionCall $r0, $r1, $r2, $r3;

        this := @this: FunctionCall;

        $r0 = (org.ooc.frontend.model.FunctionCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack2 = $stack1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Module module>;

        if $stack2 == null goto label1;

        $r1 = (org.ooc.frontend.model.FunctionCall) this;

        $stack4 = $r1.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack5 = $stack4.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Module module>;

        $stack6 = virtualinvoke $stack5.<org.ooc.frontend.model.Module: java.lang.String getMemberPrefix()>();

        $r2 = (org.ooc.frontend.model.FunctionCall) this;

        $stack7 = virtualinvoke $r2.<org.ooc.frontend.model.FunctionCall: java.lang.String getName()>();

        $stack8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack6, $stack7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");

        return $stack8;

     label1:
        $r3 = (org.ooc.frontend.model.FunctionCall) this;

        $stack3 = virtualinvoke $r3.<org.ooc.frontend.model.FunctionCall: java.lang.String getName()>();

        return $stack3;
    }
}
