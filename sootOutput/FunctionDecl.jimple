public class FunctionDecl extends org.ooc.frontend.model.Declaration implements org.ooc.frontend.model.Scope, org.ooc.frontend.model.Generic, org.ooc.frontend.model.interfaces.MustBeUnwrapped, org.ooc.frontend.model.PotentiallyStatic, org.ooc.frontend.model.interfaces.Versioned
{
    public org.ooc.frontend.model.Type type;
    protected org.ooc.frontend.model.OocDocComment comment;
    protected boolean isFinal;
    protected boolean isStatic;
    protected boolean isAbstract;
    protected boolean isProto;
    protected boolean isInline;
    protected boolean fromPointer;
    protected org.ooc.frontend.model.TypeDecl typeDecl;
    protected java.lang.String suffix;
    private final org.ooc.frontend.model.NodeList body;
    protected org.ooc.frontend.model.Type returnType;
    protected org.ooc.frontend.model.Argument returnArg;
    protected final java.util.LinkedHashMap typeParams;
    private final org.ooc.frontend.model.NodeList arguments;
    private org.ooc.frontend.model.VersionBlock version;

    public void <init>(java.lang.String, java.lang.String, boolean, boolean, boolean, boolean, org.ooc.frontend.model.tokens.Token, org.ooc.frontend.model.Module)
    {
        FunctionDecl this;
        java.lang.String name, suffix, $stack14;
        boolean isFinal, isStatic, isAbstract, isExtern;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Module module;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        name := @parameter0: java.lang.String;

        suffix := @parameter1: java.lang.String;

        isFinal := @parameter2: boolean;

        isStatic := @parameter3: boolean;

        isAbstract := @parameter4: boolean;

        isExtern := @parameter5: boolean;

        startToken := @parameter6: org.ooc.frontend.model.tokens.Token;

        module := @parameter7: org.ooc.frontend.model.Module;

        if isExtern == 0 goto label1;

        $stack14 = "";

        goto label2;

     label1:
        $stack14 = null;

     label2:
        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        specialinvoke $r0.<org.ooc.frontend.model.FunctionDecl: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.Module)>(name, suffix, isFinal, isStatic, isAbstract, $stack14, startToken, module);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, boolean, boolean, boolean, java.lang.String, org.ooc.frontend.model.tokens.Token, org.ooc.frontend.model.Module)
    {
        FunctionDecl this;
        java.lang.String name, externName, suffix;
        org.ooc.frontend.model.tokens.Token startToken, $stack17;
        org.ooc.frontend.model.Module module;
        boolean isFinal, isStatic, isAbstract, $stack10;
        org.ooc.frontend.model.NodeList $stack14, $u0, $u1;
        org.ooc.frontend.model.Type $stack11, $r17;
        org.ooc.frontend.model.FunctionDecl$1 $u2;
        java.util.LinkedHashMap $u3;
        org.ooc.frontend.model.FuncType $u4;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r14, $r15, $r16;
        org.ooc.frontend.model.NodeList$AddListener $r13;

        this := @this: FunctionDecl;

        name := @parameter0: java.lang.String;

        suffix := @parameter1: java.lang.String;

        isFinal := @parameter2: boolean;

        isStatic := @parameter3: boolean;

        isAbstract := @parameter4: boolean;

        externName := @parameter5: java.lang.String;

        startToken := @parameter6: org.ooc.frontend.model.tokens.Token;

        module := @parameter7: org.ooc.frontend.model.Module;

        specialinvoke this.<org.ooc.frontend.model.Declaration: void <init>(java.lang.String,java.lang.String,org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.Module)>(name, externName, startToken, module);

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: boolean isProto> = 0;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $r1.<org.ooc.frontend.model.FunctionDecl: boolean isInline> = 0;

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $r2.<org.ooc.frontend.model.FunctionDecl: boolean fromPointer> = 0;

        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $r3.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock version> = null;

        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        $r4.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix> = suffix;

        $r5 = (org.ooc.frontend.model.FunctionDecl) this;

        $r5.<org.ooc.frontend.model.FunctionDecl: boolean isFinal> = isFinal;

        $r6 = (org.ooc.frontend.model.FunctionDecl) this;

        $r6.<org.ooc.frontend.model.FunctionDecl: boolean isStatic> = isStatic;

        $r7 = (org.ooc.frontend.model.FunctionDecl) this;

        $r7.<org.ooc.frontend.model.FunctionDecl: boolean isAbstract> = isAbstract;

        $u0 = new org.ooc.frontend.model.NodeList;

        specialinvoke $u0.<org.ooc.frontend.model.NodeList: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r8 = (org.ooc.frontend.model.FunctionDecl) this;

        $r8.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList body> = $u0;

        $stack10 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>("main");

        if $stack10 == 0 goto label1;

        $stack11 = <org.ooc.frontend.model.IntLiteral: org.ooc.frontend.model.Type type>;

        goto label2;

     label1:
        $stack11 = staticinvoke <org.ooc.frontend.model.Type: org.ooc.frontend.model.Type getVoid()>();

     label2:
        $r9 = (org.ooc.frontend.model.FunctionDecl) this;

        $r9.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type returnType> = $stack11;

        $u1 = new org.ooc.frontend.model.NodeList;

        specialinvoke $u1.<org.ooc.frontend.model.NodeList: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r10 = (org.ooc.frontend.model.FunctionDecl) this;

        $r10.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments> = $u1;

        $r11 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack14 = $r11.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $u2 = new org.ooc.frontend.model.FunctionDecl$1;

        $r12 = (org.ooc.frontend.model.FunctionDecl) this;

        specialinvoke $u2.<org.ooc.frontend.model.FunctionDecl$1: void <init>(org.ooc.frontend.model.FunctionDecl)>($r12);

        $r13 = (org.ooc.frontend.model.NodeList$AddListener) $u2;

        virtualinvoke $stack14.<org.ooc.frontend.model.NodeList: void addAddListener(org.ooc.frontend.model.NodeList$AddListener)>($r13);

        $u3 = new java.util.LinkedHashMap;

        specialinvoke $u3.<java.util.LinkedHashMap: void <init>()>();

        $r14 = (org.ooc.frontend.model.FunctionDecl) this;

        $r14.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap typeParams> = $u3;

        $u4 = new org.ooc.frontend.model.FuncType;

        $stack17 = <org.ooc.frontend.model.tokens.Token: org.ooc.frontend.model.tokens.Token defaultToken>;

        $r15 = (org.ooc.frontend.model.FunctionDecl) this;

        specialinvoke $u4.<org.ooc.frontend.model.FuncType: void <init>(org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.FunctionDecl)>($stack17, $r15);

        $r16 = (org.ooc.frontend.model.FunctionDecl) this;

        $r17 = (org.ooc.frontend.model.Type) $u4;

        $r16.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type type> = $r17;

        return;
    }

    public java.util.LinkedHashMap getTypeParams()
    {
        FunctionDecl this;
        java.util.LinkedHashMap $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap typeParams>;

        return $stack1;
    }

    public void setComment(org.ooc.frontend.model.OocDocComment)
    {
        FunctionDecl this;
        org.ooc.frontend.model.OocDocComment comment;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        comment := @parameter0: org.ooc.frontend.model.OocDocComment;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.OocDocComment comment> = comment;

        return;
    }

    public org.ooc.frontend.model.OocDocComment getComment()
    {
        FunctionDecl this;
        org.ooc.frontend.model.OocDocComment $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.OocDocComment comment>;

        return $stack1;
    }

    public java.lang.String getSuffix()
    {
        FunctionDecl this;
        java.lang.String $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix>;

        return $stack1;
    }

    public void setSuffix(java.lang.String)
    {
        FunctionDecl this;
        java.lang.String suffix;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        suffix := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix> = suffix;

        return;
    }

    public boolean isFromPointer()
    {
        FunctionDecl this;
        boolean $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: boolean fromPointer>;

        return $stack1;
    }

    public void setFromPointer(boolean)
    {
        FunctionDecl this;
        boolean fromPointer;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        fromPointer := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: boolean fromPointer> = fromPointer;

        return;
    }

    public boolean isProto()
    {
        FunctionDecl this;
        boolean $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: boolean isProto>;

        return $stack1;
    }

    public void setProto(boolean)
    {
        FunctionDecl this;
        boolean isProto;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        isProto := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: boolean isProto> = isProto;

        return;
    }

    public boolean isAbstract()
    {
        FunctionDecl this;
        boolean $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: boolean isAbstract>;

        return $stack1;
    }

    public void setAbstract(boolean)
    {
        FunctionDecl this;
        boolean isAbstract;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        isAbstract := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: boolean isAbstract> = isAbstract;

        return;
    }

    public boolean isStatic()
    {
        FunctionDecl this;
        boolean $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: boolean isStatic>;

        return $stack1;
    }

    public void setStatic(boolean)
    {
        FunctionDecl this;
        boolean isStatic;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        isStatic := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: boolean isStatic> = isStatic;

        return;
    }

    public boolean isFinal()
    {
        FunctionDecl this;
        boolean $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: boolean isFinal>;

        return $stack1;
    }

    public void setFinal(boolean)
    {
        FunctionDecl this;
        boolean isFinal;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        isFinal := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: boolean isFinal> = isFinal;

        return;
    }

    public org.ooc.frontend.model.TypeDecl getTypeDecl()
    {
        FunctionDecl this;
        org.ooc.frontend.model.TypeDecl $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        return $stack1;
    }

    public boolean isInline()
    {
        FunctionDecl this;
        boolean $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: boolean isInline>;

        return $stack1;
    }

    public void setInline(boolean)
    {
        FunctionDecl this;
        boolean isInline;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        isInline := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: boolean isInline> = isInline;

        return;
    }

    public void setTypeDecl(org.ooc.frontend.model.TypeDecl)
    {
        FunctionDecl this;
        org.ooc.frontend.model.TypeDecl typeDecl;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        typeDecl := @parameter0: org.ooc.frontend.model.TypeDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl> = typeDecl;

        return;
    }

    public boolean isMember()
    {
        FunctionDecl this;
        org.ooc.frontend.model.TypeDecl $stack1;
        boolean $stack2;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        if $stack1 == null goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    public boolean hasThis()
    {
        FunctionDecl this;
        boolean $stack1, $stack2, $stack4, $stack3;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: boolean isStatic()>();

        if $stack1 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack2 = virtualinvoke $r1.<org.ooc.frontend.model.FunctionDecl: boolean isMember()>();

        if $stack2 == 0 goto label1;

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = virtualinvoke $r2.<org.ooc.frontend.model.FunctionDecl: boolean isFromPointer()>();

        if $stack4 != 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    public org.ooc.frontend.model.NodeList getBody()
    {
        FunctionDecl this;
        org.ooc.frontend.model.NodeList $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList body>;

        return $stack1;
    }

    public org.ooc.frontend.model.Type getReturnType()
    {
        FunctionDecl this;
        org.ooc.frontend.model.Type $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type returnType>;

        return $stack1;
    }

    public void setReturnType(org.ooc.frontend.model.Type)
    {
        FunctionDecl this;
        org.ooc.frontend.model.Type returnType;
        org.ooc.frontend.model.tokens.Token $stack3;
        org.ooc.frontend.model.RegularArgument $u0;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2;
        org.ooc.frontend.model.Argument $r3;

        this := @this: FunctionDecl;

        returnType := @parameter0: org.ooc.frontend.model.Type;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type returnType> = returnType;

        $u0 = new org.ooc.frontend.model.RegularArgument;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.RegularArgument: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.tokens.Token)>(returnType, "__returnArg", $stack3);

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $r3 = (org.ooc.frontend.model.Argument) $u0;

        $r2.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Argument returnArg> = $r3;

        return;
    }

    public org.ooc.frontend.model.NodeList getArguments()
    {
        FunctionDecl this;
        org.ooc.frontend.model.NodeList $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        return $stack1;
    }

    public org.ooc.frontend.model.Type getType()
    {
        FunctionDecl this;
        org.ooc.frontend.model.Type $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type type>;

        return $stack1;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        FunctionDecl this;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.FunctionDecl)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        FunctionDecl this;

        this := @this: FunctionDecl;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        FunctionDecl this;
        java.util.LinkedHashMap $stack4, $stack9;
        int $stack5;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.NodeList $stack6, $stack8;
        org.ooc.frontend.model.Type $stack7, $stack20;
        java.util.Collection $stack10;
        java.util.Iterator l2;
        boolean $stack12;
        java.lang.Object $stack19;
        org.ooc.frontend.model.TypeParam typeParam;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2, $r3, $r4;

        this := @this: FunctionDecl;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = $r0.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap typeParams>;

        $stack5 = virtualinvoke $stack4.<java.util.LinkedHashMap: int size()>();

        if $stack5 <= 0 goto label2;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack9 = $r1.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap typeParams>;

        $stack10 = virtualinvoke $stack9.<java.util.LinkedHashMap: java.util.Collection values()>();

        l2 = interfaceinvoke $stack10.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack12 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label2;

        $stack19 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        typeParam = (org.ooc.frontend.model.TypeParam) $stack19;

        $stack20 = virtualinvoke typeParam.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Type getType()>();

        virtualinvoke $stack20.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>(visitor);

        goto label1;

     label2:
        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack6 = $r2.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        virtualinvoke $stack6.<org.ooc.frontend.model.NodeList: void accept(org.ooc.frontend.Visitor)>(visitor);

        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack7 = $r3.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type returnType>;

        virtualinvoke $stack7.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>(visitor);

        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack8 = $r4.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList body>;

        virtualinvoke $stack8.<org.ooc.frontend.model.NodeList: void accept(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        org.ooc.frontend.model.Node oldie, kiddo;
        FunctionDecl this;
        org.ooc.frontend.model.Type $stack3, $stack4;
        org.ooc.frontend.model.FunctionDecl $r0, $r1;

        this := @this: FunctionDecl;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type returnType>;

        if oldie != $stack3 goto label1;

        $stack4 = (org.ooc.frontend.model.Type) kiddo;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type returnType> = $stack4;

        return 1;

     label1:
        return 0;
    }

    public java.lang.String getArgsRepr()
    {
        FunctionDecl this;
        boolean $stack1;
        java.lang.String $stack2;
        org.ooc.frontend.model.FunctionDecl $r0, $r1;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack2 = virtualinvoke $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String getArgsRepr(boolean)>($stack1);

        return $stack2;
    }

    public java.lang.String getArgsRepr(boolean)
    {
        FunctionDecl this;
        org.ooc.frontend.model.NodeList $stack7;
        java.util.Iterator iter;
        boolean skipThis, $stack13, $stack16, $stack21, $stack22, $stack9;
        java.lang.String $stack11;
        java.lang.Object $stack12;
        org.ooc.frontend.model.Argument arg;
        org.ooc.frontend.model.Type $stack14;
        java.lang.StringBuilder $u0;
        org.ooc.frontend.model.FunctionDecl $r0, $r1;

        this := @this: FunctionDecl;

        skipThis := @parameter0: boolean;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack7 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        iter = virtualinvoke $stack7.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

        if skipThis == 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack21 = virtualinvoke $r1.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack21 == 0 goto label1;

        $stack22 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack22 == 0 goto label1;

        interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $stack9 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label5;

        $stack12 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        arg = (org.ooc.frontend.model.Argument) $stack12;

        $stack13 = arg instanceof org.ooc.frontend.model.VarArg;

        if $stack13 == 0 goto label2;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");

        goto label3;

     label2:
        $stack14 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack14);

     label3:
        $stack16 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label4;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label4:
        goto label1;

     label5:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $stack11 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack11;
    }

    public java.lang.String toString()
    {
        FunctionDecl this;
        boolean $stack3;
        java.lang.String $stack5, repr, $stack9, $stack4;
        org.ooc.frontend.model.TypeDecl $stack7;
        org.ooc.frontend.model.Type $stack8;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2, $r3, $r4;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: boolean isMember()>();

        if $stack3 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack7 = $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        $stack8 = virtualinvoke $stack7.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getType()>();

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack9 = virtualinvoke $r2.<org.ooc.frontend.model.FunctionDecl: java.lang.String getSuffixedName()>();

        $stack4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type,java.lang.String)>($stack8, $stack9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");

        goto label2;

     label1:
        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = virtualinvoke $r3.<org.ooc.frontend.model.FunctionDecl: java.lang.String getSuffixedName()>();

     label2:
        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack5 = virtualinvoke $r4.<org.ooc.frontend.model.FunctionDecl: java.lang.String getArgsRepr()>();

        repr = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack4, $stack5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");

        return repr;
    }

    public java.lang.String getFullName()
    {
        FunctionDecl this;
        java.lang.String $stack4;
        java.io.IOException $stack5;
        java.lang.StringBuilder $u0;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: void writeFullName(java.lang.Appendable)>($u0);

     label2:
        goto label4;

     label3:
        $stack5 := @caughtexception;

        virtualinvoke $stack5.<java.io.IOException: void printStackTrace()>();

     label4:
        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void writeFullName(java.lang.Appendable) throws java.io.IOException
    {
        FunctionDecl this;
        boolean $stack2, $stack6;
        java.lang.Appendable dst, $stack9;
        org.ooc.frontend.model.Module $stack3;
        java.lang.String $stack4, $stack8, $stack13;
        org.ooc.frontend.model.TypeDecl $stack7;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: FunctionDecl;

        dst := @parameter0: java.lang.Appendable;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack2 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: boolean isUnmangled()>();

        if $stack2 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack13 = virtualinvoke $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String getUnmangledName()>();

        interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack13);

        goto label3;

     label1:
        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = $r2.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Module module>;

        $stack4 = virtualinvoke $stack3.<org.ooc.frontend.model.Module: java.lang.String getMemberPrefix()>();

        interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack4);

        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack6 = virtualinvoke $r3.<org.ooc.frontend.model.FunctionDecl: boolean isMember()>();

        if $stack6 == 0 goto label2;

        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack7 = $r4.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        $stack8 = virtualinvoke $stack7.<org.ooc.frontend.model.TypeDecl: java.lang.String getExternName()>();

        $stack9 = interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack8);

        interfaceinvoke $stack9.<java.lang.Appendable: java.lang.Appendable append(char)>(95);

     label2:
        $r5 = (org.ooc.frontend.model.FunctionDecl) this;

        virtualinvoke $r5.<org.ooc.frontend.model.FunctionDecl: void writeSuffixedName(java.lang.Appendable)>(dst);

     label3:
        return;
    }

    public void writeSuffixedName(java.lang.Appendable) throws java.io.IOException
    {
        java.lang.Appendable dst, $stack6;
        FunctionDecl this;
        java.lang.String $stack2, $stack4, $stack7;
        int $stack5;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2;

        this := @this: FunctionDecl;

        dst := @parameter0: java.lang.Appendable;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack2 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack2);

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix>;

        $stack5 = virtualinvoke $stack4.<java.lang.String: int length()>();

        if $stack5 <= 0 goto label1;

        $stack6 = interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(char)>(95);

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack7 = $r2.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix>;

        interfaceinvoke $stack6.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack7);

     label1:
        return;
    }

    public java.lang.String getProtoRepr()
    {
        FunctionDecl this;
        boolean $stack1;
        java.lang.String $stack2;
        org.ooc.frontend.model.FunctionDecl $r0, $r1;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack2 = virtualinvoke $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String getProtoRepr(boolean)>($stack1);

        return $stack2;
    }

    public java.lang.String getProtoRepr(boolean)
    {
        FunctionDecl this;
        org.ooc.frontend.model.TypeDecl $stack2, $stack6;
        boolean skipThis;
        java.lang.String $stack3, $stack4, $stack5, $stack7, $stack8, $stack9, $stack10;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: FunctionDecl;

        skipThis := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack2 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        if $stack2 == null goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack6 = $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        $stack7 = virtualinvoke $stack6.<org.ooc.frontend.model.TypeDecl: java.lang.String getName()>();

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack8 = $r2.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack9 = virtualinvoke $r3.<org.ooc.frontend.model.FunctionDecl: java.lang.String getArgsRepr(boolean)>(skipThis);

        $stack10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($stack7, $stack8, $stack9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001\u0001");

        return $stack10;

     label1:
        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = $r4.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $r5 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = virtualinvoke $r5.<org.ooc.frontend.model.FunctionDecl: java.lang.String getArgsRepr(boolean)>(skipThis);

        $stack5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack3, $stack4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");

        return $stack5;
    }

    public boolean sameProto(org.ooc.frontend.model.FunctionDecl)
    {
        FunctionDecl this;
        org.ooc.frontend.model.FunctionDecl decl2, $r0, $r1;
        java.lang.String $stack2, $stack3, $stack5, $stack6;
        boolean $stack4, $stack7, $stack8;

        this := @this: FunctionDecl;

        decl2 := @parameter0: org.ooc.frontend.model.FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack2 = $r0.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack3 = virtualinvoke decl2.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        $stack4 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>($stack3);

        if $stack4 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack5 = $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix>;

        $stack6 = virtualinvoke decl2.<org.ooc.frontend.model.FunctionDecl: java.lang.String getSuffix()>();

        $stack7 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack6);

        if $stack7 == 0 goto label1;

        $stack8 = 1;

        goto label2;

     label1:
        $stack8 = 0;

     label2:
        return $stack8;
    }

    public boolean isEntryPoint(org.ooc.frontend.BuildParams)
    {
        FunctionDecl this;
        boolean $stack2, $stack5, $stack6;
        org.ooc.frontend.BuildParams params;
        java.lang.String $stack3, $stack4;
        org.ooc.frontend.model.FunctionDecl $r0, $r1;

        this := @this: FunctionDecl;

        params := @parameter0: org.ooc.frontend.BuildParams;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack2 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: boolean isMember()>();

        if $stack2 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack3 = params.<org.ooc.frontend.BuildParams: java.lang.String entryPoint>;

        $stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>($stack3);

        if $stack5 == 0 goto label1;

        $stack6 = 1;

        goto label2;

     label1:
        $stack6 = 0;

     label2:
        return $stack6;
    }

    public org.ooc.frontend.model.VariableDecl getVariable(java.lang.String)
    {
        FunctionDecl this;
        org.ooc.frontend.model.NodeList $stack4, $stack6, $stack8;
        int $stack5;
        java.lang.String name, $stack15;
        org.ooc.frontend.model.VariableDecl $stack7, $r2;
        java.util.Iterator l2;
        boolean $stack10, $stack16;
        java.lang.Object $stack14;
        org.ooc.frontend.model.Argument argument;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r3, $r4;

        this := @this: FunctionDecl;

        name := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $stack5 = virtualinvoke $stack4.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack5 <= 0 goto label3;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack8 = $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        l2 = virtualinvoke $stack8.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label3;

        $stack14 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        argument = (org.ooc.frontend.model.Argument) $stack14;

        $stack15 = virtualinvoke argument.<org.ooc.frontend.model.Argument: java.lang.String getName()>();

        $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack16 == 0 goto label2;

        $r2 = (org.ooc.frontend.model.VariableDecl) argument;

        return $r2;

     label2:
        goto label1;

     label3:
        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack6 = $r3.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList body>;

        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack7 = virtualinvoke $r4.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VariableDecl getVariable(org.ooc.frontend.model.NodeList,java.lang.String)>($stack6, name);

        return $stack7;
    }

    public void getVariables(org.ooc.frontend.model.NodeList)
    {
        FunctionDecl this;
        org.ooc.frontend.model.NodeList $stack4, variables, $stack6, $stack7;
        int $stack5;
        java.util.Iterator l2;
        boolean $stack9;
        java.lang.Object $stack13;
        org.ooc.frontend.model.Argument argument;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r3, $r4;
        org.ooc.frontend.model.Node $r2;

        this := @this: FunctionDecl;

        variables := @parameter0: org.ooc.frontend.model.NodeList;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $stack5 = virtualinvoke $stack4.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack5 <= 0 goto label2;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack7 = $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        l2 = virtualinvoke $stack7.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label2;

        $stack13 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        argument = (org.ooc.frontend.model.Argument) $stack13;

        $r2 = (org.ooc.frontend.model.Node) argument;

        virtualinvoke variables.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r2);

        goto label1;

     label2:
        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack6 = $r3.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList body>;

        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        virtualinvoke $r4.<org.ooc.frontend.model.FunctionDecl: void getVariables(org.ooc.frontend.model.NodeList,org.ooc.frontend.model.NodeList)>($stack6, variables);

        return;
    }

    public org.ooc.frontend.model.FunctionDecl getFunction(java.lang.String, java.lang.String, org.ooc.frontend.model.FunctionCall)
    {
        FunctionDecl this;
        java.lang.String name, suffix;
        org.ooc.frontend.model.FunctionCall call;

        this := @this: FunctionDecl;

        name := @parameter0: java.lang.String;

        suffix := @parameter1: java.lang.String;

        call := @parameter2: org.ooc.frontend.model.FunctionCall;

        return null;
    }

    public void getFunctions(org.ooc.frontend.model.NodeList)
    {
        FunctionDecl this;
        org.ooc.frontend.model.NodeList functions;

        this := @this: FunctionDecl;

        functions := @parameter0: org.ooc.frontend.model.NodeList;

        return;
    }

    public java.lang.String getSuffixedName()
    {
        FunctionDecl this;
        java.lang.String $stack1, $stack3, $stack4, $stack5, $stack6;
        int $stack2;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2, $r3;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix>;

        $stack2 = virtualinvoke $stack1.<java.lang.String: int length()>();

        if $stack2 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack6 = $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        return $stack6;

     label1:
        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = $r2.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = $r3.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix>;

        $stack5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack4, $stack3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001_\u0001");

        return $stack5;
    }

    public boolean unwrap(org.ooc.frontend.model.NodeList) throws java.io.IOException
    {
        FunctionDecl this;
        java.lang.String $stack7, $stack9, $stack18, $stack54, $stack62, $stack63, $stack64, $stack67;
        int $stack8, $stack12;
        boolean $stack10, $stack19;
        org.ooc.frontend.model.NodeList $stack11, $stack14, $stack20, $stack22, $stack30, $stack32, $stack39, $stack44, $stack48, $stack58, stack, $stack70;
        org.ooc.frontend.model.Node $stack15, $stack21, $stack61, $stack68, $r5, $r6, $r7, $r14, $r16, $r18, $r21, $r24, $r29;
        org.ooc.frontend.model.Argument $stack16, module#3;
        org.ooc.frontend.model.Type $stack17, $stack25, $stack36, $stack42, $u2;
        org.ooc.frontend.model.tokens.Token $stack24, $stack28, $stack29, $stack37, $stack38, $stack41, $stack46, $stack50, $stack56, $stack66;
        org.ooc.frontend.model.Module $stack55, module;
        org.ooc.frontend.model.VariableAccess $u0, $u7, $u8;
        org.ooc.frontend.model.RegularArgument $u1, $u3;
        org.ooc.frontend.model.TypeAccess $u4, $u6;
        org.ooc.frontend.model.MemberCall $u5;
        org.ooc.frontend.model.VariableDecl $u9, $r20, $r23;
        org.ooc.frontend.model.Line $u10;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2, $r3, $r4, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r19, $r22, $r25, $r27;
        org.ooc.frontend.model.Expression $r17, $r26;
        org.ooc.frontend.model.Statement $r28;

        this := @this: FunctionDecl;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack7 = $r0.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack8 = virtualinvoke $stack7.<java.lang.String: int length()>();

        if $stack8 != 0 goto label1;

        module = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Module getModule()>();

        $stack61 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(0);

        $stack62 = virtualinvoke module.<org.ooc.frontend.model.Module: java.lang.String getUnderName()>();

        $stack63 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack62) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001_closure");

        $stack64 = virtualinvoke $stack61.<org.ooc.frontend.model.Node: java.lang.String generateTempName(java.lang.String,org.ooc.frontend.model.NodeList)>($stack63, stack);

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String name> = $stack64;

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $r2.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Module module> = module;

        $u0 = new org.ooc.frontend.model.VariableAccess;

        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack67 = $r3.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack66 = $r4.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.VariableAccess: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack67, $stack66);

        virtualinvoke $u0.<org.ooc.frontend.model.VariableAccess: void setRef(org.ooc.frontend.model.Declaration)>(this);

        $stack68 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $r5 = (org.ooc.frontend.model.Node) this;

        $r6 = (org.ooc.frontend.model.Node) $u0;

        virtualinvoke $stack68.<org.ooc.frontend.model.Node: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r5, $r6);

        $stack70 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getBody()>();

        $r7 = (org.ooc.frontend.model.Node) this;

        virtualinvoke $stack70.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r7);

        return 1;

     label1:
        $r8 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack9 = $r8.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>("main");

        if $stack10 == 0 goto label2;

        $r9 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack11 = $r9.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $stack12 = virtualinvoke $stack11.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack12 != 1 goto label2;

        $r10 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack14 = $r10.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $stack15 = virtualinvoke $stack14.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node getFirst()>();

        $stack16 = (org.ooc.frontend.model.Argument) $stack15;

        $stack17 = virtualinvoke $stack16.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack18 = virtualinvoke $stack17.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack19 = virtualinvoke $stack18.<java.lang.String: boolean equals(java.lang.Object)>("ArrayList");

        if $stack19 == 0 goto label2;

        $r11 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack20 = $r11.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $stack21 = virtualinvoke $stack20.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node getFirst()>();

        module#3 = (org.ooc.frontend.model.Argument) $stack21;

        $r12 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack22 = $r12.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        virtualinvoke $stack22.<org.ooc.frontend.model.NodeList: void clear()>();

        $u1 = new org.ooc.frontend.model.RegularArgument;

        $stack25 = <org.ooc.frontend.model.IntLiteral: org.ooc.frontend.model.Type type>;

        $stack24 = module#3.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u1.<org.ooc.frontend.model.RegularArgument: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack25, "argc", $stack24);

        $u3 = new org.ooc.frontend.model.RegularArgument;

        $u2 = new org.ooc.frontend.model.Type;

        $stack28 = module#3.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u2.<org.ooc.frontend.model.Type: void <init>(java.lang.String,int,org.ooc.frontend.model.tokens.Token)>("String", 1, $stack28);

        $stack29 = module#3.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u3.<org.ooc.frontend.model.RegularArgument: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.tokens.Token)>($u2, "argv", $stack29);

        $r13 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack30 = $r13.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $r14 = (org.ooc.frontend.model.Node) $u1;

        virtualinvoke $stack30.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r14);

        $r15 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack32 = $r15.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $r16 = (org.ooc.frontend.model.Node) $u3;

        virtualinvoke $stack32.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r16);

        $u5 = new org.ooc.frontend.model.MemberCall;

        $u4 = new org.ooc.frontend.model.TypeAccess;

        $stack36 = virtualinvoke module#3.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $stack37 = module#3.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u4.<org.ooc.frontend.model.TypeAccess: void <init>(org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>($stack36, $stack37);

        $stack38 = module#3.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.tokens.Token startToken>;

        $r17 = (org.ooc.frontend.model.Expression) $u4;

        specialinvoke $u5.<org.ooc.frontend.model.MemberCall: void <init>(org.ooc.frontend.model.Expression,java.lang.String,java.lang.String,org.ooc.frontend.model.tokens.Token)>($r17, "new", "withData", $stack38);

        $stack39 = virtualinvoke $u5.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.NodeList getTypeParams()>();

        $u6 = new org.ooc.frontend.model.TypeAccess;

        $stack42 = <org.ooc.frontend.model.NullLiteral: org.ooc.frontend.model.Type type>;

        $stack41 = $u5.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u6.<org.ooc.frontend.model.TypeAccess: void <init>(org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>($stack42, $stack41);

        $r18 = (org.ooc.frontend.model.Node) $u6;

        virtualinvoke $stack39.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r18);

        $stack44 = virtualinvoke $u5.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.NodeList getArguments()>();

        $u7 = new org.ooc.frontend.model.VariableAccess;

        $r19 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack46 = $r19.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r20 = (org.ooc.frontend.model.VariableDecl) $u3;

        specialinvoke $u7.<org.ooc.frontend.model.VariableAccess: void <init>(org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.tokens.Token)>($r20, $stack46);

        $r21 = (org.ooc.frontend.model.Node) $u7;

        virtualinvoke $stack44.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r21);

        $stack48 = virtualinvoke $u5.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.NodeList getArguments()>();

        $u8 = new org.ooc.frontend.model.VariableAccess;

        $r22 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack50 = $r22.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r23 = (org.ooc.frontend.model.VariableDecl) $u1;

        specialinvoke $u8.<org.ooc.frontend.model.VariableAccess: void <init>(org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.tokens.Token)>($r23, $stack50);

        $r24 = (org.ooc.frontend.model.Node) $u8;

        virtualinvoke $stack48.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r24);

        $u9 = new org.ooc.frontend.model.VariableDecl;

        $stack54 = virtualinvoke module#3.<org.ooc.frontend.model.Argument: java.lang.String getName()>();

        $stack56 = module#3.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.tokens.Token startToken>;

        $r25 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack55 = $r25.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Module module>;

        $r26 = (org.ooc.frontend.model.Expression) $u5;

        specialinvoke $u9.<org.ooc.frontend.model.VariableDecl: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.Module)>(null, $stack54, $r26, $stack56, $stack55);

        $r27 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack58 = $r27.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList body>;

        $u10 = new org.ooc.frontend.model.Line;

        $r28 = (org.ooc.frontend.model.Statement) $u9;

        specialinvoke $u10.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r28);

        $r29 = (org.ooc.frontend.model.Node) $u10;

        virtualinvoke $stack58.<org.ooc.frontend.model.NodeList: void add(int,org.ooc.frontend.model.Node)>(0, $r29);

     label2:
        return 0;
    }

    public org.ooc.frontend.model.Argument getReturnArg()
    {
        FunctionDecl this;
        org.ooc.frontend.model.Argument $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Argument returnArg>;

        return $stack1;
    }

    public boolean isNamed(java.lang.String, java.lang.String)
    {
        FunctionDecl this;
        java.lang.String name, $stack3, suffix, $stack6;
        boolean $stack4, $stack7, $stack5;
        org.ooc.frontend.model.FunctionDecl $r0, $r1;

        this := @this: FunctionDecl;

        name := @parameter0: java.lang.String;

        suffix := @parameter1: java.lang.String;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = $r0.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack4 = virtualinvoke $stack3.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack4 == 0 goto label2;

        if suffix == null goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack6 = $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix>;

        $stack7 = virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>(suffix);

        if $stack7 == 0 goto label2;

     label1:
        $stack5 = 1;

        goto label3;

     label2:
        $stack5 = 0;

     label3:
        return $stack5;
    }

    public boolean isSpecialFunc()
    {
        FunctionDecl this;
        java.lang.String $stack1, $stack3, $stack5;
        boolean $stack2, $stack4, $stack6, $stack7;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack2 = virtualinvoke $stack1.<java.lang.String: boolean equals(java.lang.Object)>("__defaults__");

        if $stack2 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = $r1.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack4 = virtualinvoke $stack3.<java.lang.String: boolean equals(java.lang.Object)>("__destroy__");

        if $stack4 != 0 goto label1;

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack5 = $r2.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>("__load__");

        if $stack6 == 0 goto label2;

     label1:
        $stack7 = 1;

        goto label3;

     label2:
        $stack7 = 0;

     label3:
        return $stack7;
    }

    public java.util.Iterator getThisLessArgsIter()
    {
        FunctionDecl this;
        org.ooc.frontend.model.NodeList $stack2;
        java.util.Iterator iter;
        boolean $stack4;
        org.ooc.frontend.model.FunctionDecl $r0, $r1;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack2 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        iter = virtualinvoke $stack2.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = virtualinvoke $r1.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack4 == 0 goto label1;

        interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

     label1:
        return iter;
    }

    public boolean hasReturn()
    {
        FunctionDecl this;
        org.ooc.frontend.model.Type $stack1, $stack3;
        boolean $stack2, $stack4, $stack5;
        org.ooc.frontend.model.FunctionDecl $r0, $r1;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack2 = virtualinvoke $stack1.<org.ooc.frontend.model.Type: boolean isVoid()>();

        if $stack2 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = virtualinvoke $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack4 = virtualinvoke $stack3.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack4 != 0 goto label1;

        $stack5 = 1;

        goto label2;

     label1:
        $stack5 = 0;

     label2:
        return $stack5;
    }

    public org.ooc.frontend.model.TypeParam getGenericType(java.lang.String)
    {
        FunctionDecl this;
        java.lang.String name;
        java.util.LinkedHashMap $stack4, classGenerics;
        java.lang.Object $stack5, $stack10;
        org.ooc.frontend.model.TypeDecl $stack6, $stack8;
        org.ooc.frontend.model.TypeParam genericType;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2;

        this := @this: FunctionDecl;

        name := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = $r0.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap typeParams>;

        $stack5 = virtualinvoke $stack4.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(name);

        genericType = (org.ooc.frontend.model.TypeParam) $stack5;

        if genericType != null goto label1;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack6 = $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        if $stack6 == null goto label1;

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack8 = $r2.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        classGenerics = virtualinvoke $stack8.<org.ooc.frontend.model.TypeDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack10 = interfaceinvoke classGenerics.<java.util.Map: java.lang.Object get(java.lang.Object)>(name);

        genericType = (org.ooc.frontend.model.TypeParam) $stack10;

        return genericType;

     label1:
        return genericType;
    }

    public boolean isGeneric()
    {
        FunctionDecl this;
        java.util.LinkedHashMap $stack1, $stack5;
        int $stack2, $stack6;
        org.ooc.frontend.model.TypeDecl $stack3, $stack4;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap typeParams>;

        $stack2 = virtualinvoke $stack1.<java.util.LinkedHashMap: int size()>();

        if $stack2 <= 0 goto label1;

        return 1;

     label1:
        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack3 = $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        if $stack3 == null goto label2;

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack4 = $r2.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        $stack5 = virtualinvoke $stack4.<org.ooc.frontend.model.TypeDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack6 = virtualinvoke $stack5.<java.util.LinkedHashMap: int size()>();

        if $stack6 <= 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean isResolved()
    {
        FunctionDecl this;

        this := @this: FunctionDecl;

        return 0;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        FunctionDecl this;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.BuildParams $stack8;
        boolean $stack9, fatal, $stack15, $stack19, $stack20, $stack22, $stack26, $stack28, $stack30, $stack45, $stack67, $stack76, $stack90, $stack12, $stack17;
        org.ooc.frontend.model.NodeList $stack10, stack, $stack21, $stack23, $stack36, $stack46, $stack62, $stack64, $stack91, $stack93;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack14, response#15, $stack18;
        org.ooc.frontend.model.Node $stack24, $r6, $r7, $r8, $r10, $r21, $r25, $r37, $r45;
        org.ooc.frontend.model.Statement $stack25, $stack29, $stack32, $stack34, $r36, $r44, $r46;
        java.lang.String $stack27, $stack44, $stack59, $stack60, $stack66, $stack71, $stack73, $stack74, $stack75, $stack80, $stack81, $stack98;
        org.ooc.frontend.model.Expression $stack33, $r35, $r43;
        org.ooc.frontend.model.tokens.Token $stack35, $stack40, $stack42, $stack50, $stack52;
        org.ooc.frontend.model.IntLiteral$Format $stack41, $stack51;
        org.ooc.frontend.model.TypeDecl $stack54, $stack55, $stack57, $stack58, $stack69, $stack70, $stack72, $stack78, $stack79, $stack87, tDecl;
        int $stack63, $stack65;
        java.lang.Object $stack86, $stack99;
        org.ooc.frontend.model.Declaration $stack92;
        java.util.LinkedHashMap $stack97;
        org.ooc.frontend.model.TypeParam typeParam;
        java.util.Iterator response;
        org.ooc.frontend.model.Argument arg;
        org.ooc.frontend.model.Type tDecl#12, $stack16;
        org.ooc.frontend.model.FunctionDecl arg#16, $r0, $r1, $r2, $r3, $r4, $r5, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r38, $r39, $r40, $r41, $r42;
        org.ooc.frontend.model.Line arg#26, $u4, $u7;
        org.ooc.middle.OocCompilationError $u0, $u1;
        org.ooc.frontend.model.IntLiteral $u2, $u5;
        org.ooc.frontend.model.ValuedReturn $u3, $u6, $u8;
        java.lang.Throwable $r22, $r26;

        this := @this: FunctionDecl;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $stack8 = res.<org.ooc.middle.hobgoblins.Resolver: org.ooc.frontend.BuildParams params>;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack9 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: boolean isEntryPoint(org.ooc.frontend.BuildParams)>($stack8);

        if $stack9 == 0 goto label01;

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        virtualinvoke $r1.<org.ooc.frontend.model.FunctionDecl: void setUnmangledName(java.lang.String)>("");

     label01:
        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack10 = $r2.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        response = virtualinvoke $stack10.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label02:
        $stack12 = interfaceinvoke response.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label07;

        $stack86 = interfaceinvoke response.<java.util.Iterator: java.lang.Object next()>();

        arg = (org.ooc.frontend.model.Argument) $stack86;

        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack87 = virtualinvoke $r3.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl getTypeDecl()>();

        if $stack87 == null goto label03;

        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        tDecl = virtualinvoke $r4.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl getTypeDecl()>();

        $stack97 = virtualinvoke tDecl.<org.ooc.frontend.model.TypeDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack98 = virtualinvoke arg.<org.ooc.frontend.model.Argument: java.lang.String getName()>();

        $stack99 = virtualinvoke $stack97.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>($stack98);

        typeParam = (org.ooc.frontend.model.TypeParam) $stack99;

        if typeParam == null goto label03;

        virtualinvoke typeParam.<org.ooc.frontend.model.TypeParam: void setGhost(boolean)>(1);

     label03:
        tDecl#12 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        if tDecl#12 == null goto label06;

        $stack90 = virtualinvoke tDecl#12.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack90 != 0 goto label06;

        $r5 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack91 = $r5.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $r6 = (org.ooc.frontend.model.Node) $stack91;

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void push(org.ooc.frontend.model.Node)>($r6);

        $r7 = (org.ooc.frontend.model.Node) arg;

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void push(org.ooc.frontend.model.Node)>($r7);

     label04:
        $stack92 = virtualinvoke tDecl#12.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        if $stack92 != null goto label05;

        virtualinvoke tDecl#12.<org.ooc.frontend.model.Type: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, 1);

        goto label04;

     label05:
        $r8 = (org.ooc.frontend.model.Node) arg;

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void pop(org.ooc.frontend.model.Node)>($r8);

        $r9 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack93 = $r9.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        $r10 = (org.ooc.frontend.model.Node) $stack93;

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void pop(org.ooc.frontend.model.Node)>($r10);

     label06:
        goto label02;

     label07:
        response#15 = specialinvoke this.<org.ooc.frontend.model.Declaration: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        $stack14 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        if response#15 == $stack14 goto label08;

        return response#15;

     label08:
        $r11 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack15 = virtualinvoke $r11.<org.ooc.frontend.model.FunctionDecl: boolean isMember()>();

        if $stack15 == 0 goto label11;

        $r12 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack54 = $r12.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        $stack55 = virtualinvoke $stack54.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.TypeDecl getSuperRef()>();

        if $stack55 == null goto label11;

        $r13 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack57 = $r13.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        $stack58 = virtualinvoke $stack57.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.TypeDecl getSuperRef()>();

        $r14 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack60 = $r14.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $r15 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack59 = $r15.<org.ooc.frontend.model.FunctionDecl: java.lang.String suffix>;

        arg#16 = virtualinvoke $stack58.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.FunctionDecl getFunction(java.lang.String,java.lang.String,org.ooc.frontend.model.FunctionCall)>($stack60, $stack59, null);

        if arg#16 == null goto label11;

        $stack62 = virtualinvoke arg#16.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        $stack63 = virtualinvoke $stack62.<org.ooc.frontend.model.NodeList: int size()>();

        $r16 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack64 = virtualinvoke $r16.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        $stack65 = virtualinvoke $stack64.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack63 == $stack65 goto label11;

        $r17 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack66 = $r17.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack67 = virtualinvoke $stack66.<java.lang.String: boolean equals(java.lang.Object)>("new");

        if $stack67 != 0 goto label09;

        $r18 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack75 = $r18.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack76 = virtualinvoke $stack75.<java.lang.String: boolean equals(java.lang.Object)>("init");

        if $stack76 == 0 goto label10;

     label09:
        $u0 = new org.ooc.middle.OocCompilationError;

        $r19 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack69 = $r19.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        $stack70 = virtualinvoke $stack69.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.TypeDecl getSuperRef()>();

        $stack71 = virtualinvoke $stack70.<org.ooc.frontend.model.TypeDecl: java.lang.String getName()>();

        $r20 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack72 = $r20.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        $stack73 = virtualinvoke $stack72.<org.ooc.frontend.model.TypeDecl: java.lang.String getName()>();

        $stack74 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack71, $stack73) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("There\'s no no-argument constructor in super-type \u0001, you should add a constructor to \u0001 with a suffix, e.g. init: func ~mySuffix () {}");

        $r21 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r21, stack, $stack74);

        $r22 = (java.lang.Throwable) $u0;

        throw $r22;

     label10:
        $u1 = new org.ooc.middle.OocCompilationError;

        $r23 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack78 = $r23.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        $stack79 = virtualinvoke $stack78.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.TypeDecl getSuperRef()>();

        $stack80 = virtualinvoke $stack79.<org.ooc.frontend.model.TypeDecl: java.lang.String getName()>();

        $r24 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack81 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.FunctionDecl,java.lang.String)>($r24, $stack80) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Definition of \u0001 conflicts with definition in super-type \u0001, you should add a suffix to this one or make it have the same arguments.");

        $r25 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r25, stack, $stack81);

        $r26 = (java.lang.Throwable) $u1;

        throw $r26;

     label11:
        $r27 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack16 = virtualinvoke $r27.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack17 = virtualinvoke $stack16.<org.ooc.frontend.model.Type: boolean isVoid()>();

        if $stack17 != 0 goto label14;

        $r28 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack19 = virtualinvoke $r28.<org.ooc.frontend.model.FunctionDecl: boolean isExtern()>();

        if $stack19 != 0 goto label14;

        $r29 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack20 = virtualinvoke $r29.<org.ooc.frontend.model.FunctionDecl: boolean isAbstract()>();

        if $stack20 != 0 goto label14;

        $r30 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack21 = virtualinvoke $r30.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getBody()>();

        $stack22 = virtualinvoke $stack21.<org.ooc.frontend.model.NodeList: boolean isEmpty()>();

        if $stack22 == 0 goto label12;

        $r31 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack44 = virtualinvoke $r31.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        $stack45 = virtualinvoke $stack44.<java.lang.String: boolean equals(java.lang.Object)>("main");

        if $stack45 == 0 goto label14;

        $r32 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack46 = virtualinvoke $r32.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getBody()>();

        $u4 = new org.ooc.frontend.model.Line;

        $u3 = new org.ooc.frontend.model.ValuedReturn;

        $u2 = new org.ooc.frontend.model.IntLiteral;

        $stack51 = <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format DEC>;

        $r33 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack50 = $r33.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u2.<org.ooc.frontend.model.IntLiteral: void <init>(long,org.ooc.frontend.model.IntLiteral$Format,org.ooc.frontend.model.tokens.Token)>(0L, $stack51, $stack50);

        $r34 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack52 = $r34.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r35 = (org.ooc.frontend.model.Expression) $u2;

        specialinvoke $u3.<org.ooc.frontend.model.ValuedReturn: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($r35, $stack52);

        $r36 = (org.ooc.frontend.model.Statement) $u3;

        specialinvoke $u4.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r36);

        $r37 = (org.ooc.frontend.model.Node) $u4;

        virtualinvoke $stack46.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r37);

        goto label14;

     label12:
        $r38 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack23 = virtualinvoke $r38.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getBody()>();

        $stack24 = virtualinvoke $stack23.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node getLast()>();

        arg#26 = (org.ooc.frontend.model.Line) $stack24;

        $stack25 = virtualinvoke arg#26.<org.ooc.frontend.model.Line: org.ooc.frontend.model.Statement getStatement()>();

        $stack26 = $stack25 instanceof org.ooc.frontend.model.Return;

        if $stack26 != 0 goto label14;

        $r39 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack27 = $r39.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        $stack28 = virtualinvoke $stack27.<java.lang.String: boolean equals(java.lang.Object)>("main");

        if $stack28 == 0 goto label13;

        $r40 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack36 = virtualinvoke $r40.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getBody()>();

        $u7 = new org.ooc.frontend.model.Line;

        $u6 = new org.ooc.frontend.model.ValuedReturn;

        $u5 = new org.ooc.frontend.model.IntLiteral;

        $stack41 = <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format DEC>;

        $r41 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack40 = $r41.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u5.<org.ooc.frontend.model.IntLiteral: void <init>(long,org.ooc.frontend.model.IntLiteral$Format,org.ooc.frontend.model.tokens.Token)>(0L, $stack41, $stack40);

        $r42 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack42 = $r42.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r43 = (org.ooc.frontend.model.Expression) $u5;

        specialinvoke $u6.<org.ooc.frontend.model.ValuedReturn: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($r43, $stack42);

        $r44 = (org.ooc.frontend.model.Statement) $u6;

        specialinvoke $u7.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r44);

        $r45 = (org.ooc.frontend.model.Node) $u7;

        virtualinvoke $stack36.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r45);

        goto label14;

     label13:
        $stack29 = virtualinvoke arg#26.<org.ooc.frontend.model.Line: org.ooc.frontend.model.Statement getStatement()>();

        $stack30 = $stack29 instanceof org.ooc.frontend.model.Expression;

        if $stack30 == 0 goto label14;

        $u8 = new org.ooc.frontend.model.ValuedReturn;

        $stack32 = virtualinvoke arg#26.<org.ooc.frontend.model.Line: org.ooc.frontend.model.Statement getStatement()>();

        $stack33 = (org.ooc.frontend.model.Expression) $stack32;

        $stack34 = virtualinvoke arg#26.<org.ooc.frontend.model.Line: org.ooc.frontend.model.Statement getStatement()>();

        $stack35 = $stack34.<org.ooc.frontend.model.Statement: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u8.<org.ooc.frontend.model.ValuedReturn: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($stack33, $stack35);

        $r46 = (org.ooc.frontend.model.Statement) $u8;

        virtualinvoke arg#26.<org.ooc.frontend.model.Line: void setStatement(org.ooc.frontend.model.Statement)>($r46);

     label14:
        $stack18 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack18;
    }

    public java.lang.String getStub()
    {
        FunctionDecl this;
        java.lang.String $stack6, $stack13, $stack28;
        org.ooc.frontend.model.NodeList $stack8, $stack21;
        boolean $stack10, $stack11, $stack23, $stack33, $stack36, $stack24;
        java.lang.StringBuffer $stack14, $u0;
        org.ooc.frontend.model.Type $stack15, $stack31;
        java.util.Iterator iter;
        java.lang.Object $stack27;
        org.ooc.frontend.model.Argument arg;
        int numArgs;
        org.ooc.frontend.model.FunctionDecl $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: FunctionDecl;

        $u0 = new java.lang.StringBuffer;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack6 = $r0.<org.ooc.frontend.model.FunctionDecl: java.lang.String name>;

        specialinvoke $u0.<java.lang.StringBuffer: void <init>(java.lang.String)>($stack6);

        virtualinvoke $u0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": func ");

        $r1 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack8 = $r1.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        numArgs = virtualinvoke $stack8.<org.ooc.frontend.model.NodeList: int size()>();

        $r2 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack10 = virtualinvoke $r2.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack10 == 0 goto label1;

        numArgs = numArgs + -1;

     label1:
        if numArgs <= 0 goto label5;

        virtualinvoke $u0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r3 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack21 = $r3.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList arguments>;

        iter = virtualinvoke $stack21.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

        $stack23 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack23 == 0 goto label2;

        $r4 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack36 = virtualinvoke $r4.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack36 == 0 goto label2;

        interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

     label2:
        $stack24 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack24 == 0 goto label4;

        $stack27 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        arg = (org.ooc.frontend.model.Argument) $stack27;

        $stack28 = virtualinvoke arg.<org.ooc.frontend.model.Argument: java.lang.String getName()>();

        virtualinvoke $u0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($stack28);

        virtualinvoke $u0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $stack31 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        virtualinvoke $u0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($stack31);

        $stack33 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack33 == 0 goto label3;

        virtualinvoke $u0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label3:
        goto label2;

     label4:
        virtualinvoke $u0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

     label5:
        $r5 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack11 = virtualinvoke $r5.<org.ooc.frontend.model.FunctionDecl: boolean hasReturn()>();

        if $stack11 == 0 goto label6;

        $stack14 = virtualinvoke $u0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -> ");

        $r6 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack15 = virtualinvoke $r6.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        virtualinvoke $stack14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($stack15);

     label6:
        virtualinvoke $u0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" {}");

        $stack13 = virtualinvoke $u0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $stack13;
    }

    public void setVersion(org.ooc.frontend.model.VersionBlock)
    {
        FunctionDecl this;
        org.ooc.frontend.model.VersionBlock version;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        version := @parameter0: org.ooc.frontend.model.VersionBlock;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock version> = version;

        return;
    }

    public org.ooc.frontend.model.VersionBlock getVersion()
    {
        FunctionDecl this;
        org.ooc.frontend.model.VersionBlock $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock version>;

        return $stack1;
    }

    public volatile java.util.Map getTypeParams()
    {
        FunctionDecl this;
        java.util.LinkedHashMap $stack1;
        org.ooc.frontend.model.FunctionDecl $r0;

        this := @this: FunctionDecl;

        $r0 = (org.ooc.frontend.model.FunctionDecl) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap getTypeParams()>();

        return $stack1;
    }
}
