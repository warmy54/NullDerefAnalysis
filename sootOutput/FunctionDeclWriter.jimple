public class FunctionDeclWriter extends java.lang.Object
{

    public void <init>()
    {
        FunctionDeclWriter this;

        this := @this: FunctionDeclWriter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void write(org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionDecl functionDecl;
        boolean $stack2, $stack4, $stack6, $stack8, $stack3;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack5, $stack7, $stack12, $stack14, $stack15, $stack17, $stack18, $stack19, $stack32, $stack34, $stack35, $stack38, $stack39, $stack42;
        org.ooc.frontend.model.VersionBlock $stack13, $stack22, $stack23, $stack33, $stack44, $stack46;
        java.lang.String $stack20, $stack40;
        org.ooc.frontend.model.Type $stack37;
        org.ooc.frontend.Visitor $r0;
        java.lang.Appendable $r1;

        functionDecl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack2 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: boolean isProto()>();

        if $stack2 == 0 goto label2;

        $stack32 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter fw>;

        cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current> = $stack32;

        $stack33 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        if $stack33 == null goto label1;

        $stack46 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        staticinvoke <org.ooc.backend.cdirty.VersionBlockWriter: void writeVersionBlockStart(org.ooc.frontend.model.VersionBlock,org.ooc.backend.cdirty.CGenerator)>($stack46, cgen);

     label1:
        $stack34 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack35 = virtualinvoke $stack34.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter nl()>();

        virtualinvoke $stack35.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("extern ");

        $stack37 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack37.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r0);

        $stack38 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack39 = virtualinvoke $stack38.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(32);

        $stack40 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getExternName()>();

        virtualinvoke $stack39.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack40);

        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFuncArgs(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(functionDecl, cgen);

        $stack42 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack42.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(59);

        $stack44 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        if $stack44 == null goto label2;

        staticinvoke <org.ooc.backend.cdirty.VersionBlockWriter: void writeVersionBlockEnd(org.ooc.backend.cdirty.CGenerator)>(cgen);

     label2:
        $stack3 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: boolean isExtern()>();

        if $stack3 == 0 goto label4;

        $stack12 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter fw>;

        cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current> = $stack12;

        $stack13 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        if $stack13 == null goto label3;

        $stack23 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        staticinvoke <org.ooc.backend.cdirty.VersionBlockWriter: void writeVersionBlockStart(org.ooc.frontend.model.VersionBlock,org.ooc.backend.cdirty.CGenerator)>($stack23, cgen);

     label3:
        $stack14 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack15 = virtualinvoke $stack14.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter nl()>();

        virtualinvoke $stack15.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("#define ");

        $stack17 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $r1 = (java.lang.Appendable) $stack17;

        virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: void writeFullName(java.lang.Appendable)>($r1);

        $stack18 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack19 = virtualinvoke $stack18.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(32);

        $stack20 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getExternName()>();

        virtualinvoke $stack19.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack20);

        $stack22 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        if $stack22 == null goto label7;

        staticinvoke <org.ooc.backend.cdirty.VersionBlockWriter: void writeVersionBlockEnd(org.ooc.backend.cdirty.CGenerator)>(cgen);

        goto label7;

     label4:
        $stack4 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: boolean isAbstract()>();

        if $stack4 != 0 goto label7;

        $stack5 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter fw>;

        cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current> = $stack5;

        $stack6 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: boolean isInline()>();

        if $stack6 == 0 goto label5;

        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFullBody(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(functionDecl, cgen);

        goto label6;

     label5:
        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFullPrototype(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(functionDecl, cgen);

     label6:
        $stack7 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter cw>;

        cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current> = $stack7;

        $stack8 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: boolean isInline()>();

        if $stack8 != 0 goto label7;

        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFullBody(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(functionDecl, cgen);

     label7:
        return;
    }

    private static void writeFullPrototype(org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionDecl functionDecl;
        org.ooc.frontend.model.VersionBlock $stack2, $stack7, $stack8;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack3, $stack5;

        functionDecl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack2 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        if $stack2 == null goto label1;

        $stack8 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        staticinvoke <org.ooc.backend.cdirty.VersionBlockWriter: void writeVersionBlockStart(org.ooc.frontend.model.VersionBlock,org.ooc.backend.cdirty.CGenerator)>($stack8, cgen);

     label1:
        $stack3 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack3.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter nl()>();

        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFuncPrototype(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(functionDecl, cgen);

        $stack5 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack5.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(59);

        $stack7 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        if $stack7 == null goto label2;

        staticinvoke <org.ooc.backend.cdirty.VersionBlockWriter: void writeVersionBlockEnd(org.ooc.backend.cdirty.CGenerator)>(cgen);

     label2:
        return;
    }

    private static void writeFullBody(org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionDecl functionDecl, $stack25;
        org.ooc.frontend.model.VersionBlock $stack4, $stack17, $stack36;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack5, $stack7, $stack8, $stack15, $stack22, $stack23, $stack27, $stack30, $stack31;
        org.ooc.frontend.BuildParams $stack10, $stack20;
        boolean $stack11, $stack21, $stack14;
        java.util.Iterator l2;
        java.lang.Object $stack18;
        org.ooc.frontend.model.Line line;
        org.ooc.frontend.model.Module $stack24;
        java.lang.String $stack26;
        org.ooc.frontend.model.NodeList $stack12;
        org.ooc.frontend.Visitor $r0;

        functionDecl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack4 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        if $stack4 == null goto label1;

        $stack36 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        staticinvoke <org.ooc.backend.cdirty.VersionBlockWriter: void writeVersionBlockStart(org.ooc.frontend.model.VersionBlock,org.ooc.backend.cdirty.CGenerator)>($stack36, cgen);

     label1:
        $stack5 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack5.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter nl()>();

        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFuncPrototype(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(functionDecl, cgen);

        $stack7 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack8 = virtualinvoke $stack7.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(32);

        virtualinvoke $stack8.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter openBlock()>();

        $stack10 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.BuildParams params>;

        $stack11 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: boolean isEntryPoint(org.ooc.frontend.BuildParams)>($stack10);

        if $stack11 == 0 goto label3;

        $stack20 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.BuildParams params>;

        $stack21 = $stack20.<org.ooc.frontend.BuildParams: boolean enableGC>;

        if $stack21 == 0 goto label2;

        $stack30 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack31 = virtualinvoke $stack30.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter nl()>();

        virtualinvoke $stack31.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("GC_INIT();");

     label2:
        $stack22 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack23 = virtualinvoke $stack22.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter nl()>();

        $stack24 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.model.Module module>;

        $stack25 = virtualinvoke $stack24.<org.ooc.frontend.model.Module: org.ooc.frontend.model.FunctionDecl getLoadFunc()>();

        $stack26 = virtualinvoke $stack25.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        $stack27 = virtualinvoke $stack23.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack26);

        virtualinvoke $stack27.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("();");

     label3:
        $stack12 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getBody()>();

        l2 = virtualinvoke $stack12.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label4:
        $stack14 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack14 == 0 goto label5;

        $stack18 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        line = (org.ooc.frontend.model.Line) $stack18;

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke line.<org.ooc.frontend.model.Line: void accept(org.ooc.frontend.Visitor)>($r0);

        goto label4;

     label5:
        $stack15 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack15.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter closeSpacedBlock()>();

        $stack17 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.VersionBlock getVersion()>();

        if $stack17 == null goto label6;

        staticinvoke <org.ooc.backend.cdirty.VersionBlockWriter: void writeVersionBlockEnd(org.ooc.backend.cdirty.CGenerator)>(cgen);

     label6:
        return;
    }

    public static void writeFuncPrototype(org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionDecl functionDecl;
        org.ooc.backend.cdirty.CGenerator cgen;

        functionDecl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFuncPrototype(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator,java.lang.String)>(functionDecl, cgen, null);

        return;
    }

    public static void writeFuncPrototype(org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator, java.lang.String) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionDecl functionDecl, $stack11, $stack19;
        boolean $stack4, $stack7, $stack9, $stack6;
        org.ooc.frontend.model.Type returnType;
        org.ooc.backend.cdirty.CGenerator cgen;
        java.lang.String additionalSuffix;
        org.ooc.frontend.model.Declaration $stack10, $stack18;
        org.ooc.backend.cdirty.AwesomeWriter $stack13, $stack24, $stack26, $stack27, $stack28, $stack32, $stack8;
        java.lang.Appendable $r0;

        functionDecl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        additionalSuffix := @parameter2: java.lang.String;

        $stack4 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: boolean isInline()>();

        if $stack4 == 0 goto label2;

        $stack27 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack26 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter hw>;

        if $stack27 != $stack26 goto label1;

        $stack32 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack32.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.TabbedWriter append(java.lang.String)>("inline ");

     label1:
        $stack28 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack28.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.TabbedWriter append(java.lang.String)>("static ");

     label2:
        returnType = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack6 = virtualinvoke returnType.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack6 == 0 goto label3;

        $stack24 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack24.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.TabbedWriter append(java.lang.String)>("void ");

        goto label5;

     label3:
        $stack7 = returnType instanceof org.ooc.frontend.model.FuncType;

        if $stack7 == 0 goto label4;

        $stack18 = virtualinvoke returnType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack19 = (org.ooc.frontend.model.FunctionDecl) $stack18;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: org.ooc.backend.cdirty.AwesomeWriter writeFuncPointerStart(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>($stack19, cgen);

        goto label5;

     label4:
        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void writeSpaced(org.ooc.frontend.model.Type,org.ooc.backend.cdirty.CGenerator)>(returnType, cgen);

     label5:
        $stack8 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $r0 = (java.lang.Appendable) $stack8;

        virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: void writeFullName(java.lang.Appendable)>($r0);

        if additionalSuffix == null goto label6;

        $stack13 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack13.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.TabbedWriter append(java.lang.String)>(additionalSuffix);

     label6:
        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFuncArgs(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(functionDecl, cgen);

        $stack9 = returnType instanceof org.ooc.frontend.model.FuncType;

        if $stack9 == 0 goto label7;

        $stack10 = virtualinvoke returnType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack11 = (org.ooc.frontend.model.FunctionDecl) $stack10;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: org.ooc.backend.cdirty.AwesomeWriter writeFuncPointerEnd(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>($stack11, cgen);

     label7:
        return;
    }

    public static void writeFuncArgs(org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionDecl functionDecl;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode $stack2;

        functionDecl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack2 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode FULL>;

        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFuncArgs(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode,org.ooc.frontend.model.TypeDecl,org.ooc.backend.cdirty.CGenerator)>(functionDecl, $stack2, null, cgen);

        return;
    }

    public static void writeFuncArgs(org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode, org.ooc.frontend.model.TypeDecl, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack9, $stack21, $stack29, $stack31, $stack34, $stack46, $stack50, $stack60, $stack64, $stack75, $stack78, $stack81;
        org.ooc.frontend.model.FunctionDecl functionDecl;
        org.ooc.frontend.model.NodeList $stack11;
        java.util.Iterator iter, arg#32;
        boolean $stack13, $stack20, $stack27, $stack39, $stack68, isFirst, $stack15, $stack19;
        java.lang.Object $stack23, $stack38, $stack71;
        org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode mode, $stack24, $stack25, $stack40, $stack41, $stack54, $stack55, $stack72, $stack73;
        org.ooc.frontend.model.Type $stack28, $stack45, $stack59, $stack74, $stack80, arg#11;
        java.lang.String $stack32, $stack48, $stack62, $stack76;
        org.ooc.frontend.model.TypeParam param;
        org.ooc.frontend.model.Argument $stack42, $stack44, $stack47, $stack56, $stack58, $stack61, arg;
        org.ooc.frontend.model.TypeDecl baseType;
        java.util.LinkedHashMap $stack16;
        java.util.Collection $stack17;
        org.ooc.frontend.Visitor $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        functionDecl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        mode := @parameter1: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode;

        baseType := @parameter2: org.ooc.frontend.model.TypeDecl;

        cgen := @parameter3: org.ooc.backend.cdirty.CGenerator;

        $stack9 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack9.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(40);

        isFirst = 1;

        $stack11 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getArguments()>();

        iter = virtualinvoke $stack11.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

        $stack13 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: boolean hasThis()>();

        if $stack13 == 0 goto label05;

        $stack68 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack68 == 0 goto label05;

        goto label01;

     label01:
        isFirst = 0;

        $stack71 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        arg = (org.ooc.frontend.model.Argument) $stack71;

        $stack72 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode NAMES_ONLY>;

        if mode != $stack72 goto label03;

        if baseType == null goto label02;

        $stack78 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack78.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("(");

        $stack80 = virtualinvoke baseType.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getType()>();

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack80.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r0);

        $stack81 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack81.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(") ");

     label02:
        $stack75 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack76 = virtualinvoke arg.<org.ooc.frontend.model.Argument: java.lang.String getName()>();

        virtualinvoke $stack75.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack76);

        goto label05;

     label03:
        $stack73 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode TYPES_ONLY>;

        if mode != $stack73 goto label04;

        $stack74 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $r1 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack74.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r1);

        goto label05;

     label04:
        $r2 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke arg.<org.ooc.frontend.model.Argument: void accept(org.ooc.frontend.Visitor)>($r2);

     label05:
        arg#11 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack15 = virtualinvoke arg#11.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack15 == 0 goto label09;

        if isFirst != 0 goto label06;

        $stack64 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack64.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(", ");

     label06:
        isFirst = 0;

        $stack54 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode NAMES_ONLY>;

        if mode != $stack54 goto label07;

        $stack60 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack61 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Argument getReturnArg()>();

        $stack62 = virtualinvoke $stack61.<org.ooc.frontend.model.Argument: java.lang.String getName()>();

        virtualinvoke $stack60.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack62);

        goto label09;

     label07:
        $stack55 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode TYPES_ONLY>;

        if mode != $stack55 goto label08;

        $stack58 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Argument getReturnArg()>();

        $stack59 = virtualinvoke $stack58.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $r3 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack59.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r3);

        goto label09;

     label08:
        $stack56 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Argument getReturnArg()>();

        $r4 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack56.<org.ooc.frontend.model.Argument: void accept(org.ooc.frontend.Visitor)>($r4);

     label09:
        $stack16 = virtualinvoke functionDecl.<org.ooc.frontend.model.FunctionDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack17 = virtualinvoke $stack16.<java.util.LinkedHashMap: java.util.Collection values()>();

        arg#32 = interfaceinvoke $stack17.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $stack19 = interfaceinvoke arg#32.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label16;

        $stack38 = interfaceinvoke arg#32.<java.util.Iterator: java.lang.Object next()>();

        param = (org.ooc.frontend.model.TypeParam) $stack38;

        $stack39 = virtualinvoke param.<org.ooc.frontend.model.TypeParam: boolean isGhost()>();

        if $stack39 == 0 goto label11;

        goto label10;

     label11:
        if isFirst != 0 goto label12;

        $stack50 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack50.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(", ");

     label12:
        isFirst = 0;

        $stack40 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode NAMES_ONLY>;

        if mode != $stack40 goto label13;

        $stack46 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack47 = virtualinvoke param.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Argument getArgument()>();

        $stack48 = virtualinvoke $stack47.<org.ooc.frontend.model.Argument: java.lang.String getName()>();

        virtualinvoke $stack46.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack48);

        goto label15;

     label13:
        $stack41 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode TYPES_ONLY>;

        if mode != $stack41 goto label14;

        $stack44 = virtualinvoke param.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Argument getArgument()>();

        $stack45 = virtualinvoke $stack44.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $r5 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack45.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r5);

        goto label15;

     label14:
        $stack42 = virtualinvoke param.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Argument getArgument()>();

        $r6 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack42.<org.ooc.frontend.model.Argument: void accept(org.ooc.frontend.Visitor)>($r6);

     label15:
        goto label10;

     label16:
        $stack20 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label22;

        $stack23 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        arg = (org.ooc.frontend.model.Argument) $stack23;

        if isFirst != 0 goto label17;

        $stack34 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack34.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(", ");

     label17:
        isFirst = 0;

        $stack24 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode NAMES_ONLY>;

        if mode != $stack24 goto label18;

        $stack31 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack32 = virtualinvoke arg.<org.ooc.frontend.model.Argument: java.lang.String getName()>();

        virtualinvoke $stack31.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack32);

        goto label21;

     label18:
        $stack25 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode TYPES_ONLY>;

        if mode != $stack25 goto label20;

        $stack27 = arg instanceof org.ooc.frontend.model.VarArg;

        if $stack27 == 0 goto label19;

        $stack29 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack29.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("...");

        goto label21;

     label19:
        $stack28 = virtualinvoke arg.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.Type getType()>();

        $r7 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack28.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r7);

        goto label21;

     label20:
        $r8 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke arg.<org.ooc.frontend.model.Argument: void accept(org.ooc.frontend.Visitor)>($r8);

     label21:
        goto label16;

     label22:
        $stack21 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack21.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(41);

        return;
    }
}
