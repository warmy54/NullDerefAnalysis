public class GLCanvasFrame extends org.bytedeco.javacv.CanvasFrame
{
    private int[] params;
    private java.awt.Color color;
    private int width;
    private int height;
    private int format;
    private int type;
    private java.nio.Buffer buffer;
    private int frameBuffer;
    private int renderBuffer;
    private com.jogamp.opengl.GLEventListener eventListener;
    private static org.bytedeco.javacv.GLCanvasFrame canvasFrame;
    static final boolean $assertionsDisabled;

    public void <init>(java.lang.String)
    {
        GLCanvasFrame this;
        java.lang.String title;
        org.bytedeco.javacv.GLCanvasFrame $r0;

        this := @this: GLCanvasFrame;

        title := @parameter0: java.lang.String;

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $r0.<org.bytedeco.javacv.GLCanvasFrame: void <init>(java.lang.String,double)>(title, 0.0);

        return;
    }

    public void <init>(java.lang.String, double)
    {
        GLCanvasFrame this;
        java.lang.String title;
        double gamma;
        int[] $stack4;
        org.bytedeco.javacv.GLCanvasFrame$2 $u0;
        org.bytedeco.javacv.GLCanvasFrame $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8;
        com.jogamp.opengl.GLEventListener $r7;

        this := @this: GLCanvasFrame;

        title := @parameter0: java.lang.String;

        gamma := @parameter1: double;

        specialinvoke this.<org.bytedeco.javacv.CanvasFrame: void <init>(java.lang.String,double)>(title, gamma);

        $stack4 = newarray (int)[2];

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r0.<org.bytedeco.javacv.GLCanvasFrame: int[] params> = $stack4;

        $r1 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r1.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Color color> = null;

        $r2 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r2.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = null;

        $r3 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r3.<org.bytedeco.javacv.GLCanvasFrame: int frameBuffer> = 0;

        $r4 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r4.<org.bytedeco.javacv.GLCanvasFrame: int renderBuffer> = 0;

        $u0 = new org.bytedeco.javacv.GLCanvasFrame$2;

        $r5 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $u0.<org.bytedeco.javacv.GLCanvasFrame$2: void <init>(org.bytedeco.javacv.GLCanvasFrame)>($r5);

        $r6 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r7 = (com.jogamp.opengl.GLEventListener) $u0;

        $r6.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.GLEventListener eventListener> = $r7;

        $r8 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $r8.<org.bytedeco.javacv.GLCanvasFrame: void init(boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLContext)>(0, null, null);

        return;
    }

    public void <init>(java.lang.String, java.awt.GraphicsConfiguration, com.jogamp.opengl.GLCapabilitiesImmutable, com.jogamp.opengl.GLContext)
    {
        GLCanvasFrame this;
        java.lang.String title;
        java.awt.GraphicsConfiguration gc;
        com.jogamp.opengl.GLCapabilitiesImmutable caps;
        com.jogamp.opengl.GLContext shareWith;
        org.bytedeco.javacv.GLCanvasFrame $r0;

        this := @this: GLCanvasFrame;

        title := @parameter0: java.lang.String;

        gc := @parameter1: java.awt.GraphicsConfiguration;

        caps := @parameter2: com.jogamp.opengl.GLCapabilitiesImmutable;

        shareWith := @parameter3: com.jogamp.opengl.GLContext;

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $r0.<org.bytedeco.javacv.GLCanvasFrame: void <init>(java.lang.String,java.awt.GraphicsConfiguration,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLContext,double)>(title, gc, caps, shareWith, 0.0);

        return;
    }

    public void <init>(java.lang.String, java.awt.GraphicsConfiguration, com.jogamp.opengl.GLCapabilitiesImmutable, com.jogamp.opengl.GLContext, double)
    {
        GLCanvasFrame this;
        java.lang.String title;
        java.awt.GraphicsConfiguration gc;
        double gamma;
        int[] $stack7;
        com.jogamp.opengl.GLCapabilitiesImmutable caps;
        com.jogamp.opengl.GLContext shareWith;
        org.bytedeco.javacv.GLCanvasFrame$2 $u0;
        org.bytedeco.javacv.GLCanvasFrame $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8;
        com.jogamp.opengl.GLEventListener $r7;

        this := @this: GLCanvasFrame;

        title := @parameter0: java.lang.String;

        gc := @parameter1: java.awt.GraphicsConfiguration;

        caps := @parameter2: com.jogamp.opengl.GLCapabilitiesImmutable;

        shareWith := @parameter3: com.jogamp.opengl.GLContext;

        gamma := @parameter4: double;

        specialinvoke this.<org.bytedeco.javacv.CanvasFrame: void <init>(java.lang.String,java.awt.GraphicsConfiguration,double)>(title, gc, gamma);

        $stack7 = newarray (int)[2];

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r0.<org.bytedeco.javacv.GLCanvasFrame: int[] params> = $stack7;

        $r1 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r1.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Color color> = null;

        $r2 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r2.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = null;

        $r3 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r3.<org.bytedeco.javacv.GLCanvasFrame: int frameBuffer> = 0;

        $r4 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r4.<org.bytedeco.javacv.GLCanvasFrame: int renderBuffer> = 0;

        $u0 = new org.bytedeco.javacv.GLCanvasFrame$2;

        $r5 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $u0.<org.bytedeco.javacv.GLCanvasFrame$2: void <init>(org.bytedeco.javacv.GLCanvasFrame)>($r5);

        $r6 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r7 = (com.jogamp.opengl.GLEventListener) $u0;

        $r6.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.GLEventListener eventListener> = $r7;

        $r8 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $r8.<org.bytedeco.javacv.GLCanvasFrame: void init(boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLContext)>(0, caps, shareWith);

        return;
    }

    public void <init>(java.lang.String, int, java.awt.DisplayMode) throws org.bytedeco.javacv.CanvasFrame$Exception
    {
        GLCanvasFrame this;
        java.lang.String title;
        int screenNumber;
        java.awt.DisplayMode displayMode;
        org.bytedeco.javacv.GLCanvasFrame $r0;

        this := @this: GLCanvasFrame;

        title := @parameter0: java.lang.String;

        screenNumber := @parameter1: int;

        displayMode := @parameter2: java.awt.DisplayMode;

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $r0.<org.bytedeco.javacv.GLCanvasFrame: void <init>(java.lang.String,int,java.awt.DisplayMode,double)>(title, screenNumber, displayMode, 0.0);

        return;
    }

    public void <init>(java.lang.String, int, java.awt.DisplayMode, double) throws org.bytedeco.javacv.CanvasFrame$Exception
    {
        GLCanvasFrame this;
        java.lang.String title;
        int screenNumber;
        java.awt.DisplayMode displayMode;
        double gamma;
        int[] $stack6;
        org.bytedeco.javacv.GLCanvasFrame$2 $u0;
        org.bytedeco.javacv.GLCanvasFrame $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8;
        com.jogamp.opengl.GLEventListener $r7;

        this := @this: GLCanvasFrame;

        title := @parameter0: java.lang.String;

        screenNumber := @parameter1: int;

        displayMode := @parameter2: java.awt.DisplayMode;

        gamma := @parameter3: double;

        specialinvoke this.<org.bytedeco.javacv.CanvasFrame: void <init>(java.lang.String,int,java.awt.DisplayMode,double)>(title, screenNumber, displayMode, gamma);

        $stack6 = newarray (int)[2];

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r0.<org.bytedeco.javacv.GLCanvasFrame: int[] params> = $stack6;

        $r1 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r1.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Color color> = null;

        $r2 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r2.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = null;

        $r3 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r3.<org.bytedeco.javacv.GLCanvasFrame: int frameBuffer> = 0;

        $r4 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r4.<org.bytedeco.javacv.GLCanvasFrame: int renderBuffer> = 0;

        $u0 = new org.bytedeco.javacv.GLCanvasFrame$2;

        $r5 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $u0.<org.bytedeco.javacv.GLCanvasFrame$2: void <init>(org.bytedeco.javacv.GLCanvasFrame)>($r5);

        $r6 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r7 = (com.jogamp.opengl.GLEventListener) $u0;

        $r6.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.GLEventListener eventListener> = $r7;

        $r8 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $r8.<org.bytedeco.javacv.GLCanvasFrame: void init(boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLContext)>(1, null, null);

        return;
    }

    public void <init>(java.lang.String, int, java.awt.DisplayMode, com.jogamp.opengl.GLCapabilitiesImmutable, com.jogamp.opengl.GLContext) throws org.bytedeco.javacv.CanvasFrame$Exception
    {
        GLCanvasFrame this;
        java.lang.String title;
        int screenNumber;
        java.awt.DisplayMode displayMode;
        com.jogamp.opengl.GLCapabilitiesImmutable caps;
        com.jogamp.opengl.GLContext shareWith;
        org.bytedeco.javacv.GLCanvasFrame $r0;

        this := @this: GLCanvasFrame;

        title := @parameter0: java.lang.String;

        screenNumber := @parameter1: int;

        displayMode := @parameter2: java.awt.DisplayMode;

        caps := @parameter3: com.jogamp.opengl.GLCapabilitiesImmutable;

        shareWith := @parameter4: com.jogamp.opengl.GLContext;

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $r0.<org.bytedeco.javacv.GLCanvasFrame: void <init>(java.lang.String,int,java.awt.DisplayMode,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLContext,double)>(title, screenNumber, displayMode, caps, shareWith, 0.0);

        return;
    }

    public void <init>(java.lang.String, int, java.awt.DisplayMode, com.jogamp.opengl.GLCapabilitiesImmutable, com.jogamp.opengl.GLContext, double) throws org.bytedeco.javacv.CanvasFrame$Exception
    {
        GLCanvasFrame this;
        java.lang.String title;
        int screenNumber;
        java.awt.DisplayMode displayMode;
        double gamma;
        int[] $stack8;
        com.jogamp.opengl.GLCapabilitiesImmutable caps;
        com.jogamp.opengl.GLContext shareWith;
        org.bytedeco.javacv.GLCanvasFrame$2 $u0;
        org.bytedeco.javacv.GLCanvasFrame $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8;
        com.jogamp.opengl.GLEventListener $r7;

        this := @this: GLCanvasFrame;

        title := @parameter0: java.lang.String;

        screenNumber := @parameter1: int;

        displayMode := @parameter2: java.awt.DisplayMode;

        caps := @parameter3: com.jogamp.opengl.GLCapabilitiesImmutable;

        shareWith := @parameter4: com.jogamp.opengl.GLContext;

        gamma := @parameter5: double;

        specialinvoke this.<org.bytedeco.javacv.CanvasFrame: void <init>(java.lang.String,int,java.awt.DisplayMode,double)>(title, screenNumber, displayMode, gamma);

        $stack8 = newarray (int)[2];

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r0.<org.bytedeco.javacv.GLCanvasFrame: int[] params> = $stack8;

        $r1 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r1.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Color color> = null;

        $r2 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r2.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = null;

        $r3 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r3.<org.bytedeco.javacv.GLCanvasFrame: int frameBuffer> = 0;

        $r4 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r4.<org.bytedeco.javacv.GLCanvasFrame: int renderBuffer> = 0;

        $u0 = new org.bytedeco.javacv.GLCanvasFrame$2;

        $r5 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $u0.<org.bytedeco.javacv.GLCanvasFrame$2: void <init>(org.bytedeco.javacv.GLCanvasFrame)>($r5);

        $r6 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r7 = (com.jogamp.opengl.GLEventListener) $u0;

        $r6.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.GLEventListener eventListener> = $r7;

        $r8 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $r8.<org.bytedeco.javacv.GLCanvasFrame: void init(boolean,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLContext)>(1, caps, shareWith);

        return;
    }

    private void init(boolean, com.jogamp.opengl.GLCapabilitiesImmutable, com.jogamp.opengl.GLContext)
    {
        GLCanvasFrame this;
        com.jogamp.opengl.GLCapabilitiesImmutable caps;
        com.jogamp.opengl.GLContext shareWith;
        boolean fullScreen, $stack7;
        java.lang.Exception $stack8;
        org.bytedeco.javacv.GLCanvasFrame$1 $u0;
        org.bytedeco.javacv.GLCanvasFrame $r0;
        java.lang.Runnable $r1, $r2;

        this := @this: GLCanvasFrame;

        fullScreen := @parameter0: boolean;

        caps := @parameter1: com.jogamp.opengl.GLCapabilitiesImmutable;

        shareWith := @parameter2: com.jogamp.opengl.GLContext;

        $u0 = new org.bytedeco.javacv.GLCanvasFrame$1;

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        specialinvoke $u0.<org.bytedeco.javacv.GLCanvasFrame$1: void <init>(org.bytedeco.javacv.GLCanvasFrame,com.jogamp.opengl.GLCapabilitiesImmutable,com.jogamp.opengl.GLContext,boolean)>($r0, caps, shareWith, fullScreen);

        $stack7 = staticinvoke <java.awt.EventQueue: boolean isDispatchThread()>();

        if $stack7 == 0 goto label1;

        $r1 = (java.lang.Runnable) $u0;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        goto label4;

     label1:
        $r2 = (java.lang.Runnable) $u0;

        staticinvoke <java.awt.EventQueue: void invokeAndWait(java.lang.Runnable)>($r2);

     label2:
        goto label4;

     label3:
        $stack8 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void initCanvas(boolean, java.awt.DisplayMode, double)
    {
        GLCanvasFrame this;
        boolean fullScreen;
        java.awt.DisplayMode displayMode;
        double gamma;

        this := @this: GLCanvasFrame;

        fullScreen := @parameter0: boolean;

        displayMode := @parameter1: java.awt.DisplayMode;

        gamma := @parameter2: double;

        return;
    }

    public com.jogamp.opengl.awt.GLCanvas getGLCanvas()
    {
        GLCanvasFrame this;
        java.awt.Canvas $stack1;
        com.jogamp.opengl.awt.GLCanvas $stack2;
        org.bytedeco.javacv.GLCanvasFrame $r0;

        this := @this: GLCanvasFrame;

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $stack1 = $r0.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Canvas canvas>;

        $stack2 = (com.jogamp.opengl.awt.GLCanvas) $stack1;

        return $stack2;
    }

    public void showColor(java.awt.Color)
    {
        GLCanvasFrame this;
        java.awt.Color color;
        com.jogamp.opengl.awt.GLCanvas $stack2;
        org.bytedeco.javacv.GLCanvasFrame $r0, $r1, $r2;

        this := @this: GLCanvasFrame;

        color := @parameter0: java.awt.Color;

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r0.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Color color> = color;

        $r1 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r1.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = null;

        $r2 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $stack2 = virtualinvoke $r2.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.awt.GLCanvas getGLCanvas()>();

        virtualinvoke $stack2.<com.jogamp.opengl.awt.GLCanvas: void display()>();

        return;
    }

    public void showImage(org.bytedeco.javacv.Frame)
    {
        GLCanvasFrame this;
        org.bytedeco.javacv.Frame frame;
        org.bytedeco.javacv.GLCanvasFrame $r0;

        this := @this: GLCanvasFrame;

        frame := @parameter0: org.bytedeco.javacv.Frame;

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        virtualinvoke $r0.<org.bytedeco.javacv.GLCanvasFrame: void showImage(org.bytedeco.javacv.Frame,boolean)>(frame, 0);

        return;
    }

    public void showImage(org.bytedeco.javacv.Frame, boolean)
    {
        boolean flipChannels, $stack11, $stack14;
        org.bytedeco.javacv.Frame frame;
        GLCanvasFrame this;
        int $stack3, $stack4, $stack7, $stack8;
        java.nio.Buffer[] $stack5;
        java.nio.Buffer $stack6;
        com.jogamp.opengl.awt.GLCanvas $stack9;
        java.lang.RuntimeException $u0;
        java.lang.AssertionError $u1, $u2;
        org.bytedeco.javacv.GLCanvasFrame $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        this := @this: GLCanvasFrame;

        frame := @parameter0: org.bytedeco.javacv.Frame;

        flipChannels := @parameter1: boolean;

        if flipChannels == 0 goto label01;

        $u0 = new java.lang.RuntimeException;

        specialinvoke $u0.<java.lang.RuntimeException: void <init>(java.lang.String)>("GLCanvasFrame does not support channel flipping.");

        throw $u0;

     label01:
        if frame != null goto label02;

        return;

     label02:
        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r0.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Color color> = null;

        $stack3 = frame.<org.bytedeco.javacv.Frame: int imageWidth>;

        $r1 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r1.<org.bytedeco.javacv.GLCanvasFrame: int width> = $stack3;

        $stack4 = frame.<org.bytedeco.javacv.Frame: int imageHeight>;

        $r2 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r2.<org.bytedeco.javacv.GLCanvasFrame: int height> = $stack4;

        $stack5 = frame.<org.bytedeco.javacv.Frame: java.nio.Buffer[] image>;

        $stack6 = $stack5[0];

        $r3 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r3.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = $stack6;

        $stack7 = frame.<org.bytedeco.javacv.Frame: int imageDepth>;

        lookupswitch($stack7)
        {
            case -32: goto label07;
            case -16: goto label05;
            case -8: goto label03;
            case 8: goto label04;
            case 16: goto label06;
            case 32: goto label08;
            case 64: goto label09;
            default: goto label10;
        };

     label03:
        $r4 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r4.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5120;

        goto label11;

     label04:
        $r5 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r5.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5121;

        goto label11;

     label05:
        $r6 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r6.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5122;

        goto label11;

     label06:
        $r7 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r7.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5123;

        goto label11;

     label07:
        $r8 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r8.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5124;

        goto label11;

     label08:
        $r9 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r9.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5126;

        goto label11;

     label09:
        $r10 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r10.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5130;

        goto label11;

     label10:
        $stack14 = <org.bytedeco.javacv.GLCanvasFrame: boolean $assertionsDisabled>;

        if $stack14 != 0 goto label11;

        $u1 = new java.lang.AssertionError;

        specialinvoke $u1.<java.lang.AssertionError: void <init>()>();

        throw $u1;

     label11:
        $stack8 = frame.<org.bytedeco.javacv.Frame: int imageChannels>;

        tableswitch($stack8)
        {
            case 1: goto label12;
            case 2: goto label13;
            case 3: goto label14;
            case 4: goto label15;
            default: goto label16;
        };

     label12:
        $r11 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r11.<org.bytedeco.javacv.GLCanvasFrame: int format> = 6409;

        goto label17;

     label13:
        $r12 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r12.<org.bytedeco.javacv.GLCanvasFrame: int format> = 33319;

        goto label17;

     label14:
        $r13 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r13.<org.bytedeco.javacv.GLCanvasFrame: int format> = 6407;

        goto label17;

     label15:
        $r14 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r14.<org.bytedeco.javacv.GLCanvasFrame: int format> = 6408;

        goto label17;

     label16:
        $stack11 = <org.bytedeco.javacv.GLCanvasFrame: boolean $assertionsDisabled>;

        if $stack11 != 0 goto label17;

        $u2 = new java.lang.AssertionError;

        specialinvoke $u2.<java.lang.AssertionError: void <init>()>();

        throw $u2;

     label17:
        $r15 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $stack9 = virtualinvoke $r15.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.awt.GLCanvas getGLCanvas()>();

        virtualinvoke $stack9.<com.jogamp.opengl.awt.GLCanvas: void display()>();

        return;
    }

    public void showImage(java.awt.Image)
    {
        java.awt.Image image;
        boolean $stack2;
        GLCanvasFrame this;
        java.awt.image.BufferedImage $stack3;
        java.lang.StringBuilder $stack6, $stack7, $stack8, $u0;
        java.lang.String $stack9;
        java.lang.RuntimeException $u1;
        org.bytedeco.javacv.GLCanvasFrame $r0;

        this := @this: GLCanvasFrame;

        image := @parameter0: java.awt.Image;

        $stack2 = image instanceof java.awt.image.BufferedImage;

        if $stack2 != 0 goto label1;

        $u1 = new java.lang.RuntimeException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack6 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GLCanvasFrame does not support ");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(image);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", BufferedImage required.");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack9);

        throw $u1;

     label1:
        $stack3 = (java.awt.image.BufferedImage) image;

        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        virtualinvoke $r0.<org.bytedeco.javacv.GLCanvasFrame: void showImage(java.awt.image.BufferedImage)>($stack3);

        return;
    }

    public void showImage(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage image;
        GLCanvasFrame this;
        int $stack3, $stack4, $stack15;
        java.awt.image.WritableRaster $stack5;
        java.awt.image.DataBuffer buffer;
        boolean $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack18;
        java.awt.image.DataBufferUShort $stack21;
        short[] $stack22, $stack26;
        java.nio.ShortBuffer $stack23, $stack27;
        java.awt.image.DataBufferShort $stack25;
        java.awt.image.DataBufferInt $stack28;
        int[] $stack29;
        java.nio.IntBuffer $stack30;
        java.awt.image.DataBufferFloat $stack31;
        float[] $stack32;
        java.nio.FloatBuffer $stack33;
        java.awt.image.DataBufferDouble $stack34;
        double[] $stack35;
        java.nio.DoubleBuffer $stack36;
        java.awt.image.DataBufferByte $stack37;
        byte[] $stack38;
        java.nio.ByteBuffer $stack39;
        java.awt.image.SampleModel $stack14;
        com.jogamp.opengl.awt.GLCanvas $stack16;
        java.lang.AssertionError $u0, $u1;
        org.bytedeco.javacv.GLCanvasFrame $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        this := @this: GLCanvasFrame;

        image := @parameter0: java.awt.image.BufferedImage;

        if image != null goto label01;

        return;

     label01:
        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r0.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Color color> = null;

        $stack3 = virtualinvoke image.<java.awt.image.BufferedImage: int getWidth()>();

        $r1 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r1.<org.bytedeco.javacv.GLCanvasFrame: int width> = $stack3;

        $stack4 = virtualinvoke image.<java.awt.image.BufferedImage: int getHeight()>();

        $r2 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r2.<org.bytedeco.javacv.GLCanvasFrame: int height> = $stack4;

        $stack5 = virtualinvoke image.<java.awt.image.BufferedImage: java.awt.image.WritableRaster getRaster()>();

        buffer = virtualinvoke $stack5.<java.awt.image.WritableRaster: java.awt.image.DataBuffer getDataBuffer()>();

        $stack7 = buffer instanceof java.awt.image.DataBufferByte;

        if $stack7 == 0 goto label02;

        $stack37 = (java.awt.image.DataBufferByte) buffer;

        $stack38 = virtualinvoke $stack37.<java.awt.image.DataBufferByte: byte[] getData()>();

        $stack39 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($stack38);

        $r3 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r3.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = $stack39;

        $r4 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r4.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5121;

        goto label08;

     label02:
        $stack8 = buffer instanceof java.awt.image.DataBufferDouble;

        if $stack8 == 0 goto label03;

        $stack34 = (java.awt.image.DataBufferDouble) buffer;

        $stack35 = virtualinvoke $stack34.<java.awt.image.DataBufferDouble: double[] getData()>();

        $stack36 = staticinvoke <java.nio.DoubleBuffer: java.nio.DoubleBuffer wrap(double[])>($stack35);

        $r5 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r5.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = $stack36;

        $r6 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r6.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5130;

        goto label08;

     label03:
        $stack9 = buffer instanceof java.awt.image.DataBufferFloat;

        if $stack9 == 0 goto label04;

        $stack31 = (java.awt.image.DataBufferFloat) buffer;

        $stack32 = virtualinvoke $stack31.<java.awt.image.DataBufferFloat: float[] getData()>();

        $stack33 = staticinvoke <java.nio.FloatBuffer: java.nio.FloatBuffer wrap(float[])>($stack32);

        $r7 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r7.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = $stack33;

        $r8 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r8.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5126;

        goto label08;

     label04:
        $stack10 = buffer instanceof java.awt.image.DataBufferInt;

        if $stack10 == 0 goto label05;

        $stack28 = (java.awt.image.DataBufferInt) buffer;

        $stack29 = virtualinvoke $stack28.<java.awt.image.DataBufferInt: int[] getData()>();

        $stack30 = staticinvoke <java.nio.IntBuffer: java.nio.IntBuffer wrap(int[])>($stack29);

        $r9 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r9.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = $stack30;

        $r10 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r10.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5124;

        goto label08;

     label05:
        $stack11 = buffer instanceof java.awt.image.DataBufferShort;

        if $stack11 == 0 goto label06;

        $stack25 = (java.awt.image.DataBufferShort) buffer;

        $stack26 = virtualinvoke $stack25.<java.awt.image.DataBufferShort: short[] getData()>();

        $stack27 = staticinvoke <java.nio.ShortBuffer: java.nio.ShortBuffer wrap(short[])>($stack26);

        $r11 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r11.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = $stack27;

        $r12 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r12.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5122;

        goto label08;

     label06:
        $stack12 = buffer instanceof java.awt.image.DataBufferUShort;

        if $stack12 == 0 goto label07;

        $stack21 = (java.awt.image.DataBufferUShort) buffer;

        $stack22 = virtualinvoke $stack21.<java.awt.image.DataBufferUShort: short[] getData()>();

        $stack23 = staticinvoke <java.nio.ShortBuffer: java.nio.ShortBuffer wrap(short[])>($stack22);

        $r13 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r13.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = $stack23;

        $r14 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r14.<org.bytedeco.javacv.GLCanvasFrame: int type> = 5123;

        goto label08;

     label07:
        $stack13 = <org.bytedeco.javacv.GLCanvasFrame: boolean $assertionsDisabled>;

        if $stack13 != 0 goto label08;

        $u0 = new java.lang.AssertionError;

        specialinvoke $u0.<java.lang.AssertionError: void <init>()>();

        throw $u0;

     label08:
        $stack14 = virtualinvoke image.<java.awt.image.BufferedImage: java.awt.image.SampleModel getSampleModel()>();

        $stack15 = virtualinvoke $stack14.<java.awt.image.SampleModel: int getNumBands()>();

        tableswitch($stack15)
        {
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label12;
            default: goto label13;
        };

     label09:
        $r15 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r15.<org.bytedeco.javacv.GLCanvasFrame: int format> = 6409;

        goto label14;

     label10:
        $r16 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r16.<org.bytedeco.javacv.GLCanvasFrame: int format> = 33319;

        goto label14;

     label11:
        $r17 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r17.<org.bytedeco.javacv.GLCanvasFrame: int format> = 6407;

        goto label14;

     label12:
        $r18 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r18.<org.bytedeco.javacv.GLCanvasFrame: int format> = 6408;

        goto label14;

     label13:
        $stack18 = <org.bytedeco.javacv.GLCanvasFrame: boolean $assertionsDisabled>;

        if $stack18 != 0 goto label14;

        $u1 = new java.lang.AssertionError;

        specialinvoke $u1.<java.lang.AssertionError: void <init>()>();

        throw $u1;

     label14:
        $r19 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $stack16 = virtualinvoke $r19.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.awt.GLCanvas getGLCanvas()>();

        virtualinvoke $stack16.<com.jogamp.opengl.awt.GLCanvas: void display()>();

        return;
    }

    public void showImage(int)
    {
        int renderBuffer;
        GLCanvasFrame this;
        com.jogamp.opengl.awt.GLCanvas $stack2;
        org.bytedeco.javacv.GLCanvasFrame $r0, $r1, $r2, $r3;

        this := @this: GLCanvasFrame;

        renderBuffer := @parameter0: int;

        if renderBuffer > 0 goto label1;

        return;

     label1:
        $r0 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r0.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Color color> = null;

        $r1 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r1.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer> = null;

        $r2 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $r2.<org.bytedeco.javacv.GLCanvasFrame: int renderBuffer> = renderBuffer;

        $r3 = (org.bytedeco.javacv.GLCanvasFrame) this;

        $stack2 = virtualinvoke $r3.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.awt.GLCanvas getGLCanvas()>();

        virtualinvoke $stack2.<com.jogamp.opengl.awt.GLCanvas: void display()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        org.bytedeco.javacv.GLCanvasFrame $stack7, $stack14, $stack15, $stack17, $stack20;
        com.jogamp.opengl.awt.GLCanvas $stack8;
        com.jogamp.opengl.GLContext $stack9;
        org.bytedeco.opencv.opencv_core.IplImage image;
        com.jogamp.opencl.CLMemory$Mem[] $stack11;
        com.jogamp.opencl.gl.CLGLImage2d imageCLGL;
        int $stack18, i;
        java.awt.Color $stack19;
        java.lang.String[] args;
        org.bytedeco.javacv.GLCanvasFrame$3 $u0;
        org.bytedeco.javacv.JavaCVCL $u1;
        java.lang.Runnable $r0;
        com.jogamp.opencl.CLObject $r1, $r3;
        com.jogamp.opencl.CLImage2d $r2;

        args := @parameter0: java.lang.String[];

        $u0 = new org.bytedeco.javacv.GLCanvasFrame$3;

        specialinvoke $u0.<org.bytedeco.javacv.GLCanvasFrame$3: void <init>()>();

        $r0 = (java.lang.Runnable) $u0;

        staticinvoke <java.awt.EventQueue: void invokeAndWait(java.lang.Runnable)>($r0);

        $u1 = new org.bytedeco.javacv.JavaCVCL;

        $stack7 = <org.bytedeco.javacv.GLCanvasFrame: org.bytedeco.javacv.GLCanvasFrame canvasFrame>;

        $stack8 = virtualinvoke $stack7.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.awt.GLCanvas getGLCanvas()>();

        $stack9 = virtualinvoke $stack8.<com.jogamp.opengl.awt.GLCanvas: com.jogamp.opengl.GLContext getContext()>();

        specialinvoke $u1.<org.bytedeco.javacv.JavaCVCL: void <init>(com.jogamp.opengl.GLContext)>($stack9);

        image = staticinvoke <org.bytedeco.opencv.global.opencv_imgcodecs: org.bytedeco.opencv.opencv_core.IplImage cvLoadImageBGRA(java.lang.String)>("/usr/share/opencv/samples/c/lena.jpg");

        $stack11 = newarray (com.jogamp.opencl.CLMemory$Mem)[0];

        imageCLGL = virtualinvoke $u1.<org.bytedeco.javacv.JavaCVCL: com.jogamp.opencl.gl.CLGLImage2d createCLGLImageFrom(org.bytedeco.opencv.opencv_core.IplImage,com.jogamp.opencl.CLMemory$Mem[])>(image, $stack11);

        $r1 = (com.jogamp.opencl.CLObject) imageCLGL;

        virtualinvoke $u1.<org.bytedeco.javacv.JavaCVCL: void acquireGLObject(com.jogamp.opencl.CLObject)>($r1);

        $r2 = (com.jogamp.opencl.CLImage2d) imageCLGL;

        virtualinvoke $u1.<org.bytedeco.javacv.JavaCVCL: com.jogamp.opencl.CLImage2d writeImage(com.jogamp.opencl.CLImage2d,org.bytedeco.opencv.opencv_core.IplImage,boolean)>($r2, image, 1);

        $r3 = (com.jogamp.opencl.CLObject) imageCLGL;

        virtualinvoke $u1.<org.bytedeco.javacv.JavaCVCL: void releaseGLObject(com.jogamp.opencl.CLObject)>($r3);

        $stack14 = <org.bytedeco.javacv.GLCanvasFrame: org.bytedeco.javacv.GLCanvasFrame canvasFrame>;

        virtualinvoke $stack14.<org.bytedeco.javacv.GLCanvasFrame: void setCanvasScale(double)>(0.5);

        i = 0;

     label1:
        if i >= 1000 goto label2;

        $stack17 = <org.bytedeco.javacv.GLCanvasFrame: org.bytedeco.javacv.GLCanvasFrame canvasFrame>;

        $stack18 = virtualinvoke imageCLGL.<com.jogamp.opencl.gl.CLGLImage2d: int getGLObjectID()>();

        virtualinvoke $stack17.<org.bytedeco.javacv.GLCanvasFrame: void showImage(int)>($stack18);

        staticinvoke <java.lang.Thread: void sleep(long)>(10L);

        $stack20 = <org.bytedeco.javacv.GLCanvasFrame: org.bytedeco.javacv.GLCanvasFrame canvasFrame>;

        $stack19 = <java.awt.Color: java.awt.Color RED>;

        virtualinvoke $stack20.<org.bytedeco.javacv.GLCanvasFrame: void showColor(java.awt.Color)>($stack19);

        staticinvoke <java.lang.Thread: void sleep(long)>(10L);

        i = i + 1;

        goto label1;

     label2:
        $stack15 = <org.bytedeco.javacv.GLCanvasFrame: org.bytedeco.javacv.GLCanvasFrame canvasFrame>;

        virtualinvoke $stack15.<org.bytedeco.javacv.GLCanvasFrame: java.awt.event.KeyEvent waitKey()>();

        virtualinvoke $u1.<org.bytedeco.javacv.JavaCVCL: void release()>();

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;
    }

    static com.jogamp.opengl.GLEventListener access$000(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        com.jogamp.opengl.GLEventListener $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: com.jogamp.opengl.GLEventListener eventListener>;

        return $stack1;
    }

    static int[] access$100(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        int[] $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: int[] params>;

        return $stack1;
    }

    static int access$202(org.bytedeco.javacv.GLCanvasFrame, int)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        int x1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        x1 := @parameter1: int;

        x0.<org.bytedeco.javacv.GLCanvasFrame: int frameBuffer> = x1;

        return x1;
    }

    static int access$200(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        int $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: int frameBuffer>;

        return $stack1;
    }

    static java.awt.Color access$300(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        java.awt.Color $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: java.awt.Color color>;

        return $stack1;
    }

    static java.nio.Buffer access$400(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        java.nio.Buffer $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: java.nio.Buffer buffer>;

        return $stack1;
    }

    static int access$500(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        int $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: int width>;

        return $stack1;
    }

    static int access$600(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        int $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: int height>;

        return $stack1;
    }

    static int access$700(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        int $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: int format>;

        return $stack1;
    }

    static int access$800(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        int $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: int type>;

        return $stack1;
    }

    static int access$900(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;
        int $stack1;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        $stack1 = x0.<org.bytedeco.javacv.GLCanvasFrame: int renderBuffer>;

        return $stack1;
    }

    static org.bytedeco.javacv.GLCanvasFrame access$1002(org.bytedeco.javacv.GLCanvasFrame)
    {
        org.bytedeco.javacv.GLCanvasFrame x0;

        x0 := @parameter0: org.bytedeco.javacv.GLCanvasFrame;

        <org.bytedeco.javacv.GLCanvasFrame: org.bytedeco.javacv.GLCanvasFrame canvasFrame> = x0;

        return x0;
    }

    static org.bytedeco.javacv.GLCanvasFrame access$1000()
    {
        org.bytedeco.javacv.GLCanvasFrame $stack0;

        $stack0 = <org.bytedeco.javacv.GLCanvasFrame: org.bytedeco.javacv.GLCanvasFrame canvasFrame>;

        return $stack0;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack2;

        $stack0 = class "Lorg/bytedeco/javacv/GLCanvasFrame;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        <org.bytedeco.javacv.GLCanvasFrame: boolean $assertionsDisabled> = $stack2;

        return;
    }
}
