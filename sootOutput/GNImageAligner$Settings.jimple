public class GNImageAligner$Settings extends org.bytedeco.javacv.ImageAligner$Settings implements java.lang.Cloneable
{
    double stepSize;
    double[] lineSearch;
    double deltaMin;
    double deltaMax;
    double displacementMax;
    double alphaSubspace;
    double alphaTikhonov;
    org.bytedeco.opencv.opencv_core.CvMat gammaTgamma;
    boolean constrained;

    public void <init>()
    {
        GNImageAligner$Settings this;
        double[] $stack1;
        org.bytedeco.javacv.GNImageAligner$Settings $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: GNImageAligner$Settings;

        specialinvoke this.<org.bytedeco.javacv.ImageAligner$Settings: void <init>()>();

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double stepSize> = 0.1;

        $stack1 = newarray (double)[2];

        $stack1[0] = 1.0;

        $stack1[1] = 0.25;

        $r1 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r1.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch> = $stack1;

        $r2 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r2.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMin> = 10.0;

        $r3 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r3.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMax> = 300.0;

        $r4 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r4.<org.bytedeco.javacv.GNImageAligner$Settings: double displacementMax> = 0.2;

        $r5 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r5.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace> = 0.1;

        $r6 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r6.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaTikhonov> = 0.0;

        $r7 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r7.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma> = null;

        $r8 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r8.<org.bytedeco.javacv.GNImageAligner$Settings: boolean constrained> = 0;

        return;
    }

    public void <init>(org.bytedeco.javacv.GNImageAligner$Settings)
    {
        GNImageAligner$Settings this;
        org.bytedeco.javacv.GNImageAligner$Settings s, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        double[] $stack2, $stack4;
        double $stack3, $stack5, $stack6, $stack7, $stack8, $stack9;
        org.bytedeco.opencv.opencv_core.CvMat $stack10;
        boolean $stack11;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        s := @parameter0: org.bytedeco.javacv.GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) s;

        specialinvoke this.<org.bytedeco.javacv.ImageAligner$Settings: void <init>(org.bytedeco.javacv.ImageAligner$Settings)>($r0);

        $r1 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r1.<org.bytedeco.javacv.GNImageAligner$Settings: double stepSize> = 0.1;

        $stack2 = newarray (double)[2];

        $stack2[0] = 1.0;

        $stack2[1] = 0.25;

        $r2 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r2.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch> = $stack2;

        $r3 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r3.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMin> = 10.0;

        $r4 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r4.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMax> = 300.0;

        $r5 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r5.<org.bytedeco.javacv.GNImageAligner$Settings: double displacementMax> = 0.2;

        $r6 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r6.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace> = 0.1;

        $r7 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r7.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaTikhonov> = 0.0;

        $r8 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r8.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma> = null;

        $r9 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r9.<org.bytedeco.javacv.GNImageAligner$Settings: boolean constrained> = 0;

        $stack3 = s.<org.bytedeco.javacv.GNImageAligner$Settings: double stepSize>;

        $r10 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r10.<org.bytedeco.javacv.GNImageAligner$Settings: double stepSize> = $stack3;

        $stack4 = s.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch>;

        $r11 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r11.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch> = $stack4;

        $stack5 = s.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMin>;

        $r12 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r12.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMin> = $stack5;

        $stack6 = s.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMax>;

        $r13 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r13.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMax> = $stack6;

        $stack7 = s.<org.bytedeco.javacv.GNImageAligner$Settings: double displacementMax>;

        $r14 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r14.<org.bytedeco.javacv.GNImageAligner$Settings: double displacementMax> = $stack7;

        $stack8 = s.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace>;

        $r15 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r15.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace> = $stack8;

        $stack9 = s.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaTikhonov>;

        $r16 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r16.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaTikhonov> = $stack9;

        $stack10 = s.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma>;

        $r17 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r17.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma> = $stack10;

        $stack11 = s.<org.bytedeco.javacv.GNImageAligner$Settings: boolean constrained>;

        $r18 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r18.<org.bytedeco.javacv.GNImageAligner$Settings: boolean constrained> = $stack11;

        return;
    }

    public double getStepSize()
    {
        GNImageAligner$Settings this;
        double $stack1;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double stepSize>;

        return $stack1;
    }

    public void setStepSize(double)
    {
        GNImageAligner$Settings this;
        double stepSize;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        stepSize := @parameter0: double;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double stepSize> = stepSize;

        return;
    }

    public double[] getLineSearch()
    {
        GNImageAligner$Settings this;
        double[] $stack1;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch>;

        return $stack1;
    }

    public void setLineSearch(double[])
    {
        GNImageAligner$Settings this;
        double[] lineSearch;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        lineSearch := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch> = lineSearch;

        return;
    }

    public double getDeltaMin()
    {
        GNImageAligner$Settings this;
        double $stack1;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMin>;

        return $stack1;
    }

    public void setDeltaMin(double)
    {
        GNImageAligner$Settings this;
        double deltaMin;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        deltaMin := @parameter0: double;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMin> = deltaMin;

        return;
    }

    public double getDeltaMax()
    {
        GNImageAligner$Settings this;
        double $stack1;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMax>;

        return $stack1;
    }

    public void setDeltaMax(double)
    {
        GNImageAligner$Settings this;
        double deltaMax;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        deltaMax := @parameter0: double;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMax> = deltaMax;

        return;
    }

    public double getDisplacementMax()
    {
        GNImageAligner$Settings this;
        double $stack1;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double displacementMax>;

        return $stack1;
    }

    public void setDisplacementMax(double)
    {
        GNImageAligner$Settings this;
        double displacementMax;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        displacementMax := @parameter0: double;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double displacementMax> = displacementMax;

        return;
    }

    public double getAlphaSubspace()
    {
        GNImageAligner$Settings this;
        double $stack1;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace>;

        return $stack1;
    }

    public void setAlphaSubspace(double)
    {
        GNImageAligner$Settings this;
        double alphaSubspace;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        alphaSubspace := @parameter0: double;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace> = alphaSubspace;

        return;
    }

    public double getAlphaTikhonov()
    {
        GNImageAligner$Settings this;
        double $stack1;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaTikhonov>;

        return $stack1;
    }

    public void setAlphaTikhonov(double)
    {
        GNImageAligner$Settings this;
        double alphaTikhonov;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        alphaTikhonov := @parameter0: double;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaTikhonov> = alphaTikhonov;

        return;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getGammaTgamma()
    {
        GNImageAligner$Settings this;
        org.bytedeco.opencv.opencv_core.CvMat $stack1;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma>;

        return $stack1;
    }

    public void setGammaTgamma(org.bytedeco.opencv.opencv_core.CvMat)
    {
        GNImageAligner$Settings this;
        org.bytedeco.opencv.opencv_core.CvMat gammaTgamma;
        org.bytedeco.javacv.GNImageAligner$Settings $r0;

        this := @this: GNImageAligner$Settings;

        gammaTgamma := @parameter0: org.bytedeco.opencv.opencv_core.CvMat;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma> = gammaTgamma;

        return;
    }

    public org.bytedeco.javacv.GNImageAligner$Settings clone()
    {
        GNImageAligner$Settings this;
        org.bytedeco.javacv.GNImageAligner$Settings $u0, $r0;

        this := @this: GNImageAligner$Settings;

        $u0 = new org.bytedeco.javacv.GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        specialinvoke $u0.<org.bytedeco.javacv.GNImageAligner$Settings: void <init>(org.bytedeco.javacv.GNImageAligner$Settings)>($r0);

        return $u0;
    }

    public volatile org.bytedeco.javacv.ImageAligner$Settings clone()
    {
        GNImageAligner$Settings this;
        org.bytedeco.javacv.GNImageAligner$Settings $stack1, $r0;
        org.bytedeco.javacv.ImageAligner$Settings $r1;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.javacv.GNImageAligner$Settings clone()>();

        $r1 = (org.bytedeco.javacv.ImageAligner$Settings) $stack1;

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        GNImageAligner$Settings this;
        org.bytedeco.javacv.GNImageAligner$Settings $stack1, $r0;

        this := @this: GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner$Settings) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.javacv.GNImageAligner$Settings clone()>();

        return $stack1;
    }
}
