public class GNImageAligner extends java.lang.Object implements org.bytedeco.javacv.ImageAligner
{
    protected org.bytedeco.javacv.GNImageAligner$Settings settings;
    protected final int n;
    protected org.bytedeco.opencv.opencv_core.IplImage[] template;
    protected org.bytedeco.opencv.opencv_core.IplImage[] target;
    protected org.bytedeco.opencv.opencv_core.IplImage[] transformed;
    protected org.bytedeco.opencv.opencv_core.IplImage[] residual;
    protected org.bytedeco.opencv.opencv_core.IplImage[] mask;
    protected org.bytedeco.opencv.opencv_core.IplImage[] images;
    protected org.bytedeco.opencv.opencv_core.CvMat srcRoiPts;
    protected org.bytedeco.opencv.opencv_core.CvMat dstRoiPts;
    protected org.bytedeco.opencv.opencv_core.CvPoint dstRoiPtsArray;
    protected org.bytedeco.opencv.opencv_core.CvRect roi;
    protected org.bytedeco.opencv.opencv_core.CvRect temproi;
    protected org.bytedeco.javacv.ImageTransformer transformer;
    protected org.bytedeco.javacv.ImageTransformer$Data[] hessianGradientTransformerData;
    protected org.bytedeco.javacv.ImageTransformer$Data[] residualTransformerData;
    protected org.bytedeco.javacv.ImageTransformer$Parameters parameters;
    protected org.bytedeco.javacv.ImageTransformer$Parameters[] parametersArray;
    protected org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters;
    protected org.bytedeco.javacv.ImageTransformer$Parameters priorParameters;
    protected org.bytedeco.opencv.opencv_core.CvMat hessian;
    protected org.bytedeco.opencv.opencv_core.CvMat gradient;
    protected org.bytedeco.opencv.opencv_core.CvMat update;
    protected org.bytedeco.opencv.opencv_core.CvMat prior;
    protected double[] constraintGrad;
    protected double[] subspaceResidual;
    protected double[][] subspaceJacobian;
    protected double[] updateScale;
    protected boolean[] subspaceCorrelated;
    protected int pyramidLevel;
    protected double RMSE;
    protected boolean residualUpdateNeeded;
    protected int lastLinePosition;
    protected int trials;
    protected double[] subspaceParameters;
    protected double[][] tempSubspaceParameters;

    public void <init>(org.bytedeco.javacv.ImageTransformer, org.bytedeco.javacv.ImageTransformer$Parameters, org.bytedeco.opencv.opencv_core.IplImage, double[], org.bytedeco.opencv.opencv_core.IplImage)
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer transformer;
        org.bytedeco.javacv.ImageTransformer$Parameters initialParameters;
        org.bytedeco.opencv.opencv_core.IplImage template0, target0;
        double[] roiPts;
        org.bytedeco.javacv.GNImageAligner$Settings $u0;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        transformer := @parameter0: org.bytedeco.javacv.ImageTransformer;

        initialParameters := @parameter1: org.bytedeco.javacv.ImageTransformer$Parameters;

        template0 := @parameter2: org.bytedeco.opencv.opencv_core.IplImage;

        roiPts := @parameter3: double[];

        target0 := @parameter4: org.bytedeco.opencv.opencv_core.IplImage;

        $u0 = new org.bytedeco.javacv.GNImageAligner$Settings;

        specialinvoke $u0.<org.bytedeco.javacv.GNImageAligner$Settings: void <init>()>();

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        specialinvoke $r0.<org.bytedeco.javacv.GNImageAligner: void <init>(org.bytedeco.javacv.ImageTransformer,org.bytedeco.javacv.ImageTransformer$Parameters,org.bytedeco.opencv.opencv_core.IplImage,double[],org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.javacv.GNImageAligner$Settings)>(transformer, initialParameters, template0, roiPts, target0, $u0);

        return;
    }

    public void <init>(org.bytedeco.javacv.ImageTransformer, org.bytedeco.javacv.ImageTransformer$Parameters, org.bytedeco.opencv.opencv_core.IplImage, double[], org.bytedeco.opencv.opencv_core.IplImage, org.bytedeco.javacv.GNImageAligner$Settings)
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer transformer;
        org.bytedeco.javacv.ImageTransformer$Parameters initialParameters;
        org.bytedeco.javacv.GNImageAligner$Settings settings;
        int minLevel, maxLevel, $stack14, $stack16, $stack18, $stack20, $stack22, c, o, $stack28, $stack30, $stack33, $stack35, $stack37, $stack39, $stack41, $stack45, $stack52, $stack54, $stack56, $stack58, $stack60, $stack61, $stack115, $stack126, $stack24, w, $stack25, h, $stack26, $stack27, i;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack15, $stack17, $stack19, $stack21, $stack23, $stack34, $stack36, $stack38, $stack40, $stack42, $stack53, $stack55, $stack57, $stack59, $stack116, $stack127, $stack69, $stack71, $stack73, $stack75, $stack77;
        org.bytedeco.opencv.opencv_core.IplImage template0, target0, $stack43, $stack44, $stack46, $stack47, $stack48, $stack62, $stack63, $stack64, $stack65, $stack70, $stack72, $stack74, $stack76, $stack78;
        org.bytedeco.javacv.ImageTransformer$Data[] $stack29, $stack31, $stack66;
        boolean $stack50;
        double[] roiPts;
        org.bytedeco.javacv.ImageTransformer$Data $u0, $u1;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43;
        org.bytedeco.javacv.ImageAligner$Settings $r2;

        this := @this: GNImageAligner;

        transformer := @parameter0: org.bytedeco.javacv.ImageTransformer;

        initialParameters := @parameter1: org.bytedeco.javacv.ImageTransformer$Parameters;

        template0 := @parameter2: org.bytedeco.opencv.opencv_core.IplImage;

        roiPts := @parameter3: double[];

        target0 := @parameter4: org.bytedeco.opencv.opencv_core.IplImage;

        settings := @parameter5: org.bytedeco.javacv.GNImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        specialinvoke $r0.<org.bytedeco.javacv.GNImageAligner: void <init>(org.bytedeco.javacv.ImageTransformer,org.bytedeco.javacv.ImageTransformer$Parameters)>(transformer, initialParameters);

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $r2 = (org.bytedeco.javacv.ImageAligner$Settings) settings;

        virtualinvoke $r1.<org.bytedeco.javacv.GNImageAligner: void setSettings(org.bytedeco.javacv.ImageAligner$Settings)>($r2);

        minLevel = settings.<org.bytedeco.javacv.GNImageAligner$Settings: int pyramidLevelMin>;

        maxLevel = settings.<org.bytedeco.javacv.GNImageAligner$Settings: int pyramidLevelMax>;

        $stack14 = maxLevel + 1;

        $stack15 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[$stack14];

        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template> = $stack15;

        $stack16 = maxLevel + 1;

        $stack17 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[$stack16];

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $r4.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target> = $stack17;

        $stack18 = maxLevel + 1;

        $stack19 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[$stack18];

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $r5.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] transformed> = $stack19;

        $stack20 = maxLevel + 1;

        $stack21 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[$stack20];

        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $r6.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] residual> = $stack21;

        $stack22 = maxLevel + 1;

        $stack23 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[$stack22];

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        $r7.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask> = $stack23;

        if template0 == null goto label01;

        $stack24 = virtualinvoke template0.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        goto label02;

     label01:
        $stack24 = virtualinvoke target0.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

     label02:
        w = $stack24;

        if template0 == null goto label03;

        $stack25 = virtualinvoke template0.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        goto label04;

     label03:
        $stack25 = virtualinvoke target0.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

     label04:
        h = $stack25;

        if template0 == null goto label05;

        $stack26 = virtualinvoke template0.<org.bytedeco.opencv.opencv_core.IplImage: int nChannels()>();

        goto label06;

     label05:
        $stack26 = virtualinvoke target0.<org.bytedeco.opencv.opencv_core.IplImage: int nChannels()>();

     label06:
        c = $stack26;

        if template0 == null goto label07;

        $stack27 = virtualinvoke template0.<org.bytedeco.opencv.opencv_core.IplImage: int origin()>();

        goto label08;

     label07:
        $stack27 = virtualinvoke target0.<org.bytedeco.opencv.opencv_core.IplImage: int origin()>();

     label08:
        o = $stack27;

        i = minLevel;

     label09:
        if i > maxLevel goto label14;

        if i != minLevel goto label10;

        if template0 == null goto label10;

        $stack126 = virtualinvoke template0.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        if $stack126 != 32 goto label10;

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack127 = $r8.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $stack127[i] = template0;

        goto label11;

     label10:
        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack69 = $r9.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $stack70 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>(w, h, 32, c, o);

        $stack69[i] = $stack70;

     label11:
        if i != minLevel goto label12;

        if target0 == null goto label12;

        $stack115 = virtualinvoke target0.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        if $stack115 != 32 goto label12;

        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack116 = $r10.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack116[i] = target0;

        goto label13;

     label12:
        $r11 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack71 = $r11.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack72 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>(w, h, 32, c, o);

        $stack71[i] = $stack72;

     label13:
        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack73 = $r12.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] transformed>;

        $stack74 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>(w, h, 32, c, o);

        $stack73[i] = $stack74;

        $r13 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack75 = $r13.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] residual>;

        $stack76 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>(w, h, 32, c, o);

        $stack75[i] = $stack76;

        $r14 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack77 = $r14.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $stack78 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>(w, h, 8, 1, o);

        $stack77[i] = $stack78;

        w = w / 2;

        h = h / 2;

        i = i + 1;

        goto label09;

     label14:
        $r15 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack28 = $r15.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack29 = newarray (org.bytedeco.javacv.ImageTransformer$Data)[$stack28];

        $r16 = (org.bytedeco.javacv.GNImageAligner) this;

        $r16.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] hessianGradientTransformerData> = $stack29;

        i = 0;

     label15:
        $r17 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack30 = $r17.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i >= $stack30 goto label16;

        $r18 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack66 = $r18.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] hessianGradientTransformerData>;

        $u0 = new org.bytedeco.javacv.ImageTransformer$Data;

        $r19 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack53 = $r19.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $r20 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack52 = $r20.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack65 = $stack53[$stack52];

        $r21 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack55 = $r21.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] transformed>;

        $r22 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack54 = $r22.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack64 = $stack55[$stack54];

        $r23 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack57 = $r23.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] residual>;

        $r24 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack56 = $r24.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack63 = $stack57[$stack56];

        $r25 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack59 = $r25.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $r26 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack58 = $r26.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack62 = $stack59[$stack58];

        $r27 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack61 = $r27.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $r28 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack60 = $r28.<org.bytedeco.javacv.GNImageAligner: int n>;

        specialinvoke $u0.<org.bytedeco.javacv.ImageTransformer$Data: void <init>(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage,double,double,int,org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage,int)>($stack65, $stack64, $stack63, $stack62, 0.0, 0.0, $stack61, null, null, $stack60);

        $stack66[i] = $u0;

        i = i + 1;

        goto label15;

     label16:
        $stack31 = newarray (org.bytedeco.javacv.ImageTransformer$Data)[1];

        $u1 = new org.bytedeco.javacv.ImageTransformer$Data;

        $r29 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack34 = $r29.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $r30 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack33 = $r30.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack48 = $stack34[$stack33];

        $r31 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack36 = $r31.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $r32 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack35 = $r32.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack47 = $stack36[$stack35];

        $r33 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack38 = $r33.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $r34 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack37 = $r34.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack46 = $stack38[$stack37];

        $r35 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack45 = $r35.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $r36 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack40 = $r36.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] transformed>;

        $r37 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack39 = $r37.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack44 = $stack40[$stack39];

        $r38 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack42 = $r38.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] residual>;

        $r39 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack41 = $r39.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack43 = $stack42[$stack41];

        specialinvoke $u1.<org.bytedeco.javacv.ImageTransformer$Data: void <init>(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage,double,double,int,org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage,int)>($stack48, $stack47, null, $stack46, 0.0, 0.0, $stack45, $stack44, $stack43, 1);

        $stack31[0] = $u1;

        $r40 = (org.bytedeco.javacv.GNImageAligner) this;

        $r40.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] residualTransformerData> = $stack31;

        $stack50 = settings.<org.bytedeco.javacv.GNImageAligner$Settings: boolean constrained>;

        $r41 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r41.<org.bytedeco.javacv.GNImageAligner: void setConstrained(boolean)>($stack50);

        $r42 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r42.<org.bytedeco.javacv.GNImageAligner: void setTemplateImage(org.bytedeco.opencv.opencv_core.IplImage,double[])>(template0, roiPts);

        $r43 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r43.<org.bytedeco.javacv.GNImageAligner: void setTargetImage(org.bytedeco.opencv.opencv_core.IplImage)>(target0);

        return;
    }

    protected void <init>(org.bytedeco.javacv.ImageTransformer, org.bytedeco.javacv.ImageTransformer$Parameters)
    {
        GNImageAligner this;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack4;
        org.bytedeco.javacv.ImageTransformer$Parameters initialParameters, $stack11, $stack13, $stack18, $stack32;
        int $stack5, $stack14, $stack17, $stack21, $stack24, i;
        org.bytedeco.opencv.opencv_core.CvMat $stack6, $stack7;
        org.bytedeco.javacv.ImageTransformer transformer;
        org.bytedeco.javacv.ImageTransformer$Parameters[] $stack12, $stack15, $stack16, $stack31;
        double[] $stack19, $stack20, $stack25, $stack28;
        double[][] $stack22, $stack23, $stack26;
        java.lang.Object $stack27;
        org.bytedeco.opencv.opencv_core.CvPoint $u0;
        org.bytedeco.opencv.opencv_core.CvRect $u1, $u2;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;

        this := @this: GNImageAligner;

        transformer := @parameter0: org.bytedeco.javacv.ImageTransformer;

        initialParameters := @parameter1: org.bytedeco.javacv.ImageTransformer$Parameters;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack4 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[5];

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] images> = $stack4;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $r1.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded> = 1;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $r2.<org.bytedeco.javacv.GNImageAligner: int lastLinePosition> = 0;

        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $r3.<org.bytedeco.javacv.GNImageAligner: int trials> = 0;

        $stack5 = interfaceinvoke initialParameters.<org.bytedeco.javacv.ImageTransformer$Parameters: int size()>();

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $r4.<org.bytedeco.javacv.GNImageAligner: int n> = $stack5;

        $stack6 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int,int,int)>(4, 1, 6, 2);

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $r5.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat srcRoiPts> = $stack6;

        $stack7 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int,int,int)>(4, 1, 6, 2);

        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $r6.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat dstRoiPts> = $stack7;

        $u0 = new org.bytedeco.opencv.opencv_core.CvPoint;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.CvPoint: void <init>(long)>(4L);

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        $r7.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvPoint dstRoiPtsArray> = $u0;

        $u1 = new org.bytedeco.opencv.opencv_core.CvRect;

        specialinvoke $u1.<org.bytedeco.opencv.opencv_core.CvRect: void <init>()>();

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        $r8.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect roi> = $u1;

        $u2 = new org.bytedeco.opencv.opencv_core.CvRect;

        specialinvoke $u2.<org.bytedeco.opencv.opencv_core.CvRect: void <init>()>();

        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $r9.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi> = $u2;

        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $r10.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer transformer> = transformer;

        $stack11 = interfaceinvoke initialParameters.<org.bytedeco.javacv.ImageTransformer$Parameters: org.bytedeco.javacv.ImageTransformer$Parameters clone()>();

        $r11 = (org.bytedeco.javacv.GNImageAligner) this;

        $r11.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters> = $stack11;

        $stack12 = newarray (org.bytedeco.javacv.ImageTransformer$Parameters)[1];

        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack13 = $r12.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $stack12[0] = $stack13;

        $r13 = (org.bytedeco.javacv.GNImageAligner) this;

        $r13.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters[] parametersArray> = $stack12;

        $r14 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack14 = $r14.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack15 = newarray (org.bytedeco.javacv.ImageTransformer$Parameters)[$stack14];

        $r15 = (org.bytedeco.javacv.GNImageAligner) this;

        $r15.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters> = $stack15;

        i = 0;

     label1:
        $r16 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack16 = $r16.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack17 = lengthof $stack16;

        if i >= $stack17 goto label2;

        $r17 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack31 = $r17.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack32 = interfaceinvoke initialParameters.<org.bytedeco.javacv.ImageTransformer$Parameters: org.bytedeco.javacv.ImageTransformer$Parameters clone()>();

        $stack31[i] = $stack32;

        i = i + 1;

        goto label1;

     label2:
        $r18 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack18 = $r18.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $stack19 = interfaceinvoke $stack18.<org.bytedeco.javacv.ImageTransformer$Parameters: double[] getSubspace()>();

        $r19 = (org.bytedeco.javacv.GNImageAligner) this;

        $r19.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters> = $stack19;

        $r20 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack20 = $r20.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        if $stack20 == null goto label4;

        $stack21 = staticinvoke <org.bytedeco.javacv.Parallel: int getNumThreads()>();

        $stack22 = newarray (double[])[$stack21];

        $r21 = (org.bytedeco.javacv.GNImageAligner) this;

        $r21.<org.bytedeco.javacv.GNImageAligner: double[][] tempSubspaceParameters> = $stack22;

        i = 0;

     label3:
        $r22 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack23 = $r22.<org.bytedeco.javacv.GNImageAligner: double[][] tempSubspaceParameters>;

        $stack24 = lengthof $stack23;

        if i >= $stack24 goto label4;

        $r23 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack26 = $r23.<org.bytedeco.javacv.GNImageAligner: double[][] tempSubspaceParameters>;

        $r24 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack25 = $r24.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $stack27 = virtualinvoke $stack25.<java.lang.Object: java.lang.Object clone()>();

        $stack28 = (double[]) $stack27;

        $stack26[i] = $stack28;

        i = i + 1;

        goto label3;

     label4:
        return;
    }

    public org.bytedeco.javacv.GNImageAligner$Settings getSettings()
    {
        GNImageAligner this;
        org.bytedeco.javacv.GNImageAligner$Settings $stack1;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        return $stack1;
    }

    public void setSettings(org.bytedeco.javacv.ImageAligner$Settings)
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageAligner$Settings settings;
        org.bytedeco.javacv.GNImageAligner$Settings $stack2;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        settings := @parameter0: org.bytedeco.javacv.ImageAligner$Settings;

        $stack2 = (org.bytedeco.javacv.GNImageAligner$Settings) settings;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings> = $stack2;

        return;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getTemplateImage()
    {
        GNImageAligner this;
        int $stack1;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack2;
        org.bytedeco.opencv.opencv_core.IplImage $stack3;
        org.bytedeco.javacv.GNImageAligner $r0, $r1;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r1.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack3 = $stack2[$stack1];

        return $stack3;
    }

    public void setTemplateImage(org.bytedeco.opencv.opencv_core.IplImage, double[])
    {
        GNImageAligner this;
        org.bytedeco.javacv.GNImageAligner$Settings $stack7, $stack8;
        int minLevel, maxLevel, $stack9, $stack15, $stack30, $stack31, h, w;
        double[] roiPts, $stack32;
        org.bytedeco.opencv.opencv_core.IplImage template0, $stack11, $stack18, $stack19;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack10, $stack16, $stack17, $stack22;
        double $stack13, $stack14, $stack33, $stack34, $stack35, $stack36;
        org.bytedeco.opencv.opencv_core.CvMat $stack26, $stack37;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r8, $r9, $r12;
        org.bytedeco.opencv.opencv_core.CvArr $r6, $r7, $r10, $r11;

        this := @this: GNImageAligner;

        template0 := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        roiPts := @parameter1: double[];

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack7 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        minLevel = $stack7.<org.bytedeco.javacv.GNImageAligner$Settings: int pyramidLevelMin>;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack8 = $r1.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        maxLevel = $stack8.<org.bytedeco.javacv.GNImageAligner$Settings: int pyramidLevelMax>;

        if roiPts != null goto label1;

        if template0 == null goto label1;

        $stack30 = virtualinvoke template0.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        w = $stack30 << minLevel;

        $stack31 = virtualinvoke template0.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        h = $stack31 << minLevel;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack37 = $r2.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat srcRoiPts>;

        $stack32 = newarray (double)[8];

        $stack32[0] = 0.0;

        $stack32[1] = 0.0;

        $stack33 = (double) w;

        $stack32[2] = $stack33;

        $stack32[3] = 0.0;

        $stack34 = (double) w;

        $stack32[4] = $stack34;

        $stack35 = (double) h;

        $stack32[5] = $stack35;

        $stack32[6] = 0.0;

        $stack36 = (double) h;

        $stack32[7] = $stack36;

        virtualinvoke $stack37.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack32);

        goto label2;

     label1:
        if roiPts == null goto label2;

        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack26 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat srcRoiPts>;

        virtualinvoke $stack26.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>(roiPts);

     label2:
        if template0 != null goto label3;

        return;

     label3:
        $stack9 = virtualinvoke template0.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        if $stack9 != 32 goto label4;

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack22 = $r4.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $stack22[minLevel] = template0;

        goto label5;

     label4:
        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack10 = $r5.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $stack11 = $stack10[minLevel];

        $stack13 = virtualinvoke template0.<org.bytedeco.opencv.opencv_core.IplImage: double highValue()>();

        $stack14 = 1.0 / $stack13;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) template0;

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) $stack11;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvConvertScale(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,double)>($r6, $r7, $stack14, 0.0);

     label5:
        w = minLevel + 1;

     label6:
        if w > maxLevel goto label7;

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack16 = $r8.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $stack15 = w - 1;

        $stack19 = $stack16[$stack15];

        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack17 = $r9.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $stack18 = $stack17[w];

        $r10 = (org.bytedeco.opencv.opencv_core.CvArr) $stack19;

        $r11 = (org.bytedeco.opencv.opencv_core.CvArr) $stack18;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvPyrDown(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r10, $r11, 7);

        w = w + 1;

        goto label6;

     label7:
        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r12.<org.bytedeco.javacv.GNImageAligner: void setPyramidLevel(int)>(maxLevel);

        return;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getTargetImage()
    {
        GNImageAligner this;
        int $stack1;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack2;
        org.bytedeco.opencv.opencv_core.IplImage $stack3;
        org.bytedeco.javacv.GNImageAligner $r0, $r1;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r1.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack3 = $stack2[$stack1];

        return $stack3;
    }

    public void setTargetImage(org.bytedeco.opencv.opencv_core.IplImage)
    {
        GNImageAligner this;
        org.bytedeco.javacv.GNImageAligner$Settings $stack10, $stack11, $stack13, $stack83, $stack88;
        int minLevel, maxLevel, $stack12, $stack18, $stack19, $stack25, $stack33, $stack34, $stack37, $stack38, $stack41, $stack42, $stack45, $stack46, $stack71, height, padX, padY, $stack93, align, $stack94, $stack95, $stack104, i, pts#4;
        org.bytedeco.opencv.opencv_core.IplImage target0, $stack17, $stack21, $stack24, $stack28, $stack29, $stack50, $stack58, $stack73, $stack76, $stack101;
        double $stack14, $stack60, $stack61, $stack84, $stack85, $stack86, $stack89, $stack90, $stack91, $stack105, $stack106, $stack107;
        byte $stack15;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack16, $stack20, $stack23, $stack26, $stack27, $stack48, $stack57, $stack72, $stack75, $stack99, $stack110;
        org.bytedeco.opencv.opencv_core.CvRect $stack32, $stack36, $stack40, $stack44, $stack49, $stack78, $stack79, $stack80, $stack81, $stack96, $stack98, $stack100;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack65;
        org.bytedeco.opencv.opencv_core.CvMat $stack66, $stack67, $stack69;
        org.bytedeco.javacv.ImageTransformer $stack68;
        long $stack87, $stack92;
        double[] pts;
        org.bytedeco.opencv.opencv_core.IplROI i#9;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34;
        org.bytedeco.opencv.opencv_core.CvArr $r20, $r21, $r32, $r33;

        this := @this: GNImageAligner;

        target0 := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack10 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        minLevel = $stack10.<org.bytedeco.javacv.GNImageAligner$Settings: int pyramidLevelMin>;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack11 = $r1.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        maxLevel = $stack11.<org.bytedeco.javacv.GNImageAligner$Settings: int pyramidLevelMax>;

        if target0 != null goto label01;

        return;

     label01:
        $stack12 = virtualinvoke target0.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        if $stack12 != 32 goto label02;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack110 = $r2.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack110[minLevel] = target0;

     label02:
        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack13 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack14 = $stack13.<org.bytedeco.javacv.GNImageAligner$Settings: double displacementMax>;

        $stack15 = $stack14 cmpl 0.0;

        if $stack15 <= 0 goto label05;

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack68 = $r4.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer transformer>;

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack67 = $r5.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat srcRoiPts>;

        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack66 = $r6.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat dstRoiPts>;

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack65 = $r7.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        interfaceinvoke $stack68.<org.bytedeco.javacv.ImageTransformer: void transform(org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.javacv.ImageTransformer$Parameters,boolean)>($stack67, $stack66, $stack65, 0);

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack69 = $r8.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat dstRoiPts>;

        pts = virtualinvoke $stack69.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        i = 0;

     label03:
        $stack71 = lengthof pts;

        if i >= $stack71 goto label04;

        $stack106 = pts[i];

        $stack104 = 1 << minLevel;

        $stack105 = (double) $stack104;

        $stack107 = $stack106 / $stack105;

        pts[i] = $stack107;

        i = i + 1;

        goto label03;

     label04:
        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack72 = $r9.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack73 = $stack72[minLevel];

        i = virtualinvoke $stack73.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack75 = $r10.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack76 = $stack75[minLevel];

        height = virtualinvoke $stack76.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $r11 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack78 = $r11.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi>;

        $stack79 = virtualinvoke $stack78.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect x(int)>(0);

        $stack80 = virtualinvoke $stack79.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect y(int)>(0);

        $stack81 = virtualinvoke $stack80.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect width(int)>(i);

        virtualinvoke $stack81.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect height(int)>(height);

        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack83 = $r12.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack85 = $stack83.<org.bytedeco.javacv.GNImageAligner$Settings: double displacementMax>;

        $stack84 = (double) i;

        $stack86 = $stack85 * $stack84;

        $stack87 = staticinvoke <java.lang.Math: long round(double)>($stack86);

        padX = (int) $stack87;

        $r13 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack88 = $r13.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack90 = $stack88.<org.bytedeco.javacv.GNImageAligner$Settings: double displacementMax>;

        $stack89 = (double) height;

        $stack91 = $stack90 * $stack89;

        $stack92 = staticinvoke <java.lang.Math: long round(double)>($stack91);

        padY = (int) $stack92;

        $stack93 = maxLevel + 1;

        align = 1 << $stack93;

        $r14 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack96 = $r14.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi>;

        $stack95 = padX + 3;

        $stack94 = padY + 3;

        staticinvoke <org.bytedeco.javacv.JavaCV: org.bytedeco.opencv.opencv_core.CvRect boundingRect(double[],org.bytedeco.opencv.opencv_core.CvRect,int,int,int,int)>(pts, $stack96, $stack95, $stack94, align, align);

        $r15 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack98 = $r15.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetImageROI(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.CvRect)>(target0, $stack98);

        $r16 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack99 = $r16.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack101 = $stack99[minLevel];

        $r17 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack100 = $r17.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetImageROI(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.CvRect)>($stack101, $stack100);

        goto label06;

     label05:
        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvResetImageROI(org.bytedeco.opencv.opencv_core.IplImage)>(target0);

        $r18 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack16 = $r18.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack17 = $stack16[minLevel];

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvResetImageROI(org.bytedeco.opencv.opencv_core.IplImage)>($stack17);

     label06:
        $stack18 = virtualinvoke target0.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        if $stack18 == 32 goto label07;

        $r19 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack57 = $r19.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack58 = $stack57[minLevel];

        $stack60 = virtualinvoke target0.<org.bytedeco.opencv.opencv_core.IplImage: double highValue()>();

        $stack61 = 1.0 / $stack60;

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) target0;

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) $stack58;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvConvertScale(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,double)>($r20, $r21, $stack61, 0.0);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvResetImageROI(org.bytedeco.opencv.opencv_core.IplImage)>(target0);

     label07:
        pts#4 = minLevel + 1;

     label08:
        if pts#4 > maxLevel goto label11;

        $r22 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack20 = $r22.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack19 = pts#4 - 1;

        $stack21 = $stack20[$stack19];

        i#9 = virtualinvoke $stack21.<org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplROI roi()>();

        if i#9 == null goto label09;

        $r23 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack32 = $r23.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi>;

        $stack33 = virtualinvoke i#9.<org.bytedeco.opencv.opencv_core.IplROI: int xOffset()>();

        $stack34 = $stack33 / 2;

        virtualinvoke $stack32.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect x(int)>($stack34);

        $r24 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack36 = $r24.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi>;

        $stack37 = virtualinvoke i#9.<org.bytedeco.opencv.opencv_core.IplROI: int width()>();

        $stack38 = $stack37 / 2;

        virtualinvoke $stack36.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect width(int)>($stack38);

        $r25 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack40 = $r25.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi>;

        $stack41 = virtualinvoke i#9.<org.bytedeco.opencv.opencv_core.IplROI: int yOffset()>();

        $stack42 = $stack41 / 2;

        virtualinvoke $stack40.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect y(int)>($stack42);

        $r26 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack44 = $r26.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi>;

        $stack45 = virtualinvoke i#9.<org.bytedeco.opencv.opencv_core.IplROI: int height()>();

        $stack46 = $stack45 / 2;

        virtualinvoke $stack44.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect height(int)>($stack46);

        $r27 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack48 = $r27.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack50 = $stack48[pts#4];

        $r28 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack49 = $r28.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect temproi>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetImageROI(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.CvRect)>($stack50, $stack49);

        goto label10;

     label09:
        $r29 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack23 = $r29.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack24 = $stack23[pts#4];

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvResetImageROI(org.bytedeco.opencv.opencv_core.IplImage)>($stack24);

     label10:
        $r30 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack26 = $r30.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack25 = pts#4 - 1;

        $stack29 = $stack26[$stack25];

        $r31 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack27 = $r31.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $stack28 = $stack27[pts#4];

        $r32 = (org.bytedeco.opencv.opencv_core.CvArr) $stack29;

        $r33 = (org.bytedeco.opencv.opencv_core.CvArr) $stack28;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvPyrDown(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r32, $r33, 7);

        pts#4 = pts#4 + 1;

        goto label08;

     label11:
        $r34 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r34.<org.bytedeco.javacv.GNImageAligner: void setPyramidLevel(int)>(maxLevel);

        return;
    }

    public int getPyramidLevel()
    {
        GNImageAligner this;
        int $stack1;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        return $stack1;
    }

    public void setPyramidLevel(int)
    {
        GNImageAligner this;
        int pyramidLevel;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2;

        this := @this: GNImageAligner;

        pyramidLevel := @parameter0: int;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $r0.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel> = pyramidLevel;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $r1.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded> = 1;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $r2.<org.bytedeco.javacv.GNImageAligner: int trials> = 0;

        return;
    }

    public boolean isConstrained()
    {
        GNImageAligner this;
        org.bytedeco.javacv.GNImageAligner$Settings $stack1;
        boolean $stack2;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack2 = $stack1.<org.bytedeco.javacv.GNImageAligner$Settings: boolean constrained>;

        return $stack2;
    }

    public void setConstrained(boolean)
    {
        GNImageAligner this;
        org.bytedeco.javacv.GNImageAligner$Settings $stack3, $stack21, $stack5;
        boolean constrained, $stack4;
        double[] $stack6, $stack47, $stack10, $stack14, $stack16;
        double $stack22;
        byte $stack23;
        int $stack48, $stack49, $stack50, m, $stack11, $stack13, $stack15, $stack17, $stack19;
        org.bytedeco.opencv.opencv_core.CvMat $stack52, $stack56, $stack57, $stack7, $stack8, $stack9, $stack12;
        double[][] $stack18;
        boolean[] $stack20;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;

        this := @this: GNImageAligner;

        constrained := @parameter0: boolean;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack3 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack4 = $stack3.<org.bytedeco.javacv.GNImageAligner$Settings: boolean constrained>;

        if $stack4 != constrained goto label1;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack52 = $r1.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        if $stack52 == null goto label1;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack56 = $r2.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat gradient>;

        if $stack56 == null goto label1;

        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack57 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update>;

        if $stack57 == null goto label1;

        return;

     label1:
        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack5 = $r4.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack5.<org.bytedeco.javacv.GNImageAligner$Settings: boolean constrained> = constrained;

        if constrained == 0 goto label2;

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack49 = $r5.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack50 = $stack49 + 1;

        goto label3;

     label2:
        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack50 = $r6.<org.bytedeco.javacv.GNImageAligner: int n>;

     label3:
        m = $stack50;

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack6 = $r7.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        if $stack6 == null goto label4;

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack21 = $r8.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack22 = $stack21.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace>;

        $stack23 = $stack22 cmpl 0.0;

        if $stack23 == 0 goto label4;

        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack47 = $r9.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $stack48 = lengthof $stack47;

        m = $stack50 + $stack48;

     label4:
        $stack7 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(m, m);

        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $r10.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian> = $stack7;

        $stack8 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(m, 1);

        $r11 = (org.bytedeco.javacv.GNImageAligner) this;

        $r11.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat gradient> = $stack8;

        $stack9 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(m, 1);

        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        $r12.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update> = $stack9;

        $stack10 = newarray (double)[m];

        $r13 = (org.bytedeco.javacv.GNImageAligner) this;

        $r13.<org.bytedeco.javacv.GNImageAligner: double[] updateScale> = $stack10;

        $r14 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack11 = $r14.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack12 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>($stack11, 1);

        $r15 = (org.bytedeco.javacv.GNImageAligner) this;

        $r15.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat prior> = $stack12;

        $r16 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack13 = $r16.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack14 = newarray (double)[$stack13];

        $r17 = (org.bytedeco.javacv.GNImageAligner) this;

        $r17.<org.bytedeco.javacv.GNImageAligner: double[] constraintGrad> = $stack14;

        $r18 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack15 = $r18.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack16 = newarray (double)[$stack15];

        $r19 = (org.bytedeco.javacv.GNImageAligner) this;

        $r19.<org.bytedeco.javacv.GNImageAligner: double[] subspaceResidual> = $stack16;

        $r20 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack17 = $r20.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack18 = newmultiarray (double)[m][$stack17];

        $r21 = (org.bytedeco.javacv.GNImageAligner) this;

        $r21.<org.bytedeco.javacv.GNImageAligner: double[][] subspaceJacobian> = $stack18;

        $r22 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack19 = $r22.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack20 = newarray (boolean)[$stack19];

        $r23 = (org.bytedeco.javacv.GNImageAligner) this;

        $r23.<org.bytedeco.javacv.GNImageAligner: boolean[] subspaceCorrelated> = $stack20;

        return;
    }

    public org.bytedeco.javacv.ImageTransformer$Parameters getParameters()
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack1;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        return $stack1;
    }

    public void setParameters(org.bytedeco.javacv.ImageTransformer$Parameters)
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer$Parameters parameters, $stack3;
        double[] $stack4, $stack5, $stack13, $stack16;
        org.bytedeco.javacv.GNImageAligner$Settings $stack6;
        double $stack7;
        byte $stack8;
        double[][] $stack11, $stack14;
        int $stack12, i;
        java.lang.Object $stack15;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: GNImageAligner;

        parameters := @parameter0: org.bytedeco.javacv.ImageTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack3 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        interfaceinvoke $stack3.<org.bytedeco.javacv.ImageTransformer$Parameters: void set(org.bytedeco.javacv.ImageTransformer$Parameters)>(parameters);

        $stack4 = interfaceinvoke parameters.<org.bytedeco.javacv.ImageTransformer$Parameters: double[] getSubspace()>();

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $r1.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters> = $stack4;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack5 = $r2.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        if $stack5 == null goto label2;

        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack6 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack7 = $stack6.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace>;

        $stack8 = $stack7 cmpl 0.0;

        if $stack8 == 0 goto label2;

        i = 0;

     label1:
        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack11 = $r4.<org.bytedeco.javacv.GNImageAligner: double[][] tempSubspaceParameters>;

        $stack12 = lengthof $stack11;

        if i >= $stack12 goto label2;

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack14 = $r5.<org.bytedeco.javacv.GNImageAligner: double[][] tempSubspaceParameters>;

        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack13 = $r6.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $stack15 = virtualinvoke $stack13.<java.lang.Object: java.lang.Object clone()>();

        $stack16 = (double[]) $stack15;

        $stack14[i] = $stack16;

        i = i + 1;

        goto label1;

     label2:
        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        $r7.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded> = 1;

        return;
    }

    public org.bytedeco.javacv.ImageTransformer$Parameters getPriorParameters()
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack1;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters priorParameters>;

        return $stack1;
    }

    public void setPriorParameters(org.bytedeco.javacv.ImageTransformer$Parameters)
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer$Parameters priorParameters, $stack2;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        priorParameters := @parameter0: org.bytedeco.javacv.ImageTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters priorParameters>;

        interfaceinvoke $stack2.<org.bytedeco.javacv.ImageTransformer$Parameters: void set(org.bytedeco.javacv.ImageTransformer$Parameters)>(priorParameters);

        return;
    }

    public double[] getTransformedRoiPts()
    {
        GNImageAligner this;
        boolean $stack1;
        org.bytedeco.opencv.opencv_core.CvMat $stack2;
        double[] $stack3;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded>;

        if $stack1 == 0 goto label1;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r1.<org.bytedeco.javacv.GNImageAligner: void doRoi()>();

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r2.<org.bytedeco.javacv.GNImageAligner: void doResidual()>();

     label1:
        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat dstRoiPts>;

        $stack3 = virtualinvoke $stack2.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        return $stack3;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getTransformedImage()
    {
        GNImageAligner this;
        boolean $stack1;
        int $stack2;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack3;
        org.bytedeco.opencv.opencv_core.IplImage $stack4;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded>;

        if $stack1 == 0 goto label1;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r1.<org.bytedeco.javacv.GNImageAligner: void doRoi()>();

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r2.<org.bytedeco.javacv.GNImageAligner: void doResidual()>();

     label1:
        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack3 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] transformed>;

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r4.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack4 = $stack3[$stack2];

        return $stack4;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getResidualImage()
    {
        GNImageAligner this;
        boolean $stack1;
        int $stack2;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack3;
        org.bytedeco.opencv.opencv_core.IplImage $stack4;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded>;

        if $stack1 == 0 goto label1;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r1.<org.bytedeco.javacv.GNImageAligner: void doRoi()>();

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r2.<org.bytedeco.javacv.GNImageAligner: void doResidual()>();

     label1:
        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack3 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] residual>;

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r4.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack4 = $stack3[$stack2];

        return $stack4;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getMaskImage()
    {
        GNImageAligner this;
        int $stack1;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack2;
        org.bytedeco.opencv.opencv_core.IplImage $stack3;
        org.bytedeco.javacv.GNImageAligner $r0, $r1;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r1.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack3 = $stack2[$stack1];

        return $stack3;
    }

    public double getRMSE()
    {
        GNImageAligner this;
        boolean $stack1;
        double $stack2;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded>;

        if $stack1 == 0 goto label1;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r1.<org.bytedeco.javacv.GNImageAligner: void doRoi()>();

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r2.<org.bytedeco.javacv.GNImageAligner: void doResidual()>();

     label1:
        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r3.<org.bytedeco.javacv.GNImageAligner: double RMSE>;

        return $stack2;
    }

    public int getPixelCount()
    {
        GNImageAligner this;
        boolean $stack1;
        org.bytedeco.javacv.ImageTransformer$Data[] $stack2;
        org.bytedeco.javacv.ImageTransformer$Data $stack3;
        int $stack4;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded>;

        if $stack1 == 0 goto label1;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r1.<org.bytedeco.javacv.GNImageAligner: void doRoi()>();

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r2.<org.bytedeco.javacv.GNImageAligner: void doResidual()>();

     label1:
        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] residualTransformerData>;

        $stack3 = $stack2[0];

        $stack4 = $stack3.<org.bytedeco.javacv.ImageTransformer$Data: int dstCount>;

        return $stack4;
    }

    public int getOutlierCount()
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer$Data[] $stack1;
        org.bytedeco.javacv.ImageTransformer$Data $stack2;
        int $stack3;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] hessianGradientTransformerData>;

        $stack2 = $stack1[0];

        $stack3 = $stack2.<org.bytedeco.javacv.ImageTransformer$Data: int dstCountOutlier>;

        return $stack3;
    }

    public org.bytedeco.opencv.opencv_core.CvRect getRoi()
    {
        GNImageAligner this;
        boolean $stack1;
        org.bytedeco.opencv.opencv_core.CvRect $stack2;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded>;

        if $stack1 == 0 goto label1;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r1.<org.bytedeco.javacv.GNImageAligner: void doRoi()>();

     label1:
        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack2 = $r2.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect roi>;

        return $stack2;
    }

    public int getLastLinePosition()
    {
        GNImageAligner this;
        int $stack1;
        org.bytedeco.javacv.GNImageAligner $r0;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: int lastLinePosition>;

        return $stack1;
    }

    public org.bytedeco.opencv.opencv_core.IplImage[] getImages()
    {
        GNImageAligner this;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack1, $stack4, $stack7, $stack10, $stack13, $stack16;
        org.bytedeco.opencv.opencv_core.IplImage $stack3, $stack6, $stack9, $stack12, $stack15;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] images>;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack3 = virtualinvoke $r1.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage getTemplateImage()>();

        $stack1[0] = $stack3;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack4 = $r2.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] images>;

        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack6 = virtualinvoke $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage getTargetImage()>();

        $stack4[1] = $stack6;

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack7 = $r4.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] images>;

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack9 = virtualinvoke $r5.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage getTransformedImage()>();

        $stack7[2] = $stack9;

        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack10 = $r6.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] images>;

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack12 = virtualinvoke $r7.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage getResidualImage()>();

        $stack10[3] = $stack12;

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack13 = $r8.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] images>;

        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack15 = virtualinvoke $r9.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage getMaskImage()>();

        $stack13[4] = $stack15;

        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack16 = $r10.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] images>;

        return $stack16;
    }

    public boolean iterate(double[])
    {
        GNImageAligner this;
        double prevRMSE, $stack44, $stack51, $stack65, $stack67, $stack69, $stack87, $stack88, $stack90, $stack91, $stack92, $stack95, $stack112, $stack113, $stack114, $stack116, $stack117, $stack118, $stack119, $stack124, $stack128, $stack129, $stack131, $stack132, $stack133, $stack134, $stack149, $stack150, $stack151, $stack153, $stack154, $stack155, $stack156, $stack161, $stack165, $stack166, $stack168, $stack169, $stack170, $stack171, i#31, $stack35;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack13, $stack56, $stack99, $stack122, $stack123, $stack159, $stack160, $stack184, $stack188, $stack19;
        double[] prevParameters, $stack15, $stack16, prevSubspaceParameters, resetParameters, $stack22, resetSubspaceParameters, $stack24, $stack33, delta, $stack57, $stack59, $stack61, $stack75, $stack79, $stack85, $stack89, $stack100, $stack108, $stack110, $stack115, $stack126, $stack130, $stack137, $stack139, $stack145, $stack147, $stack152, $stack163, $stack167, $stack189, $stack21, $stack174;
        java.lang.Object $stack17, $stack23;
        int $stack18, $stack31, $stack34, $stack38, $stack39, $stack40, $stack41, $stack54, $stack55, $stack60, $stack73, $stack74, $stack80, $stack84, $stack103, $stack106, $stack107, $stack138, $stack143, $stack144, i, $stack29, i#23, $stack101;
        org.bytedeco.opencv.opencv_core.CvMat $stack25, $stack26, $stack27, $stack30, $stack86, $stack102, $stack111, $stack127, $stack148, $stack164;
        org.bytedeco.javacv.GNImageAligner$Settings $stack32, $stack37, $stack43, $stack50, $stack64, $stack83, $stack109, $stack125, $stack146, $stack162;
        byte $stack45, $stack52, $stack66, $stack96, $stack36;
        boolean $stack68, $stack70, $stack185, converged, $stack71, i#42;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82;
        org.bytedeco.opencv.opencv_core.CvArr $r18, $r19, $r20;

        this := @this: GNImageAligner;

        delta := @parameter0: double[];

        converged = 0;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        prevRMSE = virtualinvoke $r0.<org.bytedeco.javacv.GNImageAligner: double getRMSE()>();

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack13 = $r1.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        prevParameters = interfaceinvoke $stack13.<org.bytedeco.javacv.ImageTransformer$Parameters: double[] get()>();

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack15 = $r2.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        if $stack15 != null goto label01;

        $stack189 = null;

        goto label02;

     label01:
        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack16 = $r3.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $stack17 = virtualinvoke $stack16.<java.lang.Object: java.lang.Object clone()>();

        $stack189 = (double[]) $stack17;

     label02:
        prevSubspaceParameters = $stack189;

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack18 = $r4.<org.bytedeco.javacv.GNImageAligner: int trials>;

        if $stack18 != 0 goto label03;

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack184 = $r5.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $stack185 = interfaceinvoke $stack184.<org.bytedeco.javacv.ImageTransformer$Parameters: boolean preoptimize()>();

        if $stack185 == 0 goto label03;

        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack188 = $r6.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r7.<org.bytedeco.javacv.GNImageAligner: void setParameters(org.bytedeco.javacv.ImageTransformer$Parameters)>($stack188);

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r8.<org.bytedeco.javacv.GNImageAligner: void doResidual()>();

     label03:
        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack19 = $r9.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        resetParameters = interfaceinvoke $stack19.<org.bytedeco.javacv.ImageTransformer$Parameters: double[] get()>();

        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack21 = $r10.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        if $stack21 != null goto label04;

        $stack174 = null;

        goto label05;

     label04:
        $r11 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack22 = $r11.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $stack23 = virtualinvoke $stack22.<java.lang.Object: java.lang.Object clone()>();

        $stack174 = (double[]) $stack23;

     label05:
        resetSubspaceParameters = $stack174;

        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack24 = $r12.<org.bytedeco.javacv.GNImageAligner: double[] updateScale>;

        $r13 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r13.<org.bytedeco.javacv.GNImageAligner: void doHessianGradient(double[])>($stack24);

        $r14 = (org.bytedeco.javacv.GNImageAligner) this;

        $r14.<org.bytedeco.javacv.GNImageAligner: int lastLinePosition> = 0;

        $r15 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack27 = $r15.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        $r16 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack26 = $r16.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat gradient>;

        $r17 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack25 = $r17.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update>;

        $r18 = (org.bytedeco.opencv.opencv_core.CvArr) $stack27;

        $r19 = (org.bytedeco.opencv.opencv_core.CvArr) $stack26;

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) $stack25;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: int cvSolve(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r18, $r19, $r20, 1);

        i = 0;

     label06:
        $r21 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack29 = $r21.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i >= $stack29 goto label07;

        $r22 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack160 = $r22.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $r23 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack159 = $r23.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $stack161 = interfaceinvoke $stack159.<org.bytedeco.javacv.ImageTransformer$Parameters: double get(int)>(i);

        $r24 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack162 = $r24.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack163 = $stack162.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch>;

        $stack165 = $stack163[0];

        $r25 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack164 = $r25.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update>;

        $stack166 = virtualinvoke $stack164.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(i);

        $stack169 = $stack165 * $stack166;

        $r26 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack167 = $r26.<org.bytedeco.javacv.GNImageAligner: double[] updateScale>;

        $stack168 = $stack167[i];

        $stack170 = $stack169 * $stack168;

        $stack171 = $stack161 + $stack170;

        interfaceinvoke $stack160.<org.bytedeco.javacv.ImageTransformer$Parameters: void set(int,double)>(i, $stack171);

        i = i + 1;

        goto label06;

     label07:
        $r27 = (org.bytedeco.javacv.GNImageAligner) this;

        i = $r27.<org.bytedeco.javacv.GNImageAligner: int n>;

     label08:
        $r28 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack30 = $r28.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update>;

        $stack31 = virtualinvoke $stack30.<org.bytedeco.opencv.opencv_core.CvMat: int length()>();

        if i >= $stack31 goto label09;

        $r29 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack145 = $r29.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $r30 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack143 = $r30.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack144 = i - $stack143;

        $stack149 = $stack145[$stack144];

        $r31 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack146 = $r31.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack147 = $stack146.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch>;

        $stack150 = $stack147[0];

        $r32 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack148 = $r32.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update>;

        $stack151 = virtualinvoke $stack148.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(i);

        $stack154 = $stack150 * $stack151;

        $r33 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack152 = $r33.<org.bytedeco.javacv.GNImageAligner: double[] updateScale>;

        $stack153 = $stack152[i];

        $stack155 = $stack154 * $stack153;

        $stack156 = $stack149 + $stack155;

        $stack145[$stack144] = $stack156;

        i = i + 1;

        goto label08;

     label09:
        $r34 = (org.bytedeco.javacv.GNImageAligner) this;

        $r34.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded> = 1;

        i = 1;

     label10:
        $r35 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack32 = $r35.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack33 = $stack32.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch>;

        $stack34 = lengthof $stack33;

        if i >= $stack34 goto label16;

        $r36 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack95 = virtualinvoke $r36.<org.bytedeco.javacv.GNImageAligner: double getRMSE()>();

        $stack96 = $stack95 cmpl prevRMSE;

        if $stack96 <= 0 goto label16;

        $r37 = (org.bytedeco.javacv.GNImageAligner) this;

        $r37.<org.bytedeco.javacv.GNImageAligner: double RMSE> = prevRMSE;

        $r38 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack99 = $r38.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        interfaceinvoke $stack99.<org.bytedeco.javacv.ImageTransformer$Parameters: void set(double[])>(resetParameters);

        $r39 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack100 = $r39.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        if $stack100 == null goto label11;

        $r40 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack139 = $r40.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $r41 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack137 = $r41.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $stack138 = lengthof $stack137;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(resetSubspaceParameters, 0, $stack139, 0, $stack138);

     label11:
        $r42 = (org.bytedeco.javacv.GNImageAligner) this;

        $r42.<org.bytedeco.javacv.GNImageAligner: int lastLinePosition> = i;

        i#23 = 0;

     label12:
        $r43 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack101 = $r43.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i#23 >= $stack101 goto label13;

        $r44 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack123 = $r44.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $r45 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack122 = $r45.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $stack124 = interfaceinvoke $stack122.<org.bytedeco.javacv.ImageTransformer$Parameters: double get(int)>(i#23);

        $r46 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack125 = $r46.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack126 = $stack125.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch>;

        $stack128 = $stack126[i];

        $r47 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack127 = $r47.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update>;

        $stack129 = virtualinvoke $stack127.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(i#23);

        $stack132 = $stack128 * $stack129;

        $r48 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack130 = $r48.<org.bytedeco.javacv.GNImageAligner: double[] updateScale>;

        $stack131 = $stack130[i#23];

        $stack133 = $stack132 * $stack131;

        $stack134 = $stack124 + $stack133;

        interfaceinvoke $stack123.<org.bytedeco.javacv.ImageTransformer$Parameters: void set(int,double)>(i#23, $stack134);

        i#23 = i#23 + 1;

        goto label12;

     label13:
        $r49 = (org.bytedeco.javacv.GNImageAligner) this;

        i#23 = $r49.<org.bytedeco.javacv.GNImageAligner: int n>;

     label14:
        $r50 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack102 = $r50.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update>;

        $stack103 = virtualinvoke $stack102.<org.bytedeco.opencv.opencv_core.CvMat: int length()>();

        if i#23 >= $stack103 goto label15;

        $r51 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack108 = $r51.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $r52 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack106 = $r52.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack107 = i#23 - $stack106;

        $stack112 = $stack108[$stack107];

        $r53 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack109 = $r53.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack110 = $stack109.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch>;

        $stack113 = $stack110[i];

        $r54 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack111 = $r54.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update>;

        $stack114 = virtualinvoke $stack111.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(i#23);

        $stack117 = $stack113 * $stack114;

        $r55 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack115 = $r55.<org.bytedeco.javacv.GNImageAligner: double[] updateScale>;

        $stack116 = $stack115[i#23];

        $stack118 = $stack117 * $stack116;

        $stack119 = $stack112 + $stack118;

        $stack108[$stack107] = $stack119;

        i#23 = i#23 + 1;

        goto label14;

     label15:
        $r56 = (org.bytedeco.javacv.GNImageAligner) this;

        $r56.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded> = 1;

        i = i + 1;

        goto label10;

     label16:
        i#31 = 0.0;

        if delta == null goto label19;

        i#23 = 0;

     label17:
        $stack73 = lengthof delta;

        if i#23 >= $stack73 goto label18;

        $r57 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack79 = $r57.<org.bytedeco.javacv.GNImageAligner: double[] updateScale>;

        $stack80 = lengthof $stack79;

        if i#23 >= $stack80 goto label18;

        $r58 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack83 = $r58.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack85 = $stack83.<org.bytedeco.javacv.GNImageAligner$Settings: double[] lineSearch>;

        $r59 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack84 = $r59.<org.bytedeco.javacv.GNImageAligner: int lastLinePosition>;

        $stack87 = $stack85[$stack84];

        $r60 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack86 = $r60.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat update>;

        $stack88 = virtualinvoke $stack86.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(i#23);

        $stack91 = $stack87 * $stack88;

        $r61 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack89 = $r61.<org.bytedeco.javacv.GNImageAligner: double[] updateScale>;

        $stack90 = $stack89[i#23];

        $stack92 = $stack91 * $stack90;

        delta[i#23] = $stack92;

        i#23 = i#23 + 1;

        goto label17;

     label18:
        $r62 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack74 = $r62.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack75 = staticinvoke <java.util.Arrays: double[] copyOf(double[],int)>(delta, $stack74);

        i#31 = staticinvoke <org.bytedeco.javacv.JavaCV: double norm(double[])>($stack75);

     label19:
        $r63 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack35 = virtualinvoke $r63.<org.bytedeco.javacv.GNImageAligner: double getRMSE()>();

        $stack36 = $stack35 cmpl prevRMSE;

        if $stack36 > 0 goto label20;

        $r64 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack64 = $r64.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack65 = $stack64.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMax>;

        $stack66 = i#31 cmpl $stack65;

        if $stack66 > 0 goto label20;

        $r65 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack67 = $r65.<org.bytedeco.javacv.GNImageAligner: double RMSE>;

        $stack68 = staticinvoke <java.lang.Double: boolean isNaN(double)>($stack67);

        if $stack68 != 0 goto label20;

        $r66 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack69 = $r66.<org.bytedeco.javacv.GNImageAligner: double RMSE>;

        $stack70 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($stack69);

        if $stack70 == 0 goto label21;

     label20:
        $stack71 = 1;

        goto label22;

     label21:
        $stack71 = 0;

     label22:
        i#42 = $stack71;

        if $stack71 == 0 goto label24;

        $r67 = (org.bytedeco.javacv.GNImageAligner) this;

        $r67.<org.bytedeco.javacv.GNImageAligner: double RMSE> = prevRMSE;

        $r68 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack56 = $r68.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        interfaceinvoke $stack56.<org.bytedeco.javacv.ImageTransformer$Parameters: void set(double[])>(prevParameters);

        $r69 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack57 = $r69.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        if $stack57 == null goto label23;

        $r70 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack61 = $r70.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $r71 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack59 = $r71.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $stack60 = lengthof $stack59;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(prevSubspaceParameters, 0, $stack61, 0, $stack60);

     label23:
        $r72 = (org.bytedeco.javacv.GNImageAligner) this;

        $r72.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded> = 1;

     label24:
        if i#42 == 0 goto label25;

        $r73 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack50 = $r73.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack51 = $stack50.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMin>;

        $stack52 = i#31 cmpl $stack51;

        if $stack52 <= 0 goto label25;

        $r74 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack54 = $r74.<org.bytedeco.javacv.GNImageAligner: int trials>;

        $stack55 = $stack54 + 1;

        $r75 = (org.bytedeco.javacv.GNImageAligner) this;

        $r75.<org.bytedeco.javacv.GNImageAligner: int trials> = $stack55;

        if $stack55 >= 2 goto label25;

        return 0;

     label25:
        if i#42 != 0 goto label26;

        $r76 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack43 = $r76.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack44 = $stack43.<org.bytedeco.javacv.GNImageAligner$Settings: double deltaMin>;

        $stack45 = i#31 cmpg $stack44;

        if $stack45 >= 0 goto label28;

     label26:
        $r77 = (org.bytedeco.javacv.GNImageAligner) this;

        $r77.<org.bytedeco.javacv.GNImageAligner: int trials> = 0;

        $r78 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack39 = $r78.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $r79 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack37 = $r79.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack38 = $stack37.<org.bytedeco.javacv.GNImageAligner$Settings: int pyramidLevelMin>;

        if $stack39 <= $stack38 goto label27;

        $r80 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack40 = $r80.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack41 = $stack40 - 1;

        $r81 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r81.<org.bytedeco.javacv.GNImageAligner: void setPyramidLevel(int)>($stack41);

        goto label29;

     label27:
        converged = 1;

        goto label29;

     label28:
        $r82 = (org.bytedeco.javacv.GNImageAligner) this;

        $r82.<org.bytedeco.javacv.GNImageAligner: int trials> = 0;

     label29:
        return converged;
    }

    protected void doHessianGradient(double[])
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack9;
        double constraintError, stepSize, $stack27, $stack28, $stack29, $stack36, $stack38, $stack39, $stack64, $stack73, $stack79, $stack80, $stack81, $stack82, $stack83, $stack84;
        org.bytedeco.javacv.GNImageAligner$Settings $stack11, $stack56, $stack57, $stack65, $stack66, $stack74;
        org.bytedeco.opencv.opencv_core.CvMat $stack12, $stack13, $stack25, $stack26, $stack34, $stack35;
        double[] scale, $stack23, $stack58, $stack62, $stack67, $stack71;
        int $stack16, $stack17, $stack22, $stack31, $stack44, $stack47, $stack50, $stack53, $stack59, $stack60, $stack61, $stack63, $stack68, $stack69, $stack70, $stack72, $stack76, i, j;
        org.bytedeco.javacv.ImageTransformer$Parameters[] $stack18;
        org.bytedeco.opencv.opencv_core.CvRect $stack19;
        org.bytedeco.javacv.ImageTransformer$Data[] $stack20, $stack24, $stack43;
        org.bytedeco.javacv.ImageTransformer $stack21;
        java.nio.DoubleBuffer $stack37;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack45, $stack48, $stack51, $stack54;
        org.bytedeco.opencv.opencv_core.IplImage $stack46, $stack49, $stack52, $stack55;
        boolean $stack75;
        org.bytedeco.javacv.ImageTransformer$Data d;
        org.bytedeco.javacv.GNImageAligner$1 $u0;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41;
        org.bytedeco.opencv.opencv_core.CvArr $r3, $r5;
        org.bytedeco.javacv.Parallel$Looper $r8;

        this := @this: GNImageAligner;

        scale := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack9 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        constraintError = interfaceinvoke $stack9.<org.bytedeco.javacv.ImageTransformer$Parameters: double getConstraintError()>();

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack11 = $r1.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        stepSize = $stack11.<org.bytedeco.javacv.GNImageAligner$Settings: double stepSize>;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack12 = $r2.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat gradient>;

        $r3 = (org.bytedeco.opencv.opencv_core.CvArr) $stack12;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetZero(org.bytedeco.opencv.opencv_core.CvArr)>($r3);

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack13 = $r4.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) $stack13;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetZero(org.bytedeco.opencv.opencv_core.CvArr)>($r5);

        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack16 = $r6.<org.bytedeco.javacv.GNImageAligner: int n>;

        $u0 = new org.bytedeco.javacv.GNImageAligner$1;

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        specialinvoke $u0.<org.bytedeco.javacv.GNImageAligner$1: void <init>(org.bytedeco.javacv.GNImageAligner,double,double[],double)>($r7, stepSize, scale, constraintError);

        $r8 = (org.bytedeco.javacv.Parallel$Looper) $u0;

        staticinvoke <org.bytedeco.javacv.Parallel: void loop(int,int,org.bytedeco.javacv.Parallel$Looper)>(0, $stack16, $r8);

        i = 0;

     label1:
        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack17 = $r9.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i >= $stack17 goto label3;

        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack43 = $r10.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] hessianGradientTransformerData>;

        d = $stack43[i];

        $r11 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack45 = $r11.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack44 = $r12.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack46 = $stack45[$stack44];

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage srcImg> = $stack46;

        $r13 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack48 = $r13.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] transformed>;

        $r14 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack47 = $r14.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack49 = $stack48[$stack47];

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage subImg> = $stack49;

        $r15 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack51 = $r15.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] residual>;

        $r16 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack50 = $r16.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack52 = $stack51[$stack50];

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage srcDotImg> = $stack52;

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage transImg> = null;

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage dstImg> = null;

        $r17 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack54 = $r17.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $r18 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack53 = $r18.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack55 = $stack54[$stack53];

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage mask> = $stack55;

        $r19 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack56 = $r19.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack62 = $stack56.<org.bytedeco.javacv.GNImageAligner$Settings: double[] thresholdsZero>;

        $r20 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack57 = $r20.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack58 = $stack57.<org.bytedeco.javacv.GNImageAligner$Settings: double[] thresholdsZero>;

        $stack59 = lengthof $stack58;

        $stack61 = $stack59 - 1;

        $r21 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack60 = $r21.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack63 = staticinvoke <java.lang.Math: int min(int,int)>($stack61, $stack60);

        $stack64 = $stack62[$stack63];

        d.<org.bytedeco.javacv.ImageTransformer$Data: double zeroThreshold> = $stack64;

        $r22 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack65 = $r22.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack71 = $stack65.<org.bytedeco.javacv.GNImageAligner$Settings: double[] thresholdsOutlier>;

        $r23 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack66 = $r23.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack67 = $stack66.<org.bytedeco.javacv.GNImageAligner$Settings: double[] thresholdsOutlier>;

        $stack68 = lengthof $stack67;

        $stack70 = $stack68 - 1;

        $r24 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack69 = $r24.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack72 = staticinvoke <java.lang.Math: int min(int,int)>($stack70, $stack69);

        $stack73 = $stack71[$stack72];

        d.<org.bytedeco.javacv.ImageTransformer$Data: double outlierThreshold> = $stack73;

        $r25 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack74 = $r25.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack75 = $stack74.<org.bytedeco.javacv.GNImageAligner$Settings: boolean thresholdsMulRMSE>;

        if $stack75 == 0 goto label2;

        $stack80 = d.<org.bytedeco.javacv.ImageTransformer$Data: double zeroThreshold>;

        $r26 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack79 = $r26.<org.bytedeco.javacv.GNImageAligner: double RMSE>;

        $stack81 = $stack80 * $stack79;

        d.<org.bytedeco.javacv.ImageTransformer$Data: double zeroThreshold> = $stack81;

        $stack83 = d.<org.bytedeco.javacv.ImageTransformer$Data: double outlierThreshold>;

        $r27 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack82 = $r27.<org.bytedeco.javacv.GNImageAligner: double RMSE>;

        $stack84 = $stack83 * $stack82;

        d.<org.bytedeco.javacv.ImageTransformer$Data: double outlierThreshold> = $stack84;

     label2:
        $r28 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack76 = $r28.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        d.<org.bytedeco.javacv.ImageTransformer$Data: int pyramidLevel> = $stack76;

        i = i + 1;

        goto label1;

     label3:
        $r29 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack21 = $r29.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer transformer>;

        $r30 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack20 = $r30.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] hessianGradientTransformerData>;

        $r31 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack19 = $r31.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect roi>;

        $r32 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack18 = $r32.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        interfaceinvoke $stack21.<org.bytedeco.javacv.ImageTransformer: void transform(org.bytedeco.javacv.ImageTransformer$Data[],org.bytedeco.opencv.opencv_core.CvRect,org.bytedeco.javacv.ImageTransformer$Parameters[],boolean[])>($stack20, $stack19, $stack18, null);

        i = 0;

     label4:
        $r33 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack22 = $r33.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i >= $stack22 goto label7;

        $r34 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack24 = $r34.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] hessianGradientTransformerData>;

        d = $stack24[i];

        $r35 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack26 = $r35.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat gradient>;

        $r36 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack25 = $r36.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat gradient>;

        $stack27 = virtualinvoke $stack25.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(i);

        $stack28 = d.<org.bytedeco.javacv.ImageTransformer$Data: double srcDstDot>;

        $stack29 = $stack27 - $stack28;

        virtualinvoke $stack26.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(i, $stack29);

        j = 0;

     label5:
        $r37 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack31 = $r37.<org.bytedeco.javacv.GNImageAligner: int n>;

        if j >= $stack31 goto label6;

        $r38 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack35 = $r38.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        $r39 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack34 = $r39.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        $stack36 = virtualinvoke $stack34.<org.bytedeco.opencv.opencv_core.CvMat: double get(int,int)>(i, j);

        $stack37 = d.<org.bytedeco.javacv.ImageTransformer$Data: java.nio.DoubleBuffer dstDstDot>;

        $stack38 = virtualinvoke $stack37.<java.nio.DoubleBuffer: double get(int)>(j);

        $stack39 = $stack36 + $stack38;

        virtualinvoke $stack35.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,int,double)>(i, j, $stack39);

        j = j + 1;

        goto label5;

     label6:
        i = i + 1;

        goto label4;

     label7:
        $r40 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack23 = $r40.<org.bytedeco.javacv.GNImageAligner: double[] updateScale>;

        $r41 = (org.bytedeco.javacv.GNImageAligner) this;

        virtualinvoke $r41.<org.bytedeco.javacv.GNImageAligner: void doRegularization(double[])>($stack23);

        return;
    }

    protected void doRegularization(double[])
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack16, $stack75, $stack76, $stack79, $stack101, $stack105, $stack139, $stack155, $stack158;
        double constraintError, stepSize, $stack50, $stack51, $stack70, $stack89, $stack90, $stack91, $stack92, $stack93, $stack94, $stack95, $stack96, $stack103, $stack106, $stack107, $stack113, $stack114, $stack118, $stack119, $stack120, $stack127, $stack128, d, $stack148, $stack150, $stack151, $stack157, $stack159, $stack160, $stack165, i#12, c#17, h#55, g, a, $stack35, $stack36;
        org.bytedeco.javacv.GNImageAligner$Settings $stack18, $stack19, $stack33, $stack48, $stack49, $stack52, $stack58, $stack61, $stack69, $stack87, $stack88, $stack164, $stack22;
        org.bytedeco.opencv.opencv_core.CvMat $stack20, $stack21, $stack31, $stack34, $stack53, $stack59, $stack62, $stack122, $stack130, $stack133, $stack142, $stack143, $stack144, $stack146, $stack147, $stack149, $stack156, $stack25, $stack27, $stack37;
        double[] $stack24, $stack64, $stack72, $stack78, scale, $stack102, $stack125, i#13;
        int $stack41, $stack54, $stack60, $stack65, $stack80, $stack84, $stack85, $stack86, $stack97, $stack100, $stack112, $stack115, $stack116, $stack117, $stack121, $stack126, $stack129, $stack132, $stack141, $stack145, i, c, h, subspaceCorrelatedCount, i#20;
        byte $stack71, $stack166;
        boolean[] $stack73, $stack108;
        org.bytedeco.javacv.ImageTransformer$Parameters[] $stack74, $stack77, $stack104;
        double[][] $stack81;
        boolean $stack109, $stack23;
        org.bytedeco.javacv.GNImageAligner$2 $u0;
        org.bytedeco.javacv.GNImageAligner$3 $u1;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69;
        org.bytedeco.opencv.opencv_core.CvArr $r13, $r14, $r15;
        org.bytedeco.javacv.Parallel$Looper $r46, $r58;

        this := @this: GNImageAligner;

        scale := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack16 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        constraintError = interfaceinvoke $stack16.<org.bytedeco.javacv.ImageTransformer$Parameters: double getConstraintError()>();

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack18 = $r1.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        stepSize = $stack18.<org.bytedeco.javacv.GNImageAligner$Settings: double stepSize>;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack19 = $r2.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack20 = $stack19.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma>;

        if $stack20 != null goto label01;

        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack164 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack165 = $stack164.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaTikhonov>;

        $stack166 = $stack165 cmpl 0.0;

        if $stack166 == 0 goto label05;

     label01:
        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack21 = $r4.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat prior>;

        if $stack21 == null goto label05;

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack139 = $r5.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters priorParameters>;

        if $stack139 == null goto label05;

        i = 0;

     label02:
        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack141 = $r6.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i >= $stack141 goto label03;

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack156 = $r7.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat prior>;

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack155 = $r8.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $stack157 = interfaceinvoke $stack155.<org.bytedeco.javacv.ImageTransformer$Parameters: double get(int)>(i);

        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack158 = $r9.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters priorParameters>;

        $stack159 = interfaceinvoke $stack158.<org.bytedeco.javacv.ImageTransformer$Parameters: double get(int)>(i);

        $stack160 = $stack157 - $stack159;

        virtualinvoke $stack156.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(i, $stack160);

        i = i + 1;

        goto label02;

     label03:
        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack144 = $r10.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        $r11 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack143 = $r11.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat prior>;

        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack142 = $r12.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat prior>;

        $r13 = (org.bytedeco.opencv.opencv_core.CvArr) $stack144;

        $r14 = (org.bytedeco.opencv.opencv_core.CvArr) $stack143;

        $r15 = (org.bytedeco.opencv.opencv_core.CvArr) $stack142;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r13, $r14, $r15);

        i = 0;

     label04:
        $r16 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack145 = $r16.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i >= $stack145 goto label05;

        $r17 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack147 = $r17.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat gradient>;

        $r18 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack146 = $r18.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat gradient>;

        $stack148 = virtualinvoke $stack146.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(i);

        $r19 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack149 = $r19.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat prior>;

        $stack150 = virtualinvoke $stack149.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(i);

        $stack151 = $stack148 + $stack150;

        virtualinvoke $stack147.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(i, $stack151);

        i = i + 1;

        goto label04;

     label05:
        $r20 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack22 = $r20.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack23 = $stack22.<org.bytedeco.javacv.GNImageAligner$Settings: boolean constrained>;

        if $stack23 == 0 goto label10;

        i#12 = 0.0;

        $r21 = (org.bytedeco.javacv.GNImageAligner) this;

        i#13 = $r21.<org.bytedeco.javacv.GNImageAligner: double[] constraintGrad>;

        c = lengthof i#13;

        h = 0;

     label06:
        if h >= c goto label07;

        d = i#13[h];

        i#12 = i#12 + d;

        h = h + 1;

        goto label06;

     label07:
        $r22 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack115 = $r22.<org.bytedeco.javacv.GNImageAligner: int n>;

        $r23 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack112 = $r23.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack113 = (double) $stack112;

        $stack114 = $stack113 * i#12;

        scale[$stack115] = $stack114;

        i = 0;

     label08:
        $r24 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack116 = $r24.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i >= $stack116 goto label09;

        $r25 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack125 = $r25.<org.bytedeco.javacv.GNImageAligner: double[] constraintGrad>;

        $stack128 = $stack125[i];

        $r26 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack126 = $r26.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack127 = scale[$stack126];

        c#17 = $stack128 * $stack127;

        $r27 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack130 = $r27.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        $r28 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack129 = $r28.<org.bytedeco.javacv.GNImageAligner: int n>;

        virtualinvoke $stack130.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,int,double)>(i, $stack129, c#17);

        $r29 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack133 = $r29.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        $r30 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack132 = $r30.<org.bytedeco.javacv.GNImageAligner: int n>;

        virtualinvoke $stack133.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,int,double)>($stack132, i, c#17);

        i = i + 1;

        goto label08;

     label09:
        $r31 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack122 = $r31.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat gradient>;

        $r32 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack121 = $r32.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack119 = neg constraintError;

        $r33 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack117 = $r33.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack118 = scale[$stack117];

        $stack120 = $stack119 * $stack118;

        virtualinvoke $stack122.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>($stack121, $stack120);

     label10:
        $r34 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack24 = $r34.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        if $stack24 == null goto label14;

        $r35 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack64 = $r35.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        $stack65 = lengthof $stack64;

        if $stack65 <= 0 goto label14;

        $r36 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack69 = $r36.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack70 = $stack69.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace>;

        $stack71 = $stack70 cmpl 0.0;

        if $stack71 == 0 goto label14;

        $r37 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack72 = $r37.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        i = lengthof $stack72;

        $r38 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack73 = $r38.<org.bytedeco.javacv.GNImageAligner: boolean[] subspaceCorrelated>;

        staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>($stack73, 0);

        $r39 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack74 = $r39.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack76 = $stack74[0];

        $r40 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack75 = $r40.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        interfaceinvoke $stack76.<org.bytedeco.javacv.ImageTransformer$Parameters: void set(org.bytedeco.javacv.ImageTransformer$Parameters)>($stack75);

        $r41 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack77 = $r41.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack79 = $stack77[0];

        $r42 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack78 = $r42.<org.bytedeco.javacv.GNImageAligner: double[] subspaceParameters>;

        interfaceinvoke $stack79.<org.bytedeco.javacv.ImageTransformer$Parameters: void setSubspace(double[])>($stack78);

        $r43 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack80 = $r43.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack84 = $stack80 + i;

        $r44 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack81 = $r44.<org.bytedeco.javacv.GNImageAligner: double[][] tempSubspaceParameters>;

        $stack85 = lengthof $stack81;

        $u0 = new org.bytedeco.javacv.GNImageAligner$2;

        $r45 = (org.bytedeco.javacv.GNImageAligner) this;

        specialinvoke $u0.<org.bytedeco.javacv.GNImageAligner$2: void <init>(org.bytedeco.javacv.GNImageAligner,double[],int,double)>($r45, scale, i, stepSize);

        $r46 = (org.bytedeco.javacv.Parallel$Looper) $u0;

        staticinvoke <org.bytedeco.javacv.Parallel: void loop(int,int,int,org.bytedeco.javacv.Parallel$Looper)>(0, $stack84, $stack85, $r46);

        subspaceCorrelatedCount = 0;

        i#20 = 0;

     label11:
        $r47 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack86 = $r47.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i#20 >= $stack86 goto label13;

        $r48 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack102 = $r48.<org.bytedeco.javacv.GNImageAligner: double[] subspaceResidual>;

        $r49 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack101 = $r49.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $stack103 = interfaceinvoke $stack101.<org.bytedeco.javacv.ImageTransformer$Parameters: double get(int)>(i#20);

        $r50 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack104 = $r50.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack105 = $stack104[0];

        $stack106 = interfaceinvoke $stack105.<org.bytedeco.javacv.ImageTransformer$Parameters: double get(int)>(i#20);

        $stack107 = $stack103 - $stack106;

        $stack102[i#20] = $stack107;

        $r51 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack108 = $r51.<org.bytedeco.javacv.GNImageAligner: boolean[] subspaceCorrelated>;

        $stack109 = $stack108[i#20];

        if $stack109 == 0 goto label12;

        subspaceCorrelatedCount = subspaceCorrelatedCount + 1;

     label12:
        i#20 = i#20 + 1;

        goto label11;

     label13:
        $r52 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack87 = $r52.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack90 = $stack87.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace>;

        $r53 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack88 = $r53.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack89 = $stack88.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaSubspace>;

        $stack92 = $stack90 * $stack89;

        $r54 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack91 = $r54.<org.bytedeco.javacv.GNImageAligner: double RMSE>;

        $stack94 = $stack92 * $stack91;

        $r55 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack93 = $r55.<org.bytedeco.javacv.GNImageAligner: double RMSE>;

        $stack96 = $stack94 * $stack93;

        $stack95 = (double) subspaceCorrelatedCount;

        i#12 = $stack96 / $stack95;

        $r56 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack97 = $r56.<org.bytedeco.javacv.GNImageAligner: int n>;

        $stack100 = $stack97 + i;

        $u1 = new org.bytedeco.javacv.GNImageAligner$3;

        $r57 = (org.bytedeco.javacv.GNImageAligner) this;

        specialinvoke $u1.<org.bytedeco.javacv.GNImageAligner$3: void <init>(org.bytedeco.javacv.GNImageAligner,int,double)>($r57, i, i#12);

        $r58 = (org.bytedeco.javacv.Parallel$Looper) $u1;

        staticinvoke <org.bytedeco.javacv.Parallel: void loop(int,int,org.bytedeco.javacv.Parallel$Looper)>(0, $stack100, $r58);

     label14:
        $r59 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack25 = $r59.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        i#20 = virtualinvoke $stack25.<org.bytedeco.opencv.opencv_core.CvMat: int rows()>();

        $r60 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack27 = $r60.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        subspaceCorrelatedCount = virtualinvoke $stack27.<org.bytedeco.opencv.opencv_core.CvMat: int cols()>();

        i = 0;

     label15:
        if i >= i#20 goto label20;

        c = 0;

     label16:
        if c >= subspaceCorrelatedCount goto label19;

        $r61 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack31 = $r61.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        h#55 = virtualinvoke $stack31.<org.bytedeco.opencv.opencv_core.CvMat: double get(int,int)>(i, c);

        g = 0.0;

        $r62 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack33 = $r62.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack34 = $stack33.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma>;

        if $stack34 == null goto label17;

        $r63 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack52 = $r63.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack53 = $stack52.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma>;

        $stack54 = virtualinvoke $stack53.<org.bytedeco.opencv.opencv_core.CvMat: int rows()>();

        if i >= $stack54 goto label17;

        $r64 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack58 = $r64.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack59 = $stack58.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma>;

        $stack60 = virtualinvoke $stack59.<org.bytedeco.opencv.opencv_core.CvMat: int cols()>();

        if c >= $stack60 goto label17;

        $r65 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack61 = $r65.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack62 = $stack61.<org.bytedeco.javacv.GNImageAligner$Settings: org.bytedeco.opencv.opencv_core.CvMat gammaTgamma>;

        g = virtualinvoke $stack62.<org.bytedeco.opencv.opencv_core.CvMat: double get(int,int)>(i, c);

     label17:
        a = 0.0;

        if i != c goto label18;

        $r66 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack41 = $r66.<org.bytedeco.javacv.GNImageAligner: int n>;

        if i >= $stack41 goto label18;

        $r67 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack48 = $r67.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack51 = $stack48.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaTikhonov>;

        $r68 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack49 = $r68.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack50 = $stack49.<org.bytedeco.javacv.GNImageAligner$Settings: double alphaTikhonov>;

        a = $stack51 * $stack50;

     label18:
        $r69 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack37 = $r69.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat hessian>;

        $stack35 = h#55 + g;

        $stack36 = $stack35 + a;

        virtualinvoke $stack37.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,int,double)>(i, c, $stack36);

        c = c + 1;

        goto label16;

     label19:
        i = i + 1;

        goto label15;

     label20:
        return;
    }

    protected void doRoi()
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack3;
        org.bytedeco.opencv.opencv_core.CvMat $stack4, $stack5, $stack7;
        org.bytedeco.javacv.ImageTransformer $stack6;
        double[] pts;
        int $stack9, $stack13, $stack16, $stack18, $stack21, $stack25, $stack30, $stack35, $stack36, i;
        org.bytedeco.opencv.opencv_core.CvRect $stack10, $stack11, $stack12, $stack17, $stack23;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack14, $stack19, $stack26, $stack31;
        org.bytedeco.opencv.opencv_core.IplImage $stack15, $stack20, $stack27, $stack34;
        org.bytedeco.opencv.opencv_core.CvPoint $stack28, $stack33;
        org.bytedeco.opencv.opencv_core.CvScalar $stack32;
        double $stack37, $stack38, $stack39;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r18;
        org.bytedeco.opencv.opencv_core.CvArr $r14, $r19;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack6 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer transformer>;

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack5 = $r1.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat srcRoiPts>;

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack4 = $r2.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat dstRoiPts>;

        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack3 = $r3.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        interfaceinvoke $stack6.<org.bytedeco.javacv.ImageTransformer: void transform(org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.javacv.ImageTransformer$Parameters,boolean)>($stack5, $stack4, $stack3, 0);

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack7 = $r4.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvMat dstRoiPts>;

        pts = virtualinvoke $stack7.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        i = 0;

     label1:
        $stack9 = lengthof pts;

        if i >= $stack9 goto label2;

        $stack38 = pts[i];

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack35 = $r5.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack36 = 1 << $stack35;

        $stack37 = (double) $stack36;

        $stack39 = $stack38 / $stack37;

        pts[i] = $stack39;

        i = i + 1;

        goto label1;

     label2:
        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack10 = $r6.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect roi>;

        $stack11 = virtualinvoke $stack10.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect x(int)>(0);

        $stack12 = virtualinvoke $stack11.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect y(int)>(0);

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack14 = $r7.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack13 = $r8.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack15 = $stack14[$stack13];

        $stack16 = virtualinvoke $stack15.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack17 = virtualinvoke $stack12.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect width(int)>($stack16);

        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack19 = $r9.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack18 = $r10.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack20 = $stack19[$stack18];

        $stack21 = virtualinvoke $stack20.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        virtualinvoke $stack17.<org.bytedeco.opencv.opencv_core.CvRect: org.bytedeco.opencv.opencv_core.CvRect height(int)>($stack21);

        $r11 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack23 = $r11.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect roi>;

        staticinvoke <org.bytedeco.javacv.JavaCV: org.bytedeco.opencv.opencv_core.CvRect boundingRect(double[],org.bytedeco.opencv.opencv_core.CvRect,int,int,int,int)>(pts, $stack23, 3, 3, 16, 1);

        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack26 = $r12.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $r13 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack25 = $r13.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack27 = $stack26[$stack25];

        $r14 = (org.bytedeco.opencv.opencv_core.CvArr) $stack27;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetZero(org.bytedeco.opencv.opencv_core.CvArr)>($r14);

        $r15 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack28 = $r15.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvPoint dstRoiPtsArray>;

        virtualinvoke $stack28.<org.bytedeco.opencv.opencv_core.CvPoint: org.bytedeco.opencv.opencv_core.CvPoint put(byte,double[])>(16, pts);

        $r16 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack31 = $r16.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $r17 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack30 = $r17.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack34 = $stack31[$stack30];

        $r18 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack33 = $r18.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvPoint dstRoiPtsArray>;

        $stack32 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar WHITE>;

        $r19 = (org.bytedeco.opencv.opencv_core.CvArr) $stack34;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvFillConvexPoly(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvPoint,int,org.bytedeco.opencv.opencv_core.CvScalar,int,int)>($r19, $stack33, 4, $stack32, 8, 16);

        return;
    }

    protected void doResidual()
    {
        GNImageAligner this;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack5;
        org.bytedeco.javacv.ImageTransformer$Data[] $stack7, $stack46, $stack48, $stack52;
        org.bytedeco.javacv.ImageTransformer$Data d, $stack49, $stack53;
        int $stack8, $stack11, $stack14, $stack17, $stack20, $stack26, $stack27, $stack28, $stack30, $stack35, $stack36, $stack37, $stack39, $stack43, dstCount, $stack54;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack9, $stack12, $stack15, $stack18, $stack21;
        org.bytedeco.opencv.opencv_core.IplImage $stack10, $stack13, $stack16, $stack19, $stack22;
        org.bytedeco.javacv.GNImageAligner$Settings $stack23, $stack24, $stack32, $stack33, $stack41;
        double[] $stack25, $stack29, $stack34, $stack38;
        double $stack31, $stack40, dstDstDot, $stack55, $stack56, $stack61, $stack62, $stack63, $stack64, $stack65, $stack66, $stack57;
        boolean $stack42;
        org.bytedeco.javacv.ImageTransformer$Parameters[] $stack44;
        org.bytedeco.opencv.opencv_core.CvRect $stack45;
        org.bytedeco.javacv.ImageTransformer $stack47;
        java.nio.DoubleBuffer $stack50;
        org.bytedeco.javacv.GNImageAligner $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack5 = $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        interfaceinvoke $stack5.<org.bytedeco.javacv.ImageTransformer$Parameters: double getConstraintError()>();

        $r1 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack7 = $r1.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] residualTransformerData>;

        d = $stack7[0];

        $r2 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack9 = $r2.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] template>;

        $r3 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack8 = $r3.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack10 = $stack9[$stack8];

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage srcImg> = $stack10;

        $r4 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack12 = $r4.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] target>;

        $r5 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack11 = $r5.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack13 = $stack12[$stack11];

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage subImg> = $stack13;

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage srcDotImg> = null;

        $r6 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack15 = $r6.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] transformed>;

        $r7 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack14 = $r7.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack16 = $stack15[$stack14];

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage transImg> = $stack16;

        $r8 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack18 = $r8.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] residual>;

        $r9 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack17 = $r9.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack19 = $stack18[$stack17];

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage dstImg> = $stack19;

        $r10 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack21 = $r10.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.IplImage[] mask>;

        $r11 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack20 = $r11.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack22 = $stack21[$stack20];

        d.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage mask> = $stack22;

        $r12 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack23 = $r12.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack29 = $stack23.<org.bytedeco.javacv.GNImageAligner$Settings: double[] thresholdsZero>;

        $r13 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack24 = $r13.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack25 = $stack24.<org.bytedeco.javacv.GNImageAligner$Settings: double[] thresholdsZero>;

        $stack26 = lengthof $stack25;

        $stack28 = $stack26 - 1;

        $r14 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack27 = $r14.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack30 = staticinvoke <java.lang.Math: int min(int,int)>($stack28, $stack27);

        $stack31 = $stack29[$stack30];

        d.<org.bytedeco.javacv.ImageTransformer$Data: double zeroThreshold> = $stack31;

        $r15 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack32 = $r15.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack38 = $stack32.<org.bytedeco.javacv.GNImageAligner$Settings: double[] thresholdsOutlier>;

        $r16 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack33 = $r16.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack34 = $stack33.<org.bytedeco.javacv.GNImageAligner$Settings: double[] thresholdsOutlier>;

        $stack35 = lengthof $stack34;

        $stack37 = $stack35 - 1;

        $r17 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack36 = $r17.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        $stack39 = staticinvoke <java.lang.Math: int min(int,int)>($stack37, $stack36);

        $stack40 = $stack38[$stack39];

        d.<org.bytedeco.javacv.ImageTransformer$Data: double outlierThreshold> = $stack40;

        $r18 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack41 = $r18.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings settings>;

        $stack42 = $stack41.<org.bytedeco.javacv.GNImageAligner$Settings: boolean thresholdsMulRMSE>;

        if $stack42 == 0 goto label1;

        $stack62 = d.<org.bytedeco.javacv.ImageTransformer$Data: double zeroThreshold>;

        $r19 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack61 = $r19.<org.bytedeco.javacv.GNImageAligner: double RMSE>;

        $stack63 = $stack62 * $stack61;

        d.<org.bytedeco.javacv.ImageTransformer$Data: double zeroThreshold> = $stack63;

        $stack65 = d.<org.bytedeco.javacv.ImageTransformer$Data: double outlierThreshold>;

        $r20 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack64 = $r20.<org.bytedeco.javacv.GNImageAligner: double RMSE>;

        $stack66 = $stack65 * $stack64;

        d.<org.bytedeco.javacv.ImageTransformer$Data: double outlierThreshold> = $stack66;

     label1:
        $r21 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack43 = $r21.<org.bytedeco.javacv.GNImageAligner: int pyramidLevel>;

        d.<org.bytedeco.javacv.ImageTransformer$Data: int pyramidLevel> = $stack43;

        $r22 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack47 = $r22.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer transformer>;

        $r23 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack46 = $r23.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] residualTransformerData>;

        $r24 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack45 = $r24.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.opencv.opencv_core.CvRect roi>;

        $r25 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack44 = $r25.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Parameters[] parametersArray>;

        interfaceinvoke $stack47.<org.bytedeco.javacv.ImageTransformer: void transform(org.bytedeco.javacv.ImageTransformer$Data[],org.bytedeco.opencv.opencv_core.CvRect,org.bytedeco.javacv.ImageTransformer$Parameters[],boolean[])>($stack46, $stack45, $stack44, null);

        $r26 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack48 = $r26.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] residualTransformerData>;

        $stack49 = $stack48[0];

        $stack50 = $stack49.<org.bytedeco.javacv.ImageTransformer$Data: java.nio.DoubleBuffer dstDstDot>;

        dstDstDot = virtualinvoke $stack50.<java.nio.DoubleBuffer: double get(int)>(0);

        $r27 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack52 = $r27.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.ImageTransformer$Data[] residualTransformerData>;

        $stack53 = $stack52[0];

        dstCount = $stack53.<org.bytedeco.javacv.ImageTransformer$Data: int dstCount>;

        $r28 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack54 = $r28.<org.bytedeco.javacv.GNImageAligner: int n>;

        if dstCount >= $stack54 goto label2;

        $stack57 = #NaN;

        goto label3;

     label2:
        $stack55 = (double) dstCount;

        $stack56 = dstDstDot / $stack55;

        $stack57 = staticinvoke <java.lang.Math: double sqrt(double)>($stack56);

     label3:
        $r29 = (org.bytedeco.javacv.GNImageAligner) this;

        $r29.<org.bytedeco.javacv.GNImageAligner: double RMSE> = $stack57;

        $r30 = (org.bytedeco.javacv.GNImageAligner) this;

        $r30.<org.bytedeco.javacv.GNImageAligner: boolean residualUpdateNeeded> = 0;

        return;
    }

    public volatile org.bytedeco.javacv.ImageAligner$Settings getSettings()
    {
        GNImageAligner this;
        org.bytedeco.javacv.GNImageAligner$Settings $stack1;
        org.bytedeco.javacv.GNImageAligner $r0;
        org.bytedeco.javacv.ImageAligner$Settings $r1;

        this := @this: GNImageAligner;

        $r0 = (org.bytedeco.javacv.GNImageAligner) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.GNImageAligner: org.bytedeco.javacv.GNImageAligner$Settings getSettings()>();

        $r1 = (org.bytedeco.javacv.ImageAligner$Settings) $stack1;

        return $r1;
    }
}
