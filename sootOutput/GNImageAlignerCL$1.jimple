class GNImageAlignerCL$1 extends java.lang.Object implements org.bytedeco.javacv.Parallel$Looper
{
    final double val$stepSize;
    final double[] val$scale;
    final double val$constraintError;
    final org.bytedeco.javacv.GNImageAlignerCL this$0;

    void <init>(org.bytedeco.javacv.GNImageAlignerCL, double, double[], double)
    {
        GNImageAlignerCL$1 this;
        org.bytedeco.javacv.GNImageAlignerCL this$0;
        double l2, l5;
        double[] l4;
        org.bytedeco.javacv.GNImageAlignerCL$1 $r0, $r1, $r2, $r3;

        this := @this: GNImageAlignerCL$1;

        this$0 := @parameter0: org.bytedeco.javacv.GNImageAlignerCL;

        l2 := @parameter1: double;

        l4 := @parameter2: double[];

        l5 := @parameter3: double;

        $r0 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $r0.<org.bytedeco.javacv.GNImageAlignerCL$1: org.bytedeco.javacv.GNImageAlignerCL this$0> = this$0;

        $r1 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $r1.<org.bytedeco.javacv.GNImageAlignerCL$1: double val$stepSize> = l2;

        $r2 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $r2.<org.bytedeco.javacv.GNImageAlignerCL$1: double[] val$scale> = l4;

        $r3 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $r3.<org.bytedeco.javacv.GNImageAlignerCL$1: double val$constraintError> = l5;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void loop(int, int, int)
    {
        int 'from', 'to', looperID, i;
        GNImageAlignerCL$1 this;
        org.bytedeco.javacv.GNImageAlignerCL $stack5, $stack7, $stack10, $stack12, $stack19, $stack24, $stack28, $stack29;
        org.bytedeco.javacv.ImageTransformer$Parameters[] $stack6, $stack11, $stack13, $stack20, $stack30;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack8, $stack9, $stack14, $stack15, $stack21, $stack25, $stack31;
        double $stack16, $stack17, $stack18, $stack23, $stack26, $stack27, $stack33, $stack34, $stack35;
        double[] $stack22, $stack32;
        org.bytedeco.javacv.GNImageAlignerCL$1 $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: GNImageAlignerCL$1;

        'from' := @parameter0: int;

        'to' := @parameter1: int;

        looperID := @parameter2: int;

        i = 'from';

     label1:
        if i >= 'to' goto label2;

        $r0 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack5 = $r0.<org.bytedeco.javacv.GNImageAlignerCL$1: org.bytedeco.javacv.GNImageAlignerCL this$0>;

        $stack6 = $stack5.<org.bytedeco.javacv.GNImageAlignerCL: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack9 = $stack6[i];

        $r1 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack7 = $r1.<org.bytedeco.javacv.GNImageAlignerCL$1: org.bytedeco.javacv.GNImageAlignerCL this$0>;

        $stack8 = $stack7.<org.bytedeco.javacv.GNImageAlignerCL: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        interfaceinvoke $stack9.<org.bytedeco.javacv.ImageTransformer$Parameters: void set(org.bytedeco.javacv.ImageTransformer$Parameters)>($stack8);

        $r2 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack10 = $r2.<org.bytedeco.javacv.GNImageAlignerCL$1: org.bytedeco.javacv.GNImageAlignerCL this$0>;

        $stack11 = $stack10.<org.bytedeco.javacv.GNImageAlignerCL: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack15 = $stack11[i];

        $r3 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack12 = $r3.<org.bytedeco.javacv.GNImageAlignerCL$1: org.bytedeco.javacv.GNImageAlignerCL this$0>;

        $stack13 = $stack12.<org.bytedeco.javacv.GNImageAlignerCL: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack14 = $stack13[i];

        $stack16 = interfaceinvoke $stack14.<org.bytedeco.javacv.ImageTransformer$Parameters: double get(int)>(i);

        $r4 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack17 = $r4.<org.bytedeco.javacv.GNImageAlignerCL$1: double val$stepSize>;

        $stack18 = $stack16 + $stack17;

        interfaceinvoke $stack15.<org.bytedeco.javacv.ImageTransformer$Parameters: void set(int,double)>(i, $stack18);

        $r5 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack22 = $r5.<org.bytedeco.javacv.GNImageAlignerCL$1: double[] val$scale>;

        $r6 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack19 = $r6.<org.bytedeco.javacv.GNImageAlignerCL$1: org.bytedeco.javacv.GNImageAlignerCL this$0>;

        $stack20 = $stack19.<org.bytedeco.javacv.GNImageAlignerCL: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack21 = $stack20[i];

        $stack23 = interfaceinvoke $stack21.<org.bytedeco.javacv.ImageTransformer$Parameters: double get(int)>(i);

        $r7 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack24 = $r7.<org.bytedeco.javacv.GNImageAlignerCL$1: org.bytedeco.javacv.GNImageAlignerCL this$0>;

        $stack25 = $stack24.<org.bytedeco.javacv.GNImageAlignerCL: org.bytedeco.javacv.ImageTransformer$Parameters parameters>;

        $stack26 = interfaceinvoke $stack25.<org.bytedeco.javacv.ImageTransformer$Parameters: double get(int)>(i);

        $stack27 = $stack23 - $stack26;

        $stack22[i] = $stack27;

        $r8 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack28 = $r8.<org.bytedeco.javacv.GNImageAlignerCL$1: org.bytedeco.javacv.GNImageAlignerCL this$0>;

        $stack32 = $stack28.<org.bytedeco.javacv.GNImageAlignerCL: double[] constraintGrad>;

        $r9 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack29 = $r9.<org.bytedeco.javacv.GNImageAlignerCL$1: org.bytedeco.javacv.GNImageAlignerCL this$0>;

        $stack30 = $stack29.<org.bytedeco.javacv.GNImageAlignerCL: org.bytedeco.javacv.ImageTransformer$Parameters[] tempParameters>;

        $stack31 = $stack30[i];

        $stack33 = interfaceinvoke $stack31.<org.bytedeco.javacv.ImageTransformer$Parameters: double getConstraintError()>();

        $r10 = (org.bytedeco.javacv.GNImageAlignerCL$1) this;

        $stack34 = $r10.<org.bytedeco.javacv.GNImageAlignerCL$1: double val$constraintError>;

        $stack35 = $stack33 - $stack34;

        $stack32[i] = $stack35;

        i = i + 1;

        goto label1;

     label2:
        return;
    }
}
