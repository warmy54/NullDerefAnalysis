public class Gcc extends org.ooc.frontend.compilers.BaseCompiler
{

    public void <init>()
    {
        Gcc this;

        this := @this: Gcc;

        specialinvoke this.<org.ooc.frontend.compilers.BaseCompiler: void <init>(java.lang.String)>("gcc");

        return;
    }

    public void <init>(java.lang.String)
    {
        Gcc this;
        java.lang.String executableName;

        this := @this: Gcc;

        executableName := @parameter0: java.lang.String;

        specialinvoke this.<org.ooc.frontend.compilers.BaseCompiler: void <init>(java.lang.String)>(executableName);

        return;
    }

    public void addDynamicLibrary(java.lang.String)
    {
        Gcc this;
        java.lang.String library, $stack3;
        java.util.List $stack2;
        org.ooc.frontend.compilers.Gcc $r0;

        this := @this: Gcc;

        library := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack2 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        $stack3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(library) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("-l\u0001");

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>($stack3);

        return;
    }

    public void addIncludePath(java.lang.String)
    {
        Gcc this;
        java.lang.String path, $stack3;
        java.util.List $stack2;
        org.ooc.frontend.compilers.Gcc $r0;

        this := @this: Gcc;

        path := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack2 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        $stack3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(path) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("-I\u0001");

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>($stack3);

        return;
    }

    public void addLibraryPath(java.lang.String)
    {
        Gcc this;
        java.lang.String path, $stack3;
        java.util.List $stack2;
        org.ooc.frontend.compilers.Gcc $r0;

        this := @this: Gcc;

        path := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack2 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        $stack3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(path) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("-L\u0001");

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>($stack3);

        return;
    }

    public void addObjectFile(java.lang.String)
    {
        Gcc this;
        java.lang.String file;
        java.util.List $stack2;
        org.ooc.frontend.compilers.Gcc $r0;

        this := @this: Gcc;

        file := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack2 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(file);

        return;
    }

    public void addOption(java.lang.String)
    {
        Gcc this;
        java.lang.String option;
        java.util.List $stack2;
        org.ooc.frontend.compilers.Gcc $r0;

        this := @this: Gcc;

        option := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack2 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(option);

        return;
    }

    public void setOutputPath(java.lang.String)
    {
        Gcc this;
        java.util.List $stack2, $stack4;
        java.lang.String path;
        org.ooc.frontend.compilers.Gcc $r0, $r1;

        this := @this: Gcc;

        path := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack2 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>("-o");

        $r1 = (org.ooc.frontend.compilers.Gcc) this;

        $stack4 = $r1.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>(path);

        return;
    }

    public void setCompileOnly()
    {
        Gcc this;
        java.util.List $stack1;
        org.ooc.frontend.compilers.Gcc $r0;

        this := @this: Gcc;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack1 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>("-c");

        return;
    }

    public void setDebugEnabled()
    {
        Gcc this;
        java.util.List $stack1;
        org.ooc.frontend.compilers.Gcc $r0;

        this := @this: Gcc;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack1 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>("-g");

        return;
    }

    public void reset()
    {
        Gcc this;
        java.util.List $stack1, $stack3, $stack5;
        org.ooc.frontend.compilers.Gcc $r0, $r1, $r2;

        this := @this: Gcc;

        specialinvoke this.<org.ooc.frontend.compilers.BaseCompiler: void reset()>();

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack1 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>("-std=gnu99");

        $r1 = (org.ooc.frontend.compilers.Gcc) this;

        $stack3 = $r1.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>("-Wall");

        $r2 = (org.ooc.frontend.compilers.Gcc) this;

        $stack5 = $r2.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack5.<java.util.List: boolean add(java.lang.Object)>("-O2");

        return;
    }

    public boolean supportsDeclInFor()
    {
        Gcc this;

        this := @this: Gcc;

        return 1;
    }

    public boolean supportsVLAs()
    {
        Gcc this;

        this := @this: Gcc;

        return 1;
    }

    public org.ooc.frontend.compilers.Gcc clone()
    {
        org.ooc.frontend.compilers.Gcc $stack1;
        Gcc this;

        this := @this: Gcc;

        $stack1 = new org.ooc.frontend.compilers.Gcc;

        specialinvoke $stack1.<org.ooc.frontend.compilers.Gcc: void <init>()>();

        return $stack1;
    }

    public void defineSymbol(java.lang.String)
    {
        Gcc this;
        java.lang.String symbolName, $stack3;
        java.util.List $stack2;
        org.ooc.frontend.compilers.Gcc $r0;

        this := @this: Gcc;

        symbolName := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack2 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        $stack3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(symbolName) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("-D\u0001");

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>($stack3);

        return;
    }

    public void undefineSymbol(java.lang.String)
    {
        Gcc this;
        java.lang.String symbolName, $stack3;
        java.util.List $stack2;
        org.ooc.frontend.compilers.Gcc $r0;

        this := @this: Gcc;

        symbolName := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack2 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        $stack3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(symbolName) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("-U\u0001");

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>($stack3);

        return;
    }

    public void setFatArchitectures(java.lang.String[])
    {
        java.lang.String[] archs;
        int l3, l4;
        java.lang.String arch;
        Gcc this;
        java.util.List $stack6, $stack8;
        org.ooc.frontend.compilers.Gcc $r0, $r1;

        this := @this: Gcc;

        archs := @parameter0: java.lang.String[];

        l3 = lengthof archs;

        l4 = 0;

     label1:
        if l4 >= l3 goto label2;

        arch = archs[l4];

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack6 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack6.<java.util.List: boolean add(java.lang.Object)>("-arch");

        $r1 = (org.ooc.frontend.compilers.Gcc) this;

        $stack8 = $r1.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>(arch);

        l4 = l4 + 1;

        goto label1;

     label2:
        return;
    }

    public void setOSXSDKAndDeploymentTarget(java.lang.String)
    {
        Gcc this;
        java.util.List $stack2, $stack4, $stack7;
        java.lang.String version, $stack5, $stack8;
        org.ooc.frontend.compilers.Gcc $r0, $r1, $r2;

        this := @this: Gcc;

        version := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack2 = $r0.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>("-isysroot");

        $r1 = (org.ooc.frontend.compilers.Gcc) this;

        $stack4 = $r1.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        $stack5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(version) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/Developer/SDKs/MacOSX\u0001.sdk");

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($stack5);

        $r2 = (org.ooc.frontend.compilers.Gcc) this;

        $stack7 = $r2.<org.ooc.frontend.compilers.Gcc: java.util.List command>;

        $stack8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(version) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("-mmacosx-version-min=\u0001");

        interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>($stack8);

        return;
    }

    public volatile org.ooc.frontend.compilers.BaseCompiler clone()
    {
        Gcc this;
        org.ooc.frontend.compilers.Gcc $stack1, $r0;
        org.ooc.frontend.compilers.BaseCompiler $r1;

        this := @this: Gcc;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.compilers.Gcc: org.ooc.frontend.compilers.Gcc clone()>();

        $r1 = (org.ooc.frontend.compilers.BaseCompiler) $stack1;

        return $r1;
    }

    public volatile org.ooc.frontend.compilers.AbstractCompiler clone()
    {
        Gcc this;
        org.ooc.frontend.compilers.Gcc $stack1, $r0;
        org.ooc.frontend.compilers.AbstractCompiler $r1;

        this := @this: Gcc;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.compilers.Gcc: org.ooc.frontend.compilers.Gcc clone()>();

        $r1 = (org.ooc.frontend.compilers.AbstractCompiler) $stack1;

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        Gcc this;
        org.ooc.frontend.compilers.Gcc $stack1, $r0;

        this := @this: Gcc;

        $r0 = (org.ooc.frontend.compilers.Gcc) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.compilers.Gcc: org.ooc.frontend.compilers.Gcc clone()>();

        return $stack1;
    }
}
