public class HelpMojo extends org.apache.maven.plugin.AbstractMojo
{
    private boolean detail;
    private java.lang.String goal;
    private int lineLength;
    private int indentSize;
    private static final java.lang.String PLUGIN_HELP_PATH;
    private static final int DEFAULT_LINE_LENGTH;

    public void <init>()
    {
        HelpMojo this;

        this := @this: HelpMojo;

        specialinvoke this.<org.apache.maven.plugin.AbstractMojo: void <init>()>();

        return;
    }

    private org.w3c.dom.Document build() throws org.apache.maven.plugin.MojoExecutionException
    {
        HelpMojo this;
        org.apache.maven.plugin.logging.Log $stack5;
        java.lang.Class $stack6;
        org.w3c.dom.Document l4;
        org.xml.sax.SAXException $stack12;
        java.lang.String $stack14, $stack17, $stack20;
        javax.xml.parsers.ParserConfigurationException $stack15;
        java.io.IOException $stack18;
        java.lang.Throwable $stack21, $stack22, $r1, $r2, $r3;
        java.io.InputStream is;
        javax.xml.parsers.DocumentBuilderFactory dbFactory;
        javax.xml.parsers.DocumentBuilder dBuilder;
        org.apache.maven.plugin.MojoExecutionException $u0, $u1, $u2;
        sortpom.HelpMojo $r0;

        this := @this: HelpMojo;

        $r0 = (sortpom.HelpMojo) this;

        $stack5 = virtualinvoke $r0.<sortpom.HelpMojo: org.apache.maven.plugin.logging.Log getLog()>();

        interfaceinvoke $stack5.<org.apache.maven.plugin.logging.Log: void debug(java.lang.CharSequence)>("load plugin-help.xml: /META-INF/maven/com.github.ekryd.sortpom/sortpom-maven-plugin/plugin-help.xml");

     label01:
        $stack6 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        is = virtualinvoke $stack6.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("/META-INF/maven/com.github.ekryd.sortpom/sortpom-maven-plugin/plugin-help.xml");

     label02:
        dbFactory = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        dBuilder = virtualinvoke dbFactory.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        l4 = virtualinvoke dBuilder.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(is);

     label03:
        if is == null goto label04;

        virtualinvoke is.<java.io.InputStream: void close()>();

     label04:
        return l4;

     label05:
        $stack22 := @caughtexception;

        if is == null goto label09;

     label06:
        virtualinvoke is.<java.io.InputStream: void close()>();

     label07:
        goto label09;

     label08:
        $stack21 := @caughtexception;

        virtualinvoke $stack22.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack21);

     label09:
        throw $stack22;

     label10:
        $stack18 := @caughtexception;

        $u0 = new org.apache.maven.plugin.MojoExecutionException;

        $stack20 = virtualinvoke $stack18.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $u0.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String,java.lang.Exception)>($stack20, $stack18);

        $r1 = (java.lang.Throwable) $u0;

        throw $r1;

     label11:
        $stack15 := @caughtexception;

        $u1 = new org.apache.maven.plugin.MojoExecutionException;

        $stack17 = virtualinvoke $stack15.<javax.xml.parsers.ParserConfigurationException: java.lang.String getMessage()>();

        specialinvoke $u1.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String,java.lang.Exception)>($stack17, $stack15);

        $r2 = (java.lang.Throwable) $u1;

        throw $r2;

     label12:
        $stack12 := @caughtexception;

        $u2 = new org.apache.maven.plugin.MojoExecutionException;

        $stack14 = virtualinvoke $stack12.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        specialinvoke $u2.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String,java.lang.Exception)>($stack14, $stack12);

        $r3 = (java.lang.Throwable) $u2;

        throw $r3;

        catch java.lang.Throwable from label02 to label03 with label05;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.io.IOException from label01 to label04 with label10;
        catch java.io.IOException from label05 to label10 with label10;
        catch javax.xml.parsers.ParserConfigurationException from label01 to label04 with label11;
        catch javax.xml.parsers.ParserConfigurationException from label05 to label10 with label11;
        catch org.xml.sax.SAXException from label01 to label04 with label12;
        catch org.xml.sax.SAXException from label05 to label10 with label12;
    }

    public void execute() throws org.apache.maven.plugin.MojoExecutionException
    {
        HelpMojo this;
        int $stack12, $stack13, $stack37, $stack39, $stack61;
        org.w3c.dom.Document doc;
        org.w3c.dom.Node plugin, mojos1, mojo;
        java.lang.String name, version, $stack20, $stack23, id, goalPrefix, $stack41, $stack47, $stack60, $stack88, $stack30, $stack34, $stack51;
        java.lang.StringBuilder $stack21, $stack22, $stack24, $stack25, $stack26, $stack36, $stack38, $stack40, $stack85, $stack86, $stack87, $u0, $u1, $u2, $u3;
        boolean $stack28, $stack29, $stack45, $stack82, $stack43;
        java.util.List mojos;
        java.util.Iterator l10;
        org.apache.maven.plugin.logging.Log $stack44, $stack46, $stack89, $stack105;
        java.lang.Object $stack48;
        org.w3c.dom.Element $stack49;
        sortpom.HelpMojo $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        this := @this: HelpMojo;

        $r0 = (sortpom.HelpMojo) this;

        $stack12 = $r0.<sortpom.HelpMojo: int lineLength>;

        if $stack12 > 0 goto label01;

        $r1 = (sortpom.HelpMojo) this;

        $stack105 = virtualinvoke $r1.<sortpom.HelpMojo: org.apache.maven.plugin.logging.Log getLog()>();

        interfaceinvoke $stack105.<org.apache.maven.plugin.logging.Log: void warn(java.lang.CharSequence)>("The parameter \'lineLength\' should be positive, using \'80\' as default.");

        $r2 = (sortpom.HelpMojo) this;

        $r2.<sortpom.HelpMojo: int lineLength> = 80;

     label01:
        $r3 = (sortpom.HelpMojo) this;

        $stack13 = $r3.<sortpom.HelpMojo: int indentSize>;

        if $stack13 > 0 goto label02;

        $r4 = (sortpom.HelpMojo) this;

        $stack89 = virtualinvoke $r4.<sortpom.HelpMojo: org.apache.maven.plugin.logging.Log getLog()>();

        interfaceinvoke $stack89.<org.apache.maven.plugin.logging.Log: void warn(java.lang.CharSequence)>("The parameter \'indentSize\' should be positive, using \'2\' as default.");

        $r5 = (sortpom.HelpMojo) this;

        $r5.<sortpom.HelpMojo: int indentSize> = 2;

     label02:
        $r6 = (sortpom.HelpMojo) this;

        doc = specialinvoke $r6.<sortpom.HelpMojo: org.w3c.dom.Document build()>();

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        plugin = staticinvoke <sortpom.HelpMojo: org.w3c.dom.Node getSingleChild(org.w3c.dom.Node,java.lang.String)>(doc, "plugin");

        name = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(plugin, "name");

        version = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(plugin, "version");

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack20 = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(plugin, "groupId");

        $stack21 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack23 = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(plugin, "artifactId");

        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        id = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack28 = staticinvoke <sortpom.HelpMojo: boolean isNotEmpty(java.lang.String)>(name);

        if $stack28 == 0 goto label03;

        $stack82 = virtualinvoke name.<java.lang.String: boolean contains(java.lang.CharSequence)>(id);

        if $stack82 != 0 goto label03;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack85 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(name);

        $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(version);

        $stack88 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = (sortpom.HelpMojo) this;

        specialinvoke $r7.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>($u0, $stack88, 0);

        goto label05;

     label03:
        $stack29 = staticinvoke <sortpom.HelpMojo: boolean isNotEmpty(java.lang.String)>(name);

        if $stack29 == 0 goto label04;

        $r8 = (sortpom.HelpMojo) this;

        specialinvoke $r8.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>($u0, name, 0);

        goto label05;

     label04:
        $r9 = (sortpom.HelpMojo) this;

        specialinvoke $r9.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>($u0, id, 0);

     label05:
        $stack30 = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(plugin, "description");

        $r10 = (sortpom.HelpMojo) this;

        specialinvoke $r10.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>($u0, $stack30, 1);

        $r11 = (sortpom.HelpMojo) this;

        specialinvoke $r11.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>($u0, "", 0);

        goalPrefix = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(plugin, "goalPrefix");

        mojos1 = staticinvoke <sortpom.HelpMojo: org.w3c.dom.Node getSingleChild(org.w3c.dom.Node,java.lang.String)>(plugin, "mojos");

        mojos = staticinvoke <sortpom.HelpMojo: java.util.List findNamedChild(org.w3c.dom.Node,java.lang.String)>(mojos1, "mojo");

        $r12 = (sortpom.HelpMojo) this;

        $stack34 = $r12.<sortpom.HelpMojo: java.lang.String goal>;

        if $stack34 == null goto label06;

        $r13 = (sortpom.HelpMojo) this;

        $stack60 = $r13.<sortpom.HelpMojo: java.lang.String goal>;

        $stack61 = virtualinvoke $stack60.<java.lang.String: int length()>();

        if $stack61 > 0 goto label09;

     label06:
        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack36 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This plugin has ");

        $stack37 = interfaceinvoke mojos.<java.util.List: int size()>();

        $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack37);

        $stack39 = interfaceinvoke mojos.<java.util.List: int size()>();

        if $stack39 <= 1 goto label07;

        $stack51 = " goals:";

        goto label08;

     label07:
        $stack51 = " goal:";

     label08:
        $stack40 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack51);

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = (sortpom.HelpMojo) this;

        specialinvoke $r14.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>($u0, $stack41, 0);

        $r15 = (sortpom.HelpMojo) this;

        specialinvoke $r15.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>($u0, "", 0);

     label09:
        l10 = interfaceinvoke mojos.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $stack43 = interfaceinvoke l10.<java.util.Iterator: boolean hasNext()>();

        if $stack43 == 0 goto label11;

        $stack48 = interfaceinvoke l10.<java.util.Iterator: java.lang.Object next()>();

        mojo = (org.w3c.dom.Node) $stack48;

        $stack49 = (org.w3c.dom.Element) mojo;

        $r16 = (sortpom.HelpMojo) this;

        specialinvoke $r16.<sortpom.HelpMojo: void writeGoal(java.lang.StringBuilder,java.lang.String,org.w3c.dom.Element)>($u0, goalPrefix, $stack49);

        goto label10;

     label11:
        $r17 = (sortpom.HelpMojo) this;

        $stack44 = virtualinvoke $r17.<sortpom.HelpMojo: org.apache.maven.plugin.logging.Log getLog()>();

        $stack45 = interfaceinvoke $stack44.<org.apache.maven.plugin.logging.Log: boolean isInfoEnabled()>();

        if $stack45 == 0 goto label12;

        $r18 = (sortpom.HelpMojo) this;

        $stack46 = virtualinvoke $r18.<sortpom.HelpMojo: org.apache.maven.plugin.logging.Log getLog()>();

        $stack47 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack46.<org.apache.maven.plugin.logging.Log: void info(java.lang.CharSequence)>($stack47);

     label12:
        return;
    }

    private static boolean isNotEmpty(java.lang.String)
    {
        java.lang.String string;
        int $stack1;
        boolean $stack2;

        string := @parameter0: java.lang.String;

        if string == null goto label1;

        $stack1 = virtualinvoke string.<java.lang.String: int length()>();

        if $stack1 <= 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    private static java.lang.String getValue(org.w3c.dom.Node, java.lang.String) throws org.apache.maven.plugin.MojoExecutionException
    {
        org.w3c.dom.Node node, $stack2;
        java.lang.String elementName, $stack3;

        node := @parameter0: org.w3c.dom.Node;

        elementName := @parameter1: java.lang.String;

        $stack2 = staticinvoke <sortpom.HelpMojo: org.w3c.dom.Node getSingleChild(org.w3c.dom.Node,java.lang.String)>(node, elementName);

        $stack3 = interfaceinvoke $stack2.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        return $stack3;
    }

    private static org.w3c.dom.Node getSingleChild(org.w3c.dom.Node, java.lang.String) throws org.apache.maven.plugin.MojoExecutionException
    {
        org.w3c.dom.Node node, $stack7;
        java.lang.String elementName, $stack13, $stack19;
        java.util.List namedChild;
        boolean $stack4;
        int $stack5;
        java.lang.Object $stack6;
        java.lang.StringBuilder $stack10, $stack11, $stack12, $stack16, $stack17, $stack18, $u0, $u2;
        org.apache.maven.plugin.MojoExecutionException $u1, $u3;
        java.lang.Throwable $r0, $r1;

        node := @parameter0: org.w3c.dom.Node;

        elementName := @parameter1: java.lang.String;

        namedChild = staticinvoke <sortpom.HelpMojo: java.util.List findNamedChild(org.w3c.dom.Node,java.lang.String)>(node, elementName);

        $stack4 = interfaceinvoke namedChild.<java.util.List: boolean isEmpty()>();

        if $stack4 == 0 goto label1;

        $u1 = new org.apache.maven.plugin.MojoExecutionException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find ");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(elementName);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in plugin-help.xml");

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String)>($stack19);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        $stack5 = interfaceinvoke namedChild.<java.util.List: int size()>();

        if $stack5 <= 1 goto label2;

        $u3 = new org.apache.maven.plugin.MojoExecutionException;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple ");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(elementName);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in plugin-help.xml");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u3.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String)>($stack13);

        $r1 = (java.lang.Throwable) $u3;

        throw $r1;

     label2:
        $stack6 = interfaceinvoke namedChild.<java.util.List: java.lang.Object get(int)>(0);

        $stack7 = (org.w3c.dom.Node) $stack6;

        return $stack7;
    }

    private static java.util.List findNamedChild(org.w3c.dom.Node, java.lang.String)
    {
        java.util.ArrayList $stack6;
        org.w3c.dom.Node node, item;
        org.w3c.dom.NodeList childNodes;
        int $stack8, i;
        java.lang.String elementName, $stack10;
        boolean $stack11;

        node := @parameter0: org.w3c.dom.Node;

        elementName := @parameter1: java.lang.String;

        $stack6 = new java.util.ArrayList;

        specialinvoke $stack6.<java.util.ArrayList: void <init>()>();

        childNodes = interfaceinvoke node.<org.w3c.dom.Node: org.w3c.dom.NodeList getChildNodes()>();

        i = 0;

     label1:
        $stack8 = interfaceinvoke childNodes.<org.w3c.dom.NodeList: int getLength()>();

        if i >= $stack8 goto label3;

        item = interfaceinvoke childNodes.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i);

        $stack10 = interfaceinvoke item.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $stack11 = virtualinvoke elementName.<java.lang.String: boolean equals(java.lang.Object)>($stack10);

        if $stack11 == 0 goto label2;

        interfaceinvoke $stack6.<java.util.List: boolean add(java.lang.Object)>(item);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return $stack6;
    }

    private static org.w3c.dom.Node findSingleChild(org.w3c.dom.Node, java.lang.String) throws org.apache.maven.plugin.MojoExecutionException
    {
        org.w3c.dom.Node node, $stack7;
        java.lang.String elementName, $stack13;
        java.util.List elementsByTagName;
        boolean $stack4;
        int $stack5;
        java.lang.Object $stack6;
        java.lang.StringBuilder $stack10, $stack11, $stack12, $u0;
        org.apache.maven.plugin.MojoExecutionException $u1;
        java.lang.Throwable $r0;

        node := @parameter0: org.w3c.dom.Node;

        elementName := @parameter1: java.lang.String;

        elementsByTagName = staticinvoke <sortpom.HelpMojo: java.util.List findNamedChild(org.w3c.dom.Node,java.lang.String)>(node, elementName);

        $stack4 = interfaceinvoke elementsByTagName.<java.util.List: boolean isEmpty()>();

        if $stack4 == 0 goto label1;

        return null;

     label1:
        $stack5 = interfaceinvoke elementsByTagName.<java.util.List: int size()>();

        if $stack5 <= 1 goto label2;

        $u1 = new org.apache.maven.plugin.MojoExecutionException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple ");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(elementName);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("in plugin-help.xml");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String)>($stack13);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        $stack6 = interfaceinvoke elementsByTagName.<java.util.List: java.lang.Object get(int)>(0);

        $stack7 = (org.w3c.dom.Node) $stack6;

        return $stack7;
    }

    private void writeGoal(java.lang.StringBuilder, java.lang.String, org.w3c.dom.Element) throws org.apache.maven.plugin.MojoExecutionException
    {
        org.w3c.dom.Element mojo;
        java.lang.String mojoGoal, $stack15, goalPrefix, $stack29, $stack35, $stack40, $stack42, $stack44, $stack45, $stack56, $stack20;
        org.w3c.dom.Node configurationElement, description, deprecated, parametersNode, parameter;
        HelpMojo this;
        java.lang.StringBuilder sb, $stack39, $stack41, $stack17, $stack18, $stack19, $u0, $u1;
        java.util.List parameters;
        java.util.Iterator l10;
        boolean $stack26, $stack36, $stack43, $stack57, $stack22;
        java.lang.Object $stack27;
        int $stack46;
        sortpom.HelpMojo $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: HelpMojo;

        sb := @parameter0: java.lang.StringBuilder;

        goalPrefix := @parameter1: java.lang.String;

        mojo := @parameter2: org.w3c.dom.Element;

        mojoGoal = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(mojo, "goal");

        configurationElement = staticinvoke <sortpom.HelpMojo: org.w3c.dom.Node findSingleChild(org.w3c.dom.Node,java.lang.String)>(mojo, "configuration");

        description = staticinvoke <sortpom.HelpMojo: org.w3c.dom.Node findSingleChild(org.w3c.dom.Node,java.lang.String)>(mojo, "description");

        $r0 = (sortpom.HelpMojo) this;

        $stack15 = $r0.<sortpom.HelpMojo: java.lang.String goal>;

        if $stack15 == null goto label1;

        $r1 = (sortpom.HelpMojo) this;

        $stack45 = $r1.<sortpom.HelpMojo: java.lang.String goal>;

        $stack46 = virtualinvoke $stack45.<java.lang.String: int length()>();

        if $stack46 <= 0 goto label1;

        $r2 = (sortpom.HelpMojo) this;

        $stack56 = $r2.<sortpom.HelpMojo: java.lang.String goal>;

        $stack57 = virtualinvoke mojoGoal.<java.lang.String: boolean equals(java.lang.Object)>($stack56);

        if $stack57 == 0 goto label5;

     label1:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(goalPrefix);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mojoGoal);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r3 = (sortpom.HelpMojo) this;

        specialinvoke $r3.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, $stack20, 0);

        deprecated = staticinvoke <sortpom.HelpMojo: org.w3c.dom.Node findSingleChild(org.w3c.dom.Node,java.lang.String)>(mojo, "deprecated");

        if deprecated == null goto label2;

        $stack35 = interfaceinvoke deprecated.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        $stack36 = staticinvoke <sortpom.HelpMojo: boolean isNotEmpty(java.lang.String)>($stack35);

        if $stack36 == 0 goto label2;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack39 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deprecated. ");

        $stack40 = interfaceinvoke deprecated.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack40);

        $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = (sortpom.HelpMojo) this;

        specialinvoke $r4.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, $stack42, 1);

        $r5 = (sortpom.HelpMojo) this;

        $stack43 = $r5.<sortpom.HelpMojo: boolean detail>;

        if $stack43 == 0 goto label3;

        if description == null goto label3;

        $r6 = (sortpom.HelpMojo) this;

        specialinvoke $r6.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, "", 0);

        $stack44 = interfaceinvoke description.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        $r7 = (sortpom.HelpMojo) this;

        specialinvoke $r7.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, $stack44, 1);

        goto label3;

     label2:
        if description == null goto label3;

        $stack29 = interfaceinvoke description.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        $r8 = (sortpom.HelpMojo) this;

        specialinvoke $r8.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, $stack29, 1);

     label3:
        $r9 = (sortpom.HelpMojo) this;

        specialinvoke $r9.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, "", 0);

        $r10 = (sortpom.HelpMojo) this;

        $stack22 = $r10.<sortpom.HelpMojo: boolean detail>;

        if $stack22 == 0 goto label5;

        parametersNode = staticinvoke <sortpom.HelpMojo: org.w3c.dom.Node getSingleChild(org.w3c.dom.Node,java.lang.String)>(mojo, "parameters");

        parameters = staticinvoke <sortpom.HelpMojo: java.util.List findNamedChild(org.w3c.dom.Node,java.lang.String)>(parametersNode, "parameter");

        $r11 = (sortpom.HelpMojo) this;

        specialinvoke $r11.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, "Available parameters:", 1);

        $r12 = (sortpom.HelpMojo) this;

        specialinvoke $r12.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, "", 0);

        l10 = interfaceinvoke parameters.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack26 = interfaceinvoke l10.<java.util.Iterator: boolean hasNext()>();

        if $stack26 == 0 goto label5;

        $stack27 = interfaceinvoke l10.<java.util.Iterator: java.lang.Object next()>();

        parameter = (org.w3c.dom.Node) $stack27;

        $r13 = (sortpom.HelpMojo) this;

        specialinvoke $r13.<sortpom.HelpMojo: void writeParameter(java.lang.StringBuilder,org.w3c.dom.Node,org.w3c.dom.Node)>(sb, parameter, configurationElement);

        goto label4;

     label5:
        return;
    }

    private void writeParameter(java.lang.StringBuilder, org.w3c.dom.Node, org.w3c.dom.Node) throws org.apache.maven.plugin.MojoExecutionException
    {
        org.w3c.dom.Node parameter, configurationElement, deprecated, $stack61;
        java.lang.String parameterName, parameterDescription, $stack20, $stack26, property, $stack31, $stack33, $stack43, $stack45, $stack57, parameterDefaultValue, $stack15, $stack17, $stack18;
        HelpMojo this;
        java.lang.StringBuilder sb, $stack29, $stack30, $stack42, $stack44, $stack56, $stack58, $stack59, $stack13, $stack14, $u0, $u1, $u2, $u3;
        boolean $stack21, $stack34, $stack46, $stack19;
        org.w3c.dom.Element fieldConfigurationElement;
        sortpom.HelpMojo $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: HelpMojo;

        sb := @parameter0: java.lang.StringBuilder;

        parameter := @parameter1: org.w3c.dom.Node;

        configurationElement := @parameter2: org.w3c.dom.Node;

        parameterName = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(parameter, "name");

        parameterDescription = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(parameter, "description");

        fieldConfigurationElement = null;

        if configurationElement == null goto label1;

        $stack61 = staticinvoke <sortpom.HelpMojo: org.w3c.dom.Node findSingleChild(org.w3c.dom.Node,java.lang.String)>(configurationElement, parameterName);

        fieldConfigurationElement = (org.w3c.dom.Element) $stack61;

     label1:
        parameterDefaultValue = "";

        if fieldConfigurationElement == null goto label2;

        $stack46 = interfaceinvoke fieldConfigurationElement.<org.w3c.dom.Element: boolean hasAttribute(java.lang.String)>("default-value");

        if $stack46 == 0 goto label2;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack56 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (Default: ");

        $stack57 = interfaceinvoke fieldConfigurationElement.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("default-value");

        $stack58 = virtualinvoke $stack56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57);

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        parameterDefaultValue = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parameterName);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(parameterDefaultValue);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = (sortpom.HelpMojo) this;

        specialinvoke $r0.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, $stack15, 2);

        deprecated = staticinvoke <sortpom.HelpMojo: org.w3c.dom.Node findSingleChild(org.w3c.dom.Node,java.lang.String)>(parameter, "deprecated");

        if deprecated == null goto label3;

        $stack33 = interfaceinvoke deprecated.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        $stack34 = staticinvoke <sortpom.HelpMojo: boolean isNotEmpty(java.lang.String)>($stack33);

        if $stack34 == 0 goto label3;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack42 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deprecated. ");

        $stack43 = interfaceinvoke deprecated.<org.w3c.dom.Node: java.lang.String getTextContent()>();

        $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43);

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = (sortpom.HelpMojo) this;

        specialinvoke $r1.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, $stack45, 3);

        $r2 = (sortpom.HelpMojo) this;

        specialinvoke $r2.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, "", 0);

     label3:
        $r3 = (sortpom.HelpMojo) this;

        specialinvoke $r3.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, parameterDescription, 3);

        $stack17 = "true";

        $stack18 = staticinvoke <sortpom.HelpMojo: java.lang.String getValue(org.w3c.dom.Node,java.lang.String)>(parameter, "required");

        $stack19 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>($stack18);

        if $stack19 == 0 goto label4;

        $r4 = (sortpom.HelpMojo) this;

        specialinvoke $r4.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, "Required: Yes", 3);

     label4:
        if fieldConfigurationElement == null goto label5;

        $stack20 = interfaceinvoke fieldConfigurationElement.<org.w3c.dom.Element: java.lang.String getTextContent()>();

        $stack21 = staticinvoke <sortpom.HelpMojo: boolean isNotEmpty(java.lang.String)>($stack20);

        if $stack21 == 0 goto label5;

        $stack26 = interfaceinvoke fieldConfigurationElement.<org.w3c.dom.Element: java.lang.String getTextContent()>();

        property = staticinvoke <sortpom.HelpMojo: java.lang.String getPropertyFromExpression(java.lang.String)>($stack26);

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack29 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("User property: ");

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(property);

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = (sortpom.HelpMojo) this;

        specialinvoke $r5.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, $stack31, 3);

     label5:
        $r6 = (sortpom.HelpMojo) this;

        specialinvoke $r6.<sortpom.HelpMojo: void append(java.lang.StringBuilder,java.lang.String,int)>(sb, "", 0);

        return;
    }

    private static java.lang.String repeat(java.lang.String, int)
    {
        java.lang.StringBuilder $stack4;
        int repeat, $stack5, $stack6, i;
        java.lang.String str, $stack7;

        str := @parameter0: java.lang.String;

        repeat := @parameter1: int;

        $stack4 = new java.lang.StringBuilder;

        $stack5 = virtualinvoke str.<java.lang.String: int length()>();

        $stack6 = repeat * $stack5;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>(int)>($stack6);

        i = 0;

     label1:
        if i >= repeat goto label2;

        virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(str);

        i = i + 1;

        goto label1;

     label2:
        $stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    private void append(java.lang.StringBuilder, java.lang.String, int)
    {
        java.lang.String description, line;
        int indent, $stack6, $stack7;
        HelpMojo this;
        java.util.List $stack8;
        java.util.Iterator l4;
        boolean $stack10;
        java.lang.Object $stack11;
        java.lang.StringBuilder sb, $stack12;
        sortpom.HelpMojo $r0, $r1;

        this := @this: HelpMojo;

        sb := @parameter0: java.lang.StringBuilder;

        description := @parameter1: java.lang.String;

        indent := @parameter2: int;

        $r0 = (sortpom.HelpMojo) this;

        $stack7 = $r0.<sortpom.HelpMojo: int indentSize>;

        $r1 = (sortpom.HelpMojo) this;

        $stack6 = $r1.<sortpom.HelpMojo: int lineLength>;

        $stack8 = staticinvoke <sortpom.HelpMojo: java.util.List toLines(java.lang.String,int,int,int)>(description, indent, $stack7, $stack6);

        l4 = interfaceinvoke $stack8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label2;

        $stack11 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        line = (java.lang.String) $stack11;

        $stack12 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(line);

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label1;

     label2:
        return;
    }

    private static java.util.List toLines(java.lang.String, int, int, int)
    {
        java.util.ArrayList $stack11;
        int indent, l8, indentSize, lineLength, l9;
        java.lang.String ind, text, plainLine, $stack17;
        java.lang.String[] plainLines;
        java.lang.StringBuilder $stack14, $stack15, $stack16;

        text := @parameter0: java.lang.String;

        indent := @parameter1: int;

        indentSize := @parameter2: int;

        lineLength := @parameter3: int;

        $stack11 = new java.util.ArrayList;

        specialinvoke $stack11.<java.util.ArrayList: void <init>()>();

        ind = staticinvoke <sortpom.HelpMojo: java.lang.String repeat(java.lang.String,int)>("\t", indent);

        plainLines = virtualinvoke text.<java.lang.String: java.lang.String[] split(java.lang.String)>("(\r\n)|(\r)|(\n)");

        l8 = lengthof plainLines;

        l9 = 0;

     label1:
        if l9 >= l8 goto label2;

        plainLine = plainLines[l9];

        $stack14 = new java.lang.StringBuilder;

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>();

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(ind);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(plainLine);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <sortpom.HelpMojo: void toLines(java.util.List,java.lang.String,int,int)>($stack11, $stack17, indentSize, lineLength);

        l9 = l9 + 1;

        goto label1;

     label2:
        return $stack11;
    }

    private static void toLines(java.util.List, java.lang.String, int, int)
    {
        java.lang.String line, $stack16, token, $stack31, $stack38, $stack41;
        int lineIndent, l8, $stack18, indentSize, $stack28, $stack29, $stack30, $stack33, $stack34, lineLength, $stack35, $stack40, l9, j, $stack19;
        java.lang.StringBuilder $stack14;
        java.lang.String[] tokens;
        java.util.List lines;
        char c;

        lines := @parameter0: java.util.List;

        line := @parameter1: java.lang.String;

        indentSize := @parameter2: int;

        lineLength := @parameter3: int;

        lineIndent = staticinvoke <sortpom.HelpMojo: int getIndentLevel(java.lang.String)>(line);

        $stack14 = new java.lang.StringBuilder;

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>(int)>(256);

        tokens = virtualinvoke line.<java.lang.String: java.lang.String[] split(java.lang.String)>(" +");

        l8 = lengthof tokens;

        l9 = 0;

     label1:
        if l9 >= l8 goto label9;

        token = tokens[l9];

        $stack18 = virtualinvoke $stack14.<java.lang.StringBuilder: int length()>();

        if $stack18 <= 0 goto label3;

        $stack33 = virtualinvoke $stack14.<java.lang.StringBuilder: int length()>();

        $stack34 = virtualinvoke token.<java.lang.String: int length()>();

        $stack35 = $stack33 + $stack34;

        if $stack35 < lineLength goto label2;

        $stack38 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke lines.<java.util.List: boolean add(java.lang.Object)>($stack38);

        virtualinvoke $stack14.<java.lang.StringBuilder: void setLength(int)>(0);

        $stack40 = lineIndent * indentSize;

        $stack41 = staticinvoke <sortpom.HelpMojo: java.lang.String repeat(java.lang.String,int)>(" ", $stack40);

        virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41);

        goto label3;

     label2:
        virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

     label3:
        j = 0;

     label4:
        $stack19 = virtualinvoke token.<java.lang.String: int length()>();

        if j >= $stack19 goto label8;

        c = virtualinvoke token.<java.lang.String: char charAt(int)>(j);

        if c != 9 goto label5;

        $stack28 = virtualinvoke $stack14.<java.lang.StringBuilder: int length()>();

        $stack29 = $stack28 % indentSize;

        $stack30 = indentSize - $stack29;

        $stack31 = staticinvoke <sortpom.HelpMojo: java.lang.String repeat(java.lang.String,int)>(" ", $stack30);

        virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31);

        goto label7;

     label5:
        if c != 160 goto label6;

        virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        goto label7;

     label6:
        virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c);

     label7:
        j = j + 1;

        goto label4;

     label8:
        l9 = l9 + 1;

        goto label1;

     label9:
        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke lines.<java.util.List: boolean add(java.lang.Object)>($stack16);

        return;
    }

    private static int getIndentLevel(java.lang.String)
    {
        java.lang.String line;
        int $stack3, $stack5, level, i, $stack4;
        char $stack7, $stack11;

        line := @parameter0: java.lang.String;

        level = 0;

        i = 0;

     label1:
        $stack3 = virtualinvoke line.<java.lang.String: int length()>();

        if i >= $stack3 goto label2;

        $stack11 = virtualinvoke line.<java.lang.String: char charAt(int)>(i);

        if $stack11 != 9 goto label2;

        level = level + 1;

        i = i + 1;

        goto label1;

     label2:
        i = level + 1;

     label3:
        $stack4 = level + 4;

        if i > $stack4 goto label5;

        $stack5 = virtualinvoke line.<java.lang.String: int length()>();

        if i >= $stack5 goto label5;

        $stack7 = virtualinvoke line.<java.lang.String: char charAt(int)>(i);

        if $stack7 != 9 goto label4;

        level = level + 1;

        goto label5;

     label4:
        i = i + 1;

        goto label3;

     label5:
        return level;
    }

    private static java.lang.String getPropertyFromExpression(java.lang.String)
    {
        java.lang.String expression, $stack4, $stack9;
        boolean $stack1, $stack3, $stack5;
        int $stack7, $stack8;

        expression := @parameter0: java.lang.String;

        if expression == null goto label1;

        $stack1 = virtualinvoke expression.<java.lang.String: boolean startsWith(java.lang.String)>("${");

        if $stack1 == 0 goto label1;

        $stack3 = virtualinvoke expression.<java.lang.String: boolean endsWith(java.lang.String)>("}");

        if $stack3 == 0 goto label1;

        $stack4 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(2);

        $stack5 = virtualinvoke $stack4.<java.lang.String: boolean contains(java.lang.CharSequence)>("${");

        if $stack5 != 0 goto label1;

        $stack7 = virtualinvoke expression.<java.lang.String: int length()>();

        $stack8 = $stack7 - 1;

        $stack9 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int,int)>(2, $stack8);

        return $stack9;

     label1:
        return null;
    }

    public static void <clinit>()
    {
        <HelpMojo: int DEFAULT_LINE_LENGTH> = 80;

        <HelpMojo: java.lang.String PLUGIN_HELP_PATH> = "/META-INF/maven/com.github.ekryd.sortpom/sortpom-maven-plugin/plugin-help.xml";

        return;
    }
}
