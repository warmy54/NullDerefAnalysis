class IgnoredSectionsStoreTest extends java.lang.Object
{
    private sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore;
    private java.util.ArrayList ignoredSections;

    void <init>()
    {
        IgnoredSectionsStoreTest this;

        this := @this: IgnoredSectionsStoreTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    void setUp()
    {
        IgnoredSectionsStoreTest this;
        sortpom.processinstruction.IgnoredSectionsStore $stack3, $u0;
        java.lang.Object $stack4;
        java.util.ArrayList $stack5;
        refutils.ReflectionHelper $u1;
        sortpom.processinstruction.IgnoredSectionsStoreTest $r0, $r1, $r2;

        this := @this: IgnoredSectionsStoreTest;

        $u0 = new sortpom.processinstruction.IgnoredSectionsStore;

        specialinvoke $u0.<sortpom.processinstruction.IgnoredSectionsStore: void <init>()>();

        $r0 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $r0.<sortpom.processinstruction.IgnoredSectionsStoreTest: sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore> = $u0;

        $u1 = new refutils.ReflectionHelper;

        $r1 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack3 = $r1.<sortpom.processinstruction.IgnoredSectionsStoreTest: sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore>;

        specialinvoke $u1.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack3);

        $stack4 = virtualinvoke $u1.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Ljava/util/ArrayList;");

        $stack5 = (java.util.ArrayList) $stack4;

        $r2 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $r2.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections> = $stack5;

        return;
    }

    void replaceNoSectionShouldReturnSameXml()
    {
        IgnoredSectionsStoreTest this;
        sortpom.processinstruction.IgnoredSectionsStore $stack3;
        java.lang.String replaced;
        org.hamcrest.Matcher $stack5, $stack10;
        java.util.ArrayList $stack6;
        int $stack7;
        java.lang.Integer $stack8, $stack9;
        sortpom.processinstruction.IgnoredSectionsStoreTest $r0, $r1;

        this := @this: IgnoredSectionsStoreTest;

        $r0 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack3 = $r0.<sortpom.processinstruction.IgnoredSectionsStoreTest: sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore>;

        replaced = virtualinvoke $stack3.<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <artifactId>sortpom</artifactId>\n  <description name=\"pelle\" id=\"id\" other=\"\u00f6vrigt\">H\u00e4r anv\u00e4nder vi \u00e5\u00e4\u00f6</description>\n  <groupId>sortpom</groupId>\n  <modelVersion>4.0.0</modelVersion>\n  <name>SortPom</name>\n  <!-- Egenskaper f\u00f6r projektet -->\n  <properties>\n    <compileSource>1.6</compileSource>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <reporting />\n  <version>1.0.0-SNAPSHOT</version>\n</project>");

        $stack5 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <artifactId>sortpom</artifactId>\n  <description name=\"pelle\" id=\"id\" other=\"\u00f6vrigt\">H\u00e4r anv\u00e4nder vi \u00e5\u00e4\u00f6</description>\n  <groupId>sortpom</groupId>\n  <modelVersion>4.0.0</modelVersion>\n  <name>SortPom</name>\n  <!-- Egenskaper f\u00f6r projektet -->\n  <properties>\n    <compileSource>1.6</compileSource>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <reporting />\n  <version>1.0.0-SNAPSHOT</version>\n</project>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(replaced, $stack5);

        $r1 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack6 = $r1.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        $stack7 = virtualinvoke $stack6.<java.util.ArrayList: int size()>();

        $stack8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack7);

        $stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $stack10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack9);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack8, $stack10);

        return;
    }

    void replaceOneSectionShouldCreateOneToken()
    {
        IgnoredSectionsStoreTest this;
        sortpom.processinstruction.IgnoredSectionsStore $stack3;
        java.lang.String replaced, $stack13;
        org.hamcrest.Matcher $stack5, $stack10, $stack14;
        java.util.ArrayList $stack6, $stack11;
        int $stack7;
        java.lang.Integer $stack8, $stack9;
        java.lang.Object $stack12;
        sortpom.processinstruction.IgnoredSectionsStoreTest $r0, $r1, $r2;

        this := @this: IgnoredSectionsStoreTest;

        $r0 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack3 = $r0.<sortpom.processinstruction.IgnoredSectionsStoreTest: sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore>;

        replaced = virtualinvoke $stack3.<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>("abc<?sortpom ignore?>def<?sortpom resume?>cba");

        $stack5 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("abc<?sortpom token=\'0\'?>cba");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(replaced, $stack5);

        $r1 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack6 = $r1.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        $stack7 = virtualinvoke $stack6.<java.util.ArrayList: int size()>();

        $stack8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack7);

        $stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $stack10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack9);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack8, $stack10);

        $r2 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack11 = $r2.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        $stack12 = virtualinvoke $stack11.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $stack13 = (java.lang.String) $stack12;

        $stack14 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("<?sortpom ignore?>def<?sortpom resume?>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack13, $stack14);

        return;
    }

    void replaceMultipleSectionShouldCreateManyTokens()
    {
        IgnoredSectionsStoreTest this;
        sortpom.processinstruction.IgnoredSectionsStore $stack3;
        java.lang.String replaced, $stack13, $stack17;
        org.hamcrest.Matcher $stack5, $stack10, $stack14, $stack18;
        java.util.ArrayList $stack6, $stack11, $stack15;
        int $stack7;
        java.lang.Integer $stack8, $stack9;
        java.lang.Object $stack12, $stack16;
        sortpom.processinstruction.IgnoredSectionsStoreTest $r0, $r1, $r2, $r3;

        this := @this: IgnoredSectionsStoreTest;

        $r0 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack3 = $r0.<sortpom.processinstruction.IgnoredSectionsStoreTest: sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore>;

        replaced = virtualinvoke $stack3.<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>("abc<?sortpom ignore?>def1<?sortpom resume?>cbaabc<?SORTPOM Ignore?>def2<?sortPom reSUME?>cba");

        $stack5 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("abc<?sortpom token=\'0\'?>cbaabc<?sortpom token=\'1\'?>cba");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(replaced, $stack5);

        $r1 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack6 = $r1.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        $stack7 = virtualinvoke $stack6.<java.util.ArrayList: int size()>();

        $stack8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack7);

        $stack9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $stack10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack9);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack8, $stack10);

        $r2 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack11 = $r2.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        $stack12 = virtualinvoke $stack11.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $stack13 = (java.lang.String) $stack12;

        $stack14 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("<?sortpom ignore?>def1<?sortpom resume?>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack13, $stack14);

        $r3 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack15 = $r3.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        $stack16 = virtualinvoke $stack15.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $stack17 = (java.lang.String) $stack16;

        $stack18 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("<?SORTPOM Ignore?>def2<?sortPom reSUME?>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack17, $stack18);

        return;
    }

    void replaceMultipleLineXmlShouldCreateManyTokens()
    {
        IgnoredSectionsStoreTest this;
        sortpom.processinstruction.IgnoredSectionsStore $stack2;
        java.util.ArrayList $stack4, $stack9, $stack13;
        int $stack5;
        java.lang.Integer $stack6, $stack7;
        org.hamcrest.Matcher $stack8, $stack12, $stack16;
        java.lang.Object $stack10, $stack14;
        java.lang.String $stack11, $stack15;
        sortpom.processinstruction.IgnoredSectionsStoreTest $r0, $r1, $r2, $r3;

        this := @this: IgnoredSectionsStoreTest;

        $r0 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack2 = $r0.<sortpom.processinstruction.IgnoredSectionsStoreTest: sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore>;

        virtualinvoke $stack2.<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String replaceIgnoredSections(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n\n  <!-- Basics -->\n    <groupId>something</groupId>\n  <artifactId>maven-sortpom-sorter</artifactId>\n    <version>1.0</version>\n  <packaging>jar</packaging>\n  <name>SortPom Sorter</name>\n  <description>The sorting functionality</description>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.jdom</groupId>\n      <artifactId>jdom</artifactId>\n      <version>1.1.3</version>\n    </dependency>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n        <?sortpom ignore?>\n      <version>4.11</version><!--$NO-MVN-MAN-VER$ -->\n        <?sortpom resume?>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>commons-io</groupId>\n      <artifactId>commons-io</artifactId>\n        <?sortpom ignore?>\n      <version>2.1</version><!--$NO-MVN-MAN-VER$ -->\n        <?sortpom resume?>\n    </dependency>\n\n    <!-- Test dependencies -->\n    <dependency>\n      <groupId>com.google.code.reflection-utils</groupId>\n      <artifactId>reflection-utils</artifactId>\n      <version>0.0.1</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n</project>\n");

        $r1 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack4 = $r1.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        $stack5 = virtualinvoke $stack4.<java.util.ArrayList: int size()>();

        $stack6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack5);

        $stack7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        $stack8 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack7);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack6, $stack8);

        $r2 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack9 = $r2.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        $stack10 = virtualinvoke $stack9.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $stack11 = (java.lang.String) $stack10;

        $stack12 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("<?sortpom ignore?>\n      <version>4.11</version><!--$NO-MVN-MAN-VER$ -->\n        <?sortpom resume?>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack11, $stack12);

        $r3 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack13 = $r3.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        $stack14 = virtualinvoke $stack13.<java.util.ArrayList: java.lang.Object get(int)>(1);

        $stack15 = (java.lang.String) $stack14;

        $stack16 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("<?sortpom ignore?>\n      <version>2.1</version><!--$NO-MVN-MAN-VER$ -->\n        <?sortpom resume?>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack15, $stack16);

        return;
    }

    void revertTokensInOrderShouldWork()
    {
        IgnoredSectionsStoreTest this;
        java.util.ArrayList $stack3, $stack5;
        sortpom.processinstruction.IgnoredSectionsStore $stack7;
        java.lang.String replaced;
        org.hamcrest.Matcher $stack9;
        sortpom.processinstruction.IgnoredSectionsStoreTest $r0, $r1, $r2;

        this := @this: IgnoredSectionsStoreTest;

        $r0 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack3 = $r0.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        virtualinvoke $stack3.<java.util.ArrayList: boolean add(java.lang.Object)>("<?sortpom ignore?>def1<?sortpom resume?>");

        $r1 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack5 = $r1.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        virtualinvoke $stack5.<java.util.ArrayList: boolean add(java.lang.Object)>("<?SORTPOM Ignore?>def2<?sortPom reSUME?>");

        $r2 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack7 = $r2.<sortpom.processinstruction.IgnoredSectionsStoreTest: sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore>;

        replaced = virtualinvoke $stack7.<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>("abc<?sortpom token=\'0\'?>cbaabc<?sortpom token=\'1\'?>cba");

        $stack9 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("abc<?sortpom ignore?>def1<?sortpom resume?>cbaabc<?SORTPOM Ignore?>def2<?sortPom reSUME?>cba");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(replaced, $stack9);

        return;
    }

    void revertTokensInRearrangedOrderShouldPlaceTextInRightOrder()
    {
        IgnoredSectionsStoreTest this;
        java.util.ArrayList $stack3, $stack5;
        sortpom.processinstruction.IgnoredSectionsStore $stack7;
        java.lang.String replaced;
        org.hamcrest.Matcher $stack9;
        sortpom.processinstruction.IgnoredSectionsStoreTest $r0, $r1, $r2;

        this := @this: IgnoredSectionsStoreTest;

        $r0 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack3 = $r0.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        virtualinvoke $stack3.<java.util.ArrayList: boolean add(java.lang.Object)>("<?sortpom ignore?>def0<?sortpom resume?>");

        $r1 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack5 = $r1.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        virtualinvoke $stack5.<java.util.ArrayList: boolean add(java.lang.Object)>("<?SORTPOM Ignore?>def1<?sortPom reSUME?>");

        $r2 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack7 = $r2.<sortpom.processinstruction.IgnoredSectionsStoreTest: sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore>;

        replaced = virtualinvoke $stack7.<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>("abc<?sortpom token=\'1\'?>cbaabc<?sortpom token=\'0\'?>cba");

        $stack9 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("abc<?SORTPOM Ignore?>def1<?sortPom reSUME?>cbaabc<?sortpom ignore?>def0<?sortpom resume?>cba");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(replaced, $stack9);

        return;
    }

    void revertTokensInMultipleLinesShouldPlaceTextInRightOrder()
    {
        IgnoredSectionsStoreTest this;
        java.util.ArrayList $stack3, $stack5;
        sortpom.processinstruction.IgnoredSectionsStore $stack7;
        java.lang.String replaced;
        org.hamcrest.Matcher $stack9;
        sortpom.processinstruction.IgnoredSectionsStoreTest $r0, $r1, $r2;

        this := @this: IgnoredSectionsStoreTest;

        $r0 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack3 = $r0.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        virtualinvoke $stack3.<java.util.ArrayList: boolean add(java.lang.Object)>("<?sortpom ignore?>\n      <version>4.11</version><!--$NO-MVN-MAN-VER$ -->\n        <?sortpom resume?>");

        $r1 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack5 = $r1.<sortpom.processinstruction.IgnoredSectionsStoreTest: java.util.ArrayList ignoredSections>;

        virtualinvoke $stack5.<java.util.ArrayList: boolean add(java.lang.Object)>("<?sortpom ignore?>\n      <version>2.1</version><!--$NO-MVN-MAN-VER$ -->\n        <?sortpom resume?>");

        $r2 = (sortpom.processinstruction.IgnoredSectionsStoreTest) this;

        $stack7 = $r2.<sortpom.processinstruction.IgnoredSectionsStoreTest: sortpom.processinstruction.IgnoredSectionsStore ignoredSectionsStore>;

        replaced = virtualinvoke $stack7.<sortpom.processinstruction.IgnoredSectionsStore: java.lang.String revertIgnoredSections(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n\n  <!-- Basics -->\n  <groupId>something</groupId>\n  <artifactId>maven-sortpom-sorter</artifactId>\n  <version>1.0</version>\n  <packaging>jar</packaging>\n\n  <dependencies>\n    <dependency>\n      <groupId>commons-io</groupId>\n      <artifactId>commons-io</artifactId>\n      <?sortpom token=\'1\'?>\n    </dependency>\n    <dependency>\n      <groupId>org.jdom</groupId>\n      <artifactId>jdom</artifactId>\n      <version>1.1.3</version>\n    </dependency>\n\n    <!-- Test dependencies -->\n    <dependency>\n      <groupId>com.google.code.reflection-utils</groupId>\n      <artifactId>reflection-utils</artifactId>\n      <version>0.0.1</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <?sortpom token=\'0\'?>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  <name>SortPom Sorter</name>\n  <description>The sorting functionality</description>\n\n</project>\n");

        $stack9 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n\n  <!-- Basics -->\n  <groupId>something</groupId>\n  <artifactId>maven-sortpom-sorter</artifactId>\n  <version>1.0</version>\n  <packaging>jar</packaging>\n\n  <dependencies>\n    <dependency>\n      <groupId>commons-io</groupId>\n      <artifactId>commons-io</artifactId>\n      <?sortpom ignore?>\n      <version>2.1</version><!--$NO-MVN-MAN-VER$ -->\n        <?sortpom resume?>\n    </dependency>\n    <dependency>\n      <groupId>org.jdom</groupId>\n      <artifactId>jdom</artifactId>\n      <version>1.1.3</version>\n    </dependency>\n\n    <!-- Test dependencies -->\n    <dependency>\n      <groupId>com.google.code.reflection-utils</groupId>\n      <artifactId>reflection-utils</artifactId>\n      <version>0.0.1</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <?sortpom ignore?>\n      <version>4.11</version><!--$NO-MVN-MAN-VER$ -->\n        <?sortpom resume?>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  <name>SortPom Sorter</name>\n  <description>The sorting functionality</description>\n\n</project>\n");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(replaced, $stack9);

        return;
    }
}
