public class ImageAligner$Settings extends org.bytedeco.javacv.BaseChildSettings implements java.lang.Cloneable
{
    int pyramidLevelMin;
    int pyramidLevelMax;
    double[] thresholdsZero;
    double[] thresholdsOutlier;
    boolean thresholdsMulRMSE;

    public void <init>()
    {
        ImageAligner$Settings this;
        double[] $stack1, $stack2;
        org.bytedeco.javacv.ImageAligner$Settings $r0, $r1, $r2, $r3, $r4;

        this := @this: ImageAligner$Settings;

        specialinvoke this.<org.bytedeco.javacv.BaseChildSettings: void <init>()>();

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMin> = 0;

        $r1 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r1.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMax> = 4;

        $stack1 = newarray (double)[5];

        $stack1[0] = 0.04;

        $stack1[1] = 0.03;

        $stack1[2] = 0.02;

        $stack1[3] = 0.01;

        $stack1[4] = 0.0;

        $r2 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r2.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsZero> = $stack1;

        $stack2 = newarray (double)[1];

        $stack2[0] = 0.2;

        $r3 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r3.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsOutlier> = $stack2;

        $r4 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r4.<org.bytedeco.javacv.ImageAligner$Settings: boolean thresholdsMulRMSE> = 0;

        return;
    }

    public void <init>(org.bytedeco.javacv.ImageAligner$Settings)
    {
        ImageAligner$Settings this;
        double[] $stack2, $stack3, $stack6, $stack7;
        org.bytedeco.javacv.ImageAligner$Settings s, $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        int $stack4, $stack5;
        boolean $stack8;

        this := @this: ImageAligner$Settings;

        s := @parameter0: org.bytedeco.javacv.ImageAligner$Settings;

        specialinvoke this.<org.bytedeco.javacv.BaseChildSettings: void <init>()>();

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMin> = 0;

        $r1 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r1.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMax> = 4;

        $stack2 = newarray (double)[5];

        $stack2[0] = 0.04;

        $stack2[1] = 0.03;

        $stack2[2] = 0.02;

        $stack2[3] = 0.01;

        $stack2[4] = 0.0;

        $r2 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r2.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsZero> = $stack2;

        $stack3 = newarray (double)[1];

        $stack3[0] = 0.2;

        $r3 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r3.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsOutlier> = $stack3;

        $r4 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r4.<org.bytedeco.javacv.ImageAligner$Settings: boolean thresholdsMulRMSE> = 0;

        $stack4 = s.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMin>;

        $r5 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r5.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMin> = $stack4;

        $stack5 = s.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMax>;

        $r6 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r6.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMax> = $stack5;

        $stack6 = s.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsZero>;

        $r7 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r7.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsZero> = $stack6;

        $stack7 = s.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsOutlier>;

        $r8 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r8.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsOutlier> = $stack7;

        $stack8 = s.<org.bytedeco.javacv.ImageAligner$Settings: boolean thresholdsMulRMSE>;

        $r9 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r9.<org.bytedeco.javacv.ImageAligner$Settings: boolean thresholdsMulRMSE> = $stack8;

        return;
    }

    public int getPyramidLevelMin()
    {
        ImageAligner$Settings this;
        int $stack1;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMin>;

        return $stack1;
    }

    public void setPyramidLevelMin(int)
    {
        ImageAligner$Settings this;
        int pyramidLevelMin;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        pyramidLevelMin := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMin> = pyramidLevelMin;

        return;
    }

    public int getPyramidLevelMax()
    {
        ImageAligner$Settings this;
        int $stack1;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMax>;

        return $stack1;
    }

    public void setPyramidLevelMax(int)
    {
        ImageAligner$Settings this;
        int pyramidLevelMax;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        pyramidLevelMax := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.ImageAligner$Settings: int pyramidLevelMax> = pyramidLevelMax;

        return;
    }

    public double[] getThresholdsZero()
    {
        ImageAligner$Settings this;
        double[] $stack1;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsZero>;

        return $stack1;
    }

    public void setThresholdsZero(double[])
    {
        ImageAligner$Settings this;
        double[] thresholdsZero;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        thresholdsZero := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsZero> = thresholdsZero;

        return;
    }

    public double[] getThresholdsOutlier()
    {
        ImageAligner$Settings this;
        double[] $stack1;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsOutlier>;

        return $stack1;
    }

    public void setThresholdsOutlier(double[])
    {
        ImageAligner$Settings this;
        double[] thresholdsOutlier;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        thresholdsOutlier := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.ImageAligner$Settings: double[] thresholdsOutlier> = thresholdsOutlier;

        return;
    }

    public boolean isThresholdsMulRMSE()
    {
        ImageAligner$Settings this;
        boolean $stack1;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ImageAligner$Settings: boolean thresholdsMulRMSE>;

        return $stack1;
    }

    public void setThresholdsMulRMSE(boolean)
    {
        ImageAligner$Settings this;
        boolean thresholdsMulRMSE;
        org.bytedeco.javacv.ImageAligner$Settings $r0;

        this := @this: ImageAligner$Settings;

        thresholdsMulRMSE := @parameter0: boolean;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $r0.<org.bytedeco.javacv.ImageAligner$Settings: boolean thresholdsMulRMSE> = thresholdsMulRMSE;

        return;
    }

    public org.bytedeco.javacv.ImageAligner$Settings clone()
    {
        ImageAligner$Settings this;
        org.bytedeco.javacv.ImageAligner$Settings $u0, $r0;

        this := @this: ImageAligner$Settings;

        $u0 = new org.bytedeco.javacv.ImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        specialinvoke $u0.<org.bytedeco.javacv.ImageAligner$Settings: void <init>(org.bytedeco.javacv.ImageAligner$Settings)>($r0);

        return $u0;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        ImageAligner$Settings this;
        org.bytedeco.javacv.ImageAligner$Settings $stack1, $r0;

        this := @this: ImageAligner$Settings;

        $r0 = (org.bytedeco.javacv.ImageAligner$Settings) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.ImageAligner$Settings: org.bytedeco.javacv.ImageAligner$Settings clone()>();

        return $stack1;
    }
}
