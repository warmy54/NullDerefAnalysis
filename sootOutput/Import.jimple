public class Import extends org.ooc.frontend.model.Node
{
    protected java.lang.String path;
    protected org.ooc.frontend.model.Module module;

    public void <init>(java.lang.String, org.ooc.frontend.model.tokens.Token)
    {
        Import this;
        org.ooc.frontend.model.tokens.Token defaultToken;
        java.lang.String path;
        org.ooc.frontend.model.Import $r0;

        this := @this: Import;

        path := @parameter0: java.lang.String;

        defaultToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Node: void <init>(org.ooc.frontend.model.tokens.Token)>(defaultToken);

        $r0 = (org.ooc.frontend.model.Import) this;

        $r0.<org.ooc.frontend.model.Import: java.lang.String path> = path;

        return;
    }

    public java.lang.String getFullName()
    {
        Import this;
        java.lang.String $stack1, $stack2;
        org.ooc.frontend.model.Import $r0;

        this := @this: Import;

        $r0 = (org.ooc.frontend.model.Import) this;

        $stack1 = $r0.<org.ooc.frontend.model.Import: java.lang.String path>;

        $stack2 = virtualinvoke $stack1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("/", ".");

        return $stack2;
    }

    public java.lang.String getPath()
    {
        Import this;
        java.lang.String $stack1;
        org.ooc.frontend.model.Import $r0;

        this := @this: Import;

        $r0 = (org.ooc.frontend.model.Import) this;

        $stack1 = $r0.<org.ooc.frontend.model.Import: java.lang.String path>;

        return $stack1;
    }

    public void setPath(java.lang.String)
    {
        Import this;
        java.lang.String path;
        org.ooc.frontend.model.Import $r0;

        this := @this: Import;

        path := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.Import) this;

        $r0.<org.ooc.frontend.model.Import: java.lang.String path> = path;

        return;
    }

    public org.ooc.frontend.model.Module getModule()
    {
        Import this;
        org.ooc.frontend.model.Module $stack1, $stack2, $stack7;
        java.lang.String $stack3, $stack5;
        java.util.Map $stack4;
        java.lang.Object $stack6;
        org.ooc.frontend.model.Import $r0, $r1, $r2;

        this := @this: Import;

        $r0 = (org.ooc.frontend.model.Import) this;

        $stack1 = $r0.<org.ooc.frontend.model.Import: org.ooc.frontend.model.Module module>;

        if $stack1 != null goto label1;

        $stack4 = <org.ooc.frontend.parser.ModuleParser: java.util.Map cache>;

        $r1 = (org.ooc.frontend.model.Import) this;

        $stack3 = $r1.<org.ooc.frontend.model.Import: java.lang.String path>;

        $stack5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.ooc");

        $stack6 = interfaceinvoke $stack4.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack5);

        $stack7 = (org.ooc.frontend.model.Module) $stack6;

        return $stack7;

     label1:
        $r2 = (org.ooc.frontend.model.Import) this;

        $stack2 = $r2.<org.ooc.frontend.model.Import: org.ooc.frontend.model.Module module>;

        return $stack2;
    }

    public void setModule(org.ooc.frontend.model.Module)
    {
        Import this;
        org.ooc.frontend.model.Module module;
        org.ooc.frontend.model.Import $r0;

        this := @this: Import;

        module := @parameter0: org.ooc.frontend.model.Module;

        $r0 = (org.ooc.frontend.model.Import) this;

        $r0.<org.ooc.frontend.model.Import: org.ooc.frontend.model.Module module> = module;

        return;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        Import this;
        org.ooc.frontend.model.Import $r0;

        this := @this: Import;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Import) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.Import)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        Import this;

        this := @this: Import;

        return 0;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        Import this;
        org.ooc.frontend.Visitor visitor;

        this := @this: Import;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        Import this;
        org.ooc.frontend.model.Node oldie, kiddo;

        this := @this: Import;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        return 0;
    }

    public java.lang.String toString()
    {
        Import this;
        java.lang.String $stack1, $stack2, $stack3;
        org.ooc.frontend.model.Import $r0;

        this := @this: Import;

        $stack1 = specialinvoke this.<org.ooc.frontend.model.Node: java.lang.String toString()>();

        $r0 = (org.ooc.frontend.model.Import) this;

        $stack2 = $r0.<org.ooc.frontend.model.Import: java.lang.String path>;

        $stack3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack1, $stack2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 : \u0001");

        return $stack3;
    }
}
