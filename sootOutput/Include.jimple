public class Include extends org.ooc.frontend.model.Node implements org.ooc.frontend.model.interfaces.Versioned
{
    protected java.lang.String include;
    protected org.ooc.frontend.model.Include$Mode mode;
    protected final java.util.List defines;
    private org.ooc.frontend.model.VersionBlock version;

    public void <init>(java.lang.String, org.ooc.frontend.model.Include$Mode, org.ooc.frontend.model.tokens.Token)
    {
        Include this;
        org.ooc.frontend.model.tokens.Token startToken;
        java.lang.String include;
        org.ooc.frontend.model.Include$Mode mode;
        java.util.ArrayList $u0;
        org.ooc.frontend.model.Include $r0, $r1, $r2;

        this := @this: Include;

        include := @parameter0: java.lang.String;

        mode := @parameter1: org.ooc.frontend.model.Include$Mode;

        startToken := @parameter2: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Node: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.Include) this;

        $r0.<org.ooc.frontend.model.Include: java.lang.String include> = include;

        $r1 = (org.ooc.frontend.model.Include) this;

        $r1.<org.ooc.frontend.model.Include: org.ooc.frontend.model.Include$Mode mode> = mode;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r2 = (org.ooc.frontend.model.Include) this;

        $r2.<org.ooc.frontend.model.Include: java.util.List defines> = $u0;

        return;
    }

    public org.ooc.frontend.model.Include$Mode getMode()
    {
        Include this;
        org.ooc.frontend.model.Include$Mode $stack1;
        org.ooc.frontend.model.Include $r0;

        this := @this: Include;

        $r0 = (org.ooc.frontend.model.Include) this;

        $stack1 = $r0.<org.ooc.frontend.model.Include: org.ooc.frontend.model.Include$Mode mode>;

        return $stack1;
    }

    public java.lang.String getPath()
    {
        Include this;
        java.lang.String $stack1;
        org.ooc.frontend.model.Include $r0;

        this := @this: Include;

        $r0 = (org.ooc.frontend.model.Include) this;

        $stack1 = $r0.<org.ooc.frontend.model.Include: java.lang.String include>;

        return $stack1;
    }

    public java.util.List getDefines()
    {
        Include this;
        java.util.List $stack1;
        org.ooc.frontend.model.Include $r0;

        this := @this: Include;

        $r0 = (org.ooc.frontend.model.Include) this;

        $stack1 = $r0.<org.ooc.frontend.model.Include: java.util.List defines>;

        return $stack1;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        Include this;
        org.ooc.frontend.model.Include $r0;

        this := @this: Include;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Include) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.Include)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        Include this;

        this := @this: Include;

        return 0;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        Include this;
        org.ooc.frontend.Visitor visitor;

        this := @this: Include;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        Include this;
        org.ooc.frontend.model.Node oldie, kiddo;

        this := @this: Include;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        return 0;
    }

    public java.lang.String toString()
    {
        Include this;
        java.lang.String $stack1, $stack2, $stack3;
        org.ooc.frontend.model.Include $r0;

        this := @this: Include;

        $stack1 = specialinvoke this.<org.ooc.frontend.model.Node: java.lang.String toString()>();

        $r0 = (org.ooc.frontend.model.Include) this;

        $stack2 = $r0.<org.ooc.frontend.model.Include: java.lang.String include>;

        $stack3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack1, $stack2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 : \u0001");

        return $stack3;
    }

    public void setVersion(org.ooc.frontend.model.VersionBlock)
    {
        Include this;
        org.ooc.frontend.model.VersionBlock version;
        org.ooc.frontend.model.Include $r0;

        this := @this: Include;

        version := @parameter0: org.ooc.frontend.model.VersionBlock;

        $r0 = (org.ooc.frontend.model.Include) this;

        $r0.<org.ooc.frontend.model.Include: org.ooc.frontend.model.VersionBlock version> = version;

        return;
    }

    public org.ooc.frontend.model.VersionBlock getVersion()
    {
        Include this;
        org.ooc.frontend.model.VersionBlock $stack1;
        org.ooc.frontend.model.Include $r0;

        this := @this: Include;

        $r0 = (org.ooc.frontend.model.Include) this;

        $stack1 = $r0.<org.ooc.frontend.model.Include: org.ooc.frontend.model.VersionBlock version>;

        return $stack1;
    }
}
