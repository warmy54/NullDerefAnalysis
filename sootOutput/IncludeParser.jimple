public class IncludeParser extends java.lang.Object
{

    public void <init>()
    {
        IncludeParser this;

        this := @this: IncludeParser;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean fill(org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader, org.ooc.frontend.model.NodeList) throws org.ubi.CompilationFailedError
    {
        org.ooc.frontend.model.tokens.TokenReader reader;
        java.lang.Object $stack7, $stack11;
        org.ooc.frontend.model.tokens.Token startToken, token;
        byte $stack8, $stack12, $stack13, $stack14;
        java.lang.StringBuilder $stack9;
        java.util.ArrayList $stack10;
        org.ubi.SourceReader sReader;
        java.lang.String $stack15, $stack21, $stack22;
        org.ooc.frontend.model.NodeList includes;

        sReader := @parameter0: org.ubi.SourceReader;

        reader := @parameter1: org.ooc.frontend.model.tokens.TokenReader;

        includes := @parameter2: org.ooc.frontend.model.NodeList;

        $stack7 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        startToken = (org.ooc.frontend.model.tokens.Token) $stack7;

        $stack8 = startToken.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack8 == 13 goto label1;

        return 0;

     label1:
        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack10 = new java.util.ArrayList;

        specialinvoke $stack10.<java.util.ArrayList: void <init>()>();

     label2:
        $stack11 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object read()>();

        token = (org.ooc.frontend.model.tokens.Token) $stack11;

        $stack12 = token.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack12 != 51 goto label3;

        $stack22 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.ooc.frontend.parser.IncludeParser: void addInclude(org.ooc.frontend.model.NodeList,java.lang.String,java.util.List,org.ooc.frontend.model.tokens.Token)>(includes, $stack22, $stack10, startToken);

        goto label7;

     label3:
        $stack13 = token.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack13 != 45 goto label4;

        $stack21 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.ooc.frontend.parser.IncludeParser: void addInclude(org.ooc.frontend.model.NodeList,java.lang.String,java.util.List,org.ooc.frontend.model.tokens.Token)>(includes, $stack21, $stack10, startToken);

        virtualinvoke $stack9.<java.lang.StringBuilder: void setLength(int)>(0);

        interfaceinvoke $stack10.<java.util.List: void clear()>();

        goto label6;

     label4:
        $stack14 = token.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack14 != 74 goto label5;

        staticinvoke <org.ooc.frontend.parser.IncludeParser: void readDefines(org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,java.util.List)>(sReader, reader, $stack10);

        goto label6;

     label5:
        $stack15 = virtualinvoke token.<org.ooc.frontend.model.tokens.Token: java.lang.String get(org.ubi.SourceReader)>(sReader);

        virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

     label6:
        goto label2;

     label7:
        return 1;
    }

    protected static void readDefines(org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader, java.util.List) throws org.ubi.CompilationFailedError
    {
        org.ooc.frontend.model.tokens.TokenReader reader;
        java.lang.Object $stack4, $stack8, $stack11, $stack15, $stack23, $stack28, $stack32, $stack41;
        org.ooc.frontend.model.tokens.Token $stack5, $stack9, $stack12, $stack16, $stack24, $stack29, $stack33, $stack42;
        byte $stack6, $stack13, $stack17, $stack25, $stack30, $stack43;
        org.ubi.SourceReader sReader;
        java.lang.String $stack10, $stack31, $stack34, $stack44;
        java.util.List defines;
        org.ubi.CompilationFailedError $u0, $u2;
        org.ooc.frontend.model.Include$Define $u1;
        java.lang.Throwable $r0, $r1;

        sReader := @parameter0: org.ubi.SourceReader;

        reader := @parameter1: org.ooc.frontend.model.tokens.TokenReader;

        defines := @parameter2: java.util.List;

        $stack4 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object read()>();

        $stack5 = (org.ooc.frontend.model.tokens.Token) $stack4;

        $stack6 = $stack5.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack6 == 82 goto label1;

        $u0 = new org.ubi.CompilationFailedError;

        $stack41 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object prev()>();

        $stack42 = (org.ooc.frontend.model.tokens.Token) $stack41;

        $stack43 = $stack42.<org.ooc.frontend.model.tokens.Token: byte type>;

        $stack44 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (byte)>($stack43) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Expected opening parenthesis to begin include defines, but got \u0001");

        specialinvoke $u0.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>(null, $stack44);

        $r0 = (java.lang.Throwable) $u0;

        throw $r0;

     label1:
        $u1 = new org.ooc.frontend.model.Include$Define;

        specialinvoke $u1.<org.ooc.frontend.model.Include$Define: void <init>()>();

        $stack8 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object read()>();

        $stack9 = (org.ooc.frontend.model.tokens.Token) $stack8;

        $stack10 = virtualinvoke $stack9.<org.ooc.frontend.model.tokens.Token: java.lang.String get(org.ubi.SourceReader)>(sReader);

        $u1.<org.ooc.frontend.model.Include$Define: java.lang.String name> = $stack10;

        $stack11 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack12 = (org.ooc.frontend.model.tokens.Token) $stack11;

        $stack13 = $stack12.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack13 != 68 goto label2;

        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        $stack32 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object read()>();

        $stack33 = (org.ooc.frontend.model.tokens.Token) $stack32;

        $stack34 = virtualinvoke $stack33.<org.ooc.frontend.model.tokens.Token: java.lang.String get(org.ubi.SourceReader)>(sReader);

        $u1.<org.ooc.frontend.model.Include$Define: java.lang.String value> = $stack34;

     label2:
        interfaceinvoke defines.<java.util.List: boolean add(java.lang.Object)>($u1);

        $stack15 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack16 = (org.ooc.frontend.model.tokens.Token) $stack15;

        $stack17 = $stack16.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack17 == 45 goto label3;

        goto label4;

     label3:
        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        goto label1;

     label4:
        $stack23 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object read()>();

        $stack24 = (org.ooc.frontend.model.tokens.Token) $stack23;

        $stack25 = $stack24.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack25 == 83 goto label5;

        $u2 = new org.ubi.CompilationFailedError;

        $stack28 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object prev()>();

        $stack29 = (org.ooc.frontend.model.tokens.Token) $stack28;

        $stack30 = $stack29.<org.ooc.frontend.model.tokens.Token: byte type>;

        $stack31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (byte)>($stack30) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Expected closing parenthesis to end include defines but got \u0001");

        specialinvoke $u2.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>(null, $stack31);

        $r1 = (java.lang.Throwable) $u2;

        throw $r1;

     label5:
        return;
    }

    protected static void addInclude(org.ooc.frontend.model.NodeList, java.lang.String, java.util.List, org.ooc.frontend.model.tokens.Token)
    {
        java.lang.String contentParam, content;
        boolean $stack7;
        org.ooc.frontend.model.tokens.Token startToken;
        java.util.List $stack9, defines;
        org.ooc.frontend.model.NodeList includes;
        org.ooc.frontend.model.Include$Mode mode;
        org.ooc.frontend.model.Include $u0;
        org.ooc.frontend.model.Node $r0;

        includes := @parameter0: org.ooc.frontend.model.NodeList;

        contentParam := @parameter1: java.lang.String;

        defines := @parameter2: java.util.List;

        startToken := @parameter3: org.ooc.frontend.model.tokens.Token;

        content = contentParam;

        mode = <org.ooc.frontend.model.Include$Mode: org.ooc.frontend.model.Include$Mode PATHY>;

        $stack7 = virtualinvoke contentParam.<java.lang.String: boolean startsWith(java.lang.String)>("./");

        if $stack7 == 0 goto label1;

        content = virtualinvoke contentParam.<java.lang.String: java.lang.String substring(int)>(2);

        mode = <org.ooc.frontend.model.Include$Mode: org.ooc.frontend.model.Include$Mode LOCAL>;

     label1:
        $u0 = new org.ooc.frontend.model.Include;

        specialinvoke $u0.<org.ooc.frontend.model.Include: void <init>(java.lang.String,org.ooc.frontend.model.Include$Mode,org.ooc.frontend.model.tokens.Token)>(content, mode, startToken);

        $stack9 = virtualinvoke $u0.<org.ooc.frontend.model.Include: java.util.List getDefines()>();

        interfaceinvoke $stack9.<java.util.List: boolean addAll(java.util.Collection)>(defines);

        $r0 = (org.ooc.frontend.model.Node) $u0;

        virtualinvoke includes.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r0);

        return;
    }
}
