public final class InputLocation extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable, org.apache.maven.model.InputLocationTracker
{
    private int lineNumber;
    private int columnNumber;
    private org.apache.maven.model.InputSource source;
    private java.util.Map locations;
    private org.apache.maven.model.InputLocation location;

    public void <init>(int, int)
    {
        InputLocation this;
        int lineNumber, columnNumber;
        org.apache.maven.model.InputLocation $r0, $r1, $r2, $r3;

        this := @this: InputLocation;

        lineNumber := @parameter0: int;

        columnNumber := @parameter1: int;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.model.InputLocation) this;

        $r0.<org.apache.maven.model.InputLocation: int lineNumber> = -1;

        $r1 = (org.apache.maven.model.InputLocation) this;

        $r1.<org.apache.maven.model.InputLocation: int columnNumber> = -1;

        $r2 = (org.apache.maven.model.InputLocation) this;

        $r2.<org.apache.maven.model.InputLocation: int lineNumber> = lineNumber;

        $r3 = (org.apache.maven.model.InputLocation) this;

        $r3.<org.apache.maven.model.InputLocation: int columnNumber> = columnNumber;

        return;
    }

    public void <init>(int, int, org.apache.maven.model.InputSource)
    {
        InputLocation this;
        int lineNumber, columnNumber;
        org.apache.maven.model.InputSource source;
        org.apache.maven.model.InputLocation $r0, $r1, $r2, $r3, $r4;

        this := @this: InputLocation;

        lineNumber := @parameter0: int;

        columnNumber := @parameter1: int;

        source := @parameter2: org.apache.maven.model.InputSource;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.model.InputLocation) this;

        $r0.<org.apache.maven.model.InputLocation: int lineNumber> = -1;

        $r1 = (org.apache.maven.model.InputLocation) this;

        $r1.<org.apache.maven.model.InputLocation: int columnNumber> = -1;

        $r2 = (org.apache.maven.model.InputLocation) this;

        $r2.<org.apache.maven.model.InputLocation: int lineNumber> = lineNumber;

        $r3 = (org.apache.maven.model.InputLocation) this;

        $r3.<org.apache.maven.model.InputLocation: int columnNumber> = columnNumber;

        $r4 = (org.apache.maven.model.InputLocation) this;

        $r4.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputSource source> = source;

        return;
    }

    public org.apache.maven.model.InputLocation clone()
    {
        InputLocation this;
        java.lang.Object $stack2;
        java.util.Map $stack3, $stack5;
        java.util.LinkedHashMap $stack4;
        java.lang.Exception $stack7;
        java.lang.UnsupportedOperationException $stack8;
        java.lang.StringBuilder $stack9, $stack12, $stack13;
        java.lang.Class $stack10;
        java.lang.String $stack11, $stack14;
        java.lang.Throwable $stack15;
        java.lang.RuntimeException $stack16;
        org.apache.maven.model.InputLocation copy;

        this := @this: InputLocation;

     label1:
        $stack2 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        copy = (org.apache.maven.model.InputLocation) $stack2;

        $stack3 = copy.<org.apache.maven.model.InputLocation: java.util.Map locations>;

        if $stack3 == null goto label2;

        $stack4 = new java.util.LinkedHashMap;

        $stack5 = copy.<org.apache.maven.model.InputLocation: java.util.Map locations>;

        specialinvoke $stack4.<java.util.LinkedHashMap: void <init>(java.util.Map)>($stack5);

        copy.<org.apache.maven.model.InputLocation: java.util.Map locations> = $stack4;

     label2:
        return copy;

     label3:
        $stack7 := @caughtexception;

        $stack8 = new java.lang.UnsupportedOperationException;

        $stack9 = new java.lang.StringBuilder;

        specialinvoke $stack9.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack11 = virtualinvoke $stack10.<java.lang.Class: java.lang.String getName()>();

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support clone()");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack14);

        $stack15 = virtualinvoke $stack8.<java.lang.UnsupportedOperationException: java.lang.Throwable initCause(java.lang.Throwable)>($stack7);

        $stack16 = (java.lang.RuntimeException) $stack15;

        throw $stack16;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public int getColumnNumber()
    {
        InputLocation this;
        int $stack1;
        org.apache.maven.model.InputLocation $r0;

        this := @this: InputLocation;

        $r0 = (org.apache.maven.model.InputLocation) this;

        $stack1 = $r0.<org.apache.maven.model.InputLocation: int columnNumber>;

        return $stack1;
    }

    public int getLineNumber()
    {
        InputLocation this;
        int $stack1;
        org.apache.maven.model.InputLocation $r0;

        this := @this: InputLocation;

        $r0 = (org.apache.maven.model.InputLocation) this;

        $stack1 = $r0.<org.apache.maven.model.InputLocation: int lineNumber>;

        return $stack1;
    }

    public org.apache.maven.model.InputLocation getLocation(java.lang.Object)
    {
        java.lang.Object key;
        boolean $stack4, $stack7;
        InputLocation this;
        org.apache.maven.model.InputLocation $stack5, $stack8, $stack9, $r0, $r1, $r2;
        java.lang.String l2;
        int $stack6;
        byte l3;

        this := @this: InputLocation;

        key := @parameter0: java.lang.Object;

        $stack4 = key instanceof java.lang.String;

        if $stack4 == 0 goto label5;

        l2 = (java.lang.String) key;

        l3 = -1;

        $stack6 = virtualinvoke l2.<java.lang.String: int hashCode()>();

        lookupswitch($stack6)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        $stack7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack7 == 0 goto label2;

        l3 = 0;

     label2:
        lookupswitch(l3)
        {
            case 0: goto label3;
            default: goto label4;
        };

     label3:
        $r0 = (org.apache.maven.model.InputLocation) this;

        $stack8 = $r0.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputLocation location>;

        return $stack8;

     label4:
        $r1 = (org.apache.maven.model.InputLocation) this;

        $stack9 = specialinvoke $r1.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputLocation getOtherLocation(java.lang.Object)>(key);

        return $stack9;

     label5:
        $r2 = (org.apache.maven.model.InputLocation) this;

        $stack5 = specialinvoke $r2.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputLocation getOtherLocation(java.lang.Object)>(key);

        return $stack5;
    }

    public java.util.Map getLocations()
    {
        InputLocation this;
        java.util.Map $stack1;
        org.apache.maven.model.InputLocation $r0;

        this := @this: InputLocation;

        $r0 = (org.apache.maven.model.InputLocation) this;

        $stack1 = $r0.<org.apache.maven.model.InputLocation: java.util.Map locations>;

        return $stack1;
    }

    public void setLocation(java.lang.Object, org.apache.maven.model.InputLocation)
    {
        java.lang.Object key;
        boolean $stack5, $stack7;
        InputLocation this;
        org.apache.maven.model.InputLocation location, $r0, $r1, $r2;
        java.lang.String l3;
        int $stack6;
        byte l4;

        this := @this: InputLocation;

        key := @parameter0: java.lang.Object;

        location := @parameter1: org.apache.maven.model.InputLocation;

        $stack5 = key instanceof java.lang.String;

        if $stack5 == 0 goto label5;

        l3 = (java.lang.String) key;

        l4 = -1;

        $stack6 = virtualinvoke l3.<java.lang.String: int hashCode()>();

        lookupswitch($stack6)
        {
            case 0: goto label1;
            default: goto label2;
        };

     label1:
        $stack7 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack7 == 0 goto label2;

        l4 = 0;

     label2:
        lookupswitch(l4)
        {
            case 0: goto label3;
            default: goto label4;
        };

     label3:
        $r0 = (org.apache.maven.model.InputLocation) this;

        $r0.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputLocation location> = location;

        return;

     label4:
        $r1 = (org.apache.maven.model.InputLocation) this;

        virtualinvoke $r1.<org.apache.maven.model.InputLocation: void setOtherLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(key, location);

        return;

     label5:
        $r2 = (org.apache.maven.model.InputLocation) this;

        virtualinvoke $r2.<org.apache.maven.model.InputLocation: void setOtherLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(key, location);

        return;
    }

    public void setOtherLocation(java.lang.Object, org.apache.maven.model.InputLocation)
    {
        org.apache.maven.model.InputLocation location, $r0, $r1, $r2;
        InputLocation this;
        java.util.Map $stack3, $stack4;
        java.lang.Object key;
        java.util.LinkedHashMap $u0;

        this := @this: InputLocation;

        key := @parameter0: java.lang.Object;

        location := @parameter1: org.apache.maven.model.InputLocation;

        if location == null goto label2;

        $r0 = (org.apache.maven.model.InputLocation) this;

        $stack3 = $r0.<org.apache.maven.model.InputLocation: java.util.Map locations>;

        if $stack3 != null goto label1;

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $r1 = (org.apache.maven.model.InputLocation) this;

        $r1.<org.apache.maven.model.InputLocation: java.util.Map locations> = $u0;

     label1:
        $r2 = (org.apache.maven.model.InputLocation) this;

        $stack4 = $r2.<org.apache.maven.model.InputLocation: java.util.Map locations>;

        interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, location);

     label2:
        return;
    }

    private org.apache.maven.model.InputLocation getOtherLocation(java.lang.Object)
    {
        InputLocation this;
        java.util.Map $stack2, $stack3;
        java.lang.Object key, $stack4;
        org.apache.maven.model.InputLocation $stack5, $r0, $r1;

        this := @this: InputLocation;

        key := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.model.InputLocation) this;

        $stack2 = $r0.<org.apache.maven.model.InputLocation: java.util.Map locations>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.model.InputLocation) this;

        $stack3 = $r1.<org.apache.maven.model.InputLocation: java.util.Map locations>;

        $stack4 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack5 = (org.apache.maven.model.InputLocation) $stack4;

        goto label2;

     label1:
        $stack5 = null;

     label2:
        return $stack5;
    }

    public org.apache.maven.model.InputSource getSource()
    {
        InputLocation this;
        org.apache.maven.model.InputSource $stack1;
        org.apache.maven.model.InputLocation $r0;

        this := @this: InputLocation;

        $r0 = (org.apache.maven.model.InputLocation) this;

        $stack1 = $r0.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputSource source>;

        return $stack1;
    }

    public static org.apache.maven.model.InputLocation merge(org.apache.maven.model.InputLocation, org.apache.maven.model.InputLocation, boolean)
    {
        org.apache.maven.model.InputLocation source, target, $stack7;
        int $stack8, $stack9;
        org.apache.maven.model.InputSource $stack10;
        java.util.Map sourceLocations, targetLocations, locations, $stack19, $stack14;
        java.util.LinkedHashMap $stack13;
        boolean sourceDominant;

        target := @parameter0: org.apache.maven.model.InputLocation;

        source := @parameter1: org.apache.maven.model.InputLocation;

        sourceDominant := @parameter2: boolean;

        if source != null goto label1;

        return target;

     label1:
        if target != null goto label2;

        return source;

     label2:
        $stack7 = new org.apache.maven.model.InputLocation;

        $stack8 = virtualinvoke target.<org.apache.maven.model.InputLocation: int getLineNumber()>();

        $stack9 = virtualinvoke target.<org.apache.maven.model.InputLocation: int getColumnNumber()>();

        $stack10 = virtualinvoke target.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputSource getSource()>();

        specialinvoke $stack7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack8, $stack9, $stack10);

        sourceLocations = virtualinvoke source.<org.apache.maven.model.InputLocation: java.util.Map getLocations()>();

        targetLocations = virtualinvoke target.<org.apache.maven.model.InputLocation: java.util.Map getLocations()>();

        if sourceLocations != null goto label3;

        locations = targetLocations;

        goto label9;

     label3:
        if targetLocations != null goto label4;

        locations = sourceLocations;

        goto label9;

     label4:
        $stack13 = new java.util.LinkedHashMap;

        specialinvoke $stack13.<java.util.LinkedHashMap: void <init>()>();

        locations = $stack13;

        if sourceDominant == 0 goto label5;

        $stack19 = targetLocations;

        goto label6;

     label5:
        $stack19 = sourceLocations;

     label6:
        interfaceinvoke $stack13.<java.util.Map: void putAll(java.util.Map)>($stack19);

        if sourceDominant == 0 goto label7;

        $stack14 = sourceLocations;

        goto label8;

     label7:
        $stack14 = targetLocations;

     label8:
        interfaceinvoke $stack13.<java.util.Map: void putAll(java.util.Map)>($stack14);

     label9:
        virtualinvoke $stack7.<org.apache.maven.model.InputLocation: void setLocations(java.util.Map)>(locations);

        return $stack7;
    }

    public static org.apache.maven.model.InputLocation merge(org.apache.maven.model.InputLocation, org.apache.maven.model.InputLocation, java.util.Collection)
    {
        org.apache.maven.model.InputLocation source, target, $stack10, location;
        int $stack11, $stack12, $stack20, $stack22, $stack26, $stack27;
        org.apache.maven.model.InputSource $stack13;
        java.util.Map sourceLocations, targetLocations, locations;
        java.util.LinkedHashMap $stack16;
        java.util.Collection indices;
        java.util.Iterator it;
        boolean $stack18;
        java.lang.Object $stack19, $stack21, $stack29;
        java.lang.Integer index, $stack23, $stack28;

        target := @parameter0: org.apache.maven.model.InputLocation;

        source := @parameter1: org.apache.maven.model.InputLocation;

        indices := @parameter2: java.util.Collection;

        if source != null goto label1;

        return target;

     label1:
        if target != null goto label2;

        return source;

     label2:
        $stack10 = new org.apache.maven.model.InputLocation;

        $stack11 = virtualinvoke target.<org.apache.maven.model.InputLocation: int getLineNumber()>();

        $stack12 = virtualinvoke target.<org.apache.maven.model.InputLocation: int getColumnNumber()>();

        $stack13 = virtualinvoke target.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputSource getSource()>();

        specialinvoke $stack10.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack11, $stack12, $stack13);

        sourceLocations = virtualinvoke source.<org.apache.maven.model.InputLocation: java.util.Map getLocations()>();

        targetLocations = virtualinvoke target.<org.apache.maven.model.InputLocation: java.util.Map getLocations()>();

        if sourceLocations != null goto label3;

        locations = targetLocations;

        goto label8;

     label3:
        if targetLocations != null goto label4;

        locations = sourceLocations;

        goto label8;

     label4:
        $stack16 = new java.util.LinkedHashMap;

        specialinvoke $stack16.<java.util.LinkedHashMap: void <init>()>();

        locations = $stack16;

        it = interfaceinvoke indices.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $stack18 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();

        if $stack18 == 0 goto label8;

        $stack19 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();

        index = (java.lang.Integer) $stack19;

        $stack20 = virtualinvoke index.<java.lang.Integer: int intValue()>();

        if $stack20 >= 0 goto label6;

        $stack26 = virtualinvoke index.<java.lang.Integer: int intValue()>();

        $stack27 = $stack26 ^ -1;

        $stack28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack27);

        $stack29 = interfaceinvoke sourceLocations.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack28);

        location = (org.apache.maven.model.InputLocation) $stack29;

        goto label7;

     label6:
        $stack21 = interfaceinvoke targetLocations.<java.util.Map: java.lang.Object get(java.lang.Object)>(index);

        location = (org.apache.maven.model.InputLocation) $stack21;

     label7:
        $stack22 = interfaceinvoke $stack16.<java.util.Map: int size()>();

        $stack23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack22);

        interfaceinvoke $stack16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack23, location);

        goto label5;

     label8:
        virtualinvoke $stack10.<org.apache.maven.model.InputLocation: void setLocations(java.util.Map)>(locations);

        return $stack10;
    }

    public void setLocations(java.util.Map)
    {
        InputLocation this;
        java.util.Map locations;
        org.apache.maven.model.InputLocation $r0;

        this := @this: InputLocation;

        locations := @parameter0: java.util.Map;

        $r0 = (org.apache.maven.model.InputLocation) this;

        $r0.<org.apache.maven.model.InputLocation: java.util.Map locations> = locations;

        return;
    }

    public java.lang.String toString()
    {
        InputLocation this;
        int $stack2, $stack5;
        java.lang.StringBuilder $stack3, $stack4, $stack6, $stack7, $stack9, $u0;
        org.apache.maven.model.InputSource $stack8;
        java.lang.String $stack10;
        org.apache.maven.model.InputLocation $r0, $r1, $r2;

        this := @this: InputLocation;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.apache.maven.model.InputLocation) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.InputLocation: int getLineNumber()>();

        $stack3 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack2);

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r1 = (org.apache.maven.model.InputLocation) this;

        $stack5 = virtualinvoke $r1.<org.apache.maven.model.InputLocation: int getColumnNumber()>();

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r2 = (org.apache.maven.model.InputLocation) this;

        $stack8 = virtualinvoke $r2.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputSource getSource()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        InputLocation this;
        org.apache.maven.model.InputLocation $stack1, $r0;

        this := @this: InputLocation;

        $r0 = (org.apache.maven.model.InputLocation) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputLocation clone()>();

        return $stack1;
    }
}
