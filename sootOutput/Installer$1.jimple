class Installer$1 extends java.nio.file.SimpleFileVisitor
{
    final java.nio.file.Path val$distDir;
    final org.apache.maven.wrapper.Installer this$0;

    void <init>(org.apache.maven.wrapper.Installer, java.nio.file.Path)
    {
        Installer$1 this;
        org.apache.maven.wrapper.Installer this$0;
        java.nio.file.Path l2;
        org.apache.maven.wrapper.Installer$1 $r0, $r1;

        this := @this: Installer$1;

        this$0 := @parameter0: org.apache.maven.wrapper.Installer;

        l2 := @parameter1: java.nio.file.Path;

        $r0 = (org.apache.maven.wrapper.Installer$1) this;

        $r0.<org.apache.maven.wrapper.Installer$1: org.apache.maven.wrapper.Installer this$0> = this$0;

        $r1 = (org.apache.maven.wrapper.Installer$1) this;

        $r1.<org.apache.maven.wrapper.Installer$1: java.nio.file.Path val$distDir> = l2;

        specialinvoke this.<java.nio.file.SimpleFileVisitor: void <init>()>();

        return;
    }

    public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path, java.io.IOException) throws java.io.IOException
    {
        java.nio.file.Path dir, $stack3, $stack4, $stack9, $stack10;
        Installer$1 this;
        boolean $stack5;
        java.nio.file.FileVisitResult $stack6;
        java.lang.StringBuilder $stack8, $stack11, $u0;
        java.lang.String $stack12;
        java.io.IOException exc;
        org.apache.maven.wrapper.Installer$1 $r0, $r1;

        this := @this: Installer$1;

        dir := @parameter0: java.nio.file.Path;

        exc := @parameter1: java.io.IOException;

        $stack3 = interfaceinvoke dir.<java.nio.file.Path: java.nio.file.Path getParent()>();

        $r0 = (org.apache.maven.wrapper.Installer$1) this;

        $stack4 = $r0.<org.apache.maven.wrapper.Installer$1: java.nio.file.Path val$distDir>;

        $stack5 = interfaceinvoke $stack3.<java.nio.file.Path: boolean equals(java.lang.Object)>($stack4);

        if $stack5 == 0 goto label1;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting directory ");

        $r1 = (org.apache.maven.wrapper.Installer$1) this;

        $stack9 = $r1.<org.apache.maven.wrapper.Installer$1: java.nio.file.Path val$distDir>;

        $stack10 = interfaceinvoke $stack9.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();

        $stack11 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.maven.wrapper.Logger: void info(java.lang.String)>($stack12);

        staticinvoke <java.nio.file.Files: void delete(java.nio.file.Path)>(dir);

     label1:
        $stack6 = <java.nio.file.FileVisitResult: java.nio.file.FileVisitResult CONTINUE>;

        return $stack6;
    }

    public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException
    {
        java.nio.file.Path file, $stack3, $stack4;
        Installer$1 this;
        boolean $stack5;
        java.nio.file.FileVisitResult $stack6;
        java.nio.file.attribute.BasicFileAttributes attrs;
        org.apache.maven.wrapper.Installer$1 $r0;

        this := @this: Installer$1;

        file := @parameter0: java.nio.file.Path;

        attrs := @parameter1: java.nio.file.attribute.BasicFileAttributes;

        $stack3 = interfaceinvoke file.<java.nio.file.Path: java.nio.file.Path getParent()>();

        $r0 = (org.apache.maven.wrapper.Installer$1) this;

        $stack4 = $r0.<org.apache.maven.wrapper.Installer$1: java.nio.file.Path val$distDir>;

        $stack5 = interfaceinvoke $stack3.<java.nio.file.Path: boolean equals(java.lang.Object)>($stack4);

        if $stack5 != 0 goto label1;

        staticinvoke <java.nio.file.Files: void delete(java.nio.file.Path)>(file);

     label1:
        $stack6 = <java.nio.file.FileVisitResult: java.nio.file.FileVisitResult CONTINUE>;

        return $stack6;
    }

    public volatile java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException
    {
        Installer$1 this;
        java.lang.Object l1;
        java.io.IOException l2;
        java.nio.file.Path $stack3;
        java.nio.file.FileVisitResult $stack4;
        org.apache.maven.wrapper.Installer$1 $r0;

        this := @this: Installer$1;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.io.IOException;

        $stack3 = (java.nio.file.Path) l1;

        $r0 = (org.apache.maven.wrapper.Installer$1) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.wrapper.Installer$1: java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path,java.io.IOException)>($stack3, l2);

        return $stack4;
    }

    public volatile java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException
    {
        Installer$1 this;
        java.lang.Object l1;
        java.nio.file.attribute.BasicFileAttributes l2;
        java.nio.file.Path $stack3;
        java.nio.file.FileVisitResult $stack4;
        org.apache.maven.wrapper.Installer$1 $r0;

        this := @this: Installer$1;

        l1 := @parameter0: java.lang.Object;

        l2 := @parameter1: java.nio.file.attribute.BasicFileAttributes;

        $stack3 = (java.nio.file.Path) l1;

        $r0 = (org.apache.maven.wrapper.Installer$1) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.wrapper.Installer$1: java.nio.file.FileVisitResult visitFile(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)>($stack3, l2);

        return $stack4;
    }
}
