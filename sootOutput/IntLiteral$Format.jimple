public final enum class IntLiteral$Format extends java.lang.Enum
{
    public static final enum org.ooc.frontend.model.IntLiteral$Format DEC;
    public static final enum org.ooc.frontend.model.IntLiteral$Format OCT;
    public static final enum org.ooc.frontend.model.IntLiteral$Format HEX;
    public static final enum org.ooc.frontend.model.IntLiteral$Format BIN;
    private static final org.ooc.frontend.model.IntLiteral$Format[] $VALUES;

    public static org.ooc.frontend.model.IntLiteral$Format[] values()
    {
        org.ooc.frontend.model.IntLiteral$Format[] $stack0, $stack2;
        java.lang.Object $stack1;

        $stack0 = <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format[] $VALUES>;

        $stack1 = virtualinvoke $stack0.<java.lang.Object: java.lang.Object clone()>();

        $stack2 = (org.ooc.frontend.model.IntLiteral$Format[]) $stack1;

        return $stack2;
    }

    public static org.ooc.frontend.model.IntLiteral$Format valueOf(java.lang.String)
    {
        java.lang.String name;
        java.lang.Enum $stack1;
        org.ooc.frontend.model.IntLiteral$Format $stack2;

        name := @parameter0: java.lang.String;

        $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/ooc/frontend/model/IntLiteral$Format;", name);

        $stack2 = (org.ooc.frontend.model.IntLiteral$Format) $stack1;

        return $stack2;
    }

    private void <init>(java.lang.String, int)
    {
        IntLiteral$Format this;
        java.lang.String l1;
        int l2;

        this := @this: IntLiteral$Format;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }

    static void <clinit>()
    {
        org.ooc.frontend.model.IntLiteral$Format $stack0, $stack1, $stack2, $stack3, $stack5, $stack6, $stack7, $stack8;
        org.ooc.frontend.model.IntLiteral$Format[] $stack4;

        $stack0 = new org.ooc.frontend.model.IntLiteral$Format;

        specialinvoke $stack0.<org.ooc.frontend.model.IntLiteral$Format: void <init>(java.lang.String,int)>("DEC", 0);

        <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format DEC> = $stack0;

        $stack1 = new org.ooc.frontend.model.IntLiteral$Format;

        specialinvoke $stack1.<org.ooc.frontend.model.IntLiteral$Format: void <init>(java.lang.String,int)>("OCT", 1);

        <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format OCT> = $stack1;

        $stack2 = new org.ooc.frontend.model.IntLiteral$Format;

        specialinvoke $stack2.<org.ooc.frontend.model.IntLiteral$Format: void <init>(java.lang.String,int)>("HEX", 2);

        <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format HEX> = $stack2;

        $stack3 = new org.ooc.frontend.model.IntLiteral$Format;

        specialinvoke $stack3.<org.ooc.frontend.model.IntLiteral$Format: void <init>(java.lang.String,int)>("BIN", 3);

        <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format BIN> = $stack3;

        $stack4 = newarray (org.ooc.frontend.model.IntLiteral$Format)[4];

        $stack5 = <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format DEC>;

        $stack4[0] = $stack5;

        $stack6 = <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format OCT>;

        $stack4[1] = $stack6;

        $stack7 = <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format HEX>;

        $stack4[2] = $stack7;

        $stack8 = <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format BIN>;

        $stack4[3] = $stack8;

        <org.ooc.frontend.model.IntLiteral$Format: org.ooc.frontend.model.IntLiteral$Format[] $VALUES> = $stack4;

        return;
    }
}
