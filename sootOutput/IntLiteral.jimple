public class IntLiteral extends org.ooc.frontend.model.Literal
{
    protected java.math.BigInteger value;
    protected org.ooc.frontend.model.IntLiteral$Format format;
    public static org.ooc.frontend.model.Type type;

    public void <init>(long, org.ooc.frontend.model.IntLiteral$Format, org.ooc.frontend.model.tokens.Token)
    {
        IntLiteral this;
        long value;
        java.lang.String $stack6;
        org.ooc.frontend.model.IntLiteral$Format format;
        org.ooc.frontend.model.tokens.Token startToken;
        java.math.BigInteger $u0;
        org.ooc.frontend.model.IntLiteral $r0;

        this := @this: IntLiteral;

        value := @parameter0: long;

        format := @parameter1: org.ooc.frontend.model.IntLiteral$Format;

        startToken := @parameter2: org.ooc.frontend.model.tokens.Token;

        $u0 = new java.math.BigInteger;

        $stack6 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(value);

        specialinvoke $u0.<java.math.BigInteger: void <init>(java.lang.String)>($stack6);

        $r0 = (org.ooc.frontend.model.IntLiteral) this;

        specialinvoke $r0.<org.ooc.frontend.model.IntLiteral: void <init>(java.math.BigInteger,org.ooc.frontend.model.IntLiteral$Format,org.ooc.frontend.model.tokens.Token)>($u0, format, startToken);

        return;
    }

    public void <init>(java.math.BigInteger, org.ooc.frontend.model.IntLiteral$Format, org.ooc.frontend.model.tokens.Token)
    {
        IntLiteral this;
        org.ooc.frontend.model.tokens.Token startToken;
        java.math.BigInteger value;
        org.ooc.frontend.model.IntLiteral$Format format;
        org.ooc.frontend.model.IntLiteral $r0, $r1;

        this := @this: IntLiteral;

        value := @parameter0: java.math.BigInteger;

        format := @parameter1: org.ooc.frontend.model.IntLiteral$Format;

        startToken := @parameter2: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Literal: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.IntLiteral) this;

        $r0.<org.ooc.frontend.model.IntLiteral: java.math.BigInteger value> = value;

        $r1 = (org.ooc.frontend.model.IntLiteral) this;

        $r1.<org.ooc.frontend.model.IntLiteral: org.ooc.frontend.model.IntLiteral$Format format> = format;

        return;
    }

    public org.ooc.frontend.model.Type getType()
    {
        org.ooc.frontend.model.Type $stack1;
        IntLiteral this;

        this := @this: IntLiteral;

        $stack1 = <org.ooc.frontend.model.IntLiteral: org.ooc.frontend.model.Type type>;

        return $stack1;
    }

    public java.math.BigInteger getValue()
    {
        IntLiteral this;
        java.math.BigInteger $stack1;
        org.ooc.frontend.model.IntLiteral $r0;

        this := @this: IntLiteral;

        $r0 = (org.ooc.frontend.model.IntLiteral) this;

        $stack1 = $r0.<org.ooc.frontend.model.IntLiteral: java.math.BigInteger value>;

        return $stack1;
    }

    public org.ooc.frontend.model.IntLiteral$Format getFormat()
    {
        IntLiteral this;
        org.ooc.frontend.model.IntLiteral$Format $stack1;
        org.ooc.frontend.model.IntLiteral $r0;

        this := @this: IntLiteral;

        $r0 = (org.ooc.frontend.model.IntLiteral) this;

        $stack1 = $r0.<org.ooc.frontend.model.IntLiteral: org.ooc.frontend.model.IntLiteral$Format format>;

        return $stack1;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        IntLiteral this;
        org.ooc.frontend.model.IntLiteral $r0;

        this := @this: IntLiteral;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.IntLiteral) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.IntLiteral)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        IntLiteral this;

        this := @this: IntLiteral;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.Type $stack2;
        IntLiteral this;

        this := @this: IntLiteral;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $stack2 = <org.ooc.frontend.model.IntLiteral: org.ooc.frontend.model.Type type>;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.Type)>($stack2);

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        IntLiteral this;
        org.ooc.frontend.model.Node oldie, kiddo;

        this := @this: IntLiteral;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        return 0;
    }

    public java.lang.String toString()
    {
        IntLiteral this;
        java.math.BigInteger $stack1;
        java.lang.String $stack2;
        org.ooc.frontend.model.IntLiteral $r0;

        this := @this: IntLiteral;

        $r0 = (org.ooc.frontend.model.IntLiteral) this;

        $stack1 = $r0.<org.ooc.frontend.model.IntLiteral: java.math.BigInteger value>;

        $stack2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($stack1);

        return $stack2;
    }

    static void <clinit>()
    {
        org.ooc.frontend.model.Type $stack0;
        org.ooc.frontend.model.tokens.Token $stack1;

        $stack0 = new org.ooc.frontend.model.Type;

        $stack1 = <org.ooc.frontend.model.tokens.Token: org.ooc.frontend.model.tokens.Token defaultToken>;

        specialinvoke $stack0.<org.ooc.frontend.model.Type: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>("Int", $stack1);

        <org.ooc.frontend.model.IntLiteral: org.ooc.frontend.model.Type type> = $stack0;

        return;
    }
}
