public class InvalidDependencyVersionException extends org.apache.maven.project.InvalidProjectVersionException
{
    private org.apache.maven.model.Dependency dependency;

    public void <init>(java.lang.String, org.apache.maven.model.Dependency, java.io.File, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException)
    {
        InvalidDependencyVersionException this;
        java.lang.String projectId, $stack5, $stack6;
        org.apache.maven.model.Dependency dependency;
        java.io.File pomFile;
        org.apache.maven.artifact.versioning.InvalidVersionSpecificationException cause;
        org.apache.maven.project.artifact.InvalidDependencyVersionException $r0;

        this := @this: InvalidDependencyVersionException;

        projectId := @parameter0: java.lang.String;

        dependency := @parameter1: org.apache.maven.model.Dependency;

        pomFile := @parameter2: java.io.File;

        cause := @parameter3: org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;

        $stack5 = staticinvoke <org.apache.maven.project.artifact.InvalidDependencyVersionException: java.lang.String formatLocationInPom(org.apache.maven.model.Dependency)>(dependency);

        $stack6 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        specialinvoke this.<org.apache.maven.project.InvalidProjectVersionException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.io.File,org.apache.maven.artifact.versioning.InvalidVersionSpecificationException)>(projectId, $stack5, $stack6, pomFile, cause);

        $r0 = (org.apache.maven.project.artifact.InvalidDependencyVersionException) this;

        $r0.<org.apache.maven.project.artifact.InvalidDependencyVersionException: org.apache.maven.model.Dependency dependency> = dependency;

        return;
    }

    private static java.lang.String formatLocationInPom(org.apache.maven.model.Dependency)
    {
        java.lang.StringBuilder $stack1, $stack2, $stack6;
        org.apache.maven.model.Dependency dependency;
        java.lang.String $stack3, $stack4, $stack5, $stack7;

        dependency := @parameter0: org.apache.maven.model.Dependency;

        $stack1 = new java.lang.StringBuilder;

        specialinvoke $stack1.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dependency: ");

        $stack3 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack4 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack5 = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String versionlessKey(java.lang.String,java.lang.String)>($stack3, $stack4);

        $stack6 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    public org.apache.maven.model.Dependency getDependency()
    {
        InvalidDependencyVersionException this;
        org.apache.maven.model.Dependency $stack1;
        org.apache.maven.project.artifact.InvalidDependencyVersionException $r0;

        this := @this: InvalidDependencyVersionException;

        $r0 = (org.apache.maven.project.artifact.InvalidDependencyVersionException) this;

        $stack1 = $r0.<org.apache.maven.project.artifact.InvalidDependencyVersionException: org.apache.maven.model.Dependency dependency>;

        return $stack1;
    }
}
