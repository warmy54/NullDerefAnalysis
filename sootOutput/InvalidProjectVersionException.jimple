public class InvalidProjectVersionException extends org.apache.maven.project.ProjectBuildingException
{
    private final java.lang.String locationInPom;
    private final java.lang.String offendingVersion;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.io.File, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException)
    {
        InvalidProjectVersionException this;
        java.lang.String projectId, locationInPom, offendingVersion, $stack6;
        org.apache.maven.artifact.versioning.InvalidVersionSpecificationException cause;
        java.io.File pomFile;
        java.lang.Throwable $r0;
        org.apache.maven.project.InvalidProjectVersionException $r1, $r2;

        this := @this: InvalidProjectVersionException;

        projectId := @parameter0: java.lang.String;

        locationInPom := @parameter1: java.lang.String;

        offendingVersion := @parameter2: java.lang.String;

        pomFile := @parameter3: java.io.File;

        cause := @parameter4: org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;

        $stack6 = staticinvoke <org.apache.maven.project.InvalidProjectVersionException: java.lang.String formatMessage(java.lang.String,java.lang.String,java.lang.String,org.apache.maven.artifact.versioning.InvalidVersionSpecificationException)>(projectId, locationInPom, offendingVersion, cause);

        $r0 = (java.lang.Throwable) cause;

        specialinvoke this.<org.apache.maven.project.ProjectBuildingException: void <init>(java.lang.String,java.lang.String,java.io.File,java.lang.Throwable)>(projectId, $stack6, pomFile, $r0);

        $r1 = (org.apache.maven.project.InvalidProjectVersionException) this;

        $r1.<org.apache.maven.project.InvalidProjectVersionException: java.lang.String locationInPom> = locationInPom;

        $r2 = (org.apache.maven.project.InvalidProjectVersionException) this;

        $r2.<org.apache.maven.project.InvalidProjectVersionException: java.lang.String offendingVersion> = offendingVersion;

        return;
    }

    private static java.lang.String formatMessage(java.lang.String, java.lang.String, java.lang.String, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException)
    {
        java.lang.StringBuilder $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack13;
        java.lang.String offendingVersion, locationInPom, projectId, $stack12, $stack14;
        org.apache.maven.artifact.versioning.InvalidVersionSpecificationException cause;

        projectId := @parameter0: java.lang.String;

        locationInPom := @parameter1: java.lang.String;

        offendingVersion := @parameter2: java.lang.String;

        cause := @parameter3: org.apache.maven.artifact.versioning.InvalidVersionSpecificationException;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid version: ");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(offendingVersion);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found for: ");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(locationInPom);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in project: ");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(projectId);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Reason: ");

        $stack12 = virtualinvoke cause.<org.apache.maven.artifact.versioning.InvalidVersionSpecificationException: java.lang.String getMessage()>();

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack14;
    }

    public java.lang.String getOffendingVersion()
    {
        InvalidProjectVersionException this;
        java.lang.String $stack1;
        org.apache.maven.project.InvalidProjectVersionException $r0;

        this := @this: InvalidProjectVersionException;

        $r0 = (org.apache.maven.project.InvalidProjectVersionException) this;

        $stack1 = $r0.<org.apache.maven.project.InvalidProjectVersionException: java.lang.String offendingVersion>;

        return $stack1;
    }

    public java.lang.String getLocationInPom()
    {
        InvalidProjectVersionException this;
        java.lang.String $stack1;
        org.apache.maven.project.InvalidProjectVersionException $r0;

        this := @this: InvalidProjectVersionException;

        $r0 = (org.apache.maven.project.InvalidProjectVersionException) this;

        $stack1 = $r0.<org.apache.maven.project.InvalidProjectVersionException: java.lang.String locationInPom>;

        return $stack1;
    }
}
