class JavaCV$1 extends java.lang.Object implements org.bytedeco.javacv.Parallel$Looper
{
    static final boolean $assertionsDisabled;
    final int val$w;
    final int val$windowMax;
    final int val$windowMin;
    final int val$h;
    final java.nio.DoubleBuffer val$sumBuf;
    final int val$sumStep;
    final java.nio.DoubleBuffer val$sqSumBuf;
    final int val$sqSumStep;
    final double val$targetVar;
    final int val$srcDepth;
    final java.nio.ByteBuffer val$srcBuf;
    final int val$srcStep;
    final boolean val$invert;
    final double val$k;
    final java.nio.ByteBuffer val$dstBuf;
    final int val$dstStep;

    void <init>(int, int, int, int, java.nio.DoubleBuffer, int, java.nio.DoubleBuffer, int, double, int, java.nio.ByteBuffer, int, boolean, double, java.nio.ByteBuffer, int)
    {
        JavaCV$1 this;
        int l1, l2, l3, l4, l6, l8, l11, l13, l18;
        java.nio.DoubleBuffer l5, l7;
        double l9, l15;
        java.nio.ByteBuffer l12, l17;
        boolean l14;
        org.bytedeco.javacv.JavaCV$1 $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        this := @this: JavaCV$1;

        l1 := @parameter0: int;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        l4 := @parameter3: int;

        l5 := @parameter4: java.nio.DoubleBuffer;

        l6 := @parameter5: int;

        l7 := @parameter6: java.nio.DoubleBuffer;

        l8 := @parameter7: int;

        l9 := @parameter8: double;

        l11 := @parameter9: int;

        l12 := @parameter10: java.nio.ByteBuffer;

        l13 := @parameter11: int;

        l14 := @parameter12: boolean;

        l15 := @parameter13: double;

        l17 := @parameter14: java.nio.ByteBuffer;

        l18 := @parameter15: int;

        $r0 = (org.bytedeco.javacv.JavaCV$1) this;

        $r0.<org.bytedeco.javacv.JavaCV$1: int val$w> = l1;

        $r1 = (org.bytedeco.javacv.JavaCV$1) this;

        $r1.<org.bytedeco.javacv.JavaCV$1: int val$windowMax> = l2;

        $r2 = (org.bytedeco.javacv.JavaCV$1) this;

        $r2.<org.bytedeco.javacv.JavaCV$1: int val$windowMin> = l3;

        $r3 = (org.bytedeco.javacv.JavaCV$1) this;

        $r3.<org.bytedeco.javacv.JavaCV$1: int val$h> = l4;

        $r4 = (org.bytedeco.javacv.JavaCV$1) this;

        $r4.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sumBuf> = l5;

        $r5 = (org.bytedeco.javacv.JavaCV$1) this;

        $r5.<org.bytedeco.javacv.JavaCV$1: int val$sumStep> = l6;

        $r6 = (org.bytedeco.javacv.JavaCV$1) this;

        $r6.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sqSumBuf> = l7;

        $r7 = (org.bytedeco.javacv.JavaCV$1) this;

        $r7.<org.bytedeco.javacv.JavaCV$1: int val$sqSumStep> = l8;

        $r8 = (org.bytedeco.javacv.JavaCV$1) this;

        $r8.<org.bytedeco.javacv.JavaCV$1: double val$targetVar> = l9;

        $r9 = (org.bytedeco.javacv.JavaCV$1) this;

        $r9.<org.bytedeco.javacv.JavaCV$1: int val$srcDepth> = l11;

        $r10 = (org.bytedeco.javacv.JavaCV$1) this;

        $r10.<org.bytedeco.javacv.JavaCV$1: java.nio.ByteBuffer val$srcBuf> = l12;

        $r11 = (org.bytedeco.javacv.JavaCV$1) this;

        $r11.<org.bytedeco.javacv.JavaCV$1: int val$srcStep> = l13;

        $r12 = (org.bytedeco.javacv.JavaCV$1) this;

        $r12.<org.bytedeco.javacv.JavaCV$1: boolean val$invert> = l14;

        $r13 = (org.bytedeco.javacv.JavaCV$1) this;

        $r13.<org.bytedeco.javacv.JavaCV$1: double val$k> = l15;

        $r14 = (org.bytedeco.javacv.JavaCV$1) this;

        $r14.<org.bytedeco.javacv.JavaCV$1: java.nio.ByteBuffer val$dstBuf> = l17;

        $r15 = (org.bytedeco.javacv.JavaCV$1) this;

        $r15.<org.bytedeco.javacv.JavaCV$1: int val$dstStep> = l18;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void loop(int, int, int)
    {
        int 'from', 'to', $stack19, $stack22, $stack23, $stack24, $stack25, $stack29, $stack30, $stack32, $stack41, $stack42, $stack44, $stack49, $stack50, $stack51, $stack52, $stack56, $stack57, $stack58, $stack59, $stack62, $stack63, $stack64, $stack67, $stack68, $stack69, $stack71, $stack72, $stack73, $stack74, x2, $stack76, $stack77, $stack79, $stack80, $stack81, $stack82, y2, $stack84, $stack85, $stack86, $stack87, $stack90, $stack91, $stack92, $stack93, $stack96, $stack97, $stack98, $stack99, $stack103, $stack104, $stack105, $stack106, $stack110, $stack112, $stack113, $stack114, $stack115, $stack118, $stack119, $stack120, $stack121, $stack124, $stack125, $stack126, $stack127, $stack131, $stack132, $stack133, $stack134, $stack138, $stack143, $stack144, $stack145, $stack146, looperID, y, x, upperLimit, lowerLimit, window, x1, y1;
        JavaCV$1 this;
        boolean $stack26, $stack27;
        double $stack28, $stack38, $stack39, $stack40, $stack89, $stack95, $stack101, $stack102, $stack108, $stack109, $stack111, $stack117, $stack123, $stack129, $stack130, $stack136, $stack137, $stack139, $stack140, $stack141, $stack160, var, mean, sqMean, x1#16, y1#23;
        byte $stack31, $stack43, $stack66, $stack142, $stack161, $stack47, $stack37;
        java.nio.ByteBuffer $stack33, $stack45, $stack53, $stack60, $stack65;
        float $stack61;
        java.nio.DoubleBuffer $stack88, $stack94, $stack100, $stack107, $stack116, $stack122, $stack128, $stack135;
        java.lang.AssertionError $u0;
        org.bytedeco.javacv.JavaCV$1 $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;

        this := @this: JavaCV$1;

        'from' := @parameter0: int;

        'to' := @parameter1: int;

        looperID := @parameter2: int;

        y = 'from';

     label01:
        if y >= 'to' goto label19;

        x = 0;

     label02:
        $r0 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack19 = $r0.<org.bytedeco.javacv.JavaCV$1: int val$w>;

        if x >= $stack19 goto label18;

        mean = 0.0;

        $r1 = (org.bytedeco.javacv.JavaCV$1) this;

        upperLimit = $r1.<org.bytedeco.javacv.JavaCV$1: int val$windowMax>;

        $r2 = (org.bytedeco.javacv.JavaCV$1) this;

        lowerLimit = $r2.<org.bytedeco.javacv.JavaCV$1: int val$windowMin>;

        window = upperLimit;

     label03:
        $stack22 = upperLimit - lowerLimit;

        if $stack22 <= 2 goto label07;

        $stack68 = window / 2;

        $stack69 = x - $stack68;

        x1 = staticinvoke <java.lang.Math: int max(int,int)>($stack69, 0);

        $stack71 = window / 2;

        $stack72 = x + $stack71;

        $stack74 = $stack72 + 1;

        $r3 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack73 = $r3.<org.bytedeco.javacv.JavaCV$1: int val$w>;

        x2 = staticinvoke <java.lang.Math: int min(int,int)>($stack74, $stack73);

        $stack76 = window / 2;

        $stack77 = y - $stack76;

        y1 = staticinvoke <java.lang.Math: int max(int,int)>($stack77, 0);

        $stack79 = window / 2;

        $stack80 = y + $stack79;

        $stack82 = $stack80 + 1;

        $r4 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack81 = $r4.<org.bytedeco.javacv.JavaCV$1: int val$h>;

        y2 = staticinvoke <java.lang.Math: int min(int,int)>($stack82, $stack81);

        $r5 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack88 = $r5.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sumBuf>;

        $r6 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack84 = $r6.<org.bytedeco.javacv.JavaCV$1: int val$sumStep>;

        $stack85 = y2 * $stack84;

        $stack86 = $stack85 / 8;

        $stack87 = $stack86 + x2;

        $stack89 = virtualinvoke $stack88.<java.nio.DoubleBuffer: double get(int)>($stack87);

        $r7 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack94 = $r7.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sumBuf>;

        $r8 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack90 = $r8.<org.bytedeco.javacv.JavaCV$1: int val$sumStep>;

        $stack91 = y2 * $stack90;

        $stack92 = $stack91 / 8;

        $stack93 = $stack92 + x1;

        $stack95 = virtualinvoke $stack94.<java.nio.DoubleBuffer: double get(int)>($stack93);

        $stack101 = $stack89 - $stack95;

        $r9 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack100 = $r9.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sumBuf>;

        $r10 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack96 = $r10.<org.bytedeco.javacv.JavaCV$1: int val$sumStep>;

        $stack97 = y1 * $stack96;

        $stack98 = $stack97 / 8;

        $stack99 = $stack98 + x2;

        $stack102 = virtualinvoke $stack100.<java.nio.DoubleBuffer: double get(int)>($stack99);

        $stack108 = $stack101 - $stack102;

        $r11 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack107 = $r11.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sumBuf>;

        $r12 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack103 = $r12.<org.bytedeco.javacv.JavaCV$1: int val$sumStep>;

        $stack104 = y1 * $stack103;

        $stack105 = $stack104 / 8;

        $stack106 = $stack105 + x1;

        $stack109 = virtualinvoke $stack107.<java.nio.DoubleBuffer: double get(int)>($stack106);

        mean = $stack108 + $stack109;

        $stack110 = window * window;

        $stack111 = (double) $stack110;

        mean = mean / $stack111;

        $r13 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack116 = $r13.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sqSumBuf>;

        $r14 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack112 = $r14.<org.bytedeco.javacv.JavaCV$1: int val$sqSumStep>;

        $stack113 = y2 * $stack112;

        $stack114 = $stack113 / 8;

        $stack115 = $stack114 + x2;

        $stack117 = virtualinvoke $stack116.<java.nio.DoubleBuffer: double get(int)>($stack115);

        $r15 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack122 = $r15.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sqSumBuf>;

        $r16 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack118 = $r16.<org.bytedeco.javacv.JavaCV$1: int val$sqSumStep>;

        $stack119 = y2 * $stack118;

        $stack120 = $stack119 / 8;

        $stack121 = $stack120 + x1;

        $stack123 = virtualinvoke $stack122.<java.nio.DoubleBuffer: double get(int)>($stack121);

        $stack129 = $stack117 - $stack123;

        $r17 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack128 = $r17.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sqSumBuf>;

        $r18 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack124 = $r18.<org.bytedeco.javacv.JavaCV$1: int val$sqSumStep>;

        $stack125 = y1 * $stack124;

        $stack126 = $stack125 / 8;

        $stack127 = $stack126 + x2;

        $stack130 = virtualinvoke $stack128.<java.nio.DoubleBuffer: double get(int)>($stack127);

        $stack136 = $stack129 - $stack130;

        $r19 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack135 = $r19.<org.bytedeco.javacv.JavaCV$1: java.nio.DoubleBuffer val$sqSumBuf>;

        $r20 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack131 = $r20.<org.bytedeco.javacv.JavaCV$1: int val$sqSumStep>;

        $stack132 = y1 * $stack131;

        $stack133 = $stack132 / 8;

        $stack134 = $stack133 + x1;

        $stack137 = virtualinvoke $stack135.<java.nio.DoubleBuffer: double get(int)>($stack134);

        sqMean = $stack136 + $stack137;

        $stack138 = window * window;

        $stack139 = (double) $stack138;

        sqMean = sqMean / $stack139;

        $stack140 = mean * mean;

        var = sqMean - $stack140;

        if window != upperLimit goto label04;

        $r21 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack160 = $r21.<org.bytedeco.javacv.JavaCV$1: double val$targetVar>;

        $stack161 = var cmpg $stack160;

        if $stack161 >= 0 goto label04;

        goto label07;

     label04:
        $r22 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack141 = $r22.<org.bytedeco.javacv.JavaCV$1: double val$targetVar>;

        $stack142 = var cmpl $stack141;

        if $stack142 <= 0 goto label05;

        upperLimit = window;

        goto label06;

     label05:
        lowerLimit = window;

     label06:
        $stack143 = upperLimit - lowerLimit;

        $stack144 = $stack143 / 2;

        window = lowerLimit + $stack144;

        $stack145 = window / 2;

        $stack146 = $stack145 * 2;

        window = $stack146 + 1;

        goto label03;

     label07:
        x1#16 = 0.0;

        $r23 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack23 = $r23.<org.bytedeco.javacv.JavaCV$1: int val$srcDepth>;

        if $stack23 != 8 goto label08;

        $r24 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack65 = $r24.<org.bytedeco.javacv.JavaCV$1: java.nio.ByteBuffer val$srcBuf>;

        $r25 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack62 = $r25.<org.bytedeco.javacv.JavaCV$1: int val$srcStep>;

        $stack63 = y * $stack62;

        $stack64 = $stack63 + x;

        $stack66 = virtualinvoke $stack65.<java.nio.ByteBuffer: byte get(int)>($stack64);

        $stack67 = $stack66 & 255;

        x1#16 = (double) $stack67;

        goto label11;

     label08:
        $r26 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack24 = $r26.<org.bytedeco.javacv.JavaCV$1: int val$srcDepth>;

        if $stack24 != 32 goto label09;

        $r27 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack60 = $r27.<org.bytedeco.javacv.JavaCV$1: java.nio.ByteBuffer val$srcBuf>;

        $r28 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack56 = $r28.<org.bytedeco.javacv.JavaCV$1: int val$srcStep>;

        $stack58 = y * $stack56;

        $stack57 = 4 * x;

        $stack59 = $stack58 + $stack57;

        $stack61 = virtualinvoke $stack60.<java.nio.ByteBuffer: float getFloat(int)>($stack59);

        x1#16 = (double) $stack61;

        goto label11;

     label09:
        $r29 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack25 = $r29.<org.bytedeco.javacv.JavaCV$1: int val$srcDepth>;

        if $stack25 != 64 goto label10;

        $r30 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack53 = $r30.<org.bytedeco.javacv.JavaCV$1: java.nio.ByteBuffer val$srcBuf>;

        $r31 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack49 = $r31.<org.bytedeco.javacv.JavaCV$1: int val$srcStep>;

        $stack51 = y * $stack49;

        $stack50 = 8 * x;

        $stack52 = $stack51 + $stack50;

        x1#16 = virtualinvoke $stack53.<java.nio.ByteBuffer: double getDouble(int)>($stack52);

        goto label11;

     label10:
        $stack26 = <org.bytedeco.javacv.JavaCV$1: boolean $assertionsDisabled>;

        if $stack26 != 0 goto label11;

        $u0 = new java.lang.AssertionError;

        specialinvoke $u0.<java.lang.AssertionError: void <init>()>();

        throw $u0;

     label11:
        $r32 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack27 = $r32.<org.bytedeco.javacv.JavaCV$1: boolean val$invert>;

        if $stack27 == 0 goto label14;

        $stack39 = 255.0 - mean;

        $r33 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack38 = $r33.<org.bytedeco.javacv.JavaCV$1: double val$k>;

        $stack40 = $stack39 * $stack38;

        y1#23 = 255.0 - $stack40;

        $r34 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack45 = $r34.<org.bytedeco.javacv.JavaCV$1: java.nio.ByteBuffer val$dstBuf>;

        $r35 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack41 = $r35.<org.bytedeco.javacv.JavaCV$1: int val$dstStep>;

        $stack42 = y * $stack41;

        $stack44 = $stack42 + x;

        $stack43 = x1#16 cmpg y1#23;

        if $stack43 >= 0 goto label12;

        $stack47 = -1;

        goto label13;

     label12:
        $stack47 = 0;

     label13:
        virtualinvoke $stack45.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($stack44, $stack47);

        goto label17;

     label14:
        $r36 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack28 = $r36.<org.bytedeco.javacv.JavaCV$1: double val$k>;

        y1#23 = mean * $stack28;

        $r37 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack33 = $r37.<org.bytedeco.javacv.JavaCV$1: java.nio.ByteBuffer val$dstBuf>;

        $r38 = (org.bytedeco.javacv.JavaCV$1) this;

        $stack29 = $r38.<org.bytedeco.javacv.JavaCV$1: int val$dstStep>;

        $stack30 = y * $stack29;

        $stack32 = $stack30 + x;

        $stack31 = x1#16 cmpl y1#23;

        if $stack31 <= 0 goto label15;

        $stack37 = -1;

        goto label16;

     label15:
        $stack37 = 0;

     label16:
        virtualinvoke $stack33.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,byte)>($stack32, $stack37);

     label17:
        x = x + 1;

        goto label02;

     label18:
        y = y + 1;

        goto label01;

     label19:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack2;

        $stack0 = class "Lorg/bytedeco/javacv/JavaCV;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        <org.bytedeco.javacv.JavaCV$1: boolean $assertionsDisabled> = $stack2;

        return;
    }
}
