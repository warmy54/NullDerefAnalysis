public class JavaFXFrameConverter extends org.bytedeco.javacv.FrameConverter
{

    public void <init>()
    {
        JavaFXFrameConverter this;

        this := @this: JavaFXFrameConverter;

        specialinvoke this.<org.bytedeco.javacv.FrameConverter: void <init>()>();

        return;
    }

    public org.bytedeco.javacv.Frame convert(javafx.scene.image.Image)
    {
        java.lang.UnsupportedOperationException $stack2;
        JavaFXFrameConverter this;
        javafx.scene.image.Image f;

        this := @this: JavaFXFrameConverter;

        f := @parameter0: javafx.scene.image.Image;

        $stack2 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("conversion from Image to Frame not supported yet.");

        throw $stack2;
    }

    public javafx.scene.image.Image convert(org.bytedeco.javacv.Frame)
    {
        org.bytedeco.javacv.Frame frame;
        int iw, ih;
        JavaFXFrameConverter this;
        org.bytedeco.javacv.JavaFXFrameConverter$FramePixelReader $u0;
        javafx.scene.image.WritableImage $u1;
        org.bytedeco.javacv.JavaFXFrameConverter $r0;
        javafx.scene.image.PixelReader $r1;
        javafx.scene.image.Image $r2;

        this := @this: JavaFXFrameConverter;

        frame := @parameter0: org.bytedeco.javacv.Frame;

        iw = frame.<org.bytedeco.javacv.Frame: int imageWidth>;

        ih = frame.<org.bytedeco.javacv.Frame: int imageHeight>;

        $u0 = new org.bytedeco.javacv.JavaFXFrameConverter$FramePixelReader;

        $r0 = (org.bytedeco.javacv.JavaFXFrameConverter) this;

        specialinvoke $u0.<org.bytedeco.javacv.JavaFXFrameConverter$FramePixelReader: void <init>(org.bytedeco.javacv.JavaFXFrameConverter,org.bytedeco.javacv.Frame)>($r0, frame);

        $u1 = new javafx.scene.image.WritableImage;

        $r1 = (javafx.scene.image.PixelReader) $u0;

        specialinvoke $u1.<javafx.scene.image.WritableImage: void <init>(javafx.scene.image.PixelReader,int,int)>($r1, iw, ih);

        $r2 = (javafx.scene.image.Image) $u1;

        return $r2;
    }

    public volatile java.lang.Object convert(org.bytedeco.javacv.Frame)
    {
        JavaFXFrameConverter this;
        org.bytedeco.javacv.Frame l1;
        javafx.scene.image.Image $stack2;
        org.bytedeco.javacv.JavaFXFrameConverter $r0;

        this := @this: JavaFXFrameConverter;

        l1 := @parameter0: org.bytedeco.javacv.Frame;

        $r0 = (org.bytedeco.javacv.JavaFXFrameConverter) this;

        $stack2 = virtualinvoke $r0.<org.bytedeco.javacv.JavaFXFrameConverter: javafx.scene.image.Image convert(org.bytedeco.javacv.Frame)>(l1);

        return $stack2;
    }

    public volatile org.bytedeco.javacv.Frame convert(java.lang.Object)
    {
        JavaFXFrameConverter this;
        java.lang.Object l1;
        javafx.scene.image.Image $stack2;
        org.bytedeco.javacv.Frame $stack3;
        org.bytedeco.javacv.JavaFXFrameConverter $r0;

        this := @this: JavaFXFrameConverter;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (javafx.scene.image.Image) l1;

        $r0 = (org.bytedeco.javacv.JavaFXFrameConverter) this;

        $stack3 = virtualinvoke $r0.<org.bytedeco.javacv.JavaFXFrameConverter: org.bytedeco.javacv.Frame convert(javafx.scene.image.Image)>($stack2);

        return $stack3;
    }
}
