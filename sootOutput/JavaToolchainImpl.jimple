class JavaToolchainImpl extends org.apache.maven.toolchain.DefaultToolchain implements org.apache.maven.toolchain.java.JavaToolchain
{
    private java.lang.String javaHome;
    public static final java.lang.String KEY_JAVAHOME;

    void <init>(org.apache.maven.toolchain.model.ToolchainModel, org.codehaus.plexus.logging.Logger)
    {
        JavaToolchainImpl this;
        org.apache.maven.toolchain.model.ToolchainModel model;
        org.codehaus.plexus.logging.Logger logger;

        this := @this: JavaToolchainImpl;

        model := @parameter0: org.apache.maven.toolchain.model.ToolchainModel;

        logger := @parameter1: org.codehaus.plexus.logging.Logger;

        specialinvoke this.<org.apache.maven.toolchain.DefaultToolchain: void <init>(org.apache.maven.toolchain.model.ToolchainModel,java.lang.String,org.codehaus.plexus.logging.Logger)>(model, "jdk", logger);

        return;
    }

    public java.lang.String getJavaHome()
    {
        JavaToolchainImpl this;
        java.lang.String $stack1;
        org.apache.maven.toolchain.java.JavaToolchainImpl $r0;

        this := @this: JavaToolchainImpl;

        $r0 = (org.apache.maven.toolchain.java.JavaToolchainImpl) this;

        $stack1 = $r0.<org.apache.maven.toolchain.java.JavaToolchainImpl: java.lang.String javaHome>;

        return $stack1;
    }

    public void setJavaHome(java.lang.String)
    {
        JavaToolchainImpl this;
        java.lang.String javaHome;
        org.apache.maven.toolchain.java.JavaToolchainImpl $r0;

        this := @this: JavaToolchainImpl;

        javaHome := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.toolchain.java.JavaToolchainImpl) this;

        $r0.<org.apache.maven.toolchain.java.JavaToolchainImpl: java.lang.String javaHome> = javaHome;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack2, $stack4, $stack5, $u0;
        JavaToolchainImpl this;
        java.lang.String $stack3, $stack6;
        org.apache.maven.toolchain.java.JavaToolchainImpl $r0;

        this := @this: JavaToolchainImpl;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JDK[");

        $r0 = (org.apache.maven.toolchain.java.JavaToolchainImpl) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.toolchain.java.JavaToolchainImpl: java.lang.String getJavaHome()>();

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack6;
    }

    public java.lang.String findTool(java.lang.String)
    {
        java.lang.String toolName, $stack4, $stack5, $stack7;
        JavaToolchainImpl this;
        java.io.File toRet, $u0;
        org.apache.maven.toolchain.java.JavaToolchainImpl $r0;

        this := @this: JavaToolchainImpl;

        toolName := @parameter0: java.lang.String;

        $u0 = new java.io.File;

        $r0 = (org.apache.maven.toolchain.java.JavaToolchainImpl) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.toolchain.java.JavaToolchainImpl: java.lang.String getJavaHome()>();

        $stack5 = staticinvoke <org.codehaus.plexus.util.FileUtils: java.lang.String normalize(java.lang.String)>($stack4);

        specialinvoke $u0.<java.io.File: void <init>(java.lang.String)>($stack5);

        toRet = staticinvoke <org.apache.maven.toolchain.java.JavaToolchainImpl: java.io.File findTool(java.lang.String,java.io.File)>(toolName, $u0);

        if toRet == null goto label1;

        $stack7 = virtualinvoke toRet.<java.io.File: java.lang.String getAbsolutePath()>();

        return $stack7;

     label1:
        return null;
    }

    private static java.io.File findTool(java.lang.String, java.io.File)
    {
        java.io.File $stack4, installFolder, $stack6;
        boolean $stack5, $stack9, $stack12;
        java.lang.StringBuilder $stack7, $stack8, $stack10;
        java.lang.String toolName, $stack11, $stack14;

        toolName := @parameter0: java.lang.String;

        installFolder := @parameter1: java.io.File;

        $stack4 = new java.io.File;

        specialinvoke $stack4.<java.io.File: void <init>(java.io.File,java.lang.String)>(installFolder, "bin");

        $stack5 = virtualinvoke $stack4.<java.io.File: boolean exists()>();

        if $stack5 == 0 goto label3;

        $stack6 = new java.io.File;

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(toolName);

        $stack9 = staticinvoke <org.codehaus.plexus.util.Os: boolean isFamily(java.lang.String)>("windows");

        if $stack9 == 0 goto label1;

        $stack14 = ".exe";

        goto label2;

     label1:
        $stack14 = "";

     label2:
        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack6.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack4, $stack11);

        $stack12 = virtualinvoke $stack6.<java.io.File: boolean exists()>();

        if $stack12 == 0 goto label3;

        return $stack6;

     label3:
        return null;
    }

    public static void <clinit>()
    {
        <JavaToolchainImpl: java.lang.String KEY_JAVAHOME> = "jdkHome";

        return;
    }
}
