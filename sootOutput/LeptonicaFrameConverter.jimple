public class LeptonicaFrameConverter extends org.bytedeco.javacv.FrameConverter
{
    org.bytedeco.leptonica.PIX pix;
    org.bytedeco.javacpp.BytePointer frameData;
    org.bytedeco.javacpp.BytePointer pixData;
    java.nio.ByteBuffer frameBuffer;
    java.nio.ByteBuffer pixBuffer;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        LeptonicaFrameConverter this;

        this := @this: LeptonicaFrameConverter;

        specialinvoke this.<org.bytedeco.javacv.FrameConverter: void <init>()>();

        return;
    }

    static boolean isEqual(org.bytedeco.javacv.Frame, org.bytedeco.leptonica.PIX)
    {
        org.bytedeco.leptonica.PIX pix;
        org.bytedeco.javacv.Frame frame;
        java.nio.Buffer[] $stack3, $stack4, $stack25;
        int $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23;
        java.nio.ByteOrder $stack14, $stack15;
        boolean $stack16, $stack2;
        org.bytedeco.javacpp.Pointer $stack24;
        java.nio.Buffer $stack26;
        long $stack27, $stack29;
        org.bytedeco.javacpp.IntPointer $stack28;
        byte $stack30;

        frame := @parameter0: org.bytedeco.javacv.Frame;

        pix := @parameter1: org.bytedeco.leptonica.PIX;

        if pix == null goto label2;

        if frame == null goto label2;

        $stack3 = frame.<org.bytedeco.javacv.Frame: java.nio.Buffer[] image>;

        if $stack3 == null goto label2;

        $stack4 = frame.<org.bytedeco.javacv.Frame: java.nio.Buffer[] image>;

        $stack5 = lengthof $stack4;

        if $stack5 <= 0 goto label2;

        $stack6 = frame.<org.bytedeco.javacv.Frame: int imageWidth>;

        $stack7 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int w()>();

        if $stack6 != $stack7 goto label2;

        $stack8 = frame.<org.bytedeco.javacv.Frame: int imageHeight>;

        $stack9 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int h()>();

        if $stack8 != $stack9 goto label2;

        $stack10 = frame.<org.bytedeco.javacv.Frame: int imageChannels>;

        $stack11 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int d()>();

        $stack12 = $stack11 / 8;

        if $stack10 != $stack12 goto label2;

        $stack13 = frame.<org.bytedeco.javacv.Frame: int imageDepth>;

        if $stack13 != 8 goto label2;

        $stack14 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $stack15 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $stack16 = virtualinvoke $stack14.<java.lang.Object: boolean equals(java.lang.Object)>($stack15);

        if $stack16 != 0 goto label1;

        $stack24 = new org.bytedeco.javacpp.Pointer;

        $stack25 = frame.<org.bytedeco.javacv.Frame: java.nio.Buffer[] image>;

        $stack26 = $stack25[0];

        specialinvoke $stack24.<org.bytedeco.javacpp.Pointer: void <init>(java.nio.Buffer)>($stack26);

        $stack27 = virtualinvoke $stack24.<org.bytedeco.javacpp.Pointer: long address()>();

        $stack28 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: org.bytedeco.javacpp.IntPointer data()>();

        $stack29 = virtualinvoke $stack28.<org.bytedeco.javacpp.IntPointer: long address()>();

        $stack30 = $stack27 cmp $stack29;

        if $stack30 != 0 goto label2;

     label1:
        $stack18 = frame.<org.bytedeco.javacv.Frame: int imageStride>;

        $stack17 = frame.<org.bytedeco.javacv.Frame: int imageDepth>;

        $stack19 = staticinvoke <java.lang.Math: int abs(int)>($stack17);

        $stack20 = $stack18 * $stack19;

        $stack21 = $stack20 / 8;

        $stack22 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int wpl()>();

        $stack23 = $stack22 * 4;

        if $stack21 != $stack23 goto label2;

        $stack2 = 1;

        goto label3;

     label2:
        $stack2 = 0;

     label3:
        return $stack2;
    }

    public org.bytedeco.leptonica.PIX convert(org.bytedeco.javacv.Frame)
    {
        org.bytedeco.javacv.Frame frame;
        java.nio.Buffer[] $stack3, $stack15, $stack28;
        java.lang.Object $stack4, $stack88, data;
        boolean $stack5, $stack7, $stack26, $stack10;
        LeptonicaFrameConverter this;
        org.bytedeco.leptonica.PIX $stack6, $stack11, $stack31, $stack36, $stack43, $stack45, $stack46, $stack89;
        java.nio.ByteBuffer $stack12, $stack13, $stack19, $stack20, $stack67, $stack69;
        java.nio.IntBuffer $stack14, $stack21;
        java.nio.Buffer $stack16, $stack17, $stack29, $stack30;
        java.nio.ByteOrder $stack18, $stack24, $stack25, $stack68, $stack8, $stack9;
        int $stack32, $stack33, $stack34, $stack35, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack61, $stack62, $stack63, $stack82, $stack83, $stack84;
        org.bytedeco.javacpp.Pointer $stack44, $stack65, $u1, $r7, $r11;
        org.bytedeco.javacpp.BytePointer $stack58, $stack59, $stack66, $stack71, $stack80, $u0;
        long $stack64, $stack81, $stack85;
        byte $stack86;
        org.bytedeco.javacv.LeptonicaFrameConverter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14;

        this := @this: LeptonicaFrameConverter;

        frame := @parameter0: org.bytedeco.javacv.Frame;

        if frame == null goto label01;

        $stack3 = frame.<org.bytedeco.javacv.Frame: java.nio.Buffer[] image>;

        if $stack3 != null goto label02;

     label01:
        return null;

     label02:
        $stack4 = frame.<org.bytedeco.javacv.Frame: java.lang.Object opaque>;

        $stack5 = $stack4 instanceof org.bytedeco.leptonica.PIX;

        if $stack5 == 0 goto label03;

        $stack88 = frame.<org.bytedeco.javacv.Frame: java.lang.Object opaque>;

        $stack89 = (org.bytedeco.leptonica.PIX) $stack88;

        return $stack89;

     label03:
        $r0 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack6 = $r0.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix>;

        $stack7 = staticinvoke <org.bytedeco.javacv.LeptonicaFrameConverter: boolean isEqual(org.bytedeco.javacv.Frame,org.bytedeco.leptonica.PIX)>(frame, $stack6);

        if $stack7 != 0 goto label10;

        $stack24 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $stack25 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $stack26 = virtualinvoke $stack24.<java.lang.Object: boolean equals(java.lang.Object)>($stack25);

        if $stack26 == 0 goto label07;

        $r1 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack58 = $r1.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer pixData>;

        if $stack58 == null goto label04;

        $r2 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack80 = $r2.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer pixData>;

        $stack81 = virtualinvoke $stack80.<org.bytedeco.javacpp.BytePointer: long capacity()>();

        $stack83 = frame.<org.bytedeco.javacv.Frame: int imageHeight>;

        $stack82 = frame.<org.bytedeco.javacv.Frame: int imageStride>;

        $stack84 = $stack83 * $stack82;

        $stack85 = (long) $stack84;

        $stack86 = $stack81 cmp $stack85;

        if $stack86 >= 0 goto label06;

     label04:
        $r3 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack59 = $r3.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer pixData>;

        if $stack59 == null goto label05;

        $r4 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack71 = $r4.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer pixData>;

        virtualinvoke $stack71.<org.bytedeco.javacpp.BytePointer: boolean releaseReference()>();

     label05:
        $u0 = new org.bytedeco.javacpp.BytePointer;

        $stack62 = frame.<org.bytedeco.javacv.Frame: int imageHeight>;

        $stack61 = frame.<org.bytedeco.javacv.Frame: int imageStride>;

        $stack63 = $stack62 * $stack61;

        $stack64 = (long) $stack63;

        specialinvoke $u0.<org.bytedeco.javacpp.BytePointer: void <init>(long)>($stack64);

        $stack65 = virtualinvoke $u0.<org.bytedeco.javacpp.BytePointer: org.bytedeco.javacpp.Pointer retainReference()>();

        $stack66 = (org.bytedeco.javacpp.BytePointer) $stack65;

        $r5 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r5.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer pixData> = $stack66;

     label06:
        $r6 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        data = $r6.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer pixData>;

        $r7 = (org.bytedeco.javacpp.Pointer) data;

        $stack67 = virtualinvoke $r7.<org.bytedeco.javacpp.Pointer: java.nio.ByteBuffer asByteBuffer()>();

        $stack68 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        $stack69 = virtualinvoke $stack67.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($stack68);

        $r8 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r8.<org.bytedeco.javacv.LeptonicaFrameConverter: java.nio.ByteBuffer pixBuffer> = $stack69;

        goto label08;

     label07:
        $u1 = new org.bytedeco.javacpp.Pointer;

        $stack28 = frame.<org.bytedeco.javacv.Frame: java.nio.Buffer[] image>;

        $stack29 = $stack28[0];

        $stack30 = virtualinvoke $stack29.<java.nio.Buffer: java.nio.Buffer position(int)>(0);

        specialinvoke $u1.<org.bytedeco.javacpp.Pointer: void <init>(java.nio.Buffer)>($stack30);

        data = $u1;

     label08:
        $r9 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack31 = $r9.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix>;

        if $stack31 == null goto label09;

        $r10 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack46 = $r10.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix>;

        virtualinvoke $stack46.<org.bytedeco.leptonica.PIX: boolean releaseReference()>();

     label09:
        $stack35 = frame.<org.bytedeco.javacv.Frame: int imageWidth>;

        $stack34 = frame.<org.bytedeco.javacv.Frame: int imageHeight>;

        $stack32 = frame.<org.bytedeco.javacv.Frame: int imageChannels>;

        $stack33 = $stack32 * 8;

        $r11 = (org.bytedeco.javacpp.Pointer) data;

        $stack36 = staticinvoke <org.bytedeco.leptonica.PIX: org.bytedeco.leptonica.PIX create(int,int,int,org.bytedeco.javacpp.Pointer)>($stack35, $stack34, $stack33, $r11);

        $stack37 = frame.<org.bytedeco.javacv.Frame: int imageStride>;

        $stack39 = $stack37 / 4;

        $stack38 = frame.<org.bytedeco.javacv.Frame: int imageDepth>;

        $stack40 = staticinvoke <java.lang.Math: int abs(int)>($stack38);

        $stack41 = $stack39 * $stack40;

        $stack42 = $stack41 / 8;

        $stack43 = virtualinvoke $stack36.<org.bytedeco.leptonica.PIX: org.bytedeco.leptonica.PIX wpl(int)>($stack42);

        $stack44 = virtualinvoke $stack43.<org.bytedeco.leptonica.PIX: org.bytedeco.javacpp.Pointer retainReference()>();

        $stack45 = (org.bytedeco.leptonica.PIX) $stack44;

        $r12 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r12.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix> = $stack45;

     label10:
        $stack8 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $stack9 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $stack10 = virtualinvoke $stack8.<java.lang.Object: boolean equals(java.lang.Object)>($stack9);

        if $stack10 == 0 goto label11;

        $r13 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack12 = $r13.<org.bytedeco.javacv.LeptonicaFrameConverter: java.nio.ByteBuffer pixBuffer>;

        $stack13 = virtualinvoke $stack12.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>(0);

        $stack14 = virtualinvoke $stack13.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        $stack15 = frame.<org.bytedeco.javacv.Frame: java.nio.Buffer[] image>;

        $stack16 = $stack15[0];

        $stack17 = virtualinvoke $stack16.<java.nio.Buffer: java.nio.Buffer position(int)>(0);

        $stack19 = (java.nio.ByteBuffer) $stack17;

        $stack18 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $stack20 = virtualinvoke $stack19.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($stack18);

        $stack21 = virtualinvoke $stack20.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        virtualinvoke $stack14.<java.nio.IntBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)>($stack21);

     label11:
        $r14 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack11 = $r14.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix>;

        return $stack11;
    }

    public org.bytedeco.javacv.Frame convert(org.bytedeco.leptonica.PIX)
    {
        org.bytedeco.leptonica.PIXCMAP $stack3;
        int $stack4, $stack23, $stack25, $stack28, $stack29, $stack31, $stack32, $stack57, $stack58, $stack59, $stack89, $stack90, $stack91, $stack95;
        LeptonicaFrameConverter this;
        org.bytedeco.javacv.Frame $stack10, $stack22, $stack24, $stack26, $stack27, $stack30, $stack55, $stack56, $stack87, $stack88, $stack5, $stack68, $stack71, $stack36, $stack38, $u1;
        java.nio.ByteBuffer $stack12, $stack13, $stack15, $stack17, $stack64, $stack66, $stack70, $stack40;
        java.nio.IntBuffer $stack14, $stack18;
        java.nio.ByteOrder $stack16, $stack33, $stack34, $stack65, $stack7, $stack8;
        boolean $stack35, $stack101, $stack6, $stack9;
        org.bytedeco.leptonica.PIX $stack41, $stack42, $stack48, $stack96, $stack99, $stack100, $stack103, pix, tempPix;
        org.bytedeco.javacpp.BytePointer $stack52, $stack53, $stack62, $stack72, $stack85, $stack63, $stack67, $u2;
        long $stack60, $stack86, $stack92;
        org.bytedeco.javacpp.Pointer $stack61;
        byte $stack93;
        java.nio.Buffer[] $stack69, $stack37;
        java.lang.AssertionError $u0;
        org.bytedeco.javacv.LeptonicaFrameConverter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        this := @this: LeptonicaFrameConverter;

        pix := @parameter0: org.bytedeco.leptonica.PIX;

        if pix != null goto label01;

        return null;

     label01:
        tempPix = null;

        $stack3 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: org.bytedeco.leptonica.PIXCMAP colormap()>();

        if $stack3 == null goto label02;

        $stack103 = staticinvoke <org.bytedeco.leptonica.global.lept: org.bytedeco.leptonica.PIX pixRemoveColormap(org.bytedeco.leptonica.PIX,int)>(pix, 2);

        pix = $stack103;

        tempPix = $stack103;

        goto label07;

     label02:
        $stack4 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int d()>();

        if $stack4 >= 8 goto label07;

        $stack95 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int d()>();

        tableswitch($stack95)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label06;
            case 4: goto label05;
            default: goto label06;
        };

     label03:
        $stack100 = staticinvoke <org.bytedeco.leptonica.global.lept: org.bytedeco.leptonica.PIX pixConvert1To8(org.bytedeco.leptonica.PIX,org.bytedeco.leptonica.PIX,byte,byte)>(null, pix, 0, -1);

        pix = $stack100;

        tempPix = $stack100;

        goto label07;

     label04:
        $stack99 = staticinvoke <org.bytedeco.leptonica.global.lept: org.bytedeco.leptonica.PIX pixConvert2To8(org.bytedeco.leptonica.PIX,byte,byte,byte,byte,int)>(pix, 0, 85, -86, -1, 0);

        pix = $stack99;

        tempPix = $stack99;

        goto label07;

     label05:
        $stack96 = staticinvoke <org.bytedeco.leptonica.global.lept: org.bytedeco.leptonica.PIX pixConvert4To8(org.bytedeco.leptonica.PIX,int)>(pix, 0);

        pix = $stack96;

        tempPix = $stack96;

        goto label07;

     label06:
        $stack101 = <org.bytedeco.javacv.LeptonicaFrameConverter: boolean $assertionsDisabled>;

        if $stack101 != 0 goto label07;

        $u0 = new java.lang.AssertionError;

        specialinvoke $u0.<java.lang.AssertionError: void <init>()>();

        throw $u0;

     label07:
        $r0 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack5 = $r0.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack6 = staticinvoke <org.bytedeco.javacv.LeptonicaFrameConverter: boolean isEqual(org.bytedeco.javacv.Frame,org.bytedeco.leptonica.PIX)>($stack5, pix);

        if $stack6 != 0 goto label14;

        $u1 = new org.bytedeco.javacv.Frame;

        specialinvoke $u1.<org.bytedeco.javacv.Frame: void <init>()>();

        $r1 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r1.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame> = $u1;

        $r2 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack22 = $r2.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack23 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int w()>();

        $stack22.<org.bytedeco.javacv.Frame: int imageWidth> = $stack23;

        $r3 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack24 = $r3.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack25 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int h()>();

        $stack24.<org.bytedeco.javacv.Frame: int imageHeight> = $stack25;

        $r4 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack26 = $r4.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack26.<org.bytedeco.javacv.Frame: int imageDepth> = 8;

        $r5 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack27 = $r5.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack28 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int d()>();

        $stack29 = $stack28 / 8;

        $stack27.<org.bytedeco.javacv.Frame: int imageChannels> = $stack29;

        $r6 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack30 = $r6.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack31 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: int wpl()>();

        $stack32 = $stack31 * 4;

        $stack30.<org.bytedeco.javacv.Frame: int imageStride> = $stack32;

        $stack33 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $stack34 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $stack35 = virtualinvoke $stack33.<java.lang.Object: boolean equals(java.lang.Object)>($stack34);

        if $stack35 == 0 goto label11;

        $r7 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack52 = $r7.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData>;

        if $stack52 == null goto label08;

        $r8 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack85 = $r8.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData>;

        $stack86 = virtualinvoke $stack85.<org.bytedeco.javacpp.BytePointer: long capacity()>();

        $r9 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack87 = $r9.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack90 = $stack87.<org.bytedeco.javacv.Frame: int imageHeight>;

        $r10 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack88 = $r10.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack89 = $stack88.<org.bytedeco.javacv.Frame: int imageStride>;

        $stack91 = $stack90 * $stack89;

        $stack92 = (long) $stack91;

        $stack93 = $stack86 cmp $stack92;

        if $stack93 >= 0 goto label10;

     label08:
        $r11 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack53 = $r11.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData>;

        if $stack53 == null goto label09;

        $r12 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack72 = $r12.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData>;

        virtualinvoke $stack72.<org.bytedeco.javacpp.BytePointer: boolean releaseReference()>();

     label09:
        $u2 = new org.bytedeco.javacpp.BytePointer;

        $r13 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack55 = $r13.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack58 = $stack55.<org.bytedeco.javacv.Frame: int imageHeight>;

        $r14 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack56 = $r14.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack57 = $stack56.<org.bytedeco.javacv.Frame: int imageStride>;

        $stack59 = $stack58 * $stack57;

        $stack60 = (long) $stack59;

        specialinvoke $u2.<org.bytedeco.javacpp.BytePointer: void <init>(long)>($stack60);

        $stack61 = virtualinvoke $u2.<org.bytedeco.javacpp.BytePointer: org.bytedeco.javacpp.Pointer retainReference()>();

        $stack62 = (org.bytedeco.javacpp.BytePointer) $stack61;

        $r15 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r15.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData> = $stack62;

     label10:
        $r16 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack63 = $r16.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData>;

        $stack64 = virtualinvoke $stack63.<org.bytedeco.javacpp.BytePointer: java.nio.ByteBuffer asByteBuffer()>();

        $stack65 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $stack66 = virtualinvoke $stack64.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($stack65);

        $r17 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r17.<org.bytedeco.javacv.LeptonicaFrameConverter: java.nio.ByteBuffer frameBuffer> = $stack66;

        $r18 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack68 = $r18.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $r19 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack67 = $r19.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData>;

        $stack68.<org.bytedeco.javacv.Frame: java.lang.Object opaque> = $stack67;

        $r20 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack71 = $r20.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack69 = newarray (java.nio.Buffer)[1];

        $r21 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack70 = $r21.<org.bytedeco.javacv.LeptonicaFrameConverter: java.nio.ByteBuffer frameBuffer>;

        $stack69[0] = $stack70;

        $stack71.<org.bytedeco.javacv.Frame: java.nio.Buffer[] image> = $stack69;

        goto label14;

     label11:
        if tempPix == null goto label13;

        $r22 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack41 = $r22.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix>;

        if $stack41 == null goto label12;

        $r23 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack48 = $r23.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix>;

        virtualinvoke $stack48.<org.bytedeco.leptonica.PIX: boolean releaseReference()>();

     label12:
        $stack42 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: org.bytedeco.leptonica.PIX clone()>();

        pix = $stack42;

        $r24 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r24.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix> = $stack42;

     label13:
        $r25 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack36 = $r25.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack36.<org.bytedeco.javacv.Frame: java.lang.Object opaque> = pix;

        $r26 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack38 = $r26.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        $stack37 = newarray (java.nio.Buffer)[1];

        $stack40 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: java.nio.ByteBuffer createBuffer()>();

        $stack37[0] = $stack40;

        $stack38.<org.bytedeco.javacv.Frame: java.nio.Buffer[] image> = $stack37;

     label14:
        $stack7 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();

        $stack8 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        $stack9 = virtualinvoke $stack7.<java.lang.Object: boolean equals(java.lang.Object)>($stack8);

        if $stack9 == 0 goto label15;

        $r27 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack12 = $r27.<org.bytedeco.javacv.LeptonicaFrameConverter: java.nio.ByteBuffer frameBuffer>;

        $stack13 = virtualinvoke $stack12.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>(0);

        $stack14 = virtualinvoke $stack13.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        $stack15 = virtualinvoke pix.<org.bytedeco.leptonica.PIX: java.nio.ByteBuffer createBuffer()>();

        $stack16 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

        $stack17 = virtualinvoke $stack15.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($stack16);

        $stack18 = virtualinvoke $stack17.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        virtualinvoke $stack14.<java.nio.IntBuffer: java.nio.IntBuffer put(java.nio.IntBuffer)>($stack18);

     label15:
        if tempPix == null goto label16;

        staticinvoke <org.bytedeco.leptonica.global.lept: void pixDestroy(org.bytedeco.leptonica.PIX)>(tempPix);

     label16:
        $r28 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack10 = $r28.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame frame>;

        return $stack10;
    }

    public void close()
    {
        LeptonicaFrameConverter this;
        org.bytedeco.leptonica.PIX $stack1, $stack9;
        org.bytedeco.javacpp.BytePointer $stack2, $stack3, $stack4, $stack6;
        org.bytedeco.javacv.LeptonicaFrameConverter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: LeptonicaFrameConverter;

        specialinvoke this.<org.bytedeco.javacv.FrameConverter: void close()>();

        $r0 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack1 = $r0.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix>;

        if $stack1 == null goto label1;

        $r1 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack9 = $r1.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix>;

        virtualinvoke $stack9.<org.bytedeco.leptonica.PIX: boolean releaseReference()>();

        $r2 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r2.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX pix> = null;

     label1:
        $r3 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack2 = $r3.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer pixData>;

        if $stack2 == null goto label2;

        $r4 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack6 = $r4.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer pixData>;

        virtualinvoke $stack6.<org.bytedeco.javacpp.BytePointer: boolean releaseReference()>();

        $r5 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r5.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer pixData> = null;

     label2:
        $r6 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack3 = $r6.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData>;

        if $stack3 == null goto label3;

        $r7 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack4 = $r7.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData>;

        virtualinvoke $stack4.<org.bytedeco.javacpp.BytePointer: boolean releaseReference()>();

        $r8 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $r8.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacpp.BytePointer frameData> = null;

     label3:
        return;
    }

    public volatile java.lang.Object convert(org.bytedeco.javacv.Frame)
    {
        LeptonicaFrameConverter this;
        org.bytedeco.javacv.Frame l1;
        org.bytedeco.leptonica.PIX $stack2;
        org.bytedeco.javacv.LeptonicaFrameConverter $r0;

        this := @this: LeptonicaFrameConverter;

        l1 := @parameter0: org.bytedeco.javacv.Frame;

        $r0 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack2 = virtualinvoke $r0.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.leptonica.PIX convert(org.bytedeco.javacv.Frame)>(l1);

        return $stack2;
    }

    public volatile org.bytedeco.javacv.Frame convert(java.lang.Object)
    {
        LeptonicaFrameConverter this;
        java.lang.Object l1;
        org.bytedeco.leptonica.PIX $stack2;
        org.bytedeco.javacv.Frame $stack3;
        org.bytedeco.javacv.LeptonicaFrameConverter $r0;

        this := @this: LeptonicaFrameConverter;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.bytedeco.leptonica.PIX) l1;

        $r0 = (org.bytedeco.javacv.LeptonicaFrameConverter) this;

        $stack3 = virtualinvoke $r0.<org.bytedeco.javacv.LeptonicaFrameConverter: org.bytedeco.javacv.Frame convert(org.bytedeco.leptonica.PIX)>($stack2);

        return $stack3;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack3;

        $stack0 = class "Lorg/bytedeco/javacv/LeptonicaFrameConverter;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        <org.bytedeco.javacv.LeptonicaFrameConverter: boolean $assertionsDisabled> = $stack3;

        staticinvoke <org.bytedeco.javacpp.Loader: java.lang.String load(java.lang.Class)>(class "Lorg/bytedeco/leptonica/global/lept;");

        return;
    }
}
