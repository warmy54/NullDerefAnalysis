public class LifecycleDebugLogger extends java.lang.Object
{
    private org.codehaus.plexus.logging.Logger logger;

    public void <init>()
    {
        LifecycleDebugLogger this;

        this := @this: LifecycleDebugLogger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.codehaus.plexus.logging.Logger)
    {
        LifecycleDebugLogger this;
        org.codehaus.plexus.logging.Logger logger;
        org.apache.maven.lifecycle.internal.LifecycleDebugLogger $r0;

        this := @this: LifecycleDebugLogger;

        logger := @parameter0: org.codehaus.plexus.logging.Logger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $r0.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger> = logger;

        return;
    }

    public void debug(java.lang.String)
    {
        LifecycleDebugLogger this;
        java.lang.String s;
        org.codehaus.plexus.logging.Logger $stack2;
        org.apache.maven.lifecycle.internal.LifecycleDebugLogger $r0;

        this := @this: LifecycleDebugLogger;

        s := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack2 = $r0.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        interfaceinvoke $stack2.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>(s);

        return;
    }

    public void info(java.lang.String)
    {
        LifecycleDebugLogger this;
        java.lang.String s;
        org.codehaus.plexus.logging.Logger $stack2;
        org.apache.maven.lifecycle.internal.LifecycleDebugLogger $r0;

        this := @this: LifecycleDebugLogger;

        s := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack2 = $r0.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        interfaceinvoke $stack2.<org.codehaus.plexus.logging.Logger: void info(java.lang.String)>(s);

        return;
    }

    public void debugReactorPlan(org.apache.maven.lifecycle.internal.ProjectBuildList)
    {
        LifecycleDebugLogger this;
        org.codehaus.plexus.logging.Logger $stack4, $stack6, $stack9, $stack12, $stack19, $stack26, $stack34;
        boolean $stack5, $stack8, $stack29, $stack32;
        org.apache.maven.lifecycle.internal.ProjectBuildList projectBuilds;
        java.util.Iterator it;
        java.lang.Object $stack10;
        org.apache.maven.lifecycle.internal.ProjectSegment projectBuild;
        java.lang.StringBuilder $stack13, $stack16, $stack20, $stack23, $stack27, $stack30, $u0, $u1, $u2;
        org.apache.maven.project.MavenProject $stack14;
        java.lang.String $stack15, $stack17, $stack24, $stack31, $stack35;
        org.apache.maven.lifecycle.internal.TaskSegment $stack21, $stack28;
        java.util.List $stack22;
        org.apache.maven.lifecycle.internal.LifecycleDebugLogger $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: LifecycleDebugLogger;

        projectBuilds := @parameter0: org.apache.maven.lifecycle.internal.ProjectBuildList;

        $r0 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack4 = $r0.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $stack5 = interfaceinvoke $stack4.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack5 != 0 goto label1;

        return;

     label1:
        $r1 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack6 = $r1.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        interfaceinvoke $stack6.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>("=== REACTOR BUILD PLAN ================================================");

        it = virtualinvoke projectBuilds.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.Iterator iterator()>();

     label2:
        $stack8 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label6;

        $stack10 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();

        projectBuild = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack10;

        $r2 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack12 = $r2.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Project: ");

        $stack14 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        $stack15 = virtualinvoke $stack14.<org.apache.maven.project.MavenProject: java.lang.String getId()>();

        $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack12.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack17);

        $r3 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack19 = $r3.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tasks:   ");

        $stack21 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.lifecycle.internal.TaskSegment getTaskSegment()>();

        $stack22 = virtualinvoke $stack21.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $stack23 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack22);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack19.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack24);

        $r4 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack26 = $r4.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack27 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Style:   ");

        $stack28 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.lifecycle.internal.TaskSegment getTaskSegment()>();

        $stack29 = virtualinvoke $stack28.<org.apache.maven.lifecycle.internal.TaskSegment: boolean isAggregating()>();

        if $stack29 == 0 goto label3;

        $stack35 = "Aggregating";

        goto label4;

     label3:
        $stack35 = "Regular";

     label4:
        $stack30 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35);

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack26.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack31);

        $stack32 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();

        if $stack32 == 0 goto label5;

        $r5 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack34 = $r5.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        interfaceinvoke $stack34.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>("-----------------------------------------------------------------------");

     label5:
        goto label2;

     label6:
        $r6 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack9 = $r6.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        interfaceinvoke $stack9.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>("=======================================================================");

        return;
    }

    public void debugProjectPlan(org.apache.maven.project.MavenProject, org.apache.maven.lifecycle.MavenExecutionPlan)
    {
        LifecycleDebugLogger this;
        org.codehaus.plexus.logging.Logger $stack5, $stack7, $stack9, $stack16, $stack22, $stack29;
        boolean $stack6, $stack28;
        java.lang.StringBuilder $stack10, $stack12, $stack17, $stack19, $stack23, $stack25, $u0, $u1, $u2;
        org.apache.maven.project.MavenProject currentProject;
        java.lang.String $stack11, $stack13, $stack20, $stack26;
        org.apache.maven.lifecycle.MavenExecutionPlan executionPlan;
        java.util.List $stack14, $stack18, $stack24;
        java.util.Iterator l3;
        java.lang.Object $stack30;
        org.apache.maven.lifecycle.internal.ExecutionPlanItem mojoExecution;
        org.apache.maven.plugin.MojoExecution $stack31;
        org.apache.maven.lifecycle.internal.LifecycleDebugLogger $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: LifecycleDebugLogger;

        currentProject := @parameter0: org.apache.maven.project.MavenProject;

        executionPlan := @parameter1: org.apache.maven.lifecycle.MavenExecutionPlan;

        $r0 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack5 = $r0.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $stack6 = interfaceinvoke $stack5.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack6 != 0 goto label1;

        return;

     label1:
        $r1 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack7 = $r1.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        interfaceinvoke $stack7.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>("=== PROJECT BUILD PLAN ================================================");

        $r2 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack9 = $r2.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Project:       ");

        $stack11 = staticinvoke <org.apache.maven.lifecycle.internal.builder.BuilderCommon: java.lang.String getKey(org.apache.maven.project.MavenProject)>(currentProject);

        $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack9.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack13);

        $stack14 = virtualinvoke executionPlan.<org.apache.maven.lifecycle.MavenExecutionPlan: java.util.List getMojoExecutions()>();

        $r3 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        specialinvoke $r3.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: void debugDependencyRequirements(java.util.List)>($stack14);

        $r4 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack16 = $r4.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Repositories (dependencies): ");

        $stack18 = virtualinvoke currentProject.<org.apache.maven.project.MavenProject: java.util.List getRemoteProjectRepositories()>();

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack18);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack16.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack20);

        $r5 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack22 = $r5.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack23 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Repositories (plugins)     : ");

        $stack24 = virtualinvoke currentProject.<org.apache.maven.project.MavenProject: java.util.List getRemotePluginRepositories()>();

        $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack22.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack26);

        l3 = virtualinvoke executionPlan.<org.apache.maven.lifecycle.MavenExecutionPlan: java.util.Iterator iterator()>();

     label2:
        $stack28 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack28 == 0 goto label3;

        $stack30 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        mojoExecution = (org.apache.maven.lifecycle.internal.ExecutionPlanItem) $stack30;

        $stack31 = virtualinvoke mojoExecution.<org.apache.maven.lifecycle.internal.ExecutionPlanItem: org.apache.maven.plugin.MojoExecution getMojoExecution()>();

        $r6 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        specialinvoke $r6.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: void debugMojoExecution(org.apache.maven.plugin.MojoExecution)>($stack31);

        goto label2;

     label3:
        $r7 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack29 = $r7.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        interfaceinvoke $stack29.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>("=======================================================================");

        return;
    }

    private void debugMojoExecution(org.apache.maven.plugin.MojoExecution)
    {
        org.apache.maven.plugin.MojoExecution mojoExecution, forkedExecution;
        java.lang.String $stack9, $stack12, $stack15, $stack18, $stack21, mojoExecId, $stack32, $stack39, $stack45, $stack66, $stack71, $stack82, $stack87, $stack46;
        java.lang.StringBuilder $stack10, $stack11, $stack13, $stack14, $stack16, $stack17, $stack19, $stack20, $stack22, $stack23, $stack30, $stack31, $stack35, $stack38, $stack42, $stack44, $stack64, $stack67, $stack68, $stack69, $stack70, $stack80, $stack83, $stack84, $stack85, $stack86, $u0, $u1, $u2, $u3, $u4, $u5;
        java.util.Map forkedExecutions;
        boolean $stack26, $stack37, $stack52, $stack77;
        LifecycleDebugLogger this;
        org.codehaus.plexus.logging.Logger $stack27, $stack29, $stack34, $stack41, $stack63, $stack79;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack36;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack43;
        java.util.Set $stack50;
        java.util.Iterator l4, l6;
        java.lang.Object $stack61, $stack65, $stack72, $stack74, $stack81, $stack89;
        java.util.Map$Entry fork;
        java.util.List $stack73, $stack75;
        org.apache.maven.lifecycle.internal.LifecycleDebugLogger $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: LifecycleDebugLogger;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.lang.String getGroupId()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack12 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.lang.String getArtifactId()>();

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack15 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.lang.String getVersion()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack18 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.lang.String getGoal()>();

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $stack21 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.lang.String getExecutionId()>();

        $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        mojoExecId = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        forkedExecutions = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.util.Map getForkedExecutions()>();

        $stack26 = interfaceinvoke forkedExecutions.<java.util.Map: boolean isEmpty()>();

        if $stack26 != 0 goto label4;

        $stack50 = interfaceinvoke forkedExecutions.<java.util.Map: java.util.Set entrySet()>();

        l4 = interfaceinvoke $stack50.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack52 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack52 == 0 goto label4;

        $stack61 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        fork = (java.util.Map$Entry) $stack61;

        $r0 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack63 = $r0.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack64 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- init fork of ");

        $stack65 = interfaceinvoke fork.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack66 = (java.lang.String) $stack65;

        $stack67 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack66);

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $stack69 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mojoExecId);

        $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ---");

        $stack71 = virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack63.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack71);

        $stack72 = interfaceinvoke fork.<java.util.Map$Entry: java.lang.Object getValue()>();

        $stack73 = (java.util.List) $stack72;

        $r1 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        specialinvoke $r1.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: void debugDependencyRequirements(java.util.List)>($stack73);

        $stack74 = interfaceinvoke fork.<java.util.Map$Entry: java.lang.Object getValue()>();

        $stack75 = (java.util.List) $stack74;

        l6 = interfaceinvoke $stack75.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack77 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack77 == 0 goto label3;

        $stack89 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        forkedExecution = (org.apache.maven.plugin.MojoExecution) $stack89;

        $r2 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        specialinvoke $r2.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: void debugMojoExecution(org.apache.maven.plugin.MojoExecution)>(forkedExecution);

        goto label2;

     label3:
        $r3 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack79 = $r3.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack80 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--- exit fork of ");

        $stack81 = interfaceinvoke fork.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack82 = (java.lang.String) $stack81;

        $stack83 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack82);

        $stack84 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $stack85 = virtualinvoke $stack84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mojoExecId);

        $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ---");

        $stack87 = virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack79.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack87);

        goto label1;

     label4:
        $r4 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack27 = $r4.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        interfaceinvoke $stack27.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>("-----------------------------------------------------------------------");

        $r5 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack29 = $r5.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack30 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Goal:          ");

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(mojoExecId);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack29.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack32);

        $r6 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack34 = $r6.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack35 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Style:         ");

        $stack36 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        $stack37 = virtualinvoke $stack36.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isAggregator()>();

        if $stack37 == 0 goto label5;

        $stack46 = "Aggregating";

        goto label6;

     label5:
        $stack46 = "Regular";

     label6:
        $stack38 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack34.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack39);

        $r7 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack41 = $r7.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack42 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Configuration: ");

        $stack43 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: org.codehaus.plexus.util.xml.Xpp3Dom getConfiguration()>();

        $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack43);

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack41.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack45);

        return;
    }

    private void debugDependencyRequirements(java.util.List)
    {
        java.util.List mojoExecutions;
        java.util.Iterator l4;
        boolean $stack12, $stack26, $stack28;
        LifecycleDebugLogger this;
        org.codehaus.plexus.logging.Logger $stack14, $stack19;
        java.lang.StringBuilder $stack15, $stack16, $stack20, $stack21, $u2, $u3;
        java.lang.String $stack17, $stack22, scopeToCollect, scopeToResolve;
        java.lang.Object $stack23;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.plugin.descriptor.MojoDescriptor mojoDescriptor;
        java.util.TreeSet $u0, $u1;
        org.apache.maven.lifecycle.internal.LifecycleDebugLogger $r0, $r1;

        this := @this: LifecycleDebugLogger;

        mojoExecutions := @parameter0: java.util.List;

        $u0 = new java.util.TreeSet;

        specialinvoke $u0.<java.util.TreeSet: void <init>()>();

        $u1 = new java.util.TreeSet;

        specialinvoke $u1.<java.util.TreeSet: void <init>()>();

        l4 = interfaceinvoke mojoExecutions.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack12 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label4;

        $stack23 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        mojoExecution = (org.apache.maven.plugin.MojoExecution) $stack23;

        mojoDescriptor = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        scopeToCollect = virtualinvoke mojoDescriptor.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getDependencyCollectionRequired()>();

        $stack26 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(scopeToCollect);

        if $stack26 == 0 goto label2;

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>(scopeToCollect);

     label2:
        scopeToResolve = virtualinvoke mojoDescriptor.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getDependencyResolutionRequired()>();

        $stack28 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(scopeToResolve);

        if $stack28 == 0 goto label3;

        interfaceinvoke $u1.<java.util.Set: boolean add(java.lang.Object)>(scopeToResolve);

     label3:
        goto label1;

     label4:
        $r0 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack14 = $r0.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack15 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dependencies (collect): ");

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u0);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack14.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack17);

        $r1 = (org.apache.maven.lifecycle.internal.LifecycleDebugLogger) this;

        $stack19 = $r1.<org.apache.maven.lifecycle.internal.LifecycleDebugLogger: org.codehaus.plexus.logging.Logger logger>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack20 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dependencies (resolve): ");

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u1);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack19.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack22);

        return;
    }
}
