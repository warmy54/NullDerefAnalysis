class LifecycleDependencyResolver$ReactorDependencyFilter extends java.lang.Object implements org.eclipse.aether.graph.DependencyFilter
{
    private java.util.Set keys;

    void <init>(java.util.Collection)
    {
        LifecycleDependencyResolver$ReactorDependencyFilter this;
        java.util.Collection artifacts;
        java.util.Iterator l2;
        boolean $stack7;
        java.lang.Object $stack8;
        org.apache.maven.artifact.Artifact artifact;
        java.lang.String key;
        java.util.Set $stack10;
        java.util.HashSet $u0;
        org.apache.maven.lifecycle.internal.LifecycleDependencyResolver$ReactorDependencyFilter $r0, $r1;

        this := @this: LifecycleDependencyResolver$ReactorDependencyFilter;

        artifacts := @parameter0: java.util.Collection;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.HashSet;

        specialinvoke $u0.<java.util.HashSet: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.LifecycleDependencyResolver$ReactorDependencyFilter) this;

        $r0.<org.apache.maven.lifecycle.internal.LifecycleDependencyResolver$ReactorDependencyFilter: java.util.Set keys> = $u0;

        l2 = interfaceinvoke artifacts.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label2;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        artifact = (org.apache.maven.artifact.Artifact) $stack8;

        key = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String key(org.apache.maven.artifact.Artifact)>(artifact);

        $r1 = (org.apache.maven.lifecycle.internal.LifecycleDependencyResolver$ReactorDependencyFilter) this;

        $stack10 = $r1.<org.apache.maven.lifecycle.internal.LifecycleDependencyResolver$ReactorDependencyFilter: java.util.Set keys>;

        interfaceinvoke $stack10.<java.util.Set: boolean add(java.lang.Object)>(key);

        goto label1;

     label2:
        return;
    }

    public boolean accept(org.eclipse.aether.graph.DependencyNode, java.util.List)
    {
        org.eclipse.aether.graph.DependencyNode node;
        org.eclipse.aether.graph.Dependency dependency;
        org.eclipse.aether.artifact.Artifact a;
        java.lang.String $stack8, $stack9, $stack10, key;
        LifecycleDependencyResolver$ReactorDependencyFilter this;
        java.util.Set $stack12;
        boolean $stack13, $stack14;
        java.util.List parents;
        org.apache.maven.lifecycle.internal.LifecycleDependencyResolver$ReactorDependencyFilter $r0;

        this := @this: LifecycleDependencyResolver$ReactorDependencyFilter;

        node := @parameter0: org.eclipse.aether.graph.DependencyNode;

        parents := @parameter1: java.util.List;

        dependency = interfaceinvoke node.<org.eclipse.aether.graph.DependencyNode: org.eclipse.aether.graph.Dependency getDependency()>();

        if dependency == null goto label3;

        a = virtualinvoke dependency.<org.eclipse.aether.graph.Dependency: org.eclipse.aether.artifact.Artifact getArtifact()>();

        $stack8 = interfaceinvoke a.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>();

        $stack9 = interfaceinvoke a.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack10 = interfaceinvoke a.<org.eclipse.aether.artifact.Artifact: java.lang.String getVersion()>();

        key = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String key(java.lang.String,java.lang.String,java.lang.String)>($stack8, $stack9, $stack10);

        $r0 = (org.apache.maven.lifecycle.internal.LifecycleDependencyResolver$ReactorDependencyFilter) this;

        $stack12 = $r0.<org.apache.maven.lifecycle.internal.LifecycleDependencyResolver$ReactorDependencyFilter: java.util.Set keys>;

        $stack13 = interfaceinvoke $stack12.<java.util.Set: boolean contains(java.lang.Object)>(key);

        if $stack13 != 0 goto label1;

        $stack14 = 1;

        goto label2;

     label1:
        $stack14 = 0;

     label2:
        return $stack14;

     label3:
        return 0;
    }
}
