public class LifecycleExecutionException extends java.lang.Exception
{
    private org.apache.maven.project.MavenProject project;

    public void <init>(java.lang.String)
    {
        LifecycleExecutionException this;
        java.lang.String message;

        this := @this: LifecycleExecutionException;

        message := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(message);

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        LifecycleExecutionException this;
        java.lang.Throwable cause;

        this := @this: LifecycleExecutionException;

        cause := @parameter0: java.lang.Throwable;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.Throwable)>(cause);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        LifecycleExecutionException this;
        java.lang.String message;
        java.lang.Throwable cause;

        this := @this: LifecycleExecutionException;

        message := @parameter0: java.lang.String;

        cause := @parameter1: java.lang.Throwable;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(message, cause);

        return;
    }

    public void <init>(java.lang.String, org.apache.maven.project.MavenProject)
    {
        LifecycleExecutionException this;
        java.lang.String message;
        org.apache.maven.project.MavenProject project;
        org.apache.maven.lifecycle.LifecycleExecutionException $r0;

        this := @this: LifecycleExecutionException;

        message := @parameter0: java.lang.String;

        project := @parameter1: org.apache.maven.project.MavenProject;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(message);

        $r0 = (org.apache.maven.lifecycle.LifecycleExecutionException) this;

        $r0.<org.apache.maven.lifecycle.LifecycleExecutionException: org.apache.maven.project.MavenProject project> = project;

        return;
    }

    public void <init>(java.lang.String, org.apache.maven.plugin.MojoExecution, org.apache.maven.project.MavenProject)
    {
        LifecycleExecutionException this;
        java.lang.String message;
        org.apache.maven.project.MavenProject project;
        org.apache.maven.plugin.MojoExecution execution;
        org.apache.maven.lifecycle.LifecycleExecutionException $r0;

        this := @this: LifecycleExecutionException;

        message := @parameter0: java.lang.String;

        execution := @parameter1: org.apache.maven.plugin.MojoExecution;

        project := @parameter2: org.apache.maven.project.MavenProject;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(message);

        $r0 = (org.apache.maven.lifecycle.LifecycleExecutionException) this;

        $r0.<org.apache.maven.lifecycle.LifecycleExecutionException: org.apache.maven.project.MavenProject project> = project;

        return;
    }

    public void <init>(java.lang.String, org.apache.maven.plugin.MojoExecution, org.apache.maven.project.MavenProject, java.lang.Throwable)
    {
        LifecycleExecutionException this;
        java.lang.String message;
        java.lang.Throwable cause;
        org.apache.maven.project.MavenProject project;
        org.apache.maven.plugin.MojoExecution execution;
        org.apache.maven.lifecycle.LifecycleExecutionException $r0;

        this := @this: LifecycleExecutionException;

        message := @parameter0: java.lang.String;

        execution := @parameter1: org.apache.maven.plugin.MojoExecution;

        project := @parameter2: org.apache.maven.project.MavenProject;

        cause := @parameter3: java.lang.Throwable;

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(message, cause);

        $r0 = (org.apache.maven.lifecycle.LifecycleExecutionException) this;

        $r0.<org.apache.maven.lifecycle.LifecycleExecutionException: org.apache.maven.project.MavenProject project> = project;

        return;
    }

    public void <init>(org.apache.maven.plugin.MojoExecution, org.apache.maven.project.MavenProject, java.lang.Throwable)
    {
        LifecycleExecutionException this;
        org.apache.maven.plugin.MojoExecution execution;
        org.apache.maven.project.MavenProject project;
        java.lang.Throwable cause;
        java.lang.String $stack4;
        org.apache.maven.lifecycle.LifecycleExecutionException $r0;

        this := @this: LifecycleExecutionException;

        execution := @parameter0: org.apache.maven.plugin.MojoExecution;

        project := @parameter1: org.apache.maven.project.MavenProject;

        cause := @parameter2: java.lang.Throwable;

        $stack4 = staticinvoke <org.apache.maven.lifecycle.LifecycleExecutionException: java.lang.String createMessage(org.apache.maven.plugin.MojoExecution,org.apache.maven.project.MavenProject,java.lang.Throwable)>(execution, project, cause);

        $r0 = (org.apache.maven.lifecycle.LifecycleExecutionException) this;

        specialinvoke $r0.<org.apache.maven.lifecycle.LifecycleExecutionException: void <init>(java.lang.String,org.apache.maven.plugin.MojoExecution,org.apache.maven.project.MavenProject,java.lang.Throwable)>($stack4, execution, project, cause);

        return;
    }

    public org.apache.maven.project.MavenProject getProject()
    {
        LifecycleExecutionException this;
        org.apache.maven.project.MavenProject $stack1;
        org.apache.maven.lifecycle.LifecycleExecutionException $r0;

        this := @this: LifecycleExecutionException;

        $r0 = (org.apache.maven.lifecycle.LifecycleExecutionException) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.LifecycleExecutionException: org.apache.maven.project.MavenProject project>;

        return $stack1;
    }

    private static java.lang.String createMessage(org.apache.maven.plugin.MojoExecution, org.apache.maven.project.MavenProject, java.lang.Throwable)
    {
        org.apache.maven.shared.utils.logging.MessageBuilder buffer, $stack7, $stack32;
        org.apache.maven.plugin.MojoExecution execution;
        org.apache.maven.project.MavenProject project;
        java.lang.Throwable cause;
        java.lang.String $stack6, $stack8, $stack12, $stack18, $stack21, $stack24, $stack27, $stack29, $stack35, $stack38;
        java.lang.Character $stack15, $stack31;
        java.lang.StringBuilder $stack17, $stack19, $stack20, $stack22, $stack23, $stack25, $stack26, $stack28, $stack33, $stack34, $stack36, $stack37;

        execution := @parameter0: org.apache.maven.plugin.MojoExecution;

        project := @parameter1: org.apache.maven.project.MavenProject;

        cause := @parameter2: java.lang.Throwable;

        buffer = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.MessageBuilder buffer(int)>(256);

        interfaceinvoke buffer.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder a(java.lang.CharSequence)>("Failed to execute goal");

        if execution == null goto label1;

        $stack15 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(32);

        interfaceinvoke buffer.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder a(java.lang.Object)>($stack15);

        $stack17 = new java.lang.StringBuilder;

        specialinvoke $stack17.<java.lang.StringBuilder: void <init>()>();

        $stack18 = virtualinvoke execution.<org.apache.maven.plugin.MojoExecution: java.lang.String getGroupId()>();

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack21 = virtualinvoke execution.<org.apache.maven.plugin.MojoExecution: java.lang.String getArtifactId()>();

        $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack24 = virtualinvoke execution.<org.apache.maven.plugin.MojoExecution: java.lang.String getVersion()>();

        $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack27 = virtualinvoke execution.<org.apache.maven.plugin.MojoExecution: java.lang.String getGoal()>();

        $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke buffer.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder mojo(java.lang.Object)>($stack29);

        $stack31 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(32);

        $stack32 = interfaceinvoke buffer.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder a(java.lang.Object)>($stack31);

        $stack33 = new java.lang.StringBuilder;

        specialinvoke $stack33.<java.lang.StringBuilder: void <init>()>();

        $stack34 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $stack35 = virtualinvoke execution.<org.apache.maven.plugin.MojoExecution: java.lang.String getExecutionId()>();

        $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35);

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack32.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder strong(java.lang.Object)>($stack38);

     label1:
        if project == null goto label2;

        interfaceinvoke buffer.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder a(java.lang.CharSequence)>(" on project ");

        $stack12 = virtualinvoke project.<org.apache.maven.project.MavenProject: java.lang.String getArtifactId()>();

        interfaceinvoke buffer.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder project(java.lang.Object)>($stack12);

     label2:
        if cause == null goto label3;

        $stack7 = interfaceinvoke buffer.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder a(java.lang.CharSequence)>(": ");

        $stack8 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>();

        interfaceinvoke $stack7.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder failure(java.lang.Object)>($stack8);

     label3:
        $stack6 = virtualinvoke buffer.<java.lang.Object: java.lang.String toString()>();

        return $stack6;
    }
}
