public class LifecycleExecutionPlanCalculatorStub extends java.lang.Object implements org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator
{
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor PRE_CLEAN;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor CLEAN;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor POST_CLEAN;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor VALIDATE;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor INITIALIZE;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor TEST_COMPILE;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor PROCESS_TEST_RESOURCES;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor PROCESS_RESOURCES;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor COMPILE;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor TEST;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor PACKAGE;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor INSTALL;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor PRE_SITE;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor SITE;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor POST_SITE;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor SITE_DEPLOY;
    public static final org.apache.maven.plugin.descriptor.MojoDescriptor WRAPPER;

    public void <init>()
    {
        LifecycleExecutionPlanCalculatorStub this;

        this := @this: LifecycleExecutionPlanCalculatorStub;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public int getNumberOfExceutions(org.apache.maven.lifecycle.internal.ProjectBuildList) throws org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException
    {
        org.apache.maven.lifecycle.internal.ProjectBuildList projectBuildList;
        java.util.Iterator l3;
        boolean $stack7;
        java.lang.Object $stack8;
        org.apache.maven.lifecycle.internal.ProjectSegment projectBuild;
        LifecycleExecutionPlanCalculatorStub this;
        org.apache.maven.execution.MavenSession $stack9;
        org.apache.maven.project.MavenProject $stack10;
        org.apache.maven.lifecycle.internal.TaskSegment $stack11;
        java.util.List $stack12;
        org.apache.maven.lifecycle.MavenExecutionPlan plan;
        int $stack14, result;
        org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub $r0;

        this := @this: LifecycleExecutionPlanCalculatorStub;

        projectBuildList := @parameter0: org.apache.maven.lifecycle.internal.ProjectBuildList;

        result = 0;

        l3 = virtualinvoke projectBuildList.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label2;

        $stack8 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        projectBuild = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack8;

        $stack9 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.execution.MavenSession getSession()>();

        $stack10 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        $stack11 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.lifecycle.internal.TaskSegment getTaskSegment()>();

        $stack12 = virtualinvoke $stack11.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $r0 = (org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub) this;

        plan = virtualinvoke $r0.<org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession,org.apache.maven.project.MavenProject,java.util.List)>($stack9, $stack10, $stack12);

        $stack14 = virtualinvoke plan.<org.apache.maven.lifecycle.MavenExecutionPlan: int size()>();

        result = result + $stack14;

        goto label1;

     label2:
        return result;
    }

    public int getNumberOfExecutions(org.apache.maven.lifecycle.internal.ProjectBuildList) throws org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException
    {
        LifecycleExecutionPlanCalculatorStub this;
        org.apache.maven.lifecycle.internal.ProjectBuildList projectBuildList;
        int $stack2;
        org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub $r0;

        this := @this: LifecycleExecutionPlanCalculatorStub;

        projectBuildList := @parameter0: org.apache.maven.lifecycle.internal.ProjectBuildList;

        $r0 = (org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: int getNumberOfExceutions(org.apache.maven.lifecycle.internal.ProjectBuildList)>(projectBuildList);

        return $stack2;
    }

    public void calculateForkedExecutions(org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession) throws org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        LifecycleExecutionPlanCalculatorStub this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.execution.MavenSession session;

        this := @this: LifecycleExecutionPlanCalculatorStub;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        session := @parameter1: org.apache.maven.execution.MavenSession;

        return;
    }

    public org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, java.util.List, boolean) throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.lifecycle.LifecycleNotFoundException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        org.apache.maven.project.MavenProject project, $stack6, $stack8;
        boolean $stack7, $stack9, setup;
        java.util.ArrayList $stack10;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack11, $stack14;
        org.apache.maven.plugin.MojoExecution $stack12, $stack15;
        org.apache.maven.lifecycle.MavenExecutionPlan $stack17, $stack18, $stack19;
        LifecycleExecutionPlanCalculatorStub this;
        org.apache.maven.execution.MavenSession session;
        java.util.List tasks;

        this := @this: LifecycleExecutionPlanCalculatorStub;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        project := @parameter1: org.apache.maven.project.MavenProject;

        tasks := @parameter2: java.util.List;

        setup := @parameter3: boolean;

        $stack6 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        $stack7 = virtualinvoke project.<org.apache.maven.project.MavenProject: boolean equals(java.lang.Object)>($stack6);

        if $stack7 == 0 goto label1;

        $stack19 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.lifecycle.MavenExecutionPlan getProjectAExceutionPlan()>();

        return $stack19;

     label1:
        $stack8 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B>;

        $stack9 = virtualinvoke project.<org.apache.maven.project.MavenProject: boolean equals(java.lang.Object)>($stack8);

        if $stack9 == 0 goto label2;

        $stack18 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.lifecycle.MavenExecutionPlan getProjectBExecutionPlan()>();

        return $stack18;

     label2:
        $stack10 = new java.util.ArrayList;

        specialinvoke $stack10.<java.util.ArrayList: void <init>()>();

        $stack11 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PROCESS_RESOURCES>;

        $stack12 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("resources", "default-resources", $stack11);

        interfaceinvoke $stack10.<java.util.List: boolean add(java.lang.Object)>($stack12);

        $stack14 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor COMPILE>;

        $stack15 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("compile", "default-compile", $stack14);

        interfaceinvoke $stack10.<java.util.List: boolean add(java.lang.Object)>($stack15);

        $stack17 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.lifecycle.MavenExecutionPlan createExecutionPlan(org.apache.maven.project.MavenProject,java.util.List)>(project, $stack10);

        return $stack17;
    }

    public org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, java.util.List) throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.lifecycle.LifecycleNotFoundException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        LifecycleExecutionPlanCalculatorStub this;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.project.MavenProject project;
        java.util.List tasks;
        org.apache.maven.lifecycle.MavenExecutionPlan $stack4;
        org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub $r0;

        this := @this: LifecycleExecutionPlanCalculatorStub;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        project := @parameter1: org.apache.maven.project.MavenProject;

        tasks := @parameter2: java.util.List;

        $r0 = (org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession,org.apache.maven.project.MavenProject,java.util.List,boolean)>(session, project, tasks, 1);

        return $stack4;
    }

    public void setupMojoExecution(org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject, org.apache.maven.plugin.MojoExecution, java.util.Set) throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        LifecycleExecutionPlanCalculatorStub this;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.project.MavenProject project;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        java.util.Set alreadyForkedExecutions;

        this := @this: LifecycleExecutionPlanCalculatorStub;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        project := @parameter1: org.apache.maven.project.MavenProject;

        mojoExecution := @parameter2: org.apache.maven.plugin.MojoExecution;

        alreadyForkedExecutions := @parameter3: java.util.Set;

        return;
    }

    public static org.apache.maven.lifecycle.MavenExecutionPlan getProjectAExceutionPlan() throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.lifecycle.LifecycleNotFoundException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        java.util.ArrayList $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack2, $stack5, $stack8, $stack11, $stack14, $stack17, $stack20, $stack23;
        org.apache.maven.plugin.MojoExecution $stack3, $stack6, $stack9, $stack12, $stack15, $stack18, $stack21, $stack24;
        org.apache.maven.project.MavenProject $stack26, $stack27;
        org.apache.maven.lifecycle.MavenExecutionPlan $stack28;

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        $stack2 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor INITIALIZE>;

        $stack3 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("initialize", "default-initialize", $stack2);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack3);

        $stack5 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PROCESS_RESOURCES>;

        $stack6 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("resources", "default-resources", $stack5);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack6);

        $stack8 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor COMPILE>;

        $stack9 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("compile", "default-compile", $stack8);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack9);

        $stack11 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PROCESS_TEST_RESOURCES>;

        $stack12 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("testResources", "default-testResources", $stack11);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack12);

        $stack14 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor TEST_COMPILE>;

        $stack15 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("testCompile", "default-testCompile", $stack14);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack15);

        $stack17 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor TEST>;

        $stack18 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("test", "default-test", $stack17);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack18);

        $stack20 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PACKAGE>;

        $stack21 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("war", "default-war", $stack20);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack21);

        $stack23 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor INSTALL>;

        $stack24 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("install", "default-install", $stack23);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack24);

        $stack26 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        $stack27 = virtualinvoke $stack26.<org.apache.maven.project.MavenProject: org.apache.maven.project.MavenProject getExecutionProject()>();

        $stack28 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.lifecycle.MavenExecutionPlan createExecutionPlan(org.apache.maven.project.MavenProject,java.util.List)>($stack27, $stack1);

        return $stack28;
    }

    public static org.apache.maven.lifecycle.MavenExecutionPlan getProjectBExecutionPlan() throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.lifecycle.LifecycleNotFoundException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        java.util.ArrayList $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack2, $stack5, $stack8, $stack11, $stack14, $stack17;
        org.apache.maven.plugin.MojoExecution $stack3, $stack6, $stack9, $stack12, $stack15, $stack18;
        org.apache.maven.project.MavenProject $stack20, $stack21;
        org.apache.maven.lifecycle.MavenExecutionPlan $stack22;

        $stack1 = new java.util.ArrayList;

        specialinvoke $stack1.<java.util.ArrayList: void <init>()>();

        $stack2 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor VALIDATE>;

        $stack3 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("enforce", "enforce-versions", $stack2);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack3);

        $stack5 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PROCESS_RESOURCES>;

        $stack6 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("resources", "default-resources", $stack5);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack6);

        $stack8 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor COMPILE>;

        $stack9 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("compile", "default-compile", $stack8);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack9);

        $stack11 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PROCESS_TEST_RESOURCES>;

        $stack12 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("testResources", "default-testResources", $stack11);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack12);

        $stack14 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor TEST_COMPILE>;

        $stack15 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("testCompile", "default-testCompile", $stack14);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack15);

        $stack17 = <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor TEST>;

        $stack18 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String,java.lang.String,org.apache.maven.plugin.descriptor.MojoDescriptor)>("test", "default-test", $stack17);

        interfaceinvoke $stack1.<java.util.List: boolean add(java.lang.Object)>($stack18);

        $stack20 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B>;

        $stack21 = virtualinvoke $stack20.<org.apache.maven.project.MavenProject: org.apache.maven.project.MavenProject getExecutionProject()>();

        $stack22 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.lifecycle.MavenExecutionPlan createExecutionPlan(org.apache.maven.project.MavenProject,java.util.List)>($stack21, $stack1);

        return $stack22;
    }

    private static org.apache.maven.lifecycle.MavenExecutionPlan createExecutionPlan(org.apache.maven.project.MavenProject, java.util.List) throws org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException
    {
        org.apache.maven.project.MavenProject project;
        java.util.List mojoExecutions, planItemList;
        org.apache.maven.lifecycle.MavenExecutionPlan $stack4;
        org.apache.maven.lifecycle.DefaultLifecycles $stack5;

        project := @parameter0: org.apache.maven.project.MavenProject;

        mojoExecutions := @parameter1: java.util.List;

        planItemList = staticinvoke <org.apache.maven.lifecycle.internal.ExecutionPlanItem: java.util.List createExecutionPlanItems(org.apache.maven.project.MavenProject,java.util.List)>(project, mojoExecutions);

        $stack4 = new org.apache.maven.lifecycle.MavenExecutionPlan;

        $stack5 = staticinvoke <org.apache.maven.lifecycle.internal.stub.DefaultLifecyclesStub: org.apache.maven.lifecycle.DefaultLifecycles createDefaultLifecycles()>();

        specialinvoke $stack4.<org.apache.maven.lifecycle.MavenExecutionPlan: void <init>(java.util.List,org.apache.maven.lifecycle.DefaultLifecycles)>(planItemList, $stack5);

        return $stack4;
    }

    private static org.apache.maven.plugin.MojoExecution createMojoExecution(java.lang.String, java.lang.String, org.apache.maven.plugin.descriptor.MojoDescriptor)
    {
        org.apache.maven.model.InputSource $stack6;
        java.lang.String $stack7, goal, executionId, $stack18, $stack19;
        org.apache.maven.plugin.descriptor.MojoDescriptor mojoDescriptor;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack8;
        org.apache.maven.model.Plugin plugin;
        org.apache.maven.model.InputLocation $stack10;
        org.apache.maven.plugin.MojoExecution $stack12;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack13;
        java.lang.StringBuilder $stack14, $stack15, $stack16, $stack17;

        goal := @parameter0: java.lang.String;

        executionId := @parameter1: java.lang.String;

        mojoDescriptor := @parameter2: org.apache.maven.plugin.descriptor.MojoDescriptor;

        $stack6 = new org.apache.maven.model.InputSource;

        specialinvoke $stack6.<org.apache.maven.model.InputSource: void <init>()>();

        $stack7 = <org.apache.maven.lifecycle.internal.DefaultLifecyclePluginAnalyzer: java.lang.String DEFAULTLIFECYCLEBINDINGS_MODELID>;

        virtualinvoke $stack6.<org.apache.maven.model.InputSource: void setModelId(java.lang.String)>($stack7);

        $stack8 = virtualinvoke mojoDescriptor.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        plugin = virtualinvoke $stack8.<org.apache.maven.plugin.descriptor.PluginDescriptor: org.apache.maven.model.Plugin getPlugin()>();

        $stack10 = new org.apache.maven.model.InputLocation;

        specialinvoke $stack10.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>(12, 34, $stack6);

        virtualinvoke plugin.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $stack10);

        $stack12 = new org.apache.maven.plugin.MojoExecution;

        specialinvoke $stack12.<org.apache.maven.plugin.MojoExecution: void <init>(org.apache.maven.model.Plugin,java.lang.String,java.lang.String)>(plugin, goal, executionId);

        $stack13 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        $stack14 = new java.lang.StringBuilder;

        specialinvoke $stack14.<java.lang.StringBuilder: void <init>()>();

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(executionId);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(goal);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $stack13.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(java.lang.String)>($stack18);

        virtualinvoke $stack12.<org.apache.maven.plugin.MojoExecution: void setConfiguration(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack13);

        virtualinvoke $stack12.<org.apache.maven.plugin.MojoExecution: void setMojoDescriptor(org.apache.maven.plugin.descriptor.MojoDescriptor)>(mojoDescriptor);

        $stack19 = virtualinvoke mojoDescriptor.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getPhase()>();

        virtualinvoke $stack12.<org.apache.maven.plugin.MojoExecution: void setLifecyclePhase(java.lang.String)>($stack19);

        return $stack12;
    }

    public static org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)
    {
        java.lang.String phaseName;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack1;

        phaseName := @parameter0: java.lang.String;

        $stack1 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String,boolean)>(phaseName, 0);

        return $stack1;
    }

    public static org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String, boolean)
    {
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack5;
        java.lang.String phaseName, $stack11, $stack15;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack6;
        org.apache.maven.model.Plugin $stack7;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $stack12, $stack13, $stack14;
        boolean threadSafe;

        phaseName := @parameter0: java.lang.String;

        threadSafe := @parameter1: boolean;

        $stack5 = new org.apache.maven.plugin.descriptor.MojoDescriptor;

        specialinvoke $stack5.<org.apache.maven.plugin.descriptor.MojoDescriptor: void <init>()>();

        virtualinvoke $stack5.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setPhase(java.lang.String)>(phaseName);

        $stack6 = new org.apache.maven.plugin.descriptor.PluginDescriptor;

        specialinvoke $stack6.<org.apache.maven.plugin.descriptor.PluginDescriptor: void <init>()>();

        $stack7 = new org.apache.maven.model.Plugin;

        specialinvoke $stack7.<org.apache.maven.model.Plugin: void <init>()>();

        virtualinvoke $stack7.<org.apache.maven.model.Plugin: void setGroupId(java.lang.String)>("org.apache.maven.test.MavenExecutionPlan");

        $stack8 = new java.lang.StringBuilder;

        specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stub-plugin-");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(phaseName);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack7.<org.apache.maven.model.Plugin: void setArtifactId(java.lang.String)>($stack11);

        virtualinvoke $stack6.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setPlugin(org.apache.maven.model.Plugin)>($stack7);

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("artifact.");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(phaseName);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack6.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setArtifactId(java.lang.String)>($stack15);

        virtualinvoke $stack5.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setPluginDescriptor(org.apache.maven.plugin.descriptor.PluginDescriptor)>($stack6);

        virtualinvoke $stack5.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setThreadSafe(boolean)>(threadSafe);

        return $stack5;
    }

    public static java.util.Set getScopes()
    {
        java.util.HashSet $stack0;
        java.lang.String[] $stack1;
        java.util.List $stack2;

        $stack0 = new java.util.HashSet;

        $stack1 = newarray (java.lang.String)[1];

        $stack1[0] = "compile";

        $stack2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack1);

        specialinvoke $stack0.<java.util.HashSet: void <init>(java.util.Collection)>($stack2);

        return $stack0;
    }

    static void <clinit>()
    {
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack0, $stack1, $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16;

        $stack0 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("pre-clean");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PRE_CLEAN> = $stack0;

        $stack1 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("clean");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor CLEAN> = $stack1;

        $stack2 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("post-clean");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor POST_CLEAN> = $stack2;

        $stack3 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("validate");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor VALIDATE> = $stack3;

        $stack4 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("initialize");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor INITIALIZE> = $stack4;

        $stack5 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("test-compile");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor TEST_COMPILE> = $stack5;

        $stack6 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("process-test-resources");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PROCESS_TEST_RESOURCES> = $stack6;

        $stack7 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("process-resources");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PROCESS_RESOURCES> = $stack7;

        $stack8 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String,boolean)>("compile", 1);

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor COMPILE> = $stack8;

        $stack9 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("test");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor TEST> = $stack9;

        $stack10 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("package");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PACKAGE> = $stack10;

        $stack11 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("install");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor INSTALL> = $stack11;

        $stack12 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("pre-site");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor PRE_SITE> = $stack12;

        $stack13 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("site");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor SITE> = $stack13;

        $stack14 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("post-site");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor POST_SITE> = $stack14;

        $stack15 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("site-deploy");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor SITE_DEPLOY> = $stack15;

        $stack16 = staticinvoke <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor createMojoDescriptor(java.lang.String)>("wrapper");

        <org.apache.maven.lifecycle.internal.stub.LifecycleExecutionPlanCalculatorStub: org.apache.maven.plugin.descriptor.MojoDescriptor WRAPPER> = $stack16;

        return;
    }
}
