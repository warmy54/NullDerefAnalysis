public class LifecycleExecutionPlanCalculatorTest extends org.apache.maven.AbstractCoreMavenComponentTestCase
{

    public void <init>()
    {
        LifecycleExecutionPlanCalculatorTest this;

        this := @this: LifecycleExecutionPlanCalculatorTest;

        specialinvoke this.<org.apache.maven.AbstractCoreMavenComponentTestCase: void <init>()>();

        return;
    }

    public void testCalculateExecutionPlanWithGoalTasks() throws java.lang.Exception
    {
        org.apache.maven.lifecycle.internal.MojoDescriptorCreator mojoDescriptorCreator;
        org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator lifecycleExecutionPlanCalculator;
        org.apache.maven.lifecycle.internal.GoalTask $stack13, $stack14, $stack24;
        org.apache.maven.lifecycle.internal.TaskSegment $stack15, $stack25;
        java.lang.Object[] $stack16, $stack26;
        org.apache.maven.project.MavenProject $stack17, $stack19, $stack27;
        org.apache.maven.execution.MavenSession session1;
        java.util.List $stack20, $stack28;
        org.apache.maven.lifecycle.MavenExecutionPlan executionPlan, executionPlan2;
        int $stack23, $stack31;
        LifecycleExecutionPlanCalculatorTest this;

        this := @this: LifecycleExecutionPlanCalculatorTest;

        mojoDescriptorCreator = staticinvoke <org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculatorTest: org.apache.maven.lifecycle.internal.MojoDescriptorCreator createMojoDescriptorCreator()>();

        lifecycleExecutionPlanCalculator = staticinvoke <org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculatorTest: org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator createExecutionPlaceCalculator(org.apache.maven.lifecycle.internal.MojoDescriptorCreator)>(mojoDescriptorCreator);

        $stack13 = new org.apache.maven.lifecycle.internal.GoalTask;

        specialinvoke $stack13.<org.apache.maven.lifecycle.internal.GoalTask: void <init>(java.lang.String)>("compiler:compile");

        $stack14 = new org.apache.maven.lifecycle.internal.GoalTask;

        specialinvoke $stack14.<org.apache.maven.lifecycle.internal.GoalTask: void <init>(java.lang.String)>("surefire:test");

        $stack15 = new org.apache.maven.lifecycle.internal.TaskSegment;

        $stack16 = newarray (java.lang.Object)[2];

        $stack16[0] = $stack13;

        $stack16[1] = $stack14;

        specialinvoke $stack15.<org.apache.maven.lifecycle.internal.TaskSegment: void <init>(boolean,java.lang.Object[])>(0, $stack16);

        $stack17 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        session1 = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.execution.MavenSession getMavenSession(org.apache.maven.project.MavenProject)>($stack17);

        $stack19 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        $stack20 = virtualinvoke $stack15.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        executionPlan = interfaceinvoke lifecycleExecutionPlanCalculator.<org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator: org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession,org.apache.maven.project.MavenProject,java.util.List)>(session1, $stack19, $stack20);

        $stack23 = virtualinvoke executionPlan.<org.apache.maven.lifecycle.MavenExecutionPlan: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(2, $stack23);

        $stack24 = new org.apache.maven.lifecycle.internal.GoalTask;

        specialinvoke $stack24.<org.apache.maven.lifecycle.internal.GoalTask: void <init>(java.lang.String)>("surefire:test");

        $stack25 = new org.apache.maven.lifecycle.internal.TaskSegment;

        $stack26 = newarray (java.lang.Object)[3];

        $stack26[0] = $stack13;

        $stack26[1] = $stack14;

        $stack26[2] = $stack24;

        specialinvoke $stack25.<org.apache.maven.lifecycle.internal.TaskSegment: void <init>(boolean,java.lang.Object[])>(0, $stack26);

        $stack27 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        $stack28 = virtualinvoke $stack25.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        executionPlan2 = interfaceinvoke lifecycleExecutionPlanCalculator.<org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator: org.apache.maven.lifecycle.MavenExecutionPlan calculateExecutionPlan(org.apache.maven.execution.MavenSession,org.apache.maven.project.MavenProject,java.util.List)>(session1, $stack27, $stack28);

        $stack31 = virtualinvoke executionPlan2.<org.apache.maven.lifecycle.MavenExecutionPlan: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(3, $stack31);

        return;
    }

    public static org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator createExecutionPlaceCalculator(org.apache.maven.lifecycle.internal.MojoDescriptorCreator)
    {
        org.apache.maven.lifecycle.DefaultLifecycles $stack6;
        org.apache.maven.lifecycle.internal.MojoDescriptorCreator mojoDescriptorCreator;
        org.apache.maven.lifecycle.internal.stub.PluginVersionResolverStub $u0;
        org.apache.maven.lifecycle.internal.LifecyclePluginResolver $u1;
        org.apache.maven.lifecycle.internal.stub.BuildPluginManagerStub $u2;
        org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator $u3;
        org.apache.maven.plugin.version.PluginVersionResolver $r0;
        org.apache.maven.plugin.BuildPluginManager $r1;
        org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator $r2;

        mojoDescriptorCreator := @parameter0: org.apache.maven.lifecycle.internal.MojoDescriptorCreator;

        $u1 = new org.apache.maven.lifecycle.internal.LifecyclePluginResolver;

        $u0 = new org.apache.maven.lifecycle.internal.stub.PluginVersionResolverStub;

        specialinvoke $u0.<org.apache.maven.lifecycle.internal.stub.PluginVersionResolverStub: void <init>()>();

        $r0 = (org.apache.maven.plugin.version.PluginVersionResolver) $u0;

        specialinvoke $u1.<org.apache.maven.lifecycle.internal.LifecyclePluginResolver: void <init>(org.apache.maven.plugin.version.PluginVersionResolver)>($r0);

        $u3 = new org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator;

        $u2 = new org.apache.maven.lifecycle.internal.stub.BuildPluginManagerStub;

        specialinvoke $u2.<org.apache.maven.lifecycle.internal.stub.BuildPluginManagerStub: void <init>()>();

        $stack6 = staticinvoke <org.apache.maven.lifecycle.internal.stub.DefaultLifecyclesStub: org.apache.maven.lifecycle.DefaultLifecycles createDefaultLifecycles()>();

        $r1 = (org.apache.maven.plugin.BuildPluginManager) $u2;

        specialinvoke $u3.<org.apache.maven.lifecycle.internal.DefaultLifecycleExecutionPlanCalculator: void <init>(org.apache.maven.plugin.BuildPluginManager,org.apache.maven.lifecycle.DefaultLifecycles,org.apache.maven.lifecycle.internal.MojoDescriptorCreator,org.apache.maven.lifecycle.internal.LifecyclePluginResolver)>($r1, $stack6, mojoDescriptorCreator, $u1);

        $r2 = (org.apache.maven.lifecycle.internal.LifecycleExecutionPlanCalculator) $u3;

        return $r2;
    }

    public static org.apache.maven.lifecycle.internal.MojoDescriptorCreator createMojoDescriptorCreator()
    {
        org.apache.maven.lifecycle.internal.stub.PluginVersionResolverStub $u0, $u3;
        org.apache.maven.lifecycle.internal.stub.BuildPluginManagerStub $u1;
        org.apache.maven.lifecycle.internal.stub.PluginPrefixResolverStub $u2;
        org.apache.maven.lifecycle.internal.LifecyclePluginResolver $u4;
        org.apache.maven.lifecycle.internal.MojoDescriptorCreator $u5;
        org.apache.maven.plugin.version.PluginVersionResolver $r0, $r1;
        org.apache.maven.plugin.BuildPluginManager $r2;
        org.apache.maven.plugin.prefix.PluginPrefixResolver $r3;

        $u5 = new org.apache.maven.lifecycle.internal.MojoDescriptorCreator;

        $u0 = new org.apache.maven.lifecycle.internal.stub.PluginVersionResolverStub;

        specialinvoke $u0.<org.apache.maven.lifecycle.internal.stub.PluginVersionResolverStub: void <init>()>();

        $u1 = new org.apache.maven.lifecycle.internal.stub.BuildPluginManagerStub;

        specialinvoke $u1.<org.apache.maven.lifecycle.internal.stub.BuildPluginManagerStub: void <init>()>();

        $u2 = new org.apache.maven.lifecycle.internal.stub.PluginPrefixResolverStub;

        specialinvoke $u2.<org.apache.maven.lifecycle.internal.stub.PluginPrefixResolverStub: void <init>()>();

        $u4 = new org.apache.maven.lifecycle.internal.LifecyclePluginResolver;

        $u3 = new org.apache.maven.lifecycle.internal.stub.PluginVersionResolverStub;

        specialinvoke $u3.<org.apache.maven.lifecycle.internal.stub.PluginVersionResolverStub: void <init>()>();

        $r0 = (org.apache.maven.plugin.version.PluginVersionResolver) $u3;

        specialinvoke $u4.<org.apache.maven.lifecycle.internal.LifecyclePluginResolver: void <init>(org.apache.maven.plugin.version.PluginVersionResolver)>($r0);

        $r1 = (org.apache.maven.plugin.version.PluginVersionResolver) $u0;

        $r2 = (org.apache.maven.plugin.BuildPluginManager) $u1;

        $r3 = (org.apache.maven.plugin.prefix.PluginPrefixResolver) $u2;

        specialinvoke $u5.<org.apache.maven.lifecycle.internal.MojoDescriptorCreator: void <init>(org.apache.maven.plugin.version.PluginVersionResolver,org.apache.maven.plugin.BuildPluginManager,org.apache.maven.plugin.prefix.PluginPrefixResolver,org.apache.maven.lifecycle.internal.LifecyclePluginResolver)>($r1, $r2, $r3, $u4);

        return $u5;
    }

    protected java.lang.String getProjectsDirectory()
    {
        LifecycleExecutionPlanCalculatorTest this;

        this := @this: LifecycleExecutionPlanCalculatorTest;

        return "src/test/projects/lifecycle-executor";
    }
}
