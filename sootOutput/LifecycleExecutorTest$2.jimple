class LifecycleExecutorTest$2 extends java.lang.Object implements org.apache.maven.execution.MojoExecutionListener
{
    final java.util.List val$log;
    final org.apache.maven.lifecycle.LifecycleExecutorTest this$0;

    void <init>(org.apache.maven.lifecycle.LifecycleExecutorTest, java.util.List)
    {
        LifecycleExecutorTest$2 this;
        org.apache.maven.lifecycle.LifecycleExecutorTest this$0;
        java.util.List l2;
        org.apache.maven.lifecycle.LifecycleExecutorTest$2 $r0, $r1;

        this := @this: LifecycleExecutorTest$2;

        this$0 := @parameter0: org.apache.maven.lifecycle.LifecycleExecutorTest;

        l2 := @parameter1: java.util.List;

        $r0 = (org.apache.maven.lifecycle.LifecycleExecutorTest$2) this;

        $r0.<org.apache.maven.lifecycle.LifecycleExecutorTest$2: org.apache.maven.lifecycle.LifecycleExecutorTest this$0> = this$0;

        $r1 = (org.apache.maven.lifecycle.LifecycleExecutorTest$2) this;

        $r1.<org.apache.maven.lifecycle.LifecycleExecutorTest$2: java.util.List val$log> = l2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void beforeMojoExecution(org.apache.maven.execution.MojoExecutionEvent) throws org.apache.maven.plugin.MojoExecutionException
    {
        org.apache.maven.execution.MojoExecutionEvent event;
        org.apache.maven.execution.MavenSession $stack2;
        org.apache.maven.project.MavenProject $stack3, $stack10;
        org.apache.maven.plugin.MojoExecution $stack4, $stack14;
        org.apache.maven.plugin.Mojo $stack5;
        java.lang.Throwable $stack6;
        LifecycleExecutorTest$2 this;
        java.util.List $stack8;
        java.lang.StringBuilder $stack9, $stack12, $stack13, $stack16, $u0;
        java.lang.String $stack11, $stack15, $stack17;
        org.apache.maven.lifecycle.LifecycleExecutorTest$2 $r0;

        this := @this: LifecycleExecutorTest$2;

        event := @parameter0: org.apache.maven.execution.MojoExecutionEvent;

        $stack2 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.execution.MavenSession getSession()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack2);

        $stack3 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.project.MavenProject getProject()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack3);

        $stack4 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.plugin.MojoExecution getExecution()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack4);

        $stack5 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.plugin.Mojo getMojo()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack5);

        $stack6 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: java.lang.Throwable getCause()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNull(java.lang.Object)>($stack6);

        $r0 = (org.apache.maven.lifecycle.LifecycleExecutorTest$2) this;

        $stack8 = $r0.<org.apache.maven.lifecycle.LifecycleExecutorTest$2: java.util.List val$log>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("beforeMojoExecution ");

        $stack10 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.project.MavenProject getProject()>();

        $stack11 = virtualinvoke $stack10.<org.apache.maven.project.MavenProject: java.lang.String getArtifactId()>();

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack14 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.plugin.MojoExecution getExecution()>();

        $stack15 = virtualinvoke $stack14.<org.apache.maven.plugin.MojoExecution: java.lang.String getExecutionId()>();

        $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>($stack17);

        return;
    }

    public void afterMojoExecutionSuccess(org.apache.maven.execution.MojoExecutionEvent) throws org.apache.maven.plugin.MojoExecutionException
    {
        org.apache.maven.execution.MojoExecutionEvent event;
        org.apache.maven.execution.MavenSession $stack2;
        org.apache.maven.project.MavenProject $stack3, $stack10;
        org.apache.maven.plugin.MojoExecution $stack4, $stack14;
        org.apache.maven.plugin.Mojo $stack5;
        java.lang.Throwable $stack6;
        LifecycleExecutorTest$2 this;
        java.util.List $stack8;
        java.lang.StringBuilder $stack9, $stack12, $stack13, $stack16, $u0;
        java.lang.String $stack11, $stack15, $stack17;
        org.apache.maven.lifecycle.LifecycleExecutorTest$2 $r0;

        this := @this: LifecycleExecutorTest$2;

        event := @parameter0: org.apache.maven.execution.MojoExecutionEvent;

        $stack2 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.execution.MavenSession getSession()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack2);

        $stack3 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.project.MavenProject getProject()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack3);

        $stack4 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.plugin.MojoExecution getExecution()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack4);

        $stack5 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.plugin.Mojo getMojo()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack5);

        $stack6 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: java.lang.Throwable getCause()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNull(java.lang.Object)>($stack6);

        $r0 = (org.apache.maven.lifecycle.LifecycleExecutorTest$2) this;

        $stack8 = $r0.<org.apache.maven.lifecycle.LifecycleExecutorTest$2: java.util.List val$log>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("afterMojoExecutionSuccess ");

        $stack10 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.project.MavenProject getProject()>();

        $stack11 = virtualinvoke $stack10.<org.apache.maven.project.MavenProject: java.lang.String getArtifactId()>();

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack14 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.plugin.MojoExecution getExecution()>();

        $stack15 = virtualinvoke $stack14.<org.apache.maven.plugin.MojoExecution: java.lang.String getExecutionId()>();

        $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>($stack17);

        return;
    }

    public void afterExecutionFailure(org.apache.maven.execution.MojoExecutionEvent)
    {
        org.apache.maven.execution.MojoExecutionEvent event;
        org.apache.maven.execution.MavenSession $stack2;
        org.apache.maven.project.MavenProject $stack3, $stack10;
        org.apache.maven.plugin.MojoExecution $stack4, $stack14;
        org.apache.maven.plugin.Mojo $stack5;
        java.lang.Throwable $stack6;
        LifecycleExecutorTest$2 this;
        java.util.List $stack8;
        java.lang.StringBuilder $stack9, $stack12, $stack13, $stack16, $u0;
        java.lang.String $stack11, $stack15, $stack17;
        org.apache.maven.lifecycle.LifecycleExecutorTest$2 $r0;

        this := @this: LifecycleExecutorTest$2;

        event := @parameter0: org.apache.maven.execution.MojoExecutionEvent;

        $stack2 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.execution.MavenSession getSession()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack2);

        $stack3 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.project.MavenProject getProject()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack3);

        $stack4 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.plugin.MojoExecution getExecution()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack4);

        $stack5 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.plugin.Mojo getMojo()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack5);

        $stack6 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: java.lang.Throwable getCause()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack6);

        $r0 = (org.apache.maven.lifecycle.LifecycleExecutorTest$2) this;

        $stack8 = $r0.<org.apache.maven.lifecycle.LifecycleExecutorTest$2: java.util.List val$log>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("afterExecutionFailure ");

        $stack10 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.project.MavenProject getProject()>();

        $stack11 = virtualinvoke $stack10.<org.apache.maven.project.MavenProject: java.lang.String getArtifactId()>();

        $stack12 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack14 = virtualinvoke event.<org.apache.maven.execution.MojoExecutionEvent: org.apache.maven.plugin.MojoExecution getExecution()>();

        $stack15 = virtualinvoke $stack14.<org.apache.maven.plugin.MojoExecution: java.lang.String getExecutionId()>();

        $stack16 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>($stack17);

        return;
    }
}
