public class LifecycleMappingsXpp3Writer extends java.lang.Object
{
    private static final java.lang.String NAMESPACE;
    private java.lang.String fileComment;

    public void <init>()
    {
        LifecycleMappingsXpp3Writer this;
        org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer $r0;

        this := @this: LifecycleMappingsXpp3Writer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer) this;

        $r0.<org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String fileComment> = null;

        return;
    }

    public void setFileComment(java.lang.String)
    {
        LifecycleMappingsXpp3Writer this;
        java.lang.String fileComment;
        org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer $r0;

        this := @this: LifecycleMappingsXpp3Writer;

        fileComment := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer) this;

        $r0.<org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String fileComment> = fileComment;

        return;
    }

    public void write(java.io.Writer, org.apache.maven.plugin.lifecycle.LifecycleConfiguration) throws java.io.IOException
    {
        java.io.Writer writer;
        org.apache.maven.plugin.lifecycle.LifecycleConfiguration lifecycleConfiguration;
        java.lang.String $stack5;
        LifecycleMappingsXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer $r4;

        this := @this: LifecycleMappingsXpp3Writer;

        writer := @parameter0: java.io.Writer;

        lifecycleConfiguration := @parameter1: org.apache.maven.plugin.lifecycle.LifecycleConfiguration;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.Writer)>(writer);

        $stack5 = virtualinvoke lifecycleConfiguration.<org.apache.maven.plugin.lifecycle.LifecycleConfiguration: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack5, null);

        $r4 = (org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: void writeLifecycleConfiguration(org.apache.maven.plugin.lifecycle.LifecycleConfiguration,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(lifecycleConfiguration, "lifecycles", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    public void write(java.io.OutputStream, org.apache.maven.plugin.lifecycle.LifecycleConfiguration) throws java.io.IOException
    {
        java.io.OutputStream stream;
        org.apache.maven.plugin.lifecycle.LifecycleConfiguration lifecycleConfiguration;
        java.lang.String $stack5, $stack6;
        LifecycleMappingsXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer $r4;

        this := @this: LifecycleMappingsXpp3Writer;

        stream := @parameter0: java.io.OutputStream;

        lifecycleConfiguration := @parameter1: org.apache.maven.plugin.lifecycle.LifecycleConfiguration;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $stack5 = virtualinvoke lifecycleConfiguration.<org.apache.maven.plugin.lifecycle.LifecycleConfiguration: java.lang.String getModelEncoding()>();

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(stream, $stack5);

        $stack6 = virtualinvoke lifecycleConfiguration.<org.apache.maven.plugin.lifecycle.LifecycleConfiguration: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack6, null);

        $r4 = (org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: void writeLifecycleConfiguration(org.apache.maven.plugin.lifecycle.LifecycleConfiguration,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(lifecycleConfiguration, "lifecycles", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    private void writeExecution(org.apache.maven.plugin.lifecycle.Execution, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack25, $stack26;
        java.lang.String tagName, $stack6, $stack16, $stack21, goal, $stack24, $stack27, $stack31, $stack10;
        org.apache.maven.plugin.lifecycle.Execution execution;
        java.lang.Object $stack8, $stack23, $stack30;
        java.util.List $stack9, $stack12, $stack18;
        int $stack13;
        java.util.Iterator iter;
        boolean $stack20;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack32;
        LifecycleMappingsXpp3Writer this;

        this := @this: LifecycleMappingsXpp3Writer;

        execution := @parameter0: org.apache.maven.plugin.lifecycle.Execution;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke execution.<org.apache.maven.plugin.lifecycle.Execution: java.lang.Object getConfiguration()>();

        if $stack8 == null goto label1;

        $stack30 = virtualinvoke execution.<org.apache.maven.plugin.lifecycle.Execution: java.lang.Object getConfiguration()>();

        $stack32 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack30;

        $stack31 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack32.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack31, serializer);

     label1:
        $stack9 = virtualinvoke execution.<org.apache.maven.plugin.lifecycle.Execution: java.util.List getGoals()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke execution.<org.apache.maven.plugin.lifecycle.Execution: java.util.List getGoals()>();

        $stack13 = interfaceinvoke $stack12.<java.util.List: int size()>();

        if $stack13 <= 0 goto label4;

        $stack16 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "goals");

        $stack18 = virtualinvoke execution.<org.apache.maven.plugin.lifecycle.Execution: java.util.List getGoals()>();

        iter = interfaceinvoke $stack18.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack20 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label3;

        $stack23 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        goal = (java.lang.String) $stack23;

        $stack24 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack25 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "goal");

        $stack26 = interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(goal);

        $stack27 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack26.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack27, "goal");

        goto label2;

     label3:
        $stack21 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack21, "goals");

     label4:
        $stack10 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeLifecycle(org.apache.maven.plugin.lifecycle.Lifecycle, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack26, $stack28;
        java.lang.String tagName, $stack6, $stack8, $stack16, $stack21, $stack25, $stack27, $stack29, $stack10;
        org.apache.maven.plugin.lifecycle.Lifecycle lifecycle;
        java.util.List $stack9, $stack12, $stack18;
        int $stack13;
        java.util.Iterator iter;
        boolean $stack20;
        java.lang.Object $stack23;
        org.apache.maven.plugin.lifecycle.Phase o;
        LifecycleMappingsXpp3Writer this;
        org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer $r0;

        this := @this: LifecycleMappingsXpp3Writer;

        lifecycle := @parameter0: org.apache.maven.plugin.lifecycle.Lifecycle;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke lifecycle.<org.apache.maven.plugin.lifecycle.Lifecycle: java.lang.String getId()>();

        if $stack8 == null goto label1;

        $stack25 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack26 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack25, "id");

        $stack27 = virtualinvoke lifecycle.<org.apache.maven.plugin.lifecycle.Lifecycle: java.lang.String getId()>();

        $stack28 = interfaceinvoke $stack26.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack27);

        $stack29 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack29, "id");

     label1:
        $stack9 = virtualinvoke lifecycle.<org.apache.maven.plugin.lifecycle.Lifecycle: java.util.List getPhases()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke lifecycle.<org.apache.maven.plugin.lifecycle.Lifecycle: java.util.List getPhases()>();

        $stack13 = interfaceinvoke $stack12.<java.util.List: int size()>();

        if $stack13 <= 0 goto label4;

        $stack16 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "phases");

        $stack18 = virtualinvoke lifecycle.<org.apache.maven.plugin.lifecycle.Lifecycle: java.util.List getPhases()>();

        iter = interfaceinvoke $stack18.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack20 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label3;

        $stack23 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.plugin.lifecycle.Phase) $stack23;

        $r0 = (org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: void writePhase(org.apache.maven.plugin.lifecycle.Phase,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "phase", serializer);

        goto label2;

     label3:
        $stack21 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack21, "phases");

     label4:
        $stack10 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeLifecycleConfiguration(org.apache.maven.plugin.lifecycle.LifecycleConfiguration, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        LifecycleMappingsXpp3Writer this;
        java.lang.String $stack6, tagName, $stack7, $stack22, $stack11;
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        org.apache.maven.plugin.lifecycle.LifecycleConfiguration lifecycleConfiguration;
        java.util.List $stack10, $stack13, $stack17;
        int $stack14;
        java.util.Iterator iter;
        boolean $stack19;
        java.lang.Object $stack20;
        org.apache.maven.plugin.lifecycle.Lifecycle o;
        org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer $r0, $r1, $r2;

        this := @this: LifecycleMappingsXpp3Writer;

        lifecycleConfiguration := @parameter0: org.apache.maven.plugin.lifecycle.LifecycleConfiguration;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $r0 = (org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer) this;

        $stack6 = $r0.<org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String fileComment>;

        if $stack6 == null goto label1;

        $r1 = (org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer) this;

        $stack22 = $r1.<org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String fileComment>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void comment(java.lang.String)>($stack22);

     label1:
        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("", "http://maven.apache.org/LIFECYCLE/1.0.0");

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("xsi", "http://www.w3.org/2001/XMLSchema-instance");

        $stack7 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "xsi:schemaLocation", "http://maven.apache.org/LIFECYCLE/1.0.0 http://maven.apache.org/xsd/lifecycle-1.0.0.xsd");

        $stack10 = virtualinvoke lifecycleConfiguration.<org.apache.maven.plugin.lifecycle.LifecycleConfiguration: java.util.List getLifecycles()>();

        if $stack10 == null goto label3;

        $stack13 = virtualinvoke lifecycleConfiguration.<org.apache.maven.plugin.lifecycle.LifecycleConfiguration: java.util.List getLifecycles()>();

        $stack14 = interfaceinvoke $stack13.<java.util.List: int size()>();

        if $stack14 <= 0 goto label3;

        $stack17 = virtualinvoke lifecycleConfiguration.<org.apache.maven.plugin.lifecycle.LifecycleConfiguration: java.util.List getLifecycles()>();

        iter = interfaceinvoke $stack17.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack19 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label3;

        $stack20 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.plugin.lifecycle.Lifecycle) $stack20;

        $r2 = (org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: void writeLifecycle(org.apache.maven.plugin.lifecycle.Lifecycle,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "lifecycle", serializer);

        goto label2;

     label3:
        $stack11 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writePhase(org.apache.maven.plugin.lifecycle.Phase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack31, $stack33;
        java.lang.String tagName, $stack6, $stack8, $stack11, $stack14, $stack21, $stack26, $stack30, $stack32, $stack34;
        org.apache.maven.plugin.lifecycle.Phase phase;
        java.util.List $stack9, $stack18, $stack23;
        java.lang.Object $stack13, $stack28, $stack10;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack15;
        int $stack19;
        java.util.Iterator iter;
        boolean $stack25;
        org.apache.maven.plugin.lifecycle.Execution o;
        LifecycleMappingsXpp3Writer this;
        org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer $r0;

        this := @this: LifecycleMappingsXpp3Writer;

        phase := @parameter0: org.apache.maven.plugin.lifecycle.Phase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke phase.<org.apache.maven.plugin.lifecycle.Phase: java.lang.String getId()>();

        if $stack8 == null goto label1;

        $stack30 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack31 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "id");

        $stack32 = virtualinvoke phase.<org.apache.maven.plugin.lifecycle.Phase: java.lang.String getId()>();

        $stack33 = interfaceinvoke $stack31.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack32);

        $stack34 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack33.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack34, "id");

     label1:
        $stack9 = virtualinvoke phase.<org.apache.maven.plugin.lifecycle.Phase: java.util.List getExecutions()>();

        if $stack9 == null goto label4;

        $stack18 = virtualinvoke phase.<org.apache.maven.plugin.lifecycle.Phase: java.util.List getExecutions()>();

        $stack19 = interfaceinvoke $stack18.<java.util.List: int size()>();

        if $stack19 <= 0 goto label4;

        $stack21 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack21, "executions");

        $stack23 = virtualinvoke phase.<org.apache.maven.plugin.lifecycle.Phase: java.util.List getExecutions()>();

        iter = interfaceinvoke $stack23.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack25 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack25 == 0 goto label3;

        $stack28 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.plugin.lifecycle.Execution) $stack28;

        $r0 = (org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: void writeExecution(org.apache.maven.plugin.lifecycle.Execution,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "execution", serializer);

        goto label2;

     label3:
        $stack26 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack26, "executions");

     label4:
        $stack10 = virtualinvoke phase.<org.apache.maven.plugin.lifecycle.Phase: java.lang.Object getConfiguration()>();

        if $stack10 == null goto label5;

        $stack13 = virtualinvoke phase.<org.apache.maven.plugin.lifecycle.Phase: java.lang.Object getConfiguration()>();

        $stack15 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack13;

        $stack14 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack15.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack14, serializer);

     label5:
        $stack11 = <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    static void <clinit>()
    {
        <org.apache.maven.plugin.lifecycle.io.xpp3.LifecycleMappingsXpp3Writer: java.lang.String NAMESPACE> = null;

        return;
    }
}
