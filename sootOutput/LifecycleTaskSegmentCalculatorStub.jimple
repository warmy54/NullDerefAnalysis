public class LifecycleTaskSegmentCalculatorStub extends org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator
{
    public static final java.lang.String clean;
    public static final java.lang.String aggr;
    public static final java.lang.String install;

    public void <init>()
    {
        LifecycleTaskSegmentCalculatorStub this;

        this := @this: LifecycleTaskSegmentCalculatorStub;

        specialinvoke this.<org.apache.maven.lifecycle.internal.DefaultLifecycleTaskSegmentCalculator: void <init>()>();

        return;
    }

    public java.util.List calculateTaskSegments(org.apache.maven.execution.MavenSession, java.util.List) throws org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.version.PluginVersionResolutionException
    {
        java.util.ArrayList $stack8;
        java.util.List tasks, $stack29, $stack17;
        int $stack9;
        java.util.Iterator l5;
        boolean $stack11, $stack14, $stack21, $stack32;
        java.lang.Object $stack12;
        java.lang.String task, $stack13;
        org.apache.maven.lifecycle.internal.TaskSegment $stack15, $stack27, currentSegment;
        LifecycleTaskSegmentCalculatorStub this;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.lifecycle.internal.GoalTask $stack30;
        org.apache.maven.lifecycle.internal.LifecycleTask $stack18;

        this := @this: LifecycleTaskSegmentCalculatorStub;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        tasks := @parameter1: java.util.List;

        $stack8 = new java.util.ArrayList;

        $stack9 = interfaceinvoke tasks.<java.util.List: int size()>();

        specialinvoke $stack8.<java.util.ArrayList: void <init>(int)>($stack9);

        currentSegment = null;

        l5 = interfaceinvoke tasks.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack11 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label8;

        $stack12 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        task = (java.lang.String) $stack12;

        $stack13 = "aggr";

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>(task);

        if $stack14 == 0 goto label4;

        if currentSegment == null goto label2;

        $stack32 = virtualinvoke currentSegment.<org.apache.maven.lifecycle.internal.TaskSegment: boolean isAggregating()>();

        if $stack32 == 1 goto label3;

     label2:
        $stack27 = new org.apache.maven.lifecycle.internal.TaskSegment;

        specialinvoke $stack27.<org.apache.maven.lifecycle.internal.TaskSegment: void <init>(boolean)>(1);

        currentSegment = $stack27;

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>($stack27);

     label3:
        $stack29 = virtualinvoke currentSegment.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $stack30 = new org.apache.maven.lifecycle.internal.GoalTask;

        specialinvoke $stack30.<org.apache.maven.lifecycle.internal.GoalTask: void <init>(java.lang.String)>(task);

        interfaceinvoke $stack29.<java.util.List: boolean add(java.lang.Object)>($stack30);

        goto label7;

     label4:
        if currentSegment == null goto label5;

        $stack21 = virtualinvoke currentSegment.<org.apache.maven.lifecycle.internal.TaskSegment: boolean isAggregating()>();

        if $stack21 == 0 goto label6;

     label5:
        $stack15 = new org.apache.maven.lifecycle.internal.TaskSegment;

        specialinvoke $stack15.<org.apache.maven.lifecycle.internal.TaskSegment: void <init>(boolean)>(0);

        currentSegment = $stack15;

        interfaceinvoke $stack8.<java.util.List: boolean add(java.lang.Object)>($stack15);

     label6:
        $stack17 = virtualinvoke currentSegment.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $stack18 = new org.apache.maven.lifecycle.internal.LifecycleTask;

        specialinvoke $stack18.<org.apache.maven.lifecycle.internal.LifecycleTask: void <init>(java.lang.String)>(task);

        interfaceinvoke $stack17.<java.util.List: boolean add(java.lang.Object)>($stack18);

     label7:
        goto label1;

     label8:
        return $stack8;
    }

    public boolean requiresProject(org.apache.maven.execution.MavenSession)
    {
        LifecycleTaskSegmentCalculatorStub this;
        org.apache.maven.execution.MavenSession session;

        this := @this: LifecycleTaskSegmentCalculatorStub;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        return 1;
    }

    public static void <clinit>()
    {
        <LifecycleTaskSegmentCalculatorStub: java.lang.String install> = "install";

        <LifecycleTaskSegmentCalculatorStub: java.lang.String aggr> = "aggr";

        <LifecycleTaskSegmentCalculatorStub: java.lang.String clean> = "clean";

        return;
    }
}
