public class ListReader extends java.lang.Object
{
    java.util.List list;
    int index;
    int length;
    int mark;

    public void <init>(java.util.List)
    {
        ListReader this;
        java.util.List list;
        int $stack2;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1, $r2, $r3;

        this := @this: ListReader;

        list := @parameter0: java.util.List;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r0.<org.ooc.frontend.model.tokens.ListReader: java.util.List list> = list;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r1.<org.ooc.frontend.model.tokens.ListReader: int index> = 0;

        $stack2 = interfaceinvoke list.<java.util.List: int size()>();

        $r2 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r2.<org.ooc.frontend.model.tokens.ListReader: int length> = $stack2;

        $r3 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r3.<org.ooc.frontend.model.tokens.ListReader: int mark> = 0;

        return;
    }

    public boolean hasNext()
    {
        ListReader this;
        int $stack1, $stack2;
        boolean $stack3;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1;

        this := @this: ListReader;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack2 = $r0.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack1 = $r1.<org.ooc.frontend.model.tokens.ListReader: int length>;

        if $stack2 >= $stack1 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    public java.lang.Object read()
    {
        ListReader this;
        int $stack1, $stack2;
        java.util.List $stack3;
        java.lang.Object $stack4;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1, $r2;

        this := @this: ListReader;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack3 = $r0.<org.ooc.frontend.model.tokens.ListReader: java.util.List list>;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack1 = $r1.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $stack2 = $stack1 + 1;

        $r2 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r2.<org.ooc.frontend.model.tokens.ListReader: int index> = $stack2;

        $stack4 = interfaceinvoke $stack3.<java.util.List: java.lang.Object get(int)>($stack1);

        return $stack4;
    }

    public java.lang.Object peek()
    {
        ListReader this;
        int $stack1;
        java.util.List $stack2;
        java.lang.Object $stack3;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1;

        this := @this: ListReader;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack2 = $r0.<org.ooc.frontend.model.tokens.ListReader: java.util.List list>;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack1 = $r1.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>($stack1);

        return $stack3;
    }

    public java.lang.Object prev()
    {
        ListReader this;
        int $stack1, $stack2, $stack3, $stack6;
        java.util.List $stack4, $stack7;
        java.lang.Object $stack5, $stack8;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1, $r2, $r3, $r4;

        this := @this: ListReader;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack1 = $r0.<org.ooc.frontend.model.tokens.ListReader: int index>;

        if $stack1 >= 1 goto label1;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack7 = $r1.<org.ooc.frontend.model.tokens.ListReader: java.util.List list>;

        $r2 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack6 = $r2.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $stack8 = interfaceinvoke $stack7.<java.util.List: java.lang.Object get(int)>($stack6);

        return $stack8;

     label1:
        $r3 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack4 = $r3.<org.ooc.frontend.model.tokens.ListReader: java.util.List list>;

        $r4 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack2 = $r4.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $stack3 = $stack2 - 1;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>($stack3);

        return $stack5;
    }

    public java.lang.Object prev(int)
    {
        ListReader this;
        int offset, $stack2, $stack3;
        java.util.List $stack4;
        java.lang.Object $stack5;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1;

        this := @this: ListReader;

        offset := @parameter0: int;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack4 = $r0.<org.ooc.frontend.model.tokens.ListReader: java.util.List list>;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack2 = $r1.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $stack3 = $stack2 - offset;

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>($stack3);

        return $stack5;
    }

    public int mark()
    {
        ListReader this;
        int $stack1, $stack2;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1, $r2;

        this := @this: ListReader;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack1 = $r0.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r1.<org.ooc.frontend.model.tokens.ListReader: int mark> = $stack1;

        $r2 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack2 = $r2.<org.ooc.frontend.model.tokens.ListReader: int mark>;

        return $stack2;
    }

    public void reset()
    {
        ListReader this;
        int $stack1;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1;

        this := @this: ListReader;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack1 = $r0.<org.ooc.frontend.model.tokens.ListReader: int mark>;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r1.<org.ooc.frontend.model.tokens.ListReader: int index> = $stack1;

        return;
    }

    public void reset(int)
    {
        ListReader this;
        int index;
        org.ooc.frontend.model.tokens.ListReader $r0;

        this := @this: ListReader;

        index := @parameter0: int;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r0.<org.ooc.frontend.model.tokens.ListReader: int index> = index;

        return;
    }

    public void rewind()
    {
        ListReader this;
        int $stack1, $stack2;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1;

        this := @this: ListReader;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack1 = $r0.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $stack2 = $stack1 - 1;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r1.<org.ooc.frontend.model.tokens.ListReader: int index> = $stack2;

        return;
    }

    public void skip()
    {
        ListReader this;
        int $stack1, $stack2;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1;

        this := @this: ListReader;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack1 = $r0.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $stack2 = $stack1 + 1;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r1.<org.ooc.frontend.model.tokens.ListReader: int index> = $stack2;

        return;
    }

    public void skip(int)
    {
        ListReader this;
        int offset, $stack2, $stack3;
        org.ooc.frontend.model.tokens.ListReader $r0, $r1;

        this := @this: ListReader;

        offset := @parameter0: int;

        $r0 = (org.ooc.frontend.model.tokens.ListReader) this;

        $stack2 = $r0.<org.ooc.frontend.model.tokens.ListReader: int index>;

        $stack3 = $stack2 + offset;

        $r1 = (org.ooc.frontend.model.tokens.ListReader) this;

        $r1.<org.ooc.frontend.model.tokens.ListReader: int index> = $stack3;

        return;
    }
}
