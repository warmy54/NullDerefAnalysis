public class LiteralWriter extends java.lang.Object
{
    private static java.math.BigInteger INT_MAX;

    public void <init>()
    {
        LiteralWriter this;

        this := @this: LiteralWriter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void writeFloat(org.ooc.frontend.model.FloatLiteral, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.frontend.model.FloatLiteral floatLiteral;
        org.ooc.backend.cdirty.AwesomeWriter $stack2;
        double $stack3;
        java.lang.String $stack4;

        floatLiteral := @parameter0: org.ooc.frontend.model.FloatLiteral;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack2 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack3 = virtualinvoke floatLiteral.<org.ooc.frontend.model.FloatLiteral: double getValue()>();

        $stack4 = staticinvoke <java.lang.Double: java.lang.String toString(double)>($stack3);

        virtualinvoke $stack2.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack4);

        return;
    }

    public static void writeString(org.ooc.frontend.model.StringLiteral, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack2, $stack5, $stack6;
        org.ooc.frontend.model.StringLiteral stringLiteral;
        java.lang.String $stack4;
        java.lang.Appendable $r0;

        stringLiteral := @parameter0: org.ooc.frontend.model.StringLiteral;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack2 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack2.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(34);

        $stack4 = virtualinvoke stringLiteral.<org.ooc.frontend.model.StringLiteral: java.lang.String getValue()>();

        $stack5 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $r0 = (java.lang.Appendable) $stack5;

        staticinvoke <org.ubi.SourceReader: void spelled(java.lang.String,java.lang.Appendable)>($stack4, $r0);

        $stack6 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack6.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(34);

        return;
    }

    public static void writeInt(org.ooc.frontend.model.IntLiteral, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.IntLiteral numberLiteral;
        int[] $stack2;
        org.ooc.frontend.model.IntLiteral$Format $stack3;
        int $stack4, $stack5, $stack14;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack6, $stack8, $stack15, $stack17, $stack19, $stack25;
        java.math.BigInteger $stack9, $stack20, $stack26, $stack12, $stack13;
        java.lang.String $stack10, $stack21, $stack27;

        numberLiteral := @parameter0: org.ooc.frontend.model.IntLiteral;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack2 = <org.ooc.backend.cdirty.LiteralWriter$1: int[] $SwitchMap$org$ooc$frontend$model$IntLiteral$Format>;

        $stack3 = virtualinvoke numberLiteral.<org.ooc.frontend.model.IntLiteral: org.ooc.frontend.model.IntLiteral$Format getFormat()>();

        $stack4 = virtualinvoke $stack3.<org.ooc.frontend.model.IntLiteral$Format: int ordinal()>();

        $stack5 = $stack2[$stack4];

        tableswitch($stack5)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label2;
            default: goto label3;
        };

     label1:
        $stack17 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack17.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("0x");

        $stack19 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack20 = virtualinvoke numberLiteral.<org.ooc.frontend.model.IntLiteral: java.math.BigInteger getValue()>();

        $stack21 = virtualinvoke $stack20.<java.math.BigInteger: java.lang.String toString(int)>(16);

        virtualinvoke $stack19.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack21);

        goto label4;

     label2:
        $stack6 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack6.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(48);

        $stack8 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack9 = virtualinvoke numberLiteral.<org.ooc.frontend.model.IntLiteral: java.math.BigInteger getValue()>();

        $stack10 = virtualinvoke $stack9.<java.math.BigInteger: java.lang.String toString(int)>(8);

        virtualinvoke $stack8.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack10);

        goto label4;

     label3:
        $stack25 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack26 = virtualinvoke numberLiteral.<org.ooc.frontend.model.IntLiteral: java.math.BigInteger getValue()>();

        $stack27 = virtualinvoke $stack26.<java.math.BigInteger: java.lang.String toString()>();

        virtualinvoke $stack25.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack27);

     label4:
        $stack12 = virtualinvoke numberLiteral.<org.ooc.frontend.model.IntLiteral: java.math.BigInteger getValue()>();

        $stack13 = <org.ooc.backend.cdirty.LiteralWriter: java.math.BigInteger INT_MAX>;

        $stack14 = virtualinvoke $stack12.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($stack13);

        if $stack14 <= -1 goto label5;

        $stack15 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack15.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("L");

     label5:
        return;
    }

    public static void writeNull(org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack1;

        cgen := @parameter0: org.ooc.backend.cdirty.CGenerator;

        $stack1 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack1.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("NULL");

        return;
    }

    static void <clinit>()
    {
        java.math.BigInteger $stack0, $stack1;

        $stack0 = new java.math.BigInteger;

        specialinvoke $stack0.<java.math.BigInteger: void <init>(java.lang.String)>("2");

        $stack1 = virtualinvoke $stack0.<java.math.BigInteger: java.math.BigInteger pow(int)>(32);

        <org.ooc.backend.cdirty.LiteralWriter: java.math.BigInteger INT_MAX> = $stack1;

        return;
    }
}
