class LoggingRepositoryListener extends org.eclipse.aether.AbstractRepositoryListener
{
    private final org.codehaus.plexus.logging.Logger logger;

    void <init>(org.codehaus.plexus.logging.Logger)
    {
        LoggingRepositoryListener this;
        org.codehaus.plexus.logging.Logger logger;
        org.apache.maven.internal.aether.LoggingRepositoryListener $r0;

        this := @this: LoggingRepositoryListener;

        logger := @parameter0: org.codehaus.plexus.logging.Logger;

        specialinvoke this.<org.eclipse.aether.AbstractRepositoryListener: void <init>()>();

        $r0 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $r0.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger> = logger;

        return;
    }

    public void artifactInstalling(org.eclipse.aether.RepositoryEvent)
    {
        LoggingRepositoryListener this;
        org.codehaus.plexus.logging.Logger $stack3;
        java.lang.StringBuilder $stack4, $stack7, $stack8, $stack10, $u0;
        org.eclipse.aether.RepositoryEvent event;
        org.eclipse.aether.artifact.Artifact $stack5;
        java.io.File $stack6, $stack9;
        java.lang.String $stack11;
        org.apache.maven.internal.aether.LoggingRepositoryListener $r0;

        this := @this: LoggingRepositoryListener;

        event := @parameter0: org.eclipse.aether.RepositoryEvent;

        $r0 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack3 = $r0.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installing ");

        $stack5 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: org.eclipse.aether.artifact.Artifact getArtifact()>();

        $stack6 = interfaceinvoke $stack5.<org.eclipse.aether.artifact.Artifact: java.io.File getFile()>();

        $stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $stack9 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: java.io.File getFile()>();

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack3.<org.codehaus.plexus.logging.Logger: void info(java.lang.String)>($stack11);

        return;
    }

    public void metadataInstalling(org.eclipse.aether.RepositoryEvent)
    {
        LoggingRepositoryListener this;
        org.codehaus.plexus.logging.Logger $stack3;
        java.lang.StringBuilder $stack4, $stack6, $stack7, $stack9, $u0;
        org.eclipse.aether.RepositoryEvent event;
        org.eclipse.aether.metadata.Metadata $stack5;
        java.io.File $stack8;
        java.lang.String $stack10;
        org.apache.maven.internal.aether.LoggingRepositoryListener $r0;

        this := @this: LoggingRepositoryListener;

        event := @parameter0: org.eclipse.aether.RepositoryEvent;

        $r0 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack3 = $r0.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Installing ");

        $stack5 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: org.eclipse.aether.metadata.Metadata getMetadata()>();

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $stack8 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: java.io.File getFile()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack3.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack10);

        return;
    }

    public void metadataResolved(org.eclipse.aether.RepositoryEvent)
    {
        org.eclipse.aether.RepositoryEvent event;
        java.lang.Exception e;
        boolean $stack4, $stack6;
        LoggingRepositoryListener this;
        org.codehaus.plexus.logging.Logger $stack5, $stack7, $stack9, $stack11;
        java.lang.String $stack8, $stack10, $stack12;
        org.apache.maven.internal.aether.LoggingRepositoryListener $r0, $r1, $r2, $r3;

        this := @this: LoggingRepositoryListener;

        event := @parameter0: org.eclipse.aether.RepositoryEvent;

        e = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: java.lang.Exception getException()>();

        if e == null goto label3;

        $stack4 = e instanceof org.eclipse.aether.transfer.MetadataNotFoundException;

        if $stack4 == 0 goto label1;

        $r0 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack11 = $r0.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $stack12 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();

        interfaceinvoke $stack11.<org.codehaus.plexus.logging.Logger: void debug(java.lang.String)>($stack12);

        goto label3;

     label1:
        $r1 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack5 = $r1.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $stack6 = interfaceinvoke $stack5.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack6 == 0 goto label2;

        $r2 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack9 = $r2.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $stack10 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();

        interfaceinvoke $stack9.<org.codehaus.plexus.logging.Logger: void warn(java.lang.String,java.lang.Throwable)>($stack10, e);

        goto label3;

     label2:
        $r3 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack7 = $r3.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $stack8 = virtualinvoke e.<java.lang.Exception: java.lang.String getMessage()>();

        interfaceinvoke $stack7.<org.codehaus.plexus.logging.Logger: void warn(java.lang.String)>($stack8);

     label3:
        return;
    }

    public void metadataInvalid(org.eclipse.aether.RepositoryEvent)
    {
        org.eclipse.aether.RepositoryEvent event;
        java.lang.Exception exception;
        org.eclipse.aether.metadata.Metadata $stack7, $stack9, $stack25;
        java.io.File $stack8, $stack26;
        boolean $stack11, $stack14;
        LoggingRepositoryListener this;
        org.codehaus.plexus.logging.Logger $stack13, $stack15, $stack17;
        java.lang.String $stack16, $stack18, $stack20;
        java.lang.StringBuilder $u0;
        org.apache.maven.internal.aether.LoggingRepositoryListener $r0, $r1, $r2;

        this := @this: LoggingRepositoryListener;

        event := @parameter0: org.eclipse.aether.RepositoryEvent;

        exception = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: java.lang.Exception getException()>();

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(256);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The metadata ");

        $stack7 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: org.eclipse.aether.metadata.Metadata getMetadata()>();

        $stack8 = interfaceinvoke $stack7.<org.eclipse.aether.metadata.Metadata: java.io.File getFile()>();

        if $stack8 == null goto label1;

        $stack25 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: org.eclipse.aether.metadata.Metadata getMetadata()>();

        $stack26 = interfaceinvoke $stack25.<org.eclipse.aether.metadata.Metadata: java.io.File getFile()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack26);

        goto label2;

     label1:
        $stack9 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: org.eclipse.aether.metadata.Metadata getMetadata()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack9);

     label2:
        $stack11 = exception instanceof java.io.FileNotFoundException;

        if $stack11 == 0 goto label3;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is inaccessible");

        goto label4;

     label3:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is invalid");

     label4:
        if exception == null goto label5;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack20 = virtualinvoke exception.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

     label5:
        $r0 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack13 = $r0.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $stack14 = interfaceinvoke $stack13.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack14 == 0 goto label6;

        $r1 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack17 = $r1.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $stack18 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack17.<org.codehaus.plexus.logging.Logger: void warn(java.lang.String,java.lang.Throwable)>($stack18, exception);

        goto label7;

     label6:
        $r2 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack15 = $r2.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $stack16 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack15.<org.codehaus.plexus.logging.Logger: void warn(java.lang.String)>($stack16);

     label7:
        return;
    }

    public void artifactDescriptorInvalid(org.eclipse.aether.RepositoryEvent)
    {
        org.eclipse.aether.RepositoryEvent event;
        org.eclipse.aether.artifact.Artifact $stack5;
        LoggingRepositoryListener this;
        org.codehaus.plexus.logging.Logger $stack8, $stack11, $stack16;
        boolean $stack9;
        java.lang.StringBuilder $stack12, $stack13, $stack17, $stack18, $stack21, $u0, $u1, $u2;
        java.lang.String $stack14, $stack20, $stack22;
        java.lang.Exception $stack19;
        org.apache.maven.internal.aether.LoggingRepositoryListener $r0, $r1, $r2;

        this := @this: LoggingRepositoryListener;

        event := @parameter0: org.eclipse.aether.RepositoryEvent;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(256);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The POM for ");

        $stack5 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: org.eclipse.aether.artifact.Artifact getArtifact()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack5);

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is invalid, transitive dependencies (if any) will not be available");

        $r0 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack8 = $r0.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $stack9 = interfaceinvoke $stack8.<org.codehaus.plexus.logging.Logger: boolean isDebugEnabled()>();

        if $stack9 == 0 goto label1;

        $r1 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack16 = $r1.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u0);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack19 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: java.lang.Exception getException()>();

        $stack20 = virtualinvoke $stack19.<java.lang.Exception: java.lang.String getMessage()>();

        $stack21 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack16.<org.codehaus.plexus.logging.Logger: void warn(java.lang.String)>($stack22);

        goto label2;

     label1:
        $r2 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack11 = $r2.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($u0);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", enable verbose output (-X) for more details");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack11.<org.codehaus.plexus.logging.Logger: void warn(java.lang.String)>($stack14);

     label2:
        return;
    }

    public void artifactDescriptorMissing(org.eclipse.aether.RepositoryEvent)
    {
        LoggingRepositoryListener this;
        org.codehaus.plexus.logging.Logger $stack3;
        java.lang.StringBuilder $stack4, $stack6, $stack7, $u0;
        org.eclipse.aether.RepositoryEvent event;
        org.eclipse.aether.artifact.Artifact $stack5;
        java.lang.String $stack8;
        org.apache.maven.internal.aether.LoggingRepositoryListener $r0;

        this := @this: LoggingRepositoryListener;

        event := @parameter0: org.eclipse.aether.RepositoryEvent;

        $r0 = (org.apache.maven.internal.aether.LoggingRepositoryListener) this;

        $stack3 = $r0.<org.apache.maven.internal.aether.LoggingRepositoryListener: org.codehaus.plexus.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The POM for ");

        $stack5 = virtualinvoke event.<org.eclipse.aether.RepositoryEvent: org.eclipse.aether.artifact.Artifact getArtifact()>();

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is missing, no dependency information available");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack3.<org.codehaus.plexus.logging.Logger: void warn(java.lang.String)>($stack8);

        return;
    }
}
