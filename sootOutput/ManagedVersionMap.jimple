public class ManagedVersionMap extends java.util.HashMap
{

    public void <init>(java.util.Map)
    {
        ManagedVersionMap this;
        java.util.Map map;
        org.apache.maven.artifact.versioning.ManagedVersionMap $r0;

        this := @this: ManagedVersionMap;

        map := @parameter0: java.util.Map;

        specialinvoke this.<java.util.HashMap: void <init>()>();

        if map == null goto label1;

        $r0 = (org.apache.maven.artifact.versioning.ManagedVersionMap) this;

        virtualinvoke $r0.<org.apache.maven.artifact.versioning.ManagedVersionMap: void putAll(java.util.Map)>(map);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack6, $stack8, $stack9, $stack16, $stack17, $u0, $u1;
        ManagedVersionMap this;
        int $stack7;
        java.lang.String $stack10, $stack14, key;
        java.util.Set $stack11;
        java.util.Iterator iter;
        boolean $stack13, $stack20;
        java.lang.Object $stack15, $stack18;
        org.apache.maven.artifact.versioning.ManagedVersionMap $r0, $r1, $r2;

        this := @this: ManagedVersionMap;

        $u1 = new java.lang.StringBuilder;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack6 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ManagedVersionMap (");

        $r0 = (org.apache.maven.artifact.versioning.ManagedVersionMap) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.artifact.versioning.ManagedVersionMap: int size()>();

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack7);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entries)\n");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<java.lang.StringBuilder: void <init>(java.lang.String)>($stack10);

        $r1 = (org.apache.maven.artifact.versioning.ManagedVersionMap) this;

        $stack11 = virtualinvoke $r1.<org.apache.maven.artifact.versioning.ManagedVersionMap: java.util.Set keySet()>();

        iter = interfaceinvoke $stack11.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack13 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label3;

        $stack15 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $stack15;

        $stack16 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(key);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r2 = (org.apache.maven.artifact.versioning.ManagedVersionMap) this;

        $stack18 = virtualinvoke $r2.<org.apache.maven.artifact.versioning.ManagedVersionMap: java.lang.Object get(java.lang.Object)>(key);

        virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack18);

        $stack20 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label2;

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

     label2:
        goto label1;

     label3:
        $stack14 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack14;
    }
}
