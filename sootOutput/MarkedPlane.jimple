public class MarkedPlane extends java.lang.Object
{
    private org.bytedeco.javacv.Marker[] markers;
    private org.bytedeco.opencv.opencv_core.CvMat prewarp;
    private org.bytedeco.opencv.opencv_core.IplImage planeImage;
    private org.bytedeco.opencv.opencv_core.IplImage superPlaneImage;
    private org.bytedeco.opencv.opencv_core.CvScalar foregroundColor;
    private org.bytedeco.opencv.opencv_core.CvScalar backgroundColor;
    private java.lang.ThreadLocal localSrcPts;
    private java.lang.ThreadLocal localDstPts;
    private static java.lang.ThreadLocal tempWarp3x3;

    public void <init>(int, int, org.bytedeco.javacv.Marker[], double)
    {
        MarkedPlane this;
        int width, height;
        org.bytedeco.javacv.Marker[] planeMarkers;
        double superScale;
        org.bytedeco.opencv.opencv_core.CvScalar $stack6, $stack7;
        org.bytedeco.javacv.MarkedPlane $r0;

        this := @this: MarkedPlane;

        width := @parameter0: int;

        height := @parameter1: int;

        planeMarkers := @parameter2: org.bytedeco.javacv.Marker[];

        superScale := @parameter3: double;

        $stack7 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar BLACK>;

        $stack6 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar WHITE>;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        specialinvoke $r0.<org.bytedeco.javacv.MarkedPlane: void <init>(int,int,org.bytedeco.javacv.Marker[],boolean,org.bytedeco.opencv.opencv_core.CvScalar,org.bytedeco.opencv.opencv_core.CvScalar,double)>(width, height, planeMarkers, 0, $stack7, $stack6, superScale);

        return;
    }

    public void <init>(int, int, org.bytedeco.javacv.Marker[], boolean, org.bytedeco.opencv.opencv_core.CvScalar, org.bytedeco.opencv.opencv_core.CvScalar, double)
    {
        MarkedPlane this;
        org.bytedeco.javacv.Marker[] markers;
        org.bytedeco.opencv.opencv_core.CvScalar foregroundColor, backgroundColor;
        boolean initPrewarp;
        int width, height, $stack43, $stack45, l18, h, $stack22, $stack23, $stack25, $stack26;
        org.bytedeco.opencv.opencv_core.IplImage $stack36, $stack46;
        double superScale, $stack38, $stack39, $stack40, $stack41, $stack42, $stack44, $stack51, $stack52, $stack53, $stack54, $stack55, $stack57, $stack60, $stack61, $stack65, $stack68, $stack69, $stack70, $stack71, $stack72, $stack73, $stack74, $stack75, $stack78, $stack79, $stack80, $stack81, $stack82, $stack83, $stack84, $stack86, $stack87, $stack88, $stack89, $stack90, $stack91, $stack92, $stack94, $stack95, $stack96, $stack97, $stack98, $stack99, $stack100, $stack102, $stack103, $stack104, $stack105, $stack106, $stack107, $stack108, minx, miny, maxx, maxy, aspect#7, h#8;
        byte $stack37, $stack56;
        org.bytedeco.opencv.opencv_core.CvMat $stack47, $stack50, $stack62, $stack76;
        double[] $stack58, $stack59, $stack66, $stack67, c;
        org.bytedeco.javacv.Marker m;
        java.lang.ThreadLocal $stack24, $stack27;
        org.bytedeco.javacv.MarkedPlane $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;

        this := @this: MarkedPlane;

        width := @parameter0: int;

        height := @parameter1: int;

        markers := @parameter2: org.bytedeco.javacv.Marker[];

        initPrewarp := @parameter3: boolean;

        foregroundColor := @parameter4: org.bytedeco.opencv.opencv_core.CvScalar;

        backgroundColor := @parameter5: org.bytedeco.opencv.opencv_core.CvScalar;

        superScale := @parameter6: double;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] markers> = null;

        $r1 = (org.bytedeco.javacv.MarkedPlane) this;

        $r1.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage planeImage> = null;

        $r2 = (org.bytedeco.javacv.MarkedPlane) this;

        $r2.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage> = null;

        $r3 = (org.bytedeco.javacv.MarkedPlane) this;

        $r3.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] markers> = markers;

        $r4 = (org.bytedeco.javacv.MarkedPlane) this;

        $r4.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar foregroundColor> = foregroundColor;

        $r5 = (org.bytedeco.javacv.MarkedPlane) this;

        $r5.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar backgroundColor> = backgroundColor;

        $r6 = (org.bytedeco.javacv.MarkedPlane) this;

        $r6.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp> = null;

        if initPrewarp == 0 goto label4;

        $stack50 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $r7 = (org.bytedeco.javacv.MarkedPlane) this;

        $r7.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp> = $stack50;

        minx = 1.7976931348623157E308;

        miny = 1.7976931348623157E308;

        maxx = 4.9E-324;

        maxy = 4.9E-324;

        l18 = lengthof markers;

        h = 0;

     label1:
        if h >= l18 goto label2;

        m = markers[h];

        c = m.<org.bytedeco.javacv.Marker: double[] corners>;

        $stack78 = c[0];

        $stack79 = staticinvoke <java.lang.Math: double min(double,double)>(minx, $stack78);

        $stack80 = c[2];

        $stack81 = staticinvoke <java.lang.Math: double min(double,double)>($stack79, $stack80);

        $stack82 = c[4];

        $stack83 = staticinvoke <java.lang.Math: double min(double,double)>($stack81, $stack82);

        $stack84 = c[6];

        minx = staticinvoke <java.lang.Math: double min(double,double)>($stack83, $stack84);

        $stack86 = c[1];

        $stack87 = staticinvoke <java.lang.Math: double min(double,double)>(miny, $stack86);

        $stack88 = c[3];

        $stack89 = staticinvoke <java.lang.Math: double min(double,double)>($stack87, $stack88);

        $stack90 = c[5];

        $stack91 = staticinvoke <java.lang.Math: double min(double,double)>($stack89, $stack90);

        $stack92 = c[7];

        miny = staticinvoke <java.lang.Math: double min(double,double)>($stack91, $stack92);

        $stack94 = c[0];

        $stack95 = staticinvoke <java.lang.Math: double max(double,double)>(maxx, $stack94);

        $stack96 = c[2];

        $stack97 = staticinvoke <java.lang.Math: double max(double,double)>($stack95, $stack96);

        $stack98 = c[4];

        $stack99 = staticinvoke <java.lang.Math: double max(double,double)>($stack97, $stack98);

        $stack100 = c[6];

        maxx = staticinvoke <java.lang.Math: double max(double,double)>($stack99, $stack100);

        $stack102 = c[1];

        $stack103 = staticinvoke <java.lang.Math: double max(double,double)>(maxy, $stack102);

        $stack104 = c[3];

        $stack105 = staticinvoke <java.lang.Math: double max(double,double)>($stack103, $stack104);

        $stack106 = c[5];

        $stack107 = staticinvoke <java.lang.Math: double max(double,double)>($stack105, $stack106);

        $stack108 = c[7];

        maxy = staticinvoke <java.lang.Math: double max(double,double)>($stack107, $stack108);

        h = h + 1;

        goto label1;

     label2:
        $stack52 = maxx - minx;

        $stack51 = maxy - miny;

        aspect#7 = $stack52 / $stack51;

        $stack54 = (double) width;

        $stack53 = (double) height;

        $stack55 = $stack54 / $stack53;

        $stack56 = aspect#7 cmpl $stack55;

        if $stack56 <= 0 goto label3;

        $stack65 = (double) width;

        h#8 = $stack65 / aspect#7;

        $stack66 = newarray (double)[8];

        $stack66[0] = minx;

        $stack66[1] = miny;

        $stack66[2] = maxx;

        $stack66[3] = miny;

        $stack66[4] = maxx;

        $stack66[5] = maxy;

        $stack66[6] = minx;

        $stack66[7] = maxy;

        $stack67 = newarray (double)[8];

        $stack67[0] = 0.0;

        $stack68 = (double) height;

        $stack69 = $stack68 - h#8;

        $stack67[1] = $stack69;

        $stack70 = (double) width;

        $stack67[2] = $stack70;

        $stack71 = (double) height;

        $stack72 = $stack71 - h#8;

        $stack67[3] = $stack72;

        $stack73 = (double) width;

        $stack67[4] = $stack73;

        $stack74 = (double) height;

        $stack67[5] = $stack74;

        $stack67[6] = 0.0;

        $stack75 = (double) height;

        $stack67[7] = $stack75;

        $r8 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack76 = $r8.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp>;

        staticinvoke <org.bytedeco.javacv.JavaCV: org.bytedeco.opencv.opencv_core.CvMat getPerspectiveTransform(double[],double[],org.bytedeco.opencv.opencv_core.CvMat)>($stack66, $stack67, $stack76);

        goto label4;

     label3:
        $stack57 = (double) height;

        h#8 = $stack57 * aspect#7;

        $stack58 = newarray (double)[8];

        $stack58[0] = minx;

        $stack58[1] = miny;

        $stack58[2] = maxx;

        $stack58[3] = miny;

        $stack58[4] = maxx;

        $stack58[5] = maxy;

        $stack58[6] = minx;

        $stack58[7] = maxy;

        $stack59 = newarray (double)[8];

        $stack59[0] = 0.0;

        $stack59[1] = 0.0;

        $stack59[2] = h#8;

        $stack59[3] = 0.0;

        $stack59[4] = h#8;

        $stack60 = (double) height;

        $stack59[5] = $stack60;

        $stack59[6] = 0.0;

        $stack61 = (double) height;

        $stack59[7] = $stack61;

        $r9 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack62 = $r9.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp>;

        staticinvoke <org.bytedeco.javacv.JavaCV: org.bytedeco.opencv.opencv_core.CvMat getPerspectiveTransform(double[],double[],org.bytedeco.opencv.opencv_core.CvMat)>($stack58, $stack59, $stack62);

     label4:
        if width <= 0 goto label7;

        if height <= 0 goto label7;

        $stack36 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>(width, height, 8, 1);

        $r10 = (org.bytedeco.javacv.MarkedPlane) this;

        $r10.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage planeImage> = $stack36;

        $stack37 = superScale cmpl 1.0;

        if $stack37 != 0 goto label5;

        $r11 = (org.bytedeco.javacv.MarkedPlane) this;

        $r11.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage> = null;

        goto label6;

     label5:
        $stack38 = (double) width;

        $stack39 = $stack38 * superScale;

        $stack40 = staticinvoke <java.lang.Math: double ceil(double)>($stack39);

        $stack43 = (int) $stack40;

        $stack41 = (double) height;

        $stack42 = $stack41 * superScale;

        $stack44 = staticinvoke <java.lang.Math: double ceil(double)>($stack42);

        $stack45 = (int) $stack44;

        $stack46 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack43, $stack45, 8, 1);

        $r12 = (org.bytedeco.javacv.MarkedPlane) this;

        $r12.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage> = $stack46;

     label6:
        $r13 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack47 = $r13.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp>;

        $r14 = (org.bytedeco.javacv.MarkedPlane) this;

        virtualinvoke $r14.<org.bytedeco.javacv.MarkedPlane: void setPrewarp(org.bytedeco.opencv.opencv_core.CvMat)>($stack47);

     label7:
        $stack22 = lengthof markers;

        $stack23 = $stack22 * 4;

        $stack24 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>($stack23, 2);

        $r15 = (org.bytedeco.javacv.MarkedPlane) this;

        $r15.<org.bytedeco.javacv.MarkedPlane: java.lang.ThreadLocal localSrcPts> = $stack24;

        $stack25 = lengthof markers;

        $stack26 = $stack25 * 4;

        $stack27 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>($stack26, 2);

        $r16 = (org.bytedeco.javacv.MarkedPlane) this;

        $r16.<org.bytedeco.javacv.MarkedPlane: java.lang.ThreadLocal localDstPts> = $stack27;

        return;
    }

    public org.bytedeco.opencv.opencv_core.CvScalar getForegroundColor()
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.CvScalar $stack1;
        org.bytedeco.javacv.MarkedPlane $r0;

        this := @this: MarkedPlane;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar foregroundColor>;

        return $stack1;
    }

    public void setForegroundColor(org.bytedeco.opencv.opencv_core.CvScalar)
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.CvScalar foregroundColor;
        org.bytedeco.opencv.opencv_core.CvMat $stack2;
        org.bytedeco.javacv.MarkedPlane $r0, $r1, $r2;

        this := @this: MarkedPlane;

        foregroundColor := @parameter0: org.bytedeco.opencv.opencv_core.CvScalar;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar foregroundColor> = foregroundColor;

        $r1 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack2 = $r1.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp>;

        $r2 = (org.bytedeco.javacv.MarkedPlane) this;

        virtualinvoke $r2.<org.bytedeco.javacv.MarkedPlane: void setPrewarp(org.bytedeco.opencv.opencv_core.CvMat)>($stack2);

        return;
    }

    public org.bytedeco.opencv.opencv_core.CvScalar getBackgroundColor()
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.CvScalar $stack1;
        org.bytedeco.javacv.MarkedPlane $r0;

        this := @this: MarkedPlane;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar backgroundColor>;

        return $stack1;
    }

    public void setBackgroundColor(org.bytedeco.opencv.opencv_core.CvScalar)
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.CvScalar backgroundColor;
        org.bytedeco.opencv.opencv_core.CvMat $stack2;
        org.bytedeco.javacv.MarkedPlane $r0, $r1, $r2;

        this := @this: MarkedPlane;

        backgroundColor := @parameter0: org.bytedeco.opencv.opencv_core.CvScalar;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar backgroundColor> = backgroundColor;

        $r1 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack2 = $r1.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp>;

        $r2 = (org.bytedeco.javacv.MarkedPlane) this;

        virtualinvoke $r2.<org.bytedeco.javacv.MarkedPlane: void setPrewarp(org.bytedeco.opencv.opencv_core.CvMat)>($stack2);

        return;
    }

    public org.bytedeco.javacv.Marker[] getMarkers()
    {
        MarkedPlane this;
        org.bytedeco.javacv.Marker[] $stack1;
        org.bytedeco.javacv.MarkedPlane $r0;

        this := @this: MarkedPlane;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] markers>;

        return $stack1;
    }

    public void setColors(org.bytedeco.opencv.opencv_core.CvScalar, org.bytedeco.opencv.opencv_core.CvScalar)
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.CvScalar foregroundColor, backgroundColor;
        org.bytedeco.opencv.opencv_core.CvMat $stack3;
        org.bytedeco.javacv.MarkedPlane $r0, $r1, $r2, $r3;

        this := @this: MarkedPlane;

        foregroundColor := @parameter0: org.bytedeco.opencv.opencv_core.CvScalar;

        backgroundColor := @parameter1: org.bytedeco.opencv.opencv_core.CvScalar;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar foregroundColor> = foregroundColor;

        $r1 = (org.bytedeco.javacv.MarkedPlane) this;

        $r1.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar backgroundColor> = backgroundColor;

        $r2 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack3 = $r2.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp>;

        $r3 = (org.bytedeco.javacv.MarkedPlane) this;

        virtualinvoke $r3.<org.bytedeco.javacv.MarkedPlane: void setPrewarp(org.bytedeco.opencv.opencv_core.CvMat)>($stack3);

        return;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getPrewarp()
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.CvMat $stack1;
        org.bytedeco.javacv.MarkedPlane $r0;

        this := @this: MarkedPlane;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp>;

        return $stack1;
    }

    public void setPrewarp(org.bytedeco.opencv.opencv_core.CvMat)
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.CvMat prewarp;
        org.bytedeco.opencv.opencv_core.IplImage $stack3, $stack5, $stack8, $stack9, $stack10, $stack11, $stack13, $stack15, $stack18, $stack27, $stack30;
        org.bytedeco.opencv.opencv_core.CvScalar $stack4, $stack16, $stack26, $stack29;
        org.bytedeco.javacv.Marker[] $stack12, $stack25, $stack6;
        org.bytedeco.javacv.Marker $stack14, $stack28;
        int $stack17, $stack20, i, $stack7;
        double $stack19, $stack21, $stack22;
        org.bytedeco.javacv.MarkedPlane $r0, $r1, $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        org.bytedeco.opencv.opencv_core.CvArr $r4, $r7, $r21, $r22;

        this := @this: MarkedPlane;

        prewarp := @parameter0: org.bytedeco.opencv.opencv_core.CvMat;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp> = prewarp;

        $r1 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack3 = $r1.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage>;

        if $stack3 != null goto label1;

        $r2 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack30 = $r2.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage planeImage>;

        $r3 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack29 = $r3.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar backgroundColor>;

        $r4 = (org.bytedeco.opencv.opencv_core.CvArr) $stack30;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSet(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvScalar)>($r4, $stack29);

        goto label2;

     label1:
        $r5 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack5 = $r5.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage>;

        $r6 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack4 = $r6.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar backgroundColor>;

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) $stack5;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSet(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvScalar)>($r7, $stack4);

     label2:
        i = 0;

     label3:
        $r8 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack6 = $r8.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] markers>;

        $stack7 = lengthof $stack6;

        if i >= $stack7 goto label6;

        $r9 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack11 = $r9.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage>;

        if $stack11 != null goto label4;

        $r10 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack25 = $r10.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] markers>;

        $stack28 = $stack25[i];

        $r11 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack27 = $r11.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage planeImage>;

        $r12 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack26 = $r12.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar foregroundColor>;

        virtualinvoke $stack28.<org.bytedeco.javacv.Marker: void draw(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.CvScalar,double,org.bytedeco.opencv.opencv_core.CvMat)>($stack27, $stack26, 1.0, prewarp);

        goto label5;

     label4:
        $r13 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack12 = $r13.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] markers>;

        $stack14 = $stack12[i];

        $r14 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack15 = $r14.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage>;

        $r15 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack16 = $r15.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar foregroundColor>;

        $r16 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack13 = $r16.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage>;

        $stack17 = virtualinvoke $stack13.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack19 = (double) $stack17;

        $r17 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack18 = $r17.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage planeImage>;

        $stack20 = virtualinvoke $stack18.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack21 = (double) $stack20;

        $stack22 = $stack19 / $stack21;

        virtualinvoke $stack14.<org.bytedeco.javacv.Marker: void draw(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.CvScalar,double,org.bytedeco.opencv.opencv_core.CvMat)>($stack15, $stack16, $stack22, prewarp);

     label5:
        i = i + 1;

        goto label3;

     label6:
        $r18 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack8 = $r18.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage>;

        if $stack8 == null goto label7;

        $r19 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack10 = $r19.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage superPlaneImage>;

        $r20 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack9 = $r20.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage planeImage>;

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) $stack10;

        $r22 = (org.bytedeco.opencv.opencv_core.CvArr) $stack9;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvResize(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r21, $r22, 3);

     label7:
        return;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getImage()
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.IplImage $stack1;
        org.bytedeco.javacv.MarkedPlane $r0;

        this := @this: MarkedPlane;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage planeImage>;

        return $stack1;
    }

    public int getWidth()
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.IplImage $stack1;
        int $stack2;
        org.bytedeco.javacv.MarkedPlane $r0;

        this := @this: MarkedPlane;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage planeImage>;

        $stack2 = virtualinvoke $stack1.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        return $stack2;
    }

    public int getHeight()
    {
        MarkedPlane this;
        org.bytedeco.opencv.opencv_core.IplImage $stack1;
        int $stack2;
        org.bytedeco.javacv.MarkedPlane $r0;

        this := @this: MarkedPlane;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage planeImage>;

        $stack2 = virtualinvoke $stack1.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        return $stack2;
    }

    public double getTotalWarp(org.bytedeco.javacv.Marker[], org.bytedeco.opencv.opencv_core.CvMat)
    {
        MarkedPlane this;
        org.bytedeco.javacv.Marker[] imagedMarkers;
        org.bytedeco.opencv.opencv_core.CvMat totalWarp;
        double $stack3;
        org.bytedeco.javacv.MarkedPlane $r0;

        this := @this: MarkedPlane;

        imagedMarkers := @parameter0: org.bytedeco.javacv.Marker[];

        totalWarp := @parameter1: org.bytedeco.opencv.opencv_core.CvMat;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack3 = virtualinvoke $r0.<org.bytedeco.javacv.MarkedPlane: double getTotalWarp(org.bytedeco.javacv.Marker[],org.bytedeco.opencv.opencv_core.CvMat,boolean)>(imagedMarkers, totalWarp, 0);

        return $stack3;
    }

    public double getTotalWarp(org.bytedeco.javacv.Marker[], org.bytedeco.opencv.opencv_core.CvMat, boolean)
    {
        boolean useCenters;
        byte pointsPerMarker, $stack120;
        MarkedPlane this;
        java.lang.ThreadLocal $stack18, $stack24, $stack44;
        java.lang.Object $stack19, $stack25, $stack45;
        org.bytedeco.opencv.opencv_core.CvMat srcPts, dstPts, $stack35, totalWarp, $stack43, $stack46, i#21;
        org.bytedeco.javacv.Marker[] $stack20, $stack26, imagedMarkers, i;
        int $stack21, $stack22, $stack27, $stack28, $stack49, $stack51, $stack53, $stack54, $stack56, $stack57, $stack92, l15, $stack101, $stack102, $stack106, $stack109, $stack111, $stack114, numPoints, dx, l12, l16, i#14;
        org.bytedeco.opencv.opencv_core.Mat $stack32, $stack33, $stack34;
        double $stack40, $stack41, $stack50, $stack52, $stack55, $stack58, $stack59, $stack60, $stack61, rmse, dx#19, m1#20;
        double[] $stack64, $stack65, $stack105, $stack108, $stack112, $stack115;
        org.bytedeco.javacv.Marker m2, m1;
        org.bytedeco.javacv.MarkedPlane $r0, $r1, $r2, $r3, $r4, $r11, $r12;
        org.bytedeco.opencv.opencv_core.CvArr $r5, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r17;

        this := @this: MarkedPlane;

        imagedMarkers := @parameter0: org.bytedeco.javacv.Marker[];

        totalWarp := @parameter1: org.bytedeco.opencv.opencv_core.CvMat;

        useCenters := @parameter2: boolean;

        rmse = #Infinity;

        if useCenters == 0 goto label01;

        $stack120 = 1;

        goto label02;

     label01:
        $stack120 = 4;

     label02:
        pointsPerMarker = $stack120;

        $r0 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack18 = $r0.<org.bytedeco.javacv.MarkedPlane: java.lang.ThreadLocal localSrcPts>;

        $stack19 = virtualinvoke $stack18.<java.lang.ThreadLocal: java.lang.Object get()>();

        srcPts = (org.bytedeco.opencv.opencv_core.CvMat) $stack19;

        $r1 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack20 = $r1.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] markers>;

        $stack21 = lengthof $stack20;

        $stack22 = $stack21 * $stack120;

        virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat rows(int)>($stack22);

        $r2 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack24 = $r2.<org.bytedeco.javacv.MarkedPlane: java.lang.ThreadLocal localDstPts>;

        $stack25 = virtualinvoke $stack24.<java.lang.ThreadLocal: java.lang.Object get()>();

        dstPts = (org.bytedeco.opencv.opencv_core.CvMat) $stack25;

        $r3 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack26 = $r3.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] markers>;

        $stack27 = lengthof $stack26;

        $stack28 = $stack27 * $stack120;

        virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat rows(int)>($stack28);

        numPoints = 0;

        $r4 = (org.bytedeco.javacv.MarkedPlane) this;

        i = $r4.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] markers>;

        dx = lengthof i;

        l12 = 0;

     label03:
        if l12 >= dx goto label09;

        m1 = i[l12];

        l15 = lengthof imagedMarkers;

        l16 = 0;

     label04:
        if l16 >= l15 goto label08;

        m2 = imagedMarkers[l16];

        $stack102 = m1.<org.bytedeco.javacv.Marker: int id>;

        $stack101 = m2.<org.bytedeco.javacv.Marker: int id>;

        if $stack102 != $stack101 goto label07;

        if useCenters == 0 goto label05;

        $stack111 = numPoints * 2;

        $stack112 = virtualinvoke m1.<org.bytedeco.javacv.Marker: double[] getCenter()>();

        virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double[])>($stack111, $stack112);

        $stack114 = numPoints * 2;

        $stack115 = virtualinvoke m2.<org.bytedeco.javacv.Marker: double[] getCenter()>();

        virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double[])>($stack114, $stack115);

        goto label06;

     label05:
        $stack106 = numPoints * 2;

        $stack105 = m1.<org.bytedeco.javacv.Marker: double[] corners>;

        virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double[])>($stack106, $stack105);

        $stack109 = numPoints * 2;

        $stack108 = m2.<org.bytedeco.javacv.Marker: double[] corners>;

        virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double[])>($stack109, $stack108);

     label06:
        numPoints = numPoints + pointsPerMarker;

        goto label08;

     label07:
        l16 = l16 + 1;

        goto label04;

     label08:
        l12 = l12 + 1;

        goto label03;

     label09:
        if numPoints > 4 goto label10;

        $stack92 = virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: int rows()>();

        if $stack92 != 4 goto label15;

        if numPoints != 4 goto label15;

     label10:
        virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat rows(int)>(numPoints);

        virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat rows(int)>(numPoints);

        if numPoints != 4 goto label11;

        $stack64 = virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        $stack65 = virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        staticinvoke <org.bytedeco.javacv.JavaCV: org.bytedeco.opencv.opencv_core.CvMat getPerspectiveTransform(double[],double[],org.bytedeco.opencv.opencv_core.CvMat)>($stack64, $stack65, totalWarp);

        goto label12;

     label11:
        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) srcPts;

        $stack32 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r5);

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) dstPts;

        $stack33 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r6);

        $stack34 = staticinvoke <org.bytedeco.opencv.global.opencv_calib3d: org.bytedeco.opencv.opencv_core.Mat findHomography(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat)>($stack32, $stack33);

        $stack35 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($stack34);

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) $stack35;

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) totalWarp;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvCopy(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r7, $r8);

     label12:
        virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat cols(int)>(1);

        virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: void type(int,int)>(6, 2);

        virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat cols(int)>(1);

        virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: void type(int,int)>(6, 2);

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) srcPts;

        $r10 = (org.bytedeco.opencv.opencv_core.CvArr) srcPts;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvPerspectiveTransform(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvMat)>($r9, $r10, totalWarp);

        virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat cols(int)>(2);

        virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: void type(int,int)>(6, 1);

        virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat cols(int)>(2);

        virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: void type(int,int)>(6, 1);

        rmse = 0.0;

        i#14 = 0;

     label13:
        if i#14 >= numPoints goto label14;

        $stack49 = i#14 * 2;

        $stack50 = virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>($stack49);

        $stack51 = i#14 * 2;

        $stack52 = virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>($stack51);

        dx#19 = $stack50 - $stack52;

        $stack53 = i#14 * 2;

        $stack54 = $stack53 + 1;

        $stack55 = virtualinvoke dstPts.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>($stack54);

        $stack56 = i#14 * 2;

        $stack57 = $stack56 + 1;

        $stack58 = virtualinvoke srcPts.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>($stack57);

        m1#20 = $stack55 - $stack58;

        $stack60 = dx#19 * dx#19;

        $stack59 = m1#20 * m1#20;

        $stack61 = $stack60 + $stack59;

        rmse = rmse + $stack61;

        i#14 = i#14 + 1;

        goto label13;

     label14:
        $stack40 = (double) numPoints;

        $stack41 = rmse / $stack40;

        rmse = staticinvoke <java.lang.Math: double sqrt(double)>($stack41);

        $r11 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack43 = $r11.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp>;

        if $stack43 == null goto label15;

        $stack44 = <org.bytedeco.javacv.MarkedPlane: java.lang.ThreadLocal tempWarp3x3>;

        $stack45 = virtualinvoke $stack44.<java.lang.ThreadLocal: java.lang.Object get()>();

        i#21 = (org.bytedeco.opencv.opencv_core.CvMat) $stack45;

        $r12 = (org.bytedeco.javacv.MarkedPlane) this;

        $stack46 = $r12.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat prewarp>;

        $r13 = (org.bytedeco.opencv.opencv_core.CvArr) $stack46;

        $r14 = (org.bytedeco.opencv.opencv_core.CvArr) i#21;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r13, $r14);

        $r15 = (org.bytedeco.opencv.opencv_core.CvArr) totalWarp;

        $r16 = (org.bytedeco.opencv.opencv_core.CvArr) i#21;

        $r17 = (org.bytedeco.opencv.opencv_core.CvArr) totalWarp;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r15, $r16, $r17);

     label15:
        return rmse;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $stack0;

        $stack0 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 3);

        <org.bytedeco.javacv.MarkedPlane: java.lang.ThreadLocal tempWarp3x3> = $stack0;

        return;
    }
}
