public class MarkerDetector$Settings extends org.bytedeco.javacv.BaseChildSettings
{
    int thresholdWindowMin;
    int thresholdWindowMax;
    double thresholdVarMultiplier;
    double thresholdKBlackMarkers;
    double thresholdKWhiteMarkers;
    int subPixelWindow;

    public void <init>()
    {
        MarkerDetector$Settings this;
        org.bytedeco.javacv.MarkerDetector$Settings $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MarkerDetector$Settings;

        specialinvoke this.<org.bytedeco.javacv.BaseChildSettings: void <init>()>();

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r0.<org.bytedeco.javacv.MarkerDetector$Settings: int thresholdWindowMin> = 5;

        $r1 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r1.<org.bytedeco.javacv.MarkerDetector$Settings: int thresholdWindowMax> = 63;

        $r2 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r2.<org.bytedeco.javacv.MarkerDetector$Settings: double thresholdVarMultiplier> = 1.0;

        $r3 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r3.<org.bytedeco.javacv.MarkerDetector$Settings: double thresholdKBlackMarkers> = 0.6;

        $r4 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r4.<org.bytedeco.javacv.MarkerDetector$Settings: double thresholdKWhiteMarkers> = 1.0;

        $r5 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r5.<org.bytedeco.javacv.MarkerDetector$Settings: int subPixelWindow> = 11;

        return;
    }

    public int getThresholdWindowMin()
    {
        MarkerDetector$Settings this;
        int $stack1;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkerDetector$Settings: int thresholdWindowMin>;

        return $stack1;
    }

    public void setThresholdWindowMin(int)
    {
        MarkerDetector$Settings this;
        int thresholdWindowMin;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        thresholdWindowMin := @parameter0: int;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r0.<org.bytedeco.javacv.MarkerDetector$Settings: int thresholdWindowMin> = thresholdWindowMin;

        return;
    }

    public int getThresholdWindowMax()
    {
        MarkerDetector$Settings this;
        int $stack1;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkerDetector$Settings: int thresholdWindowMax>;

        return $stack1;
    }

    public void setThresholdWindowMax(int)
    {
        MarkerDetector$Settings this;
        int thresholdWindowMax;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        thresholdWindowMax := @parameter0: int;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r0.<org.bytedeco.javacv.MarkerDetector$Settings: int thresholdWindowMax> = thresholdWindowMax;

        return;
    }

    public double getThresholdVarMultiplier()
    {
        MarkerDetector$Settings this;
        double $stack1;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkerDetector$Settings: double thresholdVarMultiplier>;

        return $stack1;
    }

    public void setThresholdVarMultiplier(double)
    {
        MarkerDetector$Settings this;
        double thresholdVarMultiplier;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        thresholdVarMultiplier := @parameter0: double;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r0.<org.bytedeco.javacv.MarkerDetector$Settings: double thresholdVarMultiplier> = thresholdVarMultiplier;

        return;
    }

    public double getThresholdKBlackMarkers()
    {
        MarkerDetector$Settings this;
        double $stack1;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkerDetector$Settings: double thresholdKBlackMarkers>;

        return $stack1;
    }

    public void setThresholdKBlackMarkers(double)
    {
        MarkerDetector$Settings this;
        double thresholdKBlackMarkers;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        thresholdKBlackMarkers := @parameter0: double;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r0.<org.bytedeco.javacv.MarkerDetector$Settings: double thresholdKBlackMarkers> = thresholdKBlackMarkers;

        return;
    }

    public double getThresholdKWhiteMarkers()
    {
        MarkerDetector$Settings this;
        double $stack1;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkerDetector$Settings: double thresholdKWhiteMarkers>;

        return $stack1;
    }

    public void setThresholdKWhiteMarkers(double)
    {
        MarkerDetector$Settings this;
        double thresholdKWhiteMarkers;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        thresholdKWhiteMarkers := @parameter0: double;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r0.<org.bytedeco.javacv.MarkerDetector$Settings: double thresholdKWhiteMarkers> = thresholdKWhiteMarkers;

        return;
    }

    public int getSubPixelWindow()
    {
        MarkerDetector$Settings this;
        int $stack1;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.MarkerDetector$Settings: int subPixelWindow>;

        return $stack1;
    }

    public void setSubPixelWindow(int)
    {
        MarkerDetector$Settings this;
        int subPixelWindow;
        org.bytedeco.javacv.MarkerDetector$Settings $r0;

        this := @this: MarkerDetector$Settings;

        subPixelWindow := @parameter0: int;

        $r0 = (org.bytedeco.javacv.MarkerDetector$Settings) this;

        $r0.<org.bytedeco.javacv.MarkerDetector$Settings: int subPixelWindow> = subPixelWindow;

        return;
    }
}
