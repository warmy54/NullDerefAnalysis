public class MavenArtifactRepository extends java.lang.Object implements org.apache.maven.artifact.repository.ArtifactRepository
{
    private static final java.lang.String LS;
    private java.lang.String id;
    private java.lang.String url;
    private java.lang.String basedir;
    private java.lang.String protocol;
    private org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout;
    private org.apache.maven.artifact.repository.ArtifactRepositoryPolicy snapshots;
    private org.apache.maven.artifact.repository.ArtifactRepositoryPolicy releases;
    private org.apache.maven.artifact.repository.Authentication authentication;
    private org.apache.maven.repository.Proxy proxy;
    private java.util.List mirroredRepositories;
    private boolean blocked;

    public void <init>()
    {
        MavenArtifactRepository this;
        java.util.List $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.util.List mirroredRepositories> = $stack1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy, org.apache.maven.artifact.repository.ArtifactRepositoryPolicy)
    {
        MavenArtifactRepository this;
        java.util.List $stack6;
        java.lang.String id, url, $stack7, $stack8;
        org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy snapshots, releases;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: MavenArtifactRepository;

        id := @parameter0: java.lang.String;

        url := @parameter1: java.lang.String;

        layout := @parameter2: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout;

        snapshots := @parameter3: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;

        releases := @parameter4: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.util.List mirroredRepositories> = $stack6;

        $r1 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r1.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String id> = id;

        $r2 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r2.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String url> = url;

        $r3 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r3.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout> = layout;

        $r4 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r4.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy snapshots> = snapshots;

        $r5 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r5.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy releases> = releases;

        $stack7 = staticinvoke <org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String protocol(java.lang.String)>(url);

        $r6 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r6.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String protocol> = $stack7;

        $r7 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack8 = specialinvoke $r7.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String basedir(java.lang.String)>(url);

        $r8 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r8.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String basedir> = $stack8;

        return;
    }

    public java.lang.String pathOf(org.apache.maven.artifact.Artifact)
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.Artifact artifact;
        org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout $stack2;
        java.lang.String $stack3;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack2 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout>;

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout: java.lang.String pathOf(org.apache.maven.artifact.Artifact)>(artifact);

        return $stack3;
    }

    public java.lang.String pathOfRemoteRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata)
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.metadata.ArtifactMetadata artifactMetadata;
        org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout $stack2;
        java.lang.String $stack3;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        artifactMetadata := @parameter0: org.apache.maven.artifact.metadata.ArtifactMetadata;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack2 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout>;

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout: java.lang.String pathOfRemoteRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata)>(artifactMetadata);

        return $stack3;
    }

    public java.lang.String pathOfLocalRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata, org.apache.maven.artifact.repository.ArtifactRepository)
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.metadata.ArtifactMetadata metadata;
        org.apache.maven.artifact.repository.ArtifactRepository repository;
        org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout $stack3;
        java.lang.String $stack4;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        metadata := @parameter0: org.apache.maven.artifact.metadata.ArtifactMetadata;

        repository := @parameter1: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack3 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout>;

        $stack4 = interfaceinvoke $stack3.<org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout: java.lang.String pathOfLocalRepositoryMetadata(org.apache.maven.artifact.metadata.ArtifactMetadata,org.apache.maven.artifact.repository.ArtifactRepository)>(metadata, repository);

        return $stack4;
    }

    public void setLayout(org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout)
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        layout := @parameter0: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout> = layout;

        return;
    }

    public org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout getLayout()
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout>;

        return $stack1;
    }

    public void setSnapshotUpdatePolicy(org.apache.maven.artifact.repository.ArtifactRepositoryPolicy)
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy snapshots;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        snapshots := @parameter0: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy snapshots> = snapshots;

        return;
    }

    public org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getSnapshots()
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy snapshots>;

        return $stack1;
    }

    public void setReleaseUpdatePolicy(org.apache.maven.artifact.repository.ArtifactRepositoryPolicy)
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy releases;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        releases := @parameter0: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy releases> = releases;

        return;
    }

    public org.apache.maven.artifact.repository.ArtifactRepositoryPolicy getReleases()
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy releases>;

        return $stack1;
    }

    public java.lang.String getKey()
    {
        MavenArtifactRepository this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String getId()>();

        return $stack1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack3, $stack5, $stack8, $stack10, $stack13, $stack19, $stack21, $stack25, $stack26, $stack30, $stack33, $stack41, $stack42, $stack46, $stack49, $stack53, $stack54, $stack57, $stack58, $u0;
        MavenArtifactRepository this;
        java.lang.String $stack4, $stack6, $stack9, $stack11, $stack23, $stack24, $stack32, $stack40, $stack48, $stack52, $stack56;
        org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout $stack14;
        org.apache.maven.repository.Proxy $stack16, $stack55, $stack59;
        org.apache.maven.artifact.repository.ArtifactRepositoryPolicy $stack17, $stack18, $stack27, $stack31, $stack43, $stack47;
        boolean $stack20, $stack28, $stack44;
        int $stack60;
        java.lang.Object $stack63;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: MavenArtifactRepository;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(256);

        $stack3 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      id: ");

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String getId()>();

        $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4);

        $stack6 = <org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String LS>;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      url: ");

        $r1 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack9 = virtualinvoke $r1.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String getUrl()>();

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = <org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        $stack13 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   layout: ");

        $r2 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack14 = $r2.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout>;

        if $stack14 == null goto label1;

        $r3 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack63 = $r3.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.layout.ArtifactRepositoryLayout layout>;

        goto label2;

     label1:
        $stack63 = "none";

     label2:
        virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack63);

        $r4 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack16 = $r4.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.repository.Proxy proxy>;

        if $stack16 == null goto label3;

        $stack52 = <org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String LS>;

        $stack53 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52);

        $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    proxy: ");

        $r5 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack55 = $r5.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.repository.Proxy proxy>;

        $stack56 = virtualinvoke $stack55.<org.apache.maven.repository.Proxy: java.lang.String getHost()>();

        $stack57 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack56);

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r6 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack59 = $r6.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.repository.Proxy proxy>;

        $stack60 = virtualinvoke $stack59.<org.apache.maven.repository.Proxy: int getPort()>();

        virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack60);

     label3:
        $r7 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack17 = $r7.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy snapshots>;

        if $stack17 == null goto label4;

        $stack40 = <org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String LS>;

        $stack41 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack40);

        $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("snapshots: [enabled => ");

        $r8 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack43 = $r8.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy snapshots>;

        $stack44 = virtualinvoke $stack43.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean isEnabled()>();

        virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack44);

        $stack46 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", update => ");

        $r9 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack47 = $r9.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy snapshots>;

        $stack48 = virtualinvoke $stack47.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack49 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48);

        virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

     label4:
        $r10 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack18 = $r10.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy releases>;

        if $stack18 == null goto label5;

        $stack24 = <org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String LS>;

        $stack25 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releases: [enabled => ");

        $r11 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack27 = $r11.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy releases>;

        $stack28 = virtualinvoke $stack27.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: boolean isEnabled()>();

        virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack28);

        $stack30 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", update => ");

        $r12 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack31 = $r12.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.ArtifactRepositoryPolicy releases>;

        $stack32 = virtualinvoke $stack31.<org.apache.maven.artifact.repository.ArtifactRepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack33 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32);

        virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

     label5:
        $stack19 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   blocked: ");

        $r13 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack20 = virtualinvoke $r13.<org.apache.maven.artifact.repository.MavenArtifactRepository: boolean isBlocked()>();

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($stack20);

        virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $stack23 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack23;
    }

    public org.apache.maven.artifact.Artifact find(org.apache.maven.artifact.Artifact)
    {
        MavenArtifactRepository this;
        java.lang.String $stack4, $stack5;
        org.apache.maven.artifact.Artifact artifact;
        java.io.File $u0;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0, $r1;

        this := @this: MavenArtifactRepository;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        $u0 = new java.io.File;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String getBasedir()>();

        $r1 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack5 = virtualinvoke $r1.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String pathOf(org.apache.maven.artifact.Artifact)>(artifact);

        specialinvoke $u0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack4, $stack5);

        interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: void setFile(java.io.File)>($u0);

        return artifact;
    }

    public java.util.List findVersions(org.apache.maven.artifact.Artifact)
    {
        java.util.List $stack2;
        MavenArtifactRepository this;
        org.apache.maven.artifact.Artifact artifact;

        this := @this: MavenArtifactRepository;

        artifact := @parameter0: org.apache.maven.artifact.Artifact;

        $stack2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack2;
    }

    public java.lang.String getId()
    {
        MavenArtifactRepository this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String id>;

        return $stack1;
    }

    public java.lang.String getUrl()
    {
        MavenArtifactRepository this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String url>;

        return $stack1;
    }

    public java.lang.String getBasedir()
    {
        MavenArtifactRepository this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String basedir>;

        return $stack1;
    }

    public java.lang.String getProtocol()
    {
        MavenArtifactRepository this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String protocol>;

        return $stack1;
    }

    public void setId(java.lang.String)
    {
        MavenArtifactRepository this;
        java.lang.String id;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        id := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String id> = id;

        return;
    }

    public void setUrl(java.lang.String)
    {
        MavenArtifactRepository this;
        java.lang.String url, $stack2, $stack3;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0, $r1, $r2, $r3;

        this := @this: MavenArtifactRepository;

        url := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String url> = url;

        $stack2 = staticinvoke <org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String protocol(java.lang.String)>(url);

        $r1 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r1.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String protocol> = $stack2;

        $r2 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack3 = specialinvoke $r2.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String basedir(java.lang.String)>(url);

        $r3 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r3.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String basedir> = $stack3;

        return;
    }

    private static java.lang.String protocol(java.lang.String)
    {
        java.lang.String url, $stack3, $stack4;
        int pos;

        url := @parameter0: java.lang.String;

        pos = virtualinvoke url.<java.lang.String: int indexOf(int)>(58);

        if pos != -1 goto label1;

        return "";

     label1:
        $stack3 = virtualinvoke url.<java.lang.String: java.lang.String substring(int,int)>(0, pos);

        $stack4 = virtualinvoke $stack3.<java.lang.String: java.lang.String trim()>();

        return $stack4;
    }

    private java.lang.String basedir(java.lang.String)
    {
        MavenArtifactRepository this;
        java.lang.String $stack4, $stack6, url, $stack8, $stack24, $stack42, $stack61, retValue;
        boolean $stack5, $stack13;
        int $stack9, $stack10, $stack28, index, $stack30, $stack52, $stack14;
        char $stack18, $stack21, $stack37, $stack39, $stack45, $stack56, $stack58, $stack64;
        java.lang.StringBuilder $stack22, $stack23, $stack25, $stack34, $stack35, $stack40, $stack41, $stack43, $stack59, $stack60, $stack62, $u0, $u1, $u2, $u3;
        java.io.File $u4;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0, $r1;

        this := @this: MavenArtifactRepository;

        url := @parameter0: java.lang.String;

        retValue = null;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack4 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String protocol>;

        $stack5 = virtualinvoke $stack4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("file");

        if $stack5 == 0 goto label8;

        $r1 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack8 = $r1.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String protocol>;

        $stack9 = virtualinvoke $stack8.<java.lang.String: int length()>();

        $stack10 = $stack9 + 1;

        retValue = virtualinvoke url.<java.lang.String: java.lang.String substring(int)>($stack10);

        retValue = staticinvoke <org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String decode(java.lang.String)>(retValue);

        $stack13 = virtualinvoke retValue.<java.lang.String: boolean startsWith(java.lang.String)>("//");

        if $stack13 == 0 goto label6;

        retValue = virtualinvoke retValue.<java.lang.String: java.lang.String substring(int)>(2);

        $stack28 = virtualinvoke retValue.<java.lang.String: int length()>();

        if $stack28 < 2 goto label2;

        $stack56 = virtualinvoke retValue.<java.lang.String: char charAt(int)>(1);

        if $stack56 == 124 goto label1;

        $stack64 = virtualinvoke retValue.<java.lang.String: char charAt(int)>(1);

        if $stack64 != 58 goto label2;

     label1:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack58 = virtualinvoke retValue.<java.lang.String: char charAt(int)>(0);

        $stack59 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack58);

        $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack61 = virtualinvoke retValue.<java.lang.String: java.lang.String substring(int)>(2);

        $stack62 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack61);

        retValue = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label2:
        index = virtualinvoke retValue.<java.lang.String: int indexOf(int)>(47);

        if index < 0 goto label3;

        $stack52 = index + 1;

        retValue = virtualinvoke retValue.<java.lang.String: java.lang.String substring(int)>($stack52);

     label3:
        $stack30 = virtualinvoke retValue.<java.lang.String: int length()>();

        if $stack30 < 2 goto label5;

        $stack37 = virtualinvoke retValue.<java.lang.String: char charAt(int)>(1);

        if $stack37 == 124 goto label4;

        $stack45 = virtualinvoke retValue.<java.lang.String: char charAt(int)>(1);

        if $stack45 != 58 goto label5;

     label4:
        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack39 = virtualinvoke retValue.<java.lang.String: char charAt(int)>(0);

        $stack40 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack39);

        $stack41 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack42 = virtualinvoke retValue.<java.lang.String: java.lang.String substring(int)>(2);

        $stack43 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42);

        retValue = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label5:
        if index < 0 goto label6;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack34 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retValue);

        retValue = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.String toString()>();

     label6:
        $stack14 = virtualinvoke retValue.<java.lang.String: int length()>();

        if $stack14 < 2 goto label7;

        $stack18 = virtualinvoke retValue.<java.lang.String: char charAt(int)>(1);

        if $stack18 != 124 goto label7;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke retValue.<java.lang.String: char charAt(int)>(0);

        $stack22 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack21);

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack24 = virtualinvoke retValue.<java.lang.String: java.lang.String substring(int)>(2);

        $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        retValue = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

     label7:
        $u4 = new java.io.File;

        specialinvoke $u4.<java.io.File: void <init>(java.lang.String)>(retValue);

        retValue = virtualinvoke $u4.<java.io.File: java.lang.String getPath()>();

     label8:
        if retValue != null goto label9;

        retValue = "/";

     label9:
        $stack6 = virtualinvoke retValue.<java.lang.String: java.lang.String trim()>();

        return $stack6;
    }

    private static java.lang.String decode(java.lang.String)
    {
        java.lang.String url, hexStr, $stack19, $stack23, decoded;
        int $stack8, $stack9, $stack14, $stack15, $stack17, $stack22, pos, $stack5, $stack6;
        char ch;
        java.lang.StringBuilder $stack18, $stack20, $stack21, $stack24;

        url := @parameter0: java.lang.String;

        decoded = url;

        if url == null goto label2;

        pos = -1;

     label1:
        $stack5 = pos + 1;

        $stack6 = virtualinvoke decoded.<java.lang.String: int indexOf(int,int)>(37, $stack5);

        pos = $stack6;

        if $stack6 < 0 goto label2;

        $stack8 = $stack6 + 2;

        $stack9 = virtualinvoke decoded.<java.lang.String: int length()>();

        if $stack8 >= $stack9 goto label1;

        $stack15 = $stack6 + 1;

        $stack14 = $stack6 + 3;

        hexStr = virtualinvoke decoded.<java.lang.String: java.lang.String substring(int,int)>($stack15, $stack14);

        $stack17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(hexStr, 16);

        ch = (char) $stack17;

        $stack18 = new java.lang.StringBuilder;

        specialinvoke $stack18.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke decoded.<java.lang.String: java.lang.String substring(int,int)>(0, $stack6);

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(ch);

        $stack22 = $stack6 + 3;

        $stack23 = virtualinvoke decoded.<java.lang.String: java.lang.String substring(int)>($stack22);

        $stack24 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        decoded = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;

     label2:
        return decoded;
    }

    public int hashCode()
    {
        MavenArtifactRepository this;
        int $stack3, $stack6, result#3;
        java.lang.String $stack4, $stack5;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0, $r1;

        this := @this: MavenArtifactRepository;

        $stack3 = 31 * 1;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String getId()>();

        if $stack4 != null goto label1;

        $stack6 = 0;

        goto label2;

     label1:
        $r1 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack5 = virtualinvoke $r1.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String getId()>();

        $stack6 = virtualinvoke $stack5.<java.lang.String: int hashCode()>();

     label2:
        result#3 = $stack3 + $stack6;

        return result#3;
    }

    public boolean equals(java.lang.Object)
    {
        MavenArtifactRepository this;
        java.lang.Object obj;
        java.lang.Class $stack3, $stack4;
        org.apache.maven.artifact.repository.ArtifactRepository other;
        java.lang.String $stack5, $stack6;
        boolean $stack7;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        obj := @parameter0: java.lang.Object;

        if this != obj goto label1;

        return 1;

     label1:
        if obj != null goto label2;

        return 0;

     label2:
        $stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack4 = virtualinvoke obj.<java.lang.Object: java.lang.Class getClass()>();

        if $stack3 == $stack4 goto label3;

        return 0;

     label3:
        other = (org.apache.maven.artifact.repository.ArtifactRepository) obj;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack5 = virtualinvoke $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String getId()>();

        $stack6 = interfaceinvoke other.<org.apache.maven.artifact.repository.ArtifactRepository: java.lang.String getId()>();

        $stack7 = staticinvoke <org.apache.maven.artifact.repository.MavenArtifactRepository: boolean eq(java.lang.Object,java.lang.Object)>($stack5, $stack6);

        return $stack7;
    }

    protected static boolean eq(java.lang.Object, java.lang.Object)
    {
        java.lang.Object s1, s2;
        boolean $stack2;

        s1 := @parameter0: java.lang.Object;

        s2 := @parameter1: java.lang.Object;

        $stack2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(s1, s2);

        return $stack2;
    }

    public org.apache.maven.artifact.repository.Authentication getAuthentication()
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.repository.Authentication $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.Authentication authentication>;

        return $stack1;
    }

    public void setAuthentication(org.apache.maven.artifact.repository.Authentication)
    {
        MavenArtifactRepository this;
        org.apache.maven.artifact.repository.Authentication authentication;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        authentication := @parameter0: org.apache.maven.artifact.repository.Authentication;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.artifact.repository.Authentication authentication> = authentication;

        return;
    }

    public org.apache.maven.repository.Proxy getProxy()
    {
        MavenArtifactRepository this;
        org.apache.maven.repository.Proxy $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.repository.Proxy proxy>;

        return $stack1;
    }

    public void setProxy(org.apache.maven.repository.Proxy)
    {
        MavenArtifactRepository this;
        org.apache.maven.repository.Proxy proxy;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        proxy := @parameter0: org.apache.maven.repository.Proxy;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: org.apache.maven.repository.Proxy proxy> = proxy;

        return;
    }

    public boolean isBlacklisted()
    {
        MavenArtifactRepository this;

        this := @this: MavenArtifactRepository;

        return 0;
    }

    public void setBlacklisted(boolean)
    {
        MavenArtifactRepository this;
        boolean blackListed;

        this := @this: MavenArtifactRepository;

        blackListed := @parameter0: boolean;

        return;
    }

    public boolean isUniqueVersion()
    {
        MavenArtifactRepository this;

        this := @this: MavenArtifactRepository;

        return 1;
    }

    public boolean isProjectAware()
    {
        MavenArtifactRepository this;

        this := @this: MavenArtifactRepository;

        return 0;
    }

    public java.util.List getMirroredRepositories()
    {
        MavenArtifactRepository this;
        java.util.List $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.util.List mirroredRepositories>;

        return $stack1;
    }

    public void setMirroredRepositories(java.util.List)
    {
        java.util.List mirroredRepositories, $stack2, $stack3;
        MavenArtifactRepository this;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0, $r1;

        this := @this: MavenArtifactRepository;

        mirroredRepositories := @parameter0: java.util.List;

        if mirroredRepositories == null goto label1;

        $stack3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(mirroredRepositories);

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.util.List mirroredRepositories> = $stack3;

        goto label2;

     label1:
        $stack2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r1 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r1.<org.apache.maven.artifact.repository.MavenArtifactRepository: java.util.List mirroredRepositories> = $stack2;

     label2:
        return;
    }

    public boolean isBlocked()
    {
        MavenArtifactRepository this;
        boolean $stack1;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: boolean blocked>;

        return $stack1;
    }

    public void setBlocked(boolean)
    {
        MavenArtifactRepository this;
        boolean blocked;
        org.apache.maven.artifact.repository.MavenArtifactRepository $r0;

        this := @this: MavenArtifactRepository;

        blocked := @parameter0: boolean;

        $r0 = (org.apache.maven.artifact.repository.MavenArtifactRepository) this;

        $r0.<org.apache.maven.artifact.repository.MavenArtifactRepository: boolean blocked> = blocked;

        return;
    }

    static void <clinit>()
    {
        java.lang.String $stack0;

        $stack0 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        <org.apache.maven.artifact.repository.MavenArtifactRepository: java.lang.String LS> = $stack0;

        return;
    }
}
