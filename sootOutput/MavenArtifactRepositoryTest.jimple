public class MavenArtifactRepositoryTest extends java.lang.Object
{

    public void <init>()
    {
        MavenArtifactRepositoryTest this;

        this := @this: MavenArtifactRepositoryTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testHashCodeEquals()
    {
        org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass $stack4, $stack5, $stack6;
        int $stack7, $stack8, $stack9, $stack10;
        boolean $stack11, $stack12, $stack13, $stack14, $stack24, $stack15;
        MavenArtifactRepositoryTest this;

        this := @this: MavenArtifactRepositoryTest;

        $stack4 = new org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass;

        specialinvoke $stack4.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: void <init>(java.lang.String)>("foo");

        $stack5 = new org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass;

        specialinvoke $stack5.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: void <init>(java.lang.String)>("foo");

        $stack6 = new org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass;

        specialinvoke $stack6.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: void <init>(java.lang.String)>("bar");

        $stack7 = virtualinvoke $stack4.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: int hashCode()>();

        $stack8 = virtualinvoke $stack5.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: int hashCode()>();

        if $stack7 != $stack8 goto label1;

        $stack24 = 1;

        goto label2;

     label1:
        $stack24 = 0;

     label2:
        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack24);

        $stack9 = virtualinvoke $stack4.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: int hashCode()>();

        $stack10 = virtualinvoke $stack6.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: int hashCode()>();

        if $stack9 != $stack10 goto label3;

        $stack15 = 1;

        goto label4;

     label3:
        $stack15 = 0;

     label4:
        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack15);

        $stack11 = virtualinvoke $stack4.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: boolean equals(java.lang.Object)>($stack5);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack11);

        $stack12 = virtualinvoke $stack5.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: boolean equals(java.lang.Object)>($stack4);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack12);

        $stack13 = virtualinvoke $stack4.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: boolean equals(java.lang.Object)>($stack6);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack13);

        $stack14 = virtualinvoke $stack6.<org.apache.maven.artifact.repository.MavenArtifactRepositoryTest$MavenArtifactRepositorySubclass: boolean equals(java.lang.Object)>($stack4);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack14);

        return;
    }
}
