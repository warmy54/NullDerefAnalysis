public class MavenBuildTimestamp extends java.lang.Object
{
    public static final java.lang.String DEFAULT_BUILD_TIMESTAMP_FORMAT;
    public static final java.lang.String BUILD_TIMESTAMP_FORMAT_PROPERTY;
    public static final java.util.TimeZone DEFAULT_BUILD_TIME_ZONE;
    private java.lang.String formattedTimestamp;

    public void <init>()
    {
        MavenBuildTimestamp this;
        java.util.Date $u0;
        org.apache.maven.model.interpolation.MavenBuildTimestamp $r0;

        this := @this: MavenBuildTimestamp;

        $u0 = new java.util.Date;

        specialinvoke $u0.<java.util.Date: void <init>()>();

        $r0 = (org.apache.maven.model.interpolation.MavenBuildTimestamp) this;

        specialinvoke $r0.<org.apache.maven.model.interpolation.MavenBuildTimestamp: void <init>(java.util.Date)>($u0);

        return;
    }

    public void <init>(java.util.Date)
    {
        MavenBuildTimestamp this;
        java.util.Date time;
        org.apache.maven.model.interpolation.MavenBuildTimestamp $r0;

        this := @this: MavenBuildTimestamp;

        time := @parameter0: java.util.Date;

        $r0 = (org.apache.maven.model.interpolation.MavenBuildTimestamp) this;

        specialinvoke $r0.<org.apache.maven.model.interpolation.MavenBuildTimestamp: void <init>(java.util.Date,java.lang.String)>(time, "yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        return;
    }

    public void <init>(java.util.Date, java.util.Properties)
    {
        MavenBuildTimestamp this;
        java.util.Date time;
        java.util.Properties properties;
        java.lang.String $stack3;
        org.apache.maven.model.interpolation.MavenBuildTimestamp $r0;

        this := @this: MavenBuildTimestamp;

        time := @parameter0: java.util.Date;

        properties := @parameter1: java.util.Properties;

        if properties == null goto label1;

        $stack3 = virtualinvoke properties.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("maven.build.timestamp.format");

        goto label2;

     label1:
        $stack3 = null;

     label2:
        $r0 = (org.apache.maven.model.interpolation.MavenBuildTimestamp) this;

        specialinvoke $r0.<org.apache.maven.model.interpolation.MavenBuildTimestamp: void <init>(java.util.Date,java.lang.String)>(time, $stack3);

        return;
    }

    public void <init>(java.util.Date, java.lang.String)
    {
        MavenBuildTimestamp this;
        java.util.TimeZone $stack6;
        java.lang.String $stack7, timestampFormat;
        java.util.Date time, $u0;
        java.text.SimpleDateFormat $u1;
        java.util.GregorianCalendar $u2;
        org.apache.maven.model.interpolation.MavenBuildTimestamp $r0;

        this := @this: MavenBuildTimestamp;

        time := @parameter0: java.util.Date;

        timestampFormat := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        if timestampFormat != null goto label1;

        timestampFormat = "yyyy-MM-dd\'T\'HH:mm:ss\'Z\'";

     label1:
        if time != null goto label2;

        $u0 = new java.util.Date;

        specialinvoke $u0.<java.util.Date: void <init>()>();

        time = $u0;

     label2:
        $u1 = new java.text.SimpleDateFormat;

        specialinvoke $u1.<java.text.SimpleDateFormat: void <init>(java.lang.String)>(timestampFormat);

        $u2 = new java.util.GregorianCalendar;

        specialinvoke $u2.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $u1.<java.text.SimpleDateFormat: void setCalendar(java.util.Calendar)>($u2);

        $stack6 = <org.apache.maven.model.interpolation.MavenBuildTimestamp: java.util.TimeZone DEFAULT_BUILD_TIME_ZONE>;

        virtualinvoke $u1.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($stack6);

        $stack7 = virtualinvoke $u1.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(time);

        $r0 = (org.apache.maven.model.interpolation.MavenBuildTimestamp) this;

        $r0.<org.apache.maven.model.interpolation.MavenBuildTimestamp: java.lang.String formattedTimestamp> = $stack7;

        return;
    }

    public java.lang.String formattedTimestamp()
    {
        MavenBuildTimestamp this;
        java.lang.String $stack1;
        org.apache.maven.model.interpolation.MavenBuildTimestamp $r0;

        this := @this: MavenBuildTimestamp;

        $r0 = (org.apache.maven.model.interpolation.MavenBuildTimestamp) this;

        $stack1 = $r0.<org.apache.maven.model.interpolation.MavenBuildTimestamp: java.lang.String formattedTimestamp>;

        return $stack1;
    }

    static void <clinit>()
    {
        java.util.TimeZone $stack0;

        <MavenBuildTimestamp: java.lang.String BUILD_TIMESTAMP_FORMAT_PROPERTY> = "maven.build.timestamp.format";

        <MavenBuildTimestamp: java.lang.String DEFAULT_BUILD_TIMESTAMP_FORMAT> = "yyyy-MM-dd\'T\'HH:mm:ss\'Z\'";

        $stack0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("Etc/UTC");

        <org.apache.maven.model.interpolation.MavenBuildTimestamp: java.util.TimeZone DEFAULT_BUILD_TIME_ZONE> = $stack0;

        return;
    }
}
