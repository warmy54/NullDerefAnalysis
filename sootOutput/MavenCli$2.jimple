class MavenCli$2 extends com.google.inject.AbstractModule
{
    final org.apache.maven.cli.MavenCli this$0;

    void <init>(org.apache.maven.cli.MavenCli)
    {
        MavenCli$2 this;
        org.apache.maven.cli.MavenCli this$0;
        org.apache.maven.cli.MavenCli$2 $r0;

        this := @this: MavenCli$2;

        this$0 := @parameter0: org.apache.maven.cli.MavenCli;

        $r0 = (org.apache.maven.cli.MavenCli$2) this;

        $r0.<org.apache.maven.cli.MavenCli$2: org.apache.maven.cli.MavenCli this$0> = this$0;

        specialinvoke this.<com.google.inject.AbstractModule: void <init>()>();

        return;
    }

    protected void configure()
    {
        MavenCli$2 this;
        com.google.inject.binder.AnnotatedBindingBuilder $stack1;
        org.apache.maven.cli.MavenCli $stack2;
        org.slf4j.ILoggerFactory $stack3;
        org.apache.maven.cli.MavenCli$2 $r0, $r1;

        this := @this: MavenCli$2;

        $r0 = (org.apache.maven.cli.MavenCli$2) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.cli.MavenCli$2: com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class)>(class "Lorg/slf4j/ILoggerFactory;");

        $r1 = (org.apache.maven.cli.MavenCli$2) this;

        $stack2 = $r1.<org.apache.maven.cli.MavenCli$2: org.apache.maven.cli.MavenCli this$0>;

        $stack3 = staticinvoke <org.apache.maven.cli.MavenCli: org.slf4j.ILoggerFactory access$000(org.apache.maven.cli.MavenCli)>($stack2);

        interfaceinvoke $stack1.<com.google.inject.binder.AnnotatedBindingBuilder: void toInstance(java.lang.Object)>($stack3);

        return;
    }
}
