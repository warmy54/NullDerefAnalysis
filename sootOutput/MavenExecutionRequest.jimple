public interface  MavenExecutionRequest extends java.lang.Object
{
    public static final int LOGGING_LEVEL_DEBUG;
    public static final int LOGGING_LEVEL_INFO;
    public static final int LOGGING_LEVEL_WARN;
    public static final int LOGGING_LEVEL_ERROR;
    public static final int LOGGING_LEVEL_FATAL;
    public static final int LOGGING_LEVEL_DISABLED;
    public static final java.lang.String REACTOR_FAIL_FAST;
    public static final java.lang.String REACTOR_FAIL_AT_END;
    public static final java.lang.String REACTOR_FAIL_NEVER;
    public static final java.lang.String REACTOR_MAKE_UPSTREAM;
    public static final java.lang.String REACTOR_MAKE_DOWNSTREAM;
    public static final java.lang.String REACTOR_MAKE_BOTH;
    public static final java.lang.String CHECKSUM_POLICY_FAIL;
    public static final java.lang.String CHECKSUM_POLICY_WARN;

    public abstract org.apache.maven.execution.MavenExecutionRequest setBaseDirectory(java.io.File);

    public abstract java.lang.String getBaseDirectory();

    public abstract org.apache.maven.execution.MavenExecutionRequest setStartTime(java.util.Date);

    public abstract java.util.Date getStartTime();

    public abstract org.apache.maven.execution.MavenExecutionRequest setGoals(java.util.List);

    public abstract java.util.List getGoals();

    public abstract org.apache.maven.execution.MavenExecutionRequest setSystemProperties(java.util.Properties);

    public abstract java.util.Properties getSystemProperties();

    public abstract org.apache.maven.execution.MavenExecutionRequest setUserProperties(java.util.Properties);

    public abstract java.util.Properties getUserProperties();

    public abstract org.apache.maven.execution.MavenExecutionRequest setReactorFailureBehavior(java.lang.String);

    public abstract java.lang.String getReactorFailureBehavior();

    public abstract org.apache.maven.execution.MavenExecutionRequest setSelectedProjects(java.util.List);

    public abstract java.util.List getSelectedProjects();

    public abstract org.apache.maven.execution.MavenExecutionRequest setExcludedProjects(java.util.List);

    public abstract java.util.List getExcludedProjects();

    public abstract org.apache.maven.execution.MavenExecutionRequest setResume(boolean);

    public abstract boolean isResume();

    public abstract org.apache.maven.execution.MavenExecutionRequest setResumeFrom(java.lang.String);

    public abstract java.lang.String getResumeFrom();

    public abstract org.apache.maven.execution.MavenExecutionRequest setMakeBehavior(java.lang.String);

    public abstract java.lang.String getMakeBehavior();

    public abstract void setDegreeOfConcurrency(int);

    public abstract int getDegreeOfConcurrency();

    public abstract org.apache.maven.execution.MavenExecutionRequest setRecursive(boolean);

    public abstract boolean isRecursive();

    public abstract org.apache.maven.execution.MavenExecutionRequest setPom(java.io.File);

    public abstract java.io.File getPom();

    public abstract org.apache.maven.execution.MavenExecutionRequest setShowErrors(boolean);

    public abstract boolean isShowErrors();

    public abstract org.apache.maven.execution.MavenExecutionRequest setTransferListener(org.eclipse.aether.transfer.TransferListener);

    public abstract org.eclipse.aether.transfer.TransferListener getTransferListener();

    public abstract org.apache.maven.execution.MavenExecutionRequest setLoggingLevel(int);

    public abstract int getLoggingLevel();

    public abstract org.apache.maven.execution.MavenExecutionRequest setUpdateSnapshots(boolean);

    public abstract boolean isUpdateSnapshots();

    public abstract org.apache.maven.execution.MavenExecutionRequest setNoSnapshotUpdates(boolean);

    public abstract boolean isNoSnapshotUpdates();

    public abstract org.apache.maven.execution.MavenExecutionRequest setGlobalChecksumPolicy(java.lang.String);

    public abstract java.lang.String getGlobalChecksumPolicy();

    public abstract org.apache.maven.execution.MavenExecutionRequest setLocalRepositoryPath(java.lang.String);

    public abstract org.apache.maven.execution.MavenExecutionRequest setLocalRepositoryPath(java.io.File);

    public abstract java.io.File getLocalRepositoryPath();

    public abstract org.apache.maven.execution.MavenExecutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository);

    public abstract org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository();

    public abstract org.apache.maven.execution.MavenExecutionRequest setInteractiveMode(boolean);

    public abstract boolean isInteractiveMode();

    public abstract org.apache.maven.execution.MavenExecutionRequest setOffline(boolean);

    public abstract boolean isOffline();

    public abstract boolean isCacheTransferError();

    public abstract org.apache.maven.execution.MavenExecutionRequest setCacheTransferError(boolean);

    public abstract boolean isCacheNotFound();

    public abstract org.apache.maven.execution.MavenExecutionRequest setCacheNotFound(boolean);

    public abstract java.util.List getProfiles();

    public abstract org.apache.maven.execution.MavenExecutionRequest addProfile(org.apache.maven.model.Profile);

    public abstract org.apache.maven.execution.MavenExecutionRequest setProfiles(java.util.List);

    public abstract org.apache.maven.execution.MavenExecutionRequest addActiveProfile(java.lang.String);

    public abstract org.apache.maven.execution.MavenExecutionRequest addActiveProfiles(java.util.List);

    public abstract org.apache.maven.execution.MavenExecutionRequest setActiveProfiles(java.util.List);

    public abstract java.util.List getActiveProfiles();

    public abstract org.apache.maven.execution.MavenExecutionRequest addInactiveProfile(java.lang.String);

    public abstract org.apache.maven.execution.MavenExecutionRequest addInactiveProfiles(java.util.List);

    public abstract org.apache.maven.execution.MavenExecutionRequest setInactiveProfiles(java.util.List);

    public abstract java.util.List getInactiveProfiles();

    public abstract org.apache.maven.execution.ProjectActivation getProjectActivation();

    public abstract org.apache.maven.execution.ProfileActivation getProfileActivation();

    public abstract java.util.List getProxies();

    public abstract org.apache.maven.execution.MavenExecutionRequest setProxies(java.util.List);

    public abstract org.apache.maven.execution.MavenExecutionRequest addProxy(org.apache.maven.settings.Proxy);

    public abstract java.util.List getServers();

    public abstract org.apache.maven.execution.MavenExecutionRequest setServers(java.util.List);

    public abstract org.apache.maven.execution.MavenExecutionRequest addServer(org.apache.maven.settings.Server);

    public abstract java.util.List getMirrors();

    public abstract org.apache.maven.execution.MavenExecutionRequest setMirrors(java.util.List);

    public abstract org.apache.maven.execution.MavenExecutionRequest addMirror(org.apache.maven.settings.Mirror);

    public abstract java.util.List getPluginGroups();

    public abstract org.apache.maven.execution.MavenExecutionRequest setPluginGroups(java.util.List);

    public abstract org.apache.maven.execution.MavenExecutionRequest addPluginGroup(java.lang.String);

    public abstract org.apache.maven.execution.MavenExecutionRequest addPluginGroups(java.util.List);

    public abstract boolean isProjectPresent();

    public abstract org.apache.maven.execution.MavenExecutionRequest setProjectPresent(boolean);

    public abstract java.io.File getUserSettingsFile();

    public abstract org.apache.maven.execution.MavenExecutionRequest setUserSettingsFile(java.io.File);

    public abstract java.io.File getGlobalSettingsFile();

    public abstract org.apache.maven.execution.MavenExecutionRequest setGlobalSettingsFile(java.io.File);

    public abstract org.apache.maven.execution.MavenExecutionRequest addRemoteRepository(org.apache.maven.artifact.repository.ArtifactRepository);

    public abstract org.apache.maven.execution.MavenExecutionRequest addPluginArtifactRepository(org.apache.maven.artifact.repository.ArtifactRepository);

    public abstract org.apache.maven.execution.MavenExecutionRequest setRemoteRepositories(java.util.List);

    public abstract java.util.List getRemoteRepositories();

    public abstract org.apache.maven.execution.MavenExecutionRequest setPluginArtifactRepositories(java.util.List);

    public abstract java.util.List getPluginArtifactRepositories();

    public abstract org.apache.maven.execution.MavenExecutionRequest setRepositoryCache(org.eclipse.aether.RepositoryCache);

    public abstract org.eclipse.aether.RepositoryCache getRepositoryCache();

    public abstract org.eclipse.aether.repository.WorkspaceReader getWorkspaceReader();

    public abstract org.apache.maven.execution.MavenExecutionRequest setWorkspaceReader(org.eclipse.aether.repository.WorkspaceReader);

    public abstract java.io.File getUserToolchainsFile();

    public abstract org.apache.maven.execution.MavenExecutionRequest setUserToolchainsFile(java.io.File);

    public abstract java.io.File getGlobalToolchainsFile();

    public abstract org.apache.maven.execution.MavenExecutionRequest setGlobalToolchainsFile(java.io.File);

    public abstract org.apache.maven.execution.ExecutionListener getExecutionListener();

    public abstract org.apache.maven.execution.MavenExecutionRequest setExecutionListener(org.apache.maven.execution.ExecutionListener);

    public abstract org.apache.maven.project.ProjectBuildingRequest getProjectBuildingRequest();

    public abstract boolean isUseLegacyLocalRepository();

    public abstract org.apache.maven.execution.MavenExecutionRequest setUseLegacyLocalRepository(boolean);

    public abstract org.apache.maven.execution.MavenExecutionRequest setBuilderId(java.lang.String);

    public abstract java.lang.String getBuilderId();

    public abstract org.apache.maven.execution.MavenExecutionRequest setToolchains(java.util.Map);

    public abstract java.util.Map getToolchains();

    public abstract void setMultiModuleProjectDirectory(java.io.File);

    public abstract java.io.File getMultiModuleProjectDirectory();

    public abstract org.apache.maven.execution.MavenExecutionRequest setEventSpyDispatcher(org.apache.maven.eventspy.internal.EventSpyDispatcher);

    public abstract org.apache.maven.eventspy.internal.EventSpyDispatcher getEventSpyDispatcher();

    public abstract java.util.Map getData();

    public static void <clinit>()
    {
        <MavenExecutionRequest: java.lang.String CHECKSUM_POLICY_WARN> = "warn";

        <MavenExecutionRequest: java.lang.String CHECKSUM_POLICY_FAIL> = "fail";

        <MavenExecutionRequest: java.lang.String REACTOR_MAKE_BOTH> = "make-both";

        <MavenExecutionRequest: java.lang.String REACTOR_MAKE_DOWNSTREAM> = "make-downstream";

        <MavenExecutionRequest: java.lang.String REACTOR_MAKE_UPSTREAM> = "make-upstream";

        <MavenExecutionRequest: java.lang.String REACTOR_FAIL_NEVER> = "FAIL_NEVER";

        <MavenExecutionRequest: java.lang.String REACTOR_FAIL_AT_END> = "FAIL_AT_END";

        <MavenExecutionRequest: java.lang.String REACTOR_FAIL_FAST> = "FAIL_FAST";

        <MavenExecutionRequest: int LOGGING_LEVEL_DISABLED> = 5;

        <MavenExecutionRequest: int LOGGING_LEVEL_FATAL> = 4;

        <MavenExecutionRequest: int LOGGING_LEVEL_ERROR> = 3;

        <MavenExecutionRequest: int LOGGING_LEVEL_WARN> = 2;

        <MavenExecutionRequest: int LOGGING_LEVEL_INFO> = 1;

        <MavenExecutionRequest: int LOGGING_LEVEL_DEBUG> = 0;

        return;
    }
}
