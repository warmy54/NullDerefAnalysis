public class MavenLifecycleParticipantTest$InjectDependencyLifecycleListener extends org.apache.maven.AbstractMavenLifecycleParticipant
{

    public void <init>()
    {
        MavenLifecycleParticipantTest$InjectDependencyLifecycleListener this;

        this := @this: MavenLifecycleParticipantTest$InjectDependencyLifecycleListener;

        specialinvoke this.<org.apache.maven.AbstractMavenLifecycleParticipant: void <init>()>();

        return;
    }

    public void afterProjectsRead(org.apache.maven.execution.MavenSession)
    {
        org.apache.maven.execution.MavenSession session;
        java.util.List $stack5;
        java.lang.Object $stack6;
        org.apache.maven.project.MavenProject project;
        org.apache.maven.model.Dependency $stack7;
        java.io.File $stack8;
        java.lang.String $stack9;
        org.apache.maven.model.Model $stack10;
        java.io.IOException $stack11;
        java.lang.RuntimeException $stack12;
        MavenLifecycleParticipantTest$InjectDependencyLifecycleListener this;

        this := @this: MavenLifecycleParticipantTest$InjectDependencyLifecycleListener;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        $stack5 = virtualinvoke session.<org.apache.maven.execution.MavenSession: java.util.List getProjects()>();

        $stack6 = interfaceinvoke $stack5.<java.util.List: java.lang.Object get(int)>(0);

        project = (org.apache.maven.project.MavenProject) $stack6;

        $stack7 = new org.apache.maven.model.Dependency;

        specialinvoke $stack7.<org.apache.maven.model.Dependency: void <init>()>();

        virtualinvoke $stack7.<org.apache.maven.model.Dependency: void setArtifactId(java.lang.String)>("injected");

        virtualinvoke $stack7.<org.apache.maven.model.Dependency: void setGroupId(java.lang.String)>("foo");

        virtualinvoke $stack7.<org.apache.maven.model.Dependency: void setVersion(java.lang.String)>("1.2.3");

        virtualinvoke $stack7.<org.apache.maven.model.Dependency: void setScope(java.lang.String)>("system");

     label1:
        $stack8 = new java.io.File;

        specialinvoke $stack8.<java.io.File: void <init>(java.lang.String)>("src/test/projects/lifecycle-executor/project-with-additional-lifecycle-elements/pom.xml");

        $stack9 = virtualinvoke $stack8.<java.io.File: java.lang.String getCanonicalPath()>();

        virtualinvoke $stack7.<org.apache.maven.model.Dependency: void setSystemPath(java.lang.String)>($stack9);

     label2:
        goto label4;

     label3:
        $stack11 := @caughtexception;

        $stack12 = new java.lang.RuntimeException;

        specialinvoke $stack12.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($stack11);

        throw $stack12;

     label4:
        $stack10 = virtualinvoke project.<org.apache.maven.project.MavenProject: org.apache.maven.model.Model getModel()>();

        virtualinvoke $stack10.<org.apache.maven.model.Model: void addDependency(org.apache.maven.model.Dependency)>($stack7);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void afterSessionStart(org.apache.maven.execution.MavenSession)
    {
        org.apache.maven.execution.MavenSession session;
        java.util.Properties $stack2;
        MavenLifecycleParticipantTest$InjectDependencyLifecycleListener this;

        this := @this: MavenLifecycleParticipantTest$InjectDependencyLifecycleListener;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        $stack2 = virtualinvoke session.<org.apache.maven.execution.MavenSession: java.util.Properties getUserProperties()>();

        virtualinvoke $stack2.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("injected", "bar");

        return;
    }
}
