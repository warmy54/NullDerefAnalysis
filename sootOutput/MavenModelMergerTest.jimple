public class MavenModelMergerTest extends java.lang.Object
{
    private org.apache.maven.model.merge.MavenModelMerger modelMerger;

    public void <init>()
    {
        MavenModelMergerTest this;
        org.apache.maven.model.merge.MavenModelMerger $u0;
        org.apache.maven.model.merge.MavenModelMergerTest $r0;

        this := @this: MavenModelMergerTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new org.apache.maven.model.merge.MavenModelMerger;

        specialinvoke $u0.<org.apache.maven.model.merge.MavenModelMerger: void <init>()>();

        $r0 = (org.apache.maven.model.merge.MavenModelMergerTest) this;

        $r0.<org.apache.maven.model.merge.MavenModelMergerTest: org.apache.maven.model.merge.MavenModelMerger modelMerger> = $u0;

        return;
    }

    public void testMergeModel_ModelVersion()
    {
        MavenModelMergerTest this;
        org.apache.maven.model.merge.MavenModelMerger $stack5, $stack7;
        java.lang.String $stack6, $stack9;
        org.apache.maven.model.Model $u0, $u1;
        org.apache.maven.model.merge.MavenModelMergerTest $r0, $r1;

        this := @this: MavenModelMergerTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setModelVersion(java.lang.String)>("4.0.0");

        $u1 = new org.apache.maven.model.Model;

        specialinvoke $u1.<org.apache.maven.model.Model: void <init>()>();

        $r0 = (org.apache.maven.model.merge.MavenModelMergerTest) this;

        $stack5 = $r0.<org.apache.maven.model.merge.MavenModelMergerTest: org.apache.maven.model.merge.MavenModelMerger modelMerger>;

        virtualinvoke $stack5.<org.apache.maven.model.merge.MavenModelMerger: void mergeModel_ModelVersion(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>($u1, $u0, 0, null);

        $stack6 = virtualinvoke $u1.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNull(java.lang.Object)>($stack6);

        virtualinvoke $u1.<org.apache.maven.model.Model: void setModelVersion(java.lang.String)>("5.0.0");

        $r1 = (org.apache.maven.model.merge.MavenModelMergerTest) this;

        $stack7 = $r1.<org.apache.maven.model.merge.MavenModelMergerTest: org.apache.maven.model.merge.MavenModelMerger modelMerger>;

        virtualinvoke $stack7.<org.apache.maven.model.merge.MavenModelMerger: void mergeModel_ModelVersion(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>($u1, $u0, 0, null);

        $stack9 = virtualinvoke $u1.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("5.0.0", $stack9);

        return;
    }

    public void testMergeModel_ArtifactId()
    {
        MavenModelMergerTest this;
        org.apache.maven.model.merge.MavenModelMerger $stack5, $stack7;
        java.lang.String $stack6, $stack9;
        org.apache.maven.model.Model $u0, $u1;
        org.apache.maven.model.merge.MavenModelMergerTest $r0, $r1;

        this := @this: MavenModelMergerTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setArtifactId(java.lang.String)>("PARENT");

        $u1 = new org.apache.maven.model.Model;

        specialinvoke $u1.<org.apache.maven.model.Model: void <init>()>();

        $r0 = (org.apache.maven.model.merge.MavenModelMergerTest) this;

        $stack5 = $r0.<org.apache.maven.model.merge.MavenModelMergerTest: org.apache.maven.model.merge.MavenModelMerger modelMerger>;

        virtualinvoke $stack5.<org.apache.maven.model.merge.MavenModelMerger: void mergeModel_ArtifactId(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>($u1, $u0, 0, null);

        $stack6 = virtualinvoke $u1.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNull(java.lang.Object)>($stack6);

        virtualinvoke $u1.<org.apache.maven.model.Model: void setArtifactId(java.lang.String)>("MODEL");

        $r1 = (org.apache.maven.model.merge.MavenModelMergerTest) this;

        $stack7 = $r1.<org.apache.maven.model.merge.MavenModelMergerTest: org.apache.maven.model.merge.MavenModelMerger modelMerger>;

        virtualinvoke $stack7.<org.apache.maven.model.merge.MavenModelMerger: void mergeModel_ArtifactId(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>($u1, $u0, 0, null);

        $stack9 = virtualinvoke $u1.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("MODEL", $stack9);

        return;
    }

    public void testMergeModel_Prerequisites()
    {
        MavenModelMergerTest this;
        org.apache.maven.model.merge.MavenModelMerger $stack7, $stack10;
        org.apache.maven.model.Prerequisites $stack8, $stack11, $u1, $u3;
        org.apache.maven.model.Model $u0, $u2;
        org.apache.maven.model.merge.MavenModelMergerTest $r0, $r1;

        this := @this: MavenModelMergerTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new org.apache.maven.model.Prerequisites;

        specialinvoke $u1.<org.apache.maven.model.Prerequisites: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setPrerequisites(org.apache.maven.model.Prerequisites)>($u1);

        $u2 = new org.apache.maven.model.Model;

        specialinvoke $u2.<org.apache.maven.model.Model: void <init>()>();

        $r0 = (org.apache.maven.model.merge.MavenModelMergerTest) this;

        $stack7 = $r0.<org.apache.maven.model.merge.MavenModelMergerTest: org.apache.maven.model.merge.MavenModelMerger modelMerger>;

        virtualinvoke $stack7.<org.apache.maven.model.merge.MavenModelMerger: void mergeModel_Prerequisites(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>($u2, $u0, 0, null);

        $stack8 = virtualinvoke $u2.<org.apache.maven.model.Model: org.apache.maven.model.Prerequisites getPrerequisites()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNull(java.lang.Object)>($stack8);

        $u3 = new org.apache.maven.model.Prerequisites;

        specialinvoke $u3.<org.apache.maven.model.Prerequisites: void <init>()>();

        virtualinvoke $u3.<org.apache.maven.model.Prerequisites: void setMaven(java.lang.String)>("3.0");

        virtualinvoke $u2.<org.apache.maven.model.Model: void setPrerequisites(org.apache.maven.model.Prerequisites)>($u3);

        $r1 = (org.apache.maven.model.merge.MavenModelMergerTest) this;

        $stack10 = $r1.<org.apache.maven.model.merge.MavenModelMergerTest: org.apache.maven.model.merge.MavenModelMerger modelMerger>;

        virtualinvoke $stack10.<org.apache.maven.model.merge.MavenModelMerger: void mergeModel_Prerequisites(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>($u2, $u0, 0, null);

        $stack11 = virtualinvoke $u2.<org.apache.maven.model.Model: org.apache.maven.model.Prerequisites getPrerequisites()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($u3, $stack11);

        return;
    }

    public void testMergeModel_Profiles()
    {
        java.util.List $stack6, $stack10, $stack13, $stack15, $stack16;
        MavenModelMergerTest this;
        org.apache.maven.model.merge.MavenModelMerger $stack8, $stack14;
        int $stack11;
        org.apache.maven.model.Model $u0, $u2;
        org.apache.maven.model.Profile $u1, $u3;
        org.apache.maven.model.merge.MavenModelMergerTest $r0, $r1;

        this := @this: MavenModelMergerTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new org.apache.maven.model.Profile;

        specialinvoke $u1.<org.apache.maven.model.Profile: void <init>()>();

        $stack6 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($u1);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setProfiles(java.util.List)>($stack6);

        $u2 = new org.apache.maven.model.Model;

        specialinvoke $u2.<org.apache.maven.model.Model: void <init>()>();

        $r0 = (org.apache.maven.model.merge.MavenModelMergerTest) this;

        $stack8 = $r0.<org.apache.maven.model.merge.MavenModelMergerTest: org.apache.maven.model.merge.MavenModelMerger modelMerger>;

        virtualinvoke $stack8.<org.apache.maven.model.merge.MavenModelMerger: void mergeModel_Profiles(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>($u2, $u0, 0, null);

        $stack10 = virtualinvoke $u2.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        $stack11 = interfaceinvoke $stack10.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(0, $stack11);

        $u3 = new org.apache.maven.model.Profile;

        specialinvoke $u3.<org.apache.maven.model.Profile: void <init>()>();

        virtualinvoke $u3.<org.apache.maven.model.Profile: void setId(java.lang.String)>("MODEL");

        $stack13 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($u3);

        virtualinvoke $u2.<org.apache.maven.model.Model: void setProfiles(java.util.List)>($stack13);

        $r1 = (org.apache.maven.model.merge.MavenModelMergerTest) this;

        $stack14 = $r1.<org.apache.maven.model.merge.MavenModelMergerTest: org.apache.maven.model.merge.MavenModelMerger modelMerger>;

        virtualinvoke $stack14.<org.apache.maven.model.merge.MavenModelMerger: void mergeModel_Prerequisites(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>($u2, $u0, 0, null);

        $stack15 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($u3);

        $stack16 = virtualinvoke $u2.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack15, $stack16);

        return;
    }
}
