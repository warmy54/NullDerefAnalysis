public class MavenSession extends java.lang.Object implements java.lang.Cloneable
{
    private org.apache.maven.execution.MavenExecutionRequest request;
    private org.apache.maven.execution.MavenExecutionResult result;
    private org.eclipse.aether.RepositorySystemSession repositorySession;
    private java.util.Properties executionProperties;
    private org.apache.maven.project.MavenProject currentProject;
    private java.util.List projects;
    private java.util.List allProjects;
    private org.apache.maven.project.MavenProject topLevelProject;
    private org.apache.maven.execution.ProjectDependencyGraph projectDependencyGraph;
    private boolean parallel;
    private final java.util.Map pluginContextsByProjectAndPluginKey;
    private java.util.Map projectMap;
    private org.codehaus.plexus.PlexusContainer container;
    private final org.apache.maven.settings.Settings settings;

    public void setProjects(java.util.List)
    {
        java.util.List projects;
        boolean $stack4, $stack9, $stack13;
        MavenSession this;
        java.lang.Object $stack5, $stack12;
        org.apache.maven.project.MavenProject $stack6, $stack7, project;
        java.util.Iterator l2;
        org.apache.maven.execution.MavenSession $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenSession;

        projects := @parameter0: java.util.List;

        $stack4 = interfaceinvoke projects.<java.util.List: boolean isEmpty()>();

        if $stack4 != 0 goto label4;

        $stack5 = interfaceinvoke projects.<java.util.List: java.lang.Object get(int)>(0);

        $stack6 = (org.apache.maven.project.MavenProject) $stack5;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject currentProject> = $stack6;

        $r1 = (org.apache.maven.execution.MavenSession) this;

        $stack7 = $r1.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject currentProject>;

        $r2 = (org.apache.maven.execution.MavenSession) this;

        $r2.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject topLevelProject> = $stack7;

        l2 = interfaceinvoke projects.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack12 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        project = (org.apache.maven.project.MavenProject) $stack12;

        $stack13 = virtualinvoke project.<org.apache.maven.project.MavenProject: boolean isExecutionRoot()>();

        if $stack13 == 0 goto label2;

        $r3 = (org.apache.maven.execution.MavenSession) this;

        $r3.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject topLevelProject> = project;

        goto label3;

     label2:
        goto label1;

     label3:
        goto label5;

     label4:
        $r4 = (org.apache.maven.execution.MavenSession) this;

        $r4.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject currentProject> = null;

        $r5 = (org.apache.maven.execution.MavenSession) this;

        $r5.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject topLevelProject> = null;

     label5:
        $r6 = (org.apache.maven.execution.MavenSession) this;

        $r6.<org.apache.maven.execution.MavenSession: java.util.List projects> = projects;

        return;
    }

    public org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        org.apache.maven.artifact.repository.ArtifactRepository $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        return $stack2;
    }

    public java.util.List getGoals()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        java.util.List $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getGoals()>();

        return $stack2;
    }

    public java.util.Properties getUserProperties()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        java.util.Properties $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: java.util.Properties getUserProperties()>();

        return $stack2;
    }

    public java.util.Properties getSystemProperties()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        java.util.Properties $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: java.util.Properties getSystemProperties()>();

        return $stack2;
    }

    public org.apache.maven.settings.Settings getSettings()
    {
        MavenSession this;
        org.apache.maven.settings.Settings $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.settings.Settings settings>;

        return $stack1;
    }

    public java.util.List getProjects()
    {
        MavenSession this;
        java.util.List $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: java.util.List projects>;

        return $stack1;
    }

    public java.lang.String getExecutionRootDirectory()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        java.lang.String $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: java.lang.String getBaseDirectory()>();

        return $stack2;
    }

    public org.apache.maven.execution.MavenExecutionRequest getRequest()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        return $stack1;
    }

    public void setCurrentProject(org.apache.maven.project.MavenProject)
    {
        MavenSession this;
        org.apache.maven.project.MavenProject currentProject;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        currentProject := @parameter0: org.apache.maven.project.MavenProject;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject currentProject> = currentProject;

        return;
    }

    public org.apache.maven.project.MavenProject getCurrentProject()
    {
        MavenSession this;
        org.apache.maven.project.MavenProject $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject currentProject>;

        return $stack1;
    }

    public org.apache.maven.project.ProjectBuildingRequest getProjectBuildingRequest()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        org.apache.maven.project.ProjectBuildingRequest $stack2, $stack4;
        org.eclipse.aether.RepositorySystemSession $stack3;
        org.apache.maven.execution.MavenSession $r0, $r1;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.project.ProjectBuildingRequest getProjectBuildingRequest()>();

        $r1 = (org.apache.maven.execution.MavenSession) this;

        $stack3 = virtualinvoke $r1.<org.apache.maven.execution.MavenSession: org.eclipse.aether.RepositorySystemSession getRepositorySession()>();

        $stack4 = interfaceinvoke $stack2.<org.apache.maven.project.ProjectBuildingRequest: org.apache.maven.project.ProjectBuildingRequest setRepositorySession(org.eclipse.aether.RepositorySystemSession)>($stack3);

        return $stack4;
    }

    public java.util.List getPluginGroups()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        java.util.List $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: java.util.List getPluginGroups()>();

        return $stack2;
    }

    public boolean isOffline()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        boolean $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: boolean isOffline()>();

        return $stack2;
    }

    public org.apache.maven.project.MavenProject getTopLevelProject()
    {
        MavenSession this;
        org.apache.maven.project.MavenProject $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject topLevelProject>;

        return $stack1;
    }

    public org.apache.maven.execution.MavenExecutionResult getResult()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionResult $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionResult result>;

        return $stack1;
    }

    public java.util.Map getPluginContext(org.apache.maven.plugin.descriptor.PluginDescriptor, org.apache.maven.project.MavenProject)
    {
        org.apache.maven.project.MavenProject project;
        java.lang.String projectKey, pluginKey;
        MavenSession this;
        java.util.Map $stack8, $stack16, pluginContextsByKey, pluginContext;
        java.lang.Object $stack9, $stack11;
        org.apache.maven.plugin.descriptor.PluginDescriptor plugin;
        java.util.concurrent.ConcurrentHashMap $u0, $u1;
        org.apache.maven.execution.MavenSession $r0, $r1;

        this := @this: MavenSession;

        plugin := @parameter0: org.apache.maven.plugin.descriptor.PluginDescriptor;

        project := @parameter1: org.apache.maven.project.MavenProject;

        projectKey = virtualinvoke project.<org.apache.maven.project.MavenProject: java.lang.String getId()>();

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack8 = $r0.<org.apache.maven.execution.MavenSession: java.util.Map pluginContextsByProjectAndPluginKey>;

        $stack9 = interfaceinvoke $stack8.<java.util.Map: java.lang.Object get(java.lang.Object)>(projectKey);

        pluginContextsByKey = (java.util.Map) $stack9;

        if pluginContextsByKey != null goto label1;

        $u0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $u0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        pluginContextsByKey = $u0;

        $r1 = (org.apache.maven.execution.MavenSession) this;

        $stack16 = $r1.<org.apache.maven.execution.MavenSession: java.util.Map pluginContextsByProjectAndPluginKey>;

        interfaceinvoke $stack16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(projectKey, $u0);

     label1:
        pluginKey = virtualinvoke plugin.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getPluginLookupKey()>();

        $stack11 = interfaceinvoke pluginContextsByKey.<java.util.Map: java.lang.Object get(java.lang.Object)>(pluginKey);

        pluginContext = (java.util.Map) $stack11;

        if pluginContext != null goto label2;

        $u1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $u1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        pluginContext = $u1;

        interfaceinvoke pluginContextsByKey.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(pluginKey, $u1);

     label2:
        return pluginContext;
    }

    public org.apache.maven.execution.ProjectDependencyGraph getProjectDependencyGraph()
    {
        MavenSession this;
        org.apache.maven.execution.ProjectDependencyGraph $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.ProjectDependencyGraph projectDependencyGraph>;

        return $stack1;
    }

    public void setProjectDependencyGraph(org.apache.maven.execution.ProjectDependencyGraph)
    {
        MavenSession this;
        org.apache.maven.execution.ProjectDependencyGraph projectDependencyGraph;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        projectDependencyGraph := @parameter0: org.apache.maven.execution.ProjectDependencyGraph;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.ProjectDependencyGraph projectDependencyGraph> = projectDependencyGraph;

        return;
    }

    public java.lang.String getReactorFailureBehavior()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        java.lang.String $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: java.lang.String getReactorFailureBehavior()>();

        return $stack2;
    }

    public org.apache.maven.execution.MavenSession clone()
    {
        MavenSession this;
        java.lang.Object $stack2;
        org.apache.maven.execution.MavenSession $stack3;
        java.lang.CloneNotSupportedException $stack4;
        java.lang.RuntimeException $stack5;

        this := @this: MavenSession;

     label1:
        $stack2 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        $stack3 = (org.apache.maven.execution.MavenSession) $stack2;

     label2:
        return $stack3;

     label3:
        $stack4 := @caughtexception;

        $stack5 = new java.lang.RuntimeException;

        specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Bug", $stack4);

        throw $stack5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.util.Date getStartTime()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        java.util.Date $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: java.util.Date getStartTime()>();

        return $stack2;
    }

    public boolean isParallel()
    {
        MavenSession this;
        boolean $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: boolean parallel>;

        return $stack1;
    }

    public void setParallel(boolean)
    {
        MavenSession this;
        boolean parallel;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        parallel := @parameter0: boolean;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $r0.<org.apache.maven.execution.MavenSession: boolean parallel> = parallel;

        return;
    }

    public org.eclipse.aether.RepositorySystemSession getRepositorySession()
    {
        MavenSession this;
        org.eclipse.aether.RepositorySystemSession $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.eclipse.aether.RepositorySystemSession repositorySession>;

        return $stack1;
    }

    public void setProjectMap(java.util.Map)
    {
        MavenSession this;
        java.util.Map projectMap;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        projectMap := @parameter0: java.util.Map;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $r0.<org.apache.maven.execution.MavenSession: java.util.Map projectMap> = projectMap;

        return;
    }

    public java.util.List getAllProjects()
    {
        MavenSession this;
        java.util.List $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: java.util.List allProjects>;

        return $stack1;
    }

    public void setAllProjects(java.util.List)
    {
        MavenSession this;
        java.util.List allProjects;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        allProjects := @parameter0: java.util.List;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $r0.<org.apache.maven.execution.MavenSession: java.util.List allProjects> = allProjects;

        return;
    }

    public java.util.Map getProjectMap()
    {
        MavenSession this;
        java.util.Map $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: java.util.Map projectMap>;

        return $stack1;
    }

    public void <init>(org.codehaus.plexus.PlexusContainer, org.eclipse.aether.RepositorySystemSession, org.apache.maven.execution.MavenExecutionRequest, org.apache.maven.execution.MavenExecutionResult)
    {
        MavenSession this;
        org.codehaus.plexus.PlexusContainer container;
        org.apache.maven.execution.MavenExecutionRequest request;
        org.apache.maven.execution.MavenExecutionResult result;
        org.eclipse.aether.RepositorySystemSession repositorySession;
        java.util.concurrent.ConcurrentHashMap $u0;
        org.apache.maven.execution.SettingsAdapter $u1;
        org.apache.maven.execution.MavenSession $r0, $r1, $r2, $r3, $r4, $r6;
        org.apache.maven.settings.Settings $r5;

        this := @this: MavenSession;

        container := @parameter0: org.codehaus.plexus.PlexusContainer;

        repositorySession := @parameter1: org.eclipse.aether.RepositorySystemSession;

        request := @parameter2: org.apache.maven.execution.MavenExecutionRequest;

        result := @parameter3: org.apache.maven.execution.MavenExecutionResult;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $u0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $r0.<org.apache.maven.execution.MavenSession: java.util.Map pluginContextsByProjectAndPluginKey> = $u0;

        $r1 = (org.apache.maven.execution.MavenSession) this;

        $r1.<org.apache.maven.execution.MavenSession: org.codehaus.plexus.PlexusContainer container> = container;

        $r2 = (org.apache.maven.execution.MavenSession) this;

        $r2.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request> = request;

        $r3 = (org.apache.maven.execution.MavenSession) this;

        $r3.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionResult result> = result;

        $u1 = new org.apache.maven.execution.SettingsAdapter;

        specialinvoke $u1.<org.apache.maven.execution.SettingsAdapter: void <init>(org.apache.maven.execution.MavenExecutionRequest)>(request);

        $r4 = (org.apache.maven.execution.MavenSession) this;

        $r5 = (org.apache.maven.settings.Settings) $u1;

        $r4.<org.apache.maven.execution.MavenSession: org.apache.maven.settings.Settings settings> = $r5;

        $r6 = (org.apache.maven.execution.MavenSession) this;

        $r6.<org.apache.maven.execution.MavenSession: org.eclipse.aether.RepositorySystemSession repositorySession> = repositorySession;

        return;
    }

    public void <init>(org.codehaus.plexus.PlexusContainer, org.apache.maven.execution.MavenExecutionRequest, org.apache.maven.execution.MavenExecutionResult, org.apache.maven.project.MavenProject)
    {
        MavenSession this;
        org.codehaus.plexus.PlexusContainer container;
        org.apache.maven.execution.MavenExecutionRequest request;
        org.apache.maven.execution.MavenExecutionResult result;
        org.apache.maven.project.MavenProject[] $stack5;
        org.apache.maven.project.MavenProject project;
        java.util.List $stack6;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        container := @parameter0: org.codehaus.plexus.PlexusContainer;

        request := @parameter1: org.apache.maven.execution.MavenExecutionRequest;

        result := @parameter2: org.apache.maven.execution.MavenExecutionResult;

        project := @parameter3: org.apache.maven.project.MavenProject;

        $stack5 = newarray (org.apache.maven.project.MavenProject)[1];

        $stack5[0] = project;

        $stack6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack5);

        $r0 = (org.apache.maven.execution.MavenSession) this;

        specialinvoke $r0.<org.apache.maven.execution.MavenSession: void <init>(org.codehaus.plexus.PlexusContainer,org.apache.maven.execution.MavenExecutionRequest,org.apache.maven.execution.MavenExecutionResult,java.util.List)>(container, request, result, $stack6);

        return;
    }

    public void <init>(org.codehaus.plexus.PlexusContainer, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.monitor.event.EventDispatcher, org.apache.maven.execution.ReactorManager, java.util.List, java.lang.String, java.util.Properties, java.util.Date)
    {
        MavenSession this;
        org.codehaus.plexus.PlexusContainer container;
        org.apache.maven.settings.Settings settings;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        org.apache.maven.monitor.event.EventDispatcher eventDispatcher;
        org.apache.maven.execution.ReactorManager unused;
        java.util.List goals;
        java.lang.String executionRootDir;
        java.util.Properties executionProperties;
        java.util.Date startTime;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        container := @parameter0: org.codehaus.plexus.PlexusContainer;

        settings := @parameter1: org.apache.maven.settings.Settings;

        localRepository := @parameter2: org.apache.maven.artifact.repository.ArtifactRepository;

        eventDispatcher := @parameter3: org.apache.maven.monitor.event.EventDispatcher;

        unused := @parameter4: org.apache.maven.execution.ReactorManager;

        goals := @parameter5: java.util.List;

        executionRootDir := @parameter6: java.lang.String;

        executionProperties := @parameter7: java.util.Properties;

        startTime := @parameter8: java.util.Date;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        specialinvoke $r0.<org.apache.maven.execution.MavenSession: void <init>(org.codehaus.plexus.PlexusContainer,org.apache.maven.settings.Settings,org.apache.maven.artifact.repository.ArtifactRepository,org.apache.maven.monitor.event.EventDispatcher,org.apache.maven.execution.ReactorManager,java.util.List,java.lang.String,java.util.Properties,java.util.Properties,java.util.Date)>(container, settings, localRepository, eventDispatcher, unused, goals, executionRootDir, executionProperties, null, startTime);

        return;
    }

    public void <init>(org.codehaus.plexus.PlexusContainer, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository, org.apache.maven.monitor.event.EventDispatcher, org.apache.maven.execution.ReactorManager, java.util.List, java.lang.String, java.util.Properties, java.util.Properties, java.util.Date)
    {
        MavenSession this;
        org.codehaus.plexus.PlexusContainer container;
        org.apache.maven.settings.Settings settings;
        java.util.Properties executionProperties, userProperties;
        org.apache.maven.execution.MavenExecutionRequest $stack13, $stack15, $stack17, $stack19, $stack21, $r5;
        org.apache.maven.artifact.repository.ArtifactRepository localRepository;
        java.util.List goals;
        java.lang.String executionRootDir;
        java.util.Date startTime;
        org.apache.maven.monitor.event.EventDispatcher eventDispatcher;
        org.apache.maven.execution.ReactorManager unused;
        java.io.File $stack23, $u2;
        java.util.concurrent.ConcurrentHashMap $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $u1;
        org.apache.maven.execution.MavenSession $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenSession;

        container := @parameter0: org.codehaus.plexus.PlexusContainer;

        settings := @parameter1: org.apache.maven.settings.Settings;

        localRepository := @parameter2: org.apache.maven.artifact.repository.ArtifactRepository;

        eventDispatcher := @parameter3: org.apache.maven.monitor.event.EventDispatcher;

        unused := @parameter4: org.apache.maven.execution.ReactorManager;

        goals := @parameter5: java.util.List;

        executionRootDir := @parameter6: java.lang.String;

        executionProperties := @parameter7: java.util.Properties;

        userProperties := @parameter8: java.util.Properties;

        startTime := @parameter9: java.util.Date;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $u0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $r0.<org.apache.maven.execution.MavenSession: java.util.Map pluginContextsByProjectAndPluginKey> = $u0;

        $r1 = (org.apache.maven.execution.MavenSession) this;

        $r1.<org.apache.maven.execution.MavenSession: org.codehaus.plexus.PlexusContainer container> = container;

        $r2 = (org.apache.maven.execution.MavenSession) this;

        $r2.<org.apache.maven.execution.MavenSession: org.apache.maven.settings.Settings settings> = settings;

        $r3 = (org.apache.maven.execution.MavenSession) this;

        $r3.<org.apache.maven.execution.MavenSession: java.util.Properties executionProperties> = executionProperties;

        $u1 = new org.apache.maven.execution.DefaultMavenExecutionRequest;

        specialinvoke $u1.<org.apache.maven.execution.DefaultMavenExecutionRequest: void <init>()>();

        $r4 = (org.apache.maven.execution.MavenSession) this;

        $r5 = (org.apache.maven.execution.MavenExecutionRequest) $u1;

        $r4.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request> = $r5;

        $r6 = (org.apache.maven.execution.MavenSession) this;

        $stack13 = $r6.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        interfaceinvoke $stack13.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setUserProperties(java.util.Properties)>(userProperties);

        $r7 = (org.apache.maven.execution.MavenSession) this;

        $stack15 = $r7.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        interfaceinvoke $stack15.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>(localRepository);

        $r8 = (org.apache.maven.execution.MavenSession) this;

        $stack17 = $r8.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        interfaceinvoke $stack17.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setGoals(java.util.List)>(goals);

        $r9 = (org.apache.maven.execution.MavenSession) this;

        $stack19 = $r9.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        if executionRootDir == null goto label1;

        $u2 = new java.io.File;

        $stack23 = $u2;

        specialinvoke $u2.<java.io.File: void <init>(java.lang.String)>(executionRootDir);

        goto label2;

     label1:
        $stack23 = null;

     label2:
        interfaceinvoke $stack19.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setBaseDirectory(java.io.File)>($stack23);

        $r10 = (org.apache.maven.execution.MavenSession) this;

        $stack21 = $r10.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        interfaceinvoke $stack21.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setStartTime(java.util.Date)>(startTime);

        return;
    }

    public void <init>(org.codehaus.plexus.PlexusContainer, org.apache.maven.execution.MavenExecutionRequest, org.apache.maven.execution.MavenExecutionResult, java.util.List)
    {
        MavenSession this;
        org.codehaus.plexus.PlexusContainer container;
        org.apache.maven.execution.MavenExecutionRequest request;
        org.apache.maven.execution.MavenExecutionResult result;
        java.util.List projects;
        java.util.concurrent.ConcurrentHashMap $u0;
        org.apache.maven.execution.SettingsAdapter $u1;
        org.apache.maven.execution.MavenSession $r0, $r1, $r2, $r3, $r4, $r6;
        org.apache.maven.settings.Settings $r5;

        this := @this: MavenSession;

        container := @parameter0: org.codehaus.plexus.PlexusContainer;

        request := @parameter1: org.apache.maven.execution.MavenExecutionRequest;

        result := @parameter2: org.apache.maven.execution.MavenExecutionResult;

        projects := @parameter3: java.util.List;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $u0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $r0.<org.apache.maven.execution.MavenSession: java.util.Map pluginContextsByProjectAndPluginKey> = $u0;

        $r1 = (org.apache.maven.execution.MavenSession) this;

        $r1.<org.apache.maven.execution.MavenSession: org.codehaus.plexus.PlexusContainer container> = container;

        $r2 = (org.apache.maven.execution.MavenSession) this;

        $r2.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request> = request;

        $r3 = (org.apache.maven.execution.MavenSession) this;

        $r3.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionResult result> = result;

        $u1 = new org.apache.maven.execution.SettingsAdapter;

        specialinvoke $u1.<org.apache.maven.execution.SettingsAdapter: void <init>(org.apache.maven.execution.MavenExecutionRequest)>(request);

        $r4 = (org.apache.maven.execution.MavenSession) this;

        $r5 = (org.apache.maven.settings.Settings) $u1;

        $r4.<org.apache.maven.execution.MavenSession: org.apache.maven.settings.Settings settings> = $r5;

        $r6 = (org.apache.maven.execution.MavenSession) this;

        virtualinvoke $r6.<org.apache.maven.execution.MavenSession: void setProjects(java.util.List)>(projects);

        return;
    }

    public java.util.List getSortedProjects()
    {
        MavenSession this;
        java.util.List $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.execution.MavenSession: java.util.List getProjects()>();

        return $stack1;
    }

    public org.apache.maven.artifact.repository.RepositoryCache getRepositoryCache()
    {
        MavenSession this;

        this := @this: MavenSession;

        return null;
    }

    public org.apache.maven.monitor.event.EventDispatcher getEventDispatcher()
    {
        MavenSession this;

        this := @this: MavenSession;

        return null;
    }

    public boolean isUsingPOMsFromFilesystem()
    {
        MavenSession this;
        org.apache.maven.execution.MavenExecutionRequest $stack1;
        boolean $stack2;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack2 = interfaceinvoke $stack1.<org.apache.maven.execution.MavenExecutionRequest: boolean isProjectPresent()>();

        return $stack2;
    }

    public java.util.Properties getExecutionProperties()
    {
        MavenSession this;
        java.util.Properties $stack1, $stack2, $stack5, $stack6, $stack8, $stack9, $u0;
        org.apache.maven.execution.MavenExecutionRequest $stack4, $stack7;
        org.apache.maven.execution.MavenSession $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: java.util.Properties executionProperties>;

        if $stack1 != null goto label1;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r1 = (org.apache.maven.execution.MavenSession) this;

        $r1.<org.apache.maven.execution.MavenSession: java.util.Properties executionProperties> = $u0;

        $r2 = (org.apache.maven.execution.MavenSession) this;

        $stack5 = $r2.<org.apache.maven.execution.MavenSession: java.util.Properties executionProperties>;

        $r3 = (org.apache.maven.execution.MavenSession) this;

        $stack4 = $r3.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack6 = interfaceinvoke $stack4.<org.apache.maven.execution.MavenExecutionRequest: java.util.Properties getSystemProperties()>();

        virtualinvoke $stack5.<java.util.Properties: void putAll(java.util.Map)>($stack6);

        $r4 = (org.apache.maven.execution.MavenSession) this;

        $stack8 = $r4.<org.apache.maven.execution.MavenSession: java.util.Properties executionProperties>;

        $r5 = (org.apache.maven.execution.MavenSession) this;

        $stack7 = $r5.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenExecutionRequest request>;

        $stack9 = interfaceinvoke $stack7.<org.apache.maven.execution.MavenExecutionRequest: java.util.Properties getUserProperties()>();

        virtualinvoke $stack8.<java.util.Properties: void putAll(java.util.Map)>($stack9);

     label1:
        $r6 = (org.apache.maven.execution.MavenSession) this;

        $stack2 = $r6.<org.apache.maven.execution.MavenSession: java.util.Properties executionProperties>;

        return $stack2;
    }

    public org.codehaus.plexus.PlexusContainer getContainer()
    {
        MavenSession this;
        org.codehaus.plexus.PlexusContainer $stack1;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = $r0.<org.apache.maven.execution.MavenSession: org.codehaus.plexus.PlexusContainer container>;

        return $stack1;
    }

    public java.lang.Object lookup(java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException
    {
        MavenSession this;
        java.lang.String role;
        org.codehaus.plexus.PlexusContainer $stack2;
        java.lang.Object $stack3;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        role := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack2 = $r0.<org.apache.maven.execution.MavenSession: org.codehaus.plexus.PlexusContainer container>;

        $stack3 = interfaceinvoke $stack2.<org.codehaus.plexus.PlexusContainer: java.lang.Object lookup(java.lang.String)>(role);

        return $stack3;
    }

    public java.lang.Object lookup(java.lang.String, java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException
    {
        MavenSession this;
        java.lang.String role, roleHint;
        org.codehaus.plexus.PlexusContainer $stack3;
        java.lang.Object $stack4;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        role := @parameter0: java.lang.String;

        roleHint := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack3 = $r0.<org.apache.maven.execution.MavenSession: org.codehaus.plexus.PlexusContainer container>;

        $stack4 = interfaceinvoke $stack3.<org.codehaus.plexus.PlexusContainer: java.lang.Object lookup(java.lang.String,java.lang.String)>(role, roleHint);

        return $stack4;
    }

    public java.util.List lookupList(java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException
    {
        MavenSession this;
        java.lang.String role;
        org.codehaus.plexus.PlexusContainer $stack2;
        java.util.List $stack3;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        role := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack2 = $r0.<org.apache.maven.execution.MavenSession: org.codehaus.plexus.PlexusContainer container>;

        $stack3 = interfaceinvoke $stack2.<org.codehaus.plexus.PlexusContainer: java.util.List lookupList(java.lang.String)>(role);

        return $stack3;
    }

    public java.util.Map lookupMap(java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException
    {
        MavenSession this;
        java.lang.String role;
        org.codehaus.plexus.PlexusContainer $stack2;
        java.util.Map $stack3;
        org.apache.maven.execution.MavenSession $r0;

        this := @this: MavenSession;

        role := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack2 = $r0.<org.apache.maven.execution.MavenSession: org.codehaus.plexus.PlexusContainer container>;

        $stack3 = interfaceinvoke $stack2.<org.codehaus.plexus.PlexusContainer: java.util.Map lookupMap(java.lang.String)>(role);

        return $stack3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        MavenSession this;
        org.apache.maven.execution.MavenSession $stack1, $r0;

        this := @this: MavenSession;

        $r0 = (org.apache.maven.execution.MavenSession) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenSession clone()>();

        return $stack1;
    }
}
