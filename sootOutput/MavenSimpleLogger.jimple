public class MavenSimpleLogger extends org.slf4j.impl.SimpleLogger
{
    static final boolean $assertionsDisabled;

    void <init>(java.lang.String)
    {
        MavenSimpleLogger this;
        java.lang.String name;

        this := @this: MavenSimpleLogger;

        name := @parameter0: java.lang.String;

        specialinvoke this.<org.slf4j.impl.SimpleLogger: void <init>(java.lang.String)>(name);

        return;
    }

    protected java.lang.String renderLevel(int)
    {
        int level;
        org.apache.maven.shared.utils.logging.LoggerLevelRenderer $stack2, $stack4, $stack6, $stack8, $stack10;
        java.lang.String $stack3, $stack5, $stack7, $stack9, $stack11;
        MavenSimpleLogger this;

        this := @this: MavenSimpleLogger;

        level := @parameter0: int;

        lookupswitch(level)
        {
            case 0: goto label1;
            case 10: goto label2;
            case 20: goto label3;
            case 30: goto label4;
            case 40: goto label5;
            default: goto label5;
        };

     label1:
        $stack8 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.LoggerLevelRenderer level()>();

        $stack9 = interfaceinvoke $stack8.<org.apache.maven.shared.utils.logging.LoggerLevelRenderer: java.lang.String debug(java.lang.String)>("TRACE");

        return $stack9;

     label2:
        $stack6 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.LoggerLevelRenderer level()>();

        $stack7 = interfaceinvoke $stack6.<org.apache.maven.shared.utils.logging.LoggerLevelRenderer: java.lang.String debug(java.lang.String)>("DEBUG");

        return $stack7;

     label3:
        $stack4 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.LoggerLevelRenderer level()>();

        $stack5 = interfaceinvoke $stack4.<org.apache.maven.shared.utils.logging.LoggerLevelRenderer: java.lang.String info(java.lang.String)>("INFO");

        return $stack5;

     label4:
        $stack2 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.LoggerLevelRenderer level()>();

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.shared.utils.logging.LoggerLevelRenderer: java.lang.String warning(java.lang.String)>("WARNING");

        return $stack3;

     label5:
        $stack10 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.LoggerLevelRenderer level()>();

        $stack11 = interfaceinvoke $stack10.<org.apache.maven.shared.utils.logging.LoggerLevelRenderer: java.lang.String error(java.lang.String)>("ERROR");

        return $stack11;
    }

    protected void writeThrowable(java.lang.Throwable, java.io.PrintStream)
    {
        java.io.PrintStream stream;
        org.apache.maven.shared.utils.logging.MessageBuilder $stack7, $stack10, $stack15, $stack16, $stack17, $stack20, $stack22, $stack24, $stack26, $stack27, $stack36, $stack37, $stack39, $stack40, $stack43, $stack45;
        java.lang.Class $stack8, $stack18;
        java.lang.String $stack9, $stack11, $stack19, $stack21, $stack23, $stack30, $stack33, $stack35, $stack38, $stack44;
        java.lang.StackTraceElement[] l3;
        int l4, l5;
        java.lang.StackTraceElement e;
        java.lang.StringBuilder $stack29, $stack31, $stack32, $stack34, $u0;
        MavenSimpleLogger this;
        java.lang.Throwable t;
        org.slf4j.impl.MavenSimpleLogger $r0;

        this := @this: MavenSimpleLogger;

        t := @parameter0: java.lang.Throwable;

        stream := @parameter1: java.io.PrintStream;

        if t != null goto label1;

        return;

     label1:
        $stack7 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.MessageBuilder buffer()>();

        $stack8 = virtualinvoke t.<java.lang.Object: java.lang.Class getClass()>();

        $stack9 = virtualinvoke $stack8.<java.lang.Class: java.lang.String getName()>();

        $stack10 = interfaceinvoke $stack7.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder failure(java.lang.Object)>($stack9);

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.Object)>($stack10);

        $stack11 = virtualinvoke t.<java.lang.Throwable: java.lang.String getMessage()>();

        if $stack11 == null goto label2;

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.String)>(": ");

        $stack43 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.MessageBuilder buffer()>();

        $stack44 = virtualinvoke t.<java.lang.Throwable: java.lang.String getMessage()>();

        $stack45 = interfaceinvoke $stack43.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder failure(java.lang.Object)>($stack44);

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.Object)>($stack45);

     label2:
        virtualinvoke stream.<java.io.PrintStream: void println()>();

     label3:
        if t == null goto label7;

        l3 = virtualinvoke t.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();

        l4 = lengthof l3;

        l5 = 0;

     label4:
        if l5 >= l4 goto label5;

        e = l3[l5];

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.String)>("    ");

        $stack26 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.MessageBuilder buffer()>();

        $stack27 = interfaceinvoke $stack26.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder strong(java.lang.Object)>("at");

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.Object)>($stack27);

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack29 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $stack30 = virtualinvoke e.<java.lang.StackTraceElement: java.lang.String getClassName()>();

        $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $stack33 = virtualinvoke e.<java.lang.StackTraceElement: java.lang.String getMethodName()>();

        $stack34 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33);

        $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.String)>($stack35);

        $stack36 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.MessageBuilder buffer()>();

        $stack37 = interfaceinvoke $stack36.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder a(java.lang.CharSequence)>(" (");

        $r0 = (org.slf4j.impl.MavenSimpleLogger) this;

        $stack38 = virtualinvoke $r0.<org.slf4j.impl.MavenSimpleLogger: java.lang.String getLocation(java.lang.StackTraceElement)>(e);

        $stack39 = interfaceinvoke $stack37.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder strong(java.lang.Object)>($stack38);

        $stack40 = interfaceinvoke $stack39.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder a(java.lang.CharSequence)>(")");

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.Object)>($stack40);

        virtualinvoke stream.<java.io.PrintStream: void println()>();

        l5 = l5 + 1;

        goto label4;

     label5:
        t = virtualinvoke t.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if t == null goto label3;

        $stack15 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.MessageBuilder buffer()>();

        $stack16 = interfaceinvoke $stack15.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder strong(java.lang.Object)>("Caused by");

        $stack17 = interfaceinvoke $stack16.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder a(java.lang.CharSequence)>(": ");

        $stack18 = virtualinvoke t.<java.lang.Object: java.lang.Class getClass()>();

        $stack19 = virtualinvoke $stack18.<java.lang.Class: java.lang.String getName()>();

        $stack20 = interfaceinvoke $stack17.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder a(java.lang.CharSequence)>($stack19);

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.Object)>($stack20);

        $stack21 = virtualinvoke t.<java.lang.Throwable: java.lang.String getMessage()>();

        if $stack21 == null goto label6;

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.String)>(": ");

        $stack22 = staticinvoke <org.apache.maven.shared.utils.logging.MessageUtils: org.apache.maven.shared.utils.logging.MessageBuilder buffer()>();

        $stack23 = virtualinvoke t.<java.lang.Throwable: java.lang.String getMessage()>();

        $stack24 = interfaceinvoke $stack22.<org.apache.maven.shared.utils.logging.MessageBuilder: org.apache.maven.shared.utils.logging.MessageBuilder failure(java.lang.Object)>($stack23);

        virtualinvoke stream.<java.io.PrintStream: void print(java.lang.Object)>($stack24);

     label6:
        virtualinvoke stream.<java.io.PrintStream: void println()>();

        goto label3;

     label7:
        return;
    }

    protected java.lang.String getLocation(java.lang.StackTraceElement)
    {
        boolean $stack2, $stack3;
        java.lang.StackTraceElement e;
        java.lang.String $stack4, $stack6, $stack10, $stack14;
        int $stack5, $stack12;
        java.lang.Object[] $stack7;
        java.lang.Integer $stack13;
        java.lang.AssertionError $stack16;
        MavenSimpleLogger this;

        this := @this: MavenSimpleLogger;

        e := @parameter0: java.lang.StackTraceElement;

        $stack2 = <org.slf4j.impl.MavenSimpleLogger: boolean $assertionsDisabled>;

        if $stack2 != 0 goto label1;

        if e != null goto label1;

        $stack16 = new java.lang.AssertionError;

        specialinvoke $stack16.<java.lang.AssertionError: void <init>()>();

        throw $stack16;

     label1:
        $stack3 = virtualinvoke e.<java.lang.StackTraceElement: boolean isNativeMethod()>();

        if $stack3 == 0 goto label2;

        return "Native Method";

     label2:
        $stack4 = virtualinvoke e.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        if $stack4 != null goto label3;

        return "Unknown Source";

     label3:
        $stack5 = virtualinvoke e.<java.lang.StackTraceElement: int getLineNumber()>();

        if $stack5 < 0 goto label4;

        $stack7 = newarray (java.lang.Object)[2];

        $stack10 = virtualinvoke e.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        $stack7[0] = $stack10;

        $stack12 = virtualinvoke e.<java.lang.StackTraceElement: int getLineNumber()>();

        $stack13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack12);

        $stack7[1] = $stack13;

        $stack14 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s:%s", $stack7);

        return $stack14;

     label4:
        $stack6 = virtualinvoke e.<java.lang.StackTraceElement: java.lang.String getFileName()>();

        return $stack6;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack2;

        $stack0 = class "Lorg/slf4j/impl/MavenSimpleLogger;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        <org.slf4j.impl.MavenSimpleLogger: boolean $assertionsDisabled> = $stack2;

        return;
    }
}
