public class MavenXpp3Reader extends java.lang.Object
{
    private boolean addDefaultEntities;
    public final org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer contentTransformer;

    public void <init>()
    {
        MavenXpp3Reader this;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader$1 $u0;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer $r1;

        this := @this: MavenXpp3Reader;

        $u0 = new org.apache.maven.model.io.xpp3.MavenXpp3Reader$1;

        specialinvoke $u0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader$1: void <init>()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer) $u0;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void <init>(org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer)>($r1);

        return;
    }

    public void <init>(org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer)
    {
        MavenXpp3Reader this;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer contentTransformer;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1;

        this := @this: MavenXpp3Reader;

        contentTransformer := @parameter0: org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean addDefaultEntities> = 1;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer contentTransformer> = contentTransformer;

        return;
    }

    private boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser, java.lang.String, java.lang.String, java.util.Set) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String $stack5, tagName, $stack13, $stack14, alias;
        boolean $stack6, $stack7, $stack15;
        java.util.Set parsed;
        java.lang.StringBuilder $stack10, $stack11, $stack12, $u0;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        tagName := @parameter1: java.lang.String;

        alias := @parameter2: java.lang.String;

        parsed := @parameter3: java.util.Set;

        $stack5 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(tagName);

        if $stack6 != 0 goto label1;

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>(alias);

        if $stack15 != 0 goto label1;

        return 0;

     label1:
        $stack7 = interfaceinvoke parsed.<java.util.Set: boolean add(java.lang.Object)>(tagName);

        if $stack7 != 0 goto label2;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicated tag: \'");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tagName);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack13, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        return 1;
    }

    private void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser, java.lang.String, java.lang.String, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException, java.io.IOException
    {
        boolean strict;
        java.lang.StringBuilder $stack7, $stack8, $stack9, $stack10, $stack11, $u0;
        java.lang.String attribute, tagName, $stack12;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        attribute := @parameter1: java.lang.String;

        tagName := @parameter2: java.lang.String;

        strict := @parameter3: boolean;

        if strict == 0 goto label1;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown attribute \'");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for tag \'");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tagName);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack12, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        return;
    }

    private void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException, java.io.IOException
    {
        boolean strict;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        int eventType, unrecognizedTagCount;
        java.lang.StringBuilder $stack9, $stack11, $stack12, $u0;
        java.lang.String $stack10, $stack13;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        if strict == 0 goto label1;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognised tag: \'");

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack13, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        unrecognizedTagCount = 1;

     label2:
        if unrecognizedTagCount <= 0 goto label5;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

        if eventType != 2 goto label3;

        unrecognizedTagCount = unrecognizedTagCount + 1;

        goto label4;

     label3:
        if eventType != 3 goto label4;

        unrecognizedTagCount = unrecognizedTagCount + -1;

     label4:
        goto label2;

     label5:
        return;
    }

    public boolean getAddDefaultEntities()
    {
        MavenXpp3Reader this;
        boolean $stack1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0;

        this := @this: MavenXpp3Reader;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack1 = $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean addDefaultEntities>;

        return $stack1;
    }

    private boolean getBooleanValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3Reader this;
        java.lang.String s, attribute;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        boolean $stack4;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>(s, attribute, parser, null);

        return $stack4;
    }

    private boolean getBooleanValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, java.lang.String) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, defaultValue, attribute;
        java.lang.Boolean $stack5, $stack9;
        boolean $stack6, $stack10;
        int $stack7;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        defaultValue := @parameter3: java.lang.String;

        if s == null goto label1;

        $stack7 = virtualinvoke s.<java.lang.String: int length()>();

        if $stack7 == 0 goto label1;

        $stack9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(s);

        $stack10 = virtualinvoke $stack9.<java.lang.Boolean: boolean booleanValue()>();

        return $stack10;

     label1:
        if defaultValue == null goto label2;

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(defaultValue);

        $stack6 = virtualinvoke $stack5.<java.lang.Boolean: boolean booleanValue()>();

        return $stack6;

     label2:
        return 0;
    }

    private byte getByteValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Byte $stack6;
        byte $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Byte: byte byteValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a byte");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private char getCharacterValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute;
        char $stack4;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        if s == null goto label1;

        $stack4 = virtualinvoke s.<java.lang.String: char charAt(int)>(0);

        return $stack4;

     label1:
        return 0;
    }

    private java.util.Date getDateValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3Reader this;
        java.lang.String s, attribute;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.util.Date $stack4;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.util.Date getDateValue(java.lang.String,java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser)>(s, attribute, null, parser);

        return $stack4;
    }

    private java.util.Date getDateValue(java.lang.String, java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, dateFormat, $stack7, $stack17, $stack20, attribute, effectiveDateFormat;
        boolean $stack8;
        java.util.Locale $stack10;
        java.util.Date $stack11, $u0;
        long $stack13;
        java.text.ParseException $stack15;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.NumberFormatException $stack18;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1, $u3;
        java.text.SimpleDateFormat $u2;
        java.lang.Throwable $r0, $r1;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        dateFormat := @parameter2: java.lang.String;

        parser := @parameter3: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        if s == null goto label8;

        effectiveDateFormat = dateFormat;

        if dateFormat != null goto label1;

        effectiveDateFormat = "yyyy-MM-dd\'T\'HH:mm:ss.SSS";

     label1:
        $stack7 = "long";

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(effectiveDateFormat);

        if $stack8 == 0 goto label5;

     label2:
        $u0 = new java.util.Date;

        $stack13 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(s);

        specialinvoke $u0.<java.util.Date: void <init>(long)>($stack13);

     label3:
        return $u0;

     label4:
        $stack18 := @caughtexception;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $stack20 = virtualinvoke $stack18.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack20, parser, $stack18);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label5:
        $u2 = new java.text.SimpleDateFormat;

        $stack10 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $u2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(effectiveDateFormat, $stack10);

        $stack11 = virtualinvoke $u2.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(s);

     label6:
        return $stack11;

     label7:
        $stack15 := @caughtexception;

        $u3 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $stack17 = virtualinvoke $stack15.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $u3.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack17, parser, $stack15);

        $r1 = (java.lang.Throwable) $u3;

        throw $r1;

     label8:
        return null;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
        catch java.text.ParseException from label5 to label6 with label7;
    }

    private double getDoubleValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Double $stack6;
        double $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Double: double doubleValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a floating point number");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0.0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private float getFloatValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Float $stack6;
        float $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Float: float floatValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a floating point number");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0.0F;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private int getIntegerValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Integer $stack6;
        int $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Integer: int intValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be an integer");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private long getLongValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Long $stack6;
        long $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Long: long longValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a long integer");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private java.lang.String getRequiredAttributeValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack11;
        boolean strict;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s != null goto label1;

        if strict == 0 goto label1;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing required value for attribute \'");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack11, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        return s;
    }

    private short getShortValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Short $stack6;
        short $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Short: short shortValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a short integer");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private java.lang.String getTrimmedValue(java.lang.String)
    {
        MavenXpp3Reader this;
        java.lang.String s;

        this := @this: MavenXpp3Reader;

        s := @parameter0: java.lang.String;

        if s == null goto label1;

        s = virtualinvoke s.<java.lang.String: java.lang.String trim()>();

     label1:
        return s;
    }

    private java.lang.String interpolatedTrimmed(java.lang.String, java.lang.String)
    {
        MavenXpp3Reader this;
        java.lang.String value, context, $stack4, $stack5;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer $stack3;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1;

        this := @this: MavenXpp3Reader;

        value := @parameter0: java.lang.String;

        context := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack3 = $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer contentTransformer>;

        $stack4 = interfaceinvoke $stack3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader$ContentTransformer: java.lang.String transform(java.lang.String,java.lang.String)>(value, context);

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack5 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String getTrimmedValue(java.lang.String)>($stack4);

        return $stack5;
    }

    private int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.StringBuilder $stack7, $stack10, $u0;
        java.lang.String[] $stack8;
        java.lang.String $stack9, $stack11;
        MavenXpp3Reader this;
        int eventType;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

        if eventType != 4 goto label1;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

     label1:
        if eventType == 2 goto label2;

        if eventType == 3 goto label2;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected START_TAG or END_TAG not ");

        $stack8 = <org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String[] TYPES>;

        $stack9 = $stack8[eventType];

        $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack11, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        return eventType;
    }

    public org.apache.maven.model.Model read(java.io.Reader, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3Reader this;
        boolean $stack4, strict;
        java.io.Reader reader;
        org.apache.maven.model.Model $stack6;
        org.codehaus.plexus.util.xml.pull.EntityReplacementMap $stack8;
        org.codehaus.plexus.util.xml.pull.MXParser $stack5, $u0, $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r2;
        org.codehaus.plexus.util.xml.pull.XmlPullParser $r1, $r3;

        this := @this: MavenXpp3Reader;

        reader := @parameter0: java.io.Reader;

        strict := @parameter1: boolean;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack4 = $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean addDefaultEntities>;

        if $stack4 == 0 goto label1;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXParser;

        $stack5 = $u0;

        $stack8 = <org.codehaus.plexus.util.xml.pull.EntityReplacementMap: org.codehaus.plexus.util.xml.pull.EntityReplacementMap defaultEntityReplacementMap>;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXParser: void <init>(org.codehaus.plexus.util.xml.pull.EntityReplacementMap)>($stack8);

        goto label2;

     label1:
        $u1 = new org.codehaus.plexus.util.xml.pull.MXParser;

        $stack5 = $u1;

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.MXParser: void <init>()>();

     label2:
        $r1 = (org.codehaus.plexus.util.xml.pull.XmlPullParser) $stack5;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlPullParser: void setInput(java.io.Reader)>(reader);

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlPullParser) $stack5;

        $stack6 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Model read(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>($r3, strict);

        return $stack6;
    }

    public org.apache.maven.model.Model read(java.io.Reader) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3Reader this;
        java.io.Reader reader;
        org.apache.maven.model.Model $stack2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0;

        this := @this: MavenXpp3Reader;

        reader := @parameter0: java.io.Reader;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Model read(java.io.Reader,boolean)>(reader, 1);

        return $stack2;
    }

    public org.apache.maven.model.Model read(java.io.InputStream, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3Reader this;
        java.io.InputStream in;
        org.codehaus.plexus.util.xml.XmlStreamReader $stack3;
        boolean strict;
        org.apache.maven.model.Model $stack4;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0;
        java.io.Reader $r1;

        this := @this: MavenXpp3Reader;

        in := @parameter0: java.io.InputStream;

        strict := @parameter1: boolean;

        $stack3 = staticinvoke <org.codehaus.plexus.util.ReaderFactory: org.codehaus.plexus.util.xml.XmlStreamReader newXmlReader(java.io.InputStream)>(in);

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $r1 = (java.io.Reader) $stack3;

        $stack4 = virtualinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Model read(java.io.Reader,boolean)>($r1, strict);

        return $stack4;
    }

    public org.apache.maven.model.Model read(java.io.InputStream) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3Reader this;
        java.io.InputStream in;
        org.codehaus.plexus.util.xml.XmlStreamReader $stack2;
        org.apache.maven.model.Model $stack3;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0;
        java.io.Reader $r1;

        this := @this: MavenXpp3Reader;

        in := @parameter0: java.io.InputStream;

        $stack2 = staticinvoke <org.codehaus.plexus.util.ReaderFactory: org.codehaus.plexus.util.xml.XmlStreamReader newXmlReader(java.io.InputStream)>(in);

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $r1 = (java.io.Reader) $stack2;

        $stack3 = virtualinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Model read(java.io.Reader)>($r1);

        return $stack3;
    }

    private org.apache.maven.model.Activation parseActivation(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack22, $stack23, $stack24, $stack25, name;
        int $stack10, $stack31, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack26;
        MavenXpp3Reader this;
        org.apache.maven.model.ActivationFile $stack19;
        org.apache.maven.model.ActivationProperty $stack20;
        org.apache.maven.model.ActivationOS $stack21;
        org.apache.maven.model.Activation $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Activation;

        specialinvoke $u0.<org.apache.maven.model.Activation: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack31 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack31 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label13;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "activeByDefault", null, $u1);

        if $stack13 == 0 goto label08;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "activeByDefault");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack26 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack25, "activeByDefault", parser, "false");

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setActiveByDefault(boolean)>($stack26);

        goto label05;

     label08:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "jdk", null, $u1);

        if $stack14 == 0 goto label09;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "jdk");

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setJdk(java.lang.String)>($stack23);

        goto label05;

     label09:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "os", null, $u1);

        if $stack15 == 0 goto label10;

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.ActivationOS parseActivationOS(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setOs(org.apache.maven.model.ActivationOS)>($stack21);

        goto label05;

     label10:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "property", null, $u1);

        if $stack16 == 0 goto label11;

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.ActivationProperty parseActivationProperty(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setProperty(org.apache.maven.model.ActivationProperty)>($stack20);

        goto label05;

     label11:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "file", null, $u1);

        if $stack17 == 0 goto label12;

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.ActivationFile parseActivationFile(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setFile(org.apache.maven.model.ActivationFile)>($stack19);

        goto label05;

     label12:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label13:
        return $u0;
    }

    private org.apache.maven.model.ActivationFile parseActivationFile(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack16, $stack17, $stack18, $stack19, name;
        int $stack10, $stack24, i, $stack12;
        boolean strict, $stack13, $stack14;
        MavenXpp3Reader this;
        org.apache.maven.model.ActivationFile $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ActivationFile;

        specialinvoke $u0.<org.apache.maven.model.ActivationFile: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack24 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack24 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "missing", null, $u1);

        if $stack13 == 0 goto label08;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "missing");

        virtualinvoke $u0.<org.apache.maven.model.ActivationFile: void setMissing(java.lang.String)>($stack19);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "exists", null, $u1);

        if $stack14 == 0 goto label09;

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack16, "exists");

        virtualinvoke $u0.<org.apache.maven.model.ActivationFile: void setExists(java.lang.String)>($stack17);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.ActivationOS parseActivationOS(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, name;
        int $stack10, $stack30, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16;
        MavenXpp3Reader this;
        org.apache.maven.model.ActivationOS $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ActivationOS;

        specialinvoke $u0.<org.apache.maven.model.ActivationOS: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack30 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack30 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack13 == 0 goto label08;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "name");

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setName(java.lang.String)>($stack25);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "family", null, $u1);

        if $stack14 == 0 goto label09;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "family");

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setFamily(java.lang.String)>($stack23);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "arch", null, $u1);

        if $stack15 == 0 goto label10;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "arch");

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setArch(java.lang.String)>($stack21);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u1);

        if $stack16 == 0 goto label11;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "version");

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setVersion(java.lang.String)>($stack19);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.ActivationProperty parseActivationProperty(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack16, $stack17, $stack18, $stack19, name;
        int $stack10, $stack24, i, $stack12;
        boolean strict, $stack13, $stack14;
        MavenXpp3Reader this;
        org.apache.maven.model.ActivationProperty $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ActivationProperty;

        specialinvoke $u0.<org.apache.maven.model.ActivationProperty: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack24 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack24 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack13 == 0 goto label08;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "name");

        virtualinvoke $u0.<org.apache.maven.model.ActivationProperty: void setName(java.lang.String)>($stack19);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "value", null, $u1);

        if $stack14 == 0 goto label09;

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack16, "value");

        virtualinvoke $u0.<org.apache.maven.model.ActivationProperty: void setValue(java.lang.String)>($stack17);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.Build parseBuild(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack30, $stack31, $stack40, $stack41, $stack45, $stack46, $stack48, $stack49, $stack50, $stack51, $stack54, $stack55, $stack63, $stack64, $stack70, $stack71, $stack74, $stack75, $stack81, $stack82, $stack83, $stack84, $stack85, $stack86, $stack87, $stack88, $stack89, $stack90, name;
        int $stack10, $stack95, i, $stack12, $stack73, $stack62, $stack53, $stack39, $stack29;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack32, $stack42, $stack56, $stack65, $stack76;
        MavenXpp3Reader this;
        org.apache.maven.model.Plugin $stack35;
        org.apache.maven.model.PluginManagement $stack37;
        org.apache.maven.model.Resource $stack59, $stack68;
        org.apache.maven.model.Extension $stack79;
        org.apache.maven.model.Build $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3, $u4, $u5, $u6;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Build;

        specialinvoke $u0.<org.apache.maven.model.Build: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack95 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack95 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label37;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sourceDirectory", null, $u1);

        if $stack13 == 0 goto label08;

        $stack89 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack90 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack89, "sourceDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setSourceDirectory(java.lang.String)>($stack90);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "scriptSourceDirectory", null, $u1);

        if $stack14 == 0 goto label09;

        $stack87 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack88 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack87, "scriptSourceDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setScriptSourceDirectory(java.lang.String)>($stack88);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "testSourceDirectory", null, $u1);

        if $stack15 == 0 goto label10;

        $stack85 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack86 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack85, "testSourceDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setTestSourceDirectory(java.lang.String)>($stack86);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "outputDirectory", null, $u1);

        if $stack16 == 0 goto label11;

        $stack83 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack84 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack83, "outputDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setOutputDirectory(java.lang.String)>($stack84);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "testOutputDirectory", null, $u1);

        if $stack17 == 0 goto label12;

        $stack81 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack82 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack81, "testOutputDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setTestOutputDirectory(java.lang.String)>($stack82);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "extensions", null, $u1);

        if $stack18 == 0 goto label16;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setExtensions(java.util.List)>($u2);

     label13:
        $stack73 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack73 != 2 goto label15;

        $stack74 = "extension";

        $stack75 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack76 = virtualinvoke $stack74.<java.lang.String: boolean equals(java.lang.Object)>($stack75);

        if $stack76 == 0 goto label14;

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack79 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Extension parseExtension(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack79);

        goto label13;

     label14:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "defaultGoal", null, $u1);

        if $stack19 == 0 goto label17;

        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack71 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack70, "defaultGoal");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setDefaultGoal(java.lang.String)>($stack71);

        goto label05;

     label17:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "resources", null, $u1);

        if $stack20 == 0 goto label21;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setResources(java.util.List)>($u3);

     label18:
        $stack62 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack62 != 2 goto label20;

        $stack63 = "resource";

        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack65 = virtualinvoke $stack63.<java.lang.String: boolean equals(java.lang.Object)>($stack64);

        if $stack65 == 0 goto label19;

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack68 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack68);

        goto label18;

     label19:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label18;

     label20:
        goto label05;

     label21:
        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "testResources", null, $u1);

        if $stack21 == 0 goto label25;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setTestResources(java.util.List)>($u4);

     label22:
        $stack53 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack53 != 2 goto label24;

        $stack54 = "testResource";

        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack56 = virtualinvoke $stack54.<java.lang.String: boolean equals(java.lang.Object)>($stack55);

        if $stack56 == 0 goto label23;

        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack59 = specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack59);

        goto label22;

     label23:
        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label22;

     label24:
        goto label05;

     label25:
        $r23 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r23.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "directory", null, $u1);

        if $stack22 == 0 goto label26;

        $stack50 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r24 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack51 = specialinvoke $r24.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack50, "directory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setDirectory(java.lang.String)>($stack51);

        goto label05;

     label26:
        $r25 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r25.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "finalName", null, $u1);

        if $stack23 == 0 goto label27;

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r26 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack49 = specialinvoke $r26.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack48, "finalName");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setFinalName(java.lang.String)>($stack49);

        goto label05;

     label27:
        $r27 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack24 = specialinvoke $r27.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "filters", null, $u1);

        if $stack24 == 0 goto label31;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setFilters(java.util.List)>($u5);

     label28:
        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack39 != 2 goto label30;

        $stack40 = "filter";

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack42 = virtualinvoke $stack40.<java.lang.String: boolean equals(java.lang.Object)>($stack41);

        if $stack42 == 0 goto label29;

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r28 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack46 = specialinvoke $r28.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack45, "filters");

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack46);

        goto label28;

     label29:
        $r29 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r29.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label28;

     label30:
        goto label05;

     label31:
        $r30 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r30.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginManagement", null, $u1);

        if $stack25 == 0 goto label32;

        $r31 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack37 = specialinvoke $r31.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.PluginManagement parsePluginManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setPluginManagement(org.apache.maven.model.PluginManagement)>($stack37);

        goto label05;

     label32:
        $r32 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack26 = specialinvoke $r32.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u1);

        if $stack26 == 0 goto label36;

        $u6 = new java.util.ArrayList;

        specialinvoke $u6.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setPlugins(java.util.List)>($u6);

     label33:
        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack29 != 2 goto label35;

        $stack30 = "plugin";

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack32 = virtualinvoke $stack30.<java.lang.String: boolean equals(java.lang.Object)>($stack31);

        if $stack32 == 0 goto label34;

        $r33 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack35 = specialinvoke $r33.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u6.<java.util.List: boolean add(java.lang.Object)>($stack35);

        goto label33;

     label34:
        $r34 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r34.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label33;

     label35:
        goto label05;

     label36:
        $r35 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r35.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label37:
        return $u0;
    }

    private org.apache.maven.model.BuildBase parseBuildBase(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack25, $stack34, $stack35, $stack39, $stack40, $stack42, $stack43, $stack44, $stack45, $stack48, $stack49, $stack57, $stack58, $stack64, $stack65, name;
        int $stack10, $stack70, i, $stack12, $stack56, $stack47, $stack33, $stack23;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack26, $stack36, $stack50, $stack59;
        MavenXpp3Reader this;
        org.apache.maven.model.Plugin $stack29;
        org.apache.maven.model.PluginManagement $stack31;
        org.apache.maven.model.Resource $stack53, $stack62;
        org.apache.maven.model.BuildBase $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3, $u4, $u5;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.BuildBase;

        specialinvoke $u0.<org.apache.maven.model.BuildBase: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack70 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack70 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label28;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "defaultGoal", null, $u1);

        if $stack13 == 0 goto label08;

        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack65 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack64, "defaultGoal");

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setDefaultGoal(java.lang.String)>($stack65);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "resources", null, $u1);

        if $stack14 == 0 goto label12;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setResources(java.util.List)>($u2);

     label09:
        $stack56 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack56 != 2 goto label11;

        $stack57 = "resource";

        $stack58 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack59 = virtualinvoke $stack57.<java.lang.String: boolean equals(java.lang.Object)>($stack58);

        if $stack59 == 0 goto label10;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack62 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack62);

        goto label09;

     label10:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label09;

     label11:
        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "testResources", null, $u1);

        if $stack15 == 0 goto label16;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setTestResources(java.util.List)>($u3);

     label13:
        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack47 != 2 goto label15;

        $stack48 = "testResource";

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack50 = virtualinvoke $stack48.<java.lang.String: boolean equals(java.lang.Object)>($stack49);

        if $stack50 == 0 goto label14;

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack53 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack53);

        goto label13;

     label14:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "directory", null, $u1);

        if $stack16 == 0 goto label17;

        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack45 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack44, "directory");

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setDirectory(java.lang.String)>($stack45);

        goto label05;

     label17:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "finalName", null, $u1);

        if $stack17 == 0 goto label18;

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack43 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack42, "finalName");

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setFinalName(java.lang.String)>($stack43);

        goto label05;

     label18:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "filters", null, $u1);

        if $stack18 == 0 goto label22;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setFilters(java.util.List)>($u4);

     label19:
        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack33 != 2 goto label21;

        $stack34 = "filter";

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack36 = virtualinvoke $stack34.<java.lang.String: boolean equals(java.lang.Object)>($stack35);

        if $stack36 == 0 goto label20;

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack40 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack39, "filters");

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack40);

        goto label19;

     label20:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label19;

     label21:
        goto label05;

     label22:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginManagement", null, $u1);

        if $stack19 == 0 goto label23;

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack31 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.PluginManagement parsePluginManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setPluginManagement(org.apache.maven.model.PluginManagement)>($stack31);

        goto label05;

     label23:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u1);

        if $stack20 == 0 goto label27;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setPlugins(java.util.List)>($u5);

     label24:
        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack23 != 2 goto label26;

        $stack24 = "plugin";

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack26 = virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>($stack25);

        if $stack26 == 0 goto label25;

        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack29 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack29);

        goto label24;

     label25:
        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label24;

     label26:
        goto label05;

     label27:
        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label28:
        return $u0;
    }

    private org.apache.maven.model.CiManagement parseCiManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack19, $stack20, $stack26, $stack27, $stack28, $stack29, name;
        int $stack10, $stack34, i, $stack12, $stack18;
        boolean strict, $stack13, $stack14, $stack15, $stack21;
        MavenXpp3Reader this;
        org.apache.maven.model.Notifier $stack24;
        org.apache.maven.model.CiManagement $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.CiManagement;

        specialinvoke $u0.<org.apache.maven.model.CiManagement: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack34 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack34 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label14;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "system", null, $u1);

        if $stack13 == 0 goto label08;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack29 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack28, "system");

        virtualinvoke $u0.<org.apache.maven.model.CiManagement: void setSystem(java.lang.String)>($stack29);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack14 == 0 goto label09;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack27 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "url");

        virtualinvoke $u0.<org.apache.maven.model.CiManagement: void setUrl(java.lang.String)>($stack27);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "notifiers", null, $u1);

        if $stack15 == 0 goto label13;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.CiManagement: void setNotifiers(java.util.List)>($u2);

     label10:
        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack18 != 2 goto label12;

        $stack19 = "notifier";

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20);

        if $stack21 == 0 goto label11;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack24 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Notifier parseNotifier(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack24);

        goto label10;

     label11:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label10;

     label12:
        goto label05;

     label13:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label14:
        return $u0;
    }

    private org.apache.maven.model.ConfigurationContainer parseConfigurationContainer(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack17, $stack18, name;
        int $stack10, $stack23, i, $stack12;
        boolean strict, $stack13, $stack14;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack16;
        org.apache.maven.model.ConfigurationContainer $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ConfigurationContainer;

        specialinvoke $u0.<org.apache.maven.model.ConfigurationContainer: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack23 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack23 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u1);

        if $stack13 == 0 goto label08;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack17, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.ConfigurationContainer: void setInherited(java.lang.String)>($stack18);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u1);

        if $stack14 == 0 goto label09;

        $stack16 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.model.ConfigurationContainer: void setConfiguration(java.lang.Object)>($stack16);

        goto label05;

     label09:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.Contributor parseContributor(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack28, $stack29, $stack32, $stack33, $stack37, $stack38, $stack40, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, name, value;
        int $stack10, $stack22, $stack54, i, $stack12, $stack31;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack34;
        MavenXpp3Reader this;
        org.apache.maven.model.Contributor $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Contributor;

        specialinvoke $u0.<org.apache.maven.model.Contributor: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack54 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack54 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label20;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack13 == 0 goto label08;

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack49 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack48, "name");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setName(java.lang.String)>($stack49);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "email", null, $u1);

        if $stack14 == 0 goto label09;

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack47 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack46, "email");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setEmail(java.lang.String)>($stack47);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack15 == 0 goto label10;

        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack45 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack44, "url");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setUrl(java.lang.String)>($stack45);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organization", "organisation", $u1);

        if $stack16 == 0 goto label11;

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack43 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack42, "organization");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setOrganization(java.lang.String)>($stack43);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organizationUrl", "organisationUrl", $u1);

        if $stack17 == 0 goto label12;

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack41 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack40, "organizationUrl");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setOrganizationUrl(java.lang.String)>($stack41);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "roles", null, $u1);

        if $stack18 == 0 goto label16;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setRoles(java.util.List)>($u2);

     label13:
        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack31 != 2 goto label15;

        $stack32 = "role";

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack34 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>($stack33);

        if $stack34 == 0 goto label14;

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack38 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack37, "roles");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack38);

        goto label13;

     label14:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "timezone", null, $u1);

        if $stack19 == 0 goto label17;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack29 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack28, "timezone");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setTimezone(java.lang.String)>($stack29);

        goto label05;

     label17:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u1);

        if $stack20 == 0 goto label19;

     label18:
        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack22 != 2 goto label05;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack24.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void addProperty(java.lang.String,java.lang.String)>(name, value);

        goto label18;

     label19:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label20:
        return $u0;
    }

    private org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack23, $stack24, $stack27, $stack28, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, name;
        int $stack10, $stack52, i, $stack12, $stack26;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack29;
        MavenXpp3Reader this;
        org.apache.maven.model.Exclusion $stack32;
        org.apache.maven.model.Dependency $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Dependency;

        specialinvoke $u0.<org.apache.maven.model.Dependency: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack52 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack52 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label20;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u1);

        if $stack13 == 0 goto label08;

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack47 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack46, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setGroupId(java.lang.String)>($stack47);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u1);

        if $stack14 == 0 goto label09;

        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack45 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack44, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setArtifactId(java.lang.String)>($stack45);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u1);

        if $stack15 == 0 goto label10;

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack43 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack42, "version");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setVersion(java.lang.String)>($stack43);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "type", null, $u1);

        if $stack16 == 0 goto label11;

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack41 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack40, "type");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setType(java.lang.String)>($stack41);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "classifier", null, $u1);

        if $stack17 == 0 goto label12;

        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack39 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack38, "classifier");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setClassifier(java.lang.String)>($stack39);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "scope", null, $u1);

        if $stack18 == 0 goto label13;

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack37 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "scope");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setScope(java.lang.String)>($stack37);

        goto label05;

     label13:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "systemPath", null, $u1);

        if $stack19 == 0 goto label14;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack35 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "systemPath");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setSystemPath(java.lang.String)>($stack35);

        goto label05;

     label14:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "exclusions", null, $u1);

        if $stack20 == 0 goto label18;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setExclusions(java.util.List)>($u2);

     label15:
        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack26 != 2 goto label17;

        $stack27 = "exclusion";

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack29 = virtualinvoke $stack27.<java.lang.String: boolean equals(java.lang.Object)>($stack28);

        if $stack29 == 0 goto label16;

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack32 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Exclusion parseExclusion(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack32);

        goto label15;

     label16:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label15;

     label17:
        goto label05;

     label18:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "optional", null, $u1);

        if $stack21 == 0 goto label19;

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack24 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack23, "optional");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setOptional(java.lang.String)>($stack24);

        goto label05;

     label19:
        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label20:
        return $u0;
    }

    private org.apache.maven.model.DependencyManagement parseDependencyManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack17, $stack18, name;
        int $stack10, $stack28, i, $stack12, $stack16;
        boolean strict, $stack13, $stack19;
        MavenXpp3Reader this;
        org.apache.maven.model.Dependency $stack22;
        org.apache.maven.model.DependencyManagement $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.DependencyManagement;

        specialinvoke $u0.<org.apache.maven.model.DependencyManagement: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack28 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack28 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u1);

        if $stack13 == 0 goto label11;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.DependencyManagement: void setDependencies(java.util.List)>($u2);

     label08:
        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack16 != 2 goto label10;

        $stack17 = "dependency";

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack19 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>($stack18);

        if $stack19 == 0 goto label09;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack22);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.DeploymentRepository parseDeploymentRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack31, $stack32, name;
        int $stack10, $stack38, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack33;
        MavenXpp3Reader this;
        org.apache.maven.model.RepositoryPolicy $stack29, $stack30;
        org.apache.maven.model.DeploymentRepository $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.DeploymentRepository;

        specialinvoke $u0.<org.apache.maven.model.DeploymentRepository: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack38 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack38 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label15;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "uniqueVersion", null, $u1);

        if $stack13 == 0 goto label08;

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack32 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "uniqueVersion");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack33 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack32, "uniqueVersion", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setUniqueVersion(boolean)>($stack33);

        goto label05;

     label08:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "releases", null, $u1);

        if $stack14 == 0 goto label09;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack30 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setReleases(org.apache.maven.model.RepositoryPolicy)>($stack30);

        goto label05;

     label09:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "snapshots", null, $u1);

        if $stack15 == 0 goto label10;

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack29 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setSnapshots(org.apache.maven.model.RepositoryPolicy)>($stack29);

        goto label05;

     label10:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack16 == 0 goto label11;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack28 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack27, "id");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setId(java.lang.String)>($stack28);

        goto label05;

     label11:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack17 == 0 goto label12;

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack26 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack25, "name");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setName(java.lang.String)>($stack26);

        goto label05;

     label12:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack18 == 0 goto label13;

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack24 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack23, "url");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setUrl(java.lang.String)>($stack24);

        goto label05;

     label13:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "layout", null, $u1);

        if $stack19 == 0 goto label14;

        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack21, "layout");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setLayout(java.lang.String)>($stack22);

        goto label05;

     label14:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label15:
        return $u0;
    }

    private org.apache.maven.model.Developer parseDeveloper(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack25, $stack29, $stack30, $stack33, $stack34, $stack38, $stack39, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, name, value;
        int $stack10, $stack23, $stack57, i, $stack12, $stack32;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack35;
        MavenXpp3Reader this;
        org.apache.maven.model.Developer $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Developer;

        specialinvoke $u0.<org.apache.maven.model.Developer: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack57 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack57 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label21;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack13 == 0 goto label08;

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack52 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack51, "id");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setId(java.lang.String)>($stack52);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack14 == 0 goto label09;

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack50 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack49, "name");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setName(java.lang.String)>($stack50);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "email", null, $u1);

        if $stack15 == 0 goto label10;

        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack48 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack47, "email");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setEmail(java.lang.String)>($stack48);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack16 == 0 goto label11;

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack46 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack45, "url");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setUrl(java.lang.String)>($stack46);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organization", "organisation", $u1);

        if $stack17 == 0 goto label12;

        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack44 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack43, "organization");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setOrganization(java.lang.String)>($stack44);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organizationUrl", "organisationUrl", $u1);

        if $stack18 == 0 goto label13;

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack42 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "organizationUrl");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setOrganizationUrl(java.lang.String)>($stack42);

        goto label05;

     label13:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "roles", null, $u1);

        if $stack19 == 0 goto label17;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setRoles(java.util.List)>($u2);

     label14:
        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack32 != 2 goto label16;

        $stack33 = "role";

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack35 = virtualinvoke $stack33.<java.lang.String: boolean equals(java.lang.Object)>($stack34);

        if $stack35 == 0 goto label15;

        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack39 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack38, "roles");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack39);

        goto label14;

     label15:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label14;

     label16:
        goto label05;

     label17:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "timezone", null, $u1);

        if $stack20 == 0 goto label18;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack30 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "timezone");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setTimezone(java.lang.String)>($stack30);

        goto label05;

     label18:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u1);

        if $stack21 == 0 goto label20;

     label19:
        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack23 != 2 goto label05;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack25.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Developer: void addProperty(java.lang.String,java.lang.String)>(name, value);

        goto label19;

     label20:
        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label21:
        return $u0;
    }

    private org.apache.maven.model.DistributionManagement parseDistributionManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack20, $stack21, $stack23, $stack24, name;
        int $stack10, $stack32, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18;
        MavenXpp3Reader this;
        org.apache.maven.model.Relocation $stack22;
        org.apache.maven.model.Site $stack25;
        org.apache.maven.model.DeploymentRepository $stack26, $stack27;
        org.apache.maven.model.DistributionManagement $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.DistributionManagement;

        specialinvoke $u0.<org.apache.maven.model.DistributionManagement: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack32 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack32 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label14;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "repository", null, $u1);

        if $stack13 == 0 goto label08;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack27 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.DeploymentRepository parseDeploymentRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setRepository(org.apache.maven.model.DeploymentRepository)>($stack27);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "snapshotRepository", null, $u1);

        if $stack14 == 0 goto label09;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack26 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.DeploymentRepository parseDeploymentRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setSnapshotRepository(org.apache.maven.model.DeploymentRepository)>($stack26);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "site", null, $u1);

        if $stack15 == 0 goto label10;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Site parseSite(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setSite(org.apache.maven.model.Site)>($stack25);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "downloadUrl", null, $u1);

        if $stack16 == 0 goto label11;

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack24 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack23, "downloadUrl");

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setDownloadUrl(java.lang.String)>($stack24);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "relocation", null, $u1);

        if $stack17 == 0 goto label12;

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Relocation parseRelocation(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setRelocation(org.apache.maven.model.Relocation)>($stack22);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "status", null, $u1);

        if $stack18 == 0 goto label13;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "status");

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setStatus(java.lang.String)>($stack21);

        goto label05;

     label13:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label14:
        return $u0;
    }

    private org.apache.maven.model.Exclusion parseExclusion(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack16, $stack17, $stack18, $stack19, name;
        int $stack10, $stack24, i, $stack12;
        boolean strict, $stack13, $stack14;
        MavenXpp3Reader this;
        org.apache.maven.model.Exclusion $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Exclusion;

        specialinvoke $u0.<org.apache.maven.model.Exclusion: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack24 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack24 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u1);

        if $stack13 == 0 goto label08;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Exclusion: void setGroupId(java.lang.String)>($stack19);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u1);

        if $stack14 == 0 goto label09;

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack16, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Exclusion: void setArtifactId(java.lang.String)>($stack17);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.Extension parseExtension(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, name;
        int $stack10, $stack27, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15;
        MavenXpp3Reader this;
        org.apache.maven.model.Extension $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Extension;

        specialinvoke $u0.<org.apache.maven.model.Extension: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack27 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack27 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label11;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u1);

        if $stack13 == 0 goto label08;

        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack21, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setGroupId(java.lang.String)>($stack22);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u1);

        if $stack14 == 0 goto label09;

        $stack19 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack19, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setArtifactId(java.lang.String)>($stack20);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u1);

        if $stack15 == 0 goto label10;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack17, "version");

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setVersion(java.lang.String)>($stack18);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label11:
        return $u0;
    }

    private org.apache.maven.model.FileSet parseFileSet(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack19, $stack20, $stack24, $stack25, $stack29, $stack30, $stack34, $stack35, $stack37, $stack38, name;
        int $stack10, $stack43, i, $stack12, $stack28, $stack18;
        boolean strict, $stack13, $stack14, $stack15, $stack21, $stack31;
        MavenXpp3Reader this;
        org.apache.maven.model.FileSet $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.FileSet;

        specialinvoke $u0.<org.apache.maven.model.FileSet: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack43 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack43 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label17;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "directory", null, $u1);

        if $stack13 == 0 goto label08;

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack38 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack37, "directory");

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setDirectory(java.lang.String)>($stack38);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "includes", null, $u1);

        if $stack14 == 0 goto label12;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setIncludes(java.util.List)>($u2);

     label09:
        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack28 != 2 goto label11;

        $stack29 = "include";

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack31 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>($stack30);

        if $stack31 == 0 goto label10;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack35 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "includes");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack35);

        goto label09;

     label10:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label09;

     label11:
        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "excludes", null, $u1);

        if $stack15 == 0 goto label16;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setExcludes(java.util.List)>($u3);

     label13:
        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack18 != 2 goto label15;

        $stack19 = "exclude";

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20);

        if $stack21 == 0 goto label14;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "excludes");

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack25);

        goto label13;

     label14:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label17:
        return $u0;
    }

    private org.apache.maven.model.IssueManagement parseIssueManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack16, $stack17, $stack18, $stack19, name;
        int $stack10, $stack24, i, $stack12;
        boolean strict, $stack13, $stack14;
        MavenXpp3Reader this;
        org.apache.maven.model.IssueManagement $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.IssueManagement;

        specialinvoke $u0.<org.apache.maven.model.IssueManagement: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack24 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack24 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "system", null, $u1);

        if $stack13 == 0 goto label08;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "system");

        virtualinvoke $u0.<org.apache.maven.model.IssueManagement: void setSystem(java.lang.String)>($stack19);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack14 == 0 goto label09;

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack16, "url");

        virtualinvoke $u0.<org.apache.maven.model.IssueManagement: void setUrl(java.lang.String)>($stack17);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.License parseLicense(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, name;
        int $stack10, $stack30, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16;
        MavenXpp3Reader this;
        org.apache.maven.model.License $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.License;

        specialinvoke $u0.<org.apache.maven.model.License: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack30 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack30 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack13 == 0 goto label08;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "name");

        virtualinvoke $u0.<org.apache.maven.model.License: void setName(java.lang.String)>($stack25);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack14 == 0 goto label09;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "url");

        virtualinvoke $u0.<org.apache.maven.model.License: void setUrl(java.lang.String)>($stack23);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "distribution", null, $u1);

        if $stack15 == 0 goto label10;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "distribution");

        virtualinvoke $u0.<org.apache.maven.model.License: void setDistribution(java.lang.String)>($stack21);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "comments", null, $u1);

        if $stack16 == 0 goto label11;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "comments");

        virtualinvoke $u0.<org.apache.maven.model.License: void setComments(java.lang.String)>($stack19);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.MailingList parseMailingList(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack22, $stack23, $stack27, $stack28, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, name;
        int $stack10, $stack44, i, $stack12, $stack21;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack24;
        MavenXpp3Reader this;
        org.apache.maven.model.MailingList $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.MailingList;

        specialinvoke $u0.<org.apache.maven.model.MailingList: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack44 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack44 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label17;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack13 == 0 goto label08;

        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack39 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack38, "name");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setName(java.lang.String)>($stack39);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "subscribe", null, $u1);

        if $stack14 == 0 goto label09;

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack37 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "subscribe");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setSubscribe(java.lang.String)>($stack37);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "unsubscribe", null, $u1);

        if $stack15 == 0 goto label10;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack35 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "unsubscribe");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setUnsubscribe(java.lang.String)>($stack35);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "post", null, $u1);

        if $stack16 == 0 goto label11;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack33 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack32, "post");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setPost(java.lang.String)>($stack33);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "archive", null, $u1);

        if $stack17 == 0 goto label12;

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack31 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack30, "archive");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setArchive(java.lang.String)>($stack31);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "otherArchives", null, $u1);

        if $stack18 == 0 goto label16;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setOtherArchives(java.util.List)>($u2);

     label13:
        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack21 != 2 goto label15;

        $stack22 = "otherArchive";

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23);

        if $stack24 == 0 goto label14;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack28 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack27, "otherArchives");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack28);

        goto label13;

     label14:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label17:
        return $u0;
    }

    private org.apache.maven.model.Model parseModel(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack46, $stack47, $stack58, $stack59, $stack67, $stack68, $stack76, $stack77, $stack86, $stack96, $stack97, $stack101, $stack102, $stack107, $stack108, $stack116, $stack117, $stack125, $stack126, $stack134, $stack135, $stack142, $stack143, $stack144, $stack145, $stack146, $stack147, $stack148, $stack149, $stack150, $stack151, $stack152, $stack153, $stack154, $stack155, $stack156, $stack157, $stack159, $stack160, $stack166, $stack168, $stack171, name, value;
        int $stack10, $stack84, $stack165, i, $stack12, $stack133, $stack124, $stack115, $stack106, $stack95, $stack75, $stack66, $stack57, $stack45;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack48, $stack60, $stack69, $stack78, $stack98, $stack109, $stack118, $stack127, $stack136, $stack167, $stack169;
        MavenXpp3Reader this;
        org.apache.maven.model.Profile $stack51;
        org.apache.maven.model.Reporting $stack53;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack54;
        org.apache.maven.model.Build $stack55;
        org.apache.maven.model.Repository $stack63, $stack72;
        org.apache.maven.model.Dependency $stack81;
        org.apache.maven.model.DependencyManagement $stack83;
        org.apache.maven.model.DistributionManagement $stack90;
        org.apache.maven.model.CiManagement $stack91;
        org.apache.maven.model.IssueManagement $stack92;
        org.apache.maven.model.Scm $stack93;
        org.apache.maven.model.Prerequisites $stack104;
        org.apache.maven.model.MailingList $stack112;
        org.apache.maven.model.Contributor $stack121;
        org.apache.maven.model.Developer $stack130;
        org.apache.maven.model.License $stack139;
        org.apache.maven.model.Organization $stack141;
        org.apache.maven.model.Parent $stack158;
        org.apache.maven.model.Model $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3, $u4, $u5, $u6, $u7, $u8, $u9, $u10;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label06;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        value = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack165 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack165 < 0 goto label02;

        goto label05;

     label02:
        $stack166 = "xmlns";

        $stack167 = virtualinvoke $stack166.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack167 == 0 goto label03;

        goto label05;

     label03:
        $stack168 = "child.project.url.inherit.append.path";

        $stack169 = virtualinvoke $stack168.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack169 == 0 goto label04;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack171 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.project.url.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setChildProjectUrlInheritAppendPath(java.lang.String)>($stack171);

        goto label05;

     label04:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label05:
        i = i + -1;

        goto label01;

     label06:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label07:
        if strict == 0 goto label08;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label09;

     label08:
        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label09:
        if $stack12 != 2 goto label68;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "modelVersion", null, $u1);

        if $stack13 == 0 goto label10;

        $stack159 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack160 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack159, "modelVersion");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setModelVersion(java.lang.String)>($stack160);

        goto label07;

     label10:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "parent", null, $u1);

        if $stack14 == 0 goto label11;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack158 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Parent parseParent(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setParent(org.apache.maven.model.Parent)>($stack158);

        goto label07;

     label11:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u1);

        if $stack15 == 0 goto label12;

        $stack156 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack157 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack156, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setGroupId(java.lang.String)>($stack157);

        goto label07;

     label12:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u1);

        if $stack16 == 0 goto label13;

        $stack154 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack155 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack154, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setArtifactId(java.lang.String)>($stack155);

        goto label07;

     label13:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u1);

        if $stack17 == 0 goto label14;

        $stack152 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack153 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack152, "version");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setVersion(java.lang.String)>($stack153);

        goto label07;

     label14:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "packaging", null, $u1);

        if $stack18 == 0 goto label15;

        $stack150 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack151 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack150, "packaging");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setPackaging(java.lang.String)>($stack151);

        goto label07;

     label15:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack19 == 0 goto label16;

        $stack148 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack149 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack148, "name");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setName(java.lang.String)>($stack149);

        goto label07;

     label16:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "description", null, $u1);

        if $stack20 == 0 goto label17;

        $stack146 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack147 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack146, "description");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDescription(java.lang.String)>($stack147);

        goto label07;

     label17:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack21 == 0 goto label18;

        $stack144 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack145 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack144, "url");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setUrl(java.lang.String)>($stack145);

        goto label07;

     label18:
        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inceptionYear", null, $u1);

        if $stack22 == 0 goto label19;

        $stack142 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack143 = specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack142, "inceptionYear");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setInceptionYear(java.lang.String)>($stack143);

        goto label07;

     label19:
        $r23 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r23.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organization", "organisation", $u1);

        if $stack23 == 0 goto label20;

        $r24 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack141 = specialinvoke $r24.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Organization parseOrganization(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setOrganization(org.apache.maven.model.Organization)>($stack141);

        goto label07;

     label20:
        $r25 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack24 = specialinvoke $r25.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "licenses", null, $u1);

        if $stack24 == 0 goto label24;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLicenses(java.util.List)>($u2);

     label21:
        $stack133 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack133 != 2 goto label23;

        $stack134 = "license";

        $stack135 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack136 = virtualinvoke $stack134.<java.lang.String: boolean equals(java.lang.Object)>($stack135);

        if $stack136 == 0 goto label22;

        $r26 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack139 = specialinvoke $r26.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.License parseLicense(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack139);

        goto label21;

     label22:
        $r27 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r27.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label21;

     label23:
        goto label07;

     label24:
        $r28 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r28.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "developers", null, $u1);

        if $stack25 == 0 goto label28;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDevelopers(java.util.List)>($u3);

     label25:
        $stack124 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack124 != 2 goto label27;

        $stack125 = "developer";

        $stack126 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack127 = virtualinvoke $stack125.<java.lang.String: boolean equals(java.lang.Object)>($stack126);

        if $stack127 == 0 goto label26;

        $r29 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack130 = specialinvoke $r29.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Developer parseDeveloper(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack130);

        goto label25;

     label26:
        $r30 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r30.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label25;

     label27:
        goto label07;

     label28:
        $r31 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack26 = specialinvoke $r31.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "contributors", null, $u1);

        if $stack26 == 0 goto label32;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setContributors(java.util.List)>($u4);

     label29:
        $stack115 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack115 != 2 goto label31;

        $stack116 = "contributor";

        $stack117 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack118 = virtualinvoke $stack116.<java.lang.String: boolean equals(java.lang.Object)>($stack117);

        if $stack118 == 0 goto label30;

        $r32 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack121 = specialinvoke $r32.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Contributor parseContributor(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack121);

        goto label29;

     label30:
        $r33 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r33.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label29;

     label31:
        goto label07;

     label32:
        $r34 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack27 = specialinvoke $r34.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "mailingLists", null, $u1);

        if $stack27 == 0 goto label36;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setMailingLists(java.util.List)>($u5);

     label33:
        $stack106 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack106 != 2 goto label35;

        $stack107 = "mailingList";

        $stack108 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack109 = virtualinvoke $stack107.<java.lang.String: boolean equals(java.lang.Object)>($stack108);

        if $stack109 == 0 goto label34;

        $r35 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack112 = specialinvoke $r35.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.MailingList parseMailingList(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack112);

        goto label33;

     label34:
        $r36 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r36.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label33;

     label35:
        goto label07;

     label36:
        $r37 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack28 = specialinvoke $r37.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "prerequisites", null, $u1);

        if $stack28 == 0 goto label37;

        $r38 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack104 = specialinvoke $r38.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Prerequisites parsePrerequisites(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setPrerequisites(org.apache.maven.model.Prerequisites)>($stack104);

        goto label07;

     label37:
        $r39 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack29 = specialinvoke $r39.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "modules", null, $u1);

        if $stack29 == 0 goto label41;

        $u6 = new java.util.ArrayList;

        specialinvoke $u6.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setModules(java.util.List)>($u6);

     label38:
        $stack95 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack95 != 2 goto label40;

        $stack96 = "module";

        $stack97 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack98 = virtualinvoke $stack96.<java.lang.String: boolean equals(java.lang.Object)>($stack97);

        if $stack98 == 0 goto label39;

        $stack101 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r40 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack102 = specialinvoke $r40.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack101, "modules");

        interfaceinvoke $u6.<java.util.List: boolean add(java.lang.Object)>($stack102);

        goto label38;

     label39:
        $r41 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r41.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label38;

     label40:
        goto label07;

     label41:
        $r42 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack30 = specialinvoke $r42.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "scm", null, $u1);

        if $stack30 == 0 goto label42;

        $r43 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack93 = specialinvoke $r43.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Scm parseScm(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setScm(org.apache.maven.model.Scm)>($stack93);

        goto label07;

     label42:
        $r44 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack31 = specialinvoke $r44.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "issueManagement", null, $u1);

        if $stack31 == 0 goto label43;

        $r45 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack92 = specialinvoke $r45.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.IssueManagement parseIssueManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setIssueManagement(org.apache.maven.model.IssueManagement)>($stack92);

        goto label07;

     label43:
        $r46 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack32 = specialinvoke $r46.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "ciManagement", null, $u1);

        if $stack32 == 0 goto label44;

        $r47 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack91 = specialinvoke $r47.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.CiManagement parseCiManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setCiManagement(org.apache.maven.model.CiManagement)>($stack91);

        goto label07;

     label44:
        $r48 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack33 = specialinvoke $r48.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "distributionManagement", null, $u1);

        if $stack33 == 0 goto label45;

        $r49 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack90 = specialinvoke $r49.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.DistributionManagement parseDistributionManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDistributionManagement(org.apache.maven.model.DistributionManagement)>($stack90);

        goto label07;

     label45:
        $r50 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack34 = specialinvoke $r50.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u1);

        if $stack34 == 0 goto label47;

     label46:
        $stack84 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack84 != 2 goto label07;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack86 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack86.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void addProperty(java.lang.String,java.lang.String)>(name, value);

        goto label46;

     label47:
        $r51 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack35 = specialinvoke $r51.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencyManagement", null, $u1);

        if $stack35 == 0 goto label48;

        $r52 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack83 = specialinvoke $r52.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.DependencyManagement parseDependencyManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDependencyManagement(org.apache.maven.model.DependencyManagement)>($stack83);

        goto label07;

     label48:
        $r53 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack36 = specialinvoke $r53.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u1);

        if $stack36 == 0 goto label52;

        $u7 = new java.util.ArrayList;

        specialinvoke $u7.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDependencies(java.util.List)>($u7);

     label49:
        $stack75 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack75 != 2 goto label51;

        $stack76 = "dependency";

        $stack77 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack78 = virtualinvoke $stack76.<java.lang.String: boolean equals(java.lang.Object)>($stack77);

        if $stack78 == 0 goto label50;

        $r54 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack81 = specialinvoke $r54.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u7.<java.util.List: boolean add(java.lang.Object)>($stack81);

        goto label49;

     label50:
        $r55 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r55.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label49;

     label51:
        goto label07;

     label52:
        $r56 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack37 = specialinvoke $r56.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "repositories", null, $u1);

        if $stack37 == 0 goto label56;

        $u8 = new java.util.ArrayList;

        specialinvoke $u8.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setRepositories(java.util.List)>($u8);

     label53:
        $stack66 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack66 != 2 goto label55;

        $stack67 = "repository";

        $stack68 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack69 = virtualinvoke $stack67.<java.lang.String: boolean equals(java.lang.Object)>($stack68);

        if $stack69 == 0 goto label54;

        $r57 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack72 = specialinvoke $r57.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>($stack72);

        goto label53;

     label54:
        $r58 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r58.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label53;

     label55:
        goto label07;

     label56:
        $r59 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack38 = specialinvoke $r59.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginRepositories", null, $u1);

        if $stack38 == 0 goto label60;

        $u9 = new java.util.ArrayList;

        specialinvoke $u9.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setPluginRepositories(java.util.List)>($u9);

     label57:
        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack57 != 2 goto label59;

        $stack58 = "pluginRepository";

        $stack59 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack60 = virtualinvoke $stack58.<java.lang.String: boolean equals(java.lang.Object)>($stack59);

        if $stack60 == 0 goto label58;

        $r60 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack63 = specialinvoke $r60.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u9.<java.util.List: boolean add(java.lang.Object)>($stack63);

        goto label57;

     label58:
        $r61 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r61.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label57;

     label59:
        goto label07;

     label60:
        $r62 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack39 = specialinvoke $r62.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "build", null, $u1);

        if $stack39 == 0 goto label61;

        $r63 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack55 = specialinvoke $r63.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Build parseBuild(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setBuild(org.apache.maven.model.Build)>($stack55);

        goto label07;

     label61:
        $r64 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack40 = specialinvoke $r64.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reports", null, $u1);

        if $stack40 == 0 goto label62;

        $stack54 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setReports(java.lang.Object)>($stack54);

        goto label07;

     label62:
        $r65 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack41 = specialinvoke $r65.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reporting", null, $u1);

        if $stack41 == 0 goto label63;

        $r66 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack53 = specialinvoke $r66.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Reporting parseReporting(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setReporting(org.apache.maven.model.Reporting)>($stack53);

        goto label07;

     label63:
        $r67 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack42 = specialinvoke $r67.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "profiles", null, $u1);

        if $stack42 == 0 goto label67;

        $u10 = new java.util.ArrayList;

        specialinvoke $u10.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setProfiles(java.util.List)>($u10);

     label64:
        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack45 != 2 goto label66;

        $stack46 = "profile";

        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack48 = virtualinvoke $stack46.<java.lang.String: boolean equals(java.lang.Object)>($stack47);

        if $stack48 == 0 goto label65;

        $r68 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack51 = specialinvoke $r68.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Profile parseProfile(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u10.<java.util.List: boolean add(java.lang.Object)>($stack51);

        goto label64;

     label65:
        $r69 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r69.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label64;

     label66:
        goto label07;

     label67:
        $r70 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r70.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label07;

     label68:
        return $u0;
    }

    private org.apache.maven.model.ModelBase parseModelBase(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack27, $stack28, $stack36, $stack37, $stack45, $stack46, $stack55, $stack62, $stack63, $stack67, $stack68, name, value;
        int $stack10, $stack53, $stack74, i, $stack12, $stack61, $stack44, $stack35, $stack26;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack29, $stack38, $stack47, $stack64;
        MavenXpp3Reader this;
        org.apache.maven.model.Reporting $stack23;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack24;
        org.apache.maven.model.Repository $stack32, $stack41;
        org.apache.maven.model.Dependency $stack50;
        org.apache.maven.model.DependencyManagement $stack52;
        org.apache.maven.model.DistributionManagement $stack59;
        org.apache.maven.model.ModelBase $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3, $u4, $u5;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ModelBase;

        specialinvoke $u0.<org.apache.maven.model.ModelBase: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack74 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack74 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label30;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "modules", null, $u1);

        if $stack13 == 0 goto label11;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setModules(java.util.List)>($u2);

     label08:
        $stack61 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack61 != 2 goto label10;

        $stack62 = "module";

        $stack63 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack64 = virtualinvoke $stack62.<java.lang.String: boolean equals(java.lang.Object)>($stack63);

        if $stack64 == 0 goto label09;

        $stack67 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack68 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack67, "modules");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack68);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "distributionManagement", null, $u1);

        if $stack14 == 0 goto label12;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack59 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.DistributionManagement parseDistributionManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setDistributionManagement(org.apache.maven.model.DistributionManagement)>($stack59);

        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u1);

        if $stack15 == 0 goto label14;

     label13:
        $stack53 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack53 != 2 goto label05;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack55.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void addProperty(java.lang.String,java.lang.String)>(name, value);

        goto label13;

     label14:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencyManagement", null, $u1);

        if $stack16 == 0 goto label15;

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack52 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.DependencyManagement parseDependencyManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setDependencyManagement(org.apache.maven.model.DependencyManagement)>($stack52);

        goto label05;

     label15:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u1);

        if $stack17 == 0 goto label19;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setDependencies(java.util.List)>($u3);

     label16:
        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack44 != 2 goto label18;

        $stack45 = "dependency";

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack47 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>($stack46);

        if $stack47 == 0 goto label17;

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack50 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack50);

        goto label16;

     label17:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label16;

     label18:
        goto label05;

     label19:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "repositories", null, $u1);

        if $stack18 == 0 goto label23;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setRepositories(java.util.List)>($u4);

     label20:
        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack35 != 2 goto label22;

        $stack36 = "repository";

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack38 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>($stack37);

        if $stack38 == 0 goto label21;

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack41 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack41);

        goto label20;

     label21:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label20;

     label22:
        goto label05;

     label23:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginRepositories", null, $u1);

        if $stack19 == 0 goto label27;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setPluginRepositories(java.util.List)>($u5);

     label24:
        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack26 != 2 goto label26;

        $stack27 = "pluginRepository";

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack29 = virtualinvoke $stack27.<java.lang.String: boolean equals(java.lang.Object)>($stack28);

        if $stack29 == 0 goto label25;

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack32 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack32);

        goto label24;

     label25:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label24;

     label26:
        goto label05;

     label27:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reports", null, $u1);

        if $stack20 == 0 goto label28;

        $stack24 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setReports(java.lang.Object)>($stack24);

        goto label05;

     label28:
        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reporting", null, $u1);

        if $stack21 == 0 goto label29;

        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Reporting parseReporting(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setReporting(org.apache.maven.model.Reporting)>($stack23);

        goto label05;

     label29:
        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label30:
        return $u0;
    }

    private org.apache.maven.model.Notifier parseNotifier(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack23, $stack27, $stack28, $stack29, $stack30, $stack32, $stack33, $stack35, $stack36, $stack38, $stack39, $stack41, $stack42, name, value;
        int $stack10, $stack21, $stack47, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack31, $stack34, $stack37, $stack40;
        MavenXpp3Reader this;
        org.apache.maven.model.Notifier $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Notifier;

        specialinvoke $u0.<org.apache.maven.model.Notifier: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack47 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack47 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label16;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "type", null, $u1);

        if $stack13 == 0 goto label08;

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack42 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "type");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setType(java.lang.String)>($stack42);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sendOnError", null, $u1);

        if $stack14 == 0 goto label09;

        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack39 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack38, "sendOnError");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack40 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack39, "sendOnError", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setSendOnError(boolean)>($stack40);

        goto label05;

     label09:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sendOnFailure", null, $u1);

        if $stack15 == 0 goto label10;

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack36 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack35, "sendOnFailure");

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack37 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack36, "sendOnFailure", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setSendOnFailure(boolean)>($stack37);

        goto label05;

     label10:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sendOnSuccess", null, $u1);

        if $stack16 == 0 goto label11;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack33 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack32, "sendOnSuccess");

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack34 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack33, "sendOnSuccess", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setSendOnSuccess(boolean)>($stack34);

        goto label05;

     label11:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sendOnWarning", null, $u1);

        if $stack17 == 0 goto label12;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack30 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "sendOnWarning");

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack31 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack30, "sendOnWarning", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setSendOnWarning(boolean)>($stack31);

        goto label05;

     label12:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "address", null, $u1);

        if $stack18 == 0 goto label13;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack28 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack27, "address");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setAddress(java.lang.String)>($stack28);

        goto label05;

     label13:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u1);

        if $stack19 == 0 goto label15;

     label14:
        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack21 != 2 goto label05;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack23.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void addConfiguration(java.lang.String,java.lang.String)>(name, value);

        goto label14;

     label15:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label16:
        return $u0;
    }

    private org.apache.maven.model.Organization parseOrganization(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack16, $stack17, $stack18, $stack19, name;
        int $stack10, $stack24, i, $stack12;
        boolean strict, $stack13, $stack14;
        MavenXpp3Reader this;
        org.apache.maven.model.Organization $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Organization;

        specialinvoke $u0.<org.apache.maven.model.Organization: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack24 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack24 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack13 == 0 goto label08;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "name");

        virtualinvoke $u0.<org.apache.maven.model.Organization: void setName(java.lang.String)>($stack19);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack14 == 0 goto label09;

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack16, "url");

        virtualinvoke $u0.<org.apache.maven.model.Organization: void setUrl(java.lang.String)>($stack17);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.Parent parseParent(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, name;
        int $stack10, $stack30, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16;
        MavenXpp3Reader this;
        org.apache.maven.model.Parent $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Parent;

        specialinvoke $u0.<org.apache.maven.model.Parent: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack30 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack30 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u1);

        if $stack13 == 0 goto label08;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setGroupId(java.lang.String)>($stack25);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u1);

        if $stack14 == 0 goto label09;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setArtifactId(java.lang.String)>($stack23);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u1);

        if $stack15 == 0 goto label10;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "version");

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setVersion(java.lang.String)>($stack21);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "relativePath", null, $u1);

        if $stack16 == 0 goto label11;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "relativePath");

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setRelativePath(java.lang.String)>($stack19);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.PatternSet parsePatternSet(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, $stack23, $stack24, $stack28, $stack29, $stack33, $stack34, name;
        int $stack10, $stack40, i, $stack12, $stack27, $stack17;
        boolean strict, $stack13, $stack14, $stack20, $stack30;
        MavenXpp3Reader this;
        org.apache.maven.model.PatternSet $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PatternSet;

        specialinvoke $u0.<org.apache.maven.model.PatternSet: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack40 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack40 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label16;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "includes", null, $u1);

        if $stack13 == 0 goto label11;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PatternSet: void setIncludes(java.util.List)>($u2);

     label08:
        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack27 != 2 goto label10;

        $stack28 = "include";

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack30 = virtualinvoke $stack28.<java.lang.String: boolean equals(java.lang.Object)>($stack29);

        if $stack30 == 0 goto label09;

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack34 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack33, "includes");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack34);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "excludes", null, $u1);

        if $stack14 == 0 goto label15;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PatternSet: void setExcludes(java.util.List)>($u3);

     label12:
        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack17 != 2 goto label14;

        $stack18 = "exclude";

        $stack19 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack20 = virtualinvoke $stack18.<java.lang.String: boolean equals(java.lang.Object)>($stack19);

        if $stack20 == 0 goto label13;

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack24 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack23, "excludes");

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack24);

        goto label12;

     label13:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label12;

     label14:
        goto label05;

     label15:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label16:
        return $u0;
    }

    private org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack25, $stack29, $stack30, $stack38, $stack39, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, name;
        int $stack10, $stack57, i, $stack12, $stack37, $stack28;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack31, $stack40;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack23, $stack26;
        org.apache.maven.model.Dependency $stack34;
        org.apache.maven.model.PluginExecution $stack43;
        org.apache.maven.model.Plugin $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Plugin;

        specialinvoke $u0.<org.apache.maven.model.Plugin: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack57 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack57 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label23;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u1);

        if $stack13 == 0 goto label08;

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack52 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack51, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setGroupId(java.lang.String)>($stack52);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u1);

        if $stack14 == 0 goto label09;

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack50 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack49, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setArtifactId(java.lang.String)>($stack50);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u1);

        if $stack15 == 0 goto label10;

        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack48 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack47, "version");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setVersion(java.lang.String)>($stack48);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "extensions", null, $u1);

        if $stack16 == 0 goto label11;

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack46 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack45, "extensions");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setExtensions(java.lang.String)>($stack46);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "executions", null, $u1);

        if $stack17 == 0 goto label15;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setExecutions(java.util.List)>($u2);

     label12:
        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack37 != 2 goto label14;

        $stack38 = "execution";

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack40 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>($stack39);

        if $stack40 == 0 goto label13;

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack43 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.PluginExecution parsePluginExecution(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack43);

        goto label12;

     label13:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label12;

     label14:
        goto label05;

     label15:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u1);

        if $stack18 == 0 goto label19;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setDependencies(java.util.List)>($u3);

     label16:
        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack28 != 2 goto label18;

        $stack29 = "dependency";

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack31 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>($stack30);

        if $stack31 == 0 goto label17;

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack34 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack34);

        goto label16;

     label17:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label16;

     label18:
        goto label05;

     label19:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "goals", null, $u1);

        if $stack19 == 0 goto label20;

        $stack26 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setGoals(java.lang.Object)>($stack26);

        goto label05;

     label20:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u1);

        if $stack20 == 0 goto label21;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setInherited(java.lang.String)>($stack25);

        goto label05;

     label21:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u1);

        if $stack21 == 0 goto label22;

        $stack23 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setConfiguration(java.lang.Object)>($stack23);

        goto label05;

     label22:
        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label23:
        return $u0;
    }

    private org.apache.maven.model.PluginConfiguration parsePluginConfiguration(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, name;
        int $stack10, $stack30, i, $stack12, $stack17;
        boolean strict, $stack13, $stack14, $stack20;
        MavenXpp3Reader this;
        org.apache.maven.model.Plugin $stack23;
        org.apache.maven.model.PluginManagement $stack25;
        org.apache.maven.model.PluginConfiguration $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PluginConfiguration;

        specialinvoke $u0.<org.apache.maven.model.PluginConfiguration: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack30 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack30 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label13;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginManagement", null, $u1);

        if $stack13 == 0 goto label08;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.PluginManagement parsePluginManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.PluginConfiguration: void setPluginManagement(org.apache.maven.model.PluginManagement)>($stack25);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u1);

        if $stack14 == 0 goto label12;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PluginConfiguration: void setPlugins(java.util.List)>($u2);

     label09:
        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack17 != 2 goto label11;

        $stack18 = "plugin";

        $stack19 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack20 = virtualinvoke $stack18.<java.lang.String: boolean equals(java.lang.Object)>($stack19);

        if $stack20 == 0 goto label10;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack23);

        goto label09;

     label10:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label09;

     label11:
        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label13:
        return $u0;
    }

    private org.apache.maven.model.PluginContainer parsePluginContainer(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack17, $stack18, name;
        int $stack10, $stack28, i, $stack12, $stack16;
        boolean strict, $stack13, $stack19;
        MavenXpp3Reader this;
        org.apache.maven.model.Plugin $stack22;
        org.apache.maven.model.PluginContainer $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PluginContainer;

        specialinvoke $u0.<org.apache.maven.model.PluginContainer: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack28 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack28 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u1);

        if $stack13 == 0 goto label11;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PluginContainer: void setPlugins(java.util.List)>($u2);

     label08:
        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack16 != 2 goto label10;

        $stack17 = "plugin";

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack19 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>($stack18);

        if $stack19 == 0 goto label09;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack22);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.PluginExecution parsePluginExecution(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack20, $stack21, $stack24, $stack25, $stack29, $stack30, $stack32, $stack33, $stack34, $stack35, name;
        int $stack10, $stack40, i, $stack12, $stack23;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack26;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack19;
        org.apache.maven.model.PluginExecution $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PluginExecution;

        specialinvoke $u0.<org.apache.maven.model.PluginExecution: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack40 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack40 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label16;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack13 == 0 goto label08;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack35 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "id");

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setId(java.lang.String)>($stack35);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "phase", null, $u1);

        if $stack14 == 0 goto label09;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack33 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack32, "phase");

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setPhase(java.lang.String)>($stack33);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "goals", null, $u1);

        if $stack15 == 0 goto label13;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setGoals(java.util.List)>($u2);

     label10:
        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack23 != 2 goto label12;

        $stack24 = "goal";

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack26 = virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>($stack25);

        if $stack26 == 0 goto label11;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack30 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "goals");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack30);

        goto label10;

     label11:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label10;

     label12:
        goto label05;

     label13:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u1);

        if $stack16 == 0 goto label14;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setInherited(java.lang.String)>($stack21);

        goto label05;

     label14:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u1);

        if $stack17 == 0 goto label15;

        $stack19 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setConfiguration(java.lang.Object)>($stack19);

        goto label05;

     label15:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label16:
        return $u0;
    }

    private org.apache.maven.model.PluginManagement parsePluginManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack17, $stack18, name;
        int $stack10, $stack28, i, $stack12, $stack16;
        boolean strict, $stack13, $stack19;
        MavenXpp3Reader this;
        org.apache.maven.model.Plugin $stack22;
        org.apache.maven.model.PluginManagement $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PluginManagement;

        specialinvoke $u0.<org.apache.maven.model.PluginManagement: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack28 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack28 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u1);

        if $stack13 == 0 goto label11;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PluginManagement: void setPlugins(java.util.List)>($u2);

     label08:
        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack16 != 2 goto label10;

        $stack17 = "plugin";

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack19 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>($stack18);

        if $stack19 == 0 goto label09;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack22);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.Prerequisites parsePrerequisites(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack15, $stack16, name;
        int $stack10, $stack21, i, $stack12;
        boolean strict, $stack13;
        MavenXpp3Reader this;
        org.apache.maven.model.Prerequisites $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Prerequisites;

        specialinvoke $u0.<org.apache.maven.model.Prerequisites: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label1:
        if i < 0 goto label4;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack21 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack21 < 0 goto label2;

        goto label3;

     label2:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label3:
        i = i + -1;

        goto label1;

     label4:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label5:
        if strict == 0 goto label6;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label7;

     label6:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label7:
        if $stack12 != 2 goto label9;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "maven", null, $u1);

        if $stack13 == 0 goto label8;

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack15, "maven");

        virtualinvoke $u0.<org.apache.maven.model.Prerequisites: void setMaven(java.lang.String)>($stack16);

        goto label5;

     label8:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label5;

     label9:
        return $u0;
    }

    private org.apache.maven.model.Profile parseProfile(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack30, $stack31, $stack39, $stack40, $stack48, $stack49, $stack58, $stack65, $stack66, $stack70, $stack71, $stack75, $stack76, name, value;
        int $stack10, $stack56, $stack81, i, $stack12, $stack64, $stack47, $stack38, $stack29;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack32, $stack41, $stack50, $stack67;
        MavenXpp3Reader this;
        org.apache.maven.model.Reporting $stack26;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack27;
        org.apache.maven.model.Repository $stack35, $stack44;
        org.apache.maven.model.Dependency $stack53;
        org.apache.maven.model.DependencyManagement $stack55;
        org.apache.maven.model.DistributionManagement $stack62;
        org.apache.maven.model.BuildBase $stack73;
        org.apache.maven.model.Activation $stack74;
        org.apache.maven.model.Profile $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3, $u4, $u5;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Profile;

        specialinvoke $u0.<org.apache.maven.model.Profile: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack81 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack81 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label33;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack13 == 0 goto label08;

        $stack75 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack76 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack75, "id");

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setId(java.lang.String)>($stack76);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "activation", null, $u1);

        if $stack14 == 0 goto label09;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack74 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Activation parseActivation(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setActivation(org.apache.maven.model.Activation)>($stack74);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "build", null, $u1);

        if $stack15 == 0 goto label10;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack73 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.BuildBase parseBuildBase(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setBuild(org.apache.maven.model.BuildBase)>($stack73);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "modules", null, $u1);

        if $stack16 == 0 goto label14;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setModules(java.util.List)>($u2);

     label11:
        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack64 != 2 goto label13;

        $stack65 = "module";

        $stack66 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack67 = virtualinvoke $stack65.<java.lang.String: boolean equals(java.lang.Object)>($stack66);

        if $stack67 == 0 goto label12;

        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack71 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack70, "modules");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack71);

        goto label11;

     label12:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label11;

     label13:
        goto label05;

     label14:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "distributionManagement", null, $u1);

        if $stack17 == 0 goto label15;

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack62 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.DistributionManagement parseDistributionManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setDistributionManagement(org.apache.maven.model.DistributionManagement)>($stack62);

        goto label05;

     label15:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u1);

        if $stack18 == 0 goto label17;

     label16:
        $stack56 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack56 != 2 goto label05;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack58 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack58.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void addProperty(java.lang.String,java.lang.String)>(name, value);

        goto label16;

     label17:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencyManagement", null, $u1);

        if $stack19 == 0 goto label18;

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack55 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.DependencyManagement parseDependencyManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setDependencyManagement(org.apache.maven.model.DependencyManagement)>($stack55);

        goto label05;

     label18:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u1);

        if $stack20 == 0 goto label22;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setDependencies(java.util.List)>($u3);

     label19:
        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack47 != 2 goto label21;

        $stack48 = "dependency";

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack50 = virtualinvoke $stack48.<java.lang.String: boolean equals(java.lang.Object)>($stack49);

        if $stack50 == 0 goto label20;

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack53 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack53);

        goto label19;

     label20:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label19;

     label21:
        goto label05;

     label22:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "repositories", null, $u1);

        if $stack21 == 0 goto label26;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setRepositories(java.util.List)>($u4);

     label23:
        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack38 != 2 goto label25;

        $stack39 = "repository";

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack41 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>($stack40);

        if $stack41 == 0 goto label24;

        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack44 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack44);

        goto label23;

     label24:
        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label23;

     label25:
        goto label05;

     label26:
        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginRepositories", null, $u1);

        if $stack22 == 0 goto label30;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setPluginRepositories(java.util.List)>($u5);

     label27:
        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack29 != 2 goto label29;

        $stack30 = "pluginRepository";

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack32 = virtualinvoke $stack30.<java.lang.String: boolean equals(java.lang.Object)>($stack31);

        if $stack32 == 0 goto label28;

        $r23 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack35 = specialinvoke $r23.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack35);

        goto label27;

     label28:
        $r24 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r24.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label27;

     label29:
        goto label05;

     label30:
        $r25 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r25.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reports", null, $u1);

        if $stack23 == 0 goto label31;

        $stack27 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setReports(java.lang.Object)>($stack27);

        goto label05;

     label31:
        $r26 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack24 = specialinvoke $r26.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reporting", null, $u1);

        if $stack24 == 0 goto label32;

        $r27 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack26 = specialinvoke $r27.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Reporting parseReporting(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setReporting(org.apache.maven.model.Reporting)>($stack26);

        goto label05;

     label32:
        $r28 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r28.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label33:
        return $u0;
    }

    private org.apache.maven.model.Relocation parseRelocation(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, name;
        int $stack10, $stack30, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16;
        MavenXpp3Reader this;
        org.apache.maven.model.Relocation $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Relocation;

        specialinvoke $u0.<org.apache.maven.model.Relocation: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack30 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack30 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u1);

        if $stack13 == 0 goto label08;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setGroupId(java.lang.String)>($stack25);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u1);

        if $stack14 == 0 goto label09;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setArtifactId(java.lang.String)>($stack23);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u1);

        if $stack15 == 0 goto label10;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "version");

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setVersion(java.lang.String)>($stack21);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "message", null, $u1);

        if $stack16 == 0 goto label11;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "message");

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setMessage(java.lang.String)>($stack19);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.ReportPlugin parseReportPlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack21, $stack22, $stack25, $stack26, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, name;
        int $stack10, $stack42, i, $stack12, $stack24;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack27;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack20;
        org.apache.maven.model.ReportSet $stack30;
        org.apache.maven.model.ReportPlugin $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ReportPlugin;

        specialinvoke $u0.<org.apache.maven.model.ReportPlugin: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack42 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack42 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label17;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u1);

        if $stack13 == 0 goto label08;

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack37 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setGroupId(java.lang.String)>($stack37);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u1);

        if $stack14 == 0 goto label09;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack35 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setArtifactId(java.lang.String)>($stack35);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u1);

        if $stack15 == 0 goto label10;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack33 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack32, "version");

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setVersion(java.lang.String)>($stack33);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reportSets", null, $u1);

        if $stack16 == 0 goto label14;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setReportSets(java.util.List)>($u2);

     label11:
        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack24 != 2 goto label13;

        $stack25 = "reportSet";

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack27 = virtualinvoke $stack25.<java.lang.String: boolean equals(java.lang.Object)>($stack26);

        if $stack27 == 0 goto label12;

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack30 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.ReportSet parseReportSet(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack30);

        goto label11;

     label12:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label11;

     label13:
        goto label05;

     label14:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u1);

        if $stack17 == 0 goto label15;

        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack21, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setInherited(java.lang.String)>($stack22);

        goto label05;

     label15:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u1);

        if $stack18 == 0 goto label16;

        $stack20 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setConfiguration(java.lang.Object)>($stack20);

        goto label05;

     label16:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label17:
        return $u0;
    }

    private org.apache.maven.model.ReportSet parseReportSet(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack19, $stack20, $stack23, $stack24, $stack28, $stack29, $stack31, $stack32, name;
        int $stack10, $stack37, i, $stack12, $stack22;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack25;
        MavenXpp3Reader this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack18;
        org.apache.maven.model.ReportSet $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ReportSet;

        specialinvoke $u0.<org.apache.maven.model.ReportSet: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack37 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack37 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label15;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack13 == 0 goto label08;

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack32 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "id");

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setId(java.lang.String)>($stack32);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reports", null, $u1);

        if $stack14 == 0 goto label12;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setReports(java.util.List)>($u2);

     label09:
        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack22 != 2 goto label11;

        $stack23 = "report";

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack25 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>($stack24);

        if $stack25 == 0 goto label10;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack29 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack28, "reports");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack29);

        goto label09;

     label10:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label09;

     label11:
        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u1);

        if $stack15 == 0 goto label13;

        $stack19 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack19, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setInherited(java.lang.String)>($stack20);

        goto label05;

     label13:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u1);

        if $stack16 == 0 goto label14;

        $stack18 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setConfiguration(java.lang.Object)>($stack18);

        goto label05;

     label14:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label15:
        return $u0;
    }

    private org.apache.maven.model.Reporting parseReporting(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack19, $stack20, $stack26, $stack27, $stack28, $stack29, name;
        int $stack10, $stack34, i, $stack12, $stack18;
        boolean strict, $stack13, $stack14, $stack15, $stack21;
        MavenXpp3Reader this;
        org.apache.maven.model.ReportPlugin $stack24;
        org.apache.maven.model.Reporting $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Reporting;

        specialinvoke $u0.<org.apache.maven.model.Reporting: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack34 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack34 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label14;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "excludeDefaults", null, $u1);

        if $stack13 == 0 goto label08;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack29 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack28, "excludeDefaults");

        virtualinvoke $u0.<org.apache.maven.model.Reporting: void setExcludeDefaults(java.lang.String)>($stack29);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "outputDirectory", null, $u1);

        if $stack14 == 0 goto label09;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack27 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "outputDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Reporting: void setOutputDirectory(java.lang.String)>($stack27);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u1);

        if $stack15 == 0 goto label13;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Reporting: void setPlugins(java.util.List)>($u2);

     label10:
        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack18 != 2 goto label12;

        $stack19 = "plugin";

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20);

        if $stack21 == 0 goto label11;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack24 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.ReportPlugin parseReportPlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack24);

        goto label10;

     label11:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label10;

     label12:
        goto label05;

     label13:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label14:
        return $u0;
    }

    private org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, name;
        int $stack10, $stack34, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18;
        MavenXpp3Reader this;
        org.apache.maven.model.RepositoryPolicy $stack28, $stack29;
        org.apache.maven.model.Repository $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Repository;

        specialinvoke $u0.<org.apache.maven.model.Repository: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack34 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack34 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label14;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "releases", null, $u1);

        if $stack13 == 0 goto label08;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack29 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setReleases(org.apache.maven.model.RepositoryPolicy)>($stack29);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "snapshots", null, $u1);

        if $stack14 == 0 goto label09;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack28 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setSnapshots(org.apache.maven.model.RepositoryPolicy)>($stack28);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack15 == 0 goto label10;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack27 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "id");

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setId(java.lang.String)>($stack27);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack16 == 0 goto label11;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "name");

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setName(java.lang.String)>($stack25);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack17 == 0 goto label12;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "url");

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setUrl(java.lang.String)>($stack23);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "layout", null, $u1);

        if $stack18 == 0 goto label13;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "layout");

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setLayout(java.lang.String)>($stack21);

        goto label05;

     label13:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label14:
        return $u0;
    }

    private org.apache.maven.model.RepositoryBase parseRepositoryBase(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, name;
        int $stack10, $stack30, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16;
        MavenXpp3Reader this;
        org.apache.maven.model.RepositoryBase $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.RepositoryBase;

        specialinvoke $u0.<org.apache.maven.model.RepositoryBase: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack30 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack30 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack13 == 0 goto label08;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "id");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setId(java.lang.String)>($stack25);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack14 == 0 goto label09;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "name");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setName(java.lang.String)>($stack23);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack15 == 0 goto label10;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "url");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setUrl(java.lang.String)>($stack21);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "layout", null, $u1);

        if $stack16 == 0 goto label11;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "layout");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setLayout(java.lang.String)>($stack19);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, name;
        int $stack10, $stack27, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15;
        MavenXpp3Reader this;
        org.apache.maven.model.RepositoryPolicy $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.RepositoryPolicy;

        specialinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack27 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack27 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label11;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "enabled", null, $u1);

        if $stack13 == 0 goto label08;

        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack21, "enabled");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setEnabled(java.lang.String)>($stack22);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "updatePolicy", null, $u1);

        if $stack14 == 0 goto label09;

        $stack19 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack19, "updatePolicy");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setUpdatePolicy(java.lang.String)>($stack20);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "checksumPolicy", null, $u1);

        if $stack15 == 0 goto label10;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack17, "checksumPolicy");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setChecksumPolicy(java.lang.String)>($stack18);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label11:
        return $u0;
    }

    private org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack21, $stack22, $stack26, $stack27, $stack31, $stack32, $stack36, $stack37, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, name;
        int $stack10, $stack49, i, $stack12, $stack30, $stack20;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack23, $stack33;
        MavenXpp3Reader this;
        org.apache.maven.model.Resource $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Resource;

        specialinvoke $u0.<org.apache.maven.model.Resource: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack49 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack49 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label19;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "targetPath", null, $u1);

        if $stack13 == 0 goto label08;

        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack44 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack43, "targetPath");

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setTargetPath(java.lang.String)>($stack44);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "filtering", null, $u1);

        if $stack14 == 0 goto label09;

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack42 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "filtering");

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setFiltering(java.lang.String)>($stack42);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "directory", null, $u1);

        if $stack15 == 0 goto label10;

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack40 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack39, "directory");

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setDirectory(java.lang.String)>($stack40);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "includes", null, $u1);

        if $stack16 == 0 goto label14;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setIncludes(java.util.List)>($u2);

     label11:
        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack30 != 2 goto label13;

        $stack31 = "include";

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack33 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>($stack32);

        if $stack33 == 0 goto label12;

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack37 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "includes");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack37);

        goto label11;

     label12:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label11;

     label13:
        goto label05;

     label14:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "excludes", null, $u1);

        if $stack17 == 0 goto label18;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setExcludes(java.util.List)>($u3);

     label15:
        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack20 != 2 goto label17;

        $stack21 = "exclude";

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack23 = virtualinvoke $stack21.<java.lang.String: boolean equals(java.lang.Object)>($stack22);

        if $stack23 == 0 goto label16;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack27 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "excludes");

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack27);

        goto label15;

     label16:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label15;

     label17:
        goto label05;

     label18:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label19:
        return $u0;
    }

    private org.apache.maven.model.Scm parseScm(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, name, value, $stack31, $stack33, $stack35, $stack38, $stack39, $stack40;
        int $stack10, $stack30, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack32, $stack34, $stack36;
        MavenXpp3Reader this;
        org.apache.maven.model.Scm $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Scm;

        specialinvoke $u0.<org.apache.maven.model.Scm: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label07;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        value = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack30 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack30 < 0 goto label02;

        goto label06;

     label02:
        $stack31 = "child.scm.connection.inherit.append.path";

        $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack32 == 0 goto label03;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack40 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.scm.connection.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setChildScmConnectionInheritAppendPath(java.lang.String)>($stack40);

        goto label06;

     label03:
        $stack33 = "child.scm.developerConnection.inherit.append.path";

        $stack34 = virtualinvoke $stack33.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack34 == 0 goto label04;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack39 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.scm.developerConnection.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setChildScmDeveloperConnectionInheritAppendPath(java.lang.String)>($stack39);

        goto label06;

     label04:
        $stack35 = "child.scm.url.inherit.append.path";

        $stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack36 == 0 goto label05;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack38 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.scm.url.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setChildScmUrlInheritAppendPath(java.lang.String)>($stack38);

        goto label06;

     label05:
        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label06:
        i = i + -1;

        goto label01;

     label07:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label08:
        if strict == 0 goto label09;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label10;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label10:
        if $stack12 != 2 goto label15;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "connection", null, $u1);

        if $stack13 == 0 goto label11;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack25 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "connection");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setConnection(java.lang.String)>($stack25);

        goto label08;

     label11:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "developerConnection", null, $u1);

        if $stack14 == 0 goto label12;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack23 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "developerConnection");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setDeveloperConnection(java.lang.String)>($stack23);

        goto label08;

     label12:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "tag", null, $u1);

        if $stack15 == 0 goto label13;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack21 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "tag");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setTag(java.lang.String)>($stack21);

        goto label08;

     label13:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack16 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack16 == 0 goto label14;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack19 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "url");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setUrl(java.lang.String)>($stack19);

        goto label08;

     label14:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label15:
        return $u0;
    }

    private org.apache.maven.model.Site parseSite(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, name, value, $stack28, $stack31;
        int $stack10, $stack27, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack29;
        MavenXpp3Reader this;
        org.apache.maven.model.Site $u0;
        java.util.HashSet $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Site;

        specialinvoke $u0.<org.apache.maven.model.Site: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label05;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        value = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack27 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack27 < 0 goto label02;

        goto label04;

     label02:
        $stack28 = "child.site.url.inherit.append.path";

        $stack29 = virtualinvoke $stack28.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack29 == 0 goto label03;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack31 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.site.url.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Site: void setChildSiteUrlInheritAppendPath(java.lang.String)>($stack31);

        goto label04;

     label03:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label04:
        i = i + -1;

        goto label01;

     label05:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label06:
        if strict == 0 goto label07;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label08;

     label07:
        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack12 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label08:
        if $stack12 != 2 goto label12;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack13 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack13 == 0 goto label09;

        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack22 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack21, "id");

        virtualinvoke $u0.<org.apache.maven.model.Site: void setId(java.lang.String)>($stack22);

        goto label06;

     label09:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack14 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack14 == 0 goto label10;

        $stack19 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack19, "name");

        virtualinvoke $u0.<org.apache.maven.model.Site: void setName(java.lang.String)>($stack20);

        goto label06;

     label10:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack15 == 0 goto label11;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $stack18 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack17, "url");

        virtualinvoke $u0.<org.apache.maven.model.Site: void setUrl(java.lang.String)>($stack18);

        goto label06;

     label11:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label06;

     label12:
        return $u0;
    }

    private org.apache.maven.model.Model read(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        boolean strict, $stack17, parsed;
        MavenXpp3Reader this;
        java.lang.String $stack12, $stack15, $stack16, $stack22, $stack25;
        java.lang.StringBuilder $stack21, $stack23, $stack24, $u0;
        org.apache.maven.model.Model model;
        int eventType;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1, $u2, $u3;
        java.lang.Throwable $r0, $r1, $r3;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r2;

        this := @this: MavenXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        model = null;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getEventType()>();

        parsed = 0;

     label1:
        if eventType == 1 goto label5;

        if eventType != 2 goto label4;

        if strict == 0 goto label2;

        $stack15 = "project";

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16);

        if $stack17 != 0 goto label2;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected root element \'project\' but found \'");

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack25, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        if parsed == 0 goto label3;

        $u2 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        specialinvoke $u2.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>("Duplicated tag: \'project\'", parser, null);

        $r1 = (java.lang.Throwable) $u2;

        throw $r1;

     label3:
        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        model = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: org.apache.maven.model.Model parseModel(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getInputEncoding()>();

        virtualinvoke model.<org.apache.maven.model.Model: void setModelEncoding(java.lang.String)>($stack12);

        parsed = 1;

     label4:
        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

        goto label1;

     label5:
        if parsed == 0 goto label6;

        return model;

     label6:
        $u3 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        specialinvoke $u3.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>("Expected root element \'project\' but found no element at all: invalid XML document", parser, null);

        $r3 = (java.lang.Throwable) $u3;

        throw $r3;
    }

    public void setAddDefaultEntities(boolean)
    {
        MavenXpp3Reader this;
        boolean addDefaultEntities;
        org.apache.maven.model.io.xpp3.MavenXpp3Reader $r0;

        this := @this: MavenXpp3Reader;

        addDefaultEntities := @parameter0: boolean;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Reader) this;

        $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Reader: boolean addDefaultEntities> = addDefaultEntities;

        return;
    }
}
