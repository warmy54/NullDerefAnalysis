public class MavenXpp3ReaderEx extends java.lang.Object
{
    private boolean addDefaultEntities;
    public final org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer contentTransformer;

    public void <init>()
    {
        MavenXpp3ReaderEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$1 $u0;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer $r1;

        this := @this: MavenXpp3ReaderEx;

        $u0 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$1;

        specialinvoke $u0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$1: void <init>()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer) $u0;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void <init>(org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer)>($r1);

        return;
    }

    public void <init>(org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer)
    {
        MavenXpp3ReaderEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer contentTransformer;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1;

        this := @this: MavenXpp3ReaderEx;

        contentTransformer := @parameter0: org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean addDefaultEntities> = 1;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer contentTransformer> = contentTransformer;

        return;
    }

    private boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser, java.lang.String, java.lang.String, java.util.Set) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String $stack5, tagName, $stack13, $stack14, alias;
        boolean $stack6, $stack7, $stack15;
        java.util.Set parsed;
        java.lang.StringBuilder $stack10, $stack11, $stack12, $u0;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        tagName := @parameter1: java.lang.String;

        alias := @parameter2: java.lang.String;

        parsed := @parameter3: java.util.Set;

        $stack5 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(tagName);

        if $stack6 != 0 goto label1;

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>(alias);

        if $stack15 != 0 goto label1;

        return 0;

     label1:
        $stack7 = interfaceinvoke parsed.<java.util.Set: boolean add(java.lang.Object)>(tagName);

        if $stack7 != 0 goto label2;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicated tag: \'");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tagName);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack13, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        return 1;
    }

    private void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser, java.lang.String, java.lang.String, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException, java.io.IOException
    {
        boolean strict;
        java.lang.StringBuilder $stack7, $stack8, $stack9, $stack10, $stack11, $u0;
        java.lang.String attribute, tagName, $stack12;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        attribute := @parameter1: java.lang.String;

        tagName := @parameter2: java.lang.String;

        strict := @parameter3: boolean;

        if strict == 0 goto label1;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown attribute \'");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for tag \'");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tagName);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack12, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        return;
    }

    private void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException, java.io.IOException
    {
        boolean strict;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        int eventType, unrecognizedTagCount;
        java.lang.StringBuilder $stack9, $stack11, $stack12, $u0;
        java.lang.String $stack10, $stack13;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        if strict == 0 goto label1;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognised tag: \'");

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack13, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        unrecognizedTagCount = 1;

     label2:
        if unrecognizedTagCount <= 0 goto label5;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

        if eventType != 2 goto label3;

        unrecognizedTagCount = unrecognizedTagCount + 1;

        goto label4;

     label3:
        if eventType != 3 goto label4;

        unrecognizedTagCount = unrecognizedTagCount + -1;

     label4:
        goto label2;

     label5:
        return;
    }

    public boolean getAddDefaultEntities()
    {
        MavenXpp3ReaderEx this;
        boolean $stack1;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0;

        this := @this: MavenXpp3ReaderEx;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack1 = $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean addDefaultEntities>;

        return $stack1;
    }

    private boolean getBooleanValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3ReaderEx this;
        java.lang.String s, attribute;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        boolean $stack4;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>(s, attribute, parser, null);

        return $stack4;
    }

    private boolean getBooleanValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, java.lang.String) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, defaultValue, attribute;
        java.lang.Boolean $stack5, $stack9;
        boolean $stack6, $stack10;
        int $stack7;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        defaultValue := @parameter3: java.lang.String;

        if s == null goto label1;

        $stack7 = virtualinvoke s.<java.lang.String: int length()>();

        if $stack7 == 0 goto label1;

        $stack9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(s);

        $stack10 = virtualinvoke $stack9.<java.lang.Boolean: boolean booleanValue()>();

        return $stack10;

     label1:
        if defaultValue == null goto label2;

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(defaultValue);

        $stack6 = virtualinvoke $stack5.<java.lang.Boolean: boolean booleanValue()>();

        return $stack6;

     label2:
        return 0;
    }

    private byte getByteValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Byte $stack6;
        byte $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Byte: byte byteValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a byte");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private char getCharacterValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute;
        char $stack4;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        if s == null goto label1;

        $stack4 = virtualinvoke s.<java.lang.String: char charAt(int)>(0);

        return $stack4;

     label1:
        return 0;
    }

    private java.util.Date getDateValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3ReaderEx this;
        java.lang.String s, attribute;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.util.Date $stack4;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.util.Date getDateValue(java.lang.String,java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser)>(s, attribute, null, parser);

        return $stack4;
    }

    private java.util.Date getDateValue(java.lang.String, java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, dateFormat, $stack7, $stack17, $stack20, attribute, effectiveDateFormat;
        boolean $stack8;
        java.util.Locale $stack10;
        java.util.Date $stack11, $u0;
        long $stack13;
        java.text.ParseException $stack15;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.NumberFormatException $stack18;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1, $u3;
        java.text.SimpleDateFormat $u2;
        java.lang.Throwable $r0, $r1;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        dateFormat := @parameter2: java.lang.String;

        parser := @parameter3: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        if s == null goto label8;

        effectiveDateFormat = dateFormat;

        if dateFormat != null goto label1;

        effectiveDateFormat = "yyyy-MM-dd\'T\'HH:mm:ss.SSS";

     label1:
        $stack7 = "long";

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(effectiveDateFormat);

        if $stack8 == 0 goto label5;

     label2:
        $u0 = new java.util.Date;

        $stack13 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(s);

        specialinvoke $u0.<java.util.Date: void <init>(long)>($stack13);

     label3:
        return $u0;

     label4:
        $stack18 := @caughtexception;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $stack20 = virtualinvoke $stack18.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack20, parser, $stack18);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label5:
        $u2 = new java.text.SimpleDateFormat;

        $stack10 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $u2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(effectiveDateFormat, $stack10);

        $stack11 = virtualinvoke $u2.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(s);

     label6:
        return $stack11;

     label7:
        $stack15 := @caughtexception;

        $u3 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $stack17 = virtualinvoke $stack15.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $u3.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack17, parser, $stack15);

        $r1 = (java.lang.Throwable) $u3;

        throw $r1;

     label8:
        return null;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
        catch java.text.ParseException from label5 to label6 with label7;
    }

    private double getDoubleValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Double $stack6;
        double $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Double: double doubleValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a floating point number");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0.0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private float getFloatValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Float $stack6;
        float $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Float: float floatValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a floating point number");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0.0F;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private int getIntegerValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Integer $stack6;
        int $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Integer: int intValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be an integer");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private long getLongValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Long $stack6;
        long $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Long: long longValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a long integer");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private java.lang.String getRequiredAttributeValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack11;
        boolean strict;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s != null goto label1;

        if strict == 0 goto label1;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing required value for attribute \'");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack11, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        return s;
    }

    private short getShortValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Short $stack6;
        short $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Short: short shortValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a short integer");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private java.lang.String getTrimmedValue(java.lang.String)
    {
        MavenXpp3ReaderEx this;
        java.lang.String s;

        this := @this: MavenXpp3ReaderEx;

        s := @parameter0: java.lang.String;

        if s == null goto label1;

        s = virtualinvoke s.<java.lang.String: java.lang.String trim()>();

     label1:
        return s;
    }

    private java.lang.String interpolatedTrimmed(java.lang.String, java.lang.String)
    {
        MavenXpp3ReaderEx this;
        java.lang.String value, context, $stack4, $stack5;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer $stack3;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1;

        this := @this: MavenXpp3ReaderEx;

        value := @parameter0: java.lang.String;

        context := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack3 = $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer contentTransformer>;

        $stack4 = interfaceinvoke $stack3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$ContentTransformer: java.lang.String transform(java.lang.String,java.lang.String)>(value, context);

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack5 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String getTrimmedValue(java.lang.String)>($stack4);

        return $stack5;
    }

    private int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.StringBuilder $stack7, $stack10, $u0;
        java.lang.String[] $stack8;
        java.lang.String $stack9, $stack11;
        MavenXpp3ReaderEx this;
        int eventType;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

        if eventType != 4 goto label1;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

     label1:
        if eventType == 2 goto label2;

        if eventType == 3 goto label2;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected START_TAG or END_TAG not ");

        $stack8 = <org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String[] TYPES>;

        $stack9 = $stack8[eventType];

        $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack11, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        return eventType;
    }

    public org.apache.maven.model.Model read(java.io.Reader, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3ReaderEx this;
        boolean $stack5, strict;
        java.io.Reader reader;
        org.apache.maven.model.InputSource source;
        org.apache.maven.model.Model $stack7;
        org.codehaus.plexus.util.xml.pull.EntityReplacementMap $stack9;
        org.codehaus.plexus.util.xml.pull.MXParser $stack6, $u0, $u1;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r2;
        org.codehaus.plexus.util.xml.pull.XmlPullParser $r1, $r3;

        this := @this: MavenXpp3ReaderEx;

        reader := @parameter0: java.io.Reader;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack5 = $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean addDefaultEntities>;

        if $stack5 == 0 goto label1;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXParser;

        $stack6 = $u0;

        $stack9 = <org.codehaus.plexus.util.xml.pull.EntityReplacementMap: org.codehaus.plexus.util.xml.pull.EntityReplacementMap defaultEntityReplacementMap>;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXParser: void <init>(org.codehaus.plexus.util.xml.pull.EntityReplacementMap)>($stack9);

        goto label2;

     label1:
        $u1 = new org.codehaus.plexus.util.xml.pull.MXParser;

        $stack6 = $u1;

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.MXParser: void <init>()>();

     label2:
        $r1 = (org.codehaus.plexus.util.xml.pull.XmlPullParser) $stack6;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlPullParser: void setInput(java.io.Reader)>(reader);

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlPullParser) $stack6;

        $stack7 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Model read(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>($r3, strict, source);

        return $stack7;
    }

    public org.apache.maven.model.Model read(java.io.InputStream, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        MavenXpp3ReaderEx this;
        java.io.InputStream in;
        org.codehaus.plexus.util.xml.XmlStreamReader $stack4;
        boolean strict;
        org.apache.maven.model.InputSource source;
        org.apache.maven.model.Model $stack5;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0;
        java.io.Reader $r1;

        this := @this: MavenXpp3ReaderEx;

        in := @parameter0: java.io.InputStream;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        $stack4 = staticinvoke <org.codehaus.plexus.util.ReaderFactory: org.codehaus.plexus.util.xml.XmlStreamReader newXmlReader(java.io.InputStream)>(in);

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $r1 = (java.io.Reader) $stack4;

        $stack5 = virtualinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Model read(java.io.Reader,boolean,org.apache.maven.model.InputSource)>($r1, strict, source);

        return $stack5;
    }

    private org.apache.maven.model.Activation parseActivation(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack30, $stack31, $stack35, $stack36, name;
        int $stack13, $stack14, $stack15, $stack28, $stack29, $stack33, $stack34, $stack42, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack37;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.ActivationFile $stack24;
        org.apache.maven.model.ActivationProperty $stack25;
        org.apache.maven.model.ActivationOS $stack26;
        org.apache.maven.model.Activation $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Activation;

        specialinvoke $u0.<org.apache.maven.model.Activation: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack42 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack42 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label13;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "activeByDefault", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack33, $stack34, source);

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("activeByDefault", $u3);

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack36 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack35, "activeByDefault");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack36, "activeByDefault", parser, "false");

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setActiveByDefault(boolean)>($stack37);

        goto label05;

     label08:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "jdk", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack28, $stack29, source);

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("jdk", $u4);

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack31 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack30, "jdk");

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setJdk(java.lang.String)>($stack31);

        goto label05;

     label09:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "os", null, $u2);

        if $stack20 == 0 goto label10;

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.ActivationOS parseActivationOS(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setOs(org.apache.maven.model.ActivationOS)>($stack26);

        goto label05;

     label10:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "property", null, $u2);

        if $stack21 == 0 goto label11;

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.ActivationProperty parseActivationProperty(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setProperty(org.apache.maven.model.ActivationProperty)>($stack25);

        goto label05;

     label11:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "file", null, $u2);

        if $stack22 == 0 goto label12;

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.ActivationFile parseActivationFile(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Activation: void setFile(org.apache.maven.model.ActivationFile)>($stack24);

        goto label05;

     label12:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label13:
        return $u0;
    }

    private org.apache.maven.model.ActivationFile parseActivationFile(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack25, $stack29, $stack30, name;
        int $stack13, $stack14, $stack15, $stack22, $stack23, $stack27, $stack28, $stack35, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.ActivationFile $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ActivationFile;

        specialinvoke $u0.<org.apache.maven.model.ActivationFile: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationFile: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack35 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack35 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "missing", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack27, $stack28, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationFile: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("missing", $u3);

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "missing");

        virtualinvoke $u0.<org.apache.maven.model.ActivationFile: void setMissing(java.lang.String)>($stack30);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "exists", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack22, $stack23, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationFile: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("exists", $u4);

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "exists");

        virtualinvoke $u0.<org.apache.maven.model.ActivationFile: void setExists(java.lang.String)>($stack25);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.ActivationOS parseActivationOS(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack26, $stack27, $stack31, $stack32, $stack36, $stack37, $stack41, $stack42, name;
        int $stack13, $stack14, $stack15, $stack24, $stack25, $stack29, $stack30, $stack34, $stack35, $stack39, $stack40, $stack47, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.ActivationOS $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ActivationOS;

        specialinvoke $u0.<org.apache.maven.model.ActivationOS: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack47 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack47 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack39, $stack40, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u3);

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack42 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "name");

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setName(java.lang.String)>($stack42);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "family", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack34, $stack35, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("family", $u4);

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "family");

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setFamily(java.lang.String)>($stack37);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "arch", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack29, $stack30, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("arch", $u5);

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack32 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "arch");

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setArch(java.lang.String)>($stack32);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u2);

        if $stack21 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack24, $stack25, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u6);

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "version");

        virtualinvoke $u0.<org.apache.maven.model.ActivationOS: void setVersion(java.lang.String)>($stack27);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.ActivationProperty parseActivationProperty(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack25, $stack29, $stack30, name;
        int $stack13, $stack14, $stack15, $stack22, $stack23, $stack27, $stack28, $stack35, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.ActivationProperty $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ActivationProperty;

        specialinvoke $u0.<org.apache.maven.model.ActivationProperty: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationProperty: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack35 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack35 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack27, $stack28, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationProperty: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u3);

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "name");

        virtualinvoke $u0.<org.apache.maven.model.ActivationProperty: void setName(java.lang.String)>($stack30);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "value", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack22, $stack23, source);

        virtualinvoke $u0.<org.apache.maven.model.ActivationProperty: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("value", $u4);

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "value");

        virtualinvoke $u0.<org.apache.maven.model.ActivationProperty: void setValue(java.lang.String)>($stack25);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.Build parseBuild(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack35, $stack36, $stack48, $stack49, $stack58, $stack59, $stack64, $stack65, $stack69, $stack70, $stack73, $stack74, $stack82, $stack83, $stack92, $stack93, $stack96, $stack97, $stack106, $stack107, $stack111, $stack112, $stack116, $stack117, $stack121, $stack122, $stack126, $stack127, name;
        int $stack13, $stack14, $stack15, $stack45, $stack46, $stack54, $stack55, $stack56, $stack62, $stack63, $stack67, $stack68, $stack90, $stack91, $stack104, $stack105, $stack109, $stack110, $stack114, $stack115, $stack119, $stack120, $stack124, $stack125, $stack132, i, $stack17, $stack95, $stack81, $stack72, $stack47, $stack34;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack37, $stack50, $stack75, $stack84, $stack98;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Plugin $stack40;
        org.apache.maven.model.PluginManagement $stack42;
        java.lang.Integer $stack57;
        org.apache.maven.model.Resource $stack78, $stack87;
        org.apache.maven.model.Extension $stack101;
        org.apache.maven.model.Build $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6, $u7, $u9, $u12, $u13, $u15, $u16;
        java.util.HashSet $u2;
        java.util.ArrayList $u8, $u10, $u11, $u14, $u17;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Build;

        specialinvoke $u0.<org.apache.maven.model.Build: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack132 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack132 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label37;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sourceDirectory", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack124 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack125 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack124, $stack125, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("sourceDirectory", $u3);

        $stack126 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack127 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack126, "sourceDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setSourceDirectory(java.lang.String)>($stack127);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "scriptSourceDirectory", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack119 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack120 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack119, $stack120, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("scriptSourceDirectory", $u4);

        $stack121 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack122 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack121, "scriptSourceDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setScriptSourceDirectory(java.lang.String)>($stack122);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "testSourceDirectory", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack114 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack115 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack114, $stack115, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("testSourceDirectory", $u5);

        $stack116 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack117 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack116, "testSourceDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setTestSourceDirectory(java.lang.String)>($stack117);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "outputDirectory", null, $u2);

        if $stack21 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack109 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack110 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack109, $stack110, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("outputDirectory", $u6);

        $stack111 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack112 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack111, "outputDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setOutputDirectory(java.lang.String)>($stack112);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "testOutputDirectory", null, $u2);

        if $stack22 == 0 goto label12;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack104 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack105 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack104, $stack105, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("testOutputDirectory", $u7);

        $stack106 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack107 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack106, "testOutputDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setTestOutputDirectory(java.lang.String)>($stack107);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "extensions", null, $u2);

        if $stack23 == 0 goto label16;

        $u8 = new java.util.ArrayList;

        specialinvoke $u8.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setExtensions(java.util.List)>($u8);

     label13:
        $stack95 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack95 != 2 goto label15;

        $stack96 = "extension";

        $stack97 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack98 = virtualinvoke $stack96.<java.lang.String: boolean equals(java.lang.Object)>($stack97);

        if $stack98 == 0 goto label14;

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack101 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Extension parseExtension(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>($stack101);

        goto label13;

     label14:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "defaultGoal", null, $u2);

        if $stack24 == 0 goto label17;

        $u9 = new org.apache.maven.model.InputLocation;

        $stack90 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack91 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack90, $stack91, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("defaultGoal", $u9);

        $stack92 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack93 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack92, "defaultGoal");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setDefaultGoal(java.lang.String)>($stack93);

        goto label05;

     label17:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "resources", null, $u2);

        if $stack25 == 0 goto label21;

        $u10 = new java.util.ArrayList;

        specialinvoke $u10.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setResources(java.util.List)>($u10);

     label18:
        $stack81 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack81 != 2 goto label20;

        $stack82 = "resource";

        $stack83 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack84 = virtualinvoke $stack82.<java.lang.String: boolean equals(java.lang.Object)>($stack83);

        if $stack84 == 0 goto label19;

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack87 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u10.<java.util.List: boolean add(java.lang.Object)>($stack87);

        goto label18;

     label19:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label18;

     label20:
        goto label05;

     label21:
        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "testResources", null, $u2);

        if $stack26 == 0 goto label25;

        $u11 = new java.util.ArrayList;

        specialinvoke $u11.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setTestResources(java.util.List)>($u11);

     label22:
        $stack72 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack72 != 2 goto label24;

        $stack73 = "testResource";

        $stack74 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack75 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>($stack74);

        if $stack75 == 0 goto label23;

        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack78 = specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u11.<java.util.List: boolean add(java.lang.Object)>($stack78);

        goto label22;

     label23:
        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label22;

     label24:
        goto label05;

     label25:
        $r23 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r23.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "directory", null, $u2);

        if $stack27 == 0 goto label26;

        $u12 = new org.apache.maven.model.InputLocation;

        $stack67 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack68 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u12.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack67, $stack68, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("directory", $u12);

        $stack69 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r24 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack70 = specialinvoke $r24.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack69, "directory");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setDirectory(java.lang.String)>($stack70);

        goto label05;

     label26:
        $r25 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack28 = specialinvoke $r25.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "finalName", null, $u2);

        if $stack28 == 0 goto label27;

        $u13 = new org.apache.maven.model.InputLocation;

        $stack62 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack63 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u13.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack62, $stack63, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("finalName", $u13);

        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r26 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack65 = specialinvoke $r26.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack64, "finalName");

        virtualinvoke $u0.<org.apache.maven.model.Build: void setFinalName(java.lang.String)>($stack65);

        goto label05;

     label27:
        $r27 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack29 = specialinvoke $r27.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "filters", null, $u2);

        if $stack29 == 0 goto label31;

        $u14 = new java.util.ArrayList;

        specialinvoke $u14.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setFilters(java.util.List)>($u14);

        $u15 = new org.apache.maven.model.InputLocation;

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u15.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack45, $stack46, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("filters", $u15);

     label28:
        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack47 != 2 goto label30;

        $stack48 = "filter";

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack50 = virtualinvoke $stack48.<java.lang.String: boolean equals(java.lang.Object)>($stack49);

        if $stack50 == 0 goto label29;

        $u16 = new org.apache.maven.model.InputLocation;

        $stack54 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u16.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack54, $stack55, source);

        $stack56 = interfaceinvoke $u14.<java.util.List: int size()>();

        $stack57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack56);

        virtualinvoke $u15.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack57, $u16);

        $stack58 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r28 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack59 = specialinvoke $r28.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack58, "filters");

        interfaceinvoke $u14.<java.util.List: boolean add(java.lang.Object)>($stack59);

        goto label28;

     label29:
        $r29 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r29.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label28;

     label30:
        goto label05;

     label31:
        $r30 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r30.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginManagement", null, $u2);

        if $stack30 == 0 goto label32;

        $r31 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack42 = specialinvoke $r31.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.PluginManagement parsePluginManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Build: void setPluginManagement(org.apache.maven.model.PluginManagement)>($stack42);

        goto label05;

     label32:
        $r32 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack31 = specialinvoke $r32.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u2);

        if $stack31 == 0 goto label36;

        $u17 = new java.util.ArrayList;

        specialinvoke $u17.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Build: void setPlugins(java.util.List)>($u17);

     label33:
        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack34 != 2 goto label35;

        $stack35 = "plugin";

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack37 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>($stack36);

        if $stack37 == 0 goto label34;

        $r33 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack40 = specialinvoke $r33.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u17.<java.util.List: boolean add(java.lang.Object)>($stack40);

        goto label33;

     label34:
        $r34 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r34.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label33;

     label35:
        goto label05;

     label36:
        $r35 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r35.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label37:
        return $u0;
    }

    private org.apache.maven.model.BuildBase parseBuildBase(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack29, $stack30, $stack42, $stack43, $stack52, $stack53, $stack58, $stack59, $stack63, $stack64, $stack67, $stack68, $stack76, $stack77, $stack86, $stack87, name;
        int $stack13, $stack14, $stack15, $stack39, $stack40, $stack48, $stack49, $stack50, $stack56, $stack57, $stack61, $stack62, $stack84, $stack85, $stack92, i, $stack17, $stack75, $stack66, $stack41, $stack28;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack31, $stack44, $stack69, $stack78;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Plugin $stack34;
        org.apache.maven.model.PluginManagement $stack36;
        java.lang.Integer $stack51;
        org.apache.maven.model.Resource $stack72, $stack81;
        org.apache.maven.model.BuildBase $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u6, $u7, $u9, $u10;
        java.util.HashSet $u2;
        java.util.ArrayList $u4, $u5, $u8, $u11;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.BuildBase;

        specialinvoke $u0.<org.apache.maven.model.BuildBase: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack92 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack92 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label28;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "defaultGoal", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack84 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack85 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack84, $stack85, source);

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("defaultGoal", $u3);

        $stack86 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack87 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack86, "defaultGoal");

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setDefaultGoal(java.lang.String)>($stack87);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "resources", null, $u2);

        if $stack19 == 0 goto label12;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setResources(java.util.List)>($u4);

     label09:
        $stack75 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack75 != 2 goto label11;

        $stack76 = "resource";

        $stack77 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack78 = virtualinvoke $stack76.<java.lang.String: boolean equals(java.lang.Object)>($stack77);

        if $stack78 == 0 goto label10;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack81 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack81);

        goto label09;

     label10:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label09;

     label11:
        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "testResources", null, $u2);

        if $stack20 == 0 goto label16;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setTestResources(java.util.List)>($u5);

     label13:
        $stack66 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack66 != 2 goto label15;

        $stack67 = "testResource";

        $stack68 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack69 = virtualinvoke $stack67.<java.lang.String: boolean equals(java.lang.Object)>($stack68);

        if $stack69 == 0 goto label14;

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack72 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack72);

        goto label13;

     label14:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "directory", null, $u2);

        if $stack21 == 0 goto label17;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack61 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack62 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack61, $stack62, source);

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("directory", $u6);

        $stack63 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack64 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack63, "directory");

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setDirectory(java.lang.String)>($stack64);

        goto label05;

     label17:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "finalName", null, $u2);

        if $stack22 == 0 goto label18;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack56 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack56, $stack57, source);

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("finalName", $u7);

        $stack58 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack59 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack58, "finalName");

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setFinalName(java.lang.String)>($stack59);

        goto label05;

     label18:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "filters", null, $u2);

        if $stack23 == 0 goto label22;

        $u8 = new java.util.ArrayList;

        specialinvoke $u8.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setFilters(java.util.List)>($u8);

        $u9 = new org.apache.maven.model.InputLocation;

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack39, $stack40, source);

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("filters", $u9);

     label19:
        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack41 != 2 goto label21;

        $stack42 = "filter";

        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack44 = virtualinvoke $stack42.<java.lang.String: boolean equals(java.lang.Object)>($stack43);

        if $stack44 == 0 goto label20;

        $u10 = new org.apache.maven.model.InputLocation;

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u10.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack48, $stack49, source);

        $stack50 = interfaceinvoke $u8.<java.util.List: int size()>();

        $stack51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack50);

        virtualinvoke $u9.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack51, $u10);

        $stack52 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack53 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack52, "filters");

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>($stack53);

        goto label19;

     label20:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label19;

     label21:
        goto label05;

     label22:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginManagement", null, $u2);

        if $stack24 == 0 goto label23;

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack36 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.PluginManagement parsePluginManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setPluginManagement(org.apache.maven.model.PluginManagement)>($stack36);

        goto label05;

     label23:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u2);

        if $stack25 == 0 goto label27;

        $u11 = new java.util.ArrayList;

        specialinvoke $u11.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.BuildBase: void setPlugins(java.util.List)>($u11);

     label24:
        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack28 != 2 goto label26;

        $stack29 = "plugin";

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack31 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>($stack30);

        if $stack31 == 0 goto label25;

        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack34 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u11.<java.util.List: boolean add(java.lang.Object)>($stack34);

        goto label24;

     label25:
        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label24;

     label26:
        goto label05;

     label27:
        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label28:
        return $u0;
    }

    private org.apache.maven.model.CiManagement parseCiManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack25, $stack34, $stack35, $stack39, $stack40, name;
        int $stack13, $stack14, $stack15, $stack32, $stack33, $stack37, $stack38, $stack45, i, $stack17, $stack23;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack26;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Notifier $stack29;
        org.apache.maven.model.CiManagement $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        java.util.ArrayList $u5;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.CiManagement;

        specialinvoke $u0.<org.apache.maven.model.CiManagement: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.CiManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack45 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack45 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label14;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "system", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack37, $stack38, source);

        virtualinvoke $u0.<org.apache.maven.model.CiManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("system", $u3);

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack40 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack39, "system");

        virtualinvoke $u0.<org.apache.maven.model.CiManagement: void setSystem(java.lang.String)>($stack40);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack32, $stack33, source);

        virtualinvoke $u0.<org.apache.maven.model.CiManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u4);

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack35 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "url");

        virtualinvoke $u0.<org.apache.maven.model.CiManagement: void setUrl(java.lang.String)>($stack35);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "notifiers", null, $u2);

        if $stack20 == 0 goto label13;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.CiManagement: void setNotifiers(java.util.List)>($u5);

     label10:
        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack23 != 2 goto label12;

        $stack24 = "notifier";

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack26 = virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>($stack25);

        if $stack26 == 0 goto label11;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack29 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Notifier parseNotifier(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack29);

        goto label10;

     label11:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label10;

     label12:
        goto label05;

     label13:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label14:
        return $u0;
    }

    private org.apache.maven.model.ConfigurationContainer parseConfigurationContainer(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack30, $stack31, name;
        int $stack13, $stack14, $stack15, $stack22, $stack23, $stack28, $stack29, $stack36, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack26;
        org.apache.maven.model.ConfigurationContainer $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder $u5;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r6;
        org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder $r5;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ConfigurationContainer;

        specialinvoke $u0.<org.apache.maven.model.ConfigurationContainer: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.ConfigurationContainer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack36 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack36 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack28, $stack29, source);

        virtualinvoke $u0.<org.apache.maven.model.ConfigurationContainer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("inherited", $u3);

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack31 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack30, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.ConfigurationContainer: void setInherited(java.lang.String)>($stack31);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack22, $stack23, source);

        virtualinvoke $u0.<org.apache.maven.model.ConfigurationContainer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("configuration", $u4);

        $u5 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder;

        specialinvoke $u5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder: void <init>(org.apache.maven.model.InputLocation)>($u4);

        $r5 = (org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder) $u5;

        $stack26 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder)>(parser, 1, $r5);

        virtualinvoke $u0.<org.apache.maven.model.ConfigurationContainer: void setConfiguration(java.lang.Object)>($stack26);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.Contributor parseContributor(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack36, value, $stack43, $stack44, $stack50, $stack51, $stack60, $stack61, $stack66, $stack67, $stack71, $stack72, $stack76, $stack77, $stack81, $stack82, $stack86, $stack87, name, value#32;
        int $stack14, $stack15, $stack16, $stack29, $stack30, $stack31, $stack34, $stack35, $stack41, $stack42, $stack47, $stack48, $stack56, $stack57, $stack58, $stack64, $stack65, $stack69, $stack70, $stack74, $stack75, $stack79, $stack80, $stack84, $stack85, $stack92, i, $stack18, $stack49;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack52;
        MavenXpp3ReaderEx this;
        java.lang.Integer $stack59;
        org.apache.maven.model.Contributor $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6, $u7, $u9, $u10, $u11, $u12, $u13;
        java.util.HashSet $u2;
        java.util.ArrayList $u8;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Contributor;

        specialinvoke $u0.<org.apache.maven.model.Contributor: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack14, $stack15, source);

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack16 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack92 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack92 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack18 != 2 goto label21;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack19 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack84 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack85 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack84, $stack85, source);

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u3);

        $stack86 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack87 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack86, "name");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setName(java.lang.String)>($stack87);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "email", null, $u2);

        if $stack20 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack79 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack80 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack79, $stack80, source);

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("email", $u4);

        $stack81 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack82 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack81, "email");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setEmail(java.lang.String)>($stack82);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u2);

        if $stack21 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack74 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack75 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack74, $stack75, source);

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u5);

        $stack76 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack77 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack76, "url");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setUrl(java.lang.String)>($stack77);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organization", "organisation", $u2);

        if $stack22 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack69 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack69, $stack70, source);

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("organization", $u6);

        $stack71 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack72 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack71, "organization");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setOrganization(java.lang.String)>($stack72);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organizationUrl", "organisationUrl", $u2);

        if $stack23 == 0 goto label12;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack65 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack64, $stack65, source);

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("organizationUrl", $u7);

        $stack66 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack67 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack66, "organizationUrl");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setOrganizationUrl(java.lang.String)>($stack67);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "roles", null, $u2);

        if $stack24 == 0 goto label16;

        $u8 = new java.util.ArrayList;

        specialinvoke $u8.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setRoles(java.util.List)>($u8);

        $u9 = new org.apache.maven.model.InputLocation;

        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack47, $stack48, source);

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("roles", $u9);

     label13:
        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack49 != 2 goto label15;

        $stack50 = "role";

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack52 = virtualinvoke $stack50.<java.lang.String: boolean equals(java.lang.Object)>($stack51);

        if $stack52 == 0 goto label14;

        $u10 = new org.apache.maven.model.InputLocation;

        $stack56 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u10.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack56, $stack57, source);

        $stack58 = interfaceinvoke $u8.<java.util.List: int size()>();

        $stack59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack58);

        virtualinvoke $u9.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack59, $u10);

        $stack60 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack61 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack60, "roles");

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>($stack61);

        goto label13;

     label14:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "timezone", null, $u2);

        if $stack25 == 0 goto label17;

        $u11 = new org.apache.maven.model.InputLocation;

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u11.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack41, $stack42, source);

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("timezone", $u11);

        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack44 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack43, "timezone");

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setTimezone(java.lang.String)>($stack44);

        goto label05;

     label17:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u2);

        if $stack26 == 0 goto label20;

        $u12 = new org.apache.maven.model.InputLocation;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u12.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack29, $stack30, source);

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("properties", $u12);

     label18:
        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack31 != 2 goto label19;

        value#32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u13 = new org.apache.maven.model.InputLocation;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u13.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack34, $stack35, source);

        virtualinvoke $u12.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(value#32, $u13);

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack36.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Contributor: void addProperty(java.lang.String,java.lang.String)>(value#32, value);

        goto label18;

     label19:
        goto label05;

     label20:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label21:
        return $u0;
    }

    private org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack31, $stack32, $stack35, $stack36, $stack45, $stack46, $stack50, $stack51, $stack55, $stack56, $stack60, $stack61, $stack65, $stack66, $stack70, $stack71, $stack75, $stack76, name;
        int $stack13, $stack14, $stack15, $stack29, $stack30, $stack43, $stack44, $stack48, $stack49, $stack53, $stack54, $stack58, $stack59, $stack63, $stack64, $stack68, $stack69, $stack73, $stack74, $stack81, i, $stack17, $stack34;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack37;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Exclusion $stack40;
        org.apache.maven.model.Dependency $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6, $u7, $u8, $u9, $u11;
        java.util.HashSet $u2;
        java.util.ArrayList $u10;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Dependency;

        specialinvoke $u0.<org.apache.maven.model.Dependency: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack81 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack81 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label20;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack73 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack74 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack73, $stack74, source);

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $u3);

        $stack75 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack76 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack75, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setGroupId(java.lang.String)>($stack76);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack68 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack69 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack68, $stack69, source);

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $u4);

        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack71 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack70, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setArtifactId(java.lang.String)>($stack71);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack63 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack63, $stack64, source);

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u5);

        $stack65 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack66 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack65, "version");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setVersion(java.lang.String)>($stack66);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "type", null, $u2);

        if $stack21 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack58 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack59 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack58, $stack59, source);

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("type", $u6);

        $stack60 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack61 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack60, "type");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setType(java.lang.String)>($stack61);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "classifier", null, $u2);

        if $stack22 == 0 goto label12;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack53 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack54 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack53, $stack54, source);

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("classifier", $u7);

        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack56 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack55, "classifier");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setClassifier(java.lang.String)>($stack56);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "scope", null, $u2);

        if $stack23 == 0 goto label13;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack48, $stack49, source);

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("scope", $u8);

        $stack50 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack51 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack50, "scope");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setScope(java.lang.String)>($stack51);

        goto label05;

     label13:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "systemPath", null, $u2);

        if $stack24 == 0 goto label14;

        $u9 = new org.apache.maven.model.InputLocation;

        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack43, $stack44, source);

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("systemPath", $u9);

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack46 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack45, "systemPath");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setSystemPath(java.lang.String)>($stack46);

        goto label05;

     label14:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "exclusions", null, $u2);

        if $stack25 == 0 goto label18;

        $u10 = new java.util.ArrayList;

        specialinvoke $u10.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setExclusions(java.util.List)>($u10);

     label15:
        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack34 != 2 goto label17;

        $stack35 = "exclusion";

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack37 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>($stack36);

        if $stack37 == 0 goto label16;

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack40 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Exclusion parseExclusion(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u10.<java.util.List: boolean add(java.lang.Object)>($stack40);

        goto label15;

     label16:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label15;

     label17:
        goto label05;

     label18:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "optional", null, $u2);

        if $stack26 == 0 goto label19;

        $u11 = new org.apache.maven.model.InputLocation;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u11.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack29, $stack30, source);

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("optional", $u11);

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack32 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "optional");

        virtualinvoke $u0.<org.apache.maven.model.Dependency: void setOptional(java.lang.String)>($stack32);

        goto label05;

     label19:
        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label20:
        return $u0;
    }

    private org.apache.maven.model.DependencyManagement parseDependencyManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack22, $stack23, name;
        int $stack13, $stack14, $stack15, $stack33, i, $stack17, $stack21;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack24;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Dependency $stack27;
        org.apache.maven.model.DependencyManagement $u0;
        org.apache.maven.model.InputLocation $u1;
        java.util.HashSet $u2;
        java.util.ArrayList $u3;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.DependencyManagement;

        specialinvoke $u0.<org.apache.maven.model.DependencyManagement: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.DependencyManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack33 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack33 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u2);

        if $stack18 == 0 goto label11;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.DependencyManagement: void setDependencies(java.util.List)>($u3);

     label08:
        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack21 != 2 goto label10;

        $stack22 = "dependency";

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23);

        if $stack24 == 0 goto label09;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack27);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.DeploymentRepository parseDeploymentRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack29, $stack30, $stack34, $stack35, $stack39, $stack40, $stack44, $stack45, $stack51, $stack52, name;
        int $stack13, $stack14, $stack15, $stack27, $stack28, $stack32, $stack33, $stack37, $stack38, $stack42, $stack43, $stack49, $stack50, $stack58, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack53;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.RepositoryPolicy $stack46, $stack47;
        org.apache.maven.model.DeploymentRepository $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6, $u7;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.DeploymentRepository;

        specialinvoke $u0.<org.apache.maven.model.DeploymentRepository: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack58 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack58 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label15;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "uniqueVersion", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack50 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack49, $stack50, source);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("uniqueVersion", $u3);

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack52 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack51, "uniqueVersion");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack53 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack52, "uniqueVersion", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setUniqueVersion(boolean)>($stack53);

        goto label05;

     label08:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "releases", null, $u2);

        if $stack19 == 0 goto label09;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack47 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setReleases(org.apache.maven.model.RepositoryPolicy)>($stack47);

        goto label05;

     label09:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "snapshots", null, $u2);

        if $stack20 == 0 goto label10;

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack46 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setSnapshots(org.apache.maven.model.RepositoryPolicy)>($stack46);

        goto label05;

     label10:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u2);

        if $stack21 == 0 goto label11;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack42, $stack43, source);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $u4);

        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack45 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack44, "id");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setId(java.lang.String)>($stack45);

        goto label05;

     label11:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack22 == 0 goto label12;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack37, $stack38, source);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u5);

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack40 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack39, "name");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setName(java.lang.String)>($stack40);

        goto label05;

     label12:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u2);

        if $stack23 == 0 goto label13;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack32, $stack33, source);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u6);

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack35 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "url");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setUrl(java.lang.String)>($stack35);

        goto label05;

     label13:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "layout", null, $u2);

        if $stack24 == 0 goto label14;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack27, $stack28, source);

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("layout", $u7);

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "layout");

        virtualinvoke $u0.<org.apache.maven.model.DeploymentRepository: void setLayout(java.lang.String)>($stack30);

        goto label05;

     label14:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label15:
        return $u0;
    }

    private org.apache.maven.model.Developer parseDeveloper(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack37, value, $stack44, $stack45, $stack51, $stack52, $stack61, $stack62, $stack67, $stack68, $stack72, $stack73, $stack77, $stack78, $stack82, $stack83, $stack87, $stack88, $stack92, $stack93, name, value#34;
        int $stack14, $stack15, $stack16, $stack30, $stack31, $stack32, $stack35, $stack36, $stack42, $stack43, $stack48, $stack49, $stack57, $stack58, $stack59, $stack65, $stack66, $stack70, $stack71, $stack75, $stack76, $stack80, $stack81, $stack85, $stack86, $stack90, $stack91, $stack98, i, $stack18, $stack50;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack53;
        MavenXpp3ReaderEx this;
        java.lang.Integer $stack60;
        org.apache.maven.model.Developer $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6, $u7, $u8, $u10, $u11, $u12, $u13, $u14;
        java.util.HashSet $u2;
        java.util.ArrayList $u9;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Developer;

        specialinvoke $u0.<org.apache.maven.model.Developer: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack14, $stack15, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack16 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack98 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack98 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack18 != 2 goto label22;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u2);

        if $stack19 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack90 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack91 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack90, $stack91, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $u3);

        $stack92 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack93 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack92, "id");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setId(java.lang.String)>($stack93);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack20 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack85 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack86 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack85, $stack86, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u4);

        $stack87 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack88 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack87, "name");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setName(java.lang.String)>($stack88);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "email", null, $u2);

        if $stack21 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack80 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack81 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack80, $stack81, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("email", $u5);

        $stack82 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack83 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack82, "email");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setEmail(java.lang.String)>($stack83);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u2);

        if $stack22 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack75 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack76 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack75, $stack76, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u6);

        $stack77 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack78 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack77, "url");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setUrl(java.lang.String)>($stack78);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organization", "organisation", $u2);

        if $stack23 == 0 goto label12;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack71 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack70, $stack71, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("organization", $u7);

        $stack72 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack73 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack72, "organization");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setOrganization(java.lang.String)>($stack73);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organizationUrl", "organisationUrl", $u2);

        if $stack24 == 0 goto label13;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack65 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack66 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack65, $stack66, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("organizationUrl", $u8);

        $stack67 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack68 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack67, "organizationUrl");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setOrganizationUrl(java.lang.String)>($stack68);

        goto label05;

     label13:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "roles", null, $u2);

        if $stack25 == 0 goto label17;

        $u9 = new java.util.ArrayList;

        specialinvoke $u9.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setRoles(java.util.List)>($u9);

        $u10 = new org.apache.maven.model.InputLocation;

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u10.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack48, $stack49, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("roles", $u10);

     label14:
        $stack50 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack50 != 2 goto label16;

        $stack51 = "role";

        $stack52 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack53 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>($stack52);

        if $stack53 == 0 goto label15;

        $u11 = new org.apache.maven.model.InputLocation;

        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack58 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u11.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack57, $stack58, source);

        $stack59 = interfaceinvoke $u9.<java.util.List: int size()>();

        $stack60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack59);

        virtualinvoke $u10.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack60, $u11);

        $stack61 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack62 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack61, "roles");

        interfaceinvoke $u9.<java.util.List: boolean add(java.lang.Object)>($stack62);

        goto label14;

     label15:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label14;

     label16:
        goto label05;

     label17:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "timezone", null, $u2);

        if $stack26 == 0 goto label18;

        $u12 = new org.apache.maven.model.InputLocation;

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u12.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack42, $stack43, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("timezone", $u12);

        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack45 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack44, "timezone");

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setTimezone(java.lang.String)>($stack45);

        goto label05;

     label18:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u2);

        if $stack27 == 0 goto label21;

        $u13 = new org.apache.maven.model.InputLocation;

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u13.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack30, $stack31, source);

        virtualinvoke $u0.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("properties", $u13);

     label19:
        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack32 != 2 goto label20;

        value#34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u14 = new org.apache.maven.model.InputLocation;

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u14.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack35, $stack36, source);

        virtualinvoke $u13.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(value#34, $u14);

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack37.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Developer: void addProperty(java.lang.String,java.lang.String)>(value#34, value);

        goto label19;

     label20:
        goto label05;

     label21:
        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label22:
        return $u0;
    }

    private org.apache.maven.model.DistributionManagement parseDistributionManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack28, $stack29, $stack34, $stack35, name;
        int $stack13, $stack14, $stack15, $stack26, $stack27, $stack32, $stack33, $stack43, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Relocation $stack30;
        org.apache.maven.model.Site $stack36;
        org.apache.maven.model.DeploymentRepository $stack37, $stack38;
        org.apache.maven.model.DistributionManagement $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.DistributionManagement;

        specialinvoke $u0.<org.apache.maven.model.DistributionManagement: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack43 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack43 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label14;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "repository", null, $u2);

        if $stack18 == 0 goto label08;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack38 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.DeploymentRepository parseDeploymentRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setRepository(org.apache.maven.model.DeploymentRepository)>($stack38);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "snapshotRepository", null, $u2);

        if $stack19 == 0 goto label09;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.DeploymentRepository parseDeploymentRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setSnapshotRepository(org.apache.maven.model.DeploymentRepository)>($stack37);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "site", null, $u2);

        if $stack20 == 0 goto label10;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack36 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Site parseSite(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setSite(org.apache.maven.model.Site)>($stack36);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "downloadUrl", null, $u2);

        if $stack21 == 0 goto label11;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack32, $stack33, source);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("downloadUrl", $u3);

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack35 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "downloadUrl");

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setDownloadUrl(java.lang.String)>($stack35);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "relocation", null, $u2);

        if $stack22 == 0 goto label12;

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Relocation parseRelocation(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setRelocation(org.apache.maven.model.Relocation)>($stack30);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "status", null, $u2);

        if $stack23 == 0 goto label13;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack26, $stack27, source);

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("status", $u4);

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack29 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack28, "status");

        virtualinvoke $u0.<org.apache.maven.model.DistributionManagement: void setStatus(java.lang.String)>($stack29);

        goto label05;

     label13:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label14:
        return $u0;
    }

    private org.apache.maven.model.Exclusion parseExclusion(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack25, $stack29, $stack30, name;
        int $stack13, $stack14, $stack15, $stack22, $stack23, $stack27, $stack28, $stack35, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Exclusion $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Exclusion;

        specialinvoke $u0.<org.apache.maven.model.Exclusion: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Exclusion: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack35 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack35 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack27, $stack28, source);

        virtualinvoke $u0.<org.apache.maven.model.Exclusion: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $u3);

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Exclusion: void setGroupId(java.lang.String)>($stack30);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack22, $stack23, source);

        virtualinvoke $u0.<org.apache.maven.model.Exclusion: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $u4);

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Exclusion: void setArtifactId(java.lang.String)>($stack25);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.Extension parseExtension(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack25, $stack26, $stack30, $stack31, $stack35, $stack36, name;
        int $stack13, $stack14, $stack15, $stack23, $stack24, $stack28, $stack29, $stack33, $stack34, $stack41, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Extension $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Extension;

        specialinvoke $u0.<org.apache.maven.model.Extension: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack41 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack41 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label11;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack33, $stack34, source);

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $u3);

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack36 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack35, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setGroupId(java.lang.String)>($stack36);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack28, $stack29, source);

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $u4);

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack31 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack30, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setArtifactId(java.lang.String)>($stack31);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack23, $stack24, source);

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u5);

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack25, "version");

        virtualinvoke $u0.<org.apache.maven.model.Extension: void setVersion(java.lang.String)>($stack26);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label11:
        return $u0;
    }

    private org.apache.maven.model.FileSet parseFileSet(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack27, $stack28, $stack37, $stack38, $stack45, $stack46, $stack55, $stack56, $stack61, $stack62, name;
        int $stack13, $stack14, $stack15, $stack24, $stack25, $stack33, $stack34, $stack35, $stack42, $stack43, $stack51, $stack52, $stack53, $stack59, $stack60, $stack67, i, $stack17, $stack44, $stack26;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack29, $stack47;
        MavenXpp3ReaderEx this;
        java.lang.Integer $stack36, $stack54;
        org.apache.maven.model.FileSet $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u5, $u6, $u8, $u9;
        java.util.HashSet $u2;
        java.util.ArrayList $u4, $u7;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.FileSet;

        specialinvoke $u0.<org.apache.maven.model.FileSet: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack67 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack67 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label17;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "directory", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack59 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack60 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack59, $stack60, source);

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("directory", $u3);

        $stack61 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack62 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack61, "directory");

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setDirectory(java.lang.String)>($stack62);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "includes", null, $u2);

        if $stack19 == 0 goto label12;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setIncludes(java.util.List)>($u4);

        $u5 = new org.apache.maven.model.InputLocation;

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack42, $stack43, source);

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("includes", $u5);

     label09:
        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack44 != 2 goto label11;

        $stack45 = "include";

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack47 = virtualinvoke $stack45.<java.lang.String: boolean equals(java.lang.Object)>($stack46);

        if $stack47 == 0 goto label10;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack52 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack51, $stack52, source);

        $stack53 = interfaceinvoke $u4.<java.util.List: int size()>();

        $stack54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack53);

        virtualinvoke $u5.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack54, $u6);

        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack56 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack55, "includes");

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack56);

        goto label09;

     label10:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label09;

     label11:
        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "excludes", null, $u2);

        if $stack20 == 0 goto label16;

        $u7 = new java.util.ArrayList;

        specialinvoke $u7.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setExcludes(java.util.List)>($u7);

        $u8 = new org.apache.maven.model.InputLocation;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack24, $stack25, source);

        virtualinvoke $u0.<org.apache.maven.model.FileSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("excludes", $u8);

     label13:
        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack26 != 2 goto label15;

        $stack27 = "exclude";

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack29 = virtualinvoke $stack27.<java.lang.String: boolean equals(java.lang.Object)>($stack28);

        if $stack29 == 0 goto label14;

        $u9 = new org.apache.maven.model.InputLocation;

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack33, $stack34, source);

        $stack35 = interfaceinvoke $u7.<java.util.List: int size()>();

        $stack36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack35);

        virtualinvoke $u8.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack36, $u9);

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack38 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack37, "excludes");

        interfaceinvoke $u7.<java.util.List: boolean add(java.lang.Object)>($stack38);

        goto label13;

     label14:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label17:
        return $u0;
    }

    private org.apache.maven.model.IssueManagement parseIssueManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack25, $stack29, $stack30, name;
        int $stack13, $stack14, $stack15, $stack22, $stack23, $stack27, $stack28, $stack35, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.IssueManagement $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.IssueManagement;

        specialinvoke $u0.<org.apache.maven.model.IssueManagement: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.IssueManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack35 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack35 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "system", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack27, $stack28, source);

        virtualinvoke $u0.<org.apache.maven.model.IssueManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("system", $u3);

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "system");

        virtualinvoke $u0.<org.apache.maven.model.IssueManagement: void setSystem(java.lang.String)>($stack30);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack22, $stack23, source);

        virtualinvoke $u0.<org.apache.maven.model.IssueManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u4);

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "url");

        virtualinvoke $u0.<org.apache.maven.model.IssueManagement: void setUrl(java.lang.String)>($stack25);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.License parseLicense(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack26, $stack27, $stack31, $stack32, $stack36, $stack37, $stack41, $stack42, name;
        int $stack13, $stack14, $stack15, $stack24, $stack25, $stack29, $stack30, $stack34, $stack35, $stack39, $stack40, $stack47, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.License $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.License;

        specialinvoke $u0.<org.apache.maven.model.License: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.License: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack47 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack47 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack39, $stack40, source);

        virtualinvoke $u0.<org.apache.maven.model.License: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u3);

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack42 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "name");

        virtualinvoke $u0.<org.apache.maven.model.License: void setName(java.lang.String)>($stack42);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack34, $stack35, source);

        virtualinvoke $u0.<org.apache.maven.model.License: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u4);

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "url");

        virtualinvoke $u0.<org.apache.maven.model.License: void setUrl(java.lang.String)>($stack37);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "distribution", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack29, $stack30, source);

        virtualinvoke $u0.<org.apache.maven.model.License: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("distribution", $u5);

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack32 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "distribution");

        virtualinvoke $u0.<org.apache.maven.model.License: void setDistribution(java.lang.String)>($stack32);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "comments", null, $u2);

        if $stack21 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack24, $stack25, source);

        virtualinvoke $u0.<org.apache.maven.model.License: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("comments", $u6);

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "comments");

        virtualinvoke $u0.<org.apache.maven.model.License: void setComments(java.lang.String)>($stack27);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.MailingList parseMailingList(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack30, $stack31, $stack40, $stack41, $stack46, $stack47, $stack51, $stack52, $stack56, $stack57, $stack61, $stack62, $stack66, $stack67, name;
        int $stack13, $stack14, $stack15, $stack27, $stack28, $stack36, $stack37, $stack38, $stack44, $stack45, $stack49, $stack50, $stack54, $stack55, $stack59, $stack60, $stack64, $stack65, $stack72, i, $stack17, $stack29;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack32;
        MavenXpp3ReaderEx this;
        java.lang.Integer $stack39;
        org.apache.maven.model.MailingList $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6, $u7, $u9, $u10;
        java.util.HashSet $u2;
        java.util.ArrayList $u8;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.MailingList;

        specialinvoke $u0.<org.apache.maven.model.MailingList: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack72 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack72 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label17;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack65 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack64, $stack65, source);

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u3);

        $stack66 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack67 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack66, "name");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setName(java.lang.String)>($stack67);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "subscribe", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack59 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack60 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack59, $stack60, source);

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("subscribe", $u4);

        $stack61 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack62 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack61, "subscribe");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setSubscribe(java.lang.String)>($stack62);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "unsubscribe", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack54 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack54, $stack55, source);

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("unsubscribe", $u5);

        $stack56 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack57 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack56, "unsubscribe");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setUnsubscribe(java.lang.String)>($stack57);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "post", null, $u2);

        if $stack21 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack50 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack49, $stack50, source);

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("post", $u6);

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack52 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack51, "post");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setPost(java.lang.String)>($stack52);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "archive", null, $u2);

        if $stack22 == 0 goto label12;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack44, $stack45, source);

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("archive", $u7);

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack47 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack46, "archive");

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setArchive(java.lang.String)>($stack47);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "otherArchives", null, $u2);

        if $stack23 == 0 goto label16;

        $u8 = new java.util.ArrayList;

        specialinvoke $u8.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setOtherArchives(java.util.List)>($u8);

        $u9 = new org.apache.maven.model.InputLocation;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack27, $stack28, source);

        virtualinvoke $u0.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("otherArchives", $u9);

     label13:
        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack29 != 2 goto label15;

        $stack30 = "otherArchive";

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack32 = virtualinvoke $stack30.<java.lang.String: boolean equals(java.lang.Object)>($stack31);

        if $stack32 == 0 goto label14;

        $u10 = new org.apache.maven.model.InputLocation;

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u10.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack36, $stack37, source);

        $stack38 = interfaceinvoke $u8.<java.util.List: int size()>();

        $stack39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack38);

        virtualinvoke $u9.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack39, $u10);

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack41 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack40, "otherArchives");

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>($stack41);

        goto label13;

     label14:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label05;

     label16:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label17:
        return $u0;
    }

    private org.apache.maven.model.Model parseModel(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack52, $stack53, $stack69, $stack70, $stack78, $stack79, $stack87, $stack88, $stack103, value, $stack116, $stack117, $stack126, $stack127, $stack132, $stack133, $stack141, $stack142, $stack150, $stack151, $stack159, $stack160, $stack170, $stack171, $stack175, $stack176, $stack180, $stack181, $stack185, $stack186, $stack190, $stack191, $stack195, $stack196, $stack200, $stack201, $stack205, $stack206, $stack211, $stack212, $stack218, $stack220, $stack226, name, value#86;
        int $stack14, $stack15, $stack16, $stack61, $stack62, $stack96, $stack97, $stack98, $stack101, $stack102, $stack113, $stack114, $stack122, $stack123, $stack124, $stack168, $stack169, $stack173, $stack174, $stack178, $stack179, $stack183, $stack184, $stack188, $stack189, $stack193, $stack194, $stack198, $stack199, $stack203, $stack204, $stack209, $stack210, $stack217, $stack224, $stack225, i, $stack18, $stack158, $stack149, $stack140, $stack131, $stack115, $stack86, $stack77, $stack68, $stack51;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $stack54, $stack71, $stack80, $stack89, $stack118, $stack134, $stack143, $stack152, $stack161, $stack219, $stack221;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Profile $stack57;
        org.apache.maven.model.Reporting $stack59;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack65;
        org.apache.maven.model.Build $stack66;
        org.apache.maven.model.Repository $stack74, $stack83;
        org.apache.maven.model.Dependency $stack92;
        org.apache.maven.model.DependencyManagement $stack94;
        org.apache.maven.model.DistributionManagement $stack107;
        org.apache.maven.model.CiManagement $stack108;
        org.apache.maven.model.IssueManagement $stack109;
        org.apache.maven.model.Scm $stack110;
        java.lang.Integer $stack125;
        org.apache.maven.model.Prerequisites $stack129;
        org.apache.maven.model.MailingList $stack137;
        org.apache.maven.model.Contributor $stack146;
        org.apache.maven.model.Developer $stack155;
        org.apache.maven.model.License $stack164;
        org.apache.maven.model.Organization $stack166;
        org.apache.maven.model.Parent $stack207;
        org.apache.maven.model.Model $u0;
        org.apache.maven.model.InputLocation $u1, $u2, $u4, $u5, $u6, $u7, $u8, $u9, $u10, $u11, $u12, $u18, $u19, $u20, $u21, $u25;
        java.util.HashSet $u3;
        java.util.ArrayList $u13, $u14, $u15, $u16, $u17, $u22, $u23, $u24, $u27;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder $u26;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r66, $r67, $r68, $r69, $r70, $r71;
        org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder $r65;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack14, $stack15, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack16 - 1;

     label01:
        if i < 0 goto label06;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        value = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack217 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack217 < 0 goto label02;

        goto label05;

     label02:
        $stack218 = "xmlns";

        $stack219 = virtualinvoke $stack218.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack219 == 0 goto label03;

        goto label05;

     label03:
        $stack220 = "child.project.url.inherit.append.path";

        $stack221 = virtualinvoke $stack220.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack221 == 0 goto label04;

        $u2 = new org.apache.maven.model.InputLocation;

        $stack224 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack225 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u2.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack224, $stack225, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("childProjectUrlInheritAppendPath", $u2);

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack226 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.project.url.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setChildProjectUrlInheritAppendPath(java.lang.String)>($stack226);

        goto label05;

     label04:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label05:
        i = i + -1;

        goto label01;

     label06:
        $u3 = new java.util.HashSet;

        specialinvoke $u3.<java.util.HashSet: void <init>()>();

     label07:
        if strict == 0 goto label08;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label09;

     label08:
        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label09:
        if $stack18 != 2 goto label69;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "modelVersion", null, $u3);

        if $stack19 == 0 goto label10;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack209 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack210 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack209, $stack210, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("modelVersion", $u4);

        $stack211 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack212 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack211, "modelVersion");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setModelVersion(java.lang.String)>($stack212);

        goto label07;

     label10:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "parent", null, $u3);

        if $stack20 == 0 goto label11;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack207 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Parent parseParent(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setParent(org.apache.maven.model.Parent)>($stack207);

        goto label07;

     label11:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u3);

        if $stack21 == 0 goto label12;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack203 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack204 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack203, $stack204, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $u5);

        $stack205 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack206 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack205, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setGroupId(java.lang.String)>($stack206);

        goto label07;

     label12:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u3);

        if $stack22 == 0 goto label13;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack198 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack199 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack198, $stack199, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $u6);

        $stack200 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack201 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack200, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setArtifactId(java.lang.String)>($stack201);

        goto label07;

     label13:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u3);

        if $stack23 == 0 goto label14;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack193 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack194 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack193, $stack194, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u7);

        $stack195 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack196 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack195, "version");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setVersion(java.lang.String)>($stack196);

        goto label07;

     label14:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "packaging", null, $u3);

        if $stack24 == 0 goto label15;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack188 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack189 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack188, $stack189, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("packaging", $u8);

        $stack190 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack191 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack190, "packaging");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setPackaging(java.lang.String)>($stack191);

        goto label07;

     label15:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u3);

        if $stack25 == 0 goto label16;

        $u9 = new org.apache.maven.model.InputLocation;

        $stack183 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack184 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack183, $stack184, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u9);

        $stack185 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack186 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack185, "name");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setName(java.lang.String)>($stack186);

        goto label07;

     label16:
        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "description", null, $u3);

        if $stack26 == 0 goto label17;

        $u10 = new org.apache.maven.model.InputLocation;

        $stack178 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack179 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u10.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack178, $stack179, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("description", $u10);

        $stack180 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack181 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack180, "description");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDescription(java.lang.String)>($stack181);

        goto label07;

     label17:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u3);

        if $stack27 == 0 goto label18;

        $u11 = new org.apache.maven.model.InputLocation;

        $stack173 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack174 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u11.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack173, $stack174, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u11);

        $stack175 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack176 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack175, "url");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setUrl(java.lang.String)>($stack176);

        goto label07;

     label18:
        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack28 = specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inceptionYear", null, $u3);

        if $stack28 == 0 goto label19;

        $u12 = new org.apache.maven.model.InputLocation;

        $stack168 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack169 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u12.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack168, $stack169, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("inceptionYear", $u12);

        $stack170 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack171 = specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack170, "inceptionYear");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setInceptionYear(java.lang.String)>($stack171);

        goto label07;

     label19:
        $r23 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack29 = specialinvoke $r23.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "organization", "organisation", $u3);

        if $stack29 == 0 goto label20;

        $r24 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack166 = specialinvoke $r24.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Organization parseOrganization(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setOrganization(org.apache.maven.model.Organization)>($stack166);

        goto label07;

     label20:
        $r25 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r25.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "licenses", null, $u3);

        if $stack30 == 0 goto label24;

        $u13 = new java.util.ArrayList;

        specialinvoke $u13.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLicenses(java.util.List)>($u13);

     label21:
        $stack158 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack158 != 2 goto label23;

        $stack159 = "license";

        $stack160 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack161 = virtualinvoke $stack159.<java.lang.String: boolean equals(java.lang.Object)>($stack160);

        if $stack161 == 0 goto label22;

        $r26 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack164 = specialinvoke $r26.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.License parseLicense(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u13.<java.util.List: boolean add(java.lang.Object)>($stack164);

        goto label21;

     label22:
        $r27 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r27.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label21;

     label23:
        goto label07;

     label24:
        $r28 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack31 = specialinvoke $r28.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "developers", null, $u3);

        if $stack31 == 0 goto label28;

        $u14 = new java.util.ArrayList;

        specialinvoke $u14.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDevelopers(java.util.List)>($u14);

     label25:
        $stack149 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack149 != 2 goto label27;

        $stack150 = "developer";

        $stack151 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack152 = virtualinvoke $stack150.<java.lang.String: boolean equals(java.lang.Object)>($stack151);

        if $stack152 == 0 goto label26;

        $r29 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack155 = specialinvoke $r29.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Developer parseDeveloper(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u14.<java.util.List: boolean add(java.lang.Object)>($stack155);

        goto label25;

     label26:
        $r30 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r30.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label25;

     label27:
        goto label07;

     label28:
        $r31 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack32 = specialinvoke $r31.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "contributors", null, $u3);

        if $stack32 == 0 goto label32;

        $u15 = new java.util.ArrayList;

        specialinvoke $u15.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setContributors(java.util.List)>($u15);

     label29:
        $stack140 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack140 != 2 goto label31;

        $stack141 = "contributor";

        $stack142 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack143 = virtualinvoke $stack141.<java.lang.String: boolean equals(java.lang.Object)>($stack142);

        if $stack143 == 0 goto label30;

        $r32 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack146 = specialinvoke $r32.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Contributor parseContributor(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u15.<java.util.List: boolean add(java.lang.Object)>($stack146);

        goto label29;

     label30:
        $r33 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r33.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label29;

     label31:
        goto label07;

     label32:
        $r34 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack33 = specialinvoke $r34.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "mailingLists", null, $u3);

        if $stack33 == 0 goto label36;

        $u16 = new java.util.ArrayList;

        specialinvoke $u16.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setMailingLists(java.util.List)>($u16);

     label33:
        $stack131 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack131 != 2 goto label35;

        $stack132 = "mailingList";

        $stack133 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack134 = virtualinvoke $stack132.<java.lang.String: boolean equals(java.lang.Object)>($stack133);

        if $stack134 == 0 goto label34;

        $r35 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack137 = specialinvoke $r35.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.MailingList parseMailingList(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u16.<java.util.List: boolean add(java.lang.Object)>($stack137);

        goto label33;

     label34:
        $r36 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r36.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label33;

     label35:
        goto label07;

     label36:
        $r37 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack34 = specialinvoke $r37.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "prerequisites", null, $u3);

        if $stack34 == 0 goto label37;

        $r38 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack129 = specialinvoke $r38.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Prerequisites parsePrerequisites(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setPrerequisites(org.apache.maven.model.Prerequisites)>($stack129);

        goto label07;

     label37:
        $r39 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack35 = specialinvoke $r39.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "modules", null, $u3);

        if $stack35 == 0 goto label41;

        $u17 = new java.util.ArrayList;

        specialinvoke $u17.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setModules(java.util.List)>($u17);

        $u18 = new org.apache.maven.model.InputLocation;

        $stack113 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack114 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u18.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack113, $stack114, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("modules", $u18);

     label38:
        $stack115 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack115 != 2 goto label40;

        $stack116 = "module";

        $stack117 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack118 = virtualinvoke $stack116.<java.lang.String: boolean equals(java.lang.Object)>($stack117);

        if $stack118 == 0 goto label39;

        $u19 = new org.apache.maven.model.InputLocation;

        $stack122 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack123 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u19.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack122, $stack123, source);

        $stack124 = interfaceinvoke $u17.<java.util.List: int size()>();

        $stack125 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack124);

        virtualinvoke $u18.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack125, $u19);

        $stack126 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r40 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack127 = specialinvoke $r40.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack126, "modules");

        interfaceinvoke $u17.<java.util.List: boolean add(java.lang.Object)>($stack127);

        goto label38;

     label39:
        $r41 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r41.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label38;

     label40:
        goto label07;

     label41:
        $r42 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack36 = specialinvoke $r42.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "scm", null, $u3);

        if $stack36 == 0 goto label42;

        $r43 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack110 = specialinvoke $r43.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Scm parseScm(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setScm(org.apache.maven.model.Scm)>($stack110);

        goto label07;

     label42:
        $r44 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r44.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "issueManagement", null, $u3);

        if $stack37 == 0 goto label43;

        $r45 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack109 = specialinvoke $r45.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.IssueManagement parseIssueManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setIssueManagement(org.apache.maven.model.IssueManagement)>($stack109);

        goto label07;

     label43:
        $r46 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack38 = specialinvoke $r46.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "ciManagement", null, $u3);

        if $stack38 == 0 goto label44;

        $r47 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack108 = specialinvoke $r47.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.CiManagement parseCiManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setCiManagement(org.apache.maven.model.CiManagement)>($stack108);

        goto label07;

     label44:
        $r48 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack39 = specialinvoke $r48.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "distributionManagement", null, $u3);

        if $stack39 == 0 goto label45;

        $r49 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack107 = specialinvoke $r49.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.DistributionManagement parseDistributionManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDistributionManagement(org.apache.maven.model.DistributionManagement)>($stack107);

        goto label07;

     label45:
        $r50 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack40 = specialinvoke $r50.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u3);

        if $stack40 == 0 goto label48;

        $u20 = new org.apache.maven.model.InputLocation;

        $stack96 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack97 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u20.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack96, $stack97, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("properties", $u20);

     label46:
        $stack98 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack98 != 2 goto label47;

        value#86 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u21 = new org.apache.maven.model.InputLocation;

        $stack101 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack102 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u21.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack101, $stack102, source);

        virtualinvoke $u20.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(value#86, $u21);

        $stack103 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack103.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void addProperty(java.lang.String,java.lang.String)>(value#86, value);

        goto label46;

     label47:
        goto label07;

     label48:
        $r51 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack41 = specialinvoke $r51.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencyManagement", null, $u3);

        if $stack41 == 0 goto label49;

        $r52 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack94 = specialinvoke $r52.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.DependencyManagement parseDependencyManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDependencyManagement(org.apache.maven.model.DependencyManagement)>($stack94);

        goto label07;

     label49:
        $r53 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack42 = specialinvoke $r53.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u3);

        if $stack42 == 0 goto label53;

        $u22 = new java.util.ArrayList;

        specialinvoke $u22.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setDependencies(java.util.List)>($u22);

     label50:
        $stack86 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack86 != 2 goto label52;

        $stack87 = "dependency";

        $stack88 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack89 = virtualinvoke $stack87.<java.lang.String: boolean equals(java.lang.Object)>($stack88);

        if $stack89 == 0 goto label51;

        $r54 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack92 = specialinvoke $r54.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u22.<java.util.List: boolean add(java.lang.Object)>($stack92);

        goto label50;

     label51:
        $r55 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r55.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label50;

     label52:
        goto label07;

     label53:
        $r56 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack43 = specialinvoke $r56.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "repositories", null, $u3);

        if $stack43 == 0 goto label57;

        $u23 = new java.util.ArrayList;

        specialinvoke $u23.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setRepositories(java.util.List)>($u23);

     label54:
        $stack77 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack77 != 2 goto label56;

        $stack78 = "repository";

        $stack79 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack80 = virtualinvoke $stack78.<java.lang.String: boolean equals(java.lang.Object)>($stack79);

        if $stack80 == 0 goto label55;

        $r57 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack83 = specialinvoke $r57.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u23.<java.util.List: boolean add(java.lang.Object)>($stack83);

        goto label54;

     label55:
        $r58 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r58.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label54;

     label56:
        goto label07;

     label57:
        $r59 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack44 = specialinvoke $r59.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginRepositories", null, $u3);

        if $stack44 == 0 goto label61;

        $u24 = new java.util.ArrayList;

        specialinvoke $u24.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setPluginRepositories(java.util.List)>($u24);

     label58:
        $stack68 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack68 != 2 goto label60;

        $stack69 = "pluginRepository";

        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack71 = virtualinvoke $stack69.<java.lang.String: boolean equals(java.lang.Object)>($stack70);

        if $stack71 == 0 goto label59;

        $r60 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack74 = specialinvoke $r60.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u24.<java.util.List: boolean add(java.lang.Object)>($stack74);

        goto label58;

     label59:
        $r61 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r61.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label58;

     label60:
        goto label07;

     label61:
        $r62 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack45 = specialinvoke $r62.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "build", null, $u3);

        if $stack45 == 0 goto label62;

        $r63 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack66 = specialinvoke $r63.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Build parseBuild(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setBuild(org.apache.maven.model.Build)>($stack66);

        goto label07;

     label62:
        $r64 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack46 = specialinvoke $r64.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reports", null, $u3);

        if $stack46 == 0 goto label63;

        $u25 = new org.apache.maven.model.InputLocation;

        $stack61 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack62 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u25.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack61, $stack62, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("reports", $u25);

        $u26 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder;

        specialinvoke $u26.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder: void <init>(org.apache.maven.model.InputLocation)>($u25);

        $r65 = (org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder) $u26;

        $stack65 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder)>(parser, 1, $r65);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setReports(java.lang.Object)>($stack65);

        goto label07;

     label63:
        $r66 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack47 = specialinvoke $r66.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reporting", null, $u3);

        if $stack47 == 0 goto label64;

        $r67 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack59 = specialinvoke $r67.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Reporting parseReporting(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Model: void setReporting(org.apache.maven.model.Reporting)>($stack59);

        goto label07;

     label64:
        $r68 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack48 = specialinvoke $r68.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "profiles", null, $u3);

        if $stack48 == 0 goto label68;

        $u27 = new java.util.ArrayList;

        specialinvoke $u27.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Model: void setProfiles(java.util.List)>($u27);

     label65:
        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack51 != 2 goto label67;

        $stack52 = "profile";

        $stack53 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack54 = virtualinvoke $stack52.<java.lang.String: boolean equals(java.lang.Object)>($stack53);

        if $stack54 == 0 goto label66;

        $r69 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack57 = specialinvoke $r69.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Profile parseProfile(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u27.<java.util.List: boolean add(java.lang.Object)>($stack57);

        goto label65;

     label66:
        $r70 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r70.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label65;

     label67:
        goto label07;

     label68:
        $r71 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r71.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label07;

     label69:
        return $u0;
    }

    private org.apache.maven.model.ModelBase parseModelBase(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack38, $stack39, $stack47, $stack48, $stack56, $stack57, $stack72, value, $stack82, $stack83, $stack92, $stack93, name, value#27;
        int $stack14, $stack15, $stack16, $stack31, $stack32, $stack65, $stack66, $stack67, $stack70, $stack71, $stack79, $stack80, $stack88, $stack89, $stack90, $stack99, i, $stack18, $stack81, $stack55, $stack46, $stack37;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack40, $stack49, $stack58, $stack84;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Reporting $stack29;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack35;
        org.apache.maven.model.Repository $stack43, $stack52;
        org.apache.maven.model.Dependency $stack61;
        org.apache.maven.model.DependencyManagement $stack63;
        org.apache.maven.model.DistributionManagement $stack76;
        java.lang.Integer $stack91;
        org.apache.maven.model.ModelBase $u0;
        org.apache.maven.model.InputLocation $u1, $u4, $u5, $u6, $u7, $u11;
        java.util.HashSet $u2;
        java.util.ArrayList $u3, $u8, $u9, $u10;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder $u12;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r23;
        org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder $r20;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ModelBase;

        specialinvoke $u0.<org.apache.maven.model.ModelBase: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack14, $stack15, source);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack16 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack99 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack99 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack18 != 2 goto label31;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "modules", null, $u2);

        if $stack19 == 0 goto label11;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setModules(java.util.List)>($u3);

        $u4 = new org.apache.maven.model.InputLocation;

        $stack79 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack80 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack79, $stack80, source);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("modules", $u4);

     label08:
        $stack81 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack81 != 2 goto label10;

        $stack82 = "module";

        $stack83 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack84 = virtualinvoke $stack82.<java.lang.String: boolean equals(java.lang.Object)>($stack83);

        if $stack84 == 0 goto label09;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack88 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack89 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack88, $stack89, source);

        $stack90 = interfaceinvoke $u3.<java.util.List: int size()>();

        $stack91 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack90);

        virtualinvoke $u4.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack91, $u5);

        $stack92 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack93 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack92, "modules");

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack93);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "distributionManagement", null, $u2);

        if $stack20 == 0 goto label12;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack76 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.DistributionManagement parseDistributionManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setDistributionManagement(org.apache.maven.model.DistributionManagement)>($stack76);

        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u2);

        if $stack21 == 0 goto label15;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack65 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack66 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack65, $stack66, source);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("properties", $u6);

     label13:
        $stack67 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack67 != 2 goto label14;

        value#27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u7 = new org.apache.maven.model.InputLocation;

        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack71 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack70, $stack71, source);

        virtualinvoke $u6.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(value#27, $u7);

        $stack72 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack72.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void addProperty(java.lang.String,java.lang.String)>(value#27, value);

        goto label13;

     label14:
        goto label05;

     label15:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencyManagement", null, $u2);

        if $stack22 == 0 goto label16;

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack63 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.DependencyManagement parseDependencyManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setDependencyManagement(org.apache.maven.model.DependencyManagement)>($stack63);

        goto label05;

     label16:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u2);

        if $stack23 == 0 goto label20;

        $u8 = new java.util.ArrayList;

        specialinvoke $u8.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setDependencies(java.util.List)>($u8);

     label17:
        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack55 != 2 goto label19;

        $stack56 = "dependency";

        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack58 = virtualinvoke $stack56.<java.lang.String: boolean equals(java.lang.Object)>($stack57);

        if $stack58 == 0 goto label18;

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack61 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>($stack61);

        goto label17;

     label18:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label17;

     label19:
        goto label05;

     label20:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "repositories", null, $u2);

        if $stack24 == 0 goto label24;

        $u9 = new java.util.ArrayList;

        specialinvoke $u9.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setRepositories(java.util.List)>($u9);

     label21:
        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack46 != 2 goto label23;

        $stack47 = "repository";

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack49 = virtualinvoke $stack47.<java.lang.String: boolean equals(java.lang.Object)>($stack48);

        if $stack49 == 0 goto label22;

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack52 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u9.<java.util.List: boolean add(java.lang.Object)>($stack52);

        goto label21;

     label22:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label21;

     label23:
        goto label05;

     label24:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginRepositories", null, $u2);

        if $stack25 == 0 goto label28;

        $u10 = new java.util.ArrayList;

        specialinvoke $u10.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setPluginRepositories(java.util.List)>($u10);

     label25:
        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack37 != 2 goto label27;

        $stack38 = "pluginRepository";

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack40 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>($stack39);

        if $stack40 == 0 goto label26;

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack43 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u10.<java.util.List: boolean add(java.lang.Object)>($stack43);

        goto label25;

     label26:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label25;

     label27:
        goto label05;

     label28:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reports", null, $u2);

        if $stack26 == 0 goto label29;

        $u11 = new org.apache.maven.model.InputLocation;

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u11.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack31, $stack32, source);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("reports", $u11);

        $u12 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder;

        specialinvoke $u12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder: void <init>(org.apache.maven.model.InputLocation)>($u11);

        $r20 = (org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder) $u12;

        $stack35 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder)>(parser, 1, $r20);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setReports(java.lang.Object)>($stack35);

        goto label05;

     label29:
        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reporting", null, $u2);

        if $stack27 == 0 goto label30;

        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack29 = specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Reporting parseReporting(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.ModelBase: void setReporting(org.apache.maven.model.Reporting)>($stack29);

        goto label05;

     label30:
        $r23 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r23.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label31:
        return $u0;
    }

    private org.apache.maven.model.Notifier parseNotifier(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack35, value, $stack42, $stack43, $stack47, $stack48, $stack53, $stack54, $stack59, $stack60, $stack65, $stack66, $stack71, $stack72, name, value;
        int $stack14, $stack15, $stack16, $stack28, $stack29, $stack30, $stack33, $stack34, $stack40, $stack41, $stack45, $stack46, $stack51, $stack52, $stack57, $stack58, $stack63, $stack64, $stack69, $stack70, $stack77, i, $stack18;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack49, $stack55, $stack61, $stack67;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Notifier $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6, $u7, $u8, $u9, $u10;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Notifier;

        specialinvoke $u0.<org.apache.maven.model.Notifier: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack14, $stack15, source);

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack16 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack77 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack77 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack18 != 2 goto label17;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "type", null, $u2);

        if $stack19 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack69 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack69, $stack70, source);

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("type", $u3);

        $stack71 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack72 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack71, "type");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setType(java.lang.String)>($stack72);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sendOnError", null, $u2);

        if $stack20 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack63 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack63, $stack64, source);

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("sendOnError", $u4);

        $stack65 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack66 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack65, "sendOnError");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack67 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack66, "sendOnError", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setSendOnError(boolean)>($stack67);

        goto label05;

     label09:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sendOnFailure", null, $u2);

        if $stack21 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack58 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack57, $stack58, source);

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("sendOnFailure", $u5);

        $stack59 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack60 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack59, "sendOnFailure");

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack61 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack60, "sendOnFailure", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setSendOnFailure(boolean)>($stack61);

        goto label05;

     label10:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sendOnSuccess", null, $u2);

        if $stack22 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack52 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack51, $stack52, source);

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("sendOnSuccess", $u6);

        $stack53 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack54 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack53, "sendOnSuccess");

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack55 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack54, "sendOnSuccess", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setSendOnSuccess(boolean)>($stack55);

        goto label05;

     label11:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "sendOnWarning", null, $u2);

        if $stack23 == 0 goto label12;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack45, $stack46, source);

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("sendOnWarning", $u7);

        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack48 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack47, "sendOnWarning");

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack49 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack48, "sendOnWarning", parser, "true");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setSendOnWarning(boolean)>($stack49);

        goto label05;

     label12:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "address", null, $u2);

        if $stack24 == 0 goto label13;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack40, $stack41, source);

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("address", $u8);

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack43 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack42, "address");

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setAddress(java.lang.String)>($stack43);

        goto label05;

     label13:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u2);

        if $stack25 == 0 goto label16;

        $u9 = new org.apache.maven.model.InputLocation;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack28, $stack29, source);

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("configuration", $u9);

     label14:
        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack30 != 2 goto label15;

        value = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u10 = new org.apache.maven.model.InputLocation;

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u10.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack33, $stack34, source);

        virtualinvoke $u9.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(value, $u10);

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack35.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Notifier: void addConfiguration(java.lang.String,java.lang.String)>(value, value);

        goto label14;

     label15:
        goto label05;

     label16:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label17:
        return $u0;
    }

    private org.apache.maven.model.Organization parseOrganization(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack25, $stack29, $stack30, name;
        int $stack13, $stack14, $stack15, $stack22, $stack23, $stack27, $stack28, $stack35, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Organization $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Organization;

        specialinvoke $u0.<org.apache.maven.model.Organization: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Organization: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack35 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack35 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack27, $stack28, source);

        virtualinvoke $u0.<org.apache.maven.model.Organization: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u3);

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "name");

        virtualinvoke $u0.<org.apache.maven.model.Organization: void setName(java.lang.String)>($stack30);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack22, $stack23, source);

        virtualinvoke $u0.<org.apache.maven.model.Organization: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u4);

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "url");

        virtualinvoke $u0.<org.apache.maven.model.Organization: void setUrl(java.lang.String)>($stack25);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.model.Parent parseParent(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack26, $stack27, $stack31, $stack32, $stack36, $stack37, $stack41, $stack42, name;
        int $stack13, $stack14, $stack15, $stack24, $stack25, $stack29, $stack30, $stack34, $stack35, $stack39, $stack40, $stack47, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Parent $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Parent;

        specialinvoke $u0.<org.apache.maven.model.Parent: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack47 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack47 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack39, $stack40, source);

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $u3);

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack42 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setGroupId(java.lang.String)>($stack42);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack34, $stack35, source);

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $u4);

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setArtifactId(java.lang.String)>($stack37);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack29, $stack30, source);

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u5);

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack32 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "version");

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setVersion(java.lang.String)>($stack32);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "relativePath", null, $u2);

        if $stack21 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack24, $stack25, source);

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("relativePath", $u6);

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "relativePath");

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setRelativePath(java.lang.String)>($stack27);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.PatternSet parsePatternSet(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack26, $stack27, $stack36, $stack37, $stack44, $stack45, $stack54, $stack55, name;
        int $stack13, $stack14, $stack15, $stack23, $stack24, $stack32, $stack33, $stack34, $stack41, $stack42, $stack50, $stack51, $stack52, $stack61, i, $stack17, $stack43, $stack25;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack28, $stack46;
        MavenXpp3ReaderEx this;
        java.lang.Integer $stack35, $stack53;
        org.apache.maven.model.PatternSet $u0;
        org.apache.maven.model.InputLocation $u1, $u4, $u5, $u7, $u8;
        java.util.HashSet $u2;
        java.util.ArrayList $u3, $u6;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PatternSet;

        specialinvoke $u0.<org.apache.maven.model.PatternSet: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.PatternSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack61 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack61 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label16;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "includes", null, $u2);

        if $stack18 == 0 goto label11;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PatternSet: void setIncludes(java.util.List)>($u3);

        $u4 = new org.apache.maven.model.InputLocation;

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack41, $stack42, source);

        virtualinvoke $u0.<org.apache.maven.model.PatternSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("includes", $u4);

     label08:
        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack43 != 2 goto label10;

        $stack44 = "include";

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack46 = virtualinvoke $stack44.<java.lang.String: boolean equals(java.lang.Object)>($stack45);

        if $stack46 == 0 goto label09;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack50 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack50, $stack51, source);

        $stack52 = interfaceinvoke $u3.<java.util.List: int size()>();

        $stack53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack52);

        virtualinvoke $u4.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack53, $u5);

        $stack54 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack55 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack54, "includes");

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack55);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "excludes", null, $u2);

        if $stack19 == 0 goto label15;

        $u6 = new java.util.ArrayList;

        specialinvoke $u6.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PatternSet: void setExcludes(java.util.List)>($u6);

        $u7 = new org.apache.maven.model.InputLocation;

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack23, $stack24, source);

        virtualinvoke $u0.<org.apache.maven.model.PatternSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("excludes", $u7);

     label12:
        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack25 != 2 goto label14;

        $stack26 = "exclude";

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack28 = virtualinvoke $stack26.<java.lang.String: boolean equals(java.lang.Object)>($stack27);

        if $stack28 == 0 goto label13;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack32, $stack33, source);

        $stack34 = interfaceinvoke $u6.<java.util.List: int size()>();

        $stack35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack34);

        virtualinvoke $u7.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack35, $u8);

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "excludes");

        interfaceinvoke $u6.<java.util.List: boolean add(java.lang.Object)>($stack37);

        goto label12;

     label13:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label12;

     label14:
        goto label05;

     label15:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label16:
        return $u0;
    }

    private org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack37, $stack38, $stack47, $stack48, $stack56, $stack57, $stack66, $stack67, $stack71, $stack72, $stack76, $stack77, $stack81, $stack82, name;
        int $stack13, $stack14, $stack15, $stack29, $stack30, $stack35, $stack36, $stack40, $stack41, $stack64, $stack65, $stack69, $stack70, $stack74, $stack75, $stack79, $stack80, $stack87, i, $stack17, $stack55, $stack46;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack49, $stack58;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack33, $stack44;
        org.apache.maven.model.Dependency $stack52;
        org.apache.maven.model.PluginExecution $stack61;
        org.apache.maven.model.Plugin $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6, $u9, $u11, $u12;
        java.util.HashSet $u2;
        java.util.ArrayList $u7, $u8;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder $u10, $u13;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r22;
        org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder $r17, $r21;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Plugin;

        specialinvoke $u0.<org.apache.maven.model.Plugin: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack87 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack87 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label23;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack79 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack80 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack79, $stack80, source);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $u3);

        $stack81 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack82 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack81, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setGroupId(java.lang.String)>($stack82);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack74 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack75 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack74, $stack75, source);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $u4);

        $stack76 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack77 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack76, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setArtifactId(java.lang.String)>($stack77);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack69 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack69, $stack70, source);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u5);

        $stack71 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack72 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack71, "version");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setVersion(java.lang.String)>($stack72);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "extensions", null, $u2);

        if $stack21 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack65 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack64, $stack65, source);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("extensions", $u6);

        $stack66 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack67 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack66, "extensions");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setExtensions(java.lang.String)>($stack67);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "executions", null, $u2);

        if $stack22 == 0 goto label15;

        $u7 = new java.util.ArrayList;

        specialinvoke $u7.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setExecutions(java.util.List)>($u7);

     label12:
        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack55 != 2 goto label14;

        $stack56 = "execution";

        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack58 = virtualinvoke $stack56.<java.lang.String: boolean equals(java.lang.Object)>($stack57);

        if $stack58 == 0 goto label13;

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack61 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.PluginExecution parsePluginExecution(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u7.<java.util.List: boolean add(java.lang.Object)>($stack61);

        goto label12;

     label13:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label12;

     label14:
        goto label05;

     label15:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u2);

        if $stack23 == 0 goto label19;

        $u8 = new java.util.ArrayList;

        specialinvoke $u8.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setDependencies(java.util.List)>($u8);

     label16:
        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack46 != 2 goto label18;

        $stack47 = "dependency";

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack49 = virtualinvoke $stack47.<java.lang.String: boolean equals(java.lang.Object)>($stack48);

        if $stack49 == 0 goto label17;

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack52 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>($stack52);

        goto label16;

     label17:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label16;

     label18:
        goto label05;

     label19:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "goals", null, $u2);

        if $stack24 == 0 goto label20;

        $u9 = new org.apache.maven.model.InputLocation;

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack40, $stack41, source);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("goals", $u9);

        $u10 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder;

        specialinvoke $u10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder: void <init>(org.apache.maven.model.InputLocation)>($u9);

        $r17 = (org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder) $u10;

        $stack44 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder)>(parser, 1, $r17);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setGoals(java.lang.Object)>($stack44);

        goto label05;

     label20:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u2);

        if $stack25 == 0 goto label21;

        $u11 = new org.apache.maven.model.InputLocation;

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u11.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack35, $stack36, source);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("inherited", $u11);

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack38 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack37, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setInherited(java.lang.String)>($stack38);

        goto label05;

     label21:
        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u2);

        if $stack26 == 0 goto label22;

        $u12 = new org.apache.maven.model.InputLocation;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u12.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack29, $stack30, source);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("configuration", $u12);

        $u13 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder;

        specialinvoke $u13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder: void <init>(org.apache.maven.model.InputLocation)>($u12);

        $r21 = (org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder) $u13;

        $stack33 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder)>(parser, 1, $r21);

        virtualinvoke $u0.<org.apache.maven.model.Plugin: void setConfiguration(java.lang.Object)>($stack33);

        goto label05;

     label22:
        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label23:
        return $u0;
    }

    private org.apache.maven.model.PluginConfiguration parsePluginConfiguration(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack23, $stack24, name;
        int $stack13, $stack14, $stack15, $stack35, i, $stack17, $stack22;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack25;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Plugin $stack28;
        org.apache.maven.model.PluginManagement $stack30;
        org.apache.maven.model.PluginConfiguration $u0;
        org.apache.maven.model.InputLocation $u1;
        java.util.HashSet $u2;
        java.util.ArrayList $u3;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PluginConfiguration;

        specialinvoke $u0.<org.apache.maven.model.PluginConfiguration: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginConfiguration: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack35 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack35 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label13;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginManagement", null, $u2);

        if $stack18 == 0 goto label08;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.PluginManagement parsePluginManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginConfiguration: void setPluginManagement(org.apache.maven.model.PluginManagement)>($stack30);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u2);

        if $stack19 == 0 goto label12;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PluginConfiguration: void setPlugins(java.util.List)>($u3);

     label09:
        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack22 != 2 goto label11;

        $stack23 = "plugin";

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack25 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>($stack24);

        if $stack25 == 0 goto label10;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack28 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack28);

        goto label09;

     label10:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label09;

     label11:
        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label13:
        return $u0;
    }

    private org.apache.maven.model.PluginContainer parsePluginContainer(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack22, $stack23, name;
        int $stack13, $stack14, $stack15, $stack33, i, $stack17, $stack21;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack24;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Plugin $stack27;
        org.apache.maven.model.PluginContainer $u0;
        org.apache.maven.model.InputLocation $u1;
        java.util.HashSet $u2;
        java.util.ArrayList $u3;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PluginContainer;

        specialinvoke $u0.<org.apache.maven.model.PluginContainer: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginContainer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack33 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack33 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u2);

        if $stack18 == 0 goto label11;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PluginContainer: void setPlugins(java.util.List)>($u3);

     label08:
        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack21 != 2 goto label10;

        $stack22 = "plugin";

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23);

        if $stack24 == 0 goto label09;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack27);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.PluginExecution parsePluginExecution(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack33, $stack34, $stack40, $stack41, $stack50, $stack51, $stack56, $stack57, $stack61, $stack62, name;
        int $stack13, $stack14, $stack15, $stack25, $stack26, $stack31, $stack32, $stack37, $stack38, $stack46, $stack47, $stack48, $stack54, $stack55, $stack59, $stack60, $stack67, i, $stack17, $stack39;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack42;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack29;
        java.lang.Integer $stack49;
        org.apache.maven.model.PluginExecution $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u6, $u7, $u8, $u9;
        java.util.HashSet $u2;
        java.util.ArrayList $u5;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder $u10;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13;
        org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder $r12;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PluginExecution;

        specialinvoke $u0.<org.apache.maven.model.PluginExecution: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack67 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack67 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label16;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack59 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack60 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack59, $stack60, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $u3);

        $stack61 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack62 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack61, "id");

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setId(java.lang.String)>($stack62);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "phase", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack54 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack54, $stack55, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("phase", $u4);

        $stack56 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack57 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack56, "phase");

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setPhase(java.lang.String)>($stack57);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "goals", null, $u2);

        if $stack20 == 0 goto label13;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setGoals(java.util.List)>($u5);

        $u6 = new org.apache.maven.model.InputLocation;

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack37, $stack38, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("goals", $u6);

     label10:
        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack39 != 2 goto label12;

        $stack40 = "goal";

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack42 = virtualinvoke $stack40.<java.lang.String: boolean equals(java.lang.Object)>($stack41);

        if $stack42 == 0 goto label11;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack46, $stack47, source);

        $stack48 = interfaceinvoke $u5.<java.util.List: int size()>();

        $stack49 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack48);

        virtualinvoke $u6.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack49, $u7);

        $stack50 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack51 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack50, "goals");

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack51);

        goto label10;

     label11:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label10;

     label12:
        goto label05;

     label13:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u2);

        if $stack21 == 0 goto label14;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack31, $stack32, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("inherited", $u8);

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack34 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack33, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setInherited(java.lang.String)>($stack34);

        goto label05;

     label14:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u2);

        if $stack22 == 0 goto label15;

        $u9 = new org.apache.maven.model.InputLocation;

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack25, $stack26, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("configuration", $u9);

        $u10 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder;

        specialinvoke $u10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder: void <init>(org.apache.maven.model.InputLocation)>($u9);

        $r12 = (org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder) $u10;

        $stack29 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder)>(parser, 1, $r12);

        virtualinvoke $u0.<org.apache.maven.model.PluginExecution: void setConfiguration(java.lang.Object)>($stack29);

        goto label05;

     label15:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label16:
        return $u0;
    }

    private org.apache.maven.model.PluginManagement parsePluginManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack22, $stack23, name;
        int $stack13, $stack14, $stack15, $stack33, i, $stack17, $stack21;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack24;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Plugin $stack27;
        org.apache.maven.model.PluginManagement $u0;
        org.apache.maven.model.InputLocation $u1;
        java.util.HashSet $u2;
        java.util.ArrayList $u3;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.PluginManagement;

        specialinvoke $u0.<org.apache.maven.model.PluginManagement: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.PluginManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack33 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack33 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u2);

        if $stack18 == 0 goto label11;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.PluginManagement: void setPlugins(java.util.List)>($u3);

     label08:
        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack21 != 2 goto label10;

        $stack22 = "plugin";

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23);

        if $stack24 == 0 goto label09;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Plugin parsePlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack27);

        goto label08;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label10:
        goto label05;

     label11:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.Prerequisites parsePrerequisites(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack23, $stack24, name;
        int $stack13, $stack14, $stack15, $stack21, $stack22, $stack29, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Prerequisites $u0;
        org.apache.maven.model.InputLocation $u1, $u3;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Prerequisites;

        specialinvoke $u0.<org.apache.maven.model.Prerequisites: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Prerequisites: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label1:
        if i < 0 goto label4;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack29 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack29 < 0 goto label2;

        goto label3;

     label2:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label3:
        i = i + -1;

        goto label1;

     label4:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label5:
        if strict == 0 goto label6;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label7;

     label6:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label7:
        if $stack17 != 2 goto label9;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "maven", null, $u2);

        if $stack18 == 0 goto label8;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack21, $stack22, source);

        virtualinvoke $u0.<org.apache.maven.model.Prerequisites: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("maven", $u3);

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack23, "maven");

        virtualinvoke $u0.<org.apache.maven.model.Prerequisites: void setMaven(java.lang.String)>($stack24);

        goto label5;

     label8:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label5;

     label9:
        return $u0;
    }

    private org.apache.maven.model.Profile parseProfile(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack41, $stack42, $stack50, $stack51, $stack59, $stack60, $stack75, value, $stack85, $stack86, $stack95, $stack96, $stack103, $stack104, name, value#31;
        int $stack14, $stack15, $stack16, $stack34, $stack35, $stack68, $stack69, $stack70, $stack73, $stack74, $stack82, $stack83, $stack91, $stack92, $stack93, $stack101, $stack102, $stack109, i, $stack18, $stack84, $stack58, $stack49, $stack40;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack43, $stack52, $stack61, $stack87;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Reporting $stack32;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack38;
        org.apache.maven.model.Repository $stack46, $stack55;
        org.apache.maven.model.Dependency $stack64;
        org.apache.maven.model.DependencyManagement $stack66;
        org.apache.maven.model.DistributionManagement $stack79;
        java.lang.Integer $stack94;
        org.apache.maven.model.BuildBase $stack98;
        org.apache.maven.model.Activation $stack99;
        org.apache.maven.model.Profile $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u5, $u6, $u7, $u8, $u12;
        java.util.HashSet $u2;
        java.util.ArrayList $u4, $u9, $u10, $u11;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder $u13;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29;
        org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder $r26;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Profile;

        specialinvoke $u0.<org.apache.maven.model.Profile: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack14, $stack15, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack16 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack109 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack109 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack18 != 2 goto label34;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u2);

        if $stack19 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack101 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack102 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack101, $stack102, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $u3);

        $stack103 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack104 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack103, "id");

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setId(java.lang.String)>($stack104);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "activation", null, $u2);

        if $stack20 == 0 goto label09;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack99 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Activation parseActivation(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setActivation(org.apache.maven.model.Activation)>($stack99);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "build", null, $u2);

        if $stack21 == 0 goto label10;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack98 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.BuildBase parseBuildBase(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setBuild(org.apache.maven.model.BuildBase)>($stack98);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "modules", null, $u2);

        if $stack22 == 0 goto label14;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setModules(java.util.List)>($u4);

        $u5 = new org.apache.maven.model.InputLocation;

        $stack82 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack83 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack82, $stack83, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("modules", $u5);

     label11:
        $stack84 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack84 != 2 goto label13;

        $stack85 = "module";

        $stack86 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack87 = virtualinvoke $stack85.<java.lang.String: boolean equals(java.lang.Object)>($stack86);

        if $stack87 == 0 goto label12;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack91 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack92 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack91, $stack92, source);

        $stack93 = interfaceinvoke $u4.<java.util.List: int size()>();

        $stack94 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack93);

        virtualinvoke $u5.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack94, $u6);

        $stack95 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack96 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack95, "modules");

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack96);

        goto label11;

     label12:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label11;

     label13:
        goto label05;

     label14:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "distributionManagement", null, $u2);

        if $stack23 == 0 goto label15;

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack79 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.DistributionManagement parseDistributionManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setDistributionManagement(org.apache.maven.model.DistributionManagement)>($stack79);

        goto label05;

     label15:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack24 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u2);

        if $stack24 == 0 goto label18;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack68 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack69 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack68, $stack69, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("properties", $u7);

     label16:
        $stack70 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack70 != 2 goto label17;

        value#31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u8 = new org.apache.maven.model.InputLocation;

        $stack73 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack74 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack73, $stack74, source);

        virtualinvoke $u7.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(value#31, $u8);

        $stack75 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack75.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void addProperty(java.lang.String,java.lang.String)>(value#31, value);

        goto label16;

     label17:
        goto label05;

     label18:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack25 = specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencyManagement", null, $u2);

        if $stack25 == 0 goto label19;

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack66 = specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.DependencyManagement parseDependencyManagement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setDependencyManagement(org.apache.maven.model.DependencyManagement)>($stack66);

        goto label05;

     label19:
        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "dependencies", null, $u2);

        if $stack26 == 0 goto label23;

        $u9 = new java.util.ArrayList;

        specialinvoke $u9.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setDependencies(java.util.List)>($u9);

     label20:
        $stack58 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack58 != 2 goto label22;

        $stack59 = "dependency";

        $stack60 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack61 = virtualinvoke $stack59.<java.lang.String: boolean equals(java.lang.Object)>($stack60);

        if $stack61 == 0 goto label21;

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack64 = specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Dependency parseDependency(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u9.<java.util.List: boolean add(java.lang.Object)>($stack64);

        goto label20;

     label21:
        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label20;

     label22:
        goto label05;

     label23:
        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "repositories", null, $u2);

        if $stack27 == 0 goto label27;

        $u10 = new java.util.ArrayList;

        specialinvoke $u10.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setRepositories(java.util.List)>($u10);

     label24:
        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack49 != 2 goto label26;

        $stack50 = "repository";

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack52 = virtualinvoke $stack50.<java.lang.String: boolean equals(java.lang.Object)>($stack51);

        if $stack52 == 0 goto label25;

        $r20 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack55 = specialinvoke $r20.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u10.<java.util.List: boolean add(java.lang.Object)>($stack55);

        goto label24;

     label25:
        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label24;

     label26:
        goto label05;

     label27:
        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack28 = specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginRepositories", null, $u2);

        if $stack28 == 0 goto label31;

        $u11 = new java.util.ArrayList;

        specialinvoke $u11.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setPluginRepositories(java.util.List)>($u11);

     label28:
        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack40 != 2 goto label30;

        $stack41 = "pluginRepository";

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack43 = virtualinvoke $stack41.<java.lang.String: boolean equals(java.lang.Object)>($stack42);

        if $stack43 == 0 goto label29;

        $r23 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack46 = specialinvoke $r23.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u11.<java.util.List: boolean add(java.lang.Object)>($stack46);

        goto label28;

     label29:
        $r24 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r24.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label28;

     label30:
        goto label05;

     label31:
        $r25 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack29 = specialinvoke $r25.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reports", null, $u2);

        if $stack29 == 0 goto label32;

        $u12 = new org.apache.maven.model.InputLocation;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u12.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack34, $stack35, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("reports", $u12);

        $u13 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder;

        specialinvoke $u13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder: void <init>(org.apache.maven.model.InputLocation)>($u12);

        $r26 = (org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder) $u13;

        $stack38 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder)>(parser, 1, $r26);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setReports(java.lang.Object)>($stack38);

        goto label05;

     label32:
        $r27 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack30 = specialinvoke $r27.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reporting", null, $u2);

        if $stack30 == 0 goto label33;

        $r28 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack32 = specialinvoke $r28.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Reporting parseReporting(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Profile: void setReporting(org.apache.maven.model.Reporting)>($stack32);

        goto label05;

     label33:
        $r29 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r29.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label34:
        return $u0;
    }

    private org.apache.maven.model.Relocation parseRelocation(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack26, $stack27, $stack31, $stack32, $stack36, $stack37, $stack41, $stack42, name;
        int $stack13, $stack14, $stack15, $stack24, $stack25, $stack29, $stack30, $stack34, $stack35, $stack39, $stack40, $stack47, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Relocation $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Relocation;

        specialinvoke $u0.<org.apache.maven.model.Relocation: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack47 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack47 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack39, $stack40, source);

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $u3);

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack42 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setGroupId(java.lang.String)>($stack42);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack34, $stack35, source);

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $u4);

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setArtifactId(java.lang.String)>($stack37);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack29, $stack30, source);

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u5);

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack32 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "version");

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setVersion(java.lang.String)>($stack32);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "message", null, $u2);

        if $stack21 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack24, $stack25, source);

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("message", $u6);

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "message");

        virtualinvoke $u0.<org.apache.maven.model.Relocation: void setMessage(java.lang.String)>($stack27);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.ReportPlugin parseReportPlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack34, $stack35, $stack38, $stack39, $stack48, $stack49, $stack53, $stack54, $stack58, $stack59, name;
        int $stack13, $stack14, $stack15, $stack26, $stack27, $stack32, $stack33, $stack46, $stack47, $stack51, $stack52, $stack56, $stack57, $stack64, i, $stack17, $stack37;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack40;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack30;
        org.apache.maven.model.ReportSet $stack43;
        org.apache.maven.model.ReportPlugin $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u7, $u8;
        java.util.HashSet $u2;
        java.util.ArrayList $u6;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder $u9;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15;
        org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder $r14;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ReportPlugin;

        specialinvoke $u0.<org.apache.maven.model.ReportPlugin: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack64 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack64 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label17;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "groupId", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack56 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack56, $stack57, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $u3);

        $stack58 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack59 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack58, "groupId");

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setGroupId(java.lang.String)>($stack59);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "artifactId", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack51 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack52 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack51, $stack52, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $u4);

        $stack53 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack54 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack53, "artifactId");

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setArtifactId(java.lang.String)>($stack54);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack46, $stack47, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $u5);

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack49 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack48, "version");

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setVersion(java.lang.String)>($stack49);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reportSets", null, $u2);

        if $stack21 == 0 goto label14;

        $u6 = new java.util.ArrayList;

        specialinvoke $u6.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setReportSets(java.util.List)>($u6);

     label11:
        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack37 != 2 goto label13;

        $stack38 = "reportSet";

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack40 = virtualinvoke $stack38.<java.lang.String: boolean equals(java.lang.Object)>($stack39);

        if $stack40 == 0 goto label12;

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack43 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.ReportSet parseReportSet(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u6.<java.util.List: boolean add(java.lang.Object)>($stack43);

        goto label11;

     label12:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label11;

     label13:
        goto label05;

     label14:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u2);

        if $stack22 == 0 goto label15;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack32, $stack33, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("inherited", $u7);

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack35 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setInherited(java.lang.String)>($stack35);

        goto label05;

     label15:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u2);

        if $stack23 == 0 goto label16;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack26, $stack27, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("configuration", $u8);

        $u9 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder;

        specialinvoke $u9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder: void <init>(org.apache.maven.model.InputLocation)>($u8);

        $r14 = (org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder) $u9;

        $stack30 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder)>(parser, 1, $r14);

        virtualinvoke $u0.<org.apache.maven.model.ReportPlugin: void setConfiguration(java.lang.Object)>($stack30);

        goto label05;

     label16:
        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label17:
        return $u0;
    }

    private org.apache.maven.model.ReportSet parseReportSet(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack32, $stack33, $stack39, $stack40, $stack49, $stack50, $stack55, $stack56, name;
        int $stack13, $stack14, $stack15, $stack24, $stack25, $stack30, $stack31, $stack36, $stack37, $stack45, $stack46, $stack47, $stack53, $stack54, $stack61, i, $stack17, $stack38;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack41;
        MavenXpp3ReaderEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack28;
        java.lang.Integer $stack48;
        org.apache.maven.model.ReportSet $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u5, $u6, $u7, $u8;
        java.util.HashSet $u2;
        java.util.ArrayList $u4;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder $u9;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11;
        org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder $r10;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.ReportSet;

        specialinvoke $u0.<org.apache.maven.model.ReportSet: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack61 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack61 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label15;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack53 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack54 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack53, $stack54, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $u3);

        $stack55 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack56 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack55, "id");

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setId(java.lang.String)>($stack56);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "reports", null, $u2);

        if $stack19 == 0 goto label12;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setReports(java.util.List)>($u4);

        $u5 = new org.apache.maven.model.InputLocation;

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack36, $stack37, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("reports", $u5);

     label09:
        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack38 != 2 goto label11;

        $stack39 = "report";

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack41 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>($stack40);

        if $stack41 == 0 goto label10;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack45, $stack46, source);

        $stack47 = interfaceinvoke $u4.<java.util.List: int size()>();

        $stack48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack47);

        virtualinvoke $u5.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack48, $u6);

        $stack49 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack50 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack49, "reports");

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack50);

        goto label09;

     label10:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label09;

     label11:
        goto label05;

     label12:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "inherited", null, $u2);

        if $stack20 == 0 goto label13;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack30, $stack31, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("inherited", $u7);

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack33 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack32, "inherited");

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setInherited(java.lang.String)>($stack33);

        goto label05;

     label13:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u2);

        if $stack21 == 0 goto label14;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack24, $stack25, source);

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("configuration", $u8);

        $u9 = new org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder;

        specialinvoke $u9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx$Xpp3DomBuilderInputLocationBuilder: void <init>(org.apache.maven.model.InputLocation)>($u8);

        $r10 = (org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder) $u9;

        $stack28 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.codehaus.plexus.util.xml.Xpp3DomBuilder$InputLocationBuilder)>(parser, 1, $r10);

        virtualinvoke $u0.<org.apache.maven.model.ReportSet: void setConfiguration(java.lang.Object)>($stack28);

        goto label05;

     label14:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label15:
        return $u0;
    }

    private org.apache.maven.model.Reporting parseReporting(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack24, $stack25, $stack34, $stack35, $stack39, $stack40, name;
        int $stack13, $stack14, $stack15, $stack32, $stack33, $stack37, $stack38, $stack45, i, $stack17, $stack23;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack26;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.ReportPlugin $stack29;
        org.apache.maven.model.Reporting $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4;
        java.util.HashSet $u2;
        java.util.ArrayList $u5;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Reporting;

        specialinvoke $u0.<org.apache.maven.model.Reporting: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Reporting: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack45 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack45 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label14;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "excludeDefaults", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack37, $stack38, source);

        virtualinvoke $u0.<org.apache.maven.model.Reporting: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("excludeDefaults", $u3);

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack40 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack39, "excludeDefaults");

        virtualinvoke $u0.<org.apache.maven.model.Reporting: void setExcludeDefaults(java.lang.String)>($stack40);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "outputDirectory", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack32, $stack33, source);

        virtualinvoke $u0.<org.apache.maven.model.Reporting: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("outputDirectory", $u4);

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack35 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "outputDirectory");

        virtualinvoke $u0.<org.apache.maven.model.Reporting: void setOutputDirectory(java.lang.String)>($stack35);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "plugins", null, $u2);

        if $stack20 == 0 goto label13;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Reporting: void setPlugins(java.util.List)>($u5);

     label10:
        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack23 != 2 goto label12;

        $stack24 = "plugin";

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack26 = virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>($stack25);

        if $stack26 == 0 goto label11;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack29 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.ReportPlugin parseReportPlugin(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack29);

        goto label10;

     label11:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label10;

     label12:
        goto label05;

     label13:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label14:
        return $u0;
    }

    private org.apache.maven.model.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack28, $stack29, $stack33, $stack34, $stack38, $stack39, $stack43, $stack44, name;
        int $stack13, $stack14, $stack15, $stack26, $stack27, $stack31, $stack32, $stack36, $stack37, $stack41, $stack42, $stack51, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.RepositoryPolicy $stack45, $stack46;
        org.apache.maven.model.Repository $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Repository;

        specialinvoke $u0.<org.apache.maven.model.Repository: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack51 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack51 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label14;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "releases", null, $u2);

        if $stack18 == 0 goto label08;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack46 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setReleases(org.apache.maven.model.RepositoryPolicy)>($stack46);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "snapshots", null, $u2);

        if $stack19 == 0 goto label09;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack45 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setSnapshots(org.apache.maven.model.RepositoryPolicy)>($stack45);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u2);

        if $stack20 == 0 goto label10;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack42 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack41, $stack42, source);

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $u3);

        $stack43 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack44 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack43, "id");

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setId(java.lang.String)>($stack44);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack21 == 0 goto label11;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack36, $stack37, source);

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u4);

        $stack38 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack39 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack38, "name");

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setName(java.lang.String)>($stack39);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u2);

        if $stack22 == 0 goto label12;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack31, $stack32, source);

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u5);

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack34 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack33, "url");

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setUrl(java.lang.String)>($stack34);

        goto label05;

     label12:
        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack23 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "layout", null, $u2);

        if $stack23 == 0 goto label13;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack26, $stack27, source);

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("layout", $u6);

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack29 = specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack28, "layout");

        virtualinvoke $u0.<org.apache.maven.model.Repository: void setLayout(java.lang.String)>($stack29);

        goto label05;

     label13:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label14:
        return $u0;
    }

    private org.apache.maven.model.RepositoryBase parseRepositoryBase(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack26, $stack27, $stack31, $stack32, $stack36, $stack37, $stack41, $stack42, name;
        int $stack13, $stack14, $stack15, $stack24, $stack25, $stack29, $stack30, $stack34, $stack35, $stack39, $stack40, $stack47, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.RepositoryBase $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u6;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.RepositoryBase;

        specialinvoke $u0.<org.apache.maven.model.RepositoryBase: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack47 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack47 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label12;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack39, $stack40, source);

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $u3);

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack42 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "id");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setId(java.lang.String)>($stack42);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack34, $stack35, source);

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u4);

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "name");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setName(java.lang.String)>($stack37);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack29, $stack30, source);

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u5);

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack32 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "url");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setUrl(java.lang.String)>($stack32);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "layout", null, $u2);

        if $stack21 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack24, $stack25, source);

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("layout", $u6);

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "layout");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryBase: void setLayout(java.lang.String)>($stack27);

        goto label05;

     label11:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.model.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack25, $stack26, $stack30, $stack31, $stack35, $stack36, name;
        int $stack13, $stack14, $stack15, $stack23, $stack24, $stack28, $stack29, $stack33, $stack34, $stack41, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.RepositoryPolicy $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5;
        java.util.HashSet $u2;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.RepositoryPolicy;

        specialinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack41 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack41 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label11;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "enabled", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack33, $stack34, source);

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("enabled", $u3);

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack36 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack35, "enabled");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setEnabled(java.lang.String)>($stack36);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "updatePolicy", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack28, $stack29, source);

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("updatePolicy", $u4);

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack31 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack30, "updatePolicy");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setUpdatePolicy(java.lang.String)>($stack31);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "checksumPolicy", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack23, $stack24, source);

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("checksumPolicy", $u5);

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack25, "checksumPolicy");

        virtualinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void setChecksumPolicy(java.lang.String)>($stack26);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label11:
        return $u0;
    }

    private org.apache.maven.model.Resource parseResource(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack29, $stack30, $stack39, $stack40, $stack47, $stack48, $stack57, $stack58, $stack63, $stack64, $stack68, $stack69, $stack73, $stack74, name;
        int $stack13, $stack14, $stack15, $stack26, $stack27, $stack35, $stack36, $stack37, $stack44, $stack45, $stack53, $stack54, $stack55, $stack61, $stack62, $stack66, $stack67, $stack71, $stack72, $stack79, i, $stack17, $stack46, $stack28;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack22, $stack31, $stack49;
        MavenXpp3ReaderEx this;
        java.lang.Integer $stack38, $stack56;
        org.apache.maven.model.Resource $u0;
        org.apache.maven.model.InputLocation $u1, $u3, $u4, $u5, $u7, $u8, $u10, $u11;
        java.util.HashSet $u2;
        java.util.ArrayList $u6, $u9;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Resource;

        specialinvoke $u0.<org.apache.maven.model.Resource: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack79 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack79 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack17 != 2 goto label19;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "targetPath", null, $u2);

        if $stack18 == 0 goto label08;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack71 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack72 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack71, $stack72, source);

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("targetPath", $u3);

        $stack73 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack74 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack73, "targetPath");

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setTargetPath(java.lang.String)>($stack74);

        goto label05;

     label08:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "filtering", null, $u2);

        if $stack19 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack66 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack67 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack66, $stack67, source);

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("filtering", $u4);

        $stack68 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack69 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack68, "filtering");

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setFiltering(java.lang.String)>($stack69);

        goto label05;

     label09:
        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "directory", null, $u2);

        if $stack20 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack61 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack62 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack61, $stack62, source);

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("directory", $u5);

        $stack63 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack64 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack63, "directory");

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setDirectory(java.lang.String)>($stack64);

        goto label05;

     label10:
        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "includes", null, $u2);

        if $stack21 == 0 goto label14;

        $u6 = new java.util.ArrayList;

        specialinvoke $u6.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setIncludes(java.util.List)>($u6);

        $u7 = new org.apache.maven.model.InputLocation;

        $stack44 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack44, $stack45, source);

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("includes", $u7);

     label11:
        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack46 != 2 goto label13;

        $stack47 = "include";

        $stack48 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack49 = virtualinvoke $stack47.<java.lang.String: boolean equals(java.lang.Object)>($stack48);

        if $stack49 == 0 goto label12;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack53 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack54 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack53, $stack54, source);

        $stack55 = interfaceinvoke $u6.<java.util.List: int size()>();

        $stack56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack55);

        virtualinvoke $u7.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack56, $u8);

        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack58 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack57, "includes");

        interfaceinvoke $u6.<java.util.List: boolean add(java.lang.Object)>($stack58);

        goto label11;

     label12:
        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label11;

     label13:
        goto label05;

     label14:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack22 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "excludes", null, $u2);

        if $stack22 == 0 goto label18;

        $u9 = new java.util.ArrayList;

        specialinvoke $u9.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setExcludes(java.util.List)>($u9);

        $u10 = new org.apache.maven.model.InputLocation;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u10.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack26, $stack27, source);

        virtualinvoke $u0.<org.apache.maven.model.Resource: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("excludes", $u10);

     label15:
        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack28 != 2 goto label17;

        $stack29 = "exclude";

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack31 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>($stack30);

        if $stack31 == 0 goto label16;

        $u11 = new org.apache.maven.model.InputLocation;

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u11.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack35, $stack36, source);

        $stack37 = interfaceinvoke $u9.<java.util.List: int size()>();

        $stack38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack37);

        virtualinvoke $u10.<org.apache.maven.model.InputLocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>($stack38, $u11);

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack40 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack39, "excludes");

        interfaceinvoke $u9.<java.util.List: boolean add(java.lang.Object)>($stack40);

        goto label15;

     label16:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label15;

     label17:
        goto label05;

     label18:
        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label19:
        return $u0;
    }

    private org.apache.maven.model.Scm parseScm(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack26, $stack27, $stack31, $stack32, $stack36, $stack37, $stack41, $stack42, name, value, $stack48, $stack50, $stack52, $stack58, $stack62, $stack66;
        int $stack13, $stack14, $stack15, $stack24, $stack25, $stack29, $stack30, $stack34, $stack35, $stack39, $stack40, $stack47, $stack56, $stack57, $stack60, $stack61, $stack64, $stack65, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack21, $stack49, $stack51, $stack53;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Scm $u0;
        org.apache.maven.model.InputLocation $u1, $u2, $u3, $u4, $u6, $u7, $u8, $u9;
        java.util.HashSet $u5;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Scm;

        specialinvoke $u0.<org.apache.maven.model.Scm: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label07;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        value = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack47 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack47 < 0 goto label02;

        goto label06;

     label02:
        $stack48 = "child.scm.connection.inherit.append.path";

        $stack49 = virtualinvoke $stack48.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack49 == 0 goto label03;

        $u2 = new org.apache.maven.model.InputLocation;

        $stack64 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack65 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u2.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack64, $stack65, source);

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("childScmConnectionInheritAppendPath", $u2);

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack66 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.scm.connection.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setChildScmConnectionInheritAppendPath(java.lang.String)>($stack66);

        goto label06;

     label03:
        $stack50 = "child.scm.developerConnection.inherit.append.path";

        $stack51 = virtualinvoke $stack50.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack51 == 0 goto label04;

        $u3 = new org.apache.maven.model.InputLocation;

        $stack60 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack61 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u3.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack60, $stack61, source);

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("childScmDeveloperConnectionInheritAppendPath", $u3);

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack62 = specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.scm.developerConnection.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setChildScmDeveloperConnectionInheritAppendPath(java.lang.String)>($stack62);

        goto label06;

     label04:
        $stack52 = "child.scm.url.inherit.append.path";

        $stack53 = virtualinvoke $stack52.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack53 == 0 goto label05;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack56 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack57 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack56, $stack57, source);

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("childScmUrlInheritAppendPath", $u4);

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack58 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.scm.url.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setChildScmUrlInheritAppendPath(java.lang.String)>($stack58);

        goto label06;

     label05:
        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label06:
        i = i + -1;

        goto label01;

     label07:
        $u5 = new java.util.HashSet;

        specialinvoke $u5.<java.util.HashSet: void <init>()>();

     label08:
        if strict == 0 goto label09;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label10;

     label09:
        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label10:
        if $stack17 != 2 goto label15;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "connection", null, $u5);

        if $stack18 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack40 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack39, $stack40, source);

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("connection", $u6);

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack42 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "connection");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setConnection(java.lang.String)>($stack42);

        goto label08;

     label11:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "developerConnection", null, $u5);

        if $stack19 == 0 goto label12;

        $u7 = new org.apache.maven.model.InputLocation;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u7.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack34, $stack35, source);

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("developerConnection", $u7);

        $stack36 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack37 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack36, "developerConnection");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setDeveloperConnection(java.lang.String)>($stack37);

        goto label08;

     label12:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "tag", null, $u5);

        if $stack20 == 0 goto label13;

        $u8 = new org.apache.maven.model.InputLocation;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u8.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack29, $stack30, source);

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("tag", $u8);

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack32 = specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "tag");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setTag(java.lang.String)>($stack32);

        goto label08;

     label13:
        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack21 = specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u5);

        if $stack21 == 0 goto label14;

        $u9 = new org.apache.maven.model.InputLocation;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u9.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack24, $stack25, source);

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u9);

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack27 = specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "url");

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setUrl(java.lang.String)>($stack27);

        goto label08;

     label14:
        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label08;

     label15:
        return $u0;
    }

    private org.apache.maven.model.Site parseSite(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack25, $stack26, $stack30, $stack31, $stack35, $stack36, name, value, $stack42, $stack48;
        int $stack13, $stack14, $stack15, $stack23, $stack24, $stack28, $stack29, $stack33, $stack34, $stack41, $stack46, $stack47, i, $stack17;
        org.apache.maven.model.InputSource source;
        boolean strict, $stack18, $stack19, $stack20, $stack43;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.Site $u0;
        org.apache.maven.model.InputLocation $u1, $u2, $u4, $u5, $u6;
        java.util.HashSet $u3;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.model.Site;

        specialinvoke $u0.<org.apache.maven.model.Site: void <init>()>();

        $u1 = new org.apache.maven.model.InputLocation;

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u1.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack13, $stack14, source);

        virtualinvoke $u0.<org.apache.maven.model.Site: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u1);

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack15 - 1;

     label01:
        if i < 0 goto label05;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        value = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack41 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack41 < 0 goto label02;

        goto label04;

     label02:
        $stack42 = "child.site.url.inherit.append.path";

        $stack43 = virtualinvoke $stack42.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack43 == 0 goto label03;

        $u2 = new org.apache.maven.model.InputLocation;

        $stack46 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u2.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack46, $stack47, source);

        virtualinvoke $u0.<org.apache.maven.model.Site: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("childSiteUrlInheritAppendPath", $u2);

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack48 = specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>(value, "child.site.url.inherit.append.path");

        virtualinvoke $u0.<org.apache.maven.model.Site: void setChildSiteUrlInheritAppendPath(java.lang.String)>($stack48);

        goto label04;

     label03:
        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label04:
        i = i + -1;

        goto label01;

     label05:
        $u3 = new java.util.HashSet;

        specialinvoke $u3.<java.util.HashSet: void <init>()>();

     label06:
        if strict == 0 goto label07;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label08;

     label07:
        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack17 = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label08:
        if $stack17 != 2 goto label12;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack18 = specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u3);

        if $stack18 == 0 goto label09;

        $u4 = new org.apache.maven.model.InputLocation;

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack33, $stack34, source);

        virtualinvoke $u0.<org.apache.maven.model.Site: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $u4);

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack36 = specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack35, "id");

        virtualinvoke $u0.<org.apache.maven.model.Site: void setId(java.lang.String)>($stack36);

        goto label06;

     label09:
        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack19 = specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u3);

        if $stack19 == 0 goto label10;

        $u5 = new org.apache.maven.model.InputLocation;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u5.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack28, $stack29, source);

        virtualinvoke $u0.<org.apache.maven.model.Site: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $u5);

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack31 = specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack30, "name");

        virtualinvoke $u0.<org.apache.maven.model.Site: void setName(java.lang.String)>($stack31);

        goto label06;

     label10:
        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack20 = specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u3);

        if $stack20 == 0 goto label11;

        $u6 = new org.apache.maven.model.InputLocation;

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getLineNumber()>();

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getColumnNumber()>();

        specialinvoke $u6.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>($stack23, $stack24, source);

        virtualinvoke $u0.<org.apache.maven.model.Site: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $u6);

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $stack26 = specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack25, "url");

        virtualinvoke $u0.<org.apache.maven.model.Site: void setUrl(java.lang.String)>($stack26);

        goto label06;

     label11:
        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label06;

     label12:
        return $u0;
    }

    private org.apache.maven.model.Model read(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean, org.apache.maven.model.InputSource) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        boolean strict, $stack18, parsed;
        MavenXpp3ReaderEx this;
        org.apache.maven.model.InputSource source;
        java.lang.String $stack13, $stack16, $stack17, $stack23, $stack26;
        java.lang.StringBuilder $stack22, $stack24, $stack25, $u0;
        org.apache.maven.model.Model model;
        int eventType;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1, $u2, $u3;
        java.lang.Throwable $r0, $r1, $r3;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r2;

        this := @this: MavenXpp3ReaderEx;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        source := @parameter2: org.apache.maven.model.InputSource;

        model = null;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getEventType()>();

        parsed = 0;

     label1:
        if eventType == 1 goto label5;

        if eventType != 2 goto label4;

        if strict == 0 goto label2;

        $stack16 = "project";

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack18 = virtualinvoke $stack16.<java.lang.String: boolean equals(java.lang.Object)>($stack17);

        if $stack18 != 0 goto label2;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack22 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected root element \'project\' but found \'");

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack26, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        if parsed == 0 goto label3;

        $u2 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        specialinvoke $u2.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>("Duplicated tag: \'project\'", parser, null);

        $r1 = (java.lang.Throwable) $u2;

        throw $r1;

     label3:
        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        model = specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: org.apache.maven.model.Model parseModel(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean,org.apache.maven.model.InputSource)>(parser, strict, source);

        $stack13 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getInputEncoding()>();

        virtualinvoke model.<org.apache.maven.model.Model: void setModelEncoding(java.lang.String)>($stack13);

        parsed = 1;

     label4:
        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

        goto label1;

     label5:
        if parsed == 0 goto label6;

        return model;

     label6:
        $u3 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        specialinvoke $u3.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>("Expected root element \'project\' but found no element at all: invalid XML document", parser, null);

        $r3 = (java.lang.Throwable) $u3;

        throw $r3;
    }

    public void setAddDefaultEntities(boolean)
    {
        MavenXpp3ReaderEx this;
        boolean addDefaultEntities;
        org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx $r0;

        this := @this: MavenXpp3ReaderEx;

        addDefaultEntities := @parameter0: boolean;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx) this;

        $r0.<org.apache.maven.model.io.xpp3.MavenXpp3ReaderEx: boolean addDefaultEntities> = addDefaultEntities;

        return;
    }
}
