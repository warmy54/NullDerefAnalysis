public class MavenXpp3Writer extends java.lang.Object
{
    private static final java.lang.String NAMESPACE;
    private java.lang.String fileComment;

    public void <init>()
    {
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0;

        this := @this: MavenXpp3Writer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String fileComment> = null;

        return;
    }

    public void setFileComment(java.lang.String)
    {
        MavenXpp3Writer this;
        java.lang.String fileComment;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0;

        this := @this: MavenXpp3Writer;

        fileComment := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String fileComment> = fileComment;

        return;
    }

    public void write(java.io.Writer, org.apache.maven.model.Model) throws java.io.IOException
    {
        java.io.Writer writer;
        org.apache.maven.model.Model model;
        java.lang.String $stack5;
        MavenXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r4;

        this := @this: MavenXpp3Writer;

        writer := @parameter0: java.io.Writer;

        model := @parameter1: org.apache.maven.model.Model;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.Writer)>(writer);

        $stack5 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack5, null);

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeModel(org.apache.maven.model.Model,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(model, "project", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    public void write(java.io.OutputStream, org.apache.maven.model.Model) throws java.io.IOException
    {
        java.io.OutputStream stream;
        org.apache.maven.model.Model model;
        java.lang.String $stack5, $stack6;
        MavenXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r4;

        this := @this: MavenXpp3Writer;

        stream := @parameter0: java.io.OutputStream;

        model := @parameter1: org.apache.maven.model.Model;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $stack5 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelEncoding()>();

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(stream, $stack5);

        $stack6 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack6, null);

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeModel(org.apache.maven.model.Model,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(model, "project", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    private void writeActivation(org.apache.maven.model.Activation, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack28, $stack31;
        java.lang.String tagName, $stack4, $stack7, $stack11, $stack20, $stack22, $stack24, $stack27, $stack30, $stack32;
        org.apache.maven.model.Activation activation;
        boolean $stack6, $stack29;
        org.apache.maven.model.ActivationOS $stack8, $stack18;
        org.apache.maven.model.ActivationProperty $stack9, $stack16;
        org.apache.maven.model.ActivationFile $stack10, $stack13;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1, $r2;

        this := @this: MavenXpp3Writer;

        activation := @parameter0: org.apache.maven.model.Activation;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activation.<org.apache.maven.model.Activation: boolean isActiveByDefault()>();

        if $stack6 == 0 goto label1;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "activeByDefault");

        $stack29 = virtualinvoke activation.<org.apache.maven.model.Activation: boolean isActiveByDefault()>();

        $stack30 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack29);

        $stack31 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack30);

        $stack32 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack31.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack32, "activeByDefault");

     label1:
        $stack7 = virtualinvoke activation.<org.apache.maven.model.Activation: java.lang.String getJdk()>();

        if $stack7 == null goto label2;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "jdk");

        $stack22 = virtualinvoke activation.<org.apache.maven.model.Activation: java.lang.String getJdk()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "jdk");

     label2:
        $stack8 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationOS getOs()>();

        if $stack8 == null goto label3;

        $stack18 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationOS getOs()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeActivationOS(org.apache.maven.model.ActivationOS,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack18, "os", serializer);

     label3:
        $stack9 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationProperty getProperty()>();

        if $stack9 == null goto label4;

        $stack16 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationProperty getProperty()>();

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeActivationProperty(org.apache.maven.model.ActivationProperty,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack16, "property", serializer);

     label4:
        $stack10 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationFile getFile()>();

        if $stack10 == null goto label5;

        $stack13 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationFile getFile()>();

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeActivationFile(org.apache.maven.model.ActivationFile,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack13, "file", serializer);

     label5:
        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writeActivationFile(org.apache.maven.model.ActivationFile, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.ActivationFile activationFile;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        activationFile := @parameter0: org.apache.maven.model.ActivationFile;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "missing");

        $stack20 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "missing");

     label1:
        $stack7 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "exists");

        $stack12 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "exists");

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeActivationOS(org.apache.maven.model.ActivationOS, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30, $stack35, $stack37;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36, $stack38;
        org.apache.maven.model.ActivationOS activationOS;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        activationOS := @parameter0: org.apache.maven.model.ActivationOS;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "name");

        $stack36 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getName()>();

        $stack37 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack36);

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "name");

     label1:
        $stack7 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getFamily()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "family");

        $stack29 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getFamily()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "family");

     label2:
        $stack8 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getArch()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "arch");

        $stack22 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getArch()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "arch");

     label3:
        $stack9 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getVersion()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "version");

        $stack14 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getVersion()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "version");

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeActivationProperty(org.apache.maven.model.ActivationProperty, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.ActivationProperty activationProperty;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        activationProperty := @parameter0: org.apache.maven.model.ActivationProperty;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "name");

        $stack20 = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getName()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "name");

     label1:
        $stack7 = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getValue()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "value");

        $stack12 = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getValue()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "value");

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeBuild(org.apache.maven.model.Build, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack51, $stack52, $stack57, $stack59, $stack64, $stack66, $stack95, $stack97, $stack114, $stack116, $stack121, $stack123, $stack128, $stack130, $stack135, $stack137, $stack142, $stack144;
        java.lang.String tagName, $stack6, $stack8, $stack9, $stack10, $stack11, $stack12, $stack18, $stack28, $stack33, $stack42, $stack47, $stack50, $stack53, $stack56, $stack58, $stack60, $stack63, $stack65, $stack67, $stack73, $stack78, $stack85, $stack90, $stack94, $stack96, $stack98, $stack104, $stack109, $stack113, $stack115, $stack117, $stack120, $stack122, $stack124, $stack127, $stack129, $stack131, $stack134, $stack136, $stack138, $stack141, $stack143, $stack145, $stack14, $stack17, o#20, $stack22;
        org.apache.maven.model.Build build;
        java.util.List $stack13, $stack15, $stack19, $stack21, $stack24, $stack30, $stack39, $stack44, $stack70, $stack75, $stack82, $stack87, $stack101, $stack106, $stack16;
        int $stack25, $stack40, $stack71, $stack83, $stack102;
        boolean $stack32, $stack46, $stack77, $stack89, $stack108;
        java.lang.Object $stack35, $stack49, $stack80, $stack92, $stack111;
        MavenXpp3Writer this;
        org.apache.maven.model.PluginManagement $stack37, $stack20;
        java.util.Iterator iter;
        org.apache.maven.model.Extension o;
        org.apache.maven.model.Resource o#8;
        org.apache.maven.model.Plugin o#26;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1, $r2, $r3, $r4;

        this := @this: MavenXpp3Writer;

        build := @parameter0: org.apache.maven.model.Build;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getSourceDirectory()>();

        if $stack8 == null goto label01;

        $stack141 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack142 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack141, "sourceDirectory");

        $stack143 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getSourceDirectory()>();

        $stack144 = interfaceinvoke $stack142.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack143);

        $stack145 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack144.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack145, "sourceDirectory");

     label01:
        $stack9 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getScriptSourceDirectory()>();

        if $stack9 == null goto label02;

        $stack134 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack135 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack134, "scriptSourceDirectory");

        $stack136 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getScriptSourceDirectory()>();

        $stack137 = interfaceinvoke $stack135.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack136);

        $stack138 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack137.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack138, "scriptSourceDirectory");

     label02:
        $stack10 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestSourceDirectory()>();

        if $stack10 == null goto label03;

        $stack127 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack128 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack127, "testSourceDirectory");

        $stack129 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestSourceDirectory()>();

        $stack130 = interfaceinvoke $stack128.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack129);

        $stack131 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack130.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack131, "testSourceDirectory");

     label03:
        $stack11 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getOutputDirectory()>();

        if $stack11 == null goto label04;

        $stack120 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack121 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack120, "outputDirectory");

        $stack122 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getOutputDirectory()>();

        $stack123 = interfaceinvoke $stack121.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack122);

        $stack124 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack123.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack124, "outputDirectory");

     label04:
        $stack12 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestOutputDirectory()>();

        if $stack12 == null goto label05;

        $stack113 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack114 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack113, "testOutputDirectory");

        $stack115 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestOutputDirectory()>();

        $stack116 = interfaceinvoke $stack114.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack115);

        $stack117 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack116.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack117, "testOutputDirectory");

     label05:
        $stack13 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        if $stack13 == null goto label08;

        $stack101 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        $stack102 = interfaceinvoke $stack101.<java.util.List: int size()>();

        if $stack102 <= 0 goto label08;

        $stack104 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack104, "extensions");

        $stack106 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        iter = interfaceinvoke $stack106.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack108 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack108 == 0 goto label07;

        $stack111 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Extension) $stack111;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeExtension(org.apache.maven.model.Extension,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "extension", serializer);

        goto label06;

     label07:
        $stack109 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack109, "extensions");

     label08:
        $stack14 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getDefaultGoal()>();

        if $stack14 == null goto label09;

        $stack94 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack95 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack94, "defaultGoal");

        $stack96 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getDefaultGoal()>();

        $stack97 = interfaceinvoke $stack95.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack96);

        $stack98 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack97.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack98, "defaultGoal");

     label09:
        $stack15 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getResources()>();

        if $stack15 == null goto label12;

        $stack82 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getResources()>();

        $stack83 = interfaceinvoke $stack82.<java.util.List: int size()>();

        if $stack83 <= 0 goto label12;

        $stack85 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack85, "resources");

        $stack87 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getResources()>();

        iter = interfaceinvoke $stack87.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $stack89 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack89 == 0 goto label11;

        $stack92 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#8 = (org.apache.maven.model.Resource) $stack92;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeResource(org.apache.maven.model.Resource,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#8, "resource", serializer);

        goto label10;

     label11:
        $stack90 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack90, "resources");

     label12:
        $stack16 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getTestResources()>();

        if $stack16 == null goto label15;

        $stack70 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getTestResources()>();

        $stack71 = interfaceinvoke $stack70.<java.util.List: int size()>();

        if $stack71 <= 0 goto label15;

        $stack73 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack73, "testResources");

        $stack75 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getTestResources()>();

        iter = interfaceinvoke $stack75.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $stack77 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack77 == 0 goto label14;

        $stack80 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#8 = (org.apache.maven.model.Resource) $stack80;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeResource(org.apache.maven.model.Resource,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#8, "testResource", serializer);

        goto label13;

     label14:
        $stack78 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack78, "testResources");

     label15:
        $stack17 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getDirectory()>();

        if $stack17 == null goto label16;

        $stack63 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack64 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack63, "directory");

        $stack65 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getDirectory()>();

        $stack66 = interfaceinvoke $stack64.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack65);

        $stack67 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack67, "directory");

     label16:
        $stack18 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getFinalName()>();

        if $stack18 == null goto label17;

        $stack56 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack57 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack56, "finalName");

        $stack58 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getFinalName()>();

        $stack59 = interfaceinvoke $stack57.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack58);

        $stack60 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack59.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack60, "finalName");

     label17:
        $stack19 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getFilters()>();

        if $stack19 == null goto label20;

        $stack39 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getFilters()>();

        $stack40 = interfaceinvoke $stack39.<java.util.List: int size()>();

        if $stack40 <= 0 goto label20;

        $stack42 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack42, "filters");

        $stack44 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getFilters()>();

        iter = interfaceinvoke $stack44.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $stack46 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack46 == 0 goto label19;

        $stack49 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#20 = (java.lang.String) $stack49;

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack51 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack50, "filter");

        $stack52 = interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(o#20);

        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack52.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack53, "filter");

        goto label18;

     label19:
        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack47, "filters");

     label20:
        $stack20 = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if $stack20 == null goto label21;

        $stack37 = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePluginManagement(org.apache.maven.model.PluginManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack37, "pluginManagement", serializer);

     label21:
        $stack21 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        if $stack21 == null goto label24;

        $stack24 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        $stack25 = interfaceinvoke $stack24.<java.util.List: int size()>();

        if $stack25 <= 0 goto label24;

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack28, "plugins");

        $stack30 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack30.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $stack32 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack32 == 0 goto label23;

        $stack35 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#26 = (org.apache.maven.model.Plugin) $stack35;

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#26, "plugin", serializer);

        goto label22;

     label23:
        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack33, "plugins");

     label24:
        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, tagName);

        return;
    }

    private void writeBuildBase(org.apache.maven.model.BuildBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack45, $stack46, $stack51, $stack53, $stack58, $stack60, $stack89, $stack91;
        java.lang.String tagName, $stack6, $stack8, $stack12, $stack22, $stack27, $stack36, $stack41, $stack44, $stack47, $stack50, $stack52, $stack54, $stack57, $stack59, $stack61, $stack67, $stack72, $stack79, $stack84, $stack88, $stack90, $stack92, $stack11, o#14, $stack16;
        org.apache.maven.model.BuildBase buildBase;
        java.util.List $stack9, $stack13, $stack15, $stack18, $stack24, $stack33, $stack38, $stack64, $stack69, $stack76, $stack81, $stack10;
        int $stack19, $stack34, $stack65, $stack77;
        boolean $stack26, $stack40, $stack71, $stack83;
        java.lang.Object $stack29, $stack43, $stack74, $stack86;
        MavenXpp3Writer this;
        org.apache.maven.model.PluginManagement $stack31, $stack14;
        java.util.Iterator iter;
        org.apache.maven.model.Resource o;
        org.apache.maven.model.Plugin o#20;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1, $r2, $r3;

        this := @this: MavenXpp3Writer;

        buildBase := @parameter0: org.apache.maven.model.BuildBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getDefaultGoal()>();

        if $stack8 == null goto label01;

        $stack88 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack89 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack88, "defaultGoal");

        $stack90 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getDefaultGoal()>();

        $stack91 = interfaceinvoke $stack89.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack90);

        $stack92 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack91.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack92, "defaultGoal");

     label01:
        $stack9 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        if $stack9 == null goto label04;

        $stack76 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        $stack77 = interfaceinvoke $stack76.<java.util.List: int size()>();

        if $stack77 <= 0 goto label04;

        $stack79 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack79, "resources");

        $stack81 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        iter = interfaceinvoke $stack81.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $stack83 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack83 == 0 goto label03;

        $stack86 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Resource) $stack86;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeResource(org.apache.maven.model.Resource,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "resource", serializer);

        goto label02;

     label03:
        $stack84 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack84, "resources");

     label04:
        $stack10 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        if $stack10 == null goto label07;

        $stack64 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        $stack65 = interfaceinvoke $stack64.<java.util.List: int size()>();

        if $stack65 <= 0 goto label07;

        $stack67 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack67, "testResources");

        $stack69 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        iter = interfaceinvoke $stack69.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $stack71 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack71 == 0 goto label06;

        $stack74 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Resource) $stack74;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeResource(org.apache.maven.model.Resource,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "testResource", serializer);

        goto label05;

     label06:
        $stack72 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack72, "testResources");

     label07:
        $stack11 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getDirectory()>();

        if $stack11 == null goto label08;

        $stack57 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack58 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack57, "directory");

        $stack59 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getDirectory()>();

        $stack60 = interfaceinvoke $stack58.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack59);

        $stack61 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack60.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack61, "directory");

     label08:
        $stack12 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getFinalName()>();

        if $stack12 == null goto label09;

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack51 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack50, "finalName");

        $stack52 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getFinalName()>();

        $stack53 = interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack52);

        $stack54 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack53.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack54, "finalName");

     label09:
        $stack13 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        if $stack13 == null goto label12;

        $stack33 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        $stack34 = interfaceinvoke $stack33.<java.util.List: int size()>();

        if $stack34 <= 0 goto label12;

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "filters");

        $stack38 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        iter = interfaceinvoke $stack38.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $stack40 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack40 == 0 goto label11;

        $stack43 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#14 = (java.lang.String) $stack43;

        $stack44 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack45 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack44, "filter");

        $stack46 = interfaceinvoke $stack45.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(o#14);

        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack46.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack47, "filter");

        goto label10;

     label11:
        $stack41 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack41, "filters");

     label12:
        $stack14 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if $stack14 == null goto label13;

        $stack31 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: org.apache.maven.model.PluginManagement getPluginManagement()>();

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePluginManagement(org.apache.maven.model.PluginManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack31, "pluginManagement", serializer);

     label13:
        $stack15 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getPlugins()>();

        if $stack15 == null goto label16;

        $stack18 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getPlugins()>();

        $stack19 = interfaceinvoke $stack18.<java.util.List: int size()>();

        if $stack19 <= 0 goto label16;

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack22, "plugins");

        $stack24 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $stack26 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack26 == 0 goto label15;

        $stack29 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#20 = (org.apache.maven.model.Plugin) $stack29;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#20, "plugin", serializer);

        goto label14;

     label15:
        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack27, "plugins");

     label16:
        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, tagName);

        return;
    }

    private void writeCiManagement(org.apache.maven.model.CiManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack27, $stack29, $stack34, $stack36;
        java.lang.String tagName, $stack6, $stack8, $stack9, $stack17, $stack22, $stack26, $stack28, $stack30, $stack33, $stack35, $stack37, $stack11;
        org.apache.maven.model.CiManagement ciManagement;
        java.util.List $stack10, $stack13, $stack19;
        int $stack14;
        java.util.Iterator iter;
        boolean $stack21;
        java.lang.Object $stack24;
        org.apache.maven.model.Notifier o;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0;

        this := @this: MavenXpp3Writer;

        ciManagement := @parameter0: org.apache.maven.model.CiManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getSystem()>();

        if $stack8 == null goto label1;

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack34 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack33, "system");

        $stack35 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getSystem()>();

        $stack36 = interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack35);

        $stack37 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack36.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack37, "system");

     label1:
        $stack9 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getUrl()>();

        if $stack9 == null goto label2;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "url");

        $stack28 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getUrl()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "url");

     label2:
        $stack10 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.util.List getNotifiers()>();

        if $stack10 == null goto label5;

        $stack13 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.util.List getNotifiers()>();

        $stack14 = interfaceinvoke $stack13.<java.util.List: int size()>();

        if $stack14 <= 0 goto label5;

        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack17, "notifiers");

        $stack19 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.util.List getNotifiers()>();

        iter = interfaceinvoke $stack19.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack21 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label4;

        $stack24 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Notifier) $stack24;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeNotifier(org.apache.maven.model.Notifier,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "notifier", serializer);

        goto label3;

     label4:
        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "notifiers");

     label5:
        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writeConfigurationContainer(org.apache.maven.model.ConfigurationContainer, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack16, $stack18;
        java.lang.String tagName, $stack4, $stack6, $stack8, $stack11, $stack15, $stack17, $stack19;
        org.apache.maven.model.ConfigurationContainer configurationContainer;
        java.lang.Object $stack7, $stack10;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack12;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        configurationContainer := @parameter0: org.apache.maven.model.ConfigurationContainer;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke configurationContainer.<org.apache.maven.model.ConfigurationContainer: java.lang.String getInherited()>();

        if $stack6 == null goto label1;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack16 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack15, "inherited");

        $stack17 = virtualinvoke configurationContainer.<org.apache.maven.model.ConfigurationContainer: java.lang.String getInherited()>();

        $stack18 = interfaceinvoke $stack16.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack17);

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack18.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack19, "inherited");

     label1:
        $stack7 = virtualinvoke configurationContainer.<org.apache.maven.model.ConfigurationContainer: java.lang.Object getConfiguration()>();

        if $stack7 == null goto label2;

        $stack10 = virtualinvoke configurationContainer.<org.apache.maven.model.ConfigurationContainer: java.lang.Object getConfiguration()>();

        $stack12 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack10;

        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack12.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack11, serializer);

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeContributor(org.apache.maven.model.Contributor, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack35, $stack36, $stack41, $stack43, $stack59, $stack60, $stack65, $stack67, $stack72, $stack74, $stack79, $stack81, $stack86, $stack88, $stack93, $stack95;
        java.lang.String tagName, $stack7, $stack9, $stack10, $stack11, $stack12, $stack13, $stack23, $stack29, value, $stack34, $stack37, $stack40, $stack42, $stack44, $stack50, $stack55, $stack58, $stack61, $stack64, $stack66, $stack68, $stack71, $stack73, $stack75, $stack78, $stack80, $stack82, $stack85, $stack87, $stack89, $stack92, $stack94, $stack96, role, $stack15, $stack17;
        org.apache.maven.model.Contributor contributor;
        java.util.List $stack14, $stack47, $stack52;
        java.util.Properties $stack16, $stack19, $stack25, $stack32;
        int $stack20, $stack48;
        java.util.Set $stack26;
        boolean $stack28, $stack54;
        java.lang.Object $stack31, $stack33, $stack57;
        MavenXpp3Writer this;
        java.util.Iterator iter;

        this := @this: MavenXpp3Writer;

        contributor := @parameter0: org.apache.maven.model.Contributor;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack7 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        $stack9 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getName()>();

        if $stack9 == null goto label01;

        $stack92 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack93 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack92, "name");

        $stack94 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getName()>();

        $stack95 = interfaceinvoke $stack93.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack94);

        $stack96 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack95.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack96, "name");

     label01:
        $stack10 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getEmail()>();

        if $stack10 == null goto label02;

        $stack85 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack86 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack85, "email");

        $stack87 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getEmail()>();

        $stack88 = interfaceinvoke $stack86.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack87);

        $stack89 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack88.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack89, "email");

     label02:
        $stack11 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getUrl()>();

        if $stack11 == null goto label03;

        $stack78 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack79 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack78, "url");

        $stack80 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getUrl()>();

        $stack81 = interfaceinvoke $stack79.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack80);

        $stack82 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack81.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack82, "url");

     label03:
        $stack12 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganization()>();

        if $stack12 == null goto label04;

        $stack71 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack72 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack71, "organization");

        $stack73 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganization()>();

        $stack74 = interfaceinvoke $stack72.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack73);

        $stack75 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack74.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack75, "organization");

     label04:
        $stack13 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganizationUrl()>();

        if $stack13 == null goto label05;

        $stack64 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack65 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack64, "organizationUrl");

        $stack66 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganizationUrl()>();

        $stack67 = interfaceinvoke $stack65.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack66);

        $stack68 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack67.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack68, "organizationUrl");

     label05:
        $stack14 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.List getRoles()>();

        if $stack14 == null goto label08;

        $stack47 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.List getRoles()>();

        $stack48 = interfaceinvoke $stack47.<java.util.List: int size()>();

        if $stack48 <= 0 goto label08;

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack50, "roles");

        $stack52 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.List getRoles()>();

        iter = interfaceinvoke $stack52.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack54 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack54 == 0 goto label07;

        $stack57 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        role = (java.lang.String) $stack57;

        $stack58 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack59 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack58, "role");

        $stack60 = interfaceinvoke $stack59.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(role);

        $stack61 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack60.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack61, "role");

        goto label06;

     label07:
        $stack55 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack55, "roles");

     label08:
        $stack15 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getTimezone()>();

        if $stack15 == null goto label09;

        $stack40 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack41 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack40, "timezone");

        $stack42 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getTimezone()>();

        $stack43 = interfaceinvoke $stack41.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack42);

        $stack44 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack43.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack44, "timezone");

     label09:
        $stack16 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        if $stack16 == null goto label12;

        $stack19 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        $stack20 = virtualinvoke $stack19.<java.util.Properties: int size()>();

        if $stack20 <= 0 goto label12;

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack23, "properties");

        $stack25 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        $stack26 = virtualinvoke $stack25.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack26.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $stack28 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack28 == 0 goto label11;

        $stack31 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        role = (java.lang.String) $stack31;

        $stack32 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        $stack33 = virtualinvoke $stack32.<java.util.Properties: java.lang.Object get(java.lang.Object)>(role);

        value = (java.lang.String) $stack33;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, role);

        $stack36 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack37 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack36.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack37, role);

        goto label10;

     label11:
        $stack29 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack29, "properties");

     label12:
        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, tagName);

        return;
    }

    private void writeDependency(org.apache.maven.model.Dependency, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack20, $stack22, $stack40, $stack42, $stack47, $stack49, $stack54, $stack56, $stack64, $stack66, $stack70, $stack72, $stack77, $stack79, $stack84, $stack86;
        java.lang.String tagName, $stack6, $stack8, $stack9, $stack10, $stack11, $stack13, $stack14, $stack17, $stack19, $stack21, $stack23, $stack30, $stack35, $stack39, $stack41, $stack43, $stack46, $stack48, $stack50, $stack53, $stack55, $stack57, $stack60, $stack63, $stack65, $stack67, $stack69, $stack71, $stack73, $stack76, $stack78, $stack80, $stack83, $stack85, $stack87, $stack12, $stack16;
        org.apache.maven.model.Dependency dependency;
        java.util.List $stack15, $stack27, $stack32;
        int $stack28;
        java.util.Iterator iter;
        boolean $stack34, $stack61;
        java.lang.Object $stack37;
        org.apache.maven.model.Exclusion o;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0;

        this := @this: MavenXpp3Writer;

        dependency := @parameter0: org.apache.maven.model.Dependency;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        if $stack8 == null goto label01;

        $stack83 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack84 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack83, "groupId");

        $stack85 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack86 = interfaceinvoke $stack84.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack85);

        $stack87 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack86.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack87, "groupId");

     label01:
        $stack9 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        if $stack9 == null goto label02;

        $stack76 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack77 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack76, "artifactId");

        $stack78 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack79 = interfaceinvoke $stack77.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack78);

        $stack80 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack79.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack80, "artifactId");

     label02:
        $stack10 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        if $stack10 == null goto label03;

        $stack69 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack70 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack69, "version");

        $stack71 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack72 = interfaceinvoke $stack70.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack71);

        $stack73 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack72.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack73, "version");

     label03:
        $stack11 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        if $stack11 == null goto label04;

        $stack60 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        $stack61 = virtualinvoke $stack60.<java.lang.String: boolean equals(java.lang.Object)>("jar");

        if $stack61 != 0 goto label04;

        $stack63 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack64 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack63, "type");

        $stack65 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        $stack66 = interfaceinvoke $stack64.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack65);

        $stack67 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack67, "type");

     label04:
        $stack12 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        if $stack12 == null goto label05;

        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack54 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack53, "classifier");

        $stack55 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        $stack56 = interfaceinvoke $stack54.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack55);

        $stack57 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack56.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack57, "classifier");

     label05:
        $stack13 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        if $stack13 == null goto label06;

        $stack46 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack47 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack46, "scope");

        $stack48 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $stack49 = interfaceinvoke $stack47.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack48);

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "scope");

     label06:
        $stack14 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        if $stack14 == null goto label07;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "systemPath");

        $stack41 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        $stack42 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack41);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "systemPath");

     label07:
        $stack15 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        if $stack15 == null goto label10;

        $stack27 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        $stack28 = interfaceinvoke $stack27.<java.util.List: int size()>();

        if $stack28 <= 0 goto label10;

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "exclusions");

        $stack32 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        iter = interfaceinvoke $stack32.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack34 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack34 == 0 goto label09;

        $stack37 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Exclusion) $stack37;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeExclusion(org.apache.maven.model.Exclusion,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "exclusion", serializer);

        goto label08;

     label09:
        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "exclusions");

     label10:
        $stack16 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getOptional()>();

        if $stack16 == null goto label11;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "optional");

        $stack21 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getOptional()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "optional");

     label11:
        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, tagName);

        return;
    }

    private void writeDependencyManagement(org.apache.maven.model.DependencyManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        java.lang.String tagName, $stack6, $stack15, $stack20, $stack9;
        org.apache.maven.model.DependencyManagement dependencyManagement;
        java.util.List $stack8, $stack11, $stack17;
        int $stack12;
        java.util.Iterator iter;
        boolean $stack19;
        java.lang.Object $stack22;
        org.apache.maven.model.Dependency o;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0;

        this := @this: MavenXpp3Writer;

        dependencyManagement := @parameter0: org.apache.maven.model.DependencyManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke dependencyManagement.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        if $stack8 == null goto label3;

        $stack11 = virtualinvoke dependencyManagement.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        $stack12 = interfaceinvoke $stack11.<java.util.List: int size()>();

        if $stack12 <= 0 goto label3;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack15, "dependencies");

        $stack17 = virtualinvoke dependencyManagement.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        iter = interfaceinvoke $stack17.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack19 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label2;

        $stack22 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Dependency) $stack22;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "dependency", serializer);

        goto label1;

     label2:
        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "dependencies");

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writeDeploymentRepository(org.apache.maven.model.DeploymentRepository, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack20, $stack22, $stack26, $stack28, $stack33, $stack35, $stack40, $stack42, $stack51, $stack54;
        java.lang.String tagName, $stack4, $stack9, $stack10, $stack11, $stack12, $stack15, $stack19, $stack21, $stack23, $stack25, $stack27, $stack29, $stack32, $stack34, $stack36, $stack39, $stack41, $stack43, $stack50, $stack53, $stack55, $stack13;
        org.apache.maven.model.DeploymentRepository deploymentRepository;
        boolean $stack6, $stack16, $stack52;
        org.apache.maven.model.RepositoryPolicy $stack7, $stack8, $stack46, $stack48;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1;

        this := @this: MavenXpp3Writer;

        deploymentRepository := @parameter0: org.apache.maven.model.DeploymentRepository;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: boolean isUniqueVersion()>();

        if $stack6 == 1 goto label1;

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack51 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack50, "uniqueVersion");

        $stack52 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: boolean isUniqueVersion()>();

        $stack53 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack52);

        $stack54 = interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack53);

        $stack55 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack54.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack55, "uniqueVersion");

     label1:
        $stack7 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        if $stack7 == null goto label2;

        $stack48 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack48, "releases", serializer);

     label2:
        $stack8 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        if $stack8 == null goto label3;

        $stack46 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack46, "snapshots", serializer);

     label3:
        $stack9 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getId()>();

        if $stack9 == null goto label4;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "id");

        $stack41 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getId()>();

        $stack42 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack41);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "id");

     label4:
        $stack10 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getName()>();

        if $stack10 == null goto label5;

        $stack32 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack33 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack32, "name");

        $stack34 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getName()>();

        $stack35 = interfaceinvoke $stack33.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack34);

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack36, "name");

     label5:
        $stack11 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getUrl()>();

        if $stack11 == null goto label6;

        $stack25 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack26 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack25, "url");

        $stack27 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getUrl()>();

        $stack28 = interfaceinvoke $stack26.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack27);

        $stack29 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack29, "url");

     label6:
        $stack12 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getLayout()>();

        if $stack12 == null goto label7;

        $stack15 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getLayout()>();

        $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack16 != 0 goto label7;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "layout");

        $stack21 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getLayout()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "layout");

     label7:
        $stack13 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack13, tagName);

        return;
    }

    private void writeDeveloper(org.apache.maven.model.Developer, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack36, $stack37, $stack42, $stack44, $stack60, $stack61, $stack66, $stack68, $stack73, $stack75, $stack80, $stack82, $stack87, $stack89, $stack94, $stack96, $stack101, $stack103;
        java.lang.String tagName, $stack7, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack24, $stack30, value, $stack35, $stack38, $stack41, $stack43, $stack45, $stack51, $stack56, $stack59, $stack62, $stack65, $stack67, $stack69, $stack72, $stack74, $stack76, $stack79, $stack81, $stack83, $stack86, $stack88, $stack90, $stack93, $stack95, $stack97, $stack100, $stack102, $stack104, role, $stack16, $stack18;
        org.apache.maven.model.Developer developer;
        java.util.List $stack15, $stack48, $stack53;
        java.util.Properties $stack17, $stack20, $stack26, $stack33;
        int $stack21, $stack49;
        java.util.Set $stack27;
        boolean $stack29, $stack55;
        java.lang.Object $stack32, $stack34, $stack58;
        MavenXpp3Writer this;
        java.util.Iterator iter;

        this := @this: MavenXpp3Writer;

        developer := @parameter0: org.apache.maven.model.Developer;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack7 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        $stack9 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getId()>();

        if $stack9 == null goto label01;

        $stack100 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack101 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack100, "id");

        $stack102 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getId()>();

        $stack103 = interfaceinvoke $stack101.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack102);

        $stack104 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack103.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack104, "id");

     label01:
        $stack10 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getName()>();

        if $stack10 == null goto label02;

        $stack93 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack94 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack93, "name");

        $stack95 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getName()>();

        $stack96 = interfaceinvoke $stack94.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack95);

        $stack97 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack96.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack97, "name");

     label02:
        $stack11 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getEmail()>();

        if $stack11 == null goto label03;

        $stack86 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack87 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack86, "email");

        $stack88 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getEmail()>();

        $stack89 = interfaceinvoke $stack87.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack88);

        $stack90 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack89.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack90, "email");

     label03:
        $stack12 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getUrl()>();

        if $stack12 == null goto label04;

        $stack79 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack80 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack79, "url");

        $stack81 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getUrl()>();

        $stack82 = interfaceinvoke $stack80.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack81);

        $stack83 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack82.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack83, "url");

     label04:
        $stack13 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getOrganization()>();

        if $stack13 == null goto label05;

        $stack72 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack73 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack72, "organization");

        $stack74 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getOrganization()>();

        $stack75 = interfaceinvoke $stack73.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack74);

        $stack76 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack75.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack76, "organization");

     label05:
        $stack14 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getOrganizationUrl()>();

        if $stack14 == null goto label06;

        $stack65 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack66 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack65, "organizationUrl");

        $stack67 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getOrganizationUrl()>();

        $stack68 = interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack67);

        $stack69 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack68.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack69, "organizationUrl");

     label06:
        $stack15 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.List getRoles()>();

        if $stack15 == null goto label09;

        $stack48 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.List getRoles()>();

        $stack49 = interfaceinvoke $stack48.<java.util.List: int size()>();

        if $stack49 <= 0 goto label09;

        $stack51 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack51, "roles");

        $stack53 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.List getRoles()>();

        iter = interfaceinvoke $stack53.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $stack55 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack55 == 0 goto label08;

        $stack58 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        role = (java.lang.String) $stack58;

        $stack59 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack60 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack59, "role");

        $stack61 = interfaceinvoke $stack60.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(role);

        $stack62 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack61.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack62, "role");

        goto label07;

     label08:
        $stack56 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack56, "roles");

     label09:
        $stack16 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getTimezone()>();

        if $stack16 == null goto label10;

        $stack41 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack42 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack41, "timezone");

        $stack43 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getTimezone()>();

        $stack44 = interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack43);

        $stack45 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack44.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack45, "timezone");

     label10:
        $stack17 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.Properties getProperties()>();

        if $stack17 == null goto label13;

        $stack20 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.Properties getProperties()>();

        $stack21 = virtualinvoke $stack20.<java.util.Properties: int size()>();

        if $stack21 <= 0 goto label13;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "properties");

        $stack26 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.Properties getProperties()>();

        $stack27 = virtualinvoke $stack26.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack27.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $stack29 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack29 == 0 goto label12;

        $stack32 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        role = (java.lang.String) $stack32;

        $stack33 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.Properties getProperties()>();

        $stack34 = virtualinvoke $stack33.<java.util.Properties: java.lang.Object get(java.lang.Object)>(role);

        value = (java.lang.String) $stack34;

        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack36 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack35, role);

        $stack37 = interfaceinvoke $stack36.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, role);

        goto label11;

     label12:
        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "properties");

     label13:
        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack18, tagName);

        return;
    }

    private void writeDistributionManagement(org.apache.maven.model.DistributionManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack15, $stack17, $stack25, $stack27;
        java.lang.String tagName, $stack4, $stack9, $stack11, $stack12, $stack14, $stack16, $stack18, $stack24, $stack26, $stack28;
        org.apache.maven.model.DistributionManagement distributionManagement;
        org.apache.maven.model.DeploymentRepository $stack6, $stack7, $stack33, $stack35;
        org.apache.maven.model.Site $stack8, $stack31;
        org.apache.maven.model.Relocation $stack10, $stack22;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1, $r2, $r3;

        this := @this: MavenXpp3Writer;

        distributionManagement := @parameter0: org.apache.maven.model.DistributionManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getRepository()>();

        if $stack6 == null goto label1;

        $stack35 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getRepository()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDeploymentRepository(org.apache.maven.model.DeploymentRepository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack35, "repository", serializer);

     label1:
        $stack7 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getSnapshotRepository()>();

        if $stack7 == null goto label2;

        $stack33 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getSnapshotRepository()>();

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDeploymentRepository(org.apache.maven.model.DeploymentRepository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack33, "snapshotRepository", serializer);

     label2:
        $stack8 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Site getSite()>();

        if $stack8 == null goto label3;

        $stack31 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Site getSite()>();

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeSite(org.apache.maven.model.Site,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack31, "site", serializer);

     label3:
        $stack9 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: java.lang.String getDownloadUrl()>();

        if $stack9 == null goto label4;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack25 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "downloadUrl");

        $stack26 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: java.lang.String getDownloadUrl()>();

        $stack27 = interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack26);

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "downloadUrl");

     label4:
        $stack10 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Relocation getRelocation()>();

        if $stack10 == null goto label5;

        $stack22 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Relocation getRelocation()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRelocation(org.apache.maven.model.Relocation,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack22, "relocation", serializer);

     label5:
        $stack11 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: java.lang.String getStatus()>();

        if $stack11 == null goto label6;

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack15 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack14, "status");

        $stack16 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: java.lang.String getStatus()>();

        $stack17 = interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack16);

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack17.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack18, "status");

     label6:
        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack12, tagName);

        return;
    }

    private void writeExclusion(org.apache.maven.model.Exclusion, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.Exclusion exclusion;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        exclusion := @parameter0: org.apache.maven.model.Exclusion;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getGroupId()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "groupId");

        $stack20 = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getGroupId()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "groupId");

     label1:
        $stack7 = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getArtifactId()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "artifactId");

        $stack12 = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getArtifactId()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "artifactId");

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeExtension(org.apache.maven.model.Extension, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack12, $stack14, $stack20, $stack22, $stack27, $stack29;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack11, $stack13, $stack15, $stack19, $stack21, $stack23, $stack26, $stack28, $stack30;
        org.apache.maven.model.Extension extension;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        extension := @parameter0: org.apache.maven.model.Extension;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getGroupId()>();

        if $stack6 == null goto label1;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "groupId");

        $stack28 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getGroupId()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "groupId");

     label1:
        $stack7 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getArtifactId()>();

        if $stack7 == null goto label2;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "artifactId");

        $stack21 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getArtifactId()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "artifactId");

     label2:
        $stack8 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getVersion()>();

        if $stack8 == null goto label3;

        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack12 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack11, "version");

        $stack13 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getVersion()>();

        $stack14 = interfaceinvoke $stack12.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack13);

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack15, "version");

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writeFileSet(org.apache.maven.model.FileSet, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack26, $stack27, $stack43, $stack44, $stack49, $stack51;
        java.lang.String tagName, $stack6, $stack8, $stack17, $stack22, $stack25, $stack28, $stack34, $stack39, $stack42, $stack45, $stack48, $stack50, $stack52, include, $stack11;
        org.apache.maven.model.FileSet fileSet;
        java.util.List $stack9, $stack13, $stack19, $stack31, $stack36, $stack10;
        int $stack14, $stack32;
        boolean $stack21, $stack38;
        java.lang.Object $stack24, $stack41;
        MavenXpp3Writer this;
        java.util.Iterator iter;

        this := @this: MavenXpp3Writer;

        fileSet := @parameter0: org.apache.maven.model.FileSet;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.lang.String getDirectory()>();

        if $stack8 == null goto label1;

        $stack48 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack49 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack48, "directory");

        $stack50 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.lang.String getDirectory()>();

        $stack51 = interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack50);

        $stack52 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack52, "directory");

     label1:
        $stack9 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getIncludes()>();

        if $stack9 == null goto label4;

        $stack31 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getIncludes()>();

        $stack32 = interfaceinvoke $stack31.<java.util.List: int size()>();

        if $stack32 <= 0 goto label4;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "includes");

        $stack36 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getIncludes()>();

        iter = interfaceinvoke $stack36.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack38 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack38 == 0 goto label3;

        $stack41 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack41;

        $stack42 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack43 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack42, "include");

        $stack44 = interfaceinvoke $stack43.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack45 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack44.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack45, "include");

        goto label2;

     label3:
        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack39, "includes");

     label4:
        $stack10 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getExcludes()>();

        if $stack10 == null goto label7;

        $stack13 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getExcludes()>();

        $stack14 = interfaceinvoke $stack13.<java.util.List: int size()>();

        if $stack14 <= 0 goto label7;

        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack17, "excludes");

        $stack19 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getExcludes()>();

        iter = interfaceinvoke $stack19.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $stack21 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label6;

        $stack24 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack24;

        $stack25 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack26 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack25, "exclude");

        $stack27 = interfaceinvoke $stack26.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "exclude");

        goto label5;

     label6:
        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "excludes");

     label7:
        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writeIssueManagement(org.apache.maven.model.IssueManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.IssueManagement issueManagement;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        issueManagement := @parameter0: org.apache.maven.model.IssueManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getSystem()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "system");

        $stack20 = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getSystem()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "system");

     label1:
        $stack7 = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getUrl()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "url");

        $stack12 = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getUrl()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "url");

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeLicense(org.apache.maven.model.License, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30, $stack35, $stack37;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36, $stack38;
        org.apache.maven.model.License license;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        license := @parameter0: org.apache.maven.model.License;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "name");

        $stack36 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getName()>();

        $stack37 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack36);

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "name");

     label1:
        $stack7 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getUrl()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "url");

        $stack29 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getUrl()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "url");

     label2:
        $stack8 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getDistribution()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "distribution");

        $stack22 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getDistribution()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "distribution");

     label3:
        $stack9 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getComments()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "comments");

        $stack14 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getComments()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "comments");

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeMailingList(org.apache.maven.model.MailingList, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack29, $stack30, $stack35, $stack37, $stack42, $stack44, $stack49, $stack51, $stack56, $stack58, $stack63, $stack65;
        java.lang.String tagName, $stack6, $stack8, $stack9, $stack10, $stack11, $stack12, $stack20, $stack25, otherArchive, $stack28, $stack31, $stack34, $stack36, $stack38, $stack41, $stack43, $stack45, $stack48, $stack50, $stack52, $stack55, $stack57, $stack59, $stack62, $stack64, $stack66, $stack14;
        org.apache.maven.model.MailingList mailingList;
        java.util.List $stack13, $stack16, $stack22;
        int $stack17;
        java.util.Iterator iter;
        boolean $stack24;
        java.lang.Object $stack27;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        mailingList := @parameter0: org.apache.maven.model.MailingList;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getName()>();

        if $stack8 == null goto label1;

        $stack62 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack63 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack62, "name");

        $stack64 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getName()>();

        $stack65 = interfaceinvoke $stack63.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack64);

        $stack66 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack65.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack66, "name");

     label1:
        $stack9 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getSubscribe()>();

        if $stack9 == null goto label2;

        $stack55 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack56 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack55, "subscribe");

        $stack57 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getSubscribe()>();

        $stack58 = interfaceinvoke $stack56.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack57);

        $stack59 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack58.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack59, "subscribe");

     label2:
        $stack10 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getUnsubscribe()>();

        if $stack10 == null goto label3;

        $stack48 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack49 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack48, "unsubscribe");

        $stack50 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getUnsubscribe()>();

        $stack51 = interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack50);

        $stack52 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack52, "unsubscribe");

     label3:
        $stack11 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getPost()>();

        if $stack11 == null goto label4;

        $stack41 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack42 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack41, "post");

        $stack43 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getPost()>();

        $stack44 = interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack43);

        $stack45 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack44.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack45, "post");

     label4:
        $stack12 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getArchive()>();

        if $stack12 == null goto label5;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "archive");

        $stack36 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getArchive()>();

        $stack37 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack36);

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "archive");

     label5:
        $stack13 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.util.List getOtherArchives()>();

        if $stack13 == null goto label8;

        $stack16 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.util.List getOtherArchives()>();

        $stack17 = interfaceinvoke $stack16.<java.util.List: int size()>();

        if $stack17 <= 0 goto label8;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "otherArchives");

        $stack22 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.util.List getOtherArchives()>();

        iter = interfaceinvoke $stack22.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $stack24 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack24 == 0 goto label7;

        $stack27 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        otherArchive = (java.lang.String) $stack27;

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack29 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack28, "otherArchive");

        $stack30 = interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(otherArchive);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "otherArchive");

        goto label6;

     label7:
        $stack25 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack25, "otherArchives");

     label8:
        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, tagName);

        return;
    }

    private void writeModel(org.apache.maven.model.Model, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        MavenXpp3Writer this;
        java.lang.String $stack7, tagName, $stack8, $stack11, $stack12, $stack14, $stack15, $stack16, $stack17, $stack19, $stack20, $stack21, $stack48, $stack53, $stack60, $stack68, $stack73, $stack80, $stack85, $stack92, $stack97, $stack106, $stack112, value, $stack117, $stack120, $stack134, $stack139, $stack142, $stack145, $stack153, $stack158, $stack165, $stack170, $stack177, $stack182, $stack189, $stack194, $stack200, $stack202, $stack204, $stack207, $stack209, $stack211, $stack214, $stack216, $stack218, $stack221, $stack223, $stack225, $stack228, $stack231, $stack233, $stack235, $stack237, $stack239, $stack241, $stack244, $stack246, $stack248, $stack251, $stack253, $stack255, $stack260, $stack262, $stack264, $stack267, $stack269, $stack272, $stack18, o#30, $stack42;
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack118, $stack119, $stack143, $stack144, $stack201, $stack203, $stack208, $stack210, $stack215, $stack217, $stack222, $stack224, $stack232, $stack234, $stack238, $stack240, $stack245, $stack247, $stack252, $stack254, $stack261, $stack263;
        org.apache.maven.model.Model model;
        org.apache.maven.model.Parent $stack13, $stack258;
        org.apache.maven.model.Organization $stack22, $stack198;
        java.util.List $stack23, $stack28, $stack35, $stack41, $stack44, $stack50, $stack65, $stack70, $stack77, $stack82, $stack89, $stack94, $stack131, $stack136, $stack150, $stack155, $stack162, $stack167, $stack174, $stack179, $stack186, $stack191, $stack24, $stack25, $stack26, $stack36, $stack37;
        org.apache.maven.model.IssueManagement $stack30, $stack127;
        org.apache.maven.model.CiManagement $stack31, $stack125;
        org.apache.maven.model.DistributionManagement $stack32, $stack123;
        java.util.Properties $stack33, $stack103, $stack108, $stack115;
        java.lang.Object $stack39, $stack55, $stack59, $stack75, $stack87, $stack99, $stack114, $stack116, $stack141, $stack160, $stack172, $stack184, $stack196;
        org.apache.maven.model.Reporting $stack40, $stack57;
        int $stack45, $stack66, $stack78, $stack90, $stack104, $stack132, $stack151, $stack163, $stack175, $stack187;
        boolean $stack52, $stack72, $stack84, $stack96, $stack111, $stack138, $stack157, $stack169, $stack181, $stack193, $stack229;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack61;
        org.apache.maven.model.Build $stack63, $stack38;
        org.apache.maven.model.DependencyManagement $stack101, $stack34;
        java.util.Set $stack109;
        org.apache.maven.model.Scm $stack129, $stack29;
        org.apache.maven.model.Prerequisites $stack148, $stack27;
        java.util.Iterator iter;
        org.apache.maven.model.License o;
        org.apache.maven.model.Developer o#12;
        org.apache.maven.model.Contributor o#18;
        org.apache.maven.model.MailingList o#24;
        org.apache.maven.model.Dependency o#42;
        org.apache.maven.model.Repository o#48;
        org.apache.maven.model.Profile o#60;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        this := @this: MavenXpp3Writer;

        model := @parameter0: org.apache.maven.model.Model;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        $stack7 = $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String fileComment>;

        if $stack7 == null goto label01;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        $stack272 = $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String fileComment>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void comment(java.lang.String)>($stack272);

     label01:
        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("", "http://maven.apache.org/POM/4.0.0");

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("xsi", "http://www.w3.org/2001/XMLSchema-instance");

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "xsi:schemaLocation", "http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd");

        $stack11 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getChildProjectUrlInheritAppendPath()>();

        if $stack11 == null goto label02;

        $stack267 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack269 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getChildProjectUrlInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack267, "child.project.url.inherit.append.path", $stack269);

     label02:
        $stack12 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        if $stack12 == null goto label03;

        $stack260 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack261 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack260, "modelVersion");

        $stack262 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        $stack263 = interfaceinvoke $stack261.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack262);

        $stack264 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack263.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack264, "modelVersion");

     label03:
        $stack13 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack13 == null goto label04;

        $stack258 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeParent(org.apache.maven.model.Parent,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack258, "parent", serializer);

     label04:
        $stack14 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        if $stack14 == null goto label05;

        $stack251 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack252 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack251, "groupId");

        $stack253 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $stack254 = interfaceinvoke $stack252.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack253);

        $stack255 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack254.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack255, "groupId");

     label05:
        $stack15 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        if $stack15 == null goto label06;

        $stack244 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack245 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack244, "artifactId");

        $stack246 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $stack247 = interfaceinvoke $stack245.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack246);

        $stack248 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack247.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack248, "artifactId");

     label06:
        $stack16 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if $stack16 == null goto label07;

        $stack237 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack238 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack237, "version");

        $stack239 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $stack240 = interfaceinvoke $stack238.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack239);

        $stack241 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack240.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack241, "version");

     label07:
        $stack17 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        if $stack17 == null goto label08;

        $stack228 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $stack229 = virtualinvoke $stack228.<java.lang.String: boolean equals(java.lang.Object)>("jar");

        if $stack229 != 0 goto label08;

        $stack231 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack232 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack231, "packaging");

        $stack233 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $stack234 = interfaceinvoke $stack232.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack233);

        $stack235 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack234.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack235, "packaging");

     label08:
        $stack18 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getName()>();

        if $stack18 == null goto label09;

        $stack221 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack222 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack221, "name");

        $stack223 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getName()>();

        $stack224 = interfaceinvoke $stack222.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack223);

        $stack225 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack224.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack225, "name");

     label09:
        $stack19 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getDescription()>();

        if $stack19 == null goto label10;

        $stack214 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack215 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack214, "description");

        $stack216 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getDescription()>();

        $stack217 = interfaceinvoke $stack215.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack216);

        $stack218 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack217.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack218, "description");

     label10:
        $stack20 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getUrl()>();

        if $stack20 == null goto label11;

        $stack207 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack208 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack207, "url");

        $stack209 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getUrl()>();

        $stack210 = interfaceinvoke $stack208.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack209);

        $stack211 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack210.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack211, "url");

     label11:
        $stack21 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getInceptionYear()>();

        if $stack21 == null goto label12;

        $stack200 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack201 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack200, "inceptionYear");

        $stack202 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getInceptionYear()>();

        $stack203 = interfaceinvoke $stack201.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack202);

        $stack204 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack203.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack204, "inceptionYear");

     label12:
        $stack22 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Organization getOrganization()>();

        if $stack22 == null goto label13;

        $stack198 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Organization getOrganization()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeOrganization(org.apache.maven.model.Organization,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack198, "organization", serializer);

     label13:
        $stack23 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getLicenses()>();

        if $stack23 == null goto label16;

        $stack186 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getLicenses()>();

        $stack187 = interfaceinvoke $stack186.<java.util.List: int size()>();

        if $stack187 <= 0 goto label16;

        $stack189 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack189, "licenses");

        $stack191 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getLicenses()>();

        iter = interfaceinvoke $stack191.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $stack193 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack193 == 0 goto label15;

        $stack196 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.License) $stack196;

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeLicense(org.apache.maven.model.License,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "license", serializer);

        goto label14;

     label15:
        $stack194 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack194, "licenses");

     label16:
        $stack24 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDevelopers()>();

        if $stack24 == null goto label19;

        $stack174 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDevelopers()>();

        $stack175 = interfaceinvoke $stack174.<java.util.List: int size()>();

        if $stack175 <= 0 goto label19;

        $stack177 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack177, "developers");

        $stack179 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDevelopers()>();

        iter = interfaceinvoke $stack179.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $stack181 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack181 == 0 goto label18;

        $stack184 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#12 = (org.apache.maven.model.Developer) $stack184;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDeveloper(org.apache.maven.model.Developer,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#12, "developer", serializer);

        goto label17;

     label18:
        $stack182 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack182, "developers");

     label19:
        $stack25 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getContributors()>();

        if $stack25 == null goto label22;

        $stack162 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getContributors()>();

        $stack163 = interfaceinvoke $stack162.<java.util.List: int size()>();

        if $stack163 <= 0 goto label22;

        $stack165 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack165, "contributors");

        $stack167 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getContributors()>();

        iter = interfaceinvoke $stack167.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $stack169 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack169 == 0 goto label21;

        $stack172 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#18 = (org.apache.maven.model.Contributor) $stack172;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeContributor(org.apache.maven.model.Contributor,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#18, "contributor", serializer);

        goto label20;

     label21:
        $stack170 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack170, "contributors");

     label22:
        $stack26 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getMailingLists()>();

        if $stack26 == null goto label25;

        $stack150 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getMailingLists()>();

        $stack151 = interfaceinvoke $stack150.<java.util.List: int size()>();

        if $stack151 <= 0 goto label25;

        $stack153 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack153, "mailingLists");

        $stack155 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getMailingLists()>();

        iter = interfaceinvoke $stack155.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $stack157 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack157 == 0 goto label24;

        $stack160 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#24 = (org.apache.maven.model.MailingList) $stack160;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeMailingList(org.apache.maven.model.MailingList,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#24, "mailingList", serializer);

        goto label23;

     label24:
        $stack158 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack158, "mailingLists");

     label25:
        $stack27 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Prerequisites getPrerequisites()>();

        if $stack27 == null goto label26;

        $stack148 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Prerequisites getPrerequisites()>();

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePrerequisites(org.apache.maven.model.Prerequisites,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack148, "prerequisites", serializer);

     label26:
        $stack28 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getModules()>();

        if $stack28 == null goto label29;

        $stack131 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getModules()>();

        $stack132 = interfaceinvoke $stack131.<java.util.List: int size()>();

        if $stack132 <= 0 goto label29;

        $stack134 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack134, "modules");

        $stack136 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getModules()>();

        iter = interfaceinvoke $stack136.<java.util.List: java.util.Iterator iterator()>();

     label27:
        $stack138 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack138 == 0 goto label28;

        $stack141 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#30 = (java.lang.String) $stack141;

        $stack142 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack143 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack142, "module");

        $stack144 = interfaceinvoke $stack143.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(o#30);

        $stack145 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack144.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack145, "module");

        goto label27;

     label28:
        $stack139 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack139, "modules");

     label29:
        $stack29 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Scm getScm()>();

        if $stack29 == null goto label30;

        $stack129 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Scm getScm()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeScm(org.apache.maven.model.Scm,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack129, "scm", serializer);

     label30:
        $stack30 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.IssueManagement getIssueManagement()>();

        if $stack30 == null goto label31;

        $stack127 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.IssueManagement getIssueManagement()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeIssueManagement(org.apache.maven.model.IssueManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack127, "issueManagement", serializer);

     label31:
        $stack31 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.CiManagement getCiManagement()>();

        if $stack31 == null goto label32;

        $stack125 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.CiManagement getCiManagement()>();

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeCiManagement(org.apache.maven.model.CiManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack125, "ciManagement", serializer);

     label32:
        $stack32 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if $stack32 == null goto label33;

        $stack123 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDistributionManagement(org.apache.maven.model.DistributionManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack123, "distributionManagement", serializer);

     label33:
        $stack33 = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        if $stack33 == null goto label36;

        $stack103 = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        $stack104 = virtualinvoke $stack103.<java.util.Properties: int size()>();

        if $stack104 <= 0 goto label36;

        $stack106 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack106, "properties");

        $stack108 = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        $stack109 = virtualinvoke $stack108.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack109.<java.util.Set: java.util.Iterator iterator()>();

     label34:
        $stack111 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack111 == 0 goto label35;

        $stack114 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#30 = (java.lang.String) $stack114;

        $stack115 = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        $stack116 = virtualinvoke $stack115.<java.util.Properties: java.lang.Object get(java.lang.Object)>(o#30);

        value = (java.lang.String) $stack116;

        $stack117 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack118 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack117, o#30);

        $stack119 = interfaceinvoke $stack118.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack120 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack119.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack120, o#30);

        goto label34;

     label35:
        $stack112 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack112, "properties");

     label36:
        $stack34 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if $stack34 == null goto label37;

        $stack101 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDependencyManagement(org.apache.maven.model.DependencyManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack101, "dependencyManagement", serializer);

     label37:
        $stack35 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDependencies()>();

        if $stack35 == null goto label40;

        $stack89 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDependencies()>();

        $stack90 = interfaceinvoke $stack89.<java.util.List: int size()>();

        if $stack90 <= 0 goto label40;

        $stack92 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack92, "dependencies");

        $stack94 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDependencies()>();

        iter = interfaceinvoke $stack94.<java.util.List: java.util.Iterator iterator()>();

     label38:
        $stack96 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack96 == 0 goto label39;

        $stack99 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#42 = (org.apache.maven.model.Dependency) $stack99;

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#42, "dependency", serializer);

        goto label38;

     label39:
        $stack97 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack97, "dependencies");

     label40:
        $stack36 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        if $stack36 == null goto label43;

        $stack77 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        $stack78 = interfaceinvoke $stack77.<java.util.List: int size()>();

        if $stack78 <= 0 goto label43;

        $stack80 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack80, "repositories");

        $stack82 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        iter = interfaceinvoke $stack82.<java.util.List: java.util.Iterator iterator()>();

     label41:
        $stack84 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack84 == 0 goto label42;

        $stack87 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#48 = (org.apache.maven.model.Repository) $stack87;

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#48, "repository", serializer);

        goto label41;

     label42:
        $stack85 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack85, "repositories");

     label43:
        $stack37 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getPluginRepositories()>();

        if $stack37 == null goto label46;

        $stack65 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getPluginRepositories()>();

        $stack66 = interfaceinvoke $stack65.<java.util.List: int size()>();

        if $stack66 <= 0 goto label46;

        $stack68 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack68, "pluginRepositories");

        $stack70 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getPluginRepositories()>();

        iter = interfaceinvoke $stack70.<java.util.List: java.util.Iterator iterator()>();

     label44:
        $stack72 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack72 == 0 goto label45;

        $stack75 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#48 = (org.apache.maven.model.Repository) $stack75;

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#48, "pluginRepository", serializer);

        goto label44;

     label45:
        $stack73 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack73, "pluginRepositories");

     label46:
        $stack38 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if $stack38 == null goto label47;

        $stack63 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeBuild(org.apache.maven.model.Build,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack63, "build", serializer);

     label47:
        $stack39 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.Object getReports()>();

        if $stack39 == null goto label48;

        $stack59 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.Object getReports()>();

        $stack61 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack59;

        $stack60 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack61.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack60, serializer);

     label48:
        $stack40 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Reporting getReporting()>();

        if $stack40 == null goto label49;

        $stack57 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Reporting getReporting()>();

        $r18 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r18.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeReporting(org.apache.maven.model.Reporting,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack57, "reporting", serializer);

     label49:
        $stack41 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        if $stack41 == null goto label52;

        $stack44 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        $stack45 = interfaceinvoke $stack44.<java.util.List: int size()>();

        if $stack45 <= 0 goto label52;

        $stack48 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack48, "profiles");

        $stack50 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        iter = interfaceinvoke $stack50.<java.util.List: java.util.Iterator iterator()>();

     label50:
        $stack52 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack52 == 0 goto label51;

        $stack55 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#60 = (org.apache.maven.model.Profile) $stack55;

        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeProfile(org.apache.maven.model.Profile,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#60, "profile", serializer);

        goto label50;

     label51:
        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack53, "profiles");

     label52:
        $stack42 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack42, tagName);

        return;
    }

    private void writeModelBase(org.apache.maven.model.ModelBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack80, $stack81, $stack99, $stack100;
        java.lang.String tagName, $stack7, $stack18, $stack24, $stack30, $stack35, $stack42, $stack47, $stack54, $stack59, $stack68, $stack74, value, $stack79, $stack82, $stack90, $stack95, $stack98, $stack101, module;
        org.apache.maven.model.ModelBase modelBase;
        java.util.List $stack9, $stack13, $stack27, $stack32, $stack39, $stack44, $stack51, $stack56, $stack87, $stack92, $stack14, $stack15;
        java.util.Properties $stack11, $stack65, $stack70, $stack77;
        org.apache.maven.model.Reporting $stack17, $stack20;
        MavenXpp3Writer this;
        java.lang.Object $stack23, $stack37, $stack49, $stack61, $stack76, $stack78, $stack97, $stack16;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack25;
        int $stack28, $stack40, $stack52, $stack66, $stack88;
        boolean $stack34, $stack46, $stack58, $stack73, $stack94;
        org.apache.maven.model.DependencyManagement $stack63, $stack12;
        java.util.Set $stack71;
        org.apache.maven.model.DistributionManagement $stack85, $stack10;
        java.util.Iterator iter;
        org.apache.maven.model.Dependency module#14;
        org.apache.maven.model.Repository module#20;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MavenXpp3Writer;

        modelBase := @parameter0: org.apache.maven.model.ModelBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack7 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        $stack9 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        if $stack9 == null goto label03;

        $stack87 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        $stack88 = interfaceinvoke $stack87.<java.util.List: int size()>();

        if $stack88 <= 0 goto label03;

        $stack90 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack90, "modules");

        $stack92 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        iter = interfaceinvoke $stack92.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $stack94 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack94 == 0 goto label02;

        $stack97 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module = (java.lang.String) $stack97;

        $stack98 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack99 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack98, "module");

        $stack100 = interfaceinvoke $stack99.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(module);

        $stack101 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack100.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack101, "module");

        goto label01;

     label02:
        $stack95 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack95, "modules");

     label03:
        $stack10 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if $stack10 == null goto label04;

        $stack85 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDistributionManagement(org.apache.maven.model.DistributionManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack85, "distributionManagement", serializer);

     label04:
        $stack11 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        if $stack11 == null goto label07;

        $stack65 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        $stack66 = virtualinvoke $stack65.<java.util.Properties: int size()>();

        if $stack66 <= 0 goto label07;

        $stack68 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack68, "properties");

        $stack70 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        $stack71 = virtualinvoke $stack70.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack71.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $stack73 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack73 == 0 goto label06;

        $stack76 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module = (java.lang.String) $stack76;

        $stack77 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        $stack78 = virtualinvoke $stack77.<java.util.Properties: java.lang.Object get(java.lang.Object)>(module);

        value = (java.lang.String) $stack78;

        $stack79 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack80 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack79, module);

        $stack81 = interfaceinvoke $stack80.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack82 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack81.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack82, module);

        goto label05;

     label06:
        $stack74 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack74, "properties");

     label07:
        $stack12 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if $stack12 == null goto label08;

        $stack63 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDependencyManagement(org.apache.maven.model.DependencyManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack63, "dependencyManagement", serializer);

     label08:
        $stack13 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        if $stack13 == null goto label11;

        $stack51 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        $stack52 = interfaceinvoke $stack51.<java.util.List: int size()>();

        if $stack52 <= 0 goto label11;

        $stack54 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack54, "dependencies");

        $stack56 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        iter = interfaceinvoke $stack56.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $stack58 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack58 == 0 goto label10;

        $stack61 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module#14 = (org.apache.maven.model.Dependency) $stack61;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(module#14, "dependency", serializer);

        goto label09;

     label10:
        $stack59 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack59, "dependencies");

     label11:
        $stack14 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        if $stack14 == null goto label14;

        $stack39 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        $stack40 = interfaceinvoke $stack39.<java.util.List: int size()>();

        if $stack40 <= 0 goto label14;

        $stack42 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack42, "repositories");

        $stack44 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        iter = interfaceinvoke $stack44.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $stack46 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack46 == 0 goto label13;

        $stack49 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module#20 = (org.apache.maven.model.Repository) $stack49;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(module#20, "repository", serializer);

        goto label12;

     label13:
        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack47, "repositories");

     label14:
        $stack15 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        if $stack15 == null goto label17;

        $stack27 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        $stack28 = interfaceinvoke $stack27.<java.util.List: int size()>();

        if $stack28 <= 0 goto label17;

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "pluginRepositories");

        $stack32 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        iter = interfaceinvoke $stack32.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $stack34 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack34 == 0 goto label16;

        $stack37 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module#20 = (org.apache.maven.model.Repository) $stack37;

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(module#20, "pluginRepository", serializer);

        goto label15;

     label16:
        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "pluginRepositories");

     label17:
        $stack16 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.lang.Object getReports()>();

        if $stack16 == null goto label18;

        $stack23 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.lang.Object getReports()>();

        $stack25 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack23;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack25.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack24, serializer);

     label18:
        $stack17 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting getReporting()>();

        if $stack17 == null goto label19;

        $stack20 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting getReporting()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeReporting(org.apache.maven.model.Reporting,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack20, "reporting", serializer);

     label19:
        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack18, tagName);

        return;
    }

    private void writeNotifier(org.apache.maven.model.Notifier, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack34, $stack35, $stack40, $stack42, $stack47, $stack50, $stack55, $stack58, $stack64, $stack67, $stack73, $stack76, $stack86, $stack88;
        java.lang.String tagName, $stack7, $stack9, $stack14, $stack22, $stack28, key, value, $stack33, $stack36, $stack39, $stack41, $stack43, $stack46, $stack49, $stack51, $stack54, $stack57, $stack59, $stack63, $stack66, $stack68, $stack72, $stack75, $stack77, $stack81, $stack85, $stack87, $stack89, $stack16;
        org.apache.maven.model.Notifier notifier;
        boolean $stack11, $stack12, $stack13, $stack27, $stack48, $stack56, $stack65, $stack74, $stack82, $stack10;
        java.util.Properties $stack15, $stack18, $stack24, $stack31;
        int $stack19;
        java.util.Set $stack25;
        java.util.Iterator iter;
        java.lang.Object $stack30, $stack32;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        notifier := @parameter0: org.apache.maven.model.Notifier;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack7 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        $stack9 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getType()>();

        if $stack9 == null goto label1;

        $stack81 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getType()>();

        $stack82 = virtualinvoke $stack81.<java.lang.String: boolean equals(java.lang.Object)>("mail");

        if $stack82 != 0 goto label1;

        $stack85 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack86 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack85, "type");

        $stack87 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getType()>();

        $stack88 = interfaceinvoke $stack86.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack87);

        $stack89 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack88.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack89, "type");

     label1:
        $stack10 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnError()>();

        if $stack10 == 1 goto label2;

        $stack72 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack73 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack72, "sendOnError");

        $stack74 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnError()>();

        $stack75 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack74);

        $stack76 = interfaceinvoke $stack73.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack75);

        $stack77 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack76.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack77, "sendOnError");

     label2:
        $stack11 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnFailure()>();

        if $stack11 == 1 goto label3;

        $stack63 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack64 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack63, "sendOnFailure");

        $stack65 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnFailure()>();

        $stack66 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack65);

        $stack67 = interfaceinvoke $stack64.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack66);

        $stack68 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack67.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack68, "sendOnFailure");

     label3:
        $stack12 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnSuccess()>();

        if $stack12 == 1 goto label4;

        $stack54 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack55 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack54, "sendOnSuccess");

        $stack56 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnSuccess()>();

        $stack57 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack56);

        $stack58 = interfaceinvoke $stack55.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack57);

        $stack59 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack58.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack59, "sendOnSuccess");

     label4:
        $stack13 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnWarning()>();

        if $stack13 == 1 goto label5;

        $stack46 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack47 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack46, "sendOnWarning");

        $stack48 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnWarning()>();

        $stack49 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack48);

        $stack50 = interfaceinvoke $stack47.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack49);

        $stack51 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack50.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack51, "sendOnWarning");

     label5:
        $stack14 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getAddress()>();

        if $stack14 == null goto label6;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "address");

        $stack41 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getAddress()>();

        $stack42 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack41);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "address");

     label6:
        $stack15 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        if $stack15 == null goto label9;

        $stack18 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        $stack19 = virtualinvoke $stack18.<java.util.Properties: int size()>();

        if $stack19 <= 0 goto label9;

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack22, "configuration");

        $stack24 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        $stack25 = virtualinvoke $stack24.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack25.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $stack27 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack27 == 0 goto label8;

        $stack30 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $stack30;

        $stack31 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        $stack32 = virtualinvoke $stack31.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);

        value = (java.lang.String) $stack32;

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack34 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack33, key);

        $stack35 = interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack36, key);

        goto label7;

     label8:
        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "configuration");

     label9:
        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, tagName);

        return;
    }

    private void writeOrganization(org.apache.maven.model.Organization, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.Organization organization;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        organization := @parameter0: org.apache.maven.model.Organization;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "name");

        $stack20 = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getName()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "name");

     label1:
        $stack7 = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getUrl()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "url");

        $stack12 = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getUrl()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "url");

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeParent(org.apache.maven.model.Parent, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack17, $stack19, $stack23, $stack25, $stack30, $stack32, $stack37, $stack39;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack12, $stack16, $stack18, $stack20, $stack22, $stack24, $stack26, $stack29, $stack31, $stack33, $stack36, $stack38, $stack40, $stack10;
        org.apache.maven.model.Parent parent;
        boolean $stack13;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        parent := @parameter0: org.apache.maven.model.Parent;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        if $stack6 == null goto label1;

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack37 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "groupId");

        $stack38 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack39 = interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack38);

        $stack40 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "groupId");

     label1:
        $stack7 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        if $stack7 == null goto label2;

        $stack29 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack30 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack29, "artifactId");

        $stack31 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack32 = interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack31);

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack33, "artifactId");

     label2:
        $stack8 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        if $stack8 == null goto label3;

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack23 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack22, "version");

        $stack24 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $stack25 = interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack24);

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack26, "version");

     label3:
        $stack9 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("../pom.xml");

        if $stack13 != 0 goto label4;

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack17 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "relativePath");

        $stack18 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        $stack19 = interfaceinvoke $stack17.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack18);

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "relativePath");

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writePatternSet(org.apache.maven.model.PatternSet, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack25, $stack26, $stack42, $stack43;
        java.lang.String tagName, $stack6, $stack16, $stack21, $stack24, $stack27, $stack33, $stack38, $stack41, $stack44, include, $stack10;
        org.apache.maven.model.PatternSet patternSet;
        java.util.List $stack8, $stack12, $stack18, $stack30, $stack35, $stack9;
        int $stack13, $stack31;
        boolean $stack20, $stack37;
        java.lang.Object $stack23, $stack40;
        MavenXpp3Writer this;
        java.util.Iterator iter;

        this := @this: MavenXpp3Writer;

        patternSet := @parameter0: org.apache.maven.model.PatternSet;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getIncludes()>();

        if $stack8 == null goto label3;

        $stack30 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getIncludes()>();

        $stack31 = interfaceinvoke $stack30.<java.util.List: int size()>();

        if $stack31 <= 0 goto label3;

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack33, "includes");

        $stack35 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getIncludes()>();

        iter = interfaceinvoke $stack35.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack37 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack37 == 0 goto label2;

        $stack40 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack40;

        $stack41 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack42 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack41, "include");

        $stack43 = interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack44 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack43.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack44, "include");

        goto label1;

     label2:
        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "includes");

     label3:
        $stack9 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getExcludes()>();

        if $stack9 == null goto label6;

        $stack12 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getExcludes()>();

        $stack13 = interfaceinvoke $stack12.<java.util.List: int size()>();

        if $stack13 <= 0 goto label6;

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "excludes");

        $stack18 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getExcludes()>();

        iter = interfaceinvoke $stack18.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack20 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label5;

        $stack23 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack23;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack25 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "exclude");

        $stack26 = interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack26.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack27, "exclude");

        goto label4;

     label5:
        $stack21 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack21, "excludes");

     label6:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writePlugin(org.apache.maven.model.Plugin, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack25, $stack27, $stack60, $stack62, $stack67, $stack69, $stack74, $stack76, $stack84, $stack86;
        java.lang.String tagName, $stack6, $stack8, $stack10, $stack11, $stack15, $stack17, $stack20, $stack24, $stack26, $stack28, $stack32, $stack38, $stack43, $stack50, $stack55, $stack59, $stack61, $stack63, $stack66, $stack68, $stack70, $stack73, $stack75, $stack77, $stack80, $stack83, $stack85, $stack87, $stack9;
        org.apache.maven.model.Plugin plugin;
        java.util.List $stack12, $stack35, $stack40, $stack47, $stack52, $stack13;
        java.lang.Object $stack16, $stack19, $stack31, $stack45, $stack57, $stack14;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack21, $stack33;
        int $stack36, $stack48;
        boolean $stack42, $stack54, $stack81;
        MavenXpp3Writer this;
        java.util.Iterator iter;
        org.apache.maven.model.PluginExecution o;
        org.apache.maven.model.Dependency o#12;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1;

        this := @this: MavenXpp3Writer;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        if $stack8 == null goto label01;

        $stack80 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack81 = virtualinvoke $stack80.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.maven.plugins");

        if $stack81 != 0 goto label01;

        $stack83 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack84 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack83, "groupId");

        $stack85 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack86 = interfaceinvoke $stack84.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack85);

        $stack87 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack86.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack87, "groupId");

     label01:
        $stack9 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        if $stack9 == null goto label02;

        $stack73 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack74 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack73, "artifactId");

        $stack75 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $stack76 = interfaceinvoke $stack74.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack75);

        $stack77 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack76.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack77, "artifactId");

     label02:
        $stack10 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        if $stack10 == null goto label03;

        $stack66 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack67 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack66, "version");

        $stack68 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        $stack69 = interfaceinvoke $stack67.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack68);

        $stack70 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack69.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack70, "version");

     label03:
        $stack11 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getExtensions()>();

        if $stack11 == null goto label04;

        $stack59 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack60 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack59, "extensions");

        $stack61 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getExtensions()>();

        $stack62 = interfaceinvoke $stack60.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack61);

        $stack63 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack62.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack63, "extensions");

     label04:
        $stack12 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        if $stack12 == null goto label07;

        $stack47 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        $stack48 = interfaceinvoke $stack47.<java.util.List: int size()>();

        if $stack48 <= 0 goto label07;

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack50, "executions");

        $stack52 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        iter = interfaceinvoke $stack52.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $stack54 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack54 == 0 goto label06;

        $stack57 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.PluginExecution) $stack57;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePluginExecution(org.apache.maven.model.PluginExecution,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "execution", serializer);

        goto label05;

     label06:
        $stack55 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack55, "executions");

     label07:
        $stack13 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        if $stack13 == null goto label10;

        $stack35 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        $stack36 = interfaceinvoke $stack35.<java.util.List: int size()>();

        if $stack36 <= 0 goto label10;

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack38, "dependencies");

        $stack40 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        iter = interfaceinvoke $stack40.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack42 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack42 == 0 goto label09;

        $stack45 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#12 = (org.apache.maven.model.Dependency) $stack45;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#12, "dependency", serializer);

        goto label08;

     label09:
        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "dependencies");

     label10:
        $stack14 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getGoals()>();

        if $stack14 == null goto label11;

        $stack31 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getGoals()>();

        $stack33 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack31;

        $stack32 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack33.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack32, serializer);

     label11:
        $stack15 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getInherited()>();

        if $stack15 == null goto label12;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack25 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "inherited");

        $stack26 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getInherited()>();

        $stack27 = interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack26);

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "inherited");

     label12:
        $stack16 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getConfiguration()>();

        if $stack16 == null goto label13;

        $stack19 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getConfiguration()>();

        $stack21 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack19;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack21.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack20, serializer);

     label13:
        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, tagName);

        return;
    }

    private void writePluginConfiguration(org.apache.maven.model.PluginConfiguration, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        java.lang.String tagName, $stack6, $stack16, $stack21, $stack10;
        org.apache.maven.model.PluginConfiguration pluginConfiguration;
        org.apache.maven.model.PluginManagement $stack8, $stack25;
        java.util.List $stack9, $stack12, $stack18;
        int $stack13;
        java.util.Iterator iter;
        boolean $stack20;
        java.lang.Object $stack23;
        org.apache.maven.model.Plugin o;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1;

        this := @this: MavenXpp3Writer;

        pluginConfiguration := @parameter0: org.apache.maven.model.PluginConfiguration;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if $stack8 == null goto label1;

        $stack25 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: org.apache.maven.model.PluginManagement getPluginManagement()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePluginManagement(org.apache.maven.model.PluginManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack25, "pluginManagement", serializer);

     label1:
        $stack9 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: java.util.List getPlugins()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: java.util.List getPlugins()>();

        $stack13 = interfaceinvoke $stack12.<java.util.List: int size()>();

        if $stack13 <= 0 goto label4;

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "plugins");

        $stack18 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack18.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack20 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label3;

        $stack23 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Plugin) $stack23;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "plugin", serializer);

        goto label2;

     label3:
        $stack21 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack21, "plugins");

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writePluginContainer(org.apache.maven.model.PluginContainer, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        java.lang.String tagName, $stack6, $stack15, $stack20, $stack9;
        org.apache.maven.model.PluginContainer pluginContainer;
        java.util.List $stack8, $stack11, $stack17;
        int $stack12;
        java.util.Iterator iter;
        boolean $stack19;
        java.lang.Object $stack22;
        org.apache.maven.model.Plugin o;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0;

        this := @this: MavenXpp3Writer;

        pluginContainer := @parameter0: org.apache.maven.model.PluginContainer;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke pluginContainer.<org.apache.maven.model.PluginContainer: java.util.List getPlugins()>();

        if $stack8 == null goto label3;

        $stack11 = virtualinvoke pluginContainer.<org.apache.maven.model.PluginContainer: java.util.List getPlugins()>();

        $stack12 = interfaceinvoke $stack11.<java.util.List: int size()>();

        if $stack12 <= 0 goto label3;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack15, "plugins");

        $stack17 = virtualinvoke pluginContainer.<org.apache.maven.model.PluginContainer: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack17.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack19 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label2;

        $stack22 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Plugin) $stack22;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "plugin", serializer);

        goto label1;

     label2:
        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "plugins");

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writePluginExecution(org.apache.maven.model.PluginExecution, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack39, $stack40, $stack45, $stack47, $stack55, $stack57;
        java.lang.String tagName, $stack6, $stack8, $stack13, $stack16, $stack20, $stack22, $stack24, $stack30, $stack35, goal, $stack38, $stack41, $stack44, $stack46, $stack48, $stack51, $stack54, $stack56, $stack58, $stack9, $stack11;
        org.apache.maven.model.PluginExecution pluginExecution;
        java.util.List $stack10, $stack27, $stack32;
        java.lang.Object $stack12, $stack15, $stack37;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack17;
        int $stack28;
        java.util.Iterator iter;
        boolean $stack34, $stack52;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        pluginExecution := @parameter0: org.apache.maven.model.PluginExecution;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        if $stack8 == null goto label1;

        $stack51 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        $stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack52 != 0 goto label1;

        $stack54 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack55 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack54, "id");

        $stack56 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        $stack57 = interfaceinvoke $stack55.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack56);

        $stack58 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack57.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack58, "id");

     label1:
        $stack9 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getPhase()>();

        if $stack9 == null goto label2;

        $stack44 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack45 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack44, "phase");

        $stack46 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getPhase()>();

        $stack47 = interfaceinvoke $stack45.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack46);

        $stack48 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack47.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack48, "phase");

     label2:
        $stack10 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        if $stack10 == null goto label5;

        $stack27 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        $stack28 = interfaceinvoke $stack27.<java.util.List: int size()>();

        if $stack28 <= 0 goto label5;

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "goals");

        $stack32 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        iter = interfaceinvoke $stack32.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack34 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack34 == 0 goto label4;

        $stack37 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        goal = (java.lang.String) $stack37;

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack39 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack38, "goal");

        $stack40 = interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(goal);

        $stack41 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack41, "goal");

        goto label3;

     label4:
        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "goals");

     label5:
        $stack11 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getInherited()>();

        if $stack11 == null goto label6;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "inherited");

        $stack22 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getInherited()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "inherited");

     label6:
        $stack12 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.Object getConfiguration()>();

        if $stack12 == null goto label7;

        $stack15 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.Object getConfiguration()>();

        $stack17 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack15;

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack17.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack16, serializer);

     label7:
        $stack13 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack13, tagName);

        return;
    }

    private void writePluginManagement(org.apache.maven.model.PluginManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        java.lang.String tagName, $stack6, $stack15, $stack20, $stack9;
        org.apache.maven.model.PluginManagement pluginManagement;
        java.util.List $stack8, $stack11, $stack17;
        int $stack12;
        java.util.Iterator iter;
        boolean $stack19;
        java.lang.Object $stack22;
        org.apache.maven.model.Plugin o;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0;

        this := @this: MavenXpp3Writer;

        pluginManagement := @parameter0: org.apache.maven.model.PluginManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke pluginManagement.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        if $stack8 == null goto label3;

        $stack11 = virtualinvoke pluginManagement.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        $stack12 = interfaceinvoke $stack11.<java.util.List: int size()>();

        if $stack12 <= 0 goto label3;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack15, "plugins");

        $stack17 = virtualinvoke pluginManagement.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack17.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack19 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label2;

        $stack22 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Plugin) $stack22;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "plugin", serializer);

        goto label1;

     label2:
        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "plugins");

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writePrerequisites(org.apache.maven.model.Prerequisites, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack14, $stack16;
        java.lang.String tagName, $stack4, $stack6, $stack9, $stack13, $stack15, $stack17, $stack7;
        org.apache.maven.model.Prerequisites prerequisites;
        boolean $stack10;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        prerequisites := @parameter0: org.apache.maven.model.Prerequisites;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke prerequisites.<org.apache.maven.model.Prerequisites: java.lang.String getMaven()>();

        if $stack6 == null goto label1;

        $stack9 = virtualinvoke prerequisites.<org.apache.maven.model.Prerequisites: java.lang.String getMaven()>();

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>("2.0");

        if $stack10 != 0 goto label1;

        $stack13 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack14 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack13, "maven");

        $stack15 = virtualinvoke prerequisites.<org.apache.maven.model.Prerequisites: java.lang.String getMaven()>();

        $stack16 = interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack15);

        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack16.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, "maven");

     label1:
        $stack7 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack7, tagName);

        return;
    }

    private void writeProfile(org.apache.maven.model.Profile, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack83, $stack84, $stack102, $stack103, $stack115, $stack117;
        java.lang.String tagName, $stack7, $stack9, $stack21, $stack27, $stack33, $stack38, $stack45, $stack50, $stack57, $stack62, $stack71, $stack77, value, $stack82, $stack85, $stack93, $stack98, $stack101, $stack104, $stack111, $stack114, $stack116, $stack118, module;
        org.apache.maven.model.Profile profile;
        org.apache.maven.model.BuildBase $stack11, $stack107;
        java.util.List $stack12, $stack16, $stack30, $stack35, $stack42, $stack47, $stack54, $stack59, $stack90, $stack95, $stack17, $stack18;
        java.util.Properties $stack14, $stack68, $stack73, $stack80;
        org.apache.maven.model.Reporting $stack20, $stack23;
        MavenXpp3Writer this;
        java.lang.Object $stack26, $stack40, $stack52, $stack64, $stack79, $stack81, $stack100, $stack19;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack28;
        int $stack31, $stack43, $stack55, $stack69, $stack91;
        boolean $stack37, $stack49, $stack61, $stack76, $stack97, $stack112;
        org.apache.maven.model.DependencyManagement $stack66, $stack15;
        java.util.Set $stack74;
        org.apache.maven.model.DistributionManagement $stack88, $stack13;
        org.apache.maven.model.Activation $stack109, $stack10;
        java.util.Iterator iter;
        org.apache.maven.model.Dependency module#18;
        org.apache.maven.model.Repository module#24;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: MavenXpp3Writer;

        profile := @parameter0: org.apache.maven.model.Profile;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack7 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        $stack9 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        if $stack9 == null goto label01;

        $stack111 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack112 = virtualinvoke $stack111.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack112 != 0 goto label01;

        $stack114 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack115 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack114, "id");

        $stack116 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack117 = interfaceinvoke $stack115.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack116);

        $stack118 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack117.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack118, "id");

     label01:
        $stack10 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        if $stack10 == null goto label02;

        $stack109 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeActivation(org.apache.maven.model.Activation,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack109, "activation", serializer);

     label02:
        $stack11 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.BuildBase getBuild()>();

        if $stack11 == null goto label03;

        $stack107 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.BuildBase getBuild()>();

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeBuildBase(org.apache.maven.model.BuildBase,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack107, "build", serializer);

     label03:
        $stack12 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getModules()>();

        if $stack12 == null goto label06;

        $stack90 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getModules()>();

        $stack91 = interfaceinvoke $stack90.<java.util.List: int size()>();

        if $stack91 <= 0 goto label06;

        $stack93 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack93, "modules");

        $stack95 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getModules()>();

        iter = interfaceinvoke $stack95.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $stack97 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack97 == 0 goto label05;

        $stack100 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module = (java.lang.String) $stack100;

        $stack101 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack102 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack101, "module");

        $stack103 = interfaceinvoke $stack102.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(module);

        $stack104 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack103.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack104, "module");

        goto label04;

     label05:
        $stack98 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack98, "modules");

     label06:
        $stack13 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if $stack13 == null goto label07;

        $stack88 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDistributionManagement(org.apache.maven.model.DistributionManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack88, "distributionManagement", serializer);

     label07:
        $stack14 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        if $stack14 == null goto label10;

        $stack68 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        $stack69 = virtualinvoke $stack68.<java.util.Properties: int size()>();

        if $stack69 <= 0 goto label10;

        $stack71 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack71, "properties");

        $stack73 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        $stack74 = virtualinvoke $stack73.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack74.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $stack76 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack76 == 0 goto label09;

        $stack79 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module = (java.lang.String) $stack79;

        $stack80 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        $stack81 = virtualinvoke $stack80.<java.util.Properties: java.lang.Object get(java.lang.Object)>(module);

        value = (java.lang.String) $stack81;

        $stack82 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack83 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack82, module);

        $stack84 = interfaceinvoke $stack83.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack85 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack84.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack85, module);

        goto label08;

     label09:
        $stack77 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack77, "properties");

     label10:
        $stack15 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if $stack15 == null goto label11;

        $stack66 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDependencyManagement(org.apache.maven.model.DependencyManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack66, "dependencyManagement", serializer);

     label11:
        $stack16 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getDependencies()>();

        if $stack16 == null goto label14;

        $stack54 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getDependencies()>();

        $stack55 = interfaceinvoke $stack54.<java.util.List: int size()>();

        if $stack55 <= 0 goto label14;

        $stack57 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack57, "dependencies");

        $stack59 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getDependencies()>();

        iter = interfaceinvoke $stack59.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $stack61 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack61 == 0 goto label13;

        $stack64 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module#18 = (org.apache.maven.model.Dependency) $stack64;

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(module#18, "dependency", serializer);

        goto label12;

     label13:
        $stack62 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack62, "dependencies");

     label14:
        $stack17 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getRepositories()>();

        if $stack17 == null goto label17;

        $stack42 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getRepositories()>();

        $stack43 = interfaceinvoke $stack42.<java.util.List: int size()>();

        if $stack43 <= 0 goto label17;

        $stack45 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack45, "repositories");

        $stack47 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getRepositories()>();

        iter = interfaceinvoke $stack47.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $stack49 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack49 == 0 goto label16;

        $stack52 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module#24 = (org.apache.maven.model.Repository) $stack52;

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(module#24, "repository", serializer);

        goto label15;

     label16:
        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "repositories");

     label17:
        $stack18 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getPluginRepositories()>();

        if $stack18 == null goto label20;

        $stack30 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getPluginRepositories()>();

        $stack31 = interfaceinvoke $stack30.<java.util.List: int size()>();

        if $stack31 <= 0 goto label20;

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack33, "pluginRepositories");

        $stack35 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getPluginRepositories()>();

        iter = interfaceinvoke $stack35.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $stack37 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack37 == 0 goto label19;

        $stack40 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module#24 = (org.apache.maven.model.Repository) $stack40;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(module#24, "pluginRepository", serializer);

        goto label18;

     label19:
        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "pluginRepositories");

     label20:
        $stack19 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.Object getReports()>();

        if $stack19 == null goto label21;

        $stack26 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.Object getReports()>();

        $stack28 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack26;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack28.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack27, serializer);

     label21:
        $stack20 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Reporting getReporting()>();

        if $stack20 == null goto label22;

        $stack23 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Reporting getReporting()>();

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeReporting(org.apache.maven.model.Reporting,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack23, "reporting", serializer);

     label22:
        $stack21 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack21, tagName);

        return;
    }

    private void writeRelocation(org.apache.maven.model.Relocation, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30, $stack35, $stack37;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36, $stack38;
        org.apache.maven.model.Relocation relocation;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        relocation := @parameter0: org.apache.maven.model.Relocation;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getGroupId()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "groupId");

        $stack36 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getGroupId()>();

        $stack37 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack36);

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "groupId");

     label1:
        $stack7 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getArtifactId()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "artifactId");

        $stack29 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getArtifactId()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "artifactId");

     label2:
        $stack8 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getVersion()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "version");

        $stack22 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getVersion()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "version");

     label3:
        $stack9 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getMessage()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "message");

        $stack14 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getMessage()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "message");

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeReportPlugin(org.apache.maven.model.ReportPlugin, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack22, $stack24, $stack41, $stack43, $stack48, $stack50, $stack58, $stack60;
        java.lang.String tagName, $stack6, $stack8, $stack10, $stack14, $stack17, $stack21, $stack23, $stack25, $stack31, $stack36, $stack40, $stack42, $stack44, $stack47, $stack49, $stack51, $stack54, $stack57, $stack59, $stack61, $stack9, $stack12;
        org.apache.maven.model.ReportPlugin reportPlugin;
        java.util.List $stack11, $stack28, $stack33;
        java.lang.Object $stack13, $stack16, $stack38;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack18;
        int $stack29;
        java.util.Iterator iter;
        boolean $stack35, $stack55;
        org.apache.maven.model.ReportSet o;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0;

        this := @this: MavenXpp3Writer;

        reportPlugin := @parameter0: org.apache.maven.model.ReportPlugin;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        if $stack8 == null goto label1;

        $stack54 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        $stack55 = virtualinvoke $stack54.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.maven.plugins");

        if $stack55 != 0 goto label1;

        $stack57 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack58 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack57, "groupId");

        $stack59 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        $stack60 = interfaceinvoke $stack58.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack59);

        $stack61 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack60.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack61, "groupId");

     label1:
        $stack9 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        if $stack9 == null goto label2;

        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack48 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack47, "artifactId");

        $stack49 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        $stack50 = interfaceinvoke $stack48.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack49);

        $stack51 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack50.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack51, "artifactId");

     label2:
        $stack10 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getVersion()>();

        if $stack10 == null goto label3;

        $stack40 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack41 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack40, "version");

        $stack42 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getVersion()>();

        $stack43 = interfaceinvoke $stack41.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack42);

        $stack44 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack43.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack44, "version");

     label3:
        $stack11 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        if $stack11 == null goto label6;

        $stack28 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        $stack29 = interfaceinvoke $stack28.<java.util.List: int size()>();

        if $stack29 <= 0 goto label6;

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack31, "reportSets");

        $stack33 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        iter = interfaceinvoke $stack33.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack35 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack35 == 0 goto label5;

        $stack38 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.ReportSet) $stack38;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeReportSet(org.apache.maven.model.ReportSet,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "reportSet", serializer);

        goto label4;

     label5:
        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack36, "reportSets");

     label6:
        $stack12 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getInherited()>();

        if $stack12 == null goto label7;

        $stack21 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack22 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack21, "inherited");

        $stack23 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getInherited()>();

        $stack24 = interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack23);

        $stack25 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack24.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack25, "inherited");

     label7:
        $stack13 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.Object getConfiguration()>();

        if $stack13 == null goto label8;

        $stack16 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.Object getConfiguration()>();

        $stack18 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack16;

        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack18.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack17, serializer);

     label8:
        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, tagName);

        return;
    }

    private void writeReportSet(org.apache.maven.model.ReportSet, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack20, $stack22, $stack38, $stack39, $stack47, $stack49;
        java.lang.String tagName, $stack6, $stack8, $stack12, $stack15, $stack19, $stack21, $stack23, $stack29, $stack34, report, $stack37, $stack40, $stack43, $stack46, $stack48, $stack50, $stack10;
        org.apache.maven.model.ReportSet reportSet;
        java.lang.Object $stack11, $stack14, $stack36;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack16;
        java.util.List $stack26, $stack31, $stack9;
        int $stack27;
        java.util.Iterator iter;
        boolean $stack33, $stack44;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        reportSet := @parameter0: org.apache.maven.model.ReportSet;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        if $stack8 == null goto label1;

        $stack43 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        $stack44 = virtualinvoke $stack43.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack44 != 0 goto label1;

        $stack46 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack47 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack46, "id");

        $stack48 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        $stack49 = interfaceinvoke $stack47.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack48);

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "id");

     label1:
        $stack9 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        if $stack9 == null goto label4;

        $stack26 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        $stack27 = interfaceinvoke $stack26.<java.util.List: int size()>();

        if $stack27 <= 0 goto label4;

        $stack29 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack29, "reports");

        $stack31 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        iter = interfaceinvoke $stack31.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack33 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack33 == 0 goto label3;

        $stack36 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        report = (java.lang.String) $stack36;

        $stack37 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack38 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack37, "report");

        $stack39 = interfaceinvoke $stack38.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(report);

        $stack40 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "report");

        goto label2;

     label3:
        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack34, "reports");

     label4:
        $stack10 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getInherited()>();

        if $stack10 == null goto label5;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "inherited");

        $stack21 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getInherited()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "inherited");

     label5:
        $stack11 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.Object getConfiguration()>();

        if $stack11 == null goto label6;

        $stack14 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.Object getConfiguration()>();

        $stack16 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack14;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack16.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack15, serializer);

     label6:
        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack12, tagName);

        return;
    }

    private void writeReporting(org.apache.maven.model.Reporting, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack27, $stack29, $stack34, $stack36;
        java.lang.String tagName, $stack6, $stack8, $stack9, $stack17, $stack22, $stack26, $stack28, $stack30, $stack33, $stack35, $stack37, $stack11;
        org.apache.maven.model.Reporting reporting;
        java.util.List $stack10, $stack13, $stack19;
        int $stack14;
        java.util.Iterator iter;
        boolean $stack21;
        java.lang.Object $stack24;
        org.apache.maven.model.ReportPlugin o;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0;

        this := @this: MavenXpp3Writer;

        reporting := @parameter0: org.apache.maven.model.Reporting;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getExcludeDefaults()>();

        if $stack8 == null goto label1;

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack34 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack33, "excludeDefaults");

        $stack35 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getExcludeDefaults()>();

        $stack36 = interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack35);

        $stack37 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack36.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack37, "excludeDefaults");

     label1:
        $stack9 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getOutputDirectory()>();

        if $stack9 == null goto label2;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "outputDirectory");

        $stack28 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getOutputDirectory()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "outputDirectory");

     label2:
        $stack10 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        if $stack10 == null goto label5;

        $stack13 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        $stack14 = interfaceinvoke $stack13.<java.util.List: int size()>();

        if $stack14 <= 0 goto label5;

        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack17, "plugins");

        $stack19 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack19.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack21 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label4;

        $stack24 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.ReportPlugin) $stack24;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeReportPlugin(org.apache.maven.model.ReportPlugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "plugin", serializer);

        goto label3;

     label4:
        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "plugins");

     label5:
        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writeRepository(org.apache.maven.model.Repository, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack19, $stack21, $stack25, $stack27, $stack32, $stack34, $stack39, $stack41;
        java.lang.String tagName, $stack4, $stack8, $stack9, $stack10, $stack11, $stack14, $stack18, $stack20, $stack22, $stack24, $stack26, $stack28, $stack31, $stack33, $stack35, $stack38, $stack40, $stack42, $stack12;
        org.apache.maven.model.Repository repository;
        org.apache.maven.model.RepositoryPolicy $stack6, $stack7, $stack45, $stack47;
        boolean $stack15;
        MavenXpp3Writer this;
        org.apache.maven.model.io.xpp3.MavenXpp3Writer $r0, $r1;

        this := @this: MavenXpp3Writer;

        repository := @parameter0: org.apache.maven.model.Repository;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        if $stack6 == null goto label1;

        $stack47 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack47, "releases", serializer);

     label1:
        $stack7 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        if $stack7 == null goto label2;

        $stack45 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3Writer: void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack45, "snapshots", serializer);

     label2:
        $stack8 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        if $stack8 == null goto label3;

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack39 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack38, "id");

        $stack40 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $stack41 = interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack40);

        $stack42 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack41.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack42, "id");

     label3:
        $stack9 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getName()>();

        if $stack9 == null goto label4;

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack32 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack31, "name");

        $stack33 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getName()>();

        $stack34 = interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack33);

        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "name");

     label4:
        $stack10 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getUrl()>();

        if $stack10 == null goto label5;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack25 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "url");

        $stack26 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getUrl()>();

        $stack27 = interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack26);

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "url");

     label5:
        $stack11 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getLayout()>();

        if $stack11 == null goto label6;

        $stack14 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getLayout()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack15 != 0 goto label6;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "layout");

        $stack20 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getLayout()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "layout");

     label6:
        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack12, tagName);

        return;
    }

    private void writeRepositoryBase(org.apache.maven.model.RepositoryBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack17, $stack19, $stack23, $stack25, $stack30, $stack32, $stack37, $stack39;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack12, $stack16, $stack18, $stack20, $stack22, $stack24, $stack26, $stack29, $stack31, $stack33, $stack36, $stack38, $stack40, $stack10;
        org.apache.maven.model.RepositoryBase repositoryBase;
        boolean $stack13;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        repositoryBase := @parameter0: org.apache.maven.model.RepositoryBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getId()>();

        if $stack6 == null goto label1;

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack37 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "id");

        $stack38 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getId()>();

        $stack39 = interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack38);

        $stack40 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "id");

     label1:
        $stack7 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getName()>();

        if $stack7 == null goto label2;

        $stack29 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack30 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack29, "name");

        $stack31 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getName()>();

        $stack32 = interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack31);

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack33, "name");

     label2:
        $stack8 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getUrl()>();

        if $stack8 == null goto label3;

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack23 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack22, "url");

        $stack24 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getUrl()>();

        $stack25 = interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack24);

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack26, "url");

     label3:
        $stack9 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getLayout()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getLayout()>();

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack13 != 0 goto label4;

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack17 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "layout");

        $stack18 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getLayout()>();

        $stack19 = interfaceinvoke $stack17.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack18);

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "layout");

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack12, $stack14, $stack20, $stack22, $stack27, $stack29;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack11, $stack13, $stack15, $stack19, $stack21, $stack23, $stack26, $stack28, $stack30;
        org.apache.maven.model.RepositoryPolicy repositoryPolicy;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        repositoryPolicy := @parameter0: org.apache.maven.model.RepositoryPolicy;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getEnabled()>();

        if $stack6 == null goto label1;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "enabled");

        $stack28 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getEnabled()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "enabled");

     label1:
        $stack7 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        if $stack7 == null goto label2;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "updatePolicy");

        $stack21 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "updatePolicy");

     label2:
        $stack8 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        if $stack8 == null goto label3;

        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack12 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack11, "checksumPolicy");

        $stack13 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        $stack14 = interfaceinvoke $stack12.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack13);

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack15, "checksumPolicy");

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writeResource(org.apache.maven.model.Resource, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack28, $stack29, $stack45, $stack46, $stack51, $stack53, $stack58, $stack60, $stack65, $stack67;
        java.lang.String tagName, $stack6, $stack8, $stack9, $stack10, $stack19, $stack24, $stack27, $stack30, $stack36, $stack41, $stack44, $stack47, $stack50, $stack52, $stack54, $stack57, $stack59, $stack61, $stack64, $stack66, $stack68, include, $stack13;
        org.apache.maven.model.Resource resource;
        java.util.List $stack11, $stack15, $stack21, $stack33, $stack38, $stack12;
        int $stack16, $stack34;
        boolean $stack23, $stack40;
        java.lang.Object $stack26, $stack43;
        MavenXpp3Writer this;
        java.util.Iterator iter;

        this := @this: MavenXpp3Writer;

        resource := @parameter0: org.apache.maven.model.Resource;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getTargetPath()>();

        if $stack8 == null goto label1;

        $stack64 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack65 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack64, "targetPath");

        $stack66 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getTargetPath()>();

        $stack67 = interfaceinvoke $stack65.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack66);

        $stack68 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack67.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack68, "targetPath");

     label1:
        $stack9 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getFiltering()>();

        if $stack9 == null goto label2;

        $stack57 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack58 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack57, "filtering");

        $stack59 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getFiltering()>();

        $stack60 = interfaceinvoke $stack58.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack59);

        $stack61 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack60.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack61, "filtering");

     label2:
        $stack10 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getDirectory()>();

        if $stack10 == null goto label3;

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack51 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack50, "directory");

        $stack52 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getDirectory()>();

        $stack53 = interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack52);

        $stack54 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack53.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack54, "directory");

     label3:
        $stack11 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getIncludes()>();

        if $stack11 == null goto label6;

        $stack33 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getIncludes()>();

        $stack34 = interfaceinvoke $stack33.<java.util.List: int size()>();

        if $stack34 <= 0 goto label6;

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "includes");

        $stack38 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getIncludes()>();

        iter = interfaceinvoke $stack38.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack40 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack40 == 0 goto label5;

        $stack43 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack43;

        $stack44 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack45 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack44, "include");

        $stack46 = interfaceinvoke $stack45.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack46.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack47, "include");

        goto label4;

     label5:
        $stack41 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack41, "includes");

     label6:
        $stack12 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getExcludes()>();

        if $stack12 == null goto label9;

        $stack15 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getExcludes()>();

        $stack16 = interfaceinvoke $stack15.<java.util.List: int size()>();

        if $stack16 <= 0 goto label9;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "excludes");

        $stack21 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getExcludes()>();

        iter = interfaceinvoke $stack21.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $stack23 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack23 == 0 goto label8;

        $stack26 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack26;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "exclude");

        $stack29 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "exclude");

        goto label7;

     label8:
        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "excludes");

     label9:
        $stack13 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack13, tagName);

        return;
    }

    private void writeScm(org.apache.maven.model.Scm, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack16, $stack18, $stack27, $stack29, $stack33, $stack35, $stack40, $stack42;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack13, $stack15, $stack17, $stack19, $stack23, $stack26, $stack28, $stack30, $stack32, $stack34, $stack36, $stack39, $stack41, $stack43, $stack46, $stack48, $stack51, $stack53, $stack56, $stack58, $stack12;
        org.apache.maven.model.Scm scm;
        boolean $stack24;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        scm := @parameter0: org.apache.maven.model.Scm;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmConnectionInheritAppendPath()>();

        if $stack6 == null goto label1;

        $stack56 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack58 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmConnectionInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack56, "child.scm.connection.inherit.append.path", $stack58);

     label1:
        $stack7 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmDeveloperConnectionInheritAppendPath()>();

        if $stack7 == null goto label2;

        $stack51 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack53 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmDeveloperConnectionInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack51, "child.scm.developerConnection.inherit.append.path", $stack53);

     label2:
        $stack8 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmUrlInheritAppendPath()>();

        if $stack8 == null goto label3;

        $stack46 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack48 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmUrlInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack46, "child.scm.url.inherit.append.path", $stack48);

     label3:
        $stack9 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getConnection()>();

        if $stack9 == null goto label4;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "connection");

        $stack41 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getConnection()>();

        $stack42 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack41);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "connection");

     label4:
        $stack10 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getDeveloperConnection()>();

        if $stack10 == null goto label5;

        $stack32 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack33 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack32, "developerConnection");

        $stack34 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getDeveloperConnection()>();

        $stack35 = interfaceinvoke $stack33.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack34);

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack36, "developerConnection");

     label5:
        $stack11 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getTag()>();

        if $stack11 == null goto label6;

        $stack23 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getTag()>();

        $stack24 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $stack24 != 0 goto label6;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "tag");

        $stack28 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getTag()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "tag");

     label6:
        $stack12 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getUrl()>();

        if $stack12 == null goto label7;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack16 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack15, "url");

        $stack17 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getUrl()>();

        $stack18 = interfaceinvoke $stack16.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack17);

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack18.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack19, "url");

     label7:
        $stack13 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack13, tagName);

        return;
    }

    private void writeSite(org.apache.maven.model.Site, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36;
        org.apache.maven.model.Site site;
        MavenXpp3Writer this;

        this := @this: MavenXpp3Writer;

        site := @parameter0: org.apache.maven.model.Site;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getChildSiteUrlInheritAppendPath()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack36 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getChildSiteUrlInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack34, "child.site.url.inherit.append.path", $stack36);

     label1:
        $stack7 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getId()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "id");

        $stack29 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getId()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "id");

     label2:
        $stack8 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getName()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "name");

        $stack22 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getName()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "name");

     label3:
        $stack9 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getUrl()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "url");

        $stack14 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getUrl()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "url");

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    static void <clinit>()
    {
        <org.apache.maven.model.io.xpp3.MavenXpp3Writer: java.lang.String NAMESPACE> = null;

        return;
    }
}
