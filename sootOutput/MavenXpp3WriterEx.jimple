public class MavenXpp3WriterEx extends java.lang.Object
{
    private static final java.lang.String NAMESPACE;
    private java.lang.String fileComment;
    protected org.apache.maven.model.InputLocation$StringFormatter stringFormatter;

    public void <init>()
    {
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0;

        this := @this: MavenXpp3WriterEx;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String fileComment> = null;

        return;
    }

    public void setFileComment(java.lang.String)
    {
        MavenXpp3WriterEx this;
        java.lang.String fileComment;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0;

        this := @this: MavenXpp3WriterEx;

        fileComment := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String fileComment> = fileComment;

        return;
    }

    public void setStringFormatter(org.apache.maven.model.InputLocation$StringFormatter)
    {
        MavenXpp3WriterEx this;
        org.apache.maven.model.InputLocation$StringFormatter stringFormatter;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0;

        this := @this: MavenXpp3WriterEx;

        stringFormatter := @parameter0: org.apache.maven.model.InputLocation$StringFormatter;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: org.apache.maven.model.InputLocation$StringFormatter stringFormatter> = stringFormatter;

        return;
    }

    protected java.lang.String toString(org.apache.maven.model.InputLocation)
    {
        MavenXpp3WriterEx this;
        org.apache.maven.model.InputLocation$StringFormatter $stack2, $stack13;
        java.lang.StringBuilder $stack4, $stack7, $stack8, $stack10, $stack11, $u0;
        org.apache.maven.model.InputLocation location;
        org.apache.maven.model.InputSource $stack5;
        java.lang.String $stack6, $stack12, $stack14;
        int $stack9;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r1;

        this := @this: MavenXpp3WriterEx;

        location := @parameter0: org.apache.maven.model.InputLocation;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $stack2 = $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: org.apache.maven.model.InputLocation$StringFormatter stringFormatter>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $stack13 = $r1.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: org.apache.maven.model.InputLocation$StringFormatter stringFormatter>;

        $stack14 = virtualinvoke $stack13.<org.apache.maven.model.InputLocation$StringFormatter: java.lang.String toString(org.apache.maven.model.InputLocation)>(location);

        return $stack14;

     label1:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $stack5 = virtualinvoke location.<org.apache.maven.model.InputLocation: org.apache.maven.model.InputSource getSource()>();

        $stack6 = virtualinvoke $stack5.<org.apache.maven.model.InputSource: java.lang.String toString()>();

        $stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack9 = virtualinvoke location.<org.apache.maven.model.InputLocation: int getLineNumber()>();

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack12;
    }

    public void write(java.io.Writer, org.apache.maven.model.Model) throws java.io.IOException
    {
        java.io.Writer writer;
        org.apache.maven.model.Model model;
        java.lang.String $stack5;
        MavenXpp3WriterEx this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r4;

        this := @this: MavenXpp3WriterEx;

        writer := @parameter0: java.io.Writer;

        model := @parameter1: org.apache.maven.model.Model;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.Writer)>(writer);

        $stack5 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack5, null);

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeModel(org.apache.maven.model.Model,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(model, "project", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    public void write(java.io.OutputStream, org.apache.maven.model.Model) throws java.io.IOException
    {
        java.io.OutputStream stream;
        org.apache.maven.model.Model model;
        java.lang.String $stack5, $stack6;
        MavenXpp3WriterEx this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r4;

        this := @this: MavenXpp3WriterEx;

        stream := @parameter0: java.io.OutputStream;

        model := @parameter1: org.apache.maven.model.Model;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $stack5 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelEncoding()>();

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(stream, $stack5);

        $stack6 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack6, null);

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeModel(org.apache.maven.model.Model,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(model, "project", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    protected void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        org.codehaus.plexus.util.xml.Xpp3Dom dom, attributeName#8;
        java.lang.String $stack8, $stack9, $stack14, $stack15, $stack21, $stack28, $stack29, attributeName, value#9;
        java.lang.String[] attributeNames;
        java.lang.Object $stack17, $stack19;
        int $stack18, l5, l6;
        MavenXpp3WriterEx this;
        org.apache.maven.model.InputLocation $stack20;
        org.codehaus.plexus.util.xml.Xpp3Dom[] value#5;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r1;

        this := @this: MavenXpp3WriterEx;

        dom := @parameter0: org.codehaus.plexus.util.xml.Xpp3Dom;

        serializer := @parameter1: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack9 = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getName()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, $stack9);

        attributeNames = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String[] getAttributeNames()>();

        l5 = lengthof attributeNames;

        l6 = 0;

     label1:
        if l6 >= l5 goto label2;

        attributeName = attributeNames[l6];

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack29 = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getAttribute(java.lang.String)>(attributeName);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack28, attributeName, $stack29);

        l6 = l6 + 1;

        goto label1;

     label2:
        value#5 = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom[] getChildren()>();

        l5 = lengthof value#5;

        l6 = 0;

     label3:
        if l6 >= l5 goto label4;

        attributeName#8 = value#5[l6];

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(attributeName#8, serializer);

        l6 = l6 + 1;

        goto label3;

     label4:
        value#9 = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getValue()>();

        if value#9 == null goto label5;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value#9);

     label5:
        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack15 = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getName()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, $stack15);

        $stack17 = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.Object getInputLocation()>();

        if $stack17 == null goto label6;

        $stack18 = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: int getChildCount()>();

        if $stack18 != 0 goto label6;

        $stack19 = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.Object getInputLocation()>();

        $stack20 = (org.apache.maven.model.InputLocation) $stack19;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $stack21 = virtualinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String toString(org.apache.maven.model.InputLocation)>($stack20);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void comment(java.lang.String)>($stack21);

     label6:
        return;
    }

    private void writeActivation(org.apache.maven.model.Activation, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack28, $stack31;
        java.lang.String tagName, $stack4, $stack7, $stack11, $stack20, $stack22, $stack24, $stack27, $stack30, $stack32;
        org.apache.maven.model.Activation activation;
        boolean $stack6, $stack29;
        org.apache.maven.model.ActivationOS $stack8, $stack18;
        org.apache.maven.model.ActivationProperty $stack9, $stack16;
        org.apache.maven.model.ActivationFile $stack10, $stack13;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r5, $r6;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: MavenXpp3WriterEx;

        activation := @parameter0: org.apache.maven.model.Activation;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activation.<org.apache.maven.model.Activation: boolean isActiveByDefault()>();

        if $stack6 == 0 goto label1;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "activeByDefault");

        $stack29 = virtualinvoke activation.<org.apache.maven.model.Activation: boolean isActiveByDefault()>();

        $stack30 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack29);

        $stack31 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack30);

        $stack32 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack31.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack32, "activeByDefault");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) activation;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "activeByDefault", serializer);

     label1:
        $stack7 = virtualinvoke activation.<org.apache.maven.model.Activation: java.lang.String getJdk()>();

        if $stack7 == null goto label2;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "jdk");

        $stack22 = virtualinvoke activation.<org.apache.maven.model.Activation: java.lang.String getJdk()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "jdk");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) activation;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "jdk", serializer);

     label2:
        $stack8 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationOS getOs()>();

        if $stack8 == null goto label3;

        $stack18 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationOS getOs()>();

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeActivationOS(org.apache.maven.model.ActivationOS,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack18, "os", serializer);

     label3:
        $stack9 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationProperty getProperty()>();

        if $stack9 == null goto label4;

        $stack16 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationProperty getProperty()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeActivationProperty(org.apache.maven.model.ActivationProperty,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack16, "property", serializer);

     label4:
        $stack10 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationFile getFile()>();

        if $stack10 == null goto label5;

        $stack13 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationFile getFile()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeActivationFile(org.apache.maven.model.ActivationFile,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack13, "file", serializer);

     label5:
        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writeActivationFile(org.apache.maven.model.ActivationFile, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.ActivationFile activationFile;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: MavenXpp3WriterEx;

        activationFile := @parameter0: org.apache.maven.model.ActivationFile;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "missing");

        $stack20 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "missing");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) activationFile;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "missing", serializer);

     label1:
        $stack7 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "exists");

        $stack12 = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "exists");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) activationFile;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "exists", serializer);

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeActivationOS(org.apache.maven.model.ActivationOS, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30, $stack35, $stack37;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36, $stack38;
        org.apache.maven.model.ActivationOS activationOS;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7;

        this := @this: MavenXpp3WriterEx;

        activationOS := @parameter0: org.apache.maven.model.ActivationOS;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "name");

        $stack36 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getName()>();

        $stack37 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack36);

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "name");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) activationOS;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "name", serializer);

     label1:
        $stack7 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getFamily()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "family");

        $stack29 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getFamily()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "family");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) activationOS;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "family", serializer);

     label2:
        $stack8 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getArch()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "arch");

        $stack22 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getArch()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "arch");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) activationOS;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "arch", serializer);

     label3:
        $stack9 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getVersion()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "version");

        $stack14 = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getVersion()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "version");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) activationOS;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "version", serializer);

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeActivationProperty(org.apache.maven.model.ActivationProperty, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.ActivationProperty activationProperty;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: MavenXpp3WriterEx;

        activationProperty := @parameter0: org.apache.maven.model.ActivationProperty;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "name");

        $stack20 = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getName()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "name");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) activationProperty;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "name", serializer);

     label1:
        $stack7 = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getValue()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "value");

        $stack12 = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getValue()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "value");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) activationProperty;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "value", serializer);

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeBuild(org.apache.maven.model.Build, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack54, $stack55, $stack62, $stack64, $stack69, $stack71, $stack100, $stack102, $stack119, $stack121, $stack126, $stack128, $stack133, $stack135, $stack140, $stack142, $stack147, $stack149;
        java.lang.String tagName, $stack8, $stack10, $stack11, $stack12, $stack13, $stack14, $stack20, $stack30, $stack35, $stack44, $stack50, filter, $stack53, $stack56, $stack61, $stack63, $stack65, $stack68, $stack70, $stack72, $stack78, $stack83, $stack90, $stack95, $stack99, $stack101, $stack103, $stack109, $stack114, $stack118, $stack120, $stack122, $stack125, $stack127, $stack129, $stack132, $stack134, $stack136, $stack139, $stack141, $stack143, $stack146, $stack148, $stack150, $stack16, $stack19, $stack24;
        org.apache.maven.model.Build build;
        java.util.List $stack15, $stack17, $stack21, $stack23, $stack26, $stack32, $stack41, $stack47, $stack75, $stack80, $stack87, $stack92, $stack106, $stack111, $stack18;
        int $stack27, $stack42, $stack58, $stack76, $stack88, $stack107, o#20;
        boolean $stack34, $stack49, $stack82, $stack94, $stack113;
        java.lang.Object $stack37, $stack52, $stack85, $stack97, $stack116;
        MavenXpp3WriterEx this;
        org.apache.maven.model.PluginManagement $stack39, $stack22;
        java.util.Iterator iter;
        java.lang.Integer $stack59;
        org.apache.maven.model.Extension o;
        org.apache.maven.model.Resource o#8;
        org.apache.maven.model.InputLocation iter;
        org.apache.maven.model.Plugin o#26;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r8, $r10, $r11, $r13, $r14, $r15, $r17, $r19, $r21, $r22;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r9, $r12, $r16, $r18, $r20;

        this := @this: MavenXpp3WriterEx;

        build := @parameter0: org.apache.maven.model.Build;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getSourceDirectory()>();

        if $stack10 == null goto label01;

        $stack146 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack147 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack146, "sourceDirectory");

        $stack148 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getSourceDirectory()>();

        $stack149 = interfaceinvoke $stack147.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack148);

        $stack150 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack149.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack150, "sourceDirectory");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) build;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "sourceDirectory", serializer);

     label01:
        $stack11 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getScriptSourceDirectory()>();

        if $stack11 == null goto label02;

        $stack139 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack140 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack139, "scriptSourceDirectory");

        $stack141 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getScriptSourceDirectory()>();

        $stack142 = interfaceinvoke $stack140.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack141);

        $stack143 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack142.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack143, "scriptSourceDirectory");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) build;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "scriptSourceDirectory", serializer);

     label02:
        $stack12 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestSourceDirectory()>();

        if $stack12 == null goto label03;

        $stack132 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack133 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack132, "testSourceDirectory");

        $stack134 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestSourceDirectory()>();

        $stack135 = interfaceinvoke $stack133.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack134);

        $stack136 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack135.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack136, "testSourceDirectory");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) build;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "testSourceDirectory", serializer);

     label03:
        $stack13 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getOutputDirectory()>();

        if $stack13 == null goto label04;

        $stack125 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack126 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack125, "outputDirectory");

        $stack127 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getOutputDirectory()>();

        $stack128 = interfaceinvoke $stack126.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack127);

        $stack129 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack128.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack129, "outputDirectory");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) build;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "outputDirectory", serializer);

     label04:
        $stack14 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestOutputDirectory()>();

        if $stack14 == null goto label05;

        $stack118 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack119 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack118, "testOutputDirectory");

        $stack120 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestOutputDirectory()>();

        $stack121 = interfaceinvoke $stack119.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack120);

        $stack122 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack121.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack122, "testOutputDirectory");

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) build;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, "testOutputDirectory", serializer);

     label05:
        $stack15 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        if $stack15 == null goto label08;

        $stack106 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        $stack107 = interfaceinvoke $stack106.<java.util.List: int size()>();

        if $stack107 <= 0 goto label08;

        $stack109 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack109, "extensions");

        $stack111 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        iter = interfaceinvoke $stack111.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack113 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack113 == 0 goto label07;

        $stack116 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Extension) $stack116;

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeExtension(org.apache.maven.model.Extension,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "extension", serializer);

        goto label06;

     label07:
        $stack114 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack114, "extensions");

     label08:
        $stack16 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getDefaultGoal()>();

        if $stack16 == null goto label09;

        $stack99 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack100 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack99, "defaultGoal");

        $stack101 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getDefaultGoal()>();

        $stack102 = interfaceinvoke $stack100.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack101);

        $stack103 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack102.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack103, "defaultGoal");

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r12 = (org.apache.maven.model.InputLocationTracker) build;

        specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r12, "defaultGoal", serializer);

     label09:
        $stack17 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getResources()>();

        if $stack17 == null goto label12;

        $stack87 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getResources()>();

        $stack88 = interfaceinvoke $stack87.<java.util.List: int size()>();

        if $stack88 <= 0 goto label12;

        $stack90 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack90, "resources");

        $stack92 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getResources()>();

        iter = interfaceinvoke $stack92.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $stack94 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack94 == 0 goto label11;

        $stack97 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#8 = (org.apache.maven.model.Resource) $stack97;

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeResource(org.apache.maven.model.Resource,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#8, "resource", serializer);

        goto label10;

     label11:
        $stack95 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack95, "resources");

     label12:
        $stack18 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getTestResources()>();

        if $stack18 == null goto label15;

        $stack75 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getTestResources()>();

        $stack76 = interfaceinvoke $stack75.<java.util.List: int size()>();

        if $stack76 <= 0 goto label15;

        $stack78 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack78, "testResources");

        $stack80 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getTestResources()>();

        iter = interfaceinvoke $stack80.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $stack82 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack82 == 0 goto label14;

        $stack85 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#8 = (org.apache.maven.model.Resource) $stack85;

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeResource(org.apache.maven.model.Resource,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#8, "testResource", serializer);

        goto label13;

     label14:
        $stack83 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack83, "testResources");

     label15:
        $stack19 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getDirectory()>();

        if $stack19 == null goto label16;

        $stack68 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack69 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack68, "directory");

        $stack70 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getDirectory()>();

        $stack71 = interfaceinvoke $stack69.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack70);

        $stack72 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack71.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack72, "directory");

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r16 = (org.apache.maven.model.InputLocationTracker) build;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r16, "directory", serializer);

     label16:
        $stack20 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getFinalName()>();

        if $stack20 == null goto label17;

        $stack61 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack62 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack61, "finalName");

        $stack63 = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getFinalName()>();

        $stack64 = interfaceinvoke $stack62.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack63);

        $stack65 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack64.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack65, "finalName");

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r18 = (org.apache.maven.model.InputLocationTracker) build;

        specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r18, "finalName", serializer);

     label17:
        $stack21 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getFilters()>();

        if $stack21 == null goto label20;

        $stack41 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getFilters()>();

        $stack42 = interfaceinvoke $stack41.<java.util.List: int size()>();

        if $stack42 <= 0 goto label20;

        $stack44 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack44, "filters");

        iter = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("filters");

        o#20 = 0;

        $stack47 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getFilters()>();

        iter = interfaceinvoke $stack47.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $stack49 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack49 == 0 goto label19;

        $stack52 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        filter = (java.lang.String) $stack52;

        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack54 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack53, "filter");

        $stack55 = interfaceinvoke $stack54.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(filter);

        $stack56 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack55.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack56, "filter");

        $stack58 = o#20;

        o#20 = o#20 + 1;

        $stack59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack58);

        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r20 = (org.apache.maven.model.InputLocationTracker) iter;

        specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r20, $stack59, serializer);

        goto label18;

     label19:
        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "filters");

     label20:
        $stack22 = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if $stack22 == null goto label21;

        $stack39 = virtualinvoke build.<org.apache.maven.model.Build: org.apache.maven.model.PluginManagement getPluginManagement()>();

        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePluginManagement(org.apache.maven.model.PluginManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack39, "pluginManagement", serializer);

     label21:
        $stack23 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        if $stack23 == null goto label24;

        $stack26 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        $stack27 = interfaceinvoke $stack26.<java.util.List: int size()>();

        if $stack27 <= 0 goto label24;

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "plugins");

        $stack32 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack32.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $stack34 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack34 == 0 goto label23;

        $stack37 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#26 = (org.apache.maven.model.Plugin) $stack37;

        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#26, "plugin", serializer);

        goto label22;

     label23:
        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "plugins");

     label24:
        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, tagName);

        return;
    }

    private void writeBuildBase(org.apache.maven.model.BuildBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack48, $stack49, $stack56, $stack58, $stack63, $stack65, $stack94, $stack96;
        java.lang.String tagName, $stack8, $stack10, $stack14, $stack24, $stack29, $stack38, $stack44, filter, $stack47, $stack50, $stack55, $stack57, $stack59, $stack62, $stack64, $stack66, $stack72, $stack77, $stack84, $stack89, $stack93, $stack95, $stack97, $stack13, $stack18;
        org.apache.maven.model.BuildBase buildBase;
        java.util.List $stack11, $stack15, $stack17, $stack20, $stack26, $stack35, $stack41, $stack69, $stack74, $stack81, $stack86, $stack12;
        int $stack21, $stack36, $stack52, $stack70, $stack82, o#14;
        boolean $stack28, $stack43, $stack76, $stack88;
        java.lang.Object $stack31, $stack46, $stack79, $stack91;
        MavenXpp3WriterEx this;
        org.apache.maven.model.PluginManagement $stack33, $stack16;
        java.util.Iterator iter;
        java.lang.Integer $stack53;
        org.apache.maven.model.Resource o;
        org.apache.maven.model.InputLocation iter;
        org.apache.maven.model.Plugin o#20;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r3, $r4, $r6, $r8, $r10, $r11;
        org.apache.maven.model.InputLocationTracker $r1, $r5, $r7, $r9;

        this := @this: MavenXpp3WriterEx;

        buildBase := @parameter0: org.apache.maven.model.BuildBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getDefaultGoal()>();

        if $stack10 == null goto label01;

        $stack93 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack94 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack93, "defaultGoal");

        $stack95 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getDefaultGoal()>();

        $stack96 = interfaceinvoke $stack94.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack95);

        $stack97 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack96.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack97, "defaultGoal");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) buildBase;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "defaultGoal", serializer);

     label01:
        $stack11 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        if $stack11 == null goto label04;

        $stack81 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        $stack82 = interfaceinvoke $stack81.<java.util.List: int size()>();

        if $stack82 <= 0 goto label04;

        $stack84 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack84, "resources");

        $stack86 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        iter = interfaceinvoke $stack86.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $stack88 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack88 == 0 goto label03;

        $stack91 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Resource) $stack91;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeResource(org.apache.maven.model.Resource,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "resource", serializer);

        goto label02;

     label03:
        $stack89 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack89, "resources");

     label04:
        $stack12 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        if $stack12 == null goto label07;

        $stack69 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        $stack70 = interfaceinvoke $stack69.<java.util.List: int size()>();

        if $stack70 <= 0 goto label07;

        $stack72 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack72, "testResources");

        $stack74 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        iter = interfaceinvoke $stack74.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $stack76 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack76 == 0 goto label06;

        $stack79 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Resource) $stack79;

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeResource(org.apache.maven.model.Resource,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "testResource", serializer);

        goto label05;

     label06:
        $stack77 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack77, "testResources");

     label07:
        $stack13 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getDirectory()>();

        if $stack13 == null goto label08;

        $stack62 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack63 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack62, "directory");

        $stack64 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getDirectory()>();

        $stack65 = interfaceinvoke $stack63.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack64);

        $stack66 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack65.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack66, "directory");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) buildBase;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "directory", serializer);

     label08:
        $stack14 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getFinalName()>();

        if $stack14 == null goto label09;

        $stack55 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack56 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack55, "finalName");

        $stack57 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.lang.String getFinalName()>();

        $stack58 = interfaceinvoke $stack56.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack57);

        $stack59 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack58.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack59, "finalName");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) buildBase;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "finalName", serializer);

     label09:
        $stack15 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        if $stack15 == null goto label12;

        $stack35 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        $stack36 = interfaceinvoke $stack35.<java.util.List: int size()>();

        if $stack36 <= 0 goto label12;

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack38, "filters");

        iter = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("filters");

        o#14 = 0;

        $stack41 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        iter = interfaceinvoke $stack41.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $stack43 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack43 == 0 goto label11;

        $stack46 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        filter = (java.lang.String) $stack46;

        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack48 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack47, "filter");

        $stack49 = interfaceinvoke $stack48.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(filter);

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "filter");

        $stack52 = o#14;

        o#14 = o#14 + 1;

        $stack53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack52);

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) iter;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, $stack53, serializer);

        goto label10;

     label11:
        $stack44 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack44, "filters");

     label12:
        $stack16 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if $stack16 == null goto label13;

        $stack33 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: org.apache.maven.model.PluginManagement getPluginManagement()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePluginManagement(org.apache.maven.model.PluginManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack33, "pluginManagement", serializer);

     label13:
        $stack17 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getPlugins()>();

        if $stack17 == null goto label16;

        $stack20 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getPlugins()>();

        $stack21 = interfaceinvoke $stack20.<java.util.List: int size()>();

        if $stack21 <= 0 goto label16;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "plugins");

        $stack26 = virtualinvoke buildBase.<org.apache.maven.model.BuildBase: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack26.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $stack28 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack28 == 0 goto label15;

        $stack31 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#20 = (org.apache.maven.model.Plugin) $stack31;

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#20, "plugin", serializer);

        goto label14;

     label15:
        $stack29 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack29, "plugins");

     label16:
        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack18, tagName);

        return;
    }

    private void writeCiManagement(org.apache.maven.model.CiManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack27, $stack29, $stack34, $stack36;
        java.lang.String tagName, $stack6, $stack8, $stack9, $stack17, $stack22, $stack26, $stack28, $stack30, $stack33, $stack35, $stack37, $stack11;
        org.apache.maven.model.CiManagement ciManagement;
        java.util.List $stack10, $stack13, $stack19;
        int $stack14;
        java.util.Iterator iter;
        boolean $stack21;
        java.lang.Object $stack24;
        org.apache.maven.model.Notifier o;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: MavenXpp3WriterEx;

        ciManagement := @parameter0: org.apache.maven.model.CiManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getSystem()>();

        if $stack8 == null goto label1;

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack34 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack33, "system");

        $stack35 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getSystem()>();

        $stack36 = interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack35);

        $stack37 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack36.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack37, "system");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) ciManagement;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "system", serializer);

     label1:
        $stack9 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getUrl()>();

        if $stack9 == null goto label2;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "url");

        $stack28 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getUrl()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "url");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) ciManagement;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "url", serializer);

     label2:
        $stack10 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.util.List getNotifiers()>();

        if $stack10 == null goto label5;

        $stack13 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.util.List getNotifiers()>();

        $stack14 = interfaceinvoke $stack13.<java.util.List: int size()>();

        if $stack14 <= 0 goto label5;

        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack17, "notifiers");

        $stack19 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.util.List getNotifiers()>();

        iter = interfaceinvoke $stack19.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack21 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label4;

        $stack24 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Notifier) $stack24;

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeNotifier(org.apache.maven.model.Notifier,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "notifier", serializer);

        goto label3;

     label4:
        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "notifiers");

     label5:
        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writeConfigurationContainer(org.apache.maven.model.ConfigurationContainer, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack15, $stack17;
        java.lang.String tagName, $stack4, $stack6, $stack8, $stack14, $stack16, $stack18;
        org.apache.maven.model.ConfigurationContainer configurationContainer;
        java.lang.Object $stack7, $stack10;
        MavenXpp3WriterEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack11;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2;
        org.apache.maven.model.InputLocationTracker $r1;

        this := @this: MavenXpp3WriterEx;

        configurationContainer := @parameter0: org.apache.maven.model.ConfigurationContainer;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke configurationContainer.<org.apache.maven.model.ConfigurationContainer: java.lang.String getInherited()>();

        if $stack6 == null goto label1;

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack15 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack14, "inherited");

        $stack16 = virtualinvoke configurationContainer.<org.apache.maven.model.ConfigurationContainer: java.lang.String getInherited()>();

        $stack17 = interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack16);

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack17.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack18, "inherited");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) configurationContainer;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "inherited", serializer);

     label1:
        $stack7 = virtualinvoke configurationContainer.<org.apache.maven.model.ConfigurationContainer: java.lang.Object getConfiguration()>();

        if $stack7 == null goto label2;

        $stack10 = virtualinvoke configurationContainer.<org.apache.maven.model.ConfigurationContainer: java.lang.Object getConfiguration()>();

        $stack11 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack10;

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack11, serializer);

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeContributor(org.apache.maven.model.Contributor, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack37, $stack38, $stack43, $stack45, $stack62, $stack63, $stack70, $stack72, $stack77, $stack79, $stack84, $stack86, $stack91, $stack93, $stack98, $stack100;
        java.lang.String tagName, $stack8, $stack10, $stack11, $stack12, $stack13, $stack14, $stack24, $stack31, $stack36, $stack39, $stack42, $stack44, $stack46, $stack52, $stack58, $stack61, $stack64, $stack69, $stack71, $stack73, $stack76, $stack78, $stack80, $stack83, $stack85, $stack87, $stack90, $stack92, $stack94, $stack97, $stack99, $stack101, role, $stack16, iter#11, $stack18;
        org.apache.maven.model.Contributor contributor;
        java.util.List $stack15, $stack49, $stack55;
        java.util.Properties $stack17, $stack20, $stack27, $stack34;
        int $stack21, $stack50, $stack66, n;
        java.util.Set $stack28;
        boolean $stack30, $stack57;
        java.lang.Object $stack33, $stack35, $stack60;
        MavenXpp3WriterEx this;
        java.lang.Integer $stack67;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter, n#10;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15;

        this := @this: MavenXpp3WriterEx;

        contributor := @parameter0: org.apache.maven.model.Contributor;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getName()>();

        if $stack10 == null goto label01;

        $stack97 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack98 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack97, "name");

        $stack99 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getName()>();

        $stack100 = interfaceinvoke $stack98.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack99);

        $stack101 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack100.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack101, "name");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) contributor;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "name", serializer);

     label01:
        $stack11 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getEmail()>();

        if $stack11 == null goto label02;

        $stack90 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack91 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack90, "email");

        $stack92 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getEmail()>();

        $stack93 = interfaceinvoke $stack91.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack92);

        $stack94 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack93.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack94, "email");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) contributor;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "email", serializer);

     label02:
        $stack12 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getUrl()>();

        if $stack12 == null goto label03;

        $stack83 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack84 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack83, "url");

        $stack85 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getUrl()>();

        $stack86 = interfaceinvoke $stack84.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack85);

        $stack87 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack86.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack87, "url");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) contributor;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "url", serializer);

     label03:
        $stack13 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganization()>();

        if $stack13 == null goto label04;

        $stack76 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack77 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack76, "organization");

        $stack78 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganization()>();

        $stack79 = interfaceinvoke $stack77.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack78);

        $stack80 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack79.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack80, "organization");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) contributor;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "organization", serializer);

     label04:
        $stack14 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganizationUrl()>();

        if $stack14 == null goto label05;

        $stack69 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack70 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack69, "organizationUrl");

        $stack71 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganizationUrl()>();

        $stack72 = interfaceinvoke $stack70.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack71);

        $stack73 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack72.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack73, "organizationUrl");

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) contributor;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, "organizationUrl", serializer);

     label05:
        $stack15 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.List getRoles()>();

        if $stack15 == null goto label08;

        $stack49 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.List getRoles()>();

        $stack50 = interfaceinvoke $stack49.<java.util.List: int size()>();

        if $stack50 <= 0 goto label08;

        $stack52 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack52, "roles");

        location = virtualinvoke contributor.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("roles");

        n = 0;

        $stack55 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.List getRoles()>();

        iter = interfaceinvoke $stack55.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack57 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack57 == 0 goto label07;

        $stack60 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        role = (java.lang.String) $stack60;

        $stack61 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack62 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack61, "role");

        $stack63 = interfaceinvoke $stack62.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(role);

        $stack64 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack63.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack64, "role");

        $stack66 = n;

        n = n + 1;

        $stack67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack66);

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r11 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r11, $stack67, serializer);

        goto label06;

     label07:
        $stack58 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack58, "roles");

     label08:
        $stack16 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getTimezone()>();

        if $stack16 == null goto label09;

        $stack42 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack43 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack42, "timezone");

        $stack44 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getTimezone()>();

        $stack45 = interfaceinvoke $stack43.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack44);

        $stack46 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack45.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack46, "timezone");

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r13 = (org.apache.maven.model.InputLocationTracker) contributor;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r13, "timezone", serializer);

     label09:
        $stack17 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        if $stack17 == null goto label12;

        $stack20 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        $stack21 = virtualinvoke $stack20.<java.util.Properties: int size()>();

        if $stack21 <= 0 goto label12;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "properties");

        location = virtualinvoke contributor.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("properties");

        $stack27 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        $stack28 = virtualinvoke $stack27.<java.util.Properties: java.util.Set keySet()>();

        n#10 = interfaceinvoke $stack28.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $stack30 = interfaceinvoke n#10.<java.util.Iterator: boolean hasNext()>();

        if $stack30 == 0 goto label11;

        $stack33 = interfaceinvoke n#10.<java.util.Iterator: java.lang.Object next()>();

        iter#11 = (java.lang.String) $stack33;

        $stack34 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        $stack35 = virtualinvoke $stack34.<java.util.Properties: java.lang.Object get(java.lang.Object)>(iter#11);

        role = (java.lang.String) $stack35;

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack37 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, iter#11);

        $stack38 = interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(role);

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack38.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack39, iter#11);

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r15 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r15, iter#11, serializer);

        goto label10;

     label11:
        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "properties");

     label12:
        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack18, tagName);

        return;
    }

    private void writeDependency(org.apache.maven.model.Dependency, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack20, $stack22, $stack40, $stack42, $stack47, $stack49, $stack54, $stack56, $stack64, $stack66, $stack70, $stack72, $stack77, $stack79, $stack84, $stack86;
        java.lang.String tagName, $stack6, $stack8, $stack9, $stack10, $stack11, $stack13, $stack14, $stack17, $stack19, $stack21, $stack23, $stack30, $stack35, $stack39, $stack41, $stack43, $stack46, $stack48, $stack50, $stack53, $stack55, $stack57, $stack60, $stack63, $stack65, $stack67, $stack69, $stack71, $stack73, $stack76, $stack78, $stack80, $stack83, $stack85, $stack87, $stack12, $stack16;
        org.apache.maven.model.Dependency dependency;
        java.util.List $stack15, $stack27, $stack32;
        MavenXpp3WriterEx this;
        int $stack28;
        java.util.Iterator iter;
        boolean $stack34, $stack61;
        java.lang.Object $stack37;
        org.apache.maven.model.Exclusion o;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r15;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r16;

        this := @this: MavenXpp3WriterEx;

        dependency := @parameter0: org.apache.maven.model.Dependency;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        if $stack8 == null goto label01;

        $stack83 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack84 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack83, "groupId");

        $stack85 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $stack86 = interfaceinvoke $stack84.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack85);

        $stack87 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack86.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack87, "groupId");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) dependency;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "groupId", serializer);

     label01:
        $stack9 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        if $stack9 == null goto label02;

        $stack76 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack77 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack76, "artifactId");

        $stack78 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $stack79 = interfaceinvoke $stack77.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack78);

        $stack80 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack79.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack80, "artifactId");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) dependency;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "artifactId", serializer);

     label02:
        $stack10 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        if $stack10 == null goto label03;

        $stack69 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack70 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack69, "version");

        $stack71 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $stack72 = interfaceinvoke $stack70.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack71);

        $stack73 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack72.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack73, "version");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) dependency;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "version", serializer);

     label03:
        $stack11 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        if $stack11 == null goto label04;

        $stack60 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        $stack61 = virtualinvoke $stack60.<java.lang.String: boolean equals(java.lang.Object)>("jar");

        if $stack61 != 0 goto label04;

        $stack63 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack64 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack63, "type");

        $stack65 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        $stack66 = interfaceinvoke $stack64.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack65);

        $stack67 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack67, "type");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) dependency;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "type", serializer);

     label04:
        $stack12 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        if $stack12 == null goto label05;

        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack54 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack53, "classifier");

        $stack55 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        $stack56 = interfaceinvoke $stack54.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack55);

        $stack57 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack56.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack57, "classifier");

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) dependency;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, "classifier", serializer);

     label05:
        $stack13 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        if $stack13 == null goto label06;

        $stack46 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack47 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack46, "scope");

        $stack48 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $stack49 = interfaceinvoke $stack47.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack48);

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "scope");

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r11 = (org.apache.maven.model.InputLocationTracker) dependency;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r11, "scope", serializer);

     label06:
        $stack14 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        if $stack14 == null goto label07;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "systemPath");

        $stack41 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        $stack42 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack41);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "systemPath");

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r13 = (org.apache.maven.model.InputLocationTracker) dependency;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r13, "systemPath", serializer);

     label07:
        $stack15 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        if $stack15 == null goto label10;

        $stack27 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        $stack28 = interfaceinvoke $stack27.<java.util.List: int size()>();

        if $stack28 <= 0 goto label10;

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "exclusions");

        $stack32 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        iter = interfaceinvoke $stack32.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack34 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack34 == 0 goto label09;

        $stack37 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Exclusion) $stack37;

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeExclusion(org.apache.maven.model.Exclusion,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "exclusion", serializer);

        goto label08;

     label09:
        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "exclusions");

     label10:
        $stack16 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getOptional()>();

        if $stack16 == null goto label11;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "optional");

        $stack21 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getOptional()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "optional");

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r16 = (org.apache.maven.model.InputLocationTracker) dependency;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r16, "optional", serializer);

     label11:
        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, tagName);

        return;
    }

    private void writeDependencyManagement(org.apache.maven.model.DependencyManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        java.lang.String tagName, $stack6, $stack15, $stack20, $stack9;
        org.apache.maven.model.DependencyManagement dependencyManagement;
        java.util.List $stack8, $stack11, $stack17;
        int $stack12;
        java.util.Iterator iter;
        boolean $stack19;
        java.lang.Object $stack22;
        org.apache.maven.model.Dependency o;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0;

        this := @this: MavenXpp3WriterEx;

        dependencyManagement := @parameter0: org.apache.maven.model.DependencyManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke dependencyManagement.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        if $stack8 == null goto label3;

        $stack11 = virtualinvoke dependencyManagement.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        $stack12 = interfaceinvoke $stack11.<java.util.List: int size()>();

        if $stack12 <= 0 goto label3;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack15, "dependencies");

        $stack17 = virtualinvoke dependencyManagement.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        iter = interfaceinvoke $stack17.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack19 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label2;

        $stack22 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Dependency) $stack22;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "dependency", serializer);

        goto label1;

     label2:
        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "dependencies");

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writeDeploymentRepository(org.apache.maven.model.DeploymentRepository, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack20, $stack22, $stack26, $stack28, $stack33, $stack35, $stack40, $stack42, $stack51, $stack54;
        java.lang.String tagName, $stack4, $stack9, $stack10, $stack11, $stack12, $stack15, $stack19, $stack21, $stack23, $stack25, $stack27, $stack29, $stack32, $stack34, $stack36, $stack39, $stack41, $stack43, $stack50, $stack53, $stack55, $stack13;
        org.apache.maven.model.DeploymentRepository deploymentRepository;
        boolean $stack6, $stack16, $stack52;
        org.apache.maven.model.RepositoryPolicy $stack7, $stack8, $stack46, $stack48;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r3, $r4, $r6, $r8, $r10;
        org.apache.maven.model.InputLocationTracker $r1, $r5, $r7, $r9, $r11;

        this := @this: MavenXpp3WriterEx;

        deploymentRepository := @parameter0: org.apache.maven.model.DeploymentRepository;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: boolean isUniqueVersion()>();

        if $stack6 == 1 goto label1;

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack51 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack50, "uniqueVersion");

        $stack52 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: boolean isUniqueVersion()>();

        $stack53 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack52);

        $stack54 = interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack53);

        $stack55 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack54.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack55, "uniqueVersion");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) deploymentRepository;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "uniqueVersion", serializer);

     label1:
        $stack7 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        if $stack7 == null goto label2;

        $stack48 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack48, "releases", serializer);

     label2:
        $stack8 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        if $stack8 == null goto label3;

        $stack46 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack46, "snapshots", serializer);

     label3:
        $stack9 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getId()>();

        if $stack9 == null goto label4;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "id");

        $stack41 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getId()>();

        $stack42 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack41);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "id");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) deploymentRepository;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "id", serializer);

     label4:
        $stack10 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getName()>();

        if $stack10 == null goto label5;

        $stack32 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack33 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack32, "name");

        $stack34 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getName()>();

        $stack35 = interfaceinvoke $stack33.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack34);

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack36, "name");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) deploymentRepository;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "name", serializer);

     label5:
        $stack11 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getUrl()>();

        if $stack11 == null goto label6;

        $stack25 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack26 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack25, "url");

        $stack27 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getUrl()>();

        $stack28 = interfaceinvoke $stack26.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack27);

        $stack29 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack29, "url");

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) deploymentRepository;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, "url", serializer);

     label6:
        $stack12 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getLayout()>();

        if $stack12 == null goto label7;

        $stack15 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getLayout()>();

        $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack16 != 0 goto label7;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "layout");

        $stack21 = virtualinvoke deploymentRepository.<org.apache.maven.model.DeploymentRepository: java.lang.String getLayout()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "layout");

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r11 = (org.apache.maven.model.InputLocationTracker) deploymentRepository;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r11, "layout", serializer);

     label7:
        $stack13 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack13, tagName);

        return;
    }

    private void writeDeveloper(org.apache.maven.model.Developer, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack38, $stack39, $stack44, $stack46, $stack63, $stack64, $stack71, $stack73, $stack78, $stack80, $stack85, $stack87, $stack92, $stack94, $stack99, $stack101, $stack106, $stack108;
        java.lang.String tagName, $stack8, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack25, $stack32, $stack37, $stack40, $stack43, $stack45, $stack47, $stack53, $stack59, $stack62, $stack65, $stack70, $stack72, $stack74, $stack77, $stack79, $stack81, $stack84, $stack86, $stack88, $stack91, $stack93, $stack95, $stack98, $stack100, $stack102, $stack105, $stack107, $stack109, role, $stack17, iter#11, $stack19;
        org.apache.maven.model.Developer developer;
        java.util.List $stack16, $stack50, $stack56;
        java.util.Properties $stack18, $stack21, $stack28, $stack35;
        int $stack22, $stack51, $stack67, n;
        java.util.Set $stack29;
        boolean $stack31, $stack58;
        java.lang.Object $stack34, $stack36, $stack61;
        MavenXpp3WriterEx this;
        java.lang.Integer $stack68;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter, n#10;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;

        this := @this: MavenXpp3WriterEx;

        developer := @parameter0: org.apache.maven.model.Developer;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getId()>();

        if $stack10 == null goto label01;

        $stack105 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack106 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack105, "id");

        $stack107 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getId()>();

        $stack108 = interfaceinvoke $stack106.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack107);

        $stack109 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack108.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack109, "id");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) developer;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "id", serializer);

     label01:
        $stack11 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getName()>();

        if $stack11 == null goto label02;

        $stack98 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack99 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack98, "name");

        $stack100 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getName()>();

        $stack101 = interfaceinvoke $stack99.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack100);

        $stack102 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack101.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack102, "name");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) developer;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "name", serializer);

     label02:
        $stack12 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getEmail()>();

        if $stack12 == null goto label03;

        $stack91 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack92 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack91, "email");

        $stack93 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getEmail()>();

        $stack94 = interfaceinvoke $stack92.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack93);

        $stack95 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack94.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack95, "email");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) developer;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "email", serializer);

     label03:
        $stack13 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getUrl()>();

        if $stack13 == null goto label04;

        $stack84 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack85 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack84, "url");

        $stack86 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getUrl()>();

        $stack87 = interfaceinvoke $stack85.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack86);

        $stack88 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack87.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack88, "url");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) developer;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "url", serializer);

     label04:
        $stack14 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getOrganization()>();

        if $stack14 == null goto label05;

        $stack77 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack78 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack77, "organization");

        $stack79 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getOrganization()>();

        $stack80 = interfaceinvoke $stack78.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack79);

        $stack81 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack80.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack81, "organization");

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) developer;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, "organization", serializer);

     label05:
        $stack15 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getOrganizationUrl()>();

        if $stack15 == null goto label06;

        $stack70 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack71 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack70, "organizationUrl");

        $stack72 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getOrganizationUrl()>();

        $stack73 = interfaceinvoke $stack71.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack72);

        $stack74 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack73.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack74, "organizationUrl");

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r11 = (org.apache.maven.model.InputLocationTracker) developer;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r11, "organizationUrl", serializer);

     label06:
        $stack16 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.List getRoles()>();

        if $stack16 == null goto label09;

        $stack50 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.List getRoles()>();

        $stack51 = interfaceinvoke $stack50.<java.util.List: int size()>();

        if $stack51 <= 0 goto label09;

        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack53, "roles");

        location = virtualinvoke developer.<org.apache.maven.model.Developer: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("roles");

        n = 0;

        $stack56 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.List getRoles()>();

        iter = interfaceinvoke $stack56.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $stack58 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack58 == 0 goto label08;

        $stack61 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        role = (java.lang.String) $stack61;

        $stack62 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack63 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack62, "role");

        $stack64 = interfaceinvoke $stack63.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(role);

        $stack65 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack64.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack65, "role");

        $stack67 = n;

        n = n + 1;

        $stack68 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack67);

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r13 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r13, $stack68, serializer);

        goto label07;

     label08:
        $stack59 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack59, "roles");

     label09:
        $stack17 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getTimezone()>();

        if $stack17 == null goto label10;

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack44 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack43, "timezone");

        $stack45 = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getTimezone()>();

        $stack46 = interfaceinvoke $stack44.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack45);

        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack46.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack47, "timezone");

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r15 = (org.apache.maven.model.InputLocationTracker) developer;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r15, "timezone", serializer);

     label10:
        $stack18 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.Properties getProperties()>();

        if $stack18 == null goto label13;

        $stack21 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.Properties getProperties()>();

        $stack22 = virtualinvoke $stack21.<java.util.Properties: int size()>();

        if $stack22 <= 0 goto label13;

        $stack25 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack25, "properties");

        location = virtualinvoke developer.<org.apache.maven.model.Developer: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("properties");

        $stack28 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.Properties getProperties()>();

        $stack29 = virtualinvoke $stack28.<java.util.Properties: java.util.Set keySet()>();

        n#10 = interfaceinvoke $stack29.<java.util.Set: java.util.Iterator iterator()>();

     label11:
        $stack31 = interfaceinvoke n#10.<java.util.Iterator: boolean hasNext()>();

        if $stack31 == 0 goto label12;

        $stack34 = interfaceinvoke n#10.<java.util.Iterator: java.lang.Object next()>();

        iter#11 = (java.lang.String) $stack34;

        $stack35 = virtualinvoke developer.<org.apache.maven.model.Developer: java.util.Properties getProperties()>();

        $stack36 = virtualinvoke $stack35.<java.util.Properties: java.lang.Object get(java.lang.Object)>(iter#11);

        role = (java.lang.String) $stack36;

        $stack37 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack38 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack37, iter#11);

        $stack39 = interfaceinvoke $stack38.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(role);

        $stack40 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, iter#11);

        $r16 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r17 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r16.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r17, iter#11, serializer);

        goto label11;

     label12:
        $stack32 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack32, "properties");

     label13:
        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack19, tagName);

        return;
    }

    private void writeDistributionManagement(org.apache.maven.model.DistributionManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack15, $stack17, $stack25, $stack27;
        java.lang.String tagName, $stack4, $stack9, $stack11, $stack12, $stack14, $stack16, $stack18, $stack24, $stack26, $stack28;
        org.apache.maven.model.DistributionManagement distributionManagement;
        org.apache.maven.model.DeploymentRepository $stack6, $stack7, $stack33, $stack35;
        org.apache.maven.model.Site $stack8, $stack31;
        org.apache.maven.model.Relocation $stack10, $stack22;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.model.InputLocationTracker $r4, $r7;

        this := @this: MavenXpp3WriterEx;

        distributionManagement := @parameter0: org.apache.maven.model.DistributionManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getRepository()>();

        if $stack6 == null goto label1;

        $stack35 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getRepository()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDeploymentRepository(org.apache.maven.model.DeploymentRepository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack35, "repository", serializer);

     label1:
        $stack7 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getSnapshotRepository()>();

        if $stack7 == null goto label2;

        $stack33 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getSnapshotRepository()>();

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDeploymentRepository(org.apache.maven.model.DeploymentRepository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack33, "snapshotRepository", serializer);

     label2:
        $stack8 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Site getSite()>();

        if $stack8 == null goto label3;

        $stack31 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Site getSite()>();

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeSite(org.apache.maven.model.Site,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack31, "site", serializer);

     label3:
        $stack9 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: java.lang.String getDownloadUrl()>();

        if $stack9 == null goto label4;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack25 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "downloadUrl");

        $stack26 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: java.lang.String getDownloadUrl()>();

        $stack27 = interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack26);

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "downloadUrl");

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r4 = (org.apache.maven.model.InputLocationTracker) distributionManagement;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r4, "downloadUrl", serializer);

     label4:
        $stack10 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Relocation getRelocation()>();

        if $stack10 == null goto label5;

        $stack22 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Relocation getRelocation()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRelocation(org.apache.maven.model.Relocation,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack22, "relocation", serializer);

     label5:
        $stack11 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: java.lang.String getStatus()>();

        if $stack11 == null goto label6;

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack15 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack14, "status");

        $stack16 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: java.lang.String getStatus()>();

        $stack17 = interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack16);

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack17.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack18, "status");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) distributionManagement;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "status", serializer);

     label6:
        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack12, tagName);

        return;
    }

    private void writeExclusion(org.apache.maven.model.Exclusion, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.Exclusion exclusion;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: MavenXpp3WriterEx;

        exclusion := @parameter0: org.apache.maven.model.Exclusion;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getGroupId()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "groupId");

        $stack20 = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getGroupId()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "groupId");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) exclusion;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "groupId", serializer);

     label1:
        $stack7 = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getArtifactId()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "artifactId");

        $stack12 = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getArtifactId()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "artifactId");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) exclusion;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "artifactId", serializer);

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeExtension(org.apache.maven.model.Extension, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack12, $stack14, $stack20, $stack22, $stack27, $stack29;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack11, $stack13, $stack15, $stack19, $stack21, $stack23, $stack26, $stack28, $stack30;
        org.apache.maven.model.Extension extension;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5;

        this := @this: MavenXpp3WriterEx;

        extension := @parameter0: org.apache.maven.model.Extension;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getGroupId()>();

        if $stack6 == null goto label1;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "groupId");

        $stack28 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getGroupId()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "groupId");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) extension;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "groupId", serializer);

     label1:
        $stack7 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getArtifactId()>();

        if $stack7 == null goto label2;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "artifactId");

        $stack21 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getArtifactId()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "artifactId");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) extension;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "artifactId", serializer);

     label2:
        $stack8 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getVersion()>();

        if $stack8 == null goto label3;

        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack12 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack11, "version");

        $stack13 = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getVersion()>();

        $stack14 = interfaceinvoke $stack12.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack13);

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack15, "version");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) extension;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "version", serializer);

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writeFileSet(org.apache.maven.model.FileSet, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack29, $stack30, $stack49, $stack50, $stack57, $stack59;
        java.lang.String tagName, $stack8, $stack10, $stack19, $stack25, $stack28, $stack31, $stack39, $stack45, $stack48, $stack51, $stack56, $stack58, $stack60, include, $stack13;
        org.apache.maven.model.FileSet fileSet;
        java.util.List $stack11, $stack15, $stack22, $stack36, $stack42, $stack12;
        int $stack16, $stack33, $stack37, $stack53, n;
        boolean $stack24, $stack44;
        java.lang.Object $stack27, $stack47;
        MavenXpp3WriterEx this;
        java.lang.Integer $stack34, $stack54;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5;

        this := @this: MavenXpp3WriterEx;

        fileSet := @parameter0: org.apache.maven.model.FileSet;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.lang.String getDirectory()>();

        if $stack10 == null goto label1;

        $stack56 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack57 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack56, "directory");

        $stack58 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.lang.String getDirectory()>();

        $stack59 = interfaceinvoke $stack57.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack58);

        $stack60 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack59.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack60, "directory");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) fileSet;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "directory", serializer);

     label1:
        $stack11 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getIncludes()>();

        if $stack11 == null goto label4;

        $stack36 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getIncludes()>();

        $stack37 = interfaceinvoke $stack36.<java.util.List: int size()>();

        if $stack37 <= 0 goto label4;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "includes");

        location = virtualinvoke fileSet.<org.apache.maven.model.FileSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("includes");

        n = 0;

        $stack42 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getIncludes()>();

        iter = interfaceinvoke $stack42.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack44 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack44 == 0 goto label3;

        $stack47 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack47;

        $stack48 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack49 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack48, "include");

        $stack50 = interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack51 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack50.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack51, "include");

        $stack53 = n;

        n = n + 1;

        $stack54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack53);

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, $stack54, serializer);

        goto label2;

     label3:
        $stack45 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack45, "includes");

     label4:
        $stack12 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getExcludes()>();

        if $stack12 == null goto label7;

        $stack15 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getExcludes()>();

        $stack16 = interfaceinvoke $stack15.<java.util.List: int size()>();

        if $stack16 <= 0 goto label7;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "excludes");

        location = virtualinvoke fileSet.<org.apache.maven.model.FileSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("excludes");

        n = 0;

        $stack22 = virtualinvoke fileSet.<org.apache.maven.model.FileSet: java.util.List getExcludes()>();

        iter = interfaceinvoke $stack22.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $stack24 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack24 == 0 goto label6;

        $stack27 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack27;

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack29 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack28, "exclude");

        $stack30 = interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "exclude");

        $stack33 = n;

        n = n + 1;

        $stack34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack33);

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, $stack34, serializer);

        goto label5;

     label6:
        $stack25 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack25, "excludes");

     label7:
        $stack13 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack13, tagName);

        return;
    }

    private void writeIssueManagement(org.apache.maven.model.IssueManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.IssueManagement issueManagement;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: MavenXpp3WriterEx;

        issueManagement := @parameter0: org.apache.maven.model.IssueManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getSystem()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "system");

        $stack20 = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getSystem()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "system");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) issueManagement;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "system", serializer);

     label1:
        $stack7 = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getUrl()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "url");

        $stack12 = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getUrl()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "url");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) issueManagement;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "url", serializer);

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeLicense(org.apache.maven.model.License, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30, $stack35, $stack37;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36, $stack38;
        org.apache.maven.model.License license;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7;

        this := @this: MavenXpp3WriterEx;

        license := @parameter0: org.apache.maven.model.License;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "name");

        $stack36 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getName()>();

        $stack37 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack36);

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "name");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) license;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "name", serializer);

     label1:
        $stack7 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getUrl()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "url");

        $stack29 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getUrl()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "url");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) license;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "url", serializer);

     label2:
        $stack8 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getDistribution()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "distribution");

        $stack22 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getDistribution()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "distribution");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) license;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "distribution", serializer);

     label3:
        $stack9 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getComments()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "comments");

        $stack14 = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getComments()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "comments");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) license;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "comments", serializer);

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeLocationTracking(org.apache.maven.model.InputLocationTracker, java.lang.Object, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.apache.maven.model.InputLocationTracker locationTracker;
        java.lang.Object key;
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        MavenXpp3WriterEx this;
        java.lang.String $stack6;
        org.apache.maven.model.InputLocation $stack5;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0;

        this := @this: MavenXpp3WriterEx;

        locationTracker := @parameter0: org.apache.maven.model.InputLocationTracker;

        key := @parameter1: java.lang.Object;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        if locationTracker != null goto label1;

        $stack5 = null;

        goto label2;

     label1:
        $stack5 = interfaceinvoke locationTracker.<org.apache.maven.model.InputLocationTracker: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>(key);

     label2:
        if $stack5 == null goto label3;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $stack6 = virtualinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String toString(org.apache.maven.model.InputLocation)>($stack5);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void comment(java.lang.String)>($stack6);

     label3:
        return;
    }

    private void writeMailingList(org.apache.maven.model.MailingList, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack32, $stack33, $stack40, $stack42, $stack47, $stack49, $stack54, $stack56, $stack61, $stack63, $stack68, $stack70;
        java.lang.String tagName, $stack8, $stack10, $stack11, $stack12, $stack13, $stack14, $stack22, $stack28, otherArchive, $stack31, $stack34, $stack39, $stack41, $stack43, $stack46, $stack48, $stack50, $stack53, $stack55, $stack57, $stack60, $stack62, $stack64, $stack67, $stack69, $stack71, $stack16;
        org.apache.maven.model.MailingList mailingList;
        java.util.List $stack15, $stack18, $stack25;
        int $stack19, $stack36, n;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter;
        boolean $stack27;
        java.lang.Object $stack30;
        MavenXpp3WriterEx this;
        java.lang.Integer $stack37;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r8, $r10;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r9, $r11;

        this := @this: MavenXpp3WriterEx;

        mailingList := @parameter0: org.apache.maven.model.MailingList;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getName()>();

        if $stack10 == null goto label1;

        $stack67 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack68 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack67, "name");

        $stack69 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getName()>();

        $stack70 = interfaceinvoke $stack68.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack69);

        $stack71 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack70.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack71, "name");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) mailingList;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "name", serializer);

     label1:
        $stack11 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getSubscribe()>();

        if $stack11 == null goto label2;

        $stack60 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack61 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack60, "subscribe");

        $stack62 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getSubscribe()>();

        $stack63 = interfaceinvoke $stack61.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack62);

        $stack64 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack63.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack64, "subscribe");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) mailingList;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "subscribe", serializer);

     label2:
        $stack12 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getUnsubscribe()>();

        if $stack12 == null goto label3;

        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack54 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack53, "unsubscribe");

        $stack55 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getUnsubscribe()>();

        $stack56 = interfaceinvoke $stack54.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack55);

        $stack57 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack56.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack57, "unsubscribe");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) mailingList;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "unsubscribe", serializer);

     label3:
        $stack13 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getPost()>();

        if $stack13 == null goto label4;

        $stack46 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack47 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack46, "post");

        $stack48 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getPost()>();

        $stack49 = interfaceinvoke $stack47.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack48);

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "post");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) mailingList;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "post", serializer);

     label4:
        $stack14 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getArchive()>();

        if $stack14 == null goto label5;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "archive");

        $stack41 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getArchive()>();

        $stack42 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack41);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "archive");

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) mailingList;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, "archive", serializer);

     label5:
        $stack15 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.util.List getOtherArchives()>();

        if $stack15 == null goto label8;

        $stack18 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.util.List getOtherArchives()>();

        $stack19 = interfaceinvoke $stack18.<java.util.List: int size()>();

        if $stack19 <= 0 goto label8;

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack22, "otherArchives");

        location = virtualinvoke mailingList.<org.apache.maven.model.MailingList: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("otherArchives");

        n = 0;

        $stack25 = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.util.List getOtherArchives()>();

        iter = interfaceinvoke $stack25.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $stack27 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack27 == 0 goto label7;

        $stack30 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        otherArchive = (java.lang.String) $stack30;

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack32 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack31, "otherArchive");

        $stack33 = interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(otherArchive);

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack33.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack34, "otherArchive");

        $stack36 = n;

        n = n + 1;

        $stack37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack36);

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r11 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r11, $stack37, serializer);

        goto label6;

     label7:
        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "otherArchives");

     label8:
        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, tagName);

        return;
    }

    private void writeModel(org.apache.maven.model.Model, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        MavenXpp3WriterEx this;
        java.lang.String $stack8, tagName, $stack9, $stack12, $stack13, $stack15, $stack16, $stack17, $stack18, $stack20, $stack21, $stack22, $stack49, $stack54, $stack68, $stack73, $stack80, $stack85, $stack92, $stack97, $stack106, $stack113, $stack118, $stack121, $stack135, $stack141, $stack144, $stack147, $stack157, $stack162, $stack169, $stack174, $stack181, $stack186, $stack193, $stack198, $stack204, $stack206, $stack208, $stack211, $stack213, $stack215, $stack218, $stack220, $stack222, $stack225, $stack227, $stack229, $stack232, $stack235, $stack237, $stack239, $stack241, $stack243, $stack245, $stack248, $stack250, $stack252, $stack255, $stack257, $stack259, $stack264, $stack266, $stack268, $stack271, $stack273, $stack276, $stack19, module, iter#39, $stack43;
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack119, $stack120, $stack145, $stack146, $stack205, $stack207, $stack212, $stack214, $stack219, $stack221, $stack226, $stack228, $stack236, $stack238, $stack242, $stack244, $stack249, $stack251, $stack256, $stack258, $stack265, $stack267;
        org.apache.maven.model.Model model;
        org.apache.maven.model.Parent $stack14, $stack262;
        org.apache.maven.model.Organization $stack23, $stack202;
        java.util.List $stack24, $stack29, $stack36, $stack42, $stack45, $stack51, $stack65, $stack70, $stack77, $stack82, $stack89, $stack94, $stack132, $stack138, $stack154, $stack159, $stack166, $stack171, $stack178, $stack183, $stack190, $stack195, $stack25, $stack26, $stack27, $stack37, $stack38;
        org.apache.maven.model.IssueManagement $stack31, $stack128;
        org.apache.maven.model.CiManagement $stack32, $stack126;
        org.apache.maven.model.DistributionManagement $stack33, $stack124;
        java.util.Properties $stack34, $stack103, $stack109, $stack116;
        java.lang.Object $stack40, $stack56, $stack60, $stack75, $stack87, $stack99, $stack115, $stack117, $stack143, $stack164, $stack176, $stack188, $stack200;
        org.apache.maven.model.Reporting $stack41, $stack58;
        int $stack46, $stack66, $stack78, $stack90, $stack104, $stack133, $stack149, $stack155, $stack167, $stack179, $stack191, o#30;
        boolean $stack53, $stack72, $stack84, $stack96, $stack112, $stack140, $stack161, $stack173, $stack185, $stack197, $stack233;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack61;
        org.apache.maven.model.Build $stack63, $stack39;
        org.apache.maven.model.DependencyManagement $stack101, $stack35;
        java.util.Set $stack110;
        org.apache.maven.model.Scm $stack130, $stack30;
        java.lang.Integer $stack150;
        org.apache.maven.model.Prerequisites $stack152, $stack28;
        java.util.Iterator iter, o#38;
        org.apache.maven.model.License o;
        org.apache.maven.model.Developer o#12;
        org.apache.maven.model.Contributor o#18;
        org.apache.maven.model.MailingList o#24;
        org.apache.maven.model.InputLocation iter#29;
        org.apache.maven.model.Dependency o#46;
        org.apache.maven.model.Repository o#52;
        org.apache.maven.model.Profile o#64;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r1, $r2, $r4, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r29, $r30, $r31, $r32, $r33, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42;
        org.apache.maven.model.InputLocationTracker $r3, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r28, $r34;

        this := @this: MavenXpp3WriterEx;

        model := @parameter0: org.apache.maven.model.Model;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $stack8 = $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String fileComment>;

        if $stack8 == null goto label01;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $stack276 = $r1.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String fileComment>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void comment(java.lang.String)>($stack276);

     label01:
        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("", "http://maven.apache.org/POM/4.0.0");

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("xsi", "http://www.w3.org/2001/XMLSchema-instance");

        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack9, tagName);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "xsi:schemaLocation", "http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd");

        $stack12 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getChildProjectUrlInheritAppendPath()>();

        if $stack12 == null goto label02;

        $stack271 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack273 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getChildProjectUrlInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack271, "child.project.url.inherit.append.path", $stack273);

     label02:
        $stack13 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        if $stack13 == null goto label03;

        $stack264 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack265 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack264, "modelVersion");

        $stack266 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        $stack267 = interfaceinvoke $stack265.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack266);

        $stack268 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack267.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack268, "modelVersion");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) model;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "modelVersion", serializer);

     label03:
        $stack14 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack14 == null goto label04;

        $stack262 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeParent(org.apache.maven.model.Parent,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack262, "parent", serializer);

     label04:
        $stack15 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        if $stack15 == null goto label05;

        $stack255 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack256 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack255, "groupId");

        $stack257 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $stack258 = interfaceinvoke $stack256.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack257);

        $stack259 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack258.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack259, "groupId");

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r6 = (org.apache.maven.model.InputLocationTracker) model;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r6, "groupId", serializer);

     label05:
        $stack16 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        if $stack16 == null goto label06;

        $stack248 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack249 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack248, "artifactId");

        $stack250 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $stack251 = interfaceinvoke $stack249.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack250);

        $stack252 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack251.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack252, "artifactId");

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r8 = (org.apache.maven.model.InputLocationTracker) model;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r8, "artifactId", serializer);

     label06:
        $stack17 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if $stack17 == null goto label07;

        $stack241 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack242 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack241, "version");

        $stack243 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $stack244 = interfaceinvoke $stack242.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack243);

        $stack245 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack244.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack245, "version");

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r10 = (org.apache.maven.model.InputLocationTracker) model;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r10, "version", serializer);

     label07:
        $stack18 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        if $stack18 == null goto label08;

        $stack232 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $stack233 = virtualinvoke $stack232.<java.lang.String: boolean equals(java.lang.Object)>("jar");

        if $stack233 != 0 goto label08;

        $stack235 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack236 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack235, "packaging");

        $stack237 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $stack238 = interfaceinvoke $stack236.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack237);

        $stack239 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack238.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack239, "packaging");

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r12 = (org.apache.maven.model.InputLocationTracker) model;

        specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r12, "packaging", serializer);

     label08:
        $stack19 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getName()>();

        if $stack19 == null goto label09;

        $stack225 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack226 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack225, "name");

        $stack227 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getName()>();

        $stack228 = interfaceinvoke $stack226.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack227);

        $stack229 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack228.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack229, "name");

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r14 = (org.apache.maven.model.InputLocationTracker) model;

        specialinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r14, "name", serializer);

     label09:
        $stack20 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getDescription()>();

        if $stack20 == null goto label10;

        $stack218 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack219 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack218, "description");

        $stack220 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getDescription()>();

        $stack221 = interfaceinvoke $stack219.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack220);

        $stack222 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack221.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack222, "description");

        $r15 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r16 = (org.apache.maven.model.InputLocationTracker) model;

        specialinvoke $r15.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r16, "description", serializer);

     label10:
        $stack21 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getUrl()>();

        if $stack21 == null goto label11;

        $stack211 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack212 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack211, "url");

        $stack213 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getUrl()>();

        $stack214 = interfaceinvoke $stack212.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack213);

        $stack215 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack214.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack215, "url");

        $r17 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r18 = (org.apache.maven.model.InputLocationTracker) model;

        specialinvoke $r17.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r18, "url", serializer);

     label11:
        $stack22 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getInceptionYear()>();

        if $stack22 == null goto label12;

        $stack204 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack205 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack204, "inceptionYear");

        $stack206 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getInceptionYear()>();

        $stack207 = interfaceinvoke $stack205.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack206);

        $stack208 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack207.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack208, "inceptionYear");

        $r19 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r20 = (org.apache.maven.model.InputLocationTracker) model;

        specialinvoke $r19.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r20, "inceptionYear", serializer);

     label12:
        $stack23 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Organization getOrganization()>();

        if $stack23 == null goto label13;

        $stack202 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Organization getOrganization()>();

        $r21 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r21.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeOrganization(org.apache.maven.model.Organization,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack202, "organization", serializer);

     label13:
        $stack24 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getLicenses()>();

        if $stack24 == null goto label16;

        $stack190 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getLicenses()>();

        $stack191 = interfaceinvoke $stack190.<java.util.List: int size()>();

        if $stack191 <= 0 goto label16;

        $stack193 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack193, "licenses");

        $stack195 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getLicenses()>();

        iter = interfaceinvoke $stack195.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $stack197 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack197 == 0 goto label15;

        $stack200 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.License) $stack200;

        $r22 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r22.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLicense(org.apache.maven.model.License,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "license", serializer);

        goto label14;

     label15:
        $stack198 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack198, "licenses");

     label16:
        $stack25 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDevelopers()>();

        if $stack25 == null goto label19;

        $stack178 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDevelopers()>();

        $stack179 = interfaceinvoke $stack178.<java.util.List: int size()>();

        if $stack179 <= 0 goto label19;

        $stack181 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack181, "developers");

        $stack183 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDevelopers()>();

        iter = interfaceinvoke $stack183.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $stack185 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack185 == 0 goto label18;

        $stack188 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#12 = (org.apache.maven.model.Developer) $stack188;

        $r23 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r23.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDeveloper(org.apache.maven.model.Developer,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#12, "developer", serializer);

        goto label17;

     label18:
        $stack186 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack186, "developers");

     label19:
        $stack26 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getContributors()>();

        if $stack26 == null goto label22;

        $stack166 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getContributors()>();

        $stack167 = interfaceinvoke $stack166.<java.util.List: int size()>();

        if $stack167 <= 0 goto label22;

        $stack169 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack169, "contributors");

        $stack171 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getContributors()>();

        iter = interfaceinvoke $stack171.<java.util.List: java.util.Iterator iterator()>();

     label20:
        $stack173 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack173 == 0 goto label21;

        $stack176 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#18 = (org.apache.maven.model.Contributor) $stack176;

        $r24 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r24.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeContributor(org.apache.maven.model.Contributor,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#18, "contributor", serializer);

        goto label20;

     label21:
        $stack174 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack174, "contributors");

     label22:
        $stack27 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getMailingLists()>();

        if $stack27 == null goto label25;

        $stack154 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getMailingLists()>();

        $stack155 = interfaceinvoke $stack154.<java.util.List: int size()>();

        if $stack155 <= 0 goto label25;

        $stack157 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack157, "mailingLists");

        $stack159 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getMailingLists()>();

        iter = interfaceinvoke $stack159.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $stack161 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack161 == 0 goto label24;

        $stack164 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#24 = (org.apache.maven.model.MailingList) $stack164;

        $r25 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r25.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeMailingList(org.apache.maven.model.MailingList,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#24, "mailingList", serializer);

        goto label23;

     label24:
        $stack162 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack162, "mailingLists");

     label25:
        $stack28 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Prerequisites getPrerequisites()>();

        if $stack28 == null goto label26;

        $stack152 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Prerequisites getPrerequisites()>();

        $r26 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r26.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePrerequisites(org.apache.maven.model.Prerequisites,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack152, "prerequisites", serializer);

     label26:
        $stack29 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getModules()>();

        if $stack29 == null goto label29;

        $stack132 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getModules()>();

        $stack133 = interfaceinvoke $stack132.<java.util.List: int size()>();

        if $stack133 <= 0 goto label29;

        $stack135 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack135, "modules");

        iter#29 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("modules");

        o#30 = 0;

        $stack138 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getModules()>();

        iter = interfaceinvoke $stack138.<java.util.List: java.util.Iterator iterator()>();

     label27:
        $stack140 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack140 == 0 goto label28;

        $stack143 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module = (java.lang.String) $stack143;

        $stack144 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack145 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack144, "module");

        $stack146 = interfaceinvoke $stack145.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(module);

        $stack147 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack146.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack147, "module");

        $stack149 = o#30;

        o#30 = o#30 + 1;

        $stack150 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack149);

        $r27 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r28 = (org.apache.maven.model.InputLocationTracker) iter#29;

        specialinvoke $r27.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r28, $stack150, serializer);

        goto label27;

     label28:
        $stack141 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack141, "modules");

     label29:
        $stack30 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Scm getScm()>();

        if $stack30 == null goto label30;

        $stack130 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Scm getScm()>();

        $r29 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r29.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeScm(org.apache.maven.model.Scm,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack130, "scm", serializer);

     label30:
        $stack31 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.IssueManagement getIssueManagement()>();

        if $stack31 == null goto label31;

        $stack128 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.IssueManagement getIssueManagement()>();

        $r30 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r30.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeIssueManagement(org.apache.maven.model.IssueManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack128, "issueManagement", serializer);

     label31:
        $stack32 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.CiManagement getCiManagement()>();

        if $stack32 == null goto label32;

        $stack126 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.CiManagement getCiManagement()>();

        $r31 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r31.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeCiManagement(org.apache.maven.model.CiManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack126, "ciManagement", serializer);

     label32:
        $stack33 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if $stack33 == null goto label33;

        $stack124 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        $r32 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r32.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDistributionManagement(org.apache.maven.model.DistributionManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack124, "distributionManagement", serializer);

     label33:
        $stack34 = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        if $stack34 == null goto label36;

        $stack103 = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        $stack104 = virtualinvoke $stack103.<java.util.Properties: int size()>();

        if $stack104 <= 0 goto label36;

        $stack106 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack106, "properties");

        iter#29 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("properties");

        $stack109 = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        $stack110 = virtualinvoke $stack109.<java.util.Properties: java.util.Set keySet()>();

        o#38 = interfaceinvoke $stack110.<java.util.Set: java.util.Iterator iterator()>();

     label34:
        $stack112 = interfaceinvoke o#38.<java.util.Iterator: boolean hasNext()>();

        if $stack112 == 0 goto label35;

        $stack115 = interfaceinvoke o#38.<java.util.Iterator: java.lang.Object next()>();

        iter#39 = (java.lang.String) $stack115;

        $stack116 = virtualinvoke model.<org.apache.maven.model.Model: java.util.Properties getProperties()>();

        $stack117 = virtualinvoke $stack116.<java.util.Properties: java.lang.Object get(java.lang.Object)>(iter#39);

        module = (java.lang.String) $stack117;

        $stack118 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack119 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack118, iter#39);

        $stack120 = interfaceinvoke $stack119.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(module);

        $stack121 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack120.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack121, iter#39);

        $r33 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r34 = (org.apache.maven.model.InputLocationTracker) iter#29;

        specialinvoke $r33.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r34, iter#39, serializer);

        goto label34;

     label35:
        $stack113 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack113, "properties");

     label36:
        $stack35 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if $stack35 == null goto label37;

        $stack101 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        $r35 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r35.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDependencyManagement(org.apache.maven.model.DependencyManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack101, "dependencyManagement", serializer);

     label37:
        $stack36 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDependencies()>();

        if $stack36 == null goto label40;

        $stack89 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDependencies()>();

        $stack90 = interfaceinvoke $stack89.<java.util.List: int size()>();

        if $stack90 <= 0 goto label40;

        $stack92 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack92, "dependencies");

        $stack94 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDependencies()>();

        iter = interfaceinvoke $stack94.<java.util.List: java.util.Iterator iterator()>();

     label38:
        $stack96 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack96 == 0 goto label39;

        $stack99 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#46 = (org.apache.maven.model.Dependency) $stack99;

        $r36 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r36.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#46, "dependency", serializer);

        goto label38;

     label39:
        $stack97 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack97, "dependencies");

     label40:
        $stack37 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        if $stack37 == null goto label43;

        $stack77 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        $stack78 = interfaceinvoke $stack77.<java.util.List: int size()>();

        if $stack78 <= 0 goto label43;

        $stack80 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack80, "repositories");

        $stack82 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getRepositories()>();

        iter = interfaceinvoke $stack82.<java.util.List: java.util.Iterator iterator()>();

     label41:
        $stack84 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack84 == 0 goto label42;

        $stack87 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#52 = (org.apache.maven.model.Repository) $stack87;

        $r37 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r37.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#52, "repository", serializer);

        goto label41;

     label42:
        $stack85 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack85, "repositories");

     label43:
        $stack38 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getPluginRepositories()>();

        if $stack38 == null goto label46;

        $stack65 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getPluginRepositories()>();

        $stack66 = interfaceinvoke $stack65.<java.util.List: int size()>();

        if $stack66 <= 0 goto label46;

        $stack68 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack68, "pluginRepositories");

        $stack70 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getPluginRepositories()>();

        iter = interfaceinvoke $stack70.<java.util.List: java.util.Iterator iterator()>();

     label44:
        $stack72 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack72 == 0 goto label45;

        $stack75 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#52 = (org.apache.maven.model.Repository) $stack75;

        $r38 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r38.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#52, "pluginRepository", serializer);

        goto label44;

     label45:
        $stack73 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack73, "pluginRepositories");

     label46:
        $stack39 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if $stack39 == null goto label47;

        $stack63 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        $r39 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r39.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeBuild(org.apache.maven.model.Build,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack63, "build", serializer);

     label47:
        $stack40 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.Object getReports()>();

        if $stack40 == null goto label48;

        $stack60 = virtualinvoke model.<org.apache.maven.model.Model: java.lang.Object getReports()>();

        $stack61 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack60;

        $r40 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r40.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack61, serializer);

     label48:
        $stack41 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Reporting getReporting()>();

        if $stack41 == null goto label49;

        $stack58 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Reporting getReporting()>();

        $r41 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r41.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeReporting(org.apache.maven.model.Reporting,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack58, "reporting", serializer);

     label49:
        $stack42 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        if $stack42 == null goto label52;

        $stack45 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        $stack46 = interfaceinvoke $stack45.<java.util.List: int size()>();

        if $stack46 <= 0 goto label52;

        $stack49 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack49, "profiles");

        $stack51 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        iter = interfaceinvoke $stack51.<java.util.List: java.util.Iterator iterator()>();

     label50:
        $stack53 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack53 == 0 goto label51;

        $stack56 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#64 = (org.apache.maven.model.Profile) $stack56;

        $r42 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r42.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeProfile(org.apache.maven.model.Profile,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#64, "profile", serializer);

        goto label50;

     label51:
        $stack54 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack54, "profiles");

     label52:
        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, tagName);

        return;
    }

    private void writeModelBase(org.apache.maven.model.ModelBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack81, $stack82, $stack101, $stack102;
        java.lang.String tagName, $stack8, $stack19, $stack30, $stack35, $stack42, $stack47, $stack54, $stack59, $stack68, $stack75, $stack80, $stack83, $stack91, $stack97, $stack100, $stack103, module, iter#11;
        org.apache.maven.model.ModelBase modelBase;
        java.util.List $stack10, $stack14, $stack27, $stack32, $stack39, $stack44, $stack51, $stack56, $stack88, $stack94, $stack15, $stack16;
        java.util.Properties $stack12, $stack65, $stack71, $stack78;
        org.apache.maven.model.Reporting $stack18, $stack21;
        MavenXpp3WriterEx this;
        java.lang.Object $stack24, $stack37, $stack49, $stack61, $stack77, $stack79, $stack99, $stack17;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack25;
        int $stack28, $stack40, $stack52, $stack66, $stack89, $stack105, n;
        boolean $stack34, $stack46, $stack58, $stack74, $stack96;
        org.apache.maven.model.DependencyManagement $stack63, $stack13;
        java.util.Set $stack72;
        org.apache.maven.model.DistributionManagement $stack86, $stack11;
        java.lang.Integer $stack106;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter, n#10, location#17;
        org.apache.maven.model.Dependency n#18;
        org.apache.maven.model.Repository n#24;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10;
        org.apache.maven.model.InputLocationTracker $r1, $r4;

        this := @this: MavenXpp3WriterEx;

        modelBase := @parameter0: org.apache.maven.model.ModelBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        if $stack10 == null goto label03;

        $stack88 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        $stack89 = interfaceinvoke $stack88.<java.util.List: int size()>();

        if $stack89 <= 0 goto label03;

        $stack91 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack91, "modules");

        location = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("modules");

        n = 0;

        $stack94 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        iter = interfaceinvoke $stack94.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $stack96 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack96 == 0 goto label02;

        $stack99 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module = (java.lang.String) $stack99;

        $stack100 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack101 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack100, "module");

        $stack102 = interfaceinvoke $stack101.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(module);

        $stack103 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack102.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack103, "module");

        $stack105 = n;

        n = n + 1;

        $stack106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack105);

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, $stack106, serializer);

        goto label01;

     label02:
        $stack97 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack97, "modules");

     label03:
        $stack11 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if $stack11 == null goto label04;

        $stack86 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDistributionManagement(org.apache.maven.model.DistributionManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack86, "distributionManagement", serializer);

     label04:
        $stack12 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        if $stack12 == null goto label07;

        $stack65 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        $stack66 = virtualinvoke $stack65.<java.util.Properties: int size()>();

        if $stack66 <= 0 goto label07;

        $stack68 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack68, "properties");

        location = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("properties");

        $stack71 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        $stack72 = virtualinvoke $stack71.<java.util.Properties: java.util.Set keySet()>();

        n#10 = interfaceinvoke $stack72.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $stack74 = interfaceinvoke n#10.<java.util.Iterator: boolean hasNext()>();

        if $stack74 == 0 goto label06;

        $stack77 = interfaceinvoke n#10.<java.util.Iterator: java.lang.Object next()>();

        iter#11 = (java.lang.String) $stack77;

        $stack78 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        $stack79 = virtualinvoke $stack78.<java.util.Properties: java.lang.Object get(java.lang.Object)>(iter#11);

        module = (java.lang.String) $stack79;

        $stack80 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack81 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack80, iter#11);

        $stack82 = interfaceinvoke $stack81.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(module);

        $stack83 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack82.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack83, iter#11);

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r4 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r4, iter#11, serializer);

        goto label05;

     label06:
        $stack75 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack75, "properties");

     label07:
        $stack13 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if $stack13 == null goto label08;

        $stack63 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        $r5 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r5.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDependencyManagement(org.apache.maven.model.DependencyManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack63, "dependencyManagement", serializer);

     label08:
        $stack14 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        if $stack14 == null goto label11;

        $stack51 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        $stack52 = interfaceinvoke $stack51.<java.util.List: int size()>();

        if $stack52 <= 0 goto label11;

        $stack54 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack54, "dependencies");

        $stack56 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        location#17 = interfaceinvoke $stack56.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $stack58 = interfaceinvoke location#17.<java.util.Iterator: boolean hasNext()>();

        if $stack58 == 0 goto label10;

        $stack61 = interfaceinvoke location#17.<java.util.Iterator: java.lang.Object next()>();

        n#18 = (org.apache.maven.model.Dependency) $stack61;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(n#18, "dependency", serializer);

        goto label09;

     label10:
        $stack59 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack59, "dependencies");

     label11:
        $stack15 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        if $stack15 == null goto label14;

        $stack39 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        $stack40 = interfaceinvoke $stack39.<java.util.List: int size()>();

        if $stack40 <= 0 goto label14;

        $stack42 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack42, "repositories");

        $stack44 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        location#17 = interfaceinvoke $stack44.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $stack46 = interfaceinvoke location#17.<java.util.Iterator: boolean hasNext()>();

        if $stack46 == 0 goto label13;

        $stack49 = interfaceinvoke location#17.<java.util.Iterator: java.lang.Object next()>();

        n#24 = (org.apache.maven.model.Repository) $stack49;

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(n#24, "repository", serializer);

        goto label12;

     label13:
        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack47, "repositories");

     label14:
        $stack16 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        if $stack16 == null goto label17;

        $stack27 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        $stack28 = interfaceinvoke $stack27.<java.util.List: int size()>();

        if $stack28 <= 0 goto label17;

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "pluginRepositories");

        $stack32 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        location#17 = interfaceinvoke $stack32.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $stack34 = interfaceinvoke location#17.<java.util.Iterator: boolean hasNext()>();

        if $stack34 == 0 goto label16;

        $stack37 = interfaceinvoke location#17.<java.util.Iterator: java.lang.Object next()>();

        n#24 = (org.apache.maven.model.Repository) $stack37;

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(n#24, "pluginRepository", serializer);

        goto label15;

     label16:
        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "pluginRepositories");

     label17:
        $stack17 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.lang.Object getReports()>();

        if $stack17 == null goto label18;

        $stack24 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.lang.Object getReports()>();

        $stack25 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack24;

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack25, serializer);

     label18:
        $stack18 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting getReporting()>();

        if $stack18 == null goto label19;

        $stack21 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting getReporting()>();

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeReporting(org.apache.maven.model.Reporting,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack21, "reporting", serializer);

     label19:
        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack19, tagName);

        return;
    }

    private void writeNotifier(org.apache.maven.model.Notifier, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack36, $stack37, $stack42, $stack44, $stack49, $stack52, $stack57, $stack60, $stack66, $stack69, $stack75, $stack78, $stack88, $stack90;
        java.lang.String tagName, $stack8, $stack10, $stack15, $stack23, $stack30, key, value, $stack35, $stack38, $stack41, $stack43, $stack45, $stack48, $stack51, $stack53, $stack56, $stack59, $stack61, $stack65, $stack68, $stack70, $stack74, $stack77, $stack79, $stack83, $stack87, $stack89, $stack91, $stack17;
        org.apache.maven.model.Notifier notifier;
        boolean $stack12, $stack13, $stack14, $stack29, $stack50, $stack58, $stack67, $stack76, $stack84, $stack11;
        java.util.Properties $stack16, $stack19, $stack26, $stack33;
        int $stack20;
        org.apache.maven.model.InputLocation location;
        java.util.Set $stack27;
        java.util.Iterator iter;
        java.lang.Object $stack32, $stack34;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r8, $r10, $r12;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r9, $r11, $r13;

        this := @this: MavenXpp3WriterEx;

        notifier := @parameter0: org.apache.maven.model.Notifier;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getType()>();

        if $stack10 == null goto label1;

        $stack83 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getType()>();

        $stack84 = virtualinvoke $stack83.<java.lang.String: boolean equals(java.lang.Object)>("mail");

        if $stack84 != 0 goto label1;

        $stack87 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack88 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack87, "type");

        $stack89 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getType()>();

        $stack90 = interfaceinvoke $stack88.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack89);

        $stack91 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack90.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack91, "type");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) notifier;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "type", serializer);

     label1:
        $stack11 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnError()>();

        if $stack11 == 1 goto label2;

        $stack74 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack75 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack74, "sendOnError");

        $stack76 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnError()>();

        $stack77 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack76);

        $stack78 = interfaceinvoke $stack75.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack77);

        $stack79 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack78.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack79, "sendOnError");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) notifier;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "sendOnError", serializer);

     label2:
        $stack12 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnFailure()>();

        if $stack12 == 1 goto label3;

        $stack65 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack66 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack65, "sendOnFailure");

        $stack67 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnFailure()>();

        $stack68 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack67);

        $stack69 = interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack68);

        $stack70 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack69.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack70, "sendOnFailure");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) notifier;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "sendOnFailure", serializer);

     label3:
        $stack13 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnSuccess()>();

        if $stack13 == 1 goto label4;

        $stack56 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack57 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack56, "sendOnSuccess");

        $stack58 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnSuccess()>();

        $stack59 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack58);

        $stack60 = interfaceinvoke $stack57.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack59);

        $stack61 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack60.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack61, "sendOnSuccess");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) notifier;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "sendOnSuccess", serializer);

     label4:
        $stack14 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnWarning()>();

        if $stack14 == 1 goto label5;

        $stack48 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack49 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack48, "sendOnWarning");

        $stack50 = virtualinvoke notifier.<org.apache.maven.model.Notifier: boolean isSendOnWarning()>();

        $stack51 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack50);

        $stack52 = interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack51);

        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack52.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack53, "sendOnWarning");

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) notifier;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, "sendOnWarning", serializer);

     label5:
        $stack15 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getAddress()>();

        if $stack15 == null goto label6;

        $stack41 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack42 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack41, "address");

        $stack43 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getAddress()>();

        $stack44 = interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack43);

        $stack45 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack44.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack45, "address");

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r11 = (org.apache.maven.model.InputLocationTracker) notifier;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r11, "address", serializer);

     label6:
        $stack16 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        if $stack16 == null goto label9;

        $stack19 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        $stack20 = virtualinvoke $stack19.<java.util.Properties: int size()>();

        if $stack20 <= 0 goto label9;

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack23, "configuration");

        location = virtualinvoke notifier.<org.apache.maven.model.Notifier: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("configuration");

        $stack26 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        $stack27 = virtualinvoke $stack26.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack27.<java.util.Set: java.util.Iterator iterator()>();

     label7:
        $stack29 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack29 == 0 goto label8;

        $stack32 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $stack32;

        $stack33 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        $stack34 = virtualinvoke $stack33.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);

        value = (java.lang.String) $stack34;

        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack36 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack35, key);

        $stack37 = interfaceinvoke $stack36.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, key);

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r13 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r13, key, serializer);

        goto label7;

     label8:
        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "configuration");

     label9:
        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, tagName);

        return;
    }

    private void writeOrganization(org.apache.maven.model.Organization, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.model.Organization organization;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: MavenXpp3WriterEx;

        organization := @parameter0: org.apache.maven.model.Organization;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "name");

        $stack20 = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getName()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "name");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) organization;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "name", serializer);

     label1:
        $stack7 = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getUrl()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "url");

        $stack12 = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getUrl()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "url");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) organization;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "url", serializer);

     label2:
        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeParent(org.apache.maven.model.Parent, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack17, $stack19, $stack23, $stack25, $stack30, $stack32, $stack37, $stack39;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack12, $stack16, $stack18, $stack20, $stack22, $stack24, $stack26, $stack29, $stack31, $stack33, $stack36, $stack38, $stack40, $stack10;
        org.apache.maven.model.Parent parent;
        boolean $stack13;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7;

        this := @this: MavenXpp3WriterEx;

        parent := @parameter0: org.apache.maven.model.Parent;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        if $stack6 == null goto label1;

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack37 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "groupId");

        $stack38 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $stack39 = interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack38);

        $stack40 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "groupId");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) parent;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "groupId", serializer);

     label1:
        $stack7 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        if $stack7 == null goto label2;

        $stack29 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack30 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack29, "artifactId");

        $stack31 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $stack32 = interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack31);

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack33, "artifactId");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) parent;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "artifactId", serializer);

     label2:
        $stack8 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        if $stack8 == null goto label3;

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack23 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack22, "version");

        $stack24 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $stack25 = interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack24);

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack26, "version");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) parent;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "version", serializer);

     label3:
        $stack9 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("../pom.xml");

        if $stack13 != 0 goto label4;

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack17 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "relativePath");

        $stack18 = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        $stack19 = interfaceinvoke $stack17.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack18);

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "relativePath");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) parent;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "relativePath", serializer);

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writePatternSet(org.apache.maven.model.PatternSet, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack28, $stack29, $stack48, $stack49;
        java.lang.String tagName, $stack8, $stack18, $stack24, $stack27, $stack30, $stack38, $stack44, $stack47, $stack50, include, $stack12;
        org.apache.maven.model.PatternSet patternSet;
        java.util.List $stack10, $stack14, $stack21, $stack35, $stack41, $stack11;
        int $stack15, $stack32, $stack36, $stack52, n;
        boolean $stack23, $stack43;
        java.lang.Object $stack26, $stack46;
        MavenXpp3WriterEx this;
        java.lang.Integer $stack33, $stack53;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: MavenXpp3WriterEx;

        patternSet := @parameter0: org.apache.maven.model.PatternSet;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getIncludes()>();

        if $stack10 == null goto label3;

        $stack35 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getIncludes()>();

        $stack36 = interfaceinvoke $stack35.<java.util.List: int size()>();

        if $stack36 <= 0 goto label3;

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack38, "includes");

        location = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("includes");

        n = 0;

        $stack41 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getIncludes()>();

        iter = interfaceinvoke $stack41.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack43 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack43 == 0 goto label2;

        $stack46 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack46;

        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack48 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack47, "include");

        $stack49 = interfaceinvoke $stack48.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "include");

        $stack52 = n;

        n = n + 1;

        $stack53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack52);

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, $stack53, serializer);

        goto label1;

     label2:
        $stack44 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack44, "includes");

     label3:
        $stack11 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getExcludes()>();

        if $stack11 == null goto label6;

        $stack14 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getExcludes()>();

        $stack15 = interfaceinvoke $stack14.<java.util.List: int size()>();

        if $stack15 <= 0 goto label6;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "excludes");

        location = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("excludes");

        n = 0;

        $stack21 = virtualinvoke patternSet.<org.apache.maven.model.PatternSet: java.util.List getExcludes()>();

        iter = interfaceinvoke $stack21.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack23 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack23 == 0 goto label5;

        $stack26 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack26;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "exclude");

        $stack29 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "exclude");

        $stack32 = n;

        n = n + 1;

        $stack33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack32);

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, $stack33, serializer);

        goto label4;

     label5:
        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "excludes");

     label6:
        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack12, tagName);

        return;
    }

    private void writePlugin(org.apache.maven.model.Plugin, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack24, $stack26, $stack58, $stack60, $stack65, $stack67, $stack72, $stack74, $stack82, $stack84;
        java.lang.String tagName, $stack6, $stack8, $stack10, $stack11, $stack15, $stack17, $stack23, $stack25, $stack27, $stack36, $stack41, $stack48, $stack53, $stack57, $stack59, $stack61, $stack64, $stack66, $stack68, $stack71, $stack73, $stack75, $stack78, $stack81, $stack83, $stack85, $stack9;
        org.apache.maven.model.Plugin plugin;
        java.util.List $stack12, $stack33, $stack38, $stack45, $stack50, $stack13;
        java.lang.Object $stack16, $stack19, $stack30, $stack43, $stack55, $stack14;
        MavenXpp3WriterEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack20, $stack31;
        int $stack34, $stack46;
        boolean $stack40, $stack52, $stack79;
        java.util.Iterator iter;
        org.apache.maven.model.PluginExecution o;
        org.apache.maven.model.Dependency o#12;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r8, $r9, $r10, $r11, $r13;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r12;

        this := @this: MavenXpp3WriterEx;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        if $stack8 == null goto label01;

        $stack78 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack79 = virtualinvoke $stack78.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.maven.plugins");

        if $stack79 != 0 goto label01;

        $stack81 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack82 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack81, "groupId");

        $stack83 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack84 = interfaceinvoke $stack82.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack83);

        $stack85 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack84.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack85, "groupId");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) plugin;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "groupId", serializer);

     label01:
        $stack9 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        if $stack9 == null goto label02;

        $stack71 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack72 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack71, "artifactId");

        $stack73 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $stack74 = interfaceinvoke $stack72.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack73);

        $stack75 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack74.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack75, "artifactId");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) plugin;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "artifactId", serializer);

     label02:
        $stack10 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        if $stack10 == null goto label03;

        $stack64 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack65 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack64, "version");

        $stack66 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        $stack67 = interfaceinvoke $stack65.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack66);

        $stack68 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack67.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack68, "version");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) plugin;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "version", serializer);

     label03:
        $stack11 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getExtensions()>();

        if $stack11 == null goto label04;

        $stack57 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack58 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack57, "extensions");

        $stack59 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getExtensions()>();

        $stack60 = interfaceinvoke $stack58.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack59);

        $stack61 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack60.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack61, "extensions");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) plugin;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "extensions", serializer);

     label04:
        $stack12 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        if $stack12 == null goto label07;

        $stack45 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        $stack46 = interfaceinvoke $stack45.<java.util.List: int size()>();

        if $stack46 <= 0 goto label07;

        $stack48 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack48, "executions");

        $stack50 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        iter = interfaceinvoke $stack50.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $stack52 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack52 == 0 goto label06;

        $stack55 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.PluginExecution) $stack55;

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePluginExecution(org.apache.maven.model.PluginExecution,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "execution", serializer);

        goto label05;

     label06:
        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack53, "executions");

     label07:
        $stack13 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        if $stack13 == null goto label10;

        $stack33 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        $stack34 = interfaceinvoke $stack33.<java.util.List: int size()>();

        if $stack34 <= 0 goto label10;

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "dependencies");

        $stack38 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        iter = interfaceinvoke $stack38.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack40 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack40 == 0 goto label09;

        $stack43 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#12 = (org.apache.maven.model.Dependency) $stack43;

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#12, "dependency", serializer);

        goto label08;

     label09:
        $stack41 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack41, "dependencies");

     label10:
        $stack14 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getGoals()>();

        if $stack14 == null goto label11;

        $stack30 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getGoals()>();

        $stack31 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack30;

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack31, serializer);

     label11:
        $stack15 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getInherited()>();

        if $stack15 == null goto label12;

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack24 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack23, "inherited");

        $stack25 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getInherited()>();

        $stack26 = interfaceinvoke $stack24.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack25);

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack26.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack27, "inherited");

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r12 = (org.apache.maven.model.InputLocationTracker) plugin;

        specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r12, "inherited", serializer);

     label12:
        $stack16 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getConfiguration()>();

        if $stack16 == null goto label13;

        $stack19 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getConfiguration()>();

        $stack20 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack19;

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack20, serializer);

     label13:
        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, tagName);

        return;
    }

    private void writePluginConfiguration(org.apache.maven.model.PluginConfiguration, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        java.lang.String tagName, $stack6, $stack16, $stack21, $stack10;
        org.apache.maven.model.PluginConfiguration pluginConfiguration;
        org.apache.maven.model.PluginManagement $stack8, $stack25;
        java.util.List $stack9, $stack12, $stack18;
        int $stack13;
        java.util.Iterator iter;
        boolean $stack20;
        java.lang.Object $stack23;
        org.apache.maven.model.Plugin o;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r1;

        this := @this: MavenXpp3WriterEx;

        pluginConfiguration := @parameter0: org.apache.maven.model.PluginConfiguration;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if $stack8 == null goto label1;

        $stack25 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: org.apache.maven.model.PluginManagement getPluginManagement()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePluginManagement(org.apache.maven.model.PluginManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack25, "pluginManagement", serializer);

     label1:
        $stack9 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: java.util.List getPlugins()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: java.util.List getPlugins()>();

        $stack13 = interfaceinvoke $stack12.<java.util.List: int size()>();

        if $stack13 <= 0 goto label4;

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "plugins");

        $stack18 = virtualinvoke pluginConfiguration.<org.apache.maven.model.PluginConfiguration: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack18.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack20 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label3;

        $stack23 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Plugin) $stack23;

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "plugin", serializer);

        goto label2;

     label3:
        $stack21 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack21, "plugins");

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writePluginContainer(org.apache.maven.model.PluginContainer, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        java.lang.String tagName, $stack6, $stack15, $stack20, $stack9;
        org.apache.maven.model.PluginContainer pluginContainer;
        java.util.List $stack8, $stack11, $stack17;
        int $stack12;
        java.util.Iterator iter;
        boolean $stack19;
        java.lang.Object $stack22;
        org.apache.maven.model.Plugin o;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0;

        this := @this: MavenXpp3WriterEx;

        pluginContainer := @parameter0: org.apache.maven.model.PluginContainer;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke pluginContainer.<org.apache.maven.model.PluginContainer: java.util.List getPlugins()>();

        if $stack8 == null goto label3;

        $stack11 = virtualinvoke pluginContainer.<org.apache.maven.model.PluginContainer: java.util.List getPlugins()>();

        $stack12 = interfaceinvoke $stack11.<java.util.List: int size()>();

        if $stack12 <= 0 goto label3;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack15, "plugins");

        $stack17 = virtualinvoke pluginContainer.<org.apache.maven.model.PluginContainer: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack17.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack19 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label2;

        $stack22 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Plugin) $stack22;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "plugin", serializer);

        goto label1;

     label2:
        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "plugins");

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writePluginExecution(org.apache.maven.model.PluginExecution, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack22, $stack24, $stack41, $stack42, $stack49, $stack51, $stack59, $stack61;
        java.lang.String tagName, $stack8, $stack10, $stack15, $stack21, $stack23, $stack25, $stack31, $stack37, goal, $stack40, $stack43, $stack48, $stack50, $stack52, $stack55, $stack58, $stack60, $stack62, $stack11, $stack13;
        org.apache.maven.model.PluginExecution pluginExecution;
        java.util.List $stack12, $stack28, $stack34;
        java.lang.Object $stack14, $stack17, $stack39;
        MavenXpp3WriterEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack18;
        int $stack29, $stack45, n;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter;
        boolean $stack36, $stack56;
        java.lang.Integer $stack46;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r8;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7;

        this := @this: MavenXpp3WriterEx;

        pluginExecution := @parameter0: org.apache.maven.model.PluginExecution;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        if $stack10 == null goto label1;

        $stack55 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        $stack56 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack56 != 0 goto label1;

        $stack58 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack59 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack58, "id");

        $stack60 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        $stack61 = interfaceinvoke $stack59.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack60);

        $stack62 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack61.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack62, "id");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) pluginExecution;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "id", serializer);

     label1:
        $stack11 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getPhase()>();

        if $stack11 == null goto label2;

        $stack48 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack49 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack48, "phase");

        $stack50 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getPhase()>();

        $stack51 = interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack50);

        $stack52 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack52, "phase");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) pluginExecution;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "phase", serializer);

     label2:
        $stack12 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        if $stack12 == null goto label5;

        $stack28 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        $stack29 = interfaceinvoke $stack28.<java.util.List: int size()>();

        if $stack29 <= 0 goto label5;

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack31, "goals");

        location = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("goals");

        n = 0;

        $stack34 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        iter = interfaceinvoke $stack34.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack36 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack36 == 0 goto label4;

        $stack39 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        goal = (java.lang.String) $stack39;

        $stack40 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack41 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack40, "goal");

        $stack42 = interfaceinvoke $stack41.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(goal);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "goal");

        $stack45 = n;

        n = n + 1;

        $stack46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack45);

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, $stack46, serializer);

        goto label3;

     label4:
        $stack37 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack37, "goals");

     label5:
        $stack13 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getInherited()>();

        if $stack13 == null goto label6;

        $stack21 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack22 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack21, "inherited");

        $stack23 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.String getInherited()>();

        $stack24 = interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack23);

        $stack25 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack24.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack25, "inherited");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) pluginExecution;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "inherited", serializer);

     label6:
        $stack14 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.Object getConfiguration()>();

        if $stack14 == null goto label7;

        $stack17 = virtualinvoke pluginExecution.<org.apache.maven.model.PluginExecution: java.lang.Object getConfiguration()>();

        $stack18 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack17;

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack18, serializer);

     label7:
        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack15, tagName);

        return;
    }

    private void writePluginManagement(org.apache.maven.model.PluginManagement, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        java.lang.String tagName, $stack6, $stack15, $stack20, $stack9;
        org.apache.maven.model.PluginManagement pluginManagement;
        java.util.List $stack8, $stack11, $stack17;
        int $stack12;
        java.util.Iterator iter;
        boolean $stack19;
        java.lang.Object $stack22;
        org.apache.maven.model.Plugin o;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0;

        this := @this: MavenXpp3WriterEx;

        pluginManagement := @parameter0: org.apache.maven.model.PluginManagement;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke pluginManagement.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        if $stack8 == null goto label3;

        $stack11 = virtualinvoke pluginManagement.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        $stack12 = interfaceinvoke $stack11.<java.util.List: int size()>();

        if $stack12 <= 0 goto label3;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack15, "plugins");

        $stack17 = virtualinvoke pluginManagement.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack17.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack19 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label2;

        $stack22 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.Plugin) $stack22;

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writePlugin(org.apache.maven.model.Plugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "plugin", serializer);

        goto label1;

     label2:
        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "plugins");

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writePrerequisites(org.apache.maven.model.Prerequisites, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack14, $stack16;
        java.lang.String tagName, $stack4, $stack6, $stack9, $stack13, $stack15, $stack17, $stack7;
        org.apache.maven.model.Prerequisites prerequisites;
        boolean $stack10;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0;
        org.apache.maven.model.InputLocationTracker $r1;

        this := @this: MavenXpp3WriterEx;

        prerequisites := @parameter0: org.apache.maven.model.Prerequisites;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke prerequisites.<org.apache.maven.model.Prerequisites: java.lang.String getMaven()>();

        if $stack6 == null goto label1;

        $stack9 = virtualinvoke prerequisites.<org.apache.maven.model.Prerequisites: java.lang.String getMaven()>();

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>("2.0");

        if $stack10 != 0 goto label1;

        $stack13 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack14 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack13, "maven");

        $stack15 = virtualinvoke prerequisites.<org.apache.maven.model.Prerequisites: java.lang.String getMaven()>();

        $stack16 = interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack15);

        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack16.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, "maven");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) prerequisites;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "maven", serializer);

     label1:
        $stack7 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack7, tagName);

        return;
    }

    private void writeProfile(org.apache.maven.model.Profile, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack84, $stack85, $stack104, $stack105, $stack119, $stack121;
        java.lang.String tagName, $stack8, $stack10, $stack22, $stack33, $stack38, $stack45, $stack50, $stack57, $stack62, $stack71, $stack78, $stack83, $stack86, $stack94, $stack100, $stack103, $stack106, $stack115, $stack118, $stack120, $stack122, module, iter#15;
        org.apache.maven.model.Profile profile;
        org.apache.maven.model.BuildBase $stack12, $stack111;
        java.util.List $stack13, $stack17, $stack30, $stack35, $stack42, $stack47, $stack54, $stack59, $stack91, $stack97, $stack18, $stack19;
        java.util.Properties $stack15, $stack68, $stack74, $stack81;
        org.apache.maven.model.Reporting $stack21, $stack24;
        MavenXpp3WriterEx this;
        java.lang.Object $stack27, $stack40, $stack52, $stack64, $stack80, $stack82, $stack102, $stack20;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack28;
        int $stack31, $stack43, $stack55, $stack69, $stack92, $stack108, n;
        boolean $stack37, $stack49, $stack61, $stack77, $stack99, $stack116;
        org.apache.maven.model.DependencyManagement $stack66, $stack16;
        java.util.Set $stack75;
        org.apache.maven.model.DistributionManagement $stack89, $stack14;
        java.lang.Integer $stack109;
        org.apache.maven.model.Activation $stack113, $stack11;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter, n#14, location#21;
        org.apache.maven.model.Dependency n#22;
        org.apache.maven.model.Repository n#28;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14;
        org.apache.maven.model.InputLocationTracker $r1, $r5, $r8;

        this := @this: MavenXpp3WriterEx;

        profile := @parameter0: org.apache.maven.model.Profile;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        if $stack10 == null goto label01;

        $stack115 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack116 = virtualinvoke $stack115.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack116 != 0 goto label01;

        $stack118 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack119 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack118, "id");

        $stack120 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack121 = interfaceinvoke $stack119.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack120);

        $stack122 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack121.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack122, "id");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) profile;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "id", serializer);

     label01:
        $stack11 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        if $stack11 == null goto label02;

        $stack113 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeActivation(org.apache.maven.model.Activation,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack113, "activation", serializer);

     label02:
        $stack12 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.BuildBase getBuild()>();

        if $stack12 == null goto label03;

        $stack111 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.BuildBase getBuild()>();

        $r3 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r3.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeBuildBase(org.apache.maven.model.BuildBase,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack111, "build", serializer);

     label03:
        $stack13 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getModules()>();

        if $stack13 == null goto label06;

        $stack91 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getModules()>();

        $stack92 = interfaceinvoke $stack91.<java.util.List: int size()>();

        if $stack92 <= 0 goto label06;

        $stack94 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack94, "modules");

        location = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("modules");

        n = 0;

        $stack97 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getModules()>();

        iter = interfaceinvoke $stack97.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $stack99 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack99 == 0 goto label05;

        $stack102 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        module = (java.lang.String) $stack102;

        $stack103 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack104 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack103, "module");

        $stack105 = interfaceinvoke $stack104.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(module);

        $stack106 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack105.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack106, "module");

        $stack108 = n;

        n = n + 1;

        $stack109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack108);

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, $stack109, serializer);

        goto label04;

     label05:
        $stack100 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack100, "modules");

     label06:
        $stack14 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if $stack14 == null goto label07;

        $stack89 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDistributionManagement(org.apache.maven.model.DistributionManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack89, "distributionManagement", serializer);

     label07:
        $stack15 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        if $stack15 == null goto label10;

        $stack68 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        $stack69 = virtualinvoke $stack68.<java.util.Properties: int size()>();

        if $stack69 <= 0 goto label10;

        $stack71 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack71, "properties");

        location = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("properties");

        $stack74 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        $stack75 = virtualinvoke $stack74.<java.util.Properties: java.util.Set keySet()>();

        n#14 = interfaceinvoke $stack75.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $stack77 = interfaceinvoke n#14.<java.util.Iterator: boolean hasNext()>();

        if $stack77 == 0 goto label09;

        $stack80 = interfaceinvoke n#14.<java.util.Iterator: java.lang.Object next()>();

        iter#15 = (java.lang.String) $stack80;

        $stack81 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.Properties getProperties()>();

        $stack82 = virtualinvoke $stack81.<java.util.Properties: java.lang.Object get(java.lang.Object)>(iter#15);

        module = (java.lang.String) $stack82;

        $stack83 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack84 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack83, iter#15);

        $stack85 = interfaceinvoke $stack84.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(module);

        $stack86 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack85.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack86, iter#15);

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r8 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r8, iter#15, serializer);

        goto label08;

     label09:
        $stack78 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack78, "properties");

     label10:
        $stack16 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if $stack16 == null goto label11;

        $stack66 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDependencyManagement(org.apache.maven.model.DependencyManagement,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack66, "dependencyManagement", serializer);

     label11:
        $stack17 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getDependencies()>();

        if $stack17 == null goto label14;

        $stack54 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getDependencies()>();

        $stack55 = interfaceinvoke $stack54.<java.util.List: int size()>();

        if $stack55 <= 0 goto label14;

        $stack57 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack57, "dependencies");

        $stack59 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getDependencies()>();

        location#21 = interfaceinvoke $stack59.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $stack61 = interfaceinvoke location#21.<java.util.Iterator: boolean hasNext()>();

        if $stack61 == 0 goto label13;

        $stack64 = interfaceinvoke location#21.<java.util.Iterator: java.lang.Object next()>();

        n#22 = (org.apache.maven.model.Dependency) $stack64;

        $r10 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r10.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeDependency(org.apache.maven.model.Dependency,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(n#22, "dependency", serializer);

        goto label12;

     label13:
        $stack62 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack62, "dependencies");

     label14:
        $stack18 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getRepositories()>();

        if $stack18 == null goto label17;

        $stack42 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getRepositories()>();

        $stack43 = interfaceinvoke $stack42.<java.util.List: int size()>();

        if $stack43 <= 0 goto label17;

        $stack45 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack45, "repositories");

        $stack47 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getRepositories()>();

        location#21 = interfaceinvoke $stack47.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $stack49 = interfaceinvoke location#21.<java.util.Iterator: boolean hasNext()>();

        if $stack49 == 0 goto label16;

        $stack52 = interfaceinvoke location#21.<java.util.Iterator: java.lang.Object next()>();

        n#28 = (org.apache.maven.model.Repository) $stack52;

        $r11 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r11.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(n#28, "repository", serializer);

        goto label15;

     label16:
        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "repositories");

     label17:
        $stack19 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getPluginRepositories()>();

        if $stack19 == null goto label20;

        $stack30 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getPluginRepositories()>();

        $stack31 = interfaceinvoke $stack30.<java.util.List: int size()>();

        if $stack31 <= 0 goto label20;

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack33, "pluginRepositories");

        $stack35 = virtualinvoke profile.<org.apache.maven.model.Profile: java.util.List getPluginRepositories()>();

        location#21 = interfaceinvoke $stack35.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $stack37 = interfaceinvoke location#21.<java.util.Iterator: boolean hasNext()>();

        if $stack37 == 0 goto label19;

        $stack40 = interfaceinvoke location#21.<java.util.Iterator: java.lang.Object next()>();

        n#28 = (org.apache.maven.model.Repository) $stack40;

        $r12 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r12.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepository(org.apache.maven.model.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(n#28, "pluginRepository", serializer);

        goto label18;

     label19:
        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "pluginRepositories");

     label20:
        $stack20 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.Object getReports()>();

        if $stack20 == null goto label21;

        $stack27 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.Object getReports()>();

        $stack28 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack27;

        $r13 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r13.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack28, serializer);

     label21:
        $stack21 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Reporting getReporting()>();

        if $stack21 == null goto label22;

        $stack24 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Reporting getReporting()>();

        $r14 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r14.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeReporting(org.apache.maven.model.Reporting,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack24, "reporting", serializer);

     label22:
        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, tagName);

        return;
    }

    private void writeRelocation(org.apache.maven.model.Relocation, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30, $stack35, $stack37;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36, $stack38;
        org.apache.maven.model.Relocation relocation;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7;

        this := @this: MavenXpp3WriterEx;

        relocation := @parameter0: org.apache.maven.model.Relocation;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getGroupId()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "groupId");

        $stack36 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getGroupId()>();

        $stack37 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack36);

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "groupId");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) relocation;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "groupId", serializer);

     label1:
        $stack7 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getArtifactId()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "artifactId");

        $stack29 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getArtifactId()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "artifactId");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) relocation;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "artifactId", serializer);

     label2:
        $stack8 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getVersion()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "version");

        $stack22 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getVersion()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "version");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) relocation;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "version", serializer);

     label3:
        $stack9 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getMessage()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "message");

        $stack14 = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getMessage()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "message");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) relocation;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "message", serializer);

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeReportPlugin(org.apache.maven.model.ReportPlugin, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack40, $stack42, $stack47, $stack49, $stack57, $stack59;
        java.lang.String tagName, $stack6, $stack8, $stack10, $stack14, $stack20, $stack22, $stack24, $stack30, $stack35, $stack39, $stack41, $stack43, $stack46, $stack48, $stack50, $stack53, $stack56, $stack58, $stack60, $stack9, $stack12;
        org.apache.maven.model.ReportPlugin reportPlugin;
        java.util.List $stack11, $stack27, $stack32;
        java.lang.Object $stack13, $stack16, $stack37;
        MavenXpp3WriterEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack17;
        int $stack28;
        java.util.Iterator iter;
        boolean $stack34, $stack54;
        org.apache.maven.model.ReportSet o;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r7, $r9;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r8;

        this := @this: MavenXpp3WriterEx;

        reportPlugin := @parameter0: org.apache.maven.model.ReportPlugin;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        if $stack8 == null goto label1;

        $stack53 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        $stack54 = virtualinvoke $stack53.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.maven.plugins");

        if $stack54 != 0 goto label1;

        $stack56 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack57 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack56, "groupId");

        $stack58 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        $stack59 = interfaceinvoke $stack57.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack58);

        $stack60 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack59.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack60, "groupId");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) reportPlugin;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "groupId", serializer);

     label1:
        $stack9 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        if $stack9 == null goto label2;

        $stack46 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack47 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack46, "artifactId");

        $stack48 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        $stack49 = interfaceinvoke $stack47.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack48);

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "artifactId");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) reportPlugin;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "artifactId", serializer);

     label2:
        $stack10 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getVersion()>();

        if $stack10 == null goto label3;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "version");

        $stack41 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getVersion()>();

        $stack42 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack41);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "version");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) reportPlugin;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "version", serializer);

     label3:
        $stack11 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        if $stack11 == null goto label6;

        $stack27 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        $stack28 = interfaceinvoke $stack27.<java.util.List: int size()>();

        if $stack28 <= 0 goto label6;

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "reportSets");

        $stack32 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        iter = interfaceinvoke $stack32.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack34 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack34 == 0 goto label5;

        $stack37 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.ReportSet) $stack37;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeReportSet(org.apache.maven.model.ReportSet,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "reportSet", serializer);

        goto label4;

     label5:
        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "reportSets");

     label6:
        $stack12 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getInherited()>();

        if $stack12 == null goto label7;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "inherited");

        $stack22 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getInherited()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "inherited");

        $r7 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r8 = (org.apache.maven.model.InputLocationTracker) reportPlugin;

        specialinvoke $r7.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r8, "inherited", serializer);

     label7:
        $stack13 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.Object getConfiguration()>();

        if $stack13 == null goto label8;

        $stack16 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.Object getConfiguration()>();

        $stack17 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack16;

        $r9 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r9.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack17, serializer);

     label8:
        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, tagName);

        return;
    }

    private void writeReportSet(org.apache.maven.model.ReportSet, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack40, $stack41, $stack51, $stack53;
        java.lang.String tagName, $stack8, $stack10, $stack14, $stack20, $stack22, $stack24, $stack30, $stack36, report, $stack39, $stack42, $stack47, $stack50, $stack52, $stack54, $stack12;
        org.apache.maven.model.ReportSet reportSet;
        java.lang.Object $stack13, $stack16, $stack38;
        MavenXpp3WriterEx this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack17;
        java.util.List $stack27, $stack33, $stack11;
        int $stack28, $stack44, n;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter;
        boolean $stack35, $stack48;
        java.lang.Integer $stack45;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5;

        this := @this: MavenXpp3WriterEx;

        reportSet := @parameter0: org.apache.maven.model.ReportSet;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        if $stack10 == null goto label1;

        $stack47 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        $stack48 = virtualinvoke $stack47.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack48 != 0 goto label1;

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack51 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack50, "id");

        $stack52 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        $stack53 = interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack52);

        $stack54 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack53.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack54, "id");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) reportSet;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "id", serializer);

     label1:
        $stack11 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        if $stack11 == null goto label4;

        $stack27 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        $stack28 = interfaceinvoke $stack27.<java.util.List: int size()>();

        if $stack28 <= 0 goto label4;

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "reports");

        location = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("reports");

        n = 0;

        $stack33 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        iter = interfaceinvoke $stack33.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack35 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack35 == 0 goto label3;

        $stack38 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        report = (java.lang.String) $stack38;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "report");

        $stack41 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(report);

        $stack42 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack41.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack42, "report");

        $stack44 = n;

        n = n + 1;

        $stack45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack44);

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, $stack45, serializer);

        goto label2;

     label3:
        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack36, "reports");

     label4:
        $stack12 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getInherited()>();

        if $stack12 == null goto label5;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "inherited");

        $stack22 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getInherited()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "inherited");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) reportSet;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "inherited", serializer);

     label5:
        $stack13 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.Object getConfiguration()>();

        if $stack13 == null goto label6;

        $stack16 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.Object getConfiguration()>();

        $stack17 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack16;

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        virtualinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeXpp3DomToSerializer(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack17, serializer);

     label6:
        $stack14 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, tagName);

        return;
    }

    private void writeReporting(org.apache.maven.model.Reporting, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack27, $stack29, $stack34, $stack36;
        java.lang.String tagName, $stack6, $stack8, $stack9, $stack17, $stack22, $stack26, $stack28, $stack30, $stack33, $stack35, $stack37, $stack11;
        org.apache.maven.model.Reporting reporting;
        java.util.List $stack10, $stack13, $stack19;
        int $stack14;
        java.util.Iterator iter;
        boolean $stack21;
        java.lang.Object $stack24;
        org.apache.maven.model.ReportPlugin o;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4;
        org.apache.maven.model.InputLocationTracker $r1, $r3;

        this := @this: MavenXpp3WriterEx;

        reporting := @parameter0: org.apache.maven.model.Reporting;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack6 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack6, tagName);

        $stack8 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getExcludeDefaults()>();

        if $stack8 == null goto label1;

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack34 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack33, "excludeDefaults");

        $stack35 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getExcludeDefaults()>();

        $stack36 = interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack35);

        $stack37 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack36.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack37, "excludeDefaults");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) reporting;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "excludeDefaults", serializer);

     label1:
        $stack9 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getOutputDirectory()>();

        if $stack9 == null goto label2;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "outputDirectory");

        $stack28 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getOutputDirectory()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "outputDirectory");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) reporting;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "outputDirectory", serializer);

     label2:
        $stack10 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        if $stack10 == null goto label5;

        $stack13 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        $stack14 = interfaceinvoke $stack13.<java.util.List: int size()>();

        if $stack14 <= 0 goto label5;

        $stack17 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack17, "plugins");

        $stack19 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        iter = interfaceinvoke $stack19.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack21 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label4;

        $stack24 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.model.ReportPlugin) $stack24;

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeReportPlugin(org.apache.maven.model.ReportPlugin,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "plugin", serializer);

        goto label3;

     label4:
        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "plugins");

     label5:
        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writeRepository(org.apache.maven.model.Repository, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack19, $stack21, $stack25, $stack27, $stack32, $stack34, $stack39, $stack41;
        java.lang.String tagName, $stack4, $stack8, $stack9, $stack10, $stack11, $stack14, $stack18, $stack20, $stack22, $stack24, $stack26, $stack28, $stack31, $stack33, $stack35, $stack38, $stack40, $stack42, $stack12;
        org.apache.maven.model.Repository repository;
        org.apache.maven.model.RepositoryPolicy $stack6, $stack7, $stack45, $stack47;
        boolean $stack15;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r1, $r2, $r4, $r6, $r8;
        org.apache.maven.model.InputLocationTracker $r3, $r5, $r7, $r9;

        this := @this: MavenXpp3WriterEx;

        repository := @parameter0: org.apache.maven.model.Repository;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        if $stack6 == null goto label1;

        $stack47 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack47, "releases", serializer);

     label1:
        $stack7 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        if $stack7 == null goto label2;

        $stack45 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        $r1 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        specialinvoke $r1.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack45, "snapshots", serializer);

     label2:
        $stack8 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        if $stack8 == null goto label3;

        $stack38 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack39 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack38, "id");

        $stack40 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getId()>();

        $stack41 = interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack40);

        $stack42 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack41.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack42, "id");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) repository;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "id", serializer);

     label3:
        $stack9 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getName()>();

        if $stack9 == null goto label4;

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack32 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack31, "name");

        $stack33 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getName()>();

        $stack34 = interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack33);

        $stack35 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "name");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) repository;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "name", serializer);

     label4:
        $stack10 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getUrl()>();

        if $stack10 == null goto label5;

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack25 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "url");

        $stack26 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getUrl()>();

        $stack27 = interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack26);

        $stack28 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "url");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) repository;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "url", serializer);

     label5:
        $stack11 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getLayout()>();

        if $stack11 == null goto label6;

        $stack14 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getLayout()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack15 != 0 goto label6;

        $stack18 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "layout");

        $stack20 = virtualinvoke repository.<org.apache.maven.model.Repository: java.lang.String getLayout()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "layout");

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) repository;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, "layout", serializer);

     label6:
        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack12, tagName);

        return;
    }

    private void writeRepositoryBase(org.apache.maven.model.RepositoryBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack17, $stack19, $stack23, $stack25, $stack30, $stack32, $stack37, $stack39;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack12, $stack16, $stack18, $stack20, $stack22, $stack24, $stack26, $stack29, $stack31, $stack33, $stack36, $stack38, $stack40, $stack10;
        org.apache.maven.model.RepositoryBase repositoryBase;
        boolean $stack13;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7;

        this := @this: MavenXpp3WriterEx;

        repositoryBase := @parameter0: org.apache.maven.model.RepositoryBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getId()>();

        if $stack6 == null goto label1;

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack37 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "id");

        $stack38 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getId()>();

        $stack39 = interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack38);

        $stack40 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "id");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) repositoryBase;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "id", serializer);

     label1:
        $stack7 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getName()>();

        if $stack7 == null goto label2;

        $stack29 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack30 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack29, "name");

        $stack31 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getName()>();

        $stack32 = interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack31);

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack33, "name");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) repositoryBase;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "name", serializer);

     label2:
        $stack8 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getUrl()>();

        if $stack8 == null goto label3;

        $stack22 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack23 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack22, "url");

        $stack24 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getUrl()>();

        $stack25 = interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack24);

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack26, "url");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) repositoryBase;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "url", serializer);

     label3:
        $stack9 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getLayout()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getLayout()>();

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack13 != 0 goto label4;

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack17 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "layout");

        $stack18 = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getLayout()>();

        $stack19 = interfaceinvoke $stack17.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack18);

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "layout");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) repositoryBase;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "layout", serializer);

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack12, $stack14, $stack20, $stack22, $stack27, $stack29;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack11, $stack13, $stack15, $stack19, $stack21, $stack23, $stack26, $stack28, $stack30;
        org.apache.maven.model.RepositoryPolicy repositoryPolicy;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5;

        this := @this: MavenXpp3WriterEx;

        repositoryPolicy := @parameter0: org.apache.maven.model.RepositoryPolicy;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getEnabled()>();

        if $stack6 == null goto label1;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "enabled");

        $stack28 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getEnabled()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "enabled");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) repositoryPolicy;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "enabled", serializer);

     label1:
        $stack7 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        if $stack7 == null goto label2;

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "updatePolicy");

        $stack21 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "updatePolicy");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) repositoryPolicy;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "updatePolicy", serializer);

     label2:
        $stack8 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        if $stack8 == null goto label3;

        $stack11 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack12 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack11, "checksumPolicy");

        $stack13 = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        $stack14 = interfaceinvoke $stack12.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack13);

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack15, "checksumPolicy");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) repositoryPolicy;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "checksumPolicy", serializer);

     label3:
        $stack9 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writeResource(org.apache.maven.model.Resource, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack31, $stack32, $stack51, $stack52, $stack59, $stack61, $stack66, $stack68, $stack73, $stack75;
        java.lang.String tagName, $stack8, $stack10, $stack11, $stack12, $stack21, $stack27, $stack30, $stack33, $stack41, $stack47, $stack50, $stack53, $stack58, $stack60, $stack62, $stack65, $stack67, $stack69, $stack72, $stack74, $stack76, include, $stack15;
        org.apache.maven.model.Resource resource;
        java.util.List $stack13, $stack17, $stack24, $stack38, $stack44, $stack14;
        int $stack18, $stack35, $stack39, $stack55, n;
        boolean $stack26, $stack46;
        java.lang.Object $stack29, $stack49;
        MavenXpp3WriterEx this;
        java.lang.Integer $stack36, $stack56;
        org.apache.maven.model.InputLocation location;
        java.util.Iterator iter;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6, $r8;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7, $r9;

        this := @this: MavenXpp3WriterEx;

        resource := @parameter0: org.apache.maven.model.Resource;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack8 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack8, tagName);

        $stack10 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getTargetPath()>();

        if $stack10 == null goto label1;

        $stack72 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack73 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack72, "targetPath");

        $stack74 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getTargetPath()>();

        $stack75 = interfaceinvoke $stack73.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack74);

        $stack76 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack75.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack76, "targetPath");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) resource;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "targetPath", serializer);

     label1:
        $stack11 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getFiltering()>();

        if $stack11 == null goto label2;

        $stack65 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack66 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack65, "filtering");

        $stack67 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getFiltering()>();

        $stack68 = interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack67);

        $stack69 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack68.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack69, "filtering");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) resource;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "filtering", serializer);

     label2:
        $stack12 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getDirectory()>();

        if $stack12 == null goto label3;

        $stack58 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack59 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack58, "directory");

        $stack60 = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getDirectory()>();

        $stack61 = interfaceinvoke $stack59.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack60);

        $stack62 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack61.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack62, "directory");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) resource;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "directory", serializer);

     label3:
        $stack13 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getIncludes()>();

        if $stack13 == null goto label6;

        $stack38 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getIncludes()>();

        $stack39 = interfaceinvoke $stack38.<java.util.List: int size()>();

        if $stack39 <= 0 goto label6;

        $stack41 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack41, "includes");

        location = virtualinvoke resource.<org.apache.maven.model.Resource: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("includes");

        n = 0;

        $stack44 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getIncludes()>();

        iter = interfaceinvoke $stack44.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack46 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack46 == 0 goto label5;

        $stack49 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack49;

        $stack50 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack51 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack50, "include");

        $stack52 = interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack53 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack52.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack53, "include");

        $stack55 = n;

        n = n + 1;

        $stack56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack55);

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, $stack56, serializer);

        goto label4;

     label5:
        $stack47 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack47, "includes");

     label6:
        $stack14 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getExcludes()>();

        if $stack14 == null goto label9;

        $stack17 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getExcludes()>();

        $stack18 = interfaceinvoke $stack17.<java.util.List: int size()>();

        if $stack18 <= 0 goto label9;

        $stack21 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack21, "excludes");

        location = virtualinvoke resource.<org.apache.maven.model.Resource: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("excludes");

        n = 0;

        $stack24 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getExcludes()>();

        iter = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>();

     label7:
        $stack26 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack26 == 0 goto label8;

        $stack29 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        include = (java.lang.String) $stack29;

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack31 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "exclude");

        $stack32 = interfaceinvoke $stack31.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(include);

        $stack33 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack33, "exclude");

        $stack35 = n;

        n = n + 1;

        $stack36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack35);

        $r8 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r9 = (org.apache.maven.model.InputLocationTracker) location;

        specialinvoke $r8.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r9, $stack36, serializer);

        goto label7;

     label8:
        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack27, "excludes");

     label9:
        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack15, tagName);

        return;
    }

    private void writeScm(org.apache.maven.model.Scm, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack16, $stack18, $stack27, $stack29, $stack33, $stack35, $stack40, $stack42;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack13, $stack15, $stack17, $stack19, $stack23, $stack26, $stack28, $stack30, $stack32, $stack34, $stack36, $stack39, $stack41, $stack43, $stack46, $stack48, $stack51, $stack53, $stack56, $stack58, $stack12;
        org.apache.maven.model.Scm scm;
        MavenXpp3WriterEx this;
        boolean $stack24;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4, $r6;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5, $r7;

        this := @this: MavenXpp3WriterEx;

        scm := @parameter0: org.apache.maven.model.Scm;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmConnectionInheritAppendPath()>();

        if $stack6 == null goto label1;

        $stack56 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack58 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmConnectionInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack56, "child.scm.connection.inherit.append.path", $stack58);

     label1:
        $stack7 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmDeveloperConnectionInheritAppendPath()>();

        if $stack7 == null goto label2;

        $stack51 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack53 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmDeveloperConnectionInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack51, "child.scm.developerConnection.inherit.append.path", $stack53);

     label2:
        $stack8 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmUrlInheritAppendPath()>();

        if $stack8 == null goto label3;

        $stack46 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack48 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmUrlInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack46, "child.scm.url.inherit.append.path", $stack48);

     label3:
        $stack9 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getConnection()>();

        if $stack9 == null goto label4;

        $stack39 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack40 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack39, "connection");

        $stack41 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getConnection()>();

        $stack42 = interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack41);

        $stack43 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack42.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack43, "connection");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) scm;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "connection", serializer);

     label4:
        $stack10 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getDeveloperConnection()>();

        if $stack10 == null goto label5;

        $stack32 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack33 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack32, "developerConnection");

        $stack34 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getDeveloperConnection()>();

        $stack35 = interfaceinvoke $stack33.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack34);

        $stack36 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack36, "developerConnection");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) scm;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "developerConnection", serializer);

     label5:
        $stack11 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getTag()>();

        if $stack11 == null goto label6;

        $stack23 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getTag()>();

        $stack24 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $stack24 != 0 goto label6;

        $stack26 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "tag");

        $stack28 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getTag()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "tag");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) scm;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "tag", serializer);

     label6:
        $stack12 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getUrl()>();

        if $stack12 == null goto label7;

        $stack15 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack16 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack15, "url");

        $stack17 = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getUrl()>();

        $stack18 = interfaceinvoke $stack16.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack17);

        $stack19 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack18.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack19, "url");

        $r6 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r7 = (org.apache.maven.model.InputLocationTracker) scm;

        specialinvoke $r6.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r7, "url", serializer);

     label7:
        $stack13 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack13, tagName);

        return;
    }

    private void writeSite(org.apache.maven.model.Site, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36;
        org.apache.maven.model.Site site;
        MavenXpp3WriterEx this;
        org.apache.maven.model.io.xpp3.MavenXpp3WriterEx $r0, $r2, $r4;
        org.apache.maven.model.InputLocationTracker $r1, $r3, $r5;

        this := @this: MavenXpp3WriterEx;

        site := @parameter0: org.apache.maven.model.Site;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getChildSiteUrlInheritAppendPath()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack36 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getChildSiteUrlInheritAppendPath()>();

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>($stack34, "child.site.url.inherit.append.path", $stack36);

     label1:
        $stack7 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getId()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "id");

        $stack29 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getId()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "id");

        $r0 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r1 = (org.apache.maven.model.InputLocationTracker) site;

        specialinvoke $r0.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r1, "id", serializer);

     label2:
        $stack8 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getName()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "name");

        $stack22 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getName()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "name");

        $r2 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r3 = (org.apache.maven.model.InputLocationTracker) site;

        specialinvoke $r2.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r3, "name", serializer);

     label3:
        $stack9 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getUrl()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "url");

        $stack14 = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getUrl()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "url");

        $r4 = (org.apache.maven.model.io.xpp3.MavenXpp3WriterEx) this;

        $r5 = (org.apache.maven.model.InputLocationTracker) site;

        specialinvoke $r4.<org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: void writeLocationTracking(org.apache.maven.model.InputLocationTracker,java.lang.Object,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($r5, "url", serializer);

     label4:
        $stack10 = <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    static void <clinit>()
    {
        <org.apache.maven.model.io.xpp3.MavenXpp3WriterEx: java.lang.String NAMESPACE> = null;

        return;
    }
}
