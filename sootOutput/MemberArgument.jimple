public class MemberArgument extends org.ooc.frontend.model.Argument
{
    protected org.ooc.frontend.model.VariableDecl ref;

    public void <init>(java.lang.String, org.ooc.frontend.model.tokens.Token)
    {
        MemberArgument this;
        java.lang.String name;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.MemberArgument $r0;

        this := @this: MemberArgument;

        name := @parameter0: java.lang.String;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Argument: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.tokens.Token)>(null, name, startToken);

        $r0 = (org.ooc.frontend.model.MemberArgument) this;

        $r0.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.VariableDecl ref> = null;

        return;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        MemberArgument this;
        org.ooc.frontend.model.MemberArgument $r0;

        this := @this: MemberArgument;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.MemberArgument) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.MemberArgument)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        MemberArgument this;

        this := @this: MemberArgument;

        return 0;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        MemberArgument this;
        org.ooc.frontend.Visitor visitor;

        this := @this: MemberArgument;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        return;
    }

    public org.ooc.frontend.model.Type getType()
    {
        MemberArgument this;
        org.ooc.frontend.model.VariableDecl $stack1, $stack2;
        org.ooc.frontend.model.Type $stack3;
        org.ooc.frontend.model.MemberArgument $r0, $r1;

        this := @this: MemberArgument;

        $r0 = (org.ooc.frontend.model.MemberArgument) this;

        $stack1 = $r0.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.VariableDecl ref>;

        if $stack1 != null goto label1;

        $stack3 = null;

        goto label2;

     label1:
        $r1 = (org.ooc.frontend.model.MemberArgument) this;

        $stack2 = $r1.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.VariableDecl ref>;

        $stack3 = virtualinvoke $stack2.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

     label2:
        return $stack3;
    }

    public boolean isResolved()
    {
        MemberArgument this;

        this := @this: MemberArgument;

        return 0;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        MemberArgument this;
        org.ooc.frontend.model.NodeList stack;
        org.ooc.middle.hobgoblins.Resolver res;
        boolean fatal;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response response, $stack8, $stack13, $stack18, $stack36;
        org.ooc.frontend.model.VariableDecl $stack9, $stack10, $stack34;
        org.ooc.frontend.model.Type $stack11, $stack20;
        java.lang.Class $stack15, $stack21, $stack27, $stack38;
        java.lang.String $stack16, $stack17, $stack22, $stack23, $stack24, $stack28, $stack29, $stack30, $stack33, $stack39, $stack40, $stack41;
        org.ooc.frontend.model.Node $stack32, $r2, $r8, $r13, $r15;
        org.ooc.frontend.model.TypeDecl typeDecl;
        int typeDeclIndex;
        org.ooc.middle.OocCompilationError $u0, $u1, $u2, $u3;
        org.ooc.frontend.model.MemberArgument $r0, $r1, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r17;
        java.lang.Throwable $r3, $r9, $r14, $r16;

        this := @this: MemberArgument;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        response = specialinvoke this.<org.ooc.frontend.model.Argument: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        $stack8 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        if response == $stack8 goto label1;

        return response;

     label1:
        $r0 = (org.ooc.frontend.model.MemberArgument) this;

        $stack9 = $r0.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.VariableDecl ref>;

        if $stack9 != null goto label4;

        typeDeclIndex = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/TypeDecl;");

        if typeDeclIndex != -1 goto label3;

        if fatal == 0 goto label2;

        $u0 = new org.ooc.middle.OocCompilationError;

        $stack38 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack39 = virtualinvoke $stack38.<java.lang.Class: java.lang.String getSimpleName()>();

        $r1 = (org.ooc.frontend.model.MemberArgument) this;

        $stack40 = $r1.<org.ooc.frontend.model.MemberArgument: java.lang.String name>;

        $stack41 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack39, $stack40) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t resolve \u0001 \u0001 (not even in a TypeDecl! who d\'you think you\'re kidding?)");

        $r2 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r2, stack, $stack41);

        $r3 = (java.lang.Throwable) $u0;

        throw $r3;

     label2:
        $stack36 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack36;

     label3:
        $stack32 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(typeDeclIndex);

        typeDecl = (org.ooc.frontend.model.TypeDecl) $stack32;

        $r4 = (org.ooc.frontend.model.MemberArgument) this;

        $stack33 = virtualinvoke $r4.<org.ooc.frontend.model.MemberArgument: java.lang.String getName()>();

        $stack34 = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.VariableDecl getVariable(java.lang.String)>($stack33);

        $r5 = (org.ooc.frontend.model.MemberArgument) this;

        $r5.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.VariableDecl ref> = $stack34;

     label4:
        $r6 = (org.ooc.frontend.model.MemberArgument) this;

        $stack10 = $r6.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.VariableDecl ref>;

        if $stack10 != null goto label5;

        if fatal == 0 goto label5;

        $u1 = new org.ooc.middle.OocCompilationError;

        $stack27 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack28 = virtualinvoke $stack27.<java.lang.Class: java.lang.String getSimpleName()>();

        $r7 = (org.ooc.frontend.model.MemberArgument) this;

        $stack29 = $r7.<org.ooc.frontend.model.MemberArgument: java.lang.String name>;

        $stack30 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack28, $stack29) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 named \'\u0001\' doesn\'t correspond to any real member variable.");

        $r8 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r8, stack, $stack30);

        $r9 = (java.lang.Throwable) $u1;

        throw $r9;

     label5:
        $r10 = (org.ooc.frontend.model.MemberArgument) this;

        $stack11 = virtualinvoke $r10.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.Type getType()>();

        if $stack11 != null goto label7;

        if fatal == 0 goto label6;

        $u2 = new org.ooc.middle.OocCompilationError;

        $r11 = (org.ooc.frontend.model.MemberArgument) this;

        $stack20 = $r11.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.Type type>;

        $stack21 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack22 = virtualinvoke $stack21.<java.lang.Class: java.lang.String getSimpleName()>();

        $r12 = (org.ooc.frontend.model.MemberArgument) this;

        $stack23 = $r12.<org.ooc.frontend.model.MemberArgument: java.lang.String name>;

        $stack24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack22, $stack23) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t resolve \u0001 \u0001");

        $r13 = (org.ooc.frontend.model.Node) $stack20;

        specialinvoke $u2.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r13, stack, $stack24);

        $r14 = (java.lang.Throwable) $u2;

        throw $r14;

     label6:
        $stack18 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack18;

     label7:
        typeDeclIndex = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/FunctionDecl;");

        if typeDeclIndex != -1 goto label8;

        $u3 = new org.ooc.middle.OocCompilationError;

        $stack15 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack16 = virtualinvoke $stack15.<java.lang.Class: java.lang.String getSimpleName()>();

        $stack17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 outside a function definition? What have you been up to?");

        $r15 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u3.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r15, stack, $stack17);

        $r16 = (java.lang.Throwable) $u3;

        throw $r16;

     label8:
        $r17 = (org.ooc.frontend.model.MemberArgument) this;

        $stack13 = virtualinvoke $r17.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.interfaces.MustBeResolved$Response doReplace(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        return $stack13;
    }

    public boolean unwrap(org.ooc.frontend.model.NodeList)
    {
        MemberArgument this;
        org.ooc.frontend.model.NodeList stack;

        this := @this: MemberArgument;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        return 0;
    }

    protected org.ooc.frontend.model.interfaces.MustBeResolved$Response doReplace(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        org.ooc.frontend.model.NodeList stack;
        org.ooc.frontend.model.Node $stack4, $r3, $r4;
        MemberArgument this;
        org.ooc.frontend.model.VariableDecl $stack6;
        org.ooc.frontend.model.Type $stack7;
        org.ooc.frontend.model.tokens.Token $stack8;
        java.lang.String $stack9;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack11;
        org.ooc.middle.hobgoblins.Resolver res;
        boolean fatal;
        org.ooc.frontend.model.RegularArgument $u0;
        org.ooc.frontend.model.MemberArgument $r0, $r1, $r2;

        this := @this: MemberArgument;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $stack4 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $u0 = new org.ooc.frontend.model.RegularArgument;

        $r0 = (org.ooc.frontend.model.MemberArgument) this;

        $stack6 = $r0.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.VariableDecl ref>;

        $stack7 = virtualinvoke $stack6.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        $r1 = (org.ooc.frontend.model.MemberArgument) this;

        $stack9 = $r1.<org.ooc.frontend.model.MemberArgument: java.lang.String name>;

        $r2 = (org.ooc.frontend.model.MemberArgument) this;

        $stack8 = $r2.<org.ooc.frontend.model.MemberArgument: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.RegularArgument: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack7, $stack9, $stack8);

        $r3 = (org.ooc.frontend.model.Node) this;

        $r4 = (org.ooc.frontend.model.Node) $u0;

        virtualinvoke $stack4.<org.ooc.frontend.model.Node: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r3, $r4);

        $stack11 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack11;
    }
}
