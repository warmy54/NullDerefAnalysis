public class MemberCall extends org.ooc.frontend.model.FunctionCall
{
    protected org.ooc.frontend.model.Expression expression;

    public void <init>(org.ooc.frontend.model.Expression, java.lang.String, java.lang.String, org.ooc.frontend.model.tokens.Token)
    {
        MemberCall this;
        java.lang.String name, suffix;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Expression expression;
        org.ooc.frontend.model.MemberCall $r0;

        this := @this: MemberCall;

        expression := @parameter0: org.ooc.frontend.model.Expression;

        name := @parameter1: java.lang.String;

        suffix := @parameter2: java.lang.String;

        startToken := @parameter3: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.FunctionCall: void <init>(java.lang.String,java.lang.String,org.ooc.frontend.model.tokens.Token)>(name, suffix, startToken);

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $r0.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression> = expression;

        return;
    }

    public void <init>(org.ooc.frontend.model.Expression, org.ooc.frontend.model.FunctionCall, org.ooc.frontend.model.tokens.Token)
    {
        MemberCall this;
        org.ooc.frontend.model.FunctionCall call;
        org.ooc.frontend.model.tokens.Token startToken;
        java.lang.String $stack4, $stack5;
        org.ooc.frontend.model.Expression expression;
        org.ooc.frontend.model.NodeList $stack6, $stack7;
        org.ooc.frontend.model.MemberCall $r0, $r1;

        this := @this: MemberCall;

        expression := @parameter0: org.ooc.frontend.model.Expression;

        call := @parameter1: org.ooc.frontend.model.FunctionCall;

        startToken := @parameter2: org.ooc.frontend.model.tokens.Token;

        $stack5 = call.<org.ooc.frontend.model.FunctionCall: java.lang.String name>;

        $stack4 = call.<org.ooc.frontend.model.FunctionCall: java.lang.String suffix>;

        specialinvoke this.<org.ooc.frontend.model.FunctionCall: void <init>(java.lang.String,java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack5, $stack4, startToken);

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $r0.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression> = expression;

        $r1 = (org.ooc.frontend.model.MemberCall) this;

        $stack6 = $r1.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.NodeList arguments>;

        $stack7 = virtualinvoke call.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        virtualinvoke $stack6.<org.ooc.frontend.model.NodeList: void addAll(org.ooc.frontend.model.NodeList)>($stack7);

        return;
    }

    public org.ooc.frontend.model.Expression getExpression()
    {
        MemberCall this;
        org.ooc.frontend.model.Expression $stack1;
        org.ooc.frontend.model.MemberCall $r0;

        this := @this: MemberCall;

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        return $stack1;
    }

    public void setExpression(org.ooc.frontend.model.Expression)
    {
        MemberCall this;
        org.ooc.frontend.model.Expression expression;
        org.ooc.frontend.model.MemberCall $r0;

        this := @this: MemberCall;

        expression := @parameter0: org.ooc.frontend.model.Expression;

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $r0.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression> = expression;

        return;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        MemberCall this;
        org.ooc.frontend.model.MemberCall $r0;

        this := @this: MemberCall;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.MemberCall)>($r0);

        return;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        MemberCall this;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.Expression $stack2;
        org.ooc.frontend.model.MemberCall $r0;

        this := @this: MemberCall;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $stack2 = $r0.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        virtualinvoke $stack2.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>(visitor);

        specialinvoke this.<org.ooc.frontend.model.FunctionCall: void acceptChildren(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public boolean hasChildren()
    {
        MemberCall this;

        this := @this: MemberCall;

        return 1;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        MemberCall this;
        org.ooc.frontend.model.Node oldie, kiddo;
        boolean $stack3;
        org.ooc.frontend.model.Expression $stack4, $stack5;
        org.ooc.frontend.model.MemberCall $r0, $r1;

        this := @this: MemberCall;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        $stack3 = specialinvoke this.<org.ooc.frontend.model.FunctionCall: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>(oldie, kiddo);

        if $stack3 == 0 goto label1;

        return 1;

     label1:
        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $stack4 = $r0.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        if oldie != $stack4 goto label2;

        $stack5 = (org.ooc.frontend.model.Expression) kiddo;

        $r1 = (org.ooc.frontend.model.MemberCall) this;

        $r1.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression> = $stack5;

        return 1;

     label2:
        return 0;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        MemberCall this;
        boolean $stack10, $stack12, $stack19, $stack20, fatal, $stack39, $stack43, $stack45, $stack47, $stack56, $stack60, $stack64, $stack89, $stack97;
        org.ooc.frontend.model.Expression $stack11, $stack13, $stack38, $stack41, $stack77, $stack84, $stack86, $stack92, $stack100;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.model.Declaration $stack16, $stack17, $stack42, $stack44, $stack88, $stack94, call#8;
        org.ooc.frontend.model.FunctionDecl $stack21, $stack22, $stack23, $stack24, $stack26, $stack46, $stack66, $stack67;
        org.ooc.frontend.model.Type $stack28, $stack59, $stack65, ns#6;
        java.lang.String $stack29, $stack30, $stack49, $stack50, $stack62, $stack63, $stack71, $stack72, $stack75, $stack76, $stack78, $stack82, $stack83, $stack85, $stack99, $stack102, response#18, varDecl#19;
        org.ooc.frontend.model.NodeList stack, $stack95, $stack103, $stack104, $stack105, $stack106, $stack108;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack52, $stack73, $stack80, $stack112, $stack118, response#12, $stack25;
        java.lang.Iterable $stack54;
        java.lang.Object $stack58, $stack115;
        org.ooc.frontend.model.FuncType funcType;
        java.lang.Class $stack70;
        org.ooc.frontend.model.VariableAccess $stack87, $stack93, response#13;
        org.ooc.frontend.model.tokens.Token $stack101;
        int $stack109, imp#5;
        org.ooc.frontend.model.Node $stack110, $r4, $r5, $r11, $r12, $r17, $r22, $r24, $r39, $r45;
        org.ooc.frontend.model.Module $stack116;
        org.ooc.frontend.model.NamespaceDecl ns;
        java.util.Iterator call, response;
        org.ooc.frontend.model.Import imp;
        org.ooc.frontend.model.TypeDecl imp#9;
        org.ooc.frontend.model.VariableDecl varDecl;
        org.ooc.frontend.model.FunctionCall $u0;
        org.ooc.middle.OocCompilationError $u1, $u2, $u3, $u4, $u5;
        org.ooc.frontend.model.MemberCall $r0, $r1, $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r13, $r14, $r15, $r16, $r19, $r20, $r21, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r41, $r42, $r43, $r44, $r47;
        java.lang.Throwable $r18, $r23, $r25, $r40, $r46;

        this := @this: MemberCall;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $stack10 = $r0.<org.ooc.frontend.model.MemberCall: boolean dead>;

        if $stack10 == 0 goto label01;

        $stack118 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack118;

     label01:
        $r1 = (org.ooc.frontend.model.MemberCall) this;

        $stack11 = $r1.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack12 = $stack11 instanceof org.ooc.frontend.model.VariableAccess;

        if $stack12 == 0 goto label06;

        $r2 = (org.ooc.frontend.model.MemberCall) this;

        $stack86 = $r2.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack87 = (org.ooc.frontend.model.VariableAccess) $stack86;

        $stack88 = virtualinvoke $stack87.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.Declaration getRef()>();

        $stack89 = $stack88 instanceof org.ooc.frontend.model.NamespaceDecl;

        if $stack89 == 0 goto label06;

        $r3 = (org.ooc.frontend.model.MemberCall) this;

        $stack92 = $r3.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack93 = (org.ooc.frontend.model.VariableAccess) $stack92;

        $stack94 = virtualinvoke $stack93.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.Declaration getRef()>();

        ns = (org.ooc.frontend.model.NamespaceDecl) $stack94;

        $stack95 = virtualinvoke ns.<org.ooc.frontend.model.NamespaceDecl: org.ooc.frontend.model.NodeList getImports()>();

        call = virtualinvoke $stack95.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label02:
        $stack97 = interfaceinvoke call.<java.util.Iterator: boolean hasNext()>();

        if $stack97 == 0 goto label03;

        $stack115 = interfaceinvoke call.<java.util.Iterator: java.lang.Object next()>();

        imp = (org.ooc.frontend.model.Import) $stack115;

        $stack116 = virtualinvoke imp.<org.ooc.frontend.model.Import: org.ooc.frontend.model.Module getModule()>();

        $r4 = (org.ooc.frontend.model.Node) $stack116;

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void push(org.ooc.frontend.model.Node)>($r4);

        goto label02;

     label03:
        $r5 = (org.ooc.frontend.model.Node) ns;

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void push(org.ooc.frontend.model.Node)>($r5);

        $u0 = new org.ooc.frontend.model.FunctionCall;

        $r6 = (org.ooc.frontend.model.MemberCall) this;

        $stack99 = virtualinvoke $r6.<org.ooc.frontend.model.MemberCall: java.lang.String getName()>();

        $r7 = (org.ooc.frontend.model.MemberCall) this;

        $stack100 = $r7.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack101 = $stack100.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.FunctionCall: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack99, $stack101);

        $r8 = (org.ooc.frontend.model.MemberCall) this;

        $stack102 = $r8.<org.ooc.frontend.model.MemberCall: java.lang.String suffix>;

        virtualinvoke $u0.<org.ooc.frontend.model.FunctionCall: void setSuffix(java.lang.String)>($stack102);

        $stack103 = virtualinvoke $u0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getTypeParams()>();

        $r9 = (org.ooc.frontend.model.MemberCall) this;

        $stack104 = $r9.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.NodeList typeParams>;

        virtualinvoke $stack103.<org.ooc.frontend.model.NodeList: void addAll(org.ooc.frontend.model.NodeList)>($stack104);

        $stack105 = virtualinvoke $u0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        $r10 = (org.ooc.frontend.model.MemberCall) this;

        $stack106 = $r10.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.NodeList arguments>;

        virtualinvoke $stack105.<org.ooc.frontend.model.NodeList: void addAll(org.ooc.frontend.model.NodeList)>($stack106);

        virtualinvoke $u0.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void pop()>();

        imp#5 = 0;

     label04:
        $stack108 = virtualinvoke ns.<org.ooc.frontend.model.NamespaceDecl: org.ooc.frontend.model.NodeList getImports()>();

        $stack109 = virtualinvoke $stack108.<org.ooc.frontend.model.NodeList: int size()>();

        if imp#5 >= $stack109 goto label05;

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void pop()>();

        imp#5 = imp#5 + 1;

        goto label04;

     label05:
        $stack110 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $r11 = (org.ooc.frontend.model.Node) this;

        $r12 = (org.ooc.frontend.model.Node) $u0;

        virtualinvoke $stack110.<org.ooc.frontend.model.Node: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r11, $r12);

        $stack112 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack112;

     label06:
        $r13 = (org.ooc.frontend.model.MemberCall) this;

        $stack13 = $r13.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        ns#6 = virtualinvoke $stack13.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if ns#6 != null goto label08;

        if fatal == 0 goto label07;

        $u1 = new org.ooc.middle.OocCompilationError;

        $r14 = (org.ooc.frontend.model.MemberCall) this;

        $stack82 = $r14.<org.ooc.frontend.model.MemberCall: java.lang.String name>;

        $r15 = (org.ooc.frontend.model.MemberCall) this;

        $stack83 = virtualinvoke $r15.<org.ooc.frontend.model.MemberCall: java.lang.String getArgsRepr()>();

        $r16 = (org.ooc.frontend.model.MemberCall) this;

        $stack84 = $r16.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack85 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,org.ooc.frontend.model.Expression)>($stack82, $stack83, $stack84) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Calling member function \u0001\u0001 in an expression \u0001 which type hasn\'t been resolved yet!");

        $r17 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r17, stack, $stack85);

        $r18 = (java.lang.Throwable) $u1;

        throw $r18;

     label07:
        $stack80 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack80;

     label08:
        ns#6 = virtualinvoke ns#6.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type getFlatType(org.ooc.middle.hobgoblins.Resolver)>(res);

        $stack16 = virtualinvoke ns#6.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        if $stack16 != null goto label09;

        virtualinvoke ns#6.<org.ooc.frontend.model.Type: void resolve(org.ooc.middle.hobgoblins.Resolver)>(res);

     label09:
        $stack17 = virtualinvoke ns#6.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        if $stack17 != null goto label11;

        if fatal == 0 goto label10;

        $u2 = new org.ooc.middle.OocCompilationError;

        $r19 = (org.ooc.frontend.model.MemberCall) this;

        $stack75 = $r19.<org.ooc.frontend.model.MemberCall: java.lang.String name>;

        $r20 = (org.ooc.frontend.model.MemberCall) this;

        $stack76 = virtualinvoke $r20.<org.ooc.frontend.model.MemberCall: java.lang.String getArgsRepr()>();

        $r21 = (org.ooc.frontend.model.MemberCall) this;

        $stack77 = $r21.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack78 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,org.ooc.frontend.model.Expression,org.ooc.frontend.model.Type)>($stack75, $stack76, $stack77, ns#6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Calling member function \u0001\u0001 in an expression \u0001 which type hasn\'t been ref\'d yet. Its type = \u0001");

        $r22 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u2.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r22, stack, $stack78);

        $r23 = (java.lang.Throwable) $u2;

        throw $r23;

     label10:
        $stack73 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack73;

     label11:
        call#8 = virtualinvoke ns#6.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack19 = call#8 instanceof org.ooc.frontend.model.TypeDecl;

        if $stack19 != 0 goto label12;

        $u3 = new org.ooc.middle.OocCompilationError;

        $stack70 = virtualinvoke call#8.<java.lang.Object: java.lang.Class getClass()>();

        $stack71 = virtualinvoke $stack70.<java.lang.Class: java.lang.String getSimpleName()>();

        $stack72 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack71) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to call a member function of not a TypeDecl, but a \u0001");

        $r24 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u3.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r24, stack, $stack72);

        $r25 = (java.lang.Throwable) $u3;

        throw $r25;

     label12:
        imp#9 = (org.ooc.frontend.model.TypeDecl) call#8;

        $r26 = (org.ooc.frontend.model.MemberCall) this;

        $stack20 = virtualinvoke $r26.<org.ooc.frontend.model.MemberCall: boolean isSuperCall()>();

        if $stack20 != 0 goto label13;

        $stack67 = virtualinvoke imp#9.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.FunctionDecl getFunction(org.ooc.frontend.model.FunctionCall)>(this);

        $r27 = (org.ooc.frontend.model.MemberCall) this;

        $r27.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl impl> = $stack67;

     label13:
        $r28 = (org.ooc.frontend.model.MemberCall) this;

        $stack21 = $r28.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack21 != null goto label16;

        $stack54 = virtualinvoke imp#9.<org.ooc.frontend.model.TypeDecl: java.lang.Iterable getVariables()>();

        response = interfaceinvoke $stack54.<java.lang.Iterable: java.util.Iterator iterator()>();

     label14:
        $stack56 = interfaceinvoke response.<java.util.Iterator: boolean hasNext()>();

        if $stack56 == 0 goto label16;

        $stack58 = interfaceinvoke response.<java.util.Iterator: java.lang.Object next()>();

        varDecl = (org.ooc.frontend.model.VariableDecl) $stack58;

        $stack59 = virtualinvoke varDecl.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        $stack60 = $stack59 instanceof org.ooc.frontend.model.FuncType;

        if $stack60 == 0 goto label15;

        $stack62 = virtualinvoke varDecl.<org.ooc.frontend.model.VariableDecl: java.lang.String getName()>();

        $r29 = (org.ooc.frontend.model.MemberCall) this;

        $stack63 = $r29.<org.ooc.frontend.model.MemberCall: java.lang.String name>;

        $stack64 = virtualinvoke $stack62.<java.lang.String: boolean equals(java.lang.Object)>($stack63);

        if $stack64 == 0 goto label15;

        $stack65 = virtualinvoke varDecl.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        funcType = (org.ooc.frontend.model.FuncType) $stack65;

        $stack66 = virtualinvoke funcType.<org.ooc.frontend.model.FuncType: org.ooc.frontend.model.FunctionDecl getDecl()>();

        $r30 = (org.ooc.frontend.model.MemberCall) this;

        $r30.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl impl> = $stack66;

     label15:
        goto label14;

     label16:
        $r31 = (org.ooc.frontend.model.MemberCall) this;

        $stack22 = $r31.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack22 == null goto label18;

        $r32 = (org.ooc.frontend.model.MemberCall) this;

        response#12 = virtualinvoke $r32.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.interfaces.MustBeResolved$Response handleGenerics(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        $stack52 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        if response#12 == $stack52 goto label17;

        return response#12;

     label17:
        $r33 = (org.ooc.frontend.model.MemberCall) this;

        virtualinvoke $r33.<org.ooc.frontend.model.MemberCall: void autocast(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver)>(stack, res);

     label18:
        $r34 = (org.ooc.frontend.model.MemberCall) this;

        $stack23 = $r34.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack23 == null goto label19;

        $r35 = (org.ooc.frontend.model.MemberCall) this;

        $stack38 = $r35.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack39 = $stack38 instanceof org.ooc.frontend.model.VariableAccess;

        if $stack39 == 0 goto label19;

        $r36 = (org.ooc.frontend.model.MemberCall) this;

        $stack41 = $r36.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        response#13 = (org.ooc.frontend.model.VariableAccess) $stack41;

        $stack42 = virtualinvoke response#13.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.Declaration getRef()>();

        $stack43 = $stack42 instanceof org.ooc.frontend.model.TypeDecl;

        if $stack43 == 0 goto label19;

        $stack44 = virtualinvoke response#13.<org.ooc.frontend.model.VariableAccess: org.ooc.frontend.model.Declaration getRef()>();

        $stack45 = $stack44 instanceof org.ooc.frontend.model.TypeParam;

        if $stack45 != 0 goto label19;

        $r37 = (org.ooc.frontend.model.MemberCall) this;

        $stack46 = $r37.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl impl>;

        $stack47 = virtualinvoke $stack46.<org.ooc.frontend.model.FunctionDecl: boolean isStatic()>();

        if $stack47 != 0 goto label19;

        $u4 = new org.ooc.middle.OocCompilationError;

        $r38 = (org.ooc.frontend.model.MemberCall) this;

        $stack49 = virtualinvoke $r38.<org.ooc.frontend.model.MemberCall: java.lang.String getProtoRepr()>();

        $stack50 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack49) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to call member member functions \u0001 as if it were static. But it\'s not.");

        $r39 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u4.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r39, stack, $stack50);

        $r40 = (java.lang.Throwable) $u4;

        throw $r40;

     label19:
        if fatal == 0 goto label21;

        $r41 = (org.ooc.frontend.model.MemberCall) this;

        $stack26 = $r41.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack26 != null goto label21;

        $stack28 = virtualinvoke imp#9.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getInstanceType()>();

        $r42 = (org.ooc.frontend.model.MemberCall) this;

        $stack29 = $r42.<org.ooc.frontend.model.MemberCall: java.lang.String name>;

        $r43 = (org.ooc.frontend.model.MemberCall) this;

        $stack30 = virtualinvoke $r43.<org.ooc.frontend.model.MemberCall: java.lang.String getArgsRepr()>();

        response#18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type,java.lang.String,java.lang.String)>($stack28, $stack29, $stack30) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No such function \u0001.\u0001\u0001");

        $r44 = (org.ooc.frontend.model.MemberCall) this;

        varDecl#19 = virtualinvoke $r44.<org.ooc.frontend.model.MemberCall: java.lang.String guessCorrectName(org.ooc.frontend.model.TypeDecl)>(imp#9);

        if varDecl#19 == null goto label20;

        response#18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(response#18, varDecl#19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 Did you mean \u0001 ?");

     label20:
        $u5 = new org.ooc.middle.OocCompilationError;

        $r45 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u5.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r45, stack, response#18);

        $r46 = (java.lang.Throwable) $u5;

        throw $r46;

     label21:
        $r47 = (org.ooc.frontend.model.MemberCall) this;

        $stack24 = $r47.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.FunctionDecl impl>;

        if $stack24 != null goto label22;

        $stack25 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        goto label23;

     label22:
        $stack25 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

     label23:
        return $stack25;
    }

    protected java.lang.String guessCorrectName(org.ooc.frontend.model.TypeDecl)
    {
        org.ooc.frontend.model.TypeDecl typeDeclaration;
        java.util.Iterator l5;
        boolean $stack10;
        java.lang.Object $stack11;
        org.ooc.frontend.model.FunctionDecl decl;
        MemberCall this;
        java.lang.String $stack12, $stack13, bestMatch;
        int distance, bestDistance;
        org.ooc.frontend.model.NodeList $u0;
        org.ooc.frontend.model.MemberCall $r0;

        this := @this: MemberCall;

        typeDeclaration := @parameter0: org.ooc.frontend.model.TypeDecl;

        bestDistance = 2147483647;

        bestMatch = null;

        $u0 = new org.ooc.frontend.model.NodeList;

        specialinvoke $u0.<org.ooc.frontend.model.NodeList: void <init>()>();

        virtualinvoke typeDeclaration.<org.ooc.frontend.model.TypeDecl: void getFunctionsRecursive(org.ooc.frontend.model.NodeList)>($u0);

        l5 = virtualinvoke $u0.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label3;

        $stack11 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        decl = (org.ooc.frontend.model.FunctionDecl) $stack11;

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $stack12 = $r0.<org.ooc.frontend.model.MemberCall: java.lang.String name>;

        $stack13 = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getName()>();

        distance = staticinvoke <org.ooc.frontend.Levenshtein: int distance(java.lang.String,java.lang.String)>($stack12, $stack13);

        if distance >= bestDistance goto label2;

        bestDistance = distance;

        bestMatch = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: java.lang.String getProtoRepr(boolean)>(1);

     label2:
        goto label1;

     label3:
        if bestDistance <= 3 goto label4;

        return null;

     label4:
        return bestMatch;
    }

    public java.lang.String toString()
    {
        MemberCall this;
        org.ooc.frontend.model.Expression $stack1;
        java.lang.String $stack2, $stack3;
        org.ooc.frontend.model.MemberCall $r0, $r1;

        this := @this: MemberCall;

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $stack1 = $r0.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $r1 = (org.ooc.frontend.model.MemberCall) this;

        $stack2 = virtualinvoke $r1.<org.ooc.frontend.model.MemberCall: java.lang.String getProtoRepr()>();

        $stack3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Expression,java.lang.String)>($stack1, $stack2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("(\u0001)->\u0001");

        return $stack3;
    }

    protected org.ooc.frontend.model.Expression getRealExpr(java.lang.String, org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        MemberCall this;
        org.ooc.frontend.model.Expression $stack7, result;
        java.lang.String needle;
        org.ooc.frontend.model.NodeList stack;
        org.ooc.middle.hobgoblins.Resolver res;
        boolean fatal;
        org.ooc.frontend.model.Declaration $stack11;
        org.ooc.frontend.model.TypeDecl $stack12;
        org.ooc.frontend.model.Type type;
        org.ooc.frontend.model.MemberCall $r0, $r1;

        this := @this: MemberCall;

        needle := @parameter0: java.lang.String;

        stack := @parameter1: org.ooc.frontend.model.NodeList;

        res := @parameter2: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter3: boolean;

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $stack7 = $r0.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        type = virtualinvoke $stack7.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        result = specialinvoke this.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.Expression getRealExpr(java.lang.String,org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(needle, stack, res, fatal);

        if result == null goto label1;

        return result;

     label1:
        if type == null goto label3;

        $r1 = (org.ooc.frontend.model.MemberCall) this;

        result = virtualinvoke $r1.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression getRealExpr(java.lang.String,org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean,org.ooc.frontend.model.Type)>(needle, stack, res, fatal, type);

        if result == null goto label2;

        return result;

     label2:
        $stack11 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack12 = (org.ooc.frontend.model.TypeDecl) $stack11;

        type = virtualinvoke $stack12.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getSuperType()>();

        goto label1;

     label3:
        return null;
    }

    protected org.ooc.frontend.model.Expression getRealExpr(java.lang.String, org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean, org.ooc.frontend.model.Type)
    {
        org.ooc.frontend.model.Type type, $stack31;
        org.ooc.frontend.model.NodeList $stack13, $stack27, $stack29, stack;
        boolean $stack14, $stack17, $stack19, $stack22, $stack25, fatal;
        org.ooc.frontend.model.Declaration ref;
        org.ooc.frontend.model.TypeDecl typeDecl;
        java.util.LinkedHashMap typeParams;
        java.util.Collection $stack20;
        java.util.Iterator l10;
        java.lang.Object $stack23;
        org.ooc.frontend.model.TypeParam candidate;
        java.lang.String $stack24, needle, $stack33;
        int $stack28, i;
        org.ooc.frontend.model.Node $stack30, $r0;
        org.ooc.frontend.model.Access result;
        MemberCall this;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.middle.OocCompilationError $u0;
        java.lang.Throwable $r1;
        org.ooc.frontend.model.Expression $r2;

        this := @this: MemberCall;

        needle := @parameter0: java.lang.String;

        stack := @parameter1: org.ooc.frontend.model.NodeList;

        res := @parameter2: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter3: boolean;

        type := @parameter4: org.ooc.frontend.model.Type;

        if type == null goto label4;

        $stack13 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack14 = virtualinvoke $stack13.<org.ooc.frontend.model.NodeList: boolean isEmpty()>();

        if $stack14 != 0 goto label4;

        ref = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack17 = ref instanceof org.ooc.frontend.model.TypeDecl;

        if $stack17 == 0 goto label4;

        typeDecl = (org.ooc.frontend.model.TypeDecl) ref;

        typeParams = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack19 = virtualinvoke typeParams.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $stack19 != 0 goto label4;

        i = -1;

        $stack20 = virtualinvoke typeParams.<java.util.LinkedHashMap: java.util.Collection values()>();

        l10 = interfaceinvoke $stack20.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack22 = interfaceinvoke l10.<java.util.Iterator: boolean hasNext()>();

        if $stack22 == 0 goto label4;

        $stack23 = interfaceinvoke l10.<java.util.Iterator: java.lang.Object next()>();

        candidate = (org.ooc.frontend.model.TypeParam) $stack23;

        i = i + 1;

        $stack24 = virtualinvoke candidate.<org.ooc.frontend.model.TypeParam: java.lang.String getName()>();

        $stack25 = virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(needle);

        if $stack25 == 0 goto label3;

        $stack27 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack28 = virtualinvoke $stack27.<org.ooc.frontend.model.NodeList: int size()>();

        if i < $stack28 goto label2;

        $u0 = new org.ooc.middle.OocCompilationError;

        $stack33 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type,org.ooc.frontend.model.Declaration)>(type, ref) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Missing type parameters for type \u0001, must match \u0001");

        $r0 = (org.ooc.frontend.model.Node) type;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r0, stack, $stack33);

        $r1 = (java.lang.Throwable) $u0;

        throw $r1;

     label2:
        $stack29 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack30 = virtualinvoke $stack29.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(i);

        result = (org.ooc.frontend.model.Access) $stack30;

        if result == null goto label3;

        $stack31 = virtualinvoke result.<org.ooc.frontend.model.Access: org.ooc.frontend.model.Type getType()>();

        if $stack31 == null goto label3;

        $r2 = (org.ooc.frontend.model.Expression) result;

        return $r2;

     label3:
        goto label1;

     label4:
        return null;
    }

    public void throwUnresolvedType(org.ooc.frontend.model.NodeList, java.lang.String, org.ooc.middle.hobgoblins.Resolver)
    {
        MemberCall this;
        org.ooc.frontend.model.Expression $stack4, $stack11, $stack15;
        org.ooc.frontend.model.Type $stack5, $stack7, $stack12, $stack16;
        org.ooc.frontend.model.Declaration $stack6;
        org.ooc.frontend.model.NodeList $stack8, stack;
        boolean $stack9;
        java.lang.String typeName, $stack13, $stack14, $stack17, $stack18;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.middle.OocCompilationError $u0;
        org.ooc.frontend.model.MemberCall $r0, $r1, $r2, $r3;
        org.ooc.frontend.model.Node $r4;
        java.lang.Throwable $r5;

        this := @this: MemberCall;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        typeName := @parameter1: java.lang.String;

        res := @parameter2: org.ooc.middle.hobgoblins.Resolver;

        $r0 = (org.ooc.frontend.model.MemberCall) this;

        $stack4 = $r0.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack5 = virtualinvoke $stack4.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack6 = virtualinvoke $stack5.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack7 = virtualinvoke $stack6.<org.ooc.frontend.model.Declaration: org.ooc.frontend.model.Type getType()>();

        $stack8 = virtualinvoke $stack7.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack9 = virtualinvoke $stack8.<org.ooc.frontend.model.NodeList: boolean isEmpty()>();

        if $stack9 != 0 goto label1;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r1 = (org.ooc.frontend.model.MemberCall) this;

        $stack11 = $r1.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack12 = virtualinvoke $stack11.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack13 = virtualinvoke $stack12.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $r2 = (org.ooc.frontend.model.MemberCall) this;

        $stack14 = virtualinvoke $r2.<org.ooc.frontend.model.MemberCall: java.lang.String getProtoRepr()>();

        $r3 = (org.ooc.frontend.model.MemberCall) this;

        $stack15 = $r3.<org.ooc.frontend.model.MemberCall: org.ooc.frontend.model.Expression expression>;

        $stack16 = virtualinvoke $stack15.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack17 = virtualinvoke $stack16.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($stack13, $stack14, $stack17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("You should specify type parameters of \u0001 for calling \u0001. E.g. you could write \u0001<Int>");

        $r4 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r4, stack, $stack18);

        $r5 = (java.lang.Throwable) $u0;

        throw $r5;

     label1:
        specialinvoke this.<org.ooc.frontend.model.FunctionCall: void throwUnresolvedType(org.ooc.frontend.model.NodeList,java.lang.String,org.ooc.middle.hobgoblins.Resolver)>(stack, typeName, res);

        return;
    }
}
