public interface  MetadataResolutionRequest extends java.lang.Object implements org.apache.maven.artifact.repository.RepositoryRequest
{

    public abstract boolean isOffline();

    public abstract org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setOffline(boolean);

    public abstract org.apache.maven.artifact.Artifact getArtifact();

    public abstract org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setArtifact(org.apache.maven.artifact.Artifact);

    public abstract org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository();

    public abstract org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository);

    public abstract java.util.List getRemoteRepositories();

    public abstract org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setRemoteRepositories(java.util.List);

    public abstract boolean isResolveManagedVersions();

    public abstract org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setResolveManagedVersions(boolean);

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setRemoteRepositories(java.util.List)
    {
        MetadataResolutionRequest this;
        java.util.List l1;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: MetadataResolutionRequest;

        l1 := @parameter0: java.util.List;

        $r0 = (org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) this;

        $stack2 = interfaceinvoke $r0.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setRemoteRepositories(java.util.List)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)
    {
        MetadataResolutionRequest this;
        org.apache.maven.artifact.repository.ArtifactRepository l1;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: MetadataResolutionRequest;

        l1 := @parameter0: org.apache.maven.artifact.repository.ArtifactRepository;

        $r0 = (org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) this;

        $stack2 = interfaceinvoke $r0.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }

    public volatile org.apache.maven.artifact.repository.RepositoryRequest setOffline(boolean)
    {
        MetadataResolutionRequest this;
        boolean l1;
        org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest $stack2, $r0;
        org.apache.maven.artifact.repository.RepositoryRequest $r1;

        this := @this: MetadataResolutionRequest;

        l1 := @parameter0: boolean;

        $r0 = (org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest) this;

        $stack2 = interfaceinvoke $r0.<org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest: org.apache.maven.repository.legacy.metadata.MetadataResolutionRequest setOffline(boolean)>(l1);

        $r1 = (org.apache.maven.artifact.repository.RepositoryRequest) $stack2;

        return $r1;
    }
}
