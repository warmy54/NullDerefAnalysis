public class MetadataResolutionResult extends java.lang.Object
{
    org.apache.maven.repository.metadata.MetadataTreeNode treeRoot;
    org.apache.maven.repository.metadata.ClasspathTransformation classpathTransformation;
    org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver;

    public void <init>()
    {
        MetadataResolutionResult this;

        this := @this: MetadataResolutionResult;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.apache.maven.repository.metadata.MetadataTreeNode)
    {
        MetadataResolutionResult this;
        org.apache.maven.repository.metadata.MetadataTreeNode root;
        org.apache.maven.repository.metadata.MetadataResolutionResult $r0;

        this := @this: MetadataResolutionResult;

        root := @parameter0: org.apache.maven.repository.metadata.MetadataTreeNode;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $r0.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataTreeNode treeRoot> = root;

        return;
    }

    public org.apache.maven.repository.metadata.MetadataTreeNode getTree()
    {
        MetadataResolutionResult this;
        org.apache.maven.repository.metadata.MetadataTreeNode $stack1;
        org.apache.maven.repository.metadata.MetadataResolutionResult $r0;

        this := @this: MetadataResolutionResult;

        $r0 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack1 = $r0.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataTreeNode treeRoot>;

        return $stack1;
    }

    public void setTree(org.apache.maven.repository.metadata.MetadataTreeNode)
    {
        MetadataResolutionResult this;
        org.apache.maven.repository.metadata.MetadataTreeNode root;
        org.apache.maven.repository.metadata.MetadataResolutionResult $r0;

        this := @this: MetadataResolutionResult;

        root := @parameter0: org.apache.maven.repository.metadata.MetadataTreeNode;

        $r0 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $r0.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataTreeNode treeRoot> = root;

        return;
    }

    public void initTreeProcessing(org.codehaus.plexus.PlexusContainer) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException
    {
        MetadataResolutionResult this;
        org.codehaus.plexus.PlexusContainer plexus;
        java.lang.Object $stack2, $stack4;
        org.apache.maven.repository.metadata.ClasspathTransformation $stack3;
        org.apache.maven.repository.metadata.GraphConflictResolver $stack5;
        org.apache.maven.repository.metadata.MetadataResolutionResult $r0, $r1;

        this := @this: MetadataResolutionResult;

        plexus := @parameter0: org.codehaus.plexus.PlexusContainer;

        $stack2 = interfaceinvoke plexus.<org.codehaus.plexus.PlexusContainer: java.lang.Object lookup(java.lang.Class)>(class "Lorg/apache/maven/repository/metadata/ClasspathTransformation;");

        $stack3 = (org.apache.maven.repository.metadata.ClasspathTransformation) $stack2;

        $r0 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $r0.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.ClasspathTransformation classpathTransformation> = $stack3;

        $stack4 = interfaceinvoke plexus.<org.codehaus.plexus.PlexusContainer: java.lang.Object lookup(java.lang.Class)>(class "Lorg/apache/maven/repository/metadata/GraphConflictResolver;");

        $stack5 = (org.apache.maven.repository.metadata.GraphConflictResolver) $stack4;

        $r1 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $r1.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver> = $stack5;

        return;
    }

    public org.apache.maven.repository.metadata.MetadataGraph getGraph() throws org.apache.maven.repository.metadata.MetadataResolutionException
    {
        MetadataResolutionResult this;
        org.apache.maven.repository.metadata.MetadataTreeNode $stack1, $stack3;
        org.apache.maven.repository.metadata.MetadataGraph $stack2, $u0;
        org.apache.maven.repository.metadata.MetadataResolutionResult $r0, $r1;

        this := @this: MetadataResolutionResult;

        $r0 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack1 = $r0.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataTreeNode treeRoot>;

        if $stack1 != null goto label1;

        $stack2 = null;

        goto label2;

     label1:
        $u0 = new org.apache.maven.repository.metadata.MetadataGraph;

        $stack2 = $u0;

        $r1 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack3 = $r1.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataTreeNode treeRoot>;

        specialinvoke $u0.<org.apache.maven.repository.metadata.MetadataGraph: void <init>(org.apache.maven.repository.metadata.MetadataTreeNode)>($stack3);

     label2:
        return $stack2;
    }

    public org.apache.maven.repository.metadata.MetadataGraph getGraph(org.apache.maven.artifact.ArtifactScopeEnum) throws org.apache.maven.repository.metadata.MetadataResolutionException, org.apache.maven.repository.metadata.GraphConflictResolutionException
    {
        MetadataResolutionResult this;
        org.apache.maven.repository.metadata.MetadataTreeNode $stack2;
        org.apache.maven.repository.metadata.GraphConflictResolver $stack3, $stack4;
        org.apache.maven.repository.metadata.MetadataGraph $stack5, $stack6;
        org.apache.maven.artifact.ArtifactScopeEnum scope;
        org.apache.maven.repository.metadata.MetadataResolutionResult $r0, $r1, $r2, $r3;

        this := @this: MetadataResolutionResult;

        scope := @parameter0: org.apache.maven.artifact.ArtifactScopeEnum;

        $r0 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack2 = $r0.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataTreeNode treeRoot>;

        if $stack2 != null goto label1;

        return null;

     label1:
        $r1 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack3 = $r1.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver>;

        if $stack3 != null goto label2;

        return null;

     label2:
        $r2 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack4 = $r2.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver>;

        $r3 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack5 = virtualinvoke $r3.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataGraph getGraph()>();

        $stack6 = interfaceinvoke $stack4.<org.apache.maven.repository.metadata.GraphConflictResolver: org.apache.maven.repository.metadata.MetadataGraph resolveConflicts(org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.artifact.ArtifactScopeEnum)>($stack5, scope);

        return $stack6;
    }

    public org.apache.maven.repository.metadata.MetadataGraph getGraph(org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum) throws org.apache.maven.repository.metadata.MetadataResolutionException, org.apache.maven.repository.metadata.GraphConflictResolutionException
    {
        org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum requestType, $stack4, $stack6, $stack8, $stack10, $stack12, $stack14;
        MetadataResolutionResult this;
        org.apache.maven.repository.metadata.MetadataTreeNode $stack2, $stack17, $stack19;
        org.apache.maven.repository.metadata.GraphConflictResolver $stack3, $stack21, $stack25, $stack29;
        boolean $stack5, $stack7, $stack9, $stack11, $stack13, $stack15;
        org.apache.maven.repository.metadata.MetadataGraph $stack20, $stack22, $stack24, $stack26, $stack28, $stack30, $stack32, $u0, $u1;
        org.apache.maven.artifact.ArtifactScopeEnum $stack23, $stack27, $stack31;
        org.apache.maven.repository.metadata.MetadataResolutionResult $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MetadataResolutionResult;

        requestType := @parameter0: org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum;

        if requestType != null goto label1;

        return null;

     label1:
        $r0 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack2 = $r0.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataTreeNode treeRoot>;

        if $stack2 != null goto label2;

        return null;

     label2:
        $r1 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack3 = $r1.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver>;

        if $stack3 != null goto label3;

        return null;

     label3:
        $stack4 = <org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum classpathCompile>;

        $stack5 = virtualinvoke requestType.<org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: boolean equals(java.lang.Object)>($stack4);

        if $stack5 == 0 goto label4;

        $r2 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack29 = $r2.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver>;

        $r3 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack30 = virtualinvoke $r3.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataGraph getGraph()>();

        $stack31 = <org.apache.maven.artifact.ArtifactScopeEnum: org.apache.maven.artifact.ArtifactScopeEnum compile>;

        $stack32 = interfaceinvoke $stack29.<org.apache.maven.repository.metadata.GraphConflictResolver: org.apache.maven.repository.metadata.MetadataGraph resolveConflicts(org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.artifact.ArtifactScopeEnum)>($stack30, $stack31);

        return $stack32;

     label4:
        $stack6 = <org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum classpathRuntime>;

        $stack7 = virtualinvoke requestType.<org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: boolean equals(java.lang.Object)>($stack6);

        if $stack7 == 0 goto label5;

        $r4 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack25 = $r4.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver>;

        $r5 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack26 = virtualinvoke $r5.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataGraph getGraph()>();

        $stack27 = <org.apache.maven.artifact.ArtifactScopeEnum: org.apache.maven.artifact.ArtifactScopeEnum runtime>;

        $stack28 = interfaceinvoke $stack25.<org.apache.maven.repository.metadata.GraphConflictResolver: org.apache.maven.repository.metadata.MetadataGraph resolveConflicts(org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.artifact.ArtifactScopeEnum)>($stack26, $stack27);

        return $stack28;

     label5:
        $stack8 = <org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum classpathTest>;

        $stack9 = virtualinvoke requestType.<org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: boolean equals(java.lang.Object)>($stack8);

        if $stack9 == 0 goto label6;

        $r6 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack21 = $r6.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.GraphConflictResolver conflictResolver>;

        $r7 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack22 = virtualinvoke $r7.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataGraph getGraph()>();

        $stack23 = <org.apache.maven.artifact.ArtifactScopeEnum: org.apache.maven.artifact.ArtifactScopeEnum test>;

        $stack24 = interfaceinvoke $stack21.<org.apache.maven.repository.metadata.GraphConflictResolver: org.apache.maven.repository.metadata.MetadataGraph resolveConflicts(org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.artifact.ArtifactScopeEnum)>($stack22, $stack23);

        return $stack24;

     label6:
        $stack10 = <org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum graph>;

        $stack11 = virtualinvoke requestType.<org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: boolean equals(java.lang.Object)>($stack10);

        if $stack11 == 0 goto label7;

        $r8 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack20 = virtualinvoke $r8.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataGraph getGraph()>();

        return $stack20;

     label7:
        $stack12 = <org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum versionedGraph>;

        $stack13 = virtualinvoke requestType.<org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: boolean equals(java.lang.Object)>($stack12);

        if $stack13 == 0 goto label8;

        $u0 = new org.apache.maven.repository.metadata.MetadataGraph;

        $r9 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack19 = virtualinvoke $r9.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataTreeNode getTree()>();

        specialinvoke $u0.<org.apache.maven.repository.metadata.MetadataGraph: void <init>(org.apache.maven.repository.metadata.MetadataTreeNode,boolean,boolean)>($stack19, 1, 0);

        return $u0;

     label8:
        $stack14 = <org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum scopedGraph>;

        $stack15 = virtualinvoke requestType.<org.apache.maven.repository.metadata.MetadataResolutionRequestTypeEnum: boolean equals(java.lang.Object)>($stack14);

        if $stack15 == 0 goto label9;

        $u1 = new org.apache.maven.repository.metadata.MetadataGraph;

        $r10 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack17 = virtualinvoke $r10.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataTreeNode getTree()>();

        specialinvoke $u1.<org.apache.maven.repository.metadata.MetadataGraph: void <init>(org.apache.maven.repository.metadata.MetadataTreeNode,boolean,boolean)>($stack17, 1, 1);

        return $u1;

     label9:
        return null;
    }

    public org.apache.maven.repository.metadata.ClasspathContainer getClasspath(org.apache.maven.artifact.ArtifactScopeEnum) throws org.apache.maven.repository.metadata.MetadataGraphTransformationException, org.apache.maven.repository.metadata.MetadataResolutionException
    {
        MetadataResolutionResult this;
        org.apache.maven.repository.metadata.ClasspathTransformation $stack3, $stack5;
        org.apache.maven.repository.metadata.MetadataGraph dirtyGraph;
        org.apache.maven.artifact.ArtifactScopeEnum scope;
        org.apache.maven.repository.metadata.ClasspathContainer $stack6;
        org.apache.maven.repository.metadata.MetadataResolutionResult $r0, $r1, $r2;

        this := @this: MetadataResolutionResult;

        scope := @parameter0: org.apache.maven.artifact.ArtifactScopeEnum;

        $r0 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack3 = $r0.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.ClasspathTransformation classpathTransformation>;

        if $stack3 != null goto label1;

        return null;

     label1:
        $r1 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        dirtyGraph = virtualinvoke $r1.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.MetadataGraph getGraph()>();

        if dirtyGraph != null goto label2;

        return null;

     label2:
        $r2 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        $stack5 = $r2.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.ClasspathTransformation classpathTransformation>;

        $stack6 = interfaceinvoke $stack5.<org.apache.maven.repository.metadata.ClasspathTransformation: org.apache.maven.repository.metadata.ClasspathContainer transform(org.apache.maven.repository.metadata.MetadataGraph,org.apache.maven.artifact.ArtifactScopeEnum,boolean)>(dirtyGraph, scope, 0);

        return $stack6;
    }

    public org.apache.maven.repository.metadata.MetadataTreeNode getClasspathTree(org.apache.maven.artifact.ArtifactScopeEnum) throws org.apache.maven.repository.metadata.MetadataGraphTransformationException, org.apache.maven.repository.metadata.MetadataResolutionException
    {
        MetadataResolutionResult this;
        org.apache.maven.artifact.ArtifactScopeEnum scope;
        org.apache.maven.repository.metadata.ClasspathContainer cpc;
        org.apache.maven.repository.metadata.MetadataTreeNode $stack4;
        org.apache.maven.repository.metadata.MetadataResolutionResult $r0;

        this := @this: MetadataResolutionResult;

        scope := @parameter0: org.apache.maven.artifact.ArtifactScopeEnum;

        $r0 = (org.apache.maven.repository.metadata.MetadataResolutionResult) this;

        cpc = virtualinvoke $r0.<org.apache.maven.repository.metadata.MetadataResolutionResult: org.apache.maven.repository.metadata.ClasspathContainer getClasspath(org.apache.maven.artifact.ArtifactScopeEnum)>(scope);

        if cpc != null goto label1;

        return null;

     label1:
        $stack4 = virtualinvoke cpc.<org.apache.maven.repository.metadata.ClasspathContainer: org.apache.maven.repository.metadata.MetadataTreeNode getClasspathAsTree()>();

        return $stack4;
    }
}
