public class ModelBase extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable, org.apache.maven.model.InputLocationTracker
{
    private java.util.List modules;
    private org.apache.maven.model.DistributionManagement distributionManagement;
    private java.util.Properties properties;
    private org.apache.maven.model.DependencyManagement dependencyManagement;
    private java.util.List dependencies;
    private java.util.List repositories;
    private java.util.List pluginRepositories;
    private java.lang.Object reports;
    private org.apache.maven.model.Reporting reporting;
    private java.util.Map locations;
    private org.apache.maven.model.InputLocation location;
    private org.apache.maven.model.InputLocation modulesLocation;
    private org.apache.maven.model.InputLocation distributionManagementLocation;
    private org.apache.maven.model.InputLocation propertiesLocation;
    private org.apache.maven.model.InputLocation dependencyManagementLocation;
    private org.apache.maven.model.InputLocation dependenciesLocation;
    private org.apache.maven.model.InputLocation repositoriesLocation;
    private org.apache.maven.model.InputLocation pluginRepositoriesLocation;
    private org.apache.maven.model.InputLocation reportsLocation;
    private org.apache.maven.model.InputLocation reportingLocation;

    public void <init>()
    {
        ModelBase this;

        this := @this: ModelBase;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void addDependency(org.apache.maven.model.Dependency)
    {
        ModelBase this;
        java.util.List $stack2;
        org.apache.maven.model.Dependency dependency;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        dependency := @parameter0: org.apache.maven.model.Dependency;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(dependency);

        return;
    }

    public void addModule(java.lang.String)
    {
        ModelBase this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(string);

        return;
    }

    public void addPluginRepository(org.apache.maven.model.Repository)
    {
        ModelBase this;
        java.util.List $stack2;
        org.apache.maven.model.Repository repository;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        repository := @parameter0: org.apache.maven.model.Repository;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(repository);

        return;
    }

    public void addProperty(java.lang.String, java.lang.String)
    {
        ModelBase this;
        java.util.Properties $stack3;
        java.lang.String key, value;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        key := @parameter0: java.lang.String;

        value := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        virtualinvoke $stack3.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, value);

        return;
    }

    public void addRepository(org.apache.maven.model.Repository)
    {
        ModelBase this;
        java.util.List $stack2;
        org.apache.maven.model.Repository repository;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        repository := @parameter0: org.apache.maven.model.Repository;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(repository);

        return;
    }

    public org.apache.maven.model.ModelBase clone()
    {
        ModelBase this;
        java.lang.Object $stack4, $stack12, $stack22, $stack30, $stack40, $stack50, $stack59;
        java.util.List $stack5, $stack9, $stack10, $stack11, $stack26, $stack31, $stack36, $stack41, $stack46, $stack51, $stack66, $stack67;
        org.apache.maven.model.DistributionManagement $stack6, $stack62, $stack63;
        java.util.Properties $stack7, $stack58, $stack60;
        org.apache.maven.model.DependencyManagement $stack8, $stack55, $stack56;
        org.apache.maven.model.Reporting $stack13, $stack18, $stack19;
        java.util.Map $stack14, $stack16;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack23, $u4;
        boolean $stack28, $stack38, $stack48;
        org.apache.maven.model.Repository $stack32, $stack42, item#5;
        org.apache.maven.model.Dependency $stack52, item;
        java.lang.Exception $stack70;
        java.lang.Class $stack73;
        java.lang.String $stack74, $stack77;
        java.lang.StringBuilder $stack75, $stack76, $u6;
        java.lang.Throwable $stack78;
        java.lang.RuntimeException $stack79;
        org.apache.maven.model.ModelBase copy, $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.util.Iterator l2;
        java.util.ArrayList $u0, $u1, $u2, $u3;
        java.util.LinkedHashMap $u5;
        java.lang.UnsupportedOperationException $u7;

        this := @this: ModelBase;

     label01:
        $stack4 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        copy = (org.apache.maven.model.ModelBase) $stack4;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack5 = $r0.<org.apache.maven.model.ModelBase: java.util.List modules>;

        if $stack5 == null goto label02;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.model.ModelBase: java.util.List modules> = $u0;

        $stack67 = copy.<org.apache.maven.model.ModelBase: java.util.List modules>;

        $r1 = (org.apache.maven.model.ModelBase) this;

        $stack66 = $r1.<org.apache.maven.model.ModelBase: java.util.List modules>;

        interfaceinvoke $stack67.<java.util.List: boolean addAll(java.util.Collection)>($stack66);

     label02:
        $r2 = (org.apache.maven.model.ModelBase) this;

        $stack6 = $r2.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement distributionManagement>;

        if $stack6 == null goto label03;

        $r3 = (org.apache.maven.model.ModelBase) this;

        $stack62 = $r3.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement distributionManagement>;

        $stack63 = virtualinvoke $stack62.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DistributionManagement clone()>();

        copy.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement distributionManagement> = $stack63;

     label03:
        $r4 = (org.apache.maven.model.ModelBase) this;

        $stack7 = $r4.<org.apache.maven.model.ModelBase: java.util.Properties properties>;

        if $stack7 == null goto label04;

        $r5 = (org.apache.maven.model.ModelBase) this;

        $stack58 = $r5.<org.apache.maven.model.ModelBase: java.util.Properties properties>;

        $stack59 = virtualinvoke $stack58.<java.util.Properties: java.lang.Object clone()>();

        $stack60 = (java.util.Properties) $stack59;

        copy.<org.apache.maven.model.ModelBase: java.util.Properties properties> = $stack60;

     label04:
        $r6 = (org.apache.maven.model.ModelBase) this;

        $stack8 = $r6.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement dependencyManagement>;

        if $stack8 == null goto label05;

        $r7 = (org.apache.maven.model.ModelBase) this;

        $stack55 = $r7.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement dependencyManagement>;

        $stack56 = virtualinvoke $stack55.<org.apache.maven.model.DependencyManagement: org.apache.maven.model.DependencyManagement clone()>();

        copy.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement dependencyManagement> = $stack56;

     label05:
        $r8 = (org.apache.maven.model.ModelBase) this;

        $stack9 = $r8.<org.apache.maven.model.ModelBase: java.util.List dependencies>;

        if $stack9 == null goto label07;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.model.ModelBase: java.util.List dependencies> = $u1;

        $r9 = (org.apache.maven.model.ModelBase) this;

        $stack46 = $r9.<org.apache.maven.model.ModelBase: java.util.List dependencies>;

        l2 = interfaceinvoke $stack46.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack48 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack48 == 0 goto label07;

        $stack50 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.model.Dependency) $stack50;

        $stack51 = copy.<org.apache.maven.model.ModelBase: java.util.List dependencies>;

        $stack52 = virtualinvoke item.<org.apache.maven.model.Dependency: org.apache.maven.model.Dependency clone()>();

        interfaceinvoke $stack51.<java.util.List: boolean add(java.lang.Object)>($stack52);

        goto label06;

     label07:
        $r10 = (org.apache.maven.model.ModelBase) this;

        $stack10 = $r10.<org.apache.maven.model.ModelBase: java.util.List repositories>;

        if $stack10 == null goto label09;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.model.ModelBase: java.util.List repositories> = $u2;

        $r11 = (org.apache.maven.model.ModelBase) this;

        $stack36 = $r11.<org.apache.maven.model.ModelBase: java.util.List repositories>;

        l2 = interfaceinvoke $stack36.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack38 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack38 == 0 goto label09;

        $stack40 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item#5 = (org.apache.maven.model.Repository) $stack40;

        $stack41 = copy.<org.apache.maven.model.ModelBase: java.util.List repositories>;

        $stack42 = virtualinvoke item#5.<org.apache.maven.model.Repository: org.apache.maven.model.Repository clone()>();

        interfaceinvoke $stack41.<java.util.List: boolean add(java.lang.Object)>($stack42);

        goto label08;

     label09:
        $r12 = (org.apache.maven.model.ModelBase) this;

        $stack11 = $r12.<org.apache.maven.model.ModelBase: java.util.List pluginRepositories>;

        if $stack11 == null goto label11;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.model.ModelBase: java.util.List pluginRepositories> = $u3;

        $r13 = (org.apache.maven.model.ModelBase) this;

        $stack26 = $r13.<org.apache.maven.model.ModelBase: java.util.List pluginRepositories>;

        l2 = interfaceinvoke $stack26.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $stack28 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack28 == 0 goto label11;

        $stack30 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item#5 = (org.apache.maven.model.Repository) $stack30;

        $stack31 = copy.<org.apache.maven.model.ModelBase: java.util.List pluginRepositories>;

        $stack32 = virtualinvoke item#5.<org.apache.maven.model.Repository: org.apache.maven.model.Repository clone()>();

        interfaceinvoke $stack31.<java.util.List: boolean add(java.lang.Object)>($stack32);

        goto label10;

     label11:
        $r14 = (org.apache.maven.model.ModelBase) this;

        $stack12 = $r14.<org.apache.maven.model.ModelBase: java.lang.Object reports>;

        if $stack12 == null goto label12;

        $u4 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        $r15 = (org.apache.maven.model.ModelBase) this;

        $stack22 = $r15.<org.apache.maven.model.ModelBase: java.lang.Object reports>;

        $stack23 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack22;

        specialinvoke $u4.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack23);

        copy.<org.apache.maven.model.ModelBase: java.lang.Object reports> = $u4;

     label12:
        $r16 = (org.apache.maven.model.ModelBase) this;

        $stack13 = $r16.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting reporting>;

        if $stack13 == null goto label13;

        $r17 = (org.apache.maven.model.ModelBase) this;

        $stack18 = $r17.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting reporting>;

        $stack19 = virtualinvoke $stack18.<org.apache.maven.model.Reporting: org.apache.maven.model.Reporting clone()>();

        copy.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting reporting> = $stack19;

     label13:
        $stack14 = copy.<org.apache.maven.model.ModelBase: java.util.Map locations>;

        if $stack14 == null goto label14;

        $u5 = new java.util.LinkedHashMap;

        $stack16 = copy.<org.apache.maven.model.ModelBase: java.util.Map locations>;

        specialinvoke $u5.<java.util.LinkedHashMap: void <init>(java.util.Map)>($stack16);

        copy.<org.apache.maven.model.ModelBase: java.util.Map locations> = $u5;

     label14:
        return copy;

     label15:
        $stack70 := @caughtexception;

        $u7 = new java.lang.UnsupportedOperationException;

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack73 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack74 = virtualinvoke $stack73.<java.lang.Class: java.lang.String getName()>();

        $stack75 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack74);

        $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support clone()");

        $stack77 = virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack77);

        $stack78 = virtualinvoke $u7.<java.lang.UnsupportedOperationException: java.lang.Throwable initCause(java.lang.Throwable)>($stack70);

        $stack79 = (java.lang.RuntimeException) $stack78;

        throw $stack79;

        catch java.lang.Exception from label01 to label14 with label15;
    }

    public java.util.List getDependencies()
    {
        ModelBase this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.model.ModelBase $r0, $r1, $r2;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = $r0.<org.apache.maven.model.ModelBase: java.util.List dependencies>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.model.ModelBase) this;

        $r1.<org.apache.maven.model.ModelBase: java.util.List dependencies> = $u0;

     label1:
        $r2 = (org.apache.maven.model.ModelBase) this;

        $stack2 = $r2.<org.apache.maven.model.ModelBase: java.util.List dependencies>;

        return $stack2;
    }

    public org.apache.maven.model.DependencyManagement getDependencyManagement()
    {
        ModelBase this;
        org.apache.maven.model.DependencyManagement $stack1;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = $r0.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement dependencyManagement>;

        return $stack1;
    }

    public org.apache.maven.model.DistributionManagement getDistributionManagement()
    {
        ModelBase this;
        org.apache.maven.model.DistributionManagement $stack1;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = $r0.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement distributionManagement>;

        return $stack1;
    }

    public org.apache.maven.model.InputLocation getLocation(java.lang.Object)
    {
        java.lang.Object key;
        boolean $stack4, $stack7, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28;
        ModelBase this;
        org.apache.maven.model.InputLocation $stack5, $stack8, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18;
        java.lang.String l2;
        int $stack6;
        byte l3;
        org.apache.maven.model.ModelBase $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        this := @this: ModelBase;

        key := @parameter0: java.lang.Object;

        $stack4 = key instanceof java.lang.String;

        if $stack4 == 0 goto label23;

        l2 = (java.lang.String) key;

        l3 = -1;

        $stack6 = virtualinvoke l2.<java.lang.String: int hashCode()>();

        lookupswitch($stack6)
        {
            case -2018292249: goto label03;
            case -926053069: goto label04;
            case -353319378: goto label10;
            case -293892037: goto label08;
            case 0: goto label01;
            case 503774505: goto label06;
            case 1094603199: goto label09;
            case 1227433863: goto label02;
            case 1993065966: goto label05;
            case 2113732968: goto label07;
            default: goto label11;
        };

     label01:
        $stack24 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack24 == 0 goto label11;

        l3 = 0;

        goto label11;

     label02:
        $stack21 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("modules");

        if $stack21 == 0 goto label11;

        l3 = 1;

        goto label11;

     label03:
        $stack28 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("distributionManagement");

        if $stack28 == 0 goto label11;

        l3 = 2;

        goto label11;

     label04:
        $stack27 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("properties");

        if $stack27 == 0 goto label11;

        l3 = 3;

        goto label11;

     label05:
        $stack20 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("dependencyManagement");

        if $stack20 == 0 goto label11;

        l3 = 4;

        goto label11;

     label06:
        $stack23 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("dependencies");

        if $stack23 == 0 goto label11;

        l3 = 5;

        goto label11;

     label07:
        $stack7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("repositories");

        if $stack7 == 0 goto label11;

        l3 = 6;

        goto label11;

     label08:
        $stack25 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("pluginRepositories");

        if $stack25 == 0 goto label11;

        l3 = 7;

        goto label11;

     label09:
        $stack22 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("reports");

        if $stack22 == 0 goto label11;

        l3 = 8;

        goto label11;

     label10:
        $stack26 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("reporting");

        if $stack26 == 0 goto label11;

        l3 = 9;

     label11:
        tableswitch(l3)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label16;
            case 5: goto label17;
            case 6: goto label18;
            case 7: goto label19;
            case 8: goto label20;
            case 9: goto label21;
            default: goto label22;
        };

     label12:
        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack17 = $r0.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation location>;

        return $stack17;

     label13:
        $r1 = (org.apache.maven.model.ModelBase) this;

        $stack16 = $r1.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation modulesLocation>;

        return $stack16;

     label14:
        $r2 = (org.apache.maven.model.ModelBase) this;

        $stack15 = $r2.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation distributionManagementLocation>;

        return $stack15;

     label15:
        $r3 = (org.apache.maven.model.ModelBase) this;

        $stack14 = $r3.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation propertiesLocation>;

        return $stack14;

     label16:
        $r4 = (org.apache.maven.model.ModelBase) this;

        $stack13 = $r4.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation dependencyManagementLocation>;

        return $stack13;

     label17:
        $r5 = (org.apache.maven.model.ModelBase) this;

        $stack12 = $r5.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation dependenciesLocation>;

        return $stack12;

     label18:
        $r6 = (org.apache.maven.model.ModelBase) this;

        $stack11 = $r6.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation repositoriesLocation>;

        return $stack11;

     label19:
        $r7 = (org.apache.maven.model.ModelBase) this;

        $stack10 = $r7.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation pluginRepositoriesLocation>;

        return $stack10;

     label20:
        $r8 = (org.apache.maven.model.ModelBase) this;

        $stack9 = $r8.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation reportsLocation>;

        return $stack9;

     label21:
        $r9 = (org.apache.maven.model.ModelBase) this;

        $stack8 = $r9.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation reportingLocation>;

        return $stack8;

     label22:
        $r10 = (org.apache.maven.model.ModelBase) this;

        $stack18 = specialinvoke $r10.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation getOtherLocation(java.lang.Object)>(key);

        return $stack18;

     label23:
        $r11 = (org.apache.maven.model.ModelBase) this;

        $stack5 = specialinvoke $r11.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation getOtherLocation(java.lang.Object)>(key);

        return $stack5;
    }

    public java.util.List getModules()
    {
        ModelBase this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.model.ModelBase $r0, $r1, $r2;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = $r0.<org.apache.maven.model.ModelBase: java.util.List modules>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.model.ModelBase) this;

        $r1.<org.apache.maven.model.ModelBase: java.util.List modules> = $u0;

     label1:
        $r2 = (org.apache.maven.model.ModelBase) this;

        $stack2 = $r2.<org.apache.maven.model.ModelBase: java.util.List modules>;

        return $stack2;
    }

    public void setLocation(java.lang.Object, org.apache.maven.model.InputLocation)
    {
        java.lang.Object key;
        boolean $stack5, $stack7, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15, $stack16, $stack17;
        ModelBase this;
        org.apache.maven.model.InputLocation location;
        java.lang.String l3;
        int $stack6;
        byte l4;
        org.apache.maven.model.ModelBase $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        this := @this: ModelBase;

        key := @parameter0: java.lang.Object;

        location := @parameter1: org.apache.maven.model.InputLocation;

        $stack5 = key instanceof java.lang.String;

        if $stack5 == 0 goto label23;

        l3 = (java.lang.String) key;

        l4 = -1;

        $stack6 = virtualinvoke l3.<java.lang.String: int hashCode()>();

        lookupswitch($stack6)
        {
            case -2018292249: goto label03;
            case -926053069: goto label04;
            case -353319378: goto label10;
            case -293892037: goto label08;
            case 0: goto label01;
            case 503774505: goto label06;
            case 1094603199: goto label09;
            case 1227433863: goto label02;
            case 1993065966: goto label05;
            case 2113732968: goto label07;
            default: goto label11;
        };

     label01:
        $stack13 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack13 == 0 goto label11;

        l4 = 0;

        goto label11;

     label02:
        $stack10 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("modules");

        if $stack10 == 0 goto label11;

        l4 = 1;

        goto label11;

     label03:
        $stack17 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("distributionManagement");

        if $stack17 == 0 goto label11;

        l4 = 2;

        goto label11;

     label04:
        $stack16 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("properties");

        if $stack16 == 0 goto label11;

        l4 = 3;

        goto label11;

     label05:
        $stack9 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("dependencyManagement");

        if $stack9 == 0 goto label11;

        l4 = 4;

        goto label11;

     label06:
        $stack12 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("dependencies");

        if $stack12 == 0 goto label11;

        l4 = 5;

        goto label11;

     label07:
        $stack7 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("repositories");

        if $stack7 == 0 goto label11;

        l4 = 6;

        goto label11;

     label08:
        $stack14 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("pluginRepositories");

        if $stack14 == 0 goto label11;

        l4 = 7;

        goto label11;

     label09:
        $stack11 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("reports");

        if $stack11 == 0 goto label11;

        l4 = 8;

        goto label11;

     label10:
        $stack15 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("reporting");

        if $stack15 == 0 goto label11;

        l4 = 9;

     label11:
        tableswitch(l4)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label16;
            case 5: goto label17;
            case 6: goto label18;
            case 7: goto label19;
            case 8: goto label20;
            case 9: goto label21;
            default: goto label22;
        };

     label12:
        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation location> = location;

        return;

     label13:
        $r1 = (org.apache.maven.model.ModelBase) this;

        $r1.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation modulesLocation> = location;

        return;

     label14:
        $r2 = (org.apache.maven.model.ModelBase) this;

        $r2.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation distributionManagementLocation> = location;

        return;

     label15:
        $r3 = (org.apache.maven.model.ModelBase) this;

        $r3.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation propertiesLocation> = location;

        return;

     label16:
        $r4 = (org.apache.maven.model.ModelBase) this;

        $r4.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation dependencyManagementLocation> = location;

        return;

     label17:
        $r5 = (org.apache.maven.model.ModelBase) this;

        $r5.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation dependenciesLocation> = location;

        return;

     label18:
        $r6 = (org.apache.maven.model.ModelBase) this;

        $r6.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation repositoriesLocation> = location;

        return;

     label19:
        $r7 = (org.apache.maven.model.ModelBase) this;

        $r7.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation pluginRepositoriesLocation> = location;

        return;

     label20:
        $r8 = (org.apache.maven.model.ModelBase) this;

        $r8.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation reportsLocation> = location;

        return;

     label21:
        $r9 = (org.apache.maven.model.ModelBase) this;

        $r9.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation reportingLocation> = location;

        return;

     label22:
        $r10 = (org.apache.maven.model.ModelBase) this;

        virtualinvoke $r10.<org.apache.maven.model.ModelBase: void setOtherLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(key, location);

        return;

     label23:
        $r11 = (org.apache.maven.model.ModelBase) this;

        virtualinvoke $r11.<org.apache.maven.model.ModelBase: void setOtherLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(key, location);

        return;
    }

    public void setOtherLocation(java.lang.Object, org.apache.maven.model.InputLocation)
    {
        org.apache.maven.model.InputLocation location;
        ModelBase this;
        java.util.Map $stack3, $stack4;
        java.lang.Object key;
        java.util.LinkedHashMap $u0;
        org.apache.maven.model.ModelBase $r0, $r1, $r2;

        this := @this: ModelBase;

        key := @parameter0: java.lang.Object;

        location := @parameter1: org.apache.maven.model.InputLocation;

        if location == null goto label2;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack3 = $r0.<org.apache.maven.model.ModelBase: java.util.Map locations>;

        if $stack3 != null goto label1;

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $r1 = (org.apache.maven.model.ModelBase) this;

        $r1.<org.apache.maven.model.ModelBase: java.util.Map locations> = $u0;

     label1:
        $r2 = (org.apache.maven.model.ModelBase) this;

        $stack4 = $r2.<org.apache.maven.model.ModelBase: java.util.Map locations>;

        interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, location);

     label2:
        return;
    }

    private org.apache.maven.model.InputLocation getOtherLocation(java.lang.Object)
    {
        ModelBase this;
        java.util.Map $stack2, $stack3;
        java.lang.Object key, $stack4;
        org.apache.maven.model.InputLocation $stack5;
        org.apache.maven.model.ModelBase $r0, $r1;

        this := @this: ModelBase;

        key := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack2 = $r0.<org.apache.maven.model.ModelBase: java.util.Map locations>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.model.ModelBase) this;

        $stack3 = $r1.<org.apache.maven.model.ModelBase: java.util.Map locations>;

        $stack4 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack5 = (org.apache.maven.model.InputLocation) $stack4;

        goto label2;

     label1:
        $stack5 = null;

     label2:
        return $stack5;
    }

    public java.util.List getPluginRepositories()
    {
        ModelBase this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.model.ModelBase $r0, $r1, $r2;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = $r0.<org.apache.maven.model.ModelBase: java.util.List pluginRepositories>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.model.ModelBase) this;

        $r1.<org.apache.maven.model.ModelBase: java.util.List pluginRepositories> = $u0;

     label1:
        $r2 = (org.apache.maven.model.ModelBase) this;

        $stack2 = $r2.<org.apache.maven.model.ModelBase: java.util.List pluginRepositories>;

        return $stack2;
    }

    public java.util.Properties getProperties()
    {
        ModelBase this;
        java.util.Properties $stack1, $stack2, $u0;
        org.apache.maven.model.ModelBase $r0, $r1, $r2;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = $r0.<org.apache.maven.model.ModelBase: java.util.Properties properties>;

        if $stack1 != null goto label1;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r1 = (org.apache.maven.model.ModelBase) this;

        $r1.<org.apache.maven.model.ModelBase: java.util.Properties properties> = $u0;

     label1:
        $r2 = (org.apache.maven.model.ModelBase) this;

        $stack2 = $r2.<org.apache.maven.model.ModelBase: java.util.Properties properties>;

        return $stack2;
    }

    public org.apache.maven.model.Reporting getReporting()
    {
        ModelBase this;
        org.apache.maven.model.Reporting $stack1;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = $r0.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting reporting>;

        return $stack1;
    }

    public java.lang.Object getReports()
    {
        ModelBase this;
        java.lang.Object $stack1;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = $r0.<org.apache.maven.model.ModelBase: java.lang.Object reports>;

        return $stack1;
    }

    public java.util.List getRepositories()
    {
        ModelBase this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.model.ModelBase $r0, $r1, $r2;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = $r0.<org.apache.maven.model.ModelBase: java.util.List repositories>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.model.ModelBase) this;

        $r1.<org.apache.maven.model.ModelBase: java.util.List repositories> = $u0;

     label1:
        $r2 = (org.apache.maven.model.ModelBase) this;

        $stack2 = $r2.<org.apache.maven.model.ModelBase: java.util.List repositories>;

        return $stack2;
    }

    public void removeDependency(org.apache.maven.model.Dependency)
    {
        ModelBase this;
        java.util.List $stack2;
        org.apache.maven.model.Dependency dependency;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        dependency := @parameter0: org.apache.maven.model.Dependency;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(dependency);

        return;
    }

    public void removeModule(java.lang.String)
    {
        ModelBase this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(string);

        return;
    }

    public void removePluginRepository(org.apache.maven.model.Repository)
    {
        ModelBase this;
        java.util.List $stack2;
        org.apache.maven.model.Repository repository;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        repository := @parameter0: org.apache.maven.model.Repository;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(repository);

        return;
    }

    public void removeRepository(org.apache.maven.model.Repository)
    {
        ModelBase this;
        java.util.List $stack2;
        org.apache.maven.model.Repository repository;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        repository := @parameter0: org.apache.maven.model.Repository;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(repository);

        return;
    }

    public void setDependencies(java.util.List)
    {
        ModelBase this;
        java.util.List dependencies;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        dependencies := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: java.util.List dependencies> = dependencies;

        return;
    }

    public void setDependencyManagement(org.apache.maven.model.DependencyManagement)
    {
        ModelBase this;
        org.apache.maven.model.DependencyManagement dependencyManagement;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        dependencyManagement := @parameter0: org.apache.maven.model.DependencyManagement;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement dependencyManagement> = dependencyManagement;

        return;
    }

    public void setDistributionManagement(org.apache.maven.model.DistributionManagement)
    {
        ModelBase this;
        org.apache.maven.model.DistributionManagement distributionManagement;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        distributionManagement := @parameter0: org.apache.maven.model.DistributionManagement;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement distributionManagement> = distributionManagement;

        return;
    }

    public void setModules(java.util.List)
    {
        ModelBase this;
        java.util.List modules;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        modules := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: java.util.List modules> = modules;

        return;
    }

    public void setPluginRepositories(java.util.List)
    {
        ModelBase this;
        java.util.List pluginRepositories;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        pluginRepositories := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: java.util.List pluginRepositories> = pluginRepositories;

        return;
    }

    public void setProperties(java.util.Properties)
    {
        ModelBase this;
        java.util.Properties properties;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        properties := @parameter0: java.util.Properties;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: java.util.Properties properties> = properties;

        return;
    }

    public void setReporting(org.apache.maven.model.Reporting)
    {
        ModelBase this;
        org.apache.maven.model.Reporting reporting;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        reporting := @parameter0: org.apache.maven.model.Reporting;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting reporting> = reporting;

        return;
    }

    public void setReports(java.lang.Object)
    {
        ModelBase this;
        java.lang.Object reports;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        reports := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: java.lang.Object reports> = reports;

        return;
    }

    public void setRepositories(java.util.List)
    {
        ModelBase this;
        java.util.List repositories;
        org.apache.maven.model.ModelBase $r0;

        this := @this: ModelBase;

        repositories := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $r0.<org.apache.maven.model.ModelBase: java.util.List repositories> = repositories;

        return;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        ModelBase this;
        org.apache.maven.model.ModelBase $stack1, $r0;

        this := @this: ModelBase;

        $r0 = (org.apache.maven.model.ModelBase) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.ModelBase: org.apache.maven.model.ModelBase clone()>();

        return $stack1;
    }
}
