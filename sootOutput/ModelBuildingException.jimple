public class ModelBuildingException extends java.lang.Exception
{
    private final org.apache.maven.model.building.ModelBuildingResult result;

    public void <init>(org.apache.maven.model.Model, java.lang.String, java.util.List)
    {
        ModelBuildingException this;
        java.util.List problems;
        java.lang.String $stack5, modelId;
        org.apache.maven.model.Model model;
        org.apache.maven.model.building.DefaultModelBuildingResult $u0;
        org.apache.maven.model.building.ModelBuildingException $r0, $r2;
        org.apache.maven.model.building.ModelBuildingResult $r1;

        this := @this: ModelBuildingException;

        model := @parameter0: org.apache.maven.model.Model;

        modelId := @parameter1: java.lang.String;

        problems := @parameter2: java.util.List;

        $stack5 = staticinvoke <org.apache.maven.model.building.ModelBuildingException: java.lang.String toMessage(java.lang.String,java.util.List)>(modelId, problems);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>($stack5);

        if model == null goto label2;

        $u0 = new org.apache.maven.model.building.DefaultModelBuildingResult;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: void <init>()>();

        if modelId != null goto label1;

        modelId = "";

     label1:
        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult addModelId(java.lang.String)>(modelId);

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setRawModel(java.lang.String,org.apache.maven.model.Model)>(modelId, model);

        virtualinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingResult: org.apache.maven.model.building.DefaultModelBuildingResult setProblems(java.util.List)>(problems);

        $r0 = (org.apache.maven.model.building.ModelBuildingException) this;

        $r1 = (org.apache.maven.model.building.ModelBuildingResult) $u0;

        $r0.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result> = $r1;

        goto label3;

     label2:
        $r2 = (org.apache.maven.model.building.ModelBuildingException) this;

        $r2.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result> = null;

     label3:
        return;
    }

    public void <init>(org.apache.maven.model.building.ModelBuildingResult)
    {
        ModelBuildingException this;
        org.apache.maven.model.building.ModelBuildingResult result;
        java.lang.String $stack2;
        org.apache.maven.model.building.ModelBuildingException $r0;

        this := @this: ModelBuildingException;

        result := @parameter0: org.apache.maven.model.building.ModelBuildingResult;

        $stack2 = staticinvoke <org.apache.maven.model.building.ModelBuildingException: java.lang.String toMessage(org.apache.maven.model.building.ModelBuildingResult)>(result);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>($stack2);

        $r0 = (org.apache.maven.model.building.ModelBuildingException) this;

        $r0.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result> = result;

        return;
    }

    public org.apache.maven.model.building.ModelBuildingResult getResult()
    {
        ModelBuildingException this;
        org.apache.maven.model.building.ModelBuildingResult $stack1;
        org.apache.maven.model.building.ModelBuildingException $r0;

        this := @this: ModelBuildingException;

        $r0 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack1 = $r0.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        return $stack1;
    }

    public org.apache.maven.model.Model getModel()
    {
        ModelBuildingException this;
        org.apache.maven.model.building.ModelBuildingResult $stack1, $stack2, $stack4, $stack6;
        org.apache.maven.model.Model $stack3, $stack5, $stack7;
        org.apache.maven.model.building.ModelBuildingException $r0, $r1, $r2, $r3;

        this := @this: ModelBuildingException;

        $r0 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack1 = $r0.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        if $stack1 != null goto label1;

        return null;

     label1:
        $r1 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack2 = $r1.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getEffectiveModel()>();

        if $stack3 == null goto label2;

        $r2 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack6 = $r2.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        $stack7 = interfaceinvoke $stack6.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getEffectiveModel()>();

        return $stack7;

     label2:
        $r3 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack4 = $r3.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        $stack5 = interfaceinvoke $stack4.<org.apache.maven.model.building.ModelBuildingResult: org.apache.maven.model.Model getRawModel()>();

        return $stack5;
    }

    public java.lang.String getModelId()
    {
        ModelBuildingException this;
        org.apache.maven.model.building.ModelBuildingResult $stack1, $stack2, $stack5;
        java.util.List $stack3, $stack6;
        boolean $stack4;
        java.lang.Object $stack7;
        java.lang.String $stack8;
        org.apache.maven.model.building.ModelBuildingException $r0, $r1, $r2;

        this := @this: ModelBuildingException;

        $r0 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack1 = $r0.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack2 = $r1.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getModelIds()>();

        $stack4 = interfaceinvoke $stack3.<java.util.List: boolean isEmpty()>();

        if $stack4 == 0 goto label2;

     label1:
        return "";

     label2:
        $r2 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack5 = $r2.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        $stack6 = interfaceinvoke $stack5.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getModelIds()>();

        $stack7 = interfaceinvoke $stack6.<java.util.List: java.lang.Object get(int)>(0);

        $stack8 = (java.lang.String) $stack7;

        return $stack8;
    }

    public java.util.List getProblems()
    {
        ModelBuildingException this;
        org.apache.maven.model.building.ModelBuildingResult $stack1, $stack2;
        java.util.List $stack3, $stack4, $stack5;
        org.apache.maven.model.building.ModelBuildingException $r0, $r1;

        this := @this: ModelBuildingException;

        $r0 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack1 = $r0.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        if $stack1 != null goto label1;

        $stack5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack5;

     label1:
        $r1 = (org.apache.maven.model.building.ModelBuildingException) this;

        $stack2 = $r1.<org.apache.maven.model.building.ModelBuildingException: org.apache.maven.model.building.ModelBuildingResult result>;

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getProblems()>();

        $stack4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack3);

        return $stack4;
    }

    private static java.lang.String toMessage(org.apache.maven.model.building.ModelBuildingResult)
    {
        org.apache.maven.model.building.ModelBuildingResult result;
        java.util.List $stack1, $stack4, $stack7;
        boolean $stack2;
        java.lang.Object $stack5;
        java.lang.String $stack6, $stack8;

        result := @parameter0: org.apache.maven.model.building.ModelBuildingResult;

        if result == null goto label1;

        $stack1 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getModelIds()>();

        $stack2 = interfaceinvoke $stack1.<java.util.List: boolean isEmpty()>();

        if $stack2 != 0 goto label1;

        $stack4 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getModelIds()>();

        $stack5 = interfaceinvoke $stack4.<java.util.List: java.lang.Object get(int)>(0);

        $stack6 = (java.lang.String) $stack5;

        $stack7 = interfaceinvoke result.<org.apache.maven.model.building.ModelBuildingResult: java.util.List getProblems()>();

        $stack8 = staticinvoke <org.apache.maven.model.building.ModelBuildingException: java.lang.String toMessage(java.lang.String,java.util.List)>($stack6, $stack7);

        return $stack8;

     label1:
        return null;
    }

    private static java.lang.String toMessage(java.lang.String, java.util.List)
    {
        java.io.StringWriter $stack7;
        java.io.PrintWriter $stack8;
        java.util.List problems;
        int $stack9, $stack10, $stack20;
        java.lang.String modelId, $stack13, $stack16, location, $stack23;
        java.util.Iterator l4;
        java.lang.Object $stack14;
        org.apache.maven.model.building.ModelProblem problem;
        org.apache.maven.model.building.ModelProblem$Severity $stack15;
        boolean $stack18, $stack12;

        modelId := @parameter0: java.lang.String;

        problems := @parameter1: java.util.List;

        $stack7 = new java.io.StringWriter;

        specialinvoke $stack7.<java.io.StringWriter: void <init>(int)>(1024);

        $stack8 = new java.io.PrintWriter;

        specialinvoke $stack8.<java.io.PrintWriter: void <init>(java.io.Writer)>($stack7);

        $stack9 = interfaceinvoke problems.<java.util.List: int size()>();

        virtualinvoke $stack8.<java.io.PrintWriter: void print(int)>($stack9);

        $stack10 = interfaceinvoke problems.<java.util.List: int size()>();

        if $stack10 != 1 goto label1;

        $stack23 = " problem was ";

        goto label2;

     label1:
        $stack23 = " problems were ";

     label2:
        virtualinvoke $stack8.<java.io.PrintWriter: void print(java.lang.String)>($stack23);

        virtualinvoke $stack8.<java.io.PrintWriter: void print(java.lang.String)>("encountered while building the effective model");

        if modelId == null goto label3;

        $stack20 = virtualinvoke modelId.<java.lang.String: int length()>();

        if $stack20 <= 0 goto label3;

        virtualinvoke $stack8.<java.io.PrintWriter: void print(java.lang.String)>(" for ");

        virtualinvoke $stack8.<java.io.PrintWriter: void print(java.lang.String)>(modelId);

     label3:
        virtualinvoke $stack8.<java.io.PrintWriter: void println()>();

        l4 = interfaceinvoke problems.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack12 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label6;

        $stack14 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        problem = (org.apache.maven.model.building.ModelProblem) $stack14;

        virtualinvoke $stack8.<java.io.PrintWriter: void print(java.lang.String)>("[");

        $stack15 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: org.apache.maven.model.building.ModelProblem$Severity getSeverity()>();

        virtualinvoke $stack8.<java.io.PrintWriter: void print(java.lang.Object)>($stack15);

        virtualinvoke $stack8.<java.io.PrintWriter: void print(java.lang.String)>("] ");

        $stack16 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.String getMessage()>();

        virtualinvoke $stack8.<java.io.PrintWriter: void print(java.lang.String)>($stack16);

        location = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String formatLocation(org.apache.maven.model.building.ModelProblem,java.lang.String)>(problem, modelId);

        $stack18 = virtualinvoke location.<java.lang.String: boolean isEmpty()>();

        if $stack18 != 0 goto label5;

        virtualinvoke $stack8.<java.io.PrintWriter: void print(java.lang.String)>(" @ ");

        virtualinvoke $stack8.<java.io.PrintWriter: void println(java.lang.String)>(location);

     label5:
        goto label4;

     label6:
        $stack13 = virtualinvoke $stack7.<java.io.StringWriter: java.lang.String toString()>();

        return $stack13;
    }
}
