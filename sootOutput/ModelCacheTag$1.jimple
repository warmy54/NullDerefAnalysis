class ModelCacheTag$1 extends java.lang.Object implements org.apache.maven.model.building.ModelCacheTag
{

    void <init>()
    {
        ModelCacheTag$1 this;

        this := @this: ModelCacheTag$1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        ModelCacheTag$1 this;

        this := @this: ModelCacheTag$1;

        return "raw";
    }

    public java.lang.Class getType()
    {
        ModelCacheTag$1 this;

        this := @this: ModelCacheTag$1;

        return class "Lorg/apache/maven/model/building/ModelData;";
    }

    public org.apache.maven.model.building.ModelData intoCache(org.apache.maven.model.building.ModelData)
    {
        org.apache.maven.model.building.ModelData data, $stack4;
        org.apache.maven.model.Model $stack3, $stack9, $stack10;
        org.apache.maven.building.Source $stack5;
        java.lang.String $stack6, $stack7, $stack8;
        ModelCacheTag$1 this;

        this := @this: ModelCacheTag$1;

        data := @parameter0: org.apache.maven.model.building.ModelData;

        $stack3 = virtualinvoke data.<org.apache.maven.model.building.ModelData: org.apache.maven.model.Model getModel()>();

        if $stack3 == null goto label1;

        $stack9 = virtualinvoke data.<org.apache.maven.model.building.ModelData: org.apache.maven.model.Model getModel()>();

        $stack10 = virtualinvoke $stack9.<org.apache.maven.model.Model: org.apache.maven.model.Model clone()>();

        goto label2;

     label1:
        $stack10 = null;

     label2:
        $stack4 = new org.apache.maven.model.building.ModelData;

        $stack5 = virtualinvoke data.<org.apache.maven.model.building.ModelData: org.apache.maven.building.Source getSource()>();

        $stack6 = virtualinvoke data.<org.apache.maven.model.building.ModelData: java.lang.String getGroupId()>();

        $stack7 = virtualinvoke data.<org.apache.maven.model.building.ModelData: java.lang.String getArtifactId()>();

        $stack8 = virtualinvoke data.<org.apache.maven.model.building.ModelData: java.lang.String getVersion()>();

        specialinvoke $stack4.<org.apache.maven.model.building.ModelData: void <init>(org.apache.maven.building.Source,org.apache.maven.model.Model,java.lang.String,java.lang.String,java.lang.String)>($stack5, $stack10, $stack6, $stack7, $stack8);

        return $stack4;
    }

    public org.apache.maven.model.building.ModelData fromCache(org.apache.maven.model.building.ModelData)
    {
        ModelCacheTag$1 this;
        org.apache.maven.model.building.ModelData data, $stack2;
        org.apache.maven.model.building.ModelCacheTag$1 $r0;

        this := @this: ModelCacheTag$1;

        data := @parameter0: org.apache.maven.model.building.ModelData;

        $r0 = (org.apache.maven.model.building.ModelCacheTag$1) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.building.ModelCacheTag$1: org.apache.maven.model.building.ModelData intoCache(org.apache.maven.model.building.ModelData)>(data);

        return $stack2;
    }

    public volatile java.lang.Object fromCache(java.lang.Object)
    {
        ModelCacheTag$1 this;
        java.lang.Object l1;
        org.apache.maven.model.building.ModelData $stack2, $stack3;
        org.apache.maven.model.building.ModelCacheTag$1 $r0;

        this := @this: ModelCacheTag$1;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.apache.maven.model.building.ModelData) l1;

        $r0 = (org.apache.maven.model.building.ModelCacheTag$1) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.model.building.ModelCacheTag$1: org.apache.maven.model.building.ModelData fromCache(org.apache.maven.model.building.ModelData)>($stack2);

        return $stack3;
    }

    public volatile java.lang.Object intoCache(java.lang.Object)
    {
        ModelCacheTag$1 this;
        java.lang.Object l1;
        org.apache.maven.model.building.ModelData $stack2, $stack3;
        org.apache.maven.model.building.ModelCacheTag$1 $r0;

        this := @this: ModelCacheTag$1;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.apache.maven.model.building.ModelData) l1;

        $r0 = (org.apache.maven.model.building.ModelCacheTag$1) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.model.building.ModelCacheTag$1: org.apache.maven.model.building.ModelData intoCache(org.apache.maven.model.building.ModelData)>($stack2);

        return $stack3;
    }
}
