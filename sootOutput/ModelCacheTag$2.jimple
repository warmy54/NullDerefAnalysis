class ModelCacheTag$2 extends java.lang.Object implements org.apache.maven.model.building.ModelCacheTag
{

    void <init>()
    {
        ModelCacheTag$2 this;

        this := @this: ModelCacheTag$2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        ModelCacheTag$2 this;

        this := @this: ModelCacheTag$2;

        return "import";
    }

    public java.lang.Class getType()
    {
        ModelCacheTag$2 this;

        this := @this: ModelCacheTag$2;

        return class "Lorg/apache/maven/model/DependencyManagement;";
    }

    public org.apache.maven.model.DependencyManagement intoCache(org.apache.maven.model.DependencyManagement)
    {
        org.apache.maven.model.DependencyManagement data, $stack2;
        ModelCacheTag$2 this;

        this := @this: ModelCacheTag$2;

        data := @parameter0: org.apache.maven.model.DependencyManagement;

        if data == null goto label1;

        $stack2 = virtualinvoke data.<org.apache.maven.model.DependencyManagement: org.apache.maven.model.DependencyManagement clone()>();

        goto label2;

     label1:
        $stack2 = null;

     label2:
        return $stack2;
    }

    public org.apache.maven.model.DependencyManagement fromCache(org.apache.maven.model.DependencyManagement)
    {
        ModelCacheTag$2 this;
        org.apache.maven.model.DependencyManagement data, $stack2;
        org.apache.maven.model.building.ModelCacheTag$2 $r0;

        this := @this: ModelCacheTag$2;

        data := @parameter0: org.apache.maven.model.DependencyManagement;

        $r0 = (org.apache.maven.model.building.ModelCacheTag$2) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.building.ModelCacheTag$2: org.apache.maven.model.DependencyManagement intoCache(org.apache.maven.model.DependencyManagement)>(data);

        return $stack2;
    }

    public volatile java.lang.Object fromCache(java.lang.Object)
    {
        ModelCacheTag$2 this;
        java.lang.Object l1;
        org.apache.maven.model.DependencyManagement $stack2, $stack3;
        org.apache.maven.model.building.ModelCacheTag$2 $r0;

        this := @this: ModelCacheTag$2;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.apache.maven.model.DependencyManagement) l1;

        $r0 = (org.apache.maven.model.building.ModelCacheTag$2) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.model.building.ModelCacheTag$2: org.apache.maven.model.DependencyManagement fromCache(org.apache.maven.model.DependencyManagement)>($stack2);

        return $stack3;
    }

    public volatile java.lang.Object intoCache(java.lang.Object)
    {
        ModelCacheTag$2 this;
        java.lang.Object l1;
        org.apache.maven.model.DependencyManagement $stack2, $stack3;
        org.apache.maven.model.building.ModelCacheTag$2 $r0;

        this := @this: ModelCacheTag$2;

        l1 := @parameter0: java.lang.Object;

        $stack2 = (org.apache.maven.model.DependencyManagement) l1;

        $r0 = (org.apache.maven.model.building.ModelCacheTag$2) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.model.building.ModelCacheTag$2: org.apache.maven.model.DependencyManagement intoCache(org.apache.maven.model.DependencyManagement)>($stack2);

        return $stack3;
    }
}
