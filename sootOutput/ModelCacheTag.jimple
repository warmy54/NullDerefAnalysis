interface  ModelCacheTag extends java.lang.Object
{
    public static final org.apache.maven.model.building.ModelCacheTag RAW;
    public static final org.apache.maven.model.building.ModelCacheTag IMPORT;
    public static final org.apache.maven.model.building.ModelCacheTag FILE;

    public abstract java.lang.String getName();

    public abstract java.lang.Class getType();

    public abstract java.lang.Object intoCache(java.lang.Object);

    public abstract java.lang.Object fromCache(java.lang.Object);

    static void <clinit>()
    {
        org.apache.maven.model.building.ModelCacheTag$1 $u0;
        org.apache.maven.model.building.ModelCacheTag$2 $u1;
        org.apache.maven.model.building.ModelCacheTag$3 $u2;
        org.apache.maven.model.building.ModelCacheTag $r0, $r1, $r2;

        $u0 = new org.apache.maven.model.building.ModelCacheTag$1;

        specialinvoke $u0.<org.apache.maven.model.building.ModelCacheTag$1: void <init>()>();

        $r0 = (org.apache.maven.model.building.ModelCacheTag) $u0;

        <org.apache.maven.model.building.ModelCacheTag: org.apache.maven.model.building.ModelCacheTag RAW> = $r0;

        $u1 = new org.apache.maven.model.building.ModelCacheTag$2;

        specialinvoke $u1.<org.apache.maven.model.building.ModelCacheTag$2: void <init>()>();

        $r1 = (org.apache.maven.model.building.ModelCacheTag) $u1;

        <org.apache.maven.model.building.ModelCacheTag: org.apache.maven.model.building.ModelCacheTag IMPORT> = $r1;

        $u2 = new org.apache.maven.model.building.ModelCacheTag$3;

        specialinvoke $u2.<org.apache.maven.model.building.ModelCacheTag$3: void <init>()>();

        $r2 = (org.apache.maven.model.building.ModelCacheTag) $u2;

        <org.apache.maven.model.building.ModelCacheTag: org.apache.maven.model.building.ModelCacheTag FILE> = $r2;

        return;
    }
}
