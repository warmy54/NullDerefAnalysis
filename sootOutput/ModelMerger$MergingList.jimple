class ModelMerger$MergingList extends java.util.AbstractList
{
    private final org.apache.maven.model.merge.ModelMerger$KeyComputer keyComputer;
    private java.util.Map map;
    private java.util.List list;

    void <init>(org.apache.maven.model.merge.ModelMerger$KeyComputer, int)
    {
        ModelMerger$MergingList this;
        int initialCapacity;
        org.apache.maven.model.merge.ModelMerger$KeyComputer keyComputer;
        java.util.LinkedHashMap $u0;
        org.apache.maven.model.merge.ModelMerger$MergingList $r0, $r1;

        this := @this: ModelMerger$MergingList;

        keyComputer := @parameter0: org.apache.maven.model.merge.ModelMerger$KeyComputer;

        initialCapacity := @parameter1: int;

        specialinvoke this.<java.util.AbstractList: void <init>()>();

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>(int)>(initialCapacity);

        $r0 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $r0.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map> = $u0;

        $r1 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $r1.<org.apache.maven.model.merge.ModelMerger$MergingList: org.apache.maven.model.merge.ModelMerger$KeyComputer keyComputer> = keyComputer;

        return;
    }

    public java.util.Iterator iterator()
    {
        ModelMerger$MergingList this;
        java.util.Map $stack1, $stack4;
        java.util.List $stack2;
        java.util.Iterator $stack3, $stack6;
        java.util.Collection $stack5;
        org.apache.maven.model.merge.ModelMerger$MergingList $r0, $r1, $r2;

        this := @this: ModelMerger$MergingList;

        $r0 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack1 = $r0.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack4 = $r1.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        $stack5 = interfaceinvoke $stack4.<java.util.Map: java.util.Collection values()>();

        $stack6 = interfaceinvoke $stack5.<java.util.Collection: java.util.Iterator iterator()>();

        return $stack6;

     label1:
        $r2 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack2 = $r2.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List list>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.util.Iterator iterator()>();

        return $stack3;
    }

    void mergeAll(java.util.Collection, java.util.function.BinaryOperator)
    {
        ModelMerger$MergingList this;
        java.util.Map $stack7, $stack14, $stack18, $stack21, $stack28, $stack39;
        java.util.Collection vs;
        boolean $stack8, $stack24, $stack10;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack12, $stack33;
        java.util.function.BinaryOperator remapping;
        org.apache.maven.model.merge.ModelMerger$MergingList $stack17, $stack20, $r0, $r1, $r2, $r4, $r5, $r6, $r7, $r8;
        java.util.Set $stack22;
        java.lang.Object $stack25, v, $stack38, key, e#9;
        java.util.List $stack31;
        java.util.stream.Stream $stack32;
        java.util.function.Function $stack34, $r3;
        java.util.function.Supplier $stack36;
        java.util.stream.Collector $stack37;
        java.util.Iterator l3;
        java.util.Map$Entry e;

        this := @this: ModelMerger$MergingList;

        vs := @parameter0: java.util.Collection;

        remapping := @parameter1: java.util.function.BinaryOperator;

        $r0 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack7 = $r0.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        if $stack7 != null goto label1;

        $r1 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack31 = $r1.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List list>;

        $stack32 = interfaceinvoke $stack31.<java.util.List: java.util.stream.Stream stream()>();

        $r2 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack33 = $r2.<org.apache.maven.model.merge.ModelMerger$MergingList: org.apache.maven.model.merge.ModelMerger$KeyComputer keyComputer>;

        $stack34 = staticinvoke <java.util.function.Function: java.util.function.Function identity()>();

        $stack36 = staticinvoke <ModelMerger$MergingList$init__309: java.util.function.Supplier bootstrap$()>();

        $r3 = (java.util.function.Function) $stack33;

        $stack37 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator,java.util.function.Supplier)>($r3, $stack34, null, $stack36);

        $stack38 = interfaceinvoke $stack32.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($stack37);

        $stack39 = (java.util.Map) $stack38;

        $r4 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $r4.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map> = $stack39;

        $r5 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $r5.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List list> = null;

     label1:
        $stack8 = vs instanceof org.apache.maven.model.merge.ModelMerger$MergingList;

        if $stack8 == 0 goto label4;

        $stack17 = (org.apache.maven.model.merge.ModelMerger$MergingList) vs;

        $stack18 = $stack17.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        if $stack18 == null goto label4;

        $stack20 = (org.apache.maven.model.merge.ModelMerger$MergingList) vs;

        $stack21 = $stack20.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        $stack22 = interfaceinvoke $stack21.<java.util.Map: java.util.Set entrySet()>();

        l3 = interfaceinvoke $stack22.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $stack24 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack24 == 0 goto label3;

        $stack25 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        e = (java.util.Map$Entry) $stack25;

        key = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getKey()>();

        v = interfaceinvoke e.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r6 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack28 = $r6.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        interfaceinvoke $stack28.<java.util.Map: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>(key, v, remapping);

        goto label2;

     label3:
        goto label6;

     label4:
        l3 = interfaceinvoke vs.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $stack10 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label6;

        e#9 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack12 = $r7.<org.apache.maven.model.merge.ModelMerger$MergingList: org.apache.maven.model.merge.ModelMerger$KeyComputer keyComputer>;

        key = interfaceinvoke $stack12.<org.apache.maven.model.merge.ModelMerger$KeyComputer: java.lang.Object apply(java.lang.Object)>(e#9);

        $r8 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack14 = $r8.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        interfaceinvoke $stack14.<java.util.Map: java.lang.Object merge(java.lang.Object,java.lang.Object,java.util.function.BiFunction)>(key, e#9, remapping);

        goto label5;

     label6:
        return;
    }

    public boolean contains(java.lang.Object)
    {
        ModelMerger$MergingList this;
        java.util.Map $stack2, $stack5;
        java.lang.Object o;
        java.util.List $stack3;
        boolean $stack4, $stack6;
        org.apache.maven.model.merge.ModelMerger$MergingList $r0, $r1, $r2;

        this := @this: ModelMerger$MergingList;

        o := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack2 = $r0.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack5 = $r1.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        $stack6 = interfaceinvoke $stack5.<java.util.Map: boolean containsValue(java.lang.Object)>(o);

        return $stack6;

     label1:
        $r2 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack3 = $r2.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List list>;

        $stack4 = interfaceinvoke $stack3.<java.util.List: boolean contains(java.lang.Object)>(o);

        return $stack4;
    }

    private java.util.List asList()
    {
        ModelMerger$MergingList this;
        java.util.List $stack1, $stack2;
        java.util.Map $stack4;
        java.util.Collection $stack5;
        java.util.ArrayList $u0;
        org.apache.maven.model.merge.ModelMerger$MergingList $r0, $r1, $r2, $r3, $r4;

        this := @this: ModelMerger$MergingList;

        $r0 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack1 = $r0.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List list>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        $r1 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack4 = $r1.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        $stack5 = interfaceinvoke $stack4.<java.util.Map: java.util.Collection values()>();

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>($stack5);

        $r2 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $r2.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List list> = $u0;

        $r3 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $r3.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map> = null;

     label1:
        $r4 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack2 = $r4.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List list>;

        return $stack2;
    }

    public void add(int, java.lang.Object)
    {
        ModelMerger$MergingList this;
        java.util.List $stack3;
        int index;
        java.lang.Object element;
        org.apache.maven.model.merge.ModelMerger$MergingList $r0;

        this := @this: ModelMerger$MergingList;

        index := @parameter0: int;

        element := @parameter1: java.lang.Object;

        $r0 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List asList()>();

        interfaceinvoke $stack3.<java.util.List: void add(int,java.lang.Object)>(index, element);

        return;
    }

    public java.lang.Object remove(int)
    {
        ModelMerger$MergingList this;
        java.util.List $stack2;
        int index;
        java.lang.Object $stack3;
        org.apache.maven.model.merge.ModelMerger$MergingList $r0;

        this := @this: ModelMerger$MergingList;

        index := @parameter0: int;

        $r0 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List asList()>();

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object remove(int)>(index);

        return $stack3;
    }

    public java.lang.Object get(int)
    {
        ModelMerger$MergingList this;
        java.util.List $stack2;
        int index;
        java.lang.Object $stack3;
        org.apache.maven.model.merge.ModelMerger$MergingList $r0;

        this := @this: ModelMerger$MergingList;

        index := @parameter0: int;

        $r0 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List asList()>();

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>(index);

        return $stack3;
    }

    public int size()
    {
        ModelMerger$MergingList this;
        java.util.Map $stack1, $stack4;
        java.util.List $stack2;
        int $stack3, $stack5;
        org.apache.maven.model.merge.ModelMerger$MergingList $r0, $r1, $r2;

        this := @this: ModelMerger$MergingList;

        $r0 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack1 = $r0.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack4 = $r1.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.Map map>;

        $stack5 = interfaceinvoke $stack4.<java.util.Map: int size()>();

        return $stack5;

     label1:
        $r2 = (org.apache.maven.model.merge.ModelMerger$MergingList) this;

        $stack2 = $r2.<org.apache.maven.model.merge.ModelMerger$MergingList: java.util.List list>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: int size()>();

        return $stack3;
    }
}
