public class ModelMerger extends java.lang.Object
{

    public void <init>()
    {
        ModelMerger this;

        this := @this: ModelMerger;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void merge(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model target, source;
        java.util.Map hints;
        ModelMerger this;
        boolean sourceDominant;
        java.util.HashMap $u0;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        hints := @parameter3: java.util.Map;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(target, "target cannot be null");

        if source != null goto label1;

        return;

     label1:
        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        if hints == null goto label2;

        interfaceinvoke $u0.<java.util.Map: void putAll(java.util.Map)>(hints);

     label2:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeModel(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, $u0);

        return;
    }

    protected void mergeModel(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Model target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        org.apache.maven.model.ModelBase $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.ModelBase) target;

        $r2 = (org.apache.maven.model.ModelBase) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeModel_ChildProjectUrlInheritAppendPath(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeModel_ModelVersion(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Parent(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergeModel_GroupId(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r7 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r7.<org.apache.maven.model.merge.ModelMerger: void mergeModel_ArtifactId(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r8 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r8.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Version(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r9 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r9.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Packaging(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r10 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r10.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Name(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r11 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r11.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Description(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r12 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r12.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Url(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r13 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r13.<org.apache.maven.model.merge.ModelMerger: void mergeModel_InceptionYear(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r14 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r14.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Organization(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r15 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r15.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Licenses(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r16 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r16.<org.apache.maven.model.merge.ModelMerger: void mergeModel_MailingLists(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r17 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r17.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Developers(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r18 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r18.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Contributors(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r19 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r19.<org.apache.maven.model.merge.ModelMerger: void mergeModel_IssueManagement(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r20 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r20.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Scm(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r21 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r21.<org.apache.maven.model.merge.ModelMerger: void mergeModel_CiManagement(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r22 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r22.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Prerequisites(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r23 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r23.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Build(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r24 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r24.<org.apache.maven.model.merge.ModelMerger: void mergeModel_Profiles(org.apache.maven.model.Model,org.apache.maven.model.Model,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeModel_ModelVersion(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setModelVersion(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("modelVersion");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("modelVersion", $stack8);

     label2:
        return;
    }

    protected void mergeModel_Parent(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        org.apache.maven.model.Parent src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.Parent;

        specialinvoke $u0.<org.apache.maven.model.Parent: void <init>()>();

        tgt = $u0;

        virtualinvoke $u0.<org.apache.maven.model.Parent: void setRelativePath(java.lang.String)>(null);

        virtualinvoke target.<org.apache.maven.model.Model: void setParent(org.apache.maven.model.Parent)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeParent(org.apache.maven.model.Parent,org.apache.maven.model.Parent,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModel_GroupId(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setGroupId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("groupId");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $stack8);

     label2:
        return;
    }

    protected void mergeModel_ArtifactId(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setArtifactId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("artifactId");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $stack8);

     label2:
        return;
    }

    protected void mergeModel_ChildProjectUrlInheritAppendPath(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getChildProjectUrlInheritAppendPath()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getChildProjectUrlInheritAppendPath()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setChildProjectUrlInheritAppendPath(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("child.project.url.inherit.append.path");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("child.project.url.inherit.append.path", $stack8);

     label2:
        return;
    }

    protected void mergeModel_Version(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setVersion(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $stack8);

     label2:
        return;
    }

    protected void mergeModel_Packaging(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setPackaging(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("packaging");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("packaging", $stack8);

     label2:
        return;
    }

    protected void mergeModel_Name(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getName()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getName()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setName(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("name");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $stack8);

     label2:
        return;
    }

    protected void mergeModel_Description(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getDescription()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getDescription()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setDescription(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("description");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("description", $stack8);

     label2:
        return;
    }

    protected void mergeModel_Url(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("url");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $stack8);

     label2:
        return;
    }

    protected void mergeModel_InceptionYear(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: java.lang.String getInceptionYear()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Model: java.lang.String getInceptionYear()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Model: void setInceptionYear(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("inceptionYear");

        virtualinvoke target.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("inceptionYear", $stack8);

     label2:
        return;
    }

    protected void mergeModel_Organization(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        org.apache.maven.model.Organization src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.Organization getOrganization()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.Model: org.apache.maven.model.Organization getOrganization()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.Organization;

        specialinvoke $u0.<org.apache.maven.model.Organization: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.Model: void setOrganization(org.apache.maven.model.Organization)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeOrganization(org.apache.maven.model.Organization,org.apache.maven.model.Organization,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModel_Licenses(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Model: java.util.List getLicenses()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Model: java.util.List getLicenses()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getLicenseKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Model: void setLicenses(java.util.List)>($stack8);

        return;
    }

    protected void mergeModel_MailingLists(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Model: java.util.List getMailingLists()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Model: java.util.List getMailingLists()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getMailingListKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Model: void setMailingLists(java.util.List)>($stack8);

        return;
    }

    protected void mergeModel_Developers(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Model: java.util.List getDevelopers()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Model: java.util.List getDevelopers()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getDeveloperKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Model: void setDevelopers(java.util.List)>($stack8);

        return;
    }

    protected void mergeModel_Contributors(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Model: java.util.List getContributors()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Model: java.util.List getContributors()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getContributorKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Model: void setContributors(java.util.List)>($stack8);

        return;
    }

    protected void mergeModel_IssueManagement(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        org.apache.maven.model.IssueManagement src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.IssueManagement getIssueManagement()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.Model: org.apache.maven.model.IssueManagement getIssueManagement()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.IssueManagement;

        specialinvoke $u0.<org.apache.maven.model.IssueManagement: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.Model: void setIssueManagement(org.apache.maven.model.IssueManagement)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeIssueManagement(org.apache.maven.model.IssueManagement,org.apache.maven.model.IssueManagement,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModel_Scm(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        org.apache.maven.model.Scm src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.Scm getScm()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.Model: org.apache.maven.model.Scm getScm()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.Scm;

        specialinvoke $u0.<org.apache.maven.model.Scm: void <init>()>();

        tgt = $u0;

        virtualinvoke $u0.<org.apache.maven.model.Scm: void setTag(java.lang.String)>(null);

        virtualinvoke target.<org.apache.maven.model.Model: void setScm(org.apache.maven.model.Scm)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeScm(org.apache.maven.model.Scm,org.apache.maven.model.Scm,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModel_CiManagement(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        org.apache.maven.model.CiManagement src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.CiManagement getCiManagement()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.Model: org.apache.maven.model.CiManagement getCiManagement()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.CiManagement;

        specialinvoke $u0.<org.apache.maven.model.CiManagement: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.Model: void setCiManagement(org.apache.maven.model.CiManagement)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeCiManagement(org.apache.maven.model.CiManagement,org.apache.maven.model.CiManagement,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModel_Prerequisites(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        org.apache.maven.model.Prerequisites src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.Prerequisites getPrerequisites()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.Model: org.apache.maven.model.Prerequisites getPrerequisites()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.Prerequisites;

        specialinvoke $u0.<org.apache.maven.model.Prerequisites: void <init>()>();

        tgt = $u0;

        virtualinvoke $u0.<org.apache.maven.model.Prerequisites: void setMaven(java.lang.String)>(null);

        virtualinvoke target.<org.apache.maven.model.Model: void setPrerequisites(org.apache.maven.model.Prerequisites)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergePrerequisites(org.apache.maven.model.Prerequisites,org.apache.maven.model.Prerequisites,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModel_Build(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model source, target;
        org.apache.maven.model.Build src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.Build;

        specialinvoke $u0.<org.apache.maven.model.Build: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.Model: void setBuild(org.apache.maven.model.Build)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeBuild(org.apache.maven.model.Build,org.apache.maven.model.Build,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModel_Profiles(org.apache.maven.model.Model, org.apache.maven.model.Model, boolean, java.util.Map)
    {
        org.apache.maven.model.Model target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Model;

        source := @parameter1: org.apache.maven.model.Model;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getProfileKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Model: void setProfiles(java.util.List)>($stack8);

        return;
    }

    protected void mergeModelBase(org.apache.maven.model.ModelBase, org.apache.maven.model.ModelBase, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.ModelBase target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ModelBase;

        source := @parameter1: org.apache.maven.model.ModelBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase_DistributionManagement(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase_Modules(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase_Repositories(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase_PluginRepositories(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase_Dependencies(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase_Reporting(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase_DependencyManagement(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r7 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r7.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase_Properties(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeModelBase_Modules(org.apache.maven.model.ModelBase, org.apache.maven.model.ModelBase, boolean, java.util.Map)
    {
        org.apache.maven.model.ModelBase target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ModelBase;

        source := @parameter1: org.apache.maven.model.ModelBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        $stack7 = staticinvoke <ModelMerger$lambda_mergeModelBase_Modules_0__309: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.ModelBase: void setModules(java.util.List)>($stack8);

        return;
    }

    protected void mergeModelBase_Dependencies(org.apache.maven.model.ModelBase, org.apache.maven.model.ModelBase, boolean, java.util.Map)
    {
        org.apache.maven.model.ModelBase target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ModelBase;

        source := @parameter1: org.apache.maven.model.ModelBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getDependencyKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.ModelBase: void setDependencies(java.util.List)>($stack8);

        return;
    }

    protected void mergeModelBase_Repositories(org.apache.maven.model.ModelBase, org.apache.maven.model.ModelBase, boolean, java.util.Map)
    {
        org.apache.maven.model.ModelBase target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ModelBase;

        source := @parameter1: org.apache.maven.model.ModelBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getRepositoryKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.ModelBase: void setRepositories(java.util.List)>($stack8);

        return;
    }

    protected void mergeModelBase_PluginRepositories(org.apache.maven.model.ModelBase, org.apache.maven.model.ModelBase, boolean, java.util.Map)
    {
        org.apache.maven.model.ModelBase target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ModelBase;

        source := @parameter1: org.apache.maven.model.ModelBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getRepositoryKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.ModelBase: void setPluginRepositories(java.util.List)>($stack8);

        return;
    }

    protected void mergeModelBase_DistributionManagement(org.apache.maven.model.ModelBase, org.apache.maven.model.ModelBase, boolean, java.util.Map)
    {
        org.apache.maven.model.ModelBase source, target;
        org.apache.maven.model.DistributionManagement src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ModelBase;

        source := @parameter1: org.apache.maven.model.ModelBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.DistributionManagement;

        specialinvoke $u0.<org.apache.maven.model.DistributionManagement: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.ModelBase: void setDistributionManagement(org.apache.maven.model.DistributionManagement)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeDistributionManagement(org.apache.maven.model.DistributionManagement,org.apache.maven.model.DistributionManagement,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModelBase_Reporting(org.apache.maven.model.ModelBase, org.apache.maven.model.ModelBase, boolean, java.util.Map)
    {
        org.apache.maven.model.ModelBase source, target;
        org.apache.maven.model.Reporting src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ModelBase;

        source := @parameter1: org.apache.maven.model.ModelBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting getReporting()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting getReporting()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.Reporting;

        specialinvoke $u0.<org.apache.maven.model.Reporting: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.ModelBase: void setReporting(org.apache.maven.model.Reporting)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeReporting(org.apache.maven.model.Reporting,org.apache.maven.model.Reporting,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModelBase_DependencyManagement(org.apache.maven.model.ModelBase, org.apache.maven.model.ModelBase, boolean, java.util.Map)
    {
        org.apache.maven.model.ModelBase source, target;
        org.apache.maven.model.DependencyManagement src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ModelBase;

        source := @parameter1: org.apache.maven.model.ModelBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.DependencyManagement;

        specialinvoke $u0.<org.apache.maven.model.DependencyManagement: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.ModelBase: void setDependencyManagement(org.apache.maven.model.DependencyManagement)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeDependencyManagement(org.apache.maven.model.DependencyManagement,org.apache.maven.model.DependencyManagement,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeModelBase_Properties(org.apache.maven.model.ModelBase, org.apache.maven.model.ModelBase, boolean, java.util.Map)
    {
        java.util.Properties $stack6, $stack7, $stack8, $stack13, $stack14;
        boolean sourceDominant;
        org.apache.maven.model.ModelBase source, target;
        org.apache.maven.model.InputLocation $stack10, $stack11, $stack12;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ModelBase;

        source := @parameter1: org.apache.maven.model.ModelBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack6 = new java.util.Properties;

        specialinvoke $stack6.<java.util.Properties: void <init>()>();

        if sourceDominant == 0 goto label1;

        $stack13 = virtualinvoke target.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack13);

        $stack14 = virtualinvoke source.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack14);

        goto label2;

     label1:
        $stack7 = virtualinvoke source.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack7);

        $stack8 = virtualinvoke target.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack8);

     label2:
        virtualinvoke target.<org.apache.maven.model.ModelBase: void setProperties(java.util.Properties)>($stack6);

        $stack10 = virtualinvoke target.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("properties");

        $stack11 = virtualinvoke source.<org.apache.maven.model.ModelBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("properties");

        $stack12 = staticinvoke <org.apache.maven.model.InputLocation: org.apache.maven.model.InputLocation merge(org.apache.maven.model.InputLocation,org.apache.maven.model.InputLocation,boolean)>($stack10, $stack11, sourceDominant);

        virtualinvoke target.<org.apache.maven.model.ModelBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("properties", $stack12);

        return;
    }

    protected void mergeDistributionManagement(org.apache.maven.model.DistributionManagement, org.apache.maven.model.DistributionManagement, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.DistributionManagement target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3, $r4;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DistributionManagement;

        source := @parameter1: org.apache.maven.model.DistributionManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeDistributionManagement_Repository(org.apache.maven.model.DistributionManagement,org.apache.maven.model.DistributionManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeDistributionManagement_SnapshotRepository(org.apache.maven.model.DistributionManagement,org.apache.maven.model.DistributionManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeDistributionManagement_Site(org.apache.maven.model.DistributionManagement,org.apache.maven.model.DistributionManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeDistributionManagement_Status(org.apache.maven.model.DistributionManagement,org.apache.maven.model.DistributionManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeDistributionManagement_DownloadUrl(org.apache.maven.model.DistributionManagement,org.apache.maven.model.DistributionManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeDistributionManagement_Repository(org.apache.maven.model.DistributionManagement, org.apache.maven.model.DistributionManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.DistributionManagement source, target;
        org.apache.maven.model.DeploymentRepository src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DistributionManagement;

        source := @parameter1: org.apache.maven.model.DistributionManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getRepository()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getRepository()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.DeploymentRepository;

        specialinvoke $u0.<org.apache.maven.model.DeploymentRepository: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.DistributionManagement: void setRepository(org.apache.maven.model.DeploymentRepository)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeDeploymentRepository(org.apache.maven.model.DeploymentRepository,org.apache.maven.model.DeploymentRepository,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeDistributionManagement_SnapshotRepository(org.apache.maven.model.DistributionManagement, org.apache.maven.model.DistributionManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.DistributionManagement source, target;
        org.apache.maven.model.DeploymentRepository src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DistributionManagement;

        source := @parameter1: org.apache.maven.model.DistributionManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getSnapshotRepository()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getSnapshotRepository()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.DeploymentRepository;

        specialinvoke $u0.<org.apache.maven.model.DeploymentRepository: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.DistributionManagement: void setSnapshotRepository(org.apache.maven.model.DeploymentRepository)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeDeploymentRepository(org.apache.maven.model.DeploymentRepository,org.apache.maven.model.DeploymentRepository,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeDistributionManagement_Site(org.apache.maven.model.DistributionManagement, org.apache.maven.model.DistributionManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.DistributionManagement source, target;
        org.apache.maven.model.Site src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DistributionManagement;

        source := @parameter1: org.apache.maven.model.DistributionManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Site getSite()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Site getSite()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.Site;

        specialinvoke $u0.<org.apache.maven.model.Site: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.DistributionManagement: void setSite(org.apache.maven.model.Site)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeSite(org.apache.maven.model.Site,org.apache.maven.model.Site,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeDistributionManagement_Status(org.apache.maven.model.DistributionManagement, org.apache.maven.model.DistributionManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.DistributionManagement source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DistributionManagement;

        source := @parameter1: org.apache.maven.model.DistributionManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.DistributionManagement: java.lang.String getStatus()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.DistributionManagement: java.lang.String getStatus()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.DistributionManagement: void setStatus(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("status");

        virtualinvoke target.<org.apache.maven.model.DistributionManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("status", $stack8);

     label2:
        return;
    }

    protected void mergeDistributionManagement_DownloadUrl(org.apache.maven.model.DistributionManagement, org.apache.maven.model.DistributionManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.DistributionManagement source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DistributionManagement;

        source := @parameter1: org.apache.maven.model.DistributionManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.DistributionManagement: java.lang.String getDownloadUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.DistributionManagement: java.lang.String getDownloadUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.DistributionManagement: void setDownloadUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("downloadUrl");

        virtualinvoke target.<org.apache.maven.model.DistributionManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("downloadUrl", $stack8);

     label2:
        return;
    }

    protected void mergeRelocation(org.apache.maven.model.Relocation, org.apache.maven.model.Relocation, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Relocation target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Relocation;

        source := @parameter1: org.apache.maven.model.Relocation;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeRelocation_GroupId(org.apache.maven.model.Relocation,org.apache.maven.model.Relocation,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeRelocation_ArtifactId(org.apache.maven.model.Relocation,org.apache.maven.model.Relocation,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeRelocation_Version(org.apache.maven.model.Relocation,org.apache.maven.model.Relocation,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeRelocation_Message(org.apache.maven.model.Relocation,org.apache.maven.model.Relocation,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeRelocation_GroupId(org.apache.maven.model.Relocation, org.apache.maven.model.Relocation, boolean, java.util.Map)
    {
        org.apache.maven.model.Relocation source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Relocation;

        source := @parameter1: org.apache.maven.model.Relocation;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Relocation: java.lang.String getGroupId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Relocation: java.lang.String getGroupId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Relocation: void setGroupId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Relocation: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("groupId");

        virtualinvoke target.<org.apache.maven.model.Relocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $stack8);

     label2:
        return;
    }

    protected void mergeRelocation_ArtifactId(org.apache.maven.model.Relocation, org.apache.maven.model.Relocation, boolean, java.util.Map)
    {
        org.apache.maven.model.Relocation source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Relocation;

        source := @parameter1: org.apache.maven.model.Relocation;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Relocation: java.lang.String getArtifactId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Relocation: java.lang.String getArtifactId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Relocation: void setArtifactId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Relocation: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("artifactId");

        virtualinvoke target.<org.apache.maven.model.Relocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $stack8);

     label2:
        return;
    }

    protected void mergeRelocation_Version(org.apache.maven.model.Relocation, org.apache.maven.model.Relocation, boolean, java.util.Map)
    {
        org.apache.maven.model.Relocation source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Relocation;

        source := @parameter1: org.apache.maven.model.Relocation;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Relocation: java.lang.String getVersion()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Relocation: java.lang.String getVersion()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Relocation: void setVersion(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Relocation: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        virtualinvoke target.<org.apache.maven.model.Relocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $stack8);

     label2:
        return;
    }

    protected void mergeRelocation_Message(org.apache.maven.model.Relocation, org.apache.maven.model.Relocation, boolean, java.util.Map)
    {
        org.apache.maven.model.Relocation source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Relocation;

        source := @parameter1: org.apache.maven.model.Relocation;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Relocation: java.lang.String getMessage()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Relocation: java.lang.String getMessage()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Relocation: void setMessage(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Relocation: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("message");

        virtualinvoke target.<org.apache.maven.model.Relocation: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("message", $stack8);

     label2:
        return;
    }

    protected void mergeDeploymentRepository(org.apache.maven.model.DeploymentRepository, org.apache.maven.model.DeploymentRepository, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.DeploymentRepository target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3;
        org.apache.maven.model.Repository $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DeploymentRepository;

        source := @parameter1: org.apache.maven.model.DeploymentRepository;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.Repository) target;

        $r2 = (org.apache.maven.model.Repository) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeRepository(org.apache.maven.model.Repository,org.apache.maven.model.Repository,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeDeploymentRepository_UniqueVersion(org.apache.maven.model.DeploymentRepository,org.apache.maven.model.DeploymentRepository,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeDeploymentRepository_UniqueVersion(org.apache.maven.model.DeploymentRepository, org.apache.maven.model.DeploymentRepository, boolean, java.util.Map)
    {
        boolean sourceDominant, $stack5;
        org.apache.maven.model.DeploymentRepository target, source;
        org.apache.maven.model.InputLocation $stack7;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DeploymentRepository;

        source := @parameter1: org.apache.maven.model.DeploymentRepository;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        if sourceDominant == 0 goto label1;

        $stack5 = virtualinvoke source.<org.apache.maven.model.DeploymentRepository: boolean isUniqueVersion()>();

        virtualinvoke target.<org.apache.maven.model.DeploymentRepository: void setUniqueVersion(boolean)>($stack5);

        $stack7 = virtualinvoke source.<org.apache.maven.model.DeploymentRepository: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("uniqueVersion");

        virtualinvoke target.<org.apache.maven.model.DeploymentRepository: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("uniqueVersion", $stack7);

     label1:
        return;
    }

    protected void mergeSite(org.apache.maven.model.Site, org.apache.maven.model.Site, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Site target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Site;

        source := @parameter1: org.apache.maven.model.Site;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeSite_ChildSiteUrlInheritAppendPath(org.apache.maven.model.Site,org.apache.maven.model.Site,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeSite_Id(org.apache.maven.model.Site,org.apache.maven.model.Site,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeSite_Name(org.apache.maven.model.Site,org.apache.maven.model.Site,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeSite_Url(org.apache.maven.model.Site,org.apache.maven.model.Site,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeSite_ChildSiteUrlInheritAppendPath(org.apache.maven.model.Site, org.apache.maven.model.Site, boolean, java.util.Map)
    {
        org.apache.maven.model.Site source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Site;

        source := @parameter1: org.apache.maven.model.Site;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Site: java.lang.String getChildSiteUrlInheritAppendPath()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Site: java.lang.String getChildSiteUrlInheritAppendPath()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Site: void setChildSiteUrlInheritAppendPath(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Site: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("child.site.url.inherit.append.path");

        virtualinvoke target.<org.apache.maven.model.Site: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("child.site.url.inherit.append.path", $stack8);

     label2:
        return;
    }

    protected void mergeSite_Id(org.apache.maven.model.Site, org.apache.maven.model.Site, boolean, java.util.Map)
    {
        org.apache.maven.model.Site source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Site;

        source := @parameter1: org.apache.maven.model.Site;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Site: java.lang.String getId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Site: java.lang.String getId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Site: void setId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Site: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("id");

        virtualinvoke target.<org.apache.maven.model.Site: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $stack8);

     label2:
        return;
    }

    protected void mergeSite_Name(org.apache.maven.model.Site, org.apache.maven.model.Site, boolean, java.util.Map)
    {
        org.apache.maven.model.Site source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Site;

        source := @parameter1: org.apache.maven.model.Site;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Site: java.lang.String getName()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Site: java.lang.String getName()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Site: void setName(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Site: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("name");

        virtualinvoke target.<org.apache.maven.model.Site: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $stack8);

     label2:
        return;
    }

    protected void mergeSite_Url(org.apache.maven.model.Site, org.apache.maven.model.Site, boolean, java.util.Map)
    {
        org.apache.maven.model.Site source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Site;

        source := @parameter1: org.apache.maven.model.Site;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Site: java.lang.String getUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Site: java.lang.String getUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Site: void setUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Site: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("url");

        virtualinvoke target.<org.apache.maven.model.Site: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $stack8);

     label2:
        return;
    }

    protected void mergeRepository(org.apache.maven.model.Repository, org.apache.maven.model.Repository, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Repository target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3, $r4;
        org.apache.maven.model.RepositoryBase $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Repository;

        source := @parameter1: org.apache.maven.model.Repository;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.RepositoryBase) target;

        $r2 = (org.apache.maven.model.RepositoryBase) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryBase(org.apache.maven.model.RepositoryBase,org.apache.maven.model.RepositoryBase,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeRepository_Releases(org.apache.maven.model.Repository,org.apache.maven.model.Repository,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeRepository_Snapshots(org.apache.maven.model.Repository,org.apache.maven.model.Repository,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeRepository_Releases(org.apache.maven.model.Repository, org.apache.maven.model.Repository, boolean, java.util.Map)
    {
        org.apache.maven.model.Repository source, target;
        org.apache.maven.model.RepositoryPolicy src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Repository;

        source := @parameter1: org.apache.maven.model.Repository;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.RepositoryPolicy;

        specialinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.Repository: void setReleases(org.apache.maven.model.RepositoryPolicy)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,org.apache.maven.model.RepositoryPolicy,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeRepository_Snapshots(org.apache.maven.model.Repository, org.apache.maven.model.Repository, boolean, java.util.Map)
    {
        org.apache.maven.model.Repository source, target;
        org.apache.maven.model.RepositoryPolicy src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Repository;

        source := @parameter1: org.apache.maven.model.Repository;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.RepositoryPolicy;

        specialinvoke $u0.<org.apache.maven.model.RepositoryPolicy: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.Repository: void setSnapshots(org.apache.maven.model.RepositoryPolicy)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy,org.apache.maven.model.RepositoryPolicy,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergeRepositoryBase(org.apache.maven.model.RepositoryBase, org.apache.maven.model.RepositoryBase, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.RepositoryBase target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.RepositoryBase;

        source := @parameter1: org.apache.maven.model.RepositoryBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryBase_Id(org.apache.maven.model.RepositoryBase,org.apache.maven.model.RepositoryBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryBase_Name(org.apache.maven.model.RepositoryBase,org.apache.maven.model.RepositoryBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryBase_Url(org.apache.maven.model.RepositoryBase,org.apache.maven.model.RepositoryBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryBase_Layout(org.apache.maven.model.RepositoryBase,org.apache.maven.model.RepositoryBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeRepositoryBase_Id(org.apache.maven.model.RepositoryBase, org.apache.maven.model.RepositoryBase, boolean, java.util.Map)
    {
        org.apache.maven.model.RepositoryBase source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.RepositoryBase;

        source := @parameter1: org.apache.maven.model.RepositoryBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.RepositoryBase: java.lang.String getId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.RepositoryBase: java.lang.String getId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.RepositoryBase: void setId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.RepositoryBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("id");

        virtualinvoke target.<org.apache.maven.model.RepositoryBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $stack8);

     label2:
        return;
    }

    protected void mergeRepositoryBase_Url(org.apache.maven.model.RepositoryBase, org.apache.maven.model.RepositoryBase, boolean, java.util.Map)
    {
        org.apache.maven.model.RepositoryBase source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.RepositoryBase;

        source := @parameter1: org.apache.maven.model.RepositoryBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.RepositoryBase: java.lang.String getUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.RepositoryBase: java.lang.String getUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.RepositoryBase: void setUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.RepositoryBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("url");

        virtualinvoke target.<org.apache.maven.model.RepositoryBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $stack8);

     label2:
        return;
    }

    protected void mergeRepositoryBase_Name(org.apache.maven.model.RepositoryBase, org.apache.maven.model.RepositoryBase, boolean, java.util.Map)
    {
        org.apache.maven.model.RepositoryBase source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.RepositoryBase;

        source := @parameter1: org.apache.maven.model.RepositoryBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.RepositoryBase: java.lang.String getName()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.RepositoryBase: java.lang.String getName()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.RepositoryBase: void setName(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.RepositoryBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("name");

        virtualinvoke target.<org.apache.maven.model.RepositoryBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $stack8);

     label2:
        return;
    }

    protected void mergeRepositoryBase_Layout(org.apache.maven.model.RepositoryBase, org.apache.maven.model.RepositoryBase, boolean, java.util.Map)
    {
        org.apache.maven.model.RepositoryBase source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.RepositoryBase;

        source := @parameter1: org.apache.maven.model.RepositoryBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.RepositoryBase: java.lang.String getLayout()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.RepositoryBase: java.lang.String getLayout()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.RepositoryBase: void setLayout(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.RepositoryBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("layout");

        virtualinvoke target.<org.apache.maven.model.RepositoryBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("layout", $stack8);

     label2:
        return;
    }

    protected void mergeRepositoryPolicy(org.apache.maven.model.RepositoryPolicy, org.apache.maven.model.RepositoryPolicy, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.RepositoryPolicy target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.RepositoryPolicy;

        source := @parameter1: org.apache.maven.model.RepositoryPolicy;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryPolicy_Enabled(org.apache.maven.model.RepositoryPolicy,org.apache.maven.model.RepositoryPolicy,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryPolicy_UpdatePolicy(org.apache.maven.model.RepositoryPolicy,org.apache.maven.model.RepositoryPolicy,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeRepositoryPolicy_ChecksumPolicy(org.apache.maven.model.RepositoryPolicy,org.apache.maven.model.RepositoryPolicy,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeRepositoryPolicy_Enabled(org.apache.maven.model.RepositoryPolicy, org.apache.maven.model.RepositoryPolicy, boolean, java.util.Map)
    {
        org.apache.maven.model.RepositoryPolicy source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.RepositoryPolicy;

        source := @parameter1: org.apache.maven.model.RepositoryPolicy;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.RepositoryPolicy: java.lang.String getEnabled()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.RepositoryPolicy: java.lang.String getEnabled()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.RepositoryPolicy: void setEnabled(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.RepositoryPolicy: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("enabled");

        virtualinvoke target.<org.apache.maven.model.RepositoryPolicy: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("enabled", $stack8);

     label2:
        return;
    }

    protected void mergeRepositoryPolicy_UpdatePolicy(org.apache.maven.model.RepositoryPolicy, org.apache.maven.model.RepositoryPolicy, boolean, java.util.Map)
    {
        org.apache.maven.model.RepositoryPolicy source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.RepositoryPolicy;

        source := @parameter1: org.apache.maven.model.RepositoryPolicy;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.RepositoryPolicy: void setUpdatePolicy(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.RepositoryPolicy: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("updatePolicy");

        virtualinvoke target.<org.apache.maven.model.RepositoryPolicy: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("updatePolicy", $stack8);

     label2:
        return;
    }

    protected void mergeRepositoryPolicy_ChecksumPolicy(org.apache.maven.model.RepositoryPolicy, org.apache.maven.model.RepositoryPolicy, boolean, java.util.Map)
    {
        org.apache.maven.model.RepositoryPolicy source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.RepositoryPolicy;

        source := @parameter1: org.apache.maven.model.RepositoryPolicy;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.RepositoryPolicy: void setChecksumPolicy(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.RepositoryPolicy: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("checksumPolicy");

        virtualinvoke target.<org.apache.maven.model.RepositoryPolicy: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("checksumPolicy", $stack8);

     label2:
        return;
    }

    protected void mergeDependency(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Dependency target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeDependency_GroupId(org.apache.maven.model.Dependency,org.apache.maven.model.Dependency,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeDependency_ArtifactId(org.apache.maven.model.Dependency,org.apache.maven.model.Dependency,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeDependency_Version(org.apache.maven.model.Dependency,org.apache.maven.model.Dependency,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeDependency_Type(org.apache.maven.model.Dependency,org.apache.maven.model.Dependency,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeDependency_Classifier(org.apache.maven.model.Dependency,org.apache.maven.model.Dependency,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeDependency_Scope(org.apache.maven.model.Dependency,org.apache.maven.model.Dependency,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergeDependency_SystemPath(org.apache.maven.model.Dependency,org.apache.maven.model.Dependency,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r7 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r7.<org.apache.maven.model.merge.ModelMerger: void mergeDependency_Optional(org.apache.maven.model.Dependency,org.apache.maven.model.Dependency,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r8 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r8.<org.apache.maven.model.merge.ModelMerger: void mergeDependency_Exclusions(org.apache.maven.model.Dependency,org.apache.maven.model.Dependency,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeDependency_GroupId(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        org.apache.maven.model.Dependency source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Dependency: void setGroupId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("groupId");

        virtualinvoke target.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $stack8);

     label2:
        return;
    }

    protected void mergeDependency_ArtifactId(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        org.apache.maven.model.Dependency source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Dependency: void setArtifactId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("artifactId");

        virtualinvoke target.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $stack8);

     label2:
        return;
    }

    protected void mergeDependency_Version(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        org.apache.maven.model.Dependency source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Dependency: void setVersion(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        virtualinvoke target.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $stack8);

     label2:
        return;
    }

    protected void mergeDependency_Type(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        org.apache.maven.model.Dependency source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Dependency: void setType(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("type");

        virtualinvoke target.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("type", $stack8);

     label2:
        return;
    }

    protected void mergeDependency_Classifier(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        org.apache.maven.model.Dependency source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Dependency: void setClassifier(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("classifier");

        virtualinvoke target.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("classifier", $stack8);

     label2:
        return;
    }

    protected void mergeDependency_Scope(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        org.apache.maven.model.Dependency source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Dependency: void setScope(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("scope");

        virtualinvoke target.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("scope", $stack8);

     label2:
        return;
    }

    protected void mergeDependency_SystemPath(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        org.apache.maven.model.Dependency source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Dependency: void setSystemPath(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("systemPath");

        virtualinvoke target.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("systemPath", $stack8);

     label2:
        return;
    }

    protected void mergeDependency_Optional(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        org.apache.maven.model.Dependency source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Dependency: java.lang.String getOptional()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Dependency: java.lang.String getOptional()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Dependency: void setOptional(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Dependency: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("optional");

        virtualinvoke target.<org.apache.maven.model.Dependency: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("optional", $stack8);

     label2:
        return;
    }

    protected void mergeDependency_Exclusions(org.apache.maven.model.Dependency, org.apache.maven.model.Dependency, boolean, java.util.Map)
    {
        org.apache.maven.model.Dependency target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Dependency;

        source := @parameter1: org.apache.maven.model.Dependency;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getExclusionKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Dependency: void setExclusions(java.util.List)>($stack8);

        return;
    }

    protected void mergeExclusion(org.apache.maven.model.Exclusion, org.apache.maven.model.Exclusion, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Exclusion target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Exclusion;

        source := @parameter1: org.apache.maven.model.Exclusion;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeExclusion_GroupId(org.apache.maven.model.Exclusion,org.apache.maven.model.Exclusion,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeExclusion_ArtifactId(org.apache.maven.model.Exclusion,org.apache.maven.model.Exclusion,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeExclusion_GroupId(org.apache.maven.model.Exclusion, org.apache.maven.model.Exclusion, boolean, java.util.Map)
    {
        org.apache.maven.model.Exclusion source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Exclusion;

        source := @parameter1: org.apache.maven.model.Exclusion;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Exclusion: java.lang.String getGroupId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Exclusion: java.lang.String getGroupId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Exclusion: void setGroupId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Exclusion: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("groupId");

        virtualinvoke target.<org.apache.maven.model.Exclusion: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $stack8);

     label2:
        return;
    }

    protected void mergeExclusion_ArtifactId(org.apache.maven.model.Exclusion, org.apache.maven.model.Exclusion, boolean, java.util.Map)
    {
        org.apache.maven.model.Exclusion source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Exclusion;

        source := @parameter1: org.apache.maven.model.Exclusion;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Exclusion: java.lang.String getArtifactId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Exclusion: java.lang.String getArtifactId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Exclusion: void setArtifactId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Exclusion: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("artifactId");

        virtualinvoke target.<org.apache.maven.model.Exclusion: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $stack8);

     label2:
        return;
    }

    protected void mergeReporting(org.apache.maven.model.Reporting, org.apache.maven.model.Reporting, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Reporting target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Reporting;

        source := @parameter1: org.apache.maven.model.Reporting;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeReporting_OutputDirectory(org.apache.maven.model.Reporting,org.apache.maven.model.Reporting,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeReporting_ExcludeDefaults(org.apache.maven.model.Reporting,org.apache.maven.model.Reporting,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeReporting_Plugins(org.apache.maven.model.Reporting,org.apache.maven.model.Reporting,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeReporting_OutputDirectory(org.apache.maven.model.Reporting, org.apache.maven.model.Reporting, boolean, java.util.Map)
    {
        org.apache.maven.model.Reporting source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Reporting;

        source := @parameter1: org.apache.maven.model.Reporting;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Reporting: java.lang.String getOutputDirectory()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Reporting: java.lang.String getOutputDirectory()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Reporting: void setOutputDirectory(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("outputDirectory");

        virtualinvoke target.<org.apache.maven.model.Reporting: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("outputDirectory", $stack8);

     label2:
        return;
    }

    protected void mergeReporting_ExcludeDefaults(org.apache.maven.model.Reporting, org.apache.maven.model.Reporting, boolean, java.util.Map)
    {
        org.apache.maven.model.Reporting source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Reporting;

        source := @parameter1: org.apache.maven.model.Reporting;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Reporting: java.lang.String getExcludeDefaults()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Reporting: java.lang.String getExcludeDefaults()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Reporting: void setExcludeDefaults(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("excludeDefaults");

        virtualinvoke target.<org.apache.maven.model.Reporting: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("excludeDefaults", $stack8);

     label2:
        return;
    }

    protected void mergeReporting_Plugins(org.apache.maven.model.Reporting, org.apache.maven.model.Reporting, boolean, java.util.Map)
    {
        org.apache.maven.model.Reporting target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Reporting;

        source := @parameter1: org.apache.maven.model.Reporting;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getReportPluginKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Reporting: void setPlugins(java.util.List)>($stack8);

        return;
    }

    protected void mergeReportPlugin(org.apache.maven.model.ReportPlugin, org.apache.maven.model.ReportPlugin, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.ReportPlugin target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3, $r4, $r5, $r6;
        org.apache.maven.model.ConfigurationContainer $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ReportPlugin;

        source := @parameter1: org.apache.maven.model.ReportPlugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.ConfigurationContainer) target;

        $r2 = (org.apache.maven.model.ConfigurationContainer) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeConfigurationContainer(org.apache.maven.model.ConfigurationContainer,org.apache.maven.model.ConfigurationContainer,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeReportPlugin_GroupId(org.apache.maven.model.ReportPlugin,org.apache.maven.model.ReportPlugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeReportPlugin_ArtifactId(org.apache.maven.model.ReportPlugin,org.apache.maven.model.ReportPlugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeReportPlugin_Version(org.apache.maven.model.ReportPlugin,org.apache.maven.model.ReportPlugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergeReportPlugin_ReportSets(org.apache.maven.model.ReportPlugin,org.apache.maven.model.ReportPlugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeReportPlugin_GroupId(org.apache.maven.model.ReportPlugin, org.apache.maven.model.ReportPlugin, boolean, java.util.Map)
    {
        org.apache.maven.model.ReportPlugin source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ReportPlugin;

        source := @parameter1: org.apache.maven.model.ReportPlugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.ReportPlugin: void setGroupId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.ReportPlugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("groupId");

        virtualinvoke target.<org.apache.maven.model.ReportPlugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $stack8);

     label2:
        return;
    }

    protected void mergeReportPlugin_ArtifactId(org.apache.maven.model.ReportPlugin, org.apache.maven.model.ReportPlugin, boolean, java.util.Map)
    {
        org.apache.maven.model.ReportPlugin source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ReportPlugin;

        source := @parameter1: org.apache.maven.model.ReportPlugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.ReportPlugin: void setArtifactId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.ReportPlugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("artifactId");

        virtualinvoke target.<org.apache.maven.model.ReportPlugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $stack8);

     label2:
        return;
    }

    protected void mergeReportPlugin_Version(org.apache.maven.model.ReportPlugin, org.apache.maven.model.ReportPlugin, boolean, java.util.Map)
    {
        org.apache.maven.model.ReportPlugin source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ReportPlugin;

        source := @parameter1: org.apache.maven.model.ReportPlugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.ReportPlugin: java.lang.String getVersion()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.ReportPlugin: java.lang.String getVersion()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.ReportPlugin: void setVersion(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.ReportPlugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        virtualinvoke target.<org.apache.maven.model.ReportPlugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $stack8);

     label2:
        return;
    }

    protected void mergeReportPlugin_ReportSets(org.apache.maven.model.ReportPlugin, org.apache.maven.model.ReportPlugin, boolean, java.util.Map)
    {
        org.apache.maven.model.ReportPlugin target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ReportPlugin;

        source := @parameter1: org.apache.maven.model.ReportPlugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getReportSetKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.ReportPlugin: void setReportSets(java.util.List)>($stack8);

        return;
    }

    protected void mergeReportSet(org.apache.maven.model.ReportSet, org.apache.maven.model.ReportSet, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.ReportSet target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3, $r4;
        org.apache.maven.model.ConfigurationContainer $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ReportSet;

        source := @parameter1: org.apache.maven.model.ReportSet;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.ConfigurationContainer) target;

        $r2 = (org.apache.maven.model.ConfigurationContainer) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeConfigurationContainer(org.apache.maven.model.ConfigurationContainer,org.apache.maven.model.ConfigurationContainer,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeReportSet_Id(org.apache.maven.model.ReportSet,org.apache.maven.model.ReportSet,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeReportSet_Reports(org.apache.maven.model.ReportSet,org.apache.maven.model.ReportSet,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeReportSet_Id(org.apache.maven.model.ReportSet, org.apache.maven.model.ReportSet, boolean, java.util.Map)
    {
        org.apache.maven.model.ReportSet source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ReportSet;

        source := @parameter1: org.apache.maven.model.ReportSet;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.ReportSet: void setId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.ReportSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("id");

        virtualinvoke target.<org.apache.maven.model.ReportSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $stack8);

     label2:
        return;
    }

    protected void mergeReportSet_Reports(org.apache.maven.model.ReportSet, org.apache.maven.model.ReportSet, boolean, java.util.Map)
    {
        org.apache.maven.model.ReportSet target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ReportSet;

        source := @parameter1: org.apache.maven.model.ReportSet;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        $stack7 = staticinvoke <ModelMerger$lambda_mergeReportSet_Reports_1__310: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.ReportSet: void setReports(java.util.List)>($stack8);

        return;
    }

    protected void mergeDependencyManagement(org.apache.maven.model.DependencyManagement, org.apache.maven.model.DependencyManagement, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.DependencyManagement target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DependencyManagement;

        source := @parameter1: org.apache.maven.model.DependencyManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeDependencyManagement_Dependencies(org.apache.maven.model.DependencyManagement,org.apache.maven.model.DependencyManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeDependencyManagement_Dependencies(org.apache.maven.model.DependencyManagement, org.apache.maven.model.DependencyManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.DependencyManagement target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.DependencyManagement;

        source := @parameter1: org.apache.maven.model.DependencyManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getDependencyKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.DependencyManagement: void setDependencies(java.util.List)>($stack8);

        return;
    }

    protected void mergeParent(org.apache.maven.model.Parent, org.apache.maven.model.Parent, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Parent target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Parent;

        source := @parameter1: org.apache.maven.model.Parent;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeParent_GroupId(org.apache.maven.model.Parent,org.apache.maven.model.Parent,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeParent_ArtifactId(org.apache.maven.model.Parent,org.apache.maven.model.Parent,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeParent_Version(org.apache.maven.model.Parent,org.apache.maven.model.Parent,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeParent_RelativePath(org.apache.maven.model.Parent,org.apache.maven.model.Parent,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeParent_GroupId(org.apache.maven.model.Parent, org.apache.maven.model.Parent, boolean, java.util.Map)
    {
        org.apache.maven.model.Parent source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Parent;

        source := @parameter1: org.apache.maven.model.Parent;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Parent: void setGroupId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Parent: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("groupId");

        virtualinvoke target.<org.apache.maven.model.Parent: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $stack8);

     label2:
        return;
    }

    protected void mergeParent_ArtifactId(org.apache.maven.model.Parent, org.apache.maven.model.Parent, boolean, java.util.Map)
    {
        org.apache.maven.model.Parent source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Parent;

        source := @parameter1: org.apache.maven.model.Parent;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Parent: void setArtifactId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Parent: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("artifactId");

        virtualinvoke target.<org.apache.maven.model.Parent: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $stack8);

     label2:
        return;
    }

    protected void mergeParent_Version(org.apache.maven.model.Parent, org.apache.maven.model.Parent, boolean, java.util.Map)
    {
        org.apache.maven.model.Parent source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Parent;

        source := @parameter1: org.apache.maven.model.Parent;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Parent: void setVersion(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Parent: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        virtualinvoke target.<org.apache.maven.model.Parent: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $stack8);

     label2:
        return;
    }

    protected void mergeParent_RelativePath(org.apache.maven.model.Parent, org.apache.maven.model.Parent, boolean, java.util.Map)
    {
        org.apache.maven.model.Parent source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Parent;

        source := @parameter1: org.apache.maven.model.Parent;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Parent: void setRelativePath(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Parent: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("relativePath");

        virtualinvoke target.<org.apache.maven.model.Parent: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("relativePath", $stack8);

     label2:
        return;
    }

    protected void mergeOrganization(org.apache.maven.model.Organization, org.apache.maven.model.Organization, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Organization target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Organization;

        source := @parameter1: org.apache.maven.model.Organization;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeOrganization_Name(org.apache.maven.model.Organization,org.apache.maven.model.Organization,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeOrganization_Url(org.apache.maven.model.Organization,org.apache.maven.model.Organization,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeOrganization_Name(org.apache.maven.model.Organization, org.apache.maven.model.Organization, boolean, java.util.Map)
    {
        org.apache.maven.model.Organization source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Organization;

        source := @parameter1: org.apache.maven.model.Organization;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Organization: java.lang.String getName()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Organization: java.lang.String getName()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Organization: void setName(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Organization: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("name");

        virtualinvoke target.<org.apache.maven.model.Organization: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $stack8);

     label2:
        return;
    }

    protected void mergeOrganization_Url(org.apache.maven.model.Organization, org.apache.maven.model.Organization, boolean, java.util.Map)
    {
        org.apache.maven.model.Organization source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Organization;

        source := @parameter1: org.apache.maven.model.Organization;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Organization: java.lang.String getUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Organization: java.lang.String getUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Organization: void setUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Organization: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("url");

        virtualinvoke target.<org.apache.maven.model.Organization: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $stack8);

     label2:
        return;
    }

    protected void mergeLicense(org.apache.maven.model.License, org.apache.maven.model.License, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.License target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.License;

        source := @parameter1: org.apache.maven.model.License;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeLicense_Name(org.apache.maven.model.License,org.apache.maven.model.License,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeLicense_Url(org.apache.maven.model.License,org.apache.maven.model.License,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeLicense_Distribution(org.apache.maven.model.License,org.apache.maven.model.License,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeLicense_Comments(org.apache.maven.model.License,org.apache.maven.model.License,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeLicense_Name(org.apache.maven.model.License, org.apache.maven.model.License, boolean, java.util.Map)
    {
        org.apache.maven.model.License source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.License;

        source := @parameter1: org.apache.maven.model.License;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.License: java.lang.String getName()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.License: java.lang.String getName()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.License: void setName(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.License: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("name");

        virtualinvoke target.<org.apache.maven.model.License: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $stack8);

     label2:
        return;
    }

    protected void mergeLicense_Url(org.apache.maven.model.License, org.apache.maven.model.License, boolean, java.util.Map)
    {
        org.apache.maven.model.License source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.License;

        source := @parameter1: org.apache.maven.model.License;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.License: java.lang.String getUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.License: java.lang.String getUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.License: void setUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.License: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("url");

        virtualinvoke target.<org.apache.maven.model.License: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $stack8);

     label2:
        return;
    }

    protected void mergeLicense_Distribution(org.apache.maven.model.License, org.apache.maven.model.License, boolean, java.util.Map)
    {
        org.apache.maven.model.License source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.License;

        source := @parameter1: org.apache.maven.model.License;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.License: java.lang.String getDistribution()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.License: java.lang.String getDistribution()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.License: void setDistribution(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.License: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("distribution");

        virtualinvoke target.<org.apache.maven.model.License: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("distribution", $stack8);

     label2:
        return;
    }

    protected void mergeLicense_Comments(org.apache.maven.model.License, org.apache.maven.model.License, boolean, java.util.Map)
    {
        org.apache.maven.model.License source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.License;

        source := @parameter1: org.apache.maven.model.License;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.License: java.lang.String getComments()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.License: java.lang.String getComments()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.License: void setComments(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.License: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("comments");

        virtualinvoke target.<org.apache.maven.model.License: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("comments", $stack8);

     label2:
        return;
    }

    protected void mergeMailingList(org.apache.maven.model.MailingList, org.apache.maven.model.MailingList, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.MailingList target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3, $r4;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.MailingList;

        source := @parameter1: org.apache.maven.model.MailingList;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeMailingList_Name(org.apache.maven.model.MailingList,org.apache.maven.model.MailingList,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeMailingList_Subscribe(org.apache.maven.model.MailingList,org.apache.maven.model.MailingList,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeMailingList_Unsubscribe(org.apache.maven.model.MailingList,org.apache.maven.model.MailingList,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeMailingList_Post(org.apache.maven.model.MailingList,org.apache.maven.model.MailingList,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeMailingList_OtherArchives(org.apache.maven.model.MailingList,org.apache.maven.model.MailingList,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeMailingList_Name(org.apache.maven.model.MailingList, org.apache.maven.model.MailingList, boolean, java.util.Map)
    {
        org.apache.maven.model.MailingList source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.MailingList;

        source := @parameter1: org.apache.maven.model.MailingList;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.MailingList: java.lang.String getName()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.MailingList: java.lang.String getName()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.MailingList: void setName(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.MailingList: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("name");

        virtualinvoke target.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $stack8);

     label2:
        return;
    }

    protected void mergeMailingList_Subscribe(org.apache.maven.model.MailingList, org.apache.maven.model.MailingList, boolean, java.util.Map)
    {
        org.apache.maven.model.MailingList source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.MailingList;

        source := @parameter1: org.apache.maven.model.MailingList;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.MailingList: java.lang.String getSubscribe()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.MailingList: java.lang.String getSubscribe()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.MailingList: void setSubscribe(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.MailingList: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("subscribe");

        virtualinvoke target.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("subscribe", $stack8);

     label2:
        return;
    }

    protected void mergeMailingList_Unsubscribe(org.apache.maven.model.MailingList, org.apache.maven.model.MailingList, boolean, java.util.Map)
    {
        org.apache.maven.model.MailingList source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.MailingList;

        source := @parameter1: org.apache.maven.model.MailingList;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.MailingList: java.lang.String getUnsubscribe()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.MailingList: java.lang.String getUnsubscribe()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.MailingList: void setUnsubscribe(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.MailingList: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("unsubscribe");

        virtualinvoke target.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("unsubscribe", $stack8);

     label2:
        return;
    }

    protected void mergeMailingList_Post(org.apache.maven.model.MailingList, org.apache.maven.model.MailingList, boolean, java.util.Map)
    {
        org.apache.maven.model.MailingList source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.MailingList;

        source := @parameter1: org.apache.maven.model.MailingList;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.MailingList: java.lang.String getPost()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.MailingList: java.lang.String getPost()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.MailingList: void setPost(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.MailingList: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("post");

        virtualinvoke target.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("post", $stack8);

     label2:
        return;
    }

    protected void mergeMailingList_Archive(org.apache.maven.model.MailingList, org.apache.maven.model.MailingList, boolean, java.util.Map)
    {
        org.apache.maven.model.MailingList source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.MailingList;

        source := @parameter1: org.apache.maven.model.MailingList;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.MailingList: java.lang.String getArchive()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.MailingList: java.lang.String getArchive()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.MailingList: void setArchive(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.MailingList: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("archive");

        virtualinvoke target.<org.apache.maven.model.MailingList: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("archive", $stack8);

     label2:
        return;
    }

    protected void mergeMailingList_OtherArchives(org.apache.maven.model.MailingList, org.apache.maven.model.MailingList, boolean, java.util.Map)
    {
        org.apache.maven.model.MailingList target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.MailingList;

        source := @parameter1: org.apache.maven.model.MailingList;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.MailingList: java.util.List getOtherArchives()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.MailingList: java.util.List getOtherArchives()>();

        $stack7 = staticinvoke <ModelMerger$lambda_mergeMailingList_OtherArchives_2__311: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.MailingList: void setOtherArchives(java.util.List)>($stack8);

        return;
    }

    protected void mergeDeveloper(org.apache.maven.model.Developer, org.apache.maven.model.Developer, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Developer target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3;
        org.apache.maven.model.Contributor $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Developer;

        source := @parameter1: org.apache.maven.model.Developer;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.Contributor) target;

        $r2 = (org.apache.maven.model.Contributor) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeContributor(org.apache.maven.model.Contributor,org.apache.maven.model.Contributor,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeDeveloper_Id(org.apache.maven.model.Developer,org.apache.maven.model.Developer,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeDeveloper_Id(org.apache.maven.model.Developer, org.apache.maven.model.Developer, boolean, java.util.Map)
    {
        org.apache.maven.model.Developer source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Developer;

        source := @parameter1: org.apache.maven.model.Developer;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Developer: java.lang.String getId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Developer: java.lang.String getId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Developer: void setId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Developer: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("id");

        virtualinvoke target.<org.apache.maven.model.Developer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $stack8);

     label2:
        return;
    }

    protected void mergeContributor(org.apache.maven.model.Contributor, org.apache.maven.model.Contributor, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Contributor target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Contributor;

        source := @parameter1: org.apache.maven.model.Contributor;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeContributor_Name(org.apache.maven.model.Contributor,org.apache.maven.model.Contributor,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeContributor_Email(org.apache.maven.model.Contributor,org.apache.maven.model.Contributor,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeContributor_Url(org.apache.maven.model.Contributor,org.apache.maven.model.Contributor,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeContributor_Organization(org.apache.maven.model.Contributor,org.apache.maven.model.Contributor,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeContributor_OrganizationUrl(org.apache.maven.model.Contributor,org.apache.maven.model.Contributor,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeContributor_Timezone(org.apache.maven.model.Contributor,org.apache.maven.model.Contributor,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergeContributor_Roles(org.apache.maven.model.Contributor,org.apache.maven.model.Contributor,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r7 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r7.<org.apache.maven.model.merge.ModelMerger: void mergeContributor_Properties(org.apache.maven.model.Contributor,org.apache.maven.model.Contributor,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeContributor_Name(org.apache.maven.model.Contributor, org.apache.maven.model.Contributor, boolean, java.util.Map)
    {
        org.apache.maven.model.Contributor source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Contributor;

        source := @parameter1: org.apache.maven.model.Contributor;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Contributor: java.lang.String getName()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Contributor: java.lang.String getName()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Contributor: void setName(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("name");

        virtualinvoke target.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("name", $stack8);

     label2:
        return;
    }

    protected void mergeContributor_Email(org.apache.maven.model.Contributor, org.apache.maven.model.Contributor, boolean, java.util.Map)
    {
        org.apache.maven.model.Contributor source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Contributor;

        source := @parameter1: org.apache.maven.model.Contributor;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Contributor: java.lang.String getEmail()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Contributor: java.lang.String getEmail()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Contributor: void setEmail(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("email");

        virtualinvoke target.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("email", $stack8);

     label2:
        return;
    }

    protected void mergeContributor_Url(org.apache.maven.model.Contributor, org.apache.maven.model.Contributor, boolean, java.util.Map)
    {
        org.apache.maven.model.Contributor source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Contributor;

        source := @parameter1: org.apache.maven.model.Contributor;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Contributor: java.lang.String getUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Contributor: java.lang.String getUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Contributor: void setUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("url");

        virtualinvoke target.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $stack8);

     label2:
        return;
    }

    protected void mergeContributor_Organization(org.apache.maven.model.Contributor, org.apache.maven.model.Contributor, boolean, java.util.Map)
    {
        org.apache.maven.model.Contributor source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Contributor;

        source := @parameter1: org.apache.maven.model.Contributor;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Contributor: java.lang.String getOrganization()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Contributor: java.lang.String getOrganization()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Contributor: void setOrganization(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("organization");

        virtualinvoke target.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("organization", $stack8);

     label2:
        return;
    }

    protected void mergeContributor_OrganizationUrl(org.apache.maven.model.Contributor, org.apache.maven.model.Contributor, boolean, java.util.Map)
    {
        org.apache.maven.model.Contributor source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Contributor;

        source := @parameter1: org.apache.maven.model.Contributor;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Contributor: java.lang.String getOrganizationUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Contributor: java.lang.String getOrganizationUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Contributor: void setOrganizationUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("organizationUrl");

        virtualinvoke target.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("organizationUrl", $stack8);

     label2:
        return;
    }

    protected void mergeContributor_Timezone(org.apache.maven.model.Contributor, org.apache.maven.model.Contributor, boolean, java.util.Map)
    {
        org.apache.maven.model.Contributor source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Contributor;

        source := @parameter1: org.apache.maven.model.Contributor;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Contributor: java.lang.String getTimezone()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Contributor: java.lang.String getTimezone()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Contributor: void setTimezone(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("timezone");

        virtualinvoke target.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("timezone", $stack8);

     label2:
        return;
    }

    protected void mergeContributor_Roles(org.apache.maven.model.Contributor, org.apache.maven.model.Contributor, boolean, java.util.Map)
    {
        org.apache.maven.model.Contributor target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Contributor;

        source := @parameter1: org.apache.maven.model.Contributor;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Contributor: java.util.List getRoles()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Contributor: java.util.List getRoles()>();

        $stack7 = staticinvoke <ModelMerger$lambda_mergeContributor_Roles_3__312: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Contributor: void setRoles(java.util.List)>($stack8);

        return;
    }

    protected void mergeContributor_Properties(org.apache.maven.model.Contributor, org.apache.maven.model.Contributor, boolean, java.util.Map)
    {
        java.util.Properties $stack6, $stack7, $stack8, $stack13, $stack14;
        boolean sourceDominant;
        org.apache.maven.model.Contributor source, target;
        org.apache.maven.model.InputLocation $stack10, $stack11, $stack12;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Contributor;

        source := @parameter1: org.apache.maven.model.Contributor;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack6 = new java.util.Properties;

        specialinvoke $stack6.<java.util.Properties: void <init>()>();

        if sourceDominant == 0 goto label1;

        $stack13 = virtualinvoke target.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack13);

        $stack14 = virtualinvoke source.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack14);

        goto label2;

     label1:
        $stack7 = virtualinvoke source.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack7);

        $stack8 = virtualinvoke target.<org.apache.maven.model.Contributor: java.util.Properties getProperties()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack8);

     label2:
        virtualinvoke target.<org.apache.maven.model.Contributor: void setProperties(java.util.Properties)>($stack6);

        $stack10 = virtualinvoke target.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("properties");

        $stack11 = virtualinvoke source.<org.apache.maven.model.Contributor: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("properties");

        $stack12 = staticinvoke <org.apache.maven.model.InputLocation: org.apache.maven.model.InputLocation merge(org.apache.maven.model.InputLocation,org.apache.maven.model.InputLocation,boolean)>($stack10, $stack11, sourceDominant);

        virtualinvoke target.<org.apache.maven.model.Contributor: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("properties", $stack12);

        return;
    }

    protected void mergeIssueManagement(org.apache.maven.model.IssueManagement, org.apache.maven.model.IssueManagement, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.IssueManagement target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.IssueManagement;

        source := @parameter1: org.apache.maven.model.IssueManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeIssueManagement_Url(org.apache.maven.model.IssueManagement,org.apache.maven.model.IssueManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeIssueManagement_System(org.apache.maven.model.IssueManagement,org.apache.maven.model.IssueManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeIssueManagement_System(org.apache.maven.model.IssueManagement, org.apache.maven.model.IssueManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.IssueManagement source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.IssueManagement;

        source := @parameter1: org.apache.maven.model.IssueManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.IssueManagement: java.lang.String getSystem()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.IssueManagement: java.lang.String getSystem()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.IssueManagement: void setSystem(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.IssueManagement: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("system");

        virtualinvoke target.<org.apache.maven.model.IssueManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("system", $stack8);

     label2:
        return;
    }

    protected void mergeIssueManagement_Url(org.apache.maven.model.IssueManagement, org.apache.maven.model.IssueManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.IssueManagement source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.IssueManagement;

        source := @parameter1: org.apache.maven.model.IssueManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.IssueManagement: java.lang.String getUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.IssueManagement: java.lang.String getUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.IssueManagement: void setUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.IssueManagement: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("url");

        virtualinvoke target.<org.apache.maven.model.IssueManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $stack8);

     label2:
        return;
    }

    protected void mergeScm(org.apache.maven.model.Scm, org.apache.maven.model.Scm, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Scm target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Scm;

        source := @parameter1: org.apache.maven.model.Scm;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeScm_ChildScmConnectionInheritAppendPath(org.apache.maven.model.Scm,org.apache.maven.model.Scm,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeScm_ChildScmDeveloperConnectionInheritAppendPath(org.apache.maven.model.Scm,org.apache.maven.model.Scm,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeScm_ChildScmUrlInheritAppendPath(org.apache.maven.model.Scm,org.apache.maven.model.Scm,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeScm_Url(org.apache.maven.model.Scm,org.apache.maven.model.Scm,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeScm_Connection(org.apache.maven.model.Scm,org.apache.maven.model.Scm,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeScm_DeveloperConnection(org.apache.maven.model.Scm,org.apache.maven.model.Scm,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergeScm_Tag(org.apache.maven.model.Scm,org.apache.maven.model.Scm,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeScm_ChildScmConnectionInheritAppendPath(org.apache.maven.model.Scm, org.apache.maven.model.Scm, boolean, java.util.Map)
    {
        org.apache.maven.model.Scm source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Scm;

        source := @parameter1: org.apache.maven.model.Scm;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Scm: java.lang.String getChildScmConnectionInheritAppendPath()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Scm: java.lang.String getChildScmConnectionInheritAppendPath()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Scm: void setChildScmConnectionInheritAppendPath(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Scm: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("child.scm.connection.inherit.append.path");

        virtualinvoke target.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("child.scm.connection.inherit.append.path", $stack8);

     label2:
        return;
    }

    protected void mergeScm_ChildScmDeveloperConnectionInheritAppendPath(org.apache.maven.model.Scm, org.apache.maven.model.Scm, boolean, java.util.Map)
    {
        org.apache.maven.model.Scm source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Scm;

        source := @parameter1: org.apache.maven.model.Scm;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Scm: java.lang.String getChildScmDeveloperConnectionInheritAppendPath()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Scm: java.lang.String getChildScmDeveloperConnectionInheritAppendPath()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Scm: void setChildScmDeveloperConnectionInheritAppendPath(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Scm: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("child.scm.developerConnection.inherit.append.path");

        virtualinvoke target.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("child.scm.developerConnection.inherit.append.path", $stack8);

     label2:
        return;
    }

    protected void mergeScm_ChildScmUrlInheritAppendPath(org.apache.maven.model.Scm, org.apache.maven.model.Scm, boolean, java.util.Map)
    {
        org.apache.maven.model.Scm source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Scm;

        source := @parameter1: org.apache.maven.model.Scm;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Scm: java.lang.String getChildScmUrlInheritAppendPath()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Scm: java.lang.String getChildScmUrlInheritAppendPath()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Scm: void setChildScmUrlInheritAppendPath(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Scm: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("child.scm.url.inherit.append.path");

        virtualinvoke target.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("child.scm.url.inherit.append.path", $stack8);

     label2:
        return;
    }

    protected void mergeScm_Url(org.apache.maven.model.Scm, org.apache.maven.model.Scm, boolean, java.util.Map)
    {
        org.apache.maven.model.Scm source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Scm;

        source := @parameter1: org.apache.maven.model.Scm;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Scm: java.lang.String getUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Scm: java.lang.String getUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Scm: void setUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Scm: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("url");

        virtualinvoke target.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $stack8);

     label2:
        return;
    }

    protected void mergeScm_Connection(org.apache.maven.model.Scm, org.apache.maven.model.Scm, boolean, java.util.Map)
    {
        org.apache.maven.model.Scm source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Scm;

        source := @parameter1: org.apache.maven.model.Scm;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Scm: java.lang.String getConnection()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Scm: java.lang.String getConnection()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Scm: void setConnection(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Scm: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("connection");

        virtualinvoke target.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("connection", $stack8);

     label2:
        return;
    }

    protected void mergeScm_DeveloperConnection(org.apache.maven.model.Scm, org.apache.maven.model.Scm, boolean, java.util.Map)
    {
        org.apache.maven.model.Scm source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Scm;

        source := @parameter1: org.apache.maven.model.Scm;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Scm: java.lang.String getDeveloperConnection()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Scm: java.lang.String getDeveloperConnection()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Scm: void setDeveloperConnection(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Scm: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("developerConnection");

        virtualinvoke target.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("developerConnection", $stack8);

     label2:
        return;
    }

    protected void mergeScm_Tag(org.apache.maven.model.Scm, org.apache.maven.model.Scm, boolean, java.util.Map)
    {
        org.apache.maven.model.Scm source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Scm;

        source := @parameter1: org.apache.maven.model.Scm;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Scm: java.lang.String getTag()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Scm: java.lang.String getTag()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Scm: void setTag(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Scm: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("tag");

        virtualinvoke target.<org.apache.maven.model.Scm: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("tag", $stack8);

     label2:
        return;
    }

    protected void mergeCiManagement(org.apache.maven.model.CiManagement, org.apache.maven.model.CiManagement, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.CiManagement target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.CiManagement;

        source := @parameter1: org.apache.maven.model.CiManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeCiManagement_System(org.apache.maven.model.CiManagement,org.apache.maven.model.CiManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeCiManagement_Url(org.apache.maven.model.CiManagement,org.apache.maven.model.CiManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeCiManagement_Notifiers(org.apache.maven.model.CiManagement,org.apache.maven.model.CiManagement,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeCiManagement_System(org.apache.maven.model.CiManagement, org.apache.maven.model.CiManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.CiManagement source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.CiManagement;

        source := @parameter1: org.apache.maven.model.CiManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.CiManagement: java.lang.String getSystem()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.CiManagement: java.lang.String getSystem()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.CiManagement: void setSystem(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.CiManagement: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("system");

        virtualinvoke target.<org.apache.maven.model.CiManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("system", $stack8);

     label2:
        return;
    }

    protected void mergeCiManagement_Url(org.apache.maven.model.CiManagement, org.apache.maven.model.CiManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.CiManagement source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.CiManagement;

        source := @parameter1: org.apache.maven.model.CiManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.CiManagement: java.lang.String getUrl()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.CiManagement: java.lang.String getUrl()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.CiManagement: void setUrl(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.CiManagement: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("url");

        virtualinvoke target.<org.apache.maven.model.CiManagement: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("url", $stack8);

     label2:
        return;
    }

    protected void mergeCiManagement_Notifiers(org.apache.maven.model.CiManagement, org.apache.maven.model.CiManagement, boolean, java.util.Map)
    {
        org.apache.maven.model.CiManagement target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.CiManagement;

        source := @parameter1: org.apache.maven.model.CiManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.CiManagement: java.util.List getNotifiers()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.CiManagement: java.util.List getNotifiers()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getNotifierKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.CiManagement: void setNotifiers(java.util.List)>($stack8);

        return;
    }

    protected void mergeNotifier(org.apache.maven.model.Notifier, org.apache.maven.model.Notifier, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Notifier target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Notifier;

        source := @parameter1: org.apache.maven.model.Notifier;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeNotifier_Type(org.apache.maven.model.Notifier,org.apache.maven.model.Notifier,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeNotifier_Address(org.apache.maven.model.Notifier,org.apache.maven.model.Notifier,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeNotifier_Configuration(org.apache.maven.model.Notifier,org.apache.maven.model.Notifier,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeNotifier_SendOnError(org.apache.maven.model.Notifier,org.apache.maven.model.Notifier,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeNotifier_SendOnFailure(org.apache.maven.model.Notifier,org.apache.maven.model.Notifier,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeNotifier_SendOnSuccess(org.apache.maven.model.Notifier,org.apache.maven.model.Notifier,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergeNotifier_SendOnWarning(org.apache.maven.model.Notifier,org.apache.maven.model.Notifier,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeNotifier_Type(org.apache.maven.model.Notifier, org.apache.maven.model.Notifier, boolean, java.util.Map)
    {
        org.apache.maven.model.Notifier source, target;
        java.lang.String src, $stack7;
        boolean sourceDominant;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Notifier;

        source := @parameter1: org.apache.maven.model.Notifier;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Notifier: java.lang.String getType()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack7 = virtualinvoke target.<org.apache.maven.model.Notifier: java.lang.String getType()>();

        if $stack7 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Notifier: void setType(java.lang.String)>(src);

     label2:
        return;
    }

    protected void mergeNotifier_Address(org.apache.maven.model.Notifier, org.apache.maven.model.Notifier, boolean, java.util.Map)
    {
        org.apache.maven.model.Notifier source, target;
        java.lang.String src, $stack7;
        boolean sourceDominant;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Notifier;

        source := @parameter1: org.apache.maven.model.Notifier;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Notifier: java.lang.String getAddress()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack7 = virtualinvoke target.<org.apache.maven.model.Notifier: java.lang.String getAddress()>();

        if $stack7 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Notifier: void setAddress(java.lang.String)>(src);

     label2:
        return;
    }

    protected void mergeNotifier_Configuration(org.apache.maven.model.Notifier, org.apache.maven.model.Notifier, boolean, java.util.Map)
    {
        java.util.Properties $stack6, $stack7, $stack8, $stack9, $stack10;
        boolean sourceDominant;
        org.apache.maven.model.Notifier source, target;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Notifier;

        source := @parameter1: org.apache.maven.model.Notifier;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack6 = new java.util.Properties;

        specialinvoke $stack6.<java.util.Properties: void <init>()>();

        if sourceDominant == 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack9);

        $stack10 = virtualinvoke source.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack10);

        goto label2;

     label1:
        $stack7 = virtualinvoke source.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack7);

        $stack8 = virtualinvoke target.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        virtualinvoke $stack6.<java.util.Properties: void putAll(java.util.Map)>($stack8);

     label2:
        virtualinvoke target.<org.apache.maven.model.Notifier: void setConfiguration(java.util.Properties)>($stack6);

        return;
    }

    protected void mergeNotifier_SendOnError(org.apache.maven.model.Notifier, org.apache.maven.model.Notifier, boolean, java.util.Map)
    {
        boolean sourceDominant, $stack5;
        org.apache.maven.model.Notifier target, source;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Notifier;

        source := @parameter1: org.apache.maven.model.Notifier;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        if sourceDominant == 0 goto label1;

        $stack5 = virtualinvoke source.<org.apache.maven.model.Notifier: boolean isSendOnError()>();

        virtualinvoke target.<org.apache.maven.model.Notifier: void setSendOnError(boolean)>($stack5);

     label1:
        return;
    }

    protected void mergeNotifier_SendOnFailure(org.apache.maven.model.Notifier, org.apache.maven.model.Notifier, boolean, java.util.Map)
    {
        boolean sourceDominant, $stack5;
        org.apache.maven.model.Notifier target, source;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Notifier;

        source := @parameter1: org.apache.maven.model.Notifier;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        if sourceDominant == 0 goto label1;

        $stack5 = virtualinvoke source.<org.apache.maven.model.Notifier: boolean isSendOnFailure()>();

        virtualinvoke target.<org.apache.maven.model.Notifier: void setSendOnFailure(boolean)>($stack5);

     label1:
        return;
    }

    protected void mergeNotifier_SendOnSuccess(org.apache.maven.model.Notifier, org.apache.maven.model.Notifier, boolean, java.util.Map)
    {
        boolean sourceDominant, $stack5;
        org.apache.maven.model.Notifier target, source;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Notifier;

        source := @parameter1: org.apache.maven.model.Notifier;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        if sourceDominant == 0 goto label1;

        $stack5 = virtualinvoke source.<org.apache.maven.model.Notifier: boolean isSendOnSuccess()>();

        virtualinvoke target.<org.apache.maven.model.Notifier: void setSendOnSuccess(boolean)>($stack5);

     label1:
        return;
    }

    protected void mergeNotifier_SendOnWarning(org.apache.maven.model.Notifier, org.apache.maven.model.Notifier, boolean, java.util.Map)
    {
        boolean sourceDominant, $stack5;
        org.apache.maven.model.Notifier target, source;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Notifier;

        source := @parameter1: org.apache.maven.model.Notifier;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        if sourceDominant == 0 goto label1;

        $stack5 = virtualinvoke source.<org.apache.maven.model.Notifier: boolean isSendOnWarning()>();

        virtualinvoke target.<org.apache.maven.model.Notifier: void setSendOnWarning(boolean)>($stack5);

     label1:
        return;
    }

    protected void mergePrerequisites(org.apache.maven.model.Prerequisites, org.apache.maven.model.Prerequisites, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Prerequisites target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Prerequisites;

        source := @parameter1: org.apache.maven.model.Prerequisites;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergePrerequisites_Maven(org.apache.maven.model.Prerequisites,org.apache.maven.model.Prerequisites,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergePrerequisites_Maven(org.apache.maven.model.Prerequisites, org.apache.maven.model.Prerequisites, boolean, java.util.Map)
    {
        org.apache.maven.model.Prerequisites source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Prerequisites;

        source := @parameter1: org.apache.maven.model.Prerequisites;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Prerequisites: java.lang.String getMaven()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Prerequisites: java.lang.String getMaven()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Prerequisites: void setMaven(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Prerequisites: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("maven");

        virtualinvoke target.<org.apache.maven.model.Prerequisites: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("maven", $stack8);

     label2:
        return;
    }

    protected void mergeBuild(org.apache.maven.model.Build, org.apache.maven.model.Build, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Build target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.maven.model.BuildBase $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Build;

        source := @parameter1: org.apache.maven.model.Build;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.BuildBase) target;

        $r2 = (org.apache.maven.model.BuildBase) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeBuildBase(org.apache.maven.model.BuildBase,org.apache.maven.model.BuildBase,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeBuild_SourceDirectory(org.apache.maven.model.Build,org.apache.maven.model.Build,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeBuild_ScriptSourceDirectory(org.apache.maven.model.Build,org.apache.maven.model.Build,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeBuild_TestSourceDirectory(org.apache.maven.model.Build,org.apache.maven.model.Build,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergeBuild_OutputDirectory(org.apache.maven.model.Build,org.apache.maven.model.Build,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r7 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r7.<org.apache.maven.model.merge.ModelMerger: void mergeBuild_TestOutputDirectory(org.apache.maven.model.Build,org.apache.maven.model.Build,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r8 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r8.<org.apache.maven.model.merge.ModelMerger: void mergeBuild_Extensions(org.apache.maven.model.Build,org.apache.maven.model.Build,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeBuild_SourceDirectory(org.apache.maven.model.Build, org.apache.maven.model.Build, boolean, java.util.Map)
    {
        org.apache.maven.model.Build source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Build;

        source := @parameter1: org.apache.maven.model.Build;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Build: java.lang.String getSourceDirectory()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Build: java.lang.String getSourceDirectory()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Build: void setSourceDirectory(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Build: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("sourceDirectory");

        virtualinvoke target.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("sourceDirectory", $stack8);

     label2:
        return;
    }

    protected void mergeBuild_ScriptSourceDirectory(org.apache.maven.model.Build, org.apache.maven.model.Build, boolean, java.util.Map)
    {
        org.apache.maven.model.Build source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Build;

        source := @parameter1: org.apache.maven.model.Build;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Build: java.lang.String getScriptSourceDirectory()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Build: java.lang.String getScriptSourceDirectory()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Build: void setScriptSourceDirectory(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Build: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("scriptSourceDirectory");

        virtualinvoke target.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("scriptSourceDirectory", $stack8);

     label2:
        return;
    }

    protected void mergeBuild_TestSourceDirectory(org.apache.maven.model.Build, org.apache.maven.model.Build, boolean, java.util.Map)
    {
        org.apache.maven.model.Build source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Build;

        source := @parameter1: org.apache.maven.model.Build;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Build: java.lang.String getTestSourceDirectory()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Build: java.lang.String getTestSourceDirectory()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Build: void setTestSourceDirectory(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Build: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("testSourceDirectory");

        virtualinvoke target.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("testSourceDirectory", $stack8);

     label2:
        return;
    }

    protected void mergeBuild_OutputDirectory(org.apache.maven.model.Build, org.apache.maven.model.Build, boolean, java.util.Map)
    {
        org.apache.maven.model.Build source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Build;

        source := @parameter1: org.apache.maven.model.Build;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Build: java.lang.String getOutputDirectory()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Build: java.lang.String getOutputDirectory()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Build: void setOutputDirectory(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Build: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("outputDirectory");

        virtualinvoke target.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("outputDirectory", $stack8);

     label2:
        return;
    }

    protected void mergeBuild_TestOutputDirectory(org.apache.maven.model.Build, org.apache.maven.model.Build, boolean, java.util.Map)
    {
        org.apache.maven.model.Build source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Build;

        source := @parameter1: org.apache.maven.model.Build;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Build: java.lang.String getTestOutputDirectory()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Build: java.lang.String getTestOutputDirectory()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Build: void setTestOutputDirectory(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Build: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("testOutputDirectory");

        virtualinvoke target.<org.apache.maven.model.Build: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("testOutputDirectory", $stack8);

     label2:
        return;
    }

    protected void mergeBuild_Extensions(org.apache.maven.model.Build, org.apache.maven.model.Build, boolean, java.util.Map)
    {
        org.apache.maven.model.Build target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Build;

        source := @parameter1: org.apache.maven.model.Build;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getExtensionKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Build: void setExtensions(java.util.List)>($stack8);

        return;
    }

    protected void mergeExtension(org.apache.maven.model.Extension, org.apache.maven.model.Extension, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Extension target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Extension;

        source := @parameter1: org.apache.maven.model.Extension;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeExtension_GroupId(org.apache.maven.model.Extension,org.apache.maven.model.Extension,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeExtension_ArtifactId(org.apache.maven.model.Extension,org.apache.maven.model.Extension,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r2 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r2.<org.apache.maven.model.merge.ModelMerger: void mergeExtension_Version(org.apache.maven.model.Extension,org.apache.maven.model.Extension,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeExtension_GroupId(org.apache.maven.model.Extension, org.apache.maven.model.Extension, boolean, java.util.Map)
    {
        org.apache.maven.model.Extension source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Extension;

        source := @parameter1: org.apache.maven.model.Extension;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Extension: java.lang.String getGroupId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Extension: java.lang.String getGroupId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Extension: void setGroupId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Extension: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("groupId");

        virtualinvoke target.<org.apache.maven.model.Extension: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $stack8);

     label2:
        return;
    }

    protected void mergeExtension_ArtifactId(org.apache.maven.model.Extension, org.apache.maven.model.Extension, boolean, java.util.Map)
    {
        org.apache.maven.model.Extension source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Extension;

        source := @parameter1: org.apache.maven.model.Extension;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Extension: java.lang.String getArtifactId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Extension: java.lang.String getArtifactId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Extension: void setArtifactId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Extension: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("artifactId");

        virtualinvoke target.<org.apache.maven.model.Extension: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $stack8);

     label2:
        return;
    }

    protected void mergeExtension_Version(org.apache.maven.model.Extension, org.apache.maven.model.Extension, boolean, java.util.Map)
    {
        org.apache.maven.model.Extension source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Extension;

        source := @parameter1: org.apache.maven.model.Extension;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Extension: java.lang.String getVersion()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Extension: java.lang.String getVersion()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Extension: void setVersion(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Extension: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        virtualinvoke target.<org.apache.maven.model.Extension: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $stack8);

     label2:
        return;
    }

    protected void mergeBuildBase(org.apache.maven.model.BuildBase, org.apache.maven.model.BuildBase, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.BuildBase target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.maven.model.PluginConfiguration $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.BuildBase;

        source := @parameter1: org.apache.maven.model.BuildBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.PluginConfiguration) target;

        $r2 = (org.apache.maven.model.PluginConfiguration) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergePluginConfiguration(org.apache.maven.model.PluginConfiguration,org.apache.maven.model.PluginConfiguration,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeBuildBase_DefaultGoal(org.apache.maven.model.BuildBase,org.apache.maven.model.BuildBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeBuildBase_FinalName(org.apache.maven.model.BuildBase,org.apache.maven.model.BuildBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeBuildBase_Directory(org.apache.maven.model.BuildBase,org.apache.maven.model.BuildBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergeBuildBase_Resources(org.apache.maven.model.BuildBase,org.apache.maven.model.BuildBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r7 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r7.<org.apache.maven.model.merge.ModelMerger: void mergeBuildBase_TestResources(org.apache.maven.model.BuildBase,org.apache.maven.model.BuildBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r8 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r8.<org.apache.maven.model.merge.ModelMerger: void mergeBuildBase_Filters(org.apache.maven.model.BuildBase,org.apache.maven.model.BuildBase,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeBuildBase_DefaultGoal(org.apache.maven.model.BuildBase, org.apache.maven.model.BuildBase, boolean, java.util.Map)
    {
        org.apache.maven.model.BuildBase source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.BuildBase;

        source := @parameter1: org.apache.maven.model.BuildBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.BuildBase: java.lang.String getDefaultGoal()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.BuildBase: java.lang.String getDefaultGoal()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.BuildBase: void setDefaultGoal(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.BuildBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("defaultGoal");

        virtualinvoke target.<org.apache.maven.model.BuildBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("defaultGoal", $stack8);

     label2:
        return;
    }

    protected void mergeBuildBase_Directory(org.apache.maven.model.BuildBase, org.apache.maven.model.BuildBase, boolean, java.util.Map)
    {
        org.apache.maven.model.BuildBase source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.BuildBase;

        source := @parameter1: org.apache.maven.model.BuildBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.BuildBase: java.lang.String getDirectory()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.BuildBase: java.lang.String getDirectory()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.BuildBase: void setDirectory(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.BuildBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("directory");

        virtualinvoke target.<org.apache.maven.model.BuildBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("directory", $stack8);

     label2:
        return;
    }

    protected void mergeBuildBase_FinalName(org.apache.maven.model.BuildBase, org.apache.maven.model.BuildBase, boolean, java.util.Map)
    {
        org.apache.maven.model.BuildBase source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.BuildBase;

        source := @parameter1: org.apache.maven.model.BuildBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.BuildBase: java.lang.String getFinalName()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.BuildBase: java.lang.String getFinalName()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.BuildBase: void setFinalName(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.BuildBase: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("finalName");

        virtualinvoke target.<org.apache.maven.model.BuildBase: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("finalName", $stack8);

     label2:
        return;
    }

    protected void mergeBuildBase_Filters(org.apache.maven.model.BuildBase, org.apache.maven.model.BuildBase, boolean, java.util.Map)
    {
        org.apache.maven.model.BuildBase target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.BuildBase;

        source := @parameter1: org.apache.maven.model.BuildBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        $stack7 = staticinvoke <ModelMerger$lambda_mergeBuildBase_Filters_4__313: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.BuildBase: void setFilters(java.util.List)>($stack8);

        return;
    }

    protected void mergeBuildBase_Resources(org.apache.maven.model.BuildBase, org.apache.maven.model.BuildBase, boolean, java.util.Map)
    {
        org.apache.maven.model.BuildBase target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.BuildBase;

        source := @parameter1: org.apache.maven.model.BuildBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getResourceKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.BuildBase: void setResources(java.util.List)>($stack8);

        return;
    }

    protected void mergeBuildBase_TestResources(org.apache.maven.model.BuildBase, org.apache.maven.model.BuildBase, boolean, java.util.Map)
    {
        org.apache.maven.model.BuildBase target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.BuildBase;

        source := @parameter1: org.apache.maven.model.BuildBase;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getResourceKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.BuildBase: void setTestResources(java.util.List)>($stack8);

        return;
    }

    protected void mergePluginConfiguration(org.apache.maven.model.PluginConfiguration, org.apache.maven.model.PluginConfiguration, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.PluginConfiguration target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3;
        org.apache.maven.model.PluginContainer $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PluginConfiguration;

        source := @parameter1: org.apache.maven.model.PluginConfiguration;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.PluginContainer) target;

        $r2 = (org.apache.maven.model.PluginContainer) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergePluginContainer(org.apache.maven.model.PluginContainer,org.apache.maven.model.PluginContainer,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergePluginConfiguration_PluginManagement(org.apache.maven.model.PluginConfiguration,org.apache.maven.model.PluginConfiguration,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergePluginConfiguration_PluginManagement(org.apache.maven.model.PluginConfiguration, org.apache.maven.model.PluginConfiguration, boolean, java.util.Map)
    {
        org.apache.maven.model.PluginConfiguration source, target;
        org.apache.maven.model.PluginManagement src, tgt, $u0;
        ModelMerger this;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PluginConfiguration;

        source := @parameter1: org.apache.maven.model.PluginConfiguration;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.PluginConfiguration: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if src == null goto label2;

        tgt = virtualinvoke target.<org.apache.maven.model.PluginConfiguration: org.apache.maven.model.PluginManagement getPluginManagement()>();

        if tgt != null goto label1;

        $u0 = new org.apache.maven.model.PluginManagement;

        specialinvoke $u0.<org.apache.maven.model.PluginManagement: void <init>()>();

        tgt = $u0;

        virtualinvoke target.<org.apache.maven.model.PluginConfiguration: void setPluginManagement(org.apache.maven.model.PluginManagement)>($u0);

     label1:
        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergePluginManagement(org.apache.maven.model.PluginManagement,org.apache.maven.model.PluginManagement,boolean,java.util.Map)>(tgt, src, sourceDominant, context);

     label2:
        return;
    }

    protected void mergePluginContainer(org.apache.maven.model.PluginContainer, org.apache.maven.model.PluginContainer, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.PluginContainer target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PluginContainer;

        source := @parameter1: org.apache.maven.model.PluginContainer;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergePluginContainer_Plugins(org.apache.maven.model.PluginContainer,org.apache.maven.model.PluginContainer,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergePluginContainer_Plugins(org.apache.maven.model.PluginContainer, org.apache.maven.model.PluginContainer, boolean, java.util.Map)
    {
        org.apache.maven.model.PluginContainer target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PluginContainer;

        source := @parameter1: org.apache.maven.model.PluginContainer;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.PluginContainer: java.util.List getPlugins()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.PluginContainer: java.util.List getPlugins()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getPluginKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.PluginContainer: void setPlugins(java.util.List)>($stack8);

        return;
    }

    protected void mergePluginManagement(org.apache.maven.model.PluginManagement, org.apache.maven.model.PluginManagement, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.PluginManagement target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;
        org.apache.maven.model.PluginContainer $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PluginManagement;

        source := @parameter1: org.apache.maven.model.PluginManagement;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.PluginContainer) target;

        $r2 = (org.apache.maven.model.PluginContainer) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergePluginContainer(org.apache.maven.model.PluginContainer,org.apache.maven.model.PluginContainer,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        return;
    }

    protected void mergePlugin(org.apache.maven.model.Plugin, org.apache.maven.model.Plugin, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Plugin target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3, $r4, $r5, $r6, $r7, $r8;
        org.apache.maven.model.ConfigurationContainer $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Plugin;

        source := @parameter1: org.apache.maven.model.Plugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.ConfigurationContainer) target;

        $r2 = (org.apache.maven.model.ConfigurationContainer) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeConfigurationContainer(org.apache.maven.model.ConfigurationContainer,org.apache.maven.model.ConfigurationContainer,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergePlugin_GroupId(org.apache.maven.model.Plugin,org.apache.maven.model.Plugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergePlugin_ArtifactId(org.apache.maven.model.Plugin,org.apache.maven.model.Plugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergePlugin_Version(org.apache.maven.model.Plugin,org.apache.maven.model.Plugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r6 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r6.<org.apache.maven.model.merge.ModelMerger: void mergePlugin_Extensions(org.apache.maven.model.Plugin,org.apache.maven.model.Plugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r7 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r7.<org.apache.maven.model.merge.ModelMerger: void mergePlugin_Dependencies(org.apache.maven.model.Plugin,org.apache.maven.model.Plugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r8 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r8.<org.apache.maven.model.merge.ModelMerger: void mergePlugin_Executions(org.apache.maven.model.Plugin,org.apache.maven.model.Plugin,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergePlugin_GroupId(org.apache.maven.model.Plugin, org.apache.maven.model.Plugin, boolean, java.util.Map)
    {
        org.apache.maven.model.Plugin source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Plugin;

        source := @parameter1: org.apache.maven.model.Plugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Plugin: void setGroupId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Plugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("groupId");

        virtualinvoke target.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("groupId", $stack8);

     label2:
        return;
    }

    protected void mergePlugin_ArtifactId(org.apache.maven.model.Plugin, org.apache.maven.model.Plugin, boolean, java.util.Map)
    {
        org.apache.maven.model.Plugin source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Plugin;

        source := @parameter1: org.apache.maven.model.Plugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Plugin: void setArtifactId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Plugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("artifactId");

        virtualinvoke target.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("artifactId", $stack8);

     label2:
        return;
    }

    protected void mergePlugin_Version(org.apache.maven.model.Plugin, org.apache.maven.model.Plugin, boolean, java.util.Map)
    {
        org.apache.maven.model.Plugin source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Plugin;

        source := @parameter1: org.apache.maven.model.Plugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Plugin: void setVersion(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Plugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("version");

        virtualinvoke target.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("version", $stack8);

     label2:
        return;
    }

    protected void mergePlugin_Extensions(org.apache.maven.model.Plugin, org.apache.maven.model.Plugin, boolean, java.util.Map)
    {
        org.apache.maven.model.Plugin source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Plugin;

        source := @parameter1: org.apache.maven.model.Plugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Plugin: java.lang.String getExtensions()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Plugin: java.lang.String getExtensions()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Plugin: void setExtensions(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Plugin: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("extensions");

        virtualinvoke target.<org.apache.maven.model.Plugin: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("extensions", $stack8);

     label2:
        return;
    }

    protected void mergePlugin_Dependencies(org.apache.maven.model.Plugin, org.apache.maven.model.Plugin, boolean, java.util.Map)
    {
        org.apache.maven.model.Plugin target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Plugin;

        source := @parameter1: org.apache.maven.model.Plugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getDependencyKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Plugin: void setDependencies(java.util.List)>($stack8);

        return;
    }

    protected void mergePlugin_Executions(org.apache.maven.model.Plugin, org.apache.maven.model.Plugin, boolean, java.util.Map)
    {
        org.apache.maven.model.Plugin target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        ModelMerger this;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Plugin;

        source := @parameter1: org.apache.maven.model.Plugin;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $stack7 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: org.apache.maven.model.merge.ModelMerger$KeyComputer getPluginExecutionKey()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.Plugin: void setExecutions(java.util.List)>($stack8);

        return;
    }

    protected void mergeConfigurationContainer(org.apache.maven.model.ConfigurationContainer, org.apache.maven.model.ConfigurationContainer, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.ConfigurationContainer target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ConfigurationContainer;

        source := @parameter1: org.apache.maven.model.ConfigurationContainer;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeConfigurationContainer_Inherited(org.apache.maven.model.ConfigurationContainer,org.apache.maven.model.ConfigurationContainer,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergeConfigurationContainer_Configuration(org.apache.maven.model.ConfigurationContainer,org.apache.maven.model.ConfigurationContainer,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeConfigurationContainer_Inherited(org.apache.maven.model.ConfigurationContainer, org.apache.maven.model.ConfigurationContainer, boolean, java.util.Map)
    {
        org.apache.maven.model.ConfigurationContainer source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ConfigurationContainer;

        source := @parameter1: org.apache.maven.model.ConfigurationContainer;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.ConfigurationContainer: java.lang.String getInherited()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.ConfigurationContainer: java.lang.String getInherited()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.ConfigurationContainer: void setInherited(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.ConfigurationContainer: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("inherited");

        virtualinvoke target.<org.apache.maven.model.ConfigurationContainer: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("inherited", $stack8);

     label2:
        return;
    }

    protected void mergeConfigurationContainer_Configuration(org.apache.maven.model.ConfigurationContainer, org.apache.maven.model.ConfigurationContainer, boolean, java.util.Map)
    {
        org.apache.maven.model.ConfigurationContainer source, target;
        java.lang.Object $stack7, $stack8;
        org.codehaus.plexus.util.xml.Xpp3Dom src, $stack9, tgt;
        boolean sourceDominant;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.ConfigurationContainer;

        source := @parameter1: org.apache.maven.model.ConfigurationContainer;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack7 = virtualinvoke source.<org.apache.maven.model.ConfigurationContainer: java.lang.Object getConfiguration()>();

        src = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack7;

        if src == null goto label4;

        $stack8 = virtualinvoke target.<org.apache.maven.model.ConfigurationContainer: java.lang.Object getConfiguration()>();

        tgt = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack8;

        if sourceDominant != 0 goto label1;

        if tgt != null goto label2;

     label1:
        $stack9 = new org.codehaus.plexus.util.xml.Xpp3Dom;

        specialinvoke $stack9.<org.codehaus.plexus.util.xml.Xpp3Dom: void <init>(org.codehaus.plexus.util.xml.Xpp3Dom)>(src);

        tgt = staticinvoke <org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom mergeXpp3Dom(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.Xpp3Dom)>($stack9, tgt);

        goto label3;

     label2:
        tgt = staticinvoke <org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom mergeXpp3Dom(org.codehaus.plexus.util.xml.Xpp3Dom,org.codehaus.plexus.util.xml.Xpp3Dom)>(tgt, src);

     label3:
        virtualinvoke target.<org.apache.maven.model.ConfigurationContainer: void setConfiguration(java.lang.Object)>(tgt);

     label4:
        return;
    }

    protected void mergePluginExecution(org.apache.maven.model.PluginExecution, org.apache.maven.model.PluginExecution, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.PluginExecution target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3, $r4, $r5;
        org.apache.maven.model.ConfigurationContainer $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PluginExecution;

        source := @parameter1: org.apache.maven.model.PluginExecution;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.ConfigurationContainer) target;

        $r2 = (org.apache.maven.model.ConfigurationContainer) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeConfigurationContainer(org.apache.maven.model.ConfigurationContainer,org.apache.maven.model.ConfigurationContainer,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergePluginExecution_Id(org.apache.maven.model.PluginExecution,org.apache.maven.model.PluginExecution,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergePluginExecution_Phase(org.apache.maven.model.PluginExecution,org.apache.maven.model.PluginExecution,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergePluginExecution_Goals(org.apache.maven.model.PluginExecution,org.apache.maven.model.PluginExecution,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergePluginExecution_Id(org.apache.maven.model.PluginExecution, org.apache.maven.model.PluginExecution, boolean, java.util.Map)
    {
        org.apache.maven.model.PluginExecution source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PluginExecution;

        source := @parameter1: org.apache.maven.model.PluginExecution;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.PluginExecution: void setId(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.PluginExecution: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("id");

        virtualinvoke target.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("id", $stack8);

     label2:
        return;
    }

    protected void mergePluginExecution_Phase(org.apache.maven.model.PluginExecution, org.apache.maven.model.PluginExecution, boolean, java.util.Map)
    {
        org.apache.maven.model.PluginExecution source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PluginExecution;

        source := @parameter1: org.apache.maven.model.PluginExecution;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.PluginExecution: java.lang.String getPhase()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.PluginExecution: java.lang.String getPhase()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.PluginExecution: void setPhase(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.PluginExecution: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("phase");

        virtualinvoke target.<org.apache.maven.model.PluginExecution: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("phase", $stack8);

     label2:
        return;
    }

    protected void mergePluginExecution_Goals(org.apache.maven.model.PluginExecution, org.apache.maven.model.PluginExecution, boolean, java.util.Map)
    {
        org.apache.maven.model.PluginExecution target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PluginExecution;

        source := @parameter1: org.apache.maven.model.PluginExecution;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        $stack7 = staticinvoke <ModelMerger$lambda_mergePluginExecution_Goals_5__314: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.PluginExecution: void setGoals(java.util.List)>($stack8);

        return;
    }

    protected void mergeResource(org.apache.maven.model.Resource, org.apache.maven.model.Resource, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Resource target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3, $r4, $r5;
        org.apache.maven.model.FileSet $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Resource;

        source := @parameter1: org.apache.maven.model.Resource;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.FileSet) target;

        $r2 = (org.apache.maven.model.FileSet) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeFileSet(org.apache.maven.model.FileSet,org.apache.maven.model.FileSet,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeResource_TargetPath(org.apache.maven.model.Resource,org.apache.maven.model.Resource,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r4 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r4.<org.apache.maven.model.merge.ModelMerger: void mergeResource_Filtering(org.apache.maven.model.Resource,org.apache.maven.model.Resource,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r5 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r5.<org.apache.maven.model.merge.ModelMerger: void mergeResource_MergeId(org.apache.maven.model.Resource,org.apache.maven.model.Resource,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeResource_TargetPath(org.apache.maven.model.Resource, org.apache.maven.model.Resource, boolean, java.util.Map)
    {
        org.apache.maven.model.Resource source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Resource;

        source := @parameter1: org.apache.maven.model.Resource;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Resource: java.lang.String getTargetPath()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Resource: java.lang.String getTargetPath()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Resource: void setTargetPath(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Resource: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("targetPath");

        virtualinvoke target.<org.apache.maven.model.Resource: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("targetPath", $stack8);

     label2:
        return;
    }

    protected void mergeResource_Filtering(org.apache.maven.model.Resource, org.apache.maven.model.Resource, boolean, java.util.Map)
    {
        org.apache.maven.model.Resource source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Resource;

        source := @parameter1: org.apache.maven.model.Resource;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Resource: java.lang.String getFiltering()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.Resource: java.lang.String getFiltering()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Resource: void setFiltering(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.Resource: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("filtering");

        virtualinvoke target.<org.apache.maven.model.Resource: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("filtering", $stack8);

     label2:
        return;
    }

    protected void mergeResource_MergeId(org.apache.maven.model.Resource, org.apache.maven.model.Resource, boolean, java.util.Map)
    {
        org.apache.maven.model.Resource source, target;
        java.lang.String src, $stack7;
        boolean sourceDominant;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Resource;

        source := @parameter1: org.apache.maven.model.Resource;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.Resource: java.lang.String getMergeId()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack7 = virtualinvoke target.<org.apache.maven.model.Resource: java.lang.String getMergeId()>();

        if $stack7 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.Resource: void setMergeId(java.lang.String)>(src);

     label2:
        return;
    }

    protected void mergeFileSet(org.apache.maven.model.FileSet, org.apache.maven.model.FileSet, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.FileSet target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r3;
        org.apache.maven.model.PatternSet $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.FileSet;

        source := @parameter1: org.apache.maven.model.FileSet;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.PatternSet) target;

        $r2 = (org.apache.maven.model.PatternSet) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergePatternSet(org.apache.maven.model.PatternSet,org.apache.maven.model.PatternSet,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        $r3 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r3.<org.apache.maven.model.merge.ModelMerger: void mergeFileSet_Directory(org.apache.maven.model.FileSet,org.apache.maven.model.FileSet,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergeFileSet_Directory(org.apache.maven.model.FileSet, org.apache.maven.model.FileSet, boolean, java.util.Map)
    {
        org.apache.maven.model.FileSet source, target;
        java.lang.String src, $stack9;
        boolean sourceDominant;
        org.apache.maven.model.InputLocation $stack8;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.FileSet;

        source := @parameter1: org.apache.maven.model.FileSet;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        src = virtualinvoke source.<org.apache.maven.model.FileSet: java.lang.String getDirectory()>();

        if src == null goto label2;

        if sourceDominant != 0 goto label1;

        $stack9 = virtualinvoke target.<org.apache.maven.model.FileSet: java.lang.String getDirectory()>();

        if $stack9 != null goto label2;

     label1:
        virtualinvoke target.<org.apache.maven.model.FileSet: void setDirectory(java.lang.String)>(src);

        $stack8 = virtualinvoke source.<org.apache.maven.model.FileSet: org.apache.maven.model.InputLocation getLocation(java.lang.Object)>("directory");

        virtualinvoke target.<org.apache.maven.model.FileSet: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("directory", $stack8);

     label2:
        return;
    }

    protected void mergePatternSet(org.apache.maven.model.PatternSet, org.apache.maven.model.PatternSet, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.PatternSet target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0, $r1;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PatternSet;

        source := @parameter1: org.apache.maven.model.PatternSet;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergePatternSet_Includes(org.apache.maven.model.PatternSet,org.apache.maven.model.PatternSet,boolean,java.util.Map)>(target, source, sourceDominant, context);

        $r1 = (org.apache.maven.model.merge.ModelMerger) this;

        virtualinvoke $r1.<org.apache.maven.model.merge.ModelMerger: void mergePatternSet_Excludes(org.apache.maven.model.PatternSet,org.apache.maven.model.PatternSet,boolean,java.util.Map)>(target, source, sourceDominant, context);

        return;
    }

    protected void mergePatternSet_Includes(org.apache.maven.model.PatternSet, org.apache.maven.model.PatternSet, boolean, java.util.Map)
    {
        org.apache.maven.model.PatternSet target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PatternSet;

        source := @parameter1: org.apache.maven.model.PatternSet;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.PatternSet: java.util.List getIncludes()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.PatternSet: java.util.List getIncludes()>();

        $stack7 = staticinvoke <ModelMerger$lambda_mergePatternSet_Includes_6__315: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.PatternSet: void setIncludes(java.util.List)>($stack8);

        return;
    }

    protected void mergePatternSet_Excludes(org.apache.maven.model.PatternSet, org.apache.maven.model.PatternSet, boolean, java.util.Map)
    {
        org.apache.maven.model.PatternSet target, source;
        java.util.List $stack5, $stack6, $stack8;
        boolean sourceDominant;
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack7;
        ModelMerger this;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.PatternSet;

        source := @parameter1: org.apache.maven.model.PatternSet;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $stack5 = virtualinvoke target.<org.apache.maven.model.PatternSet: java.util.List getExcludes()>();

        $stack6 = virtualinvoke source.<org.apache.maven.model.PatternSet: java.util.List getExcludes()>();

        $stack7 = staticinvoke <ModelMerger$lambda_mergePatternSet_Excludes_7__316: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        $stack8 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,boolean,org.apache.maven.model.merge.ModelMerger$KeyComputer)>($stack5, $stack6, sourceDominant, $stack7);

        virtualinvoke target.<org.apache.maven.model.PatternSet: void setExcludes(java.util.List)>($stack8);

        return;
    }

    protected void mergeProfile(org.apache.maven.model.Profile, org.apache.maven.model.Profile, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Profile target, source;
        boolean sourceDominant;
        java.util.Map context;
        org.apache.maven.model.merge.ModelMerger $r0;
        org.apache.maven.model.ModelBase $r1, $r2;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Profile;

        source := @parameter1: org.apache.maven.model.Profile;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.ModelBase) target;

        $r2 = (org.apache.maven.model.ModelBase) source;

        virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: void mergeModelBase(org.apache.maven.model.ModelBase,org.apache.maven.model.ModelBase,boolean,java.util.Map)>($r1, $r2, sourceDominant, context);

        return;
    }

    protected void mergeActivation(org.apache.maven.model.Activation, org.apache.maven.model.Activation, boolean, java.util.Map)
    {
        ModelMerger this;
        org.apache.maven.model.Activation target, source;
        boolean sourceDominant;
        java.util.Map context;

        this := @this: ModelMerger;

        target := @parameter0: org.apache.maven.model.Activation;

        source := @parameter1: org.apache.maven.model.Activation;

        sourceDominant := @parameter2: boolean;

        context := @parameter3: java.util.Map;

        return;
    }

    protected java.lang.Object getDependencyKey(org.apache.maven.model.Dependency)
    {
        org.apache.maven.model.Dependency dependency;
        ModelMerger this;

        this := @this: ModelMerger;

        dependency := @parameter0: org.apache.maven.model.Dependency;

        return dependency;
    }

    protected java.lang.Object getPluginKey(org.apache.maven.model.Plugin)
    {
        org.apache.maven.model.Plugin plugin;
        ModelMerger this;

        this := @this: ModelMerger;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        return plugin;
    }

    protected java.lang.Object getPluginExecutionKey(org.apache.maven.model.PluginExecution)
    {
        org.apache.maven.model.PluginExecution pluginExecution;
        ModelMerger this;

        this := @this: ModelMerger;

        pluginExecution := @parameter0: org.apache.maven.model.PluginExecution;

        return pluginExecution;
    }

    protected java.lang.Object getReportPluginKey(org.apache.maven.model.ReportPlugin)
    {
        org.apache.maven.model.ReportPlugin reportPlugin;
        ModelMerger this;

        this := @this: ModelMerger;

        reportPlugin := @parameter0: org.apache.maven.model.ReportPlugin;

        return reportPlugin;
    }

    protected java.lang.Object getReportSetKey(org.apache.maven.model.ReportSet)
    {
        org.apache.maven.model.ReportSet reportSet;
        ModelMerger this;

        this := @this: ModelMerger;

        reportSet := @parameter0: org.apache.maven.model.ReportSet;

        return reportSet;
    }

    protected java.lang.Object getLicenseKey(org.apache.maven.model.License)
    {
        org.apache.maven.model.License license;
        ModelMerger this;

        this := @this: ModelMerger;

        license := @parameter0: org.apache.maven.model.License;

        return license;
    }

    protected java.lang.Object getMailingListKey(org.apache.maven.model.MailingList)
    {
        org.apache.maven.model.MailingList mailingList;
        ModelMerger this;

        this := @this: ModelMerger;

        mailingList := @parameter0: org.apache.maven.model.MailingList;

        return mailingList;
    }

    protected java.lang.Object getDeveloperKey(org.apache.maven.model.Developer)
    {
        org.apache.maven.model.Developer developer;
        ModelMerger this;

        this := @this: ModelMerger;

        developer := @parameter0: org.apache.maven.model.Developer;

        return developer;
    }

    protected java.lang.Object getContributorKey(org.apache.maven.model.Contributor)
    {
        org.apache.maven.model.Contributor contributor;
        ModelMerger this;

        this := @this: ModelMerger;

        contributor := @parameter0: org.apache.maven.model.Contributor;

        return contributor;
    }

    protected java.lang.Object getProfileKey(org.apache.maven.model.Profile)
    {
        org.apache.maven.model.Profile profile;
        ModelMerger this;

        this := @this: ModelMerger;

        profile := @parameter0: org.apache.maven.model.Profile;

        return profile;
    }

    protected java.lang.Object getRepositoryKey(org.apache.maven.model.Repository)
    {
        ModelMerger this;
        org.apache.maven.model.Repository repository;
        java.lang.Object $stack2;
        org.apache.maven.model.merge.ModelMerger $r0;
        org.apache.maven.model.RepositoryBase $r1;

        this := @this: ModelMerger;

        repository := @parameter0: org.apache.maven.model.Repository;

        $r0 = (org.apache.maven.model.merge.ModelMerger) this;

        $r1 = (org.apache.maven.model.RepositoryBase) repository;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.merge.ModelMerger: java.lang.Object getRepositoryBaseKey(org.apache.maven.model.RepositoryBase)>($r1);

        return $stack2;
    }

    protected java.lang.Object getRepositoryBaseKey(org.apache.maven.model.RepositoryBase)
    {
        org.apache.maven.model.RepositoryBase repositoryBase;
        ModelMerger this;

        this := @this: ModelMerger;

        repositoryBase := @parameter0: org.apache.maven.model.RepositoryBase;

        return repositoryBase;
    }

    protected java.lang.Object getNotifierKey(org.apache.maven.model.Notifier)
    {
        org.apache.maven.model.Notifier notifier;
        ModelMerger this;

        this := @this: ModelMerger;

        notifier := @parameter0: org.apache.maven.model.Notifier;

        return notifier;
    }

    protected java.lang.Object getResourceKey(org.apache.maven.model.Resource)
    {
        org.apache.maven.model.Resource resource;
        ModelMerger this;

        this := @this: ModelMerger;

        resource := @parameter0: org.apache.maven.model.Resource;

        return resource;
    }

    protected java.lang.Object getExtensionKey(org.apache.maven.model.Extension)
    {
        org.apache.maven.model.Extension extension;
        ModelMerger this;

        this := @this: ModelMerger;

        extension := @parameter0: org.apache.maven.model.Extension;

        return extension;
    }

    protected java.lang.Object getExclusionKey(org.apache.maven.model.Exclusion)
    {
        org.apache.maven.model.Exclusion exclusion;
        ModelMerger this;

        this := @this: ModelMerger;

        exclusion := @parameter0: org.apache.maven.model.Exclusion;

        return exclusion;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getDependencyKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getDependencyKey_8__317: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getPluginKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getPluginKey_9__319: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getPluginExecutionKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getPluginExecutionKey_10__318: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getReportPluginKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getReportPluginKey_11__320: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getReportSetKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getReportSetKey_12__321: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getLicenseKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getLicenseKey_13__322: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getMailingListKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getMailingListKey_14__323: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getDeveloperKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getDeveloperKey_15__324: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getContributorKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getContributorKey_16__325: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getProfileKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getProfileKey_17__326: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getRepositoryKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getRepositoryKey_18__327: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getRepositoryBaseKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getRepositoryBaseKey_19__328: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getNotifierKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getNotifierKey_20__330: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getResourceKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getResourceKey_21__329: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getExtensionKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getExtensionKey_22__331: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    protected org.apache.maven.model.merge.ModelMerger$KeyComputer getExclusionKey()
    {
        org.apache.maven.model.merge.ModelMerger$KeyComputer $stack1;
        ModelMerger this;

        this := @this: ModelMerger;

        $stack1 = staticinvoke <ModelMerger$lambda_getExclusionKey_23__332: org.apache.maven.model.merge.ModelMerger$KeyComputer bootstrap$()>();

        return $stack1;
    }

    private static java.util.List merge(java.util.List, java.util.List, boolean, org.apache.maven.model.merge.ModelMerger$KeyComputer)
    {
        java.util.List tgt, src, $stack5;
        org.apache.maven.model.merge.ModelMerger$KeyComputer computer;
        boolean sourceDominant;
        java.util.function.BinaryOperator $stack4;

        tgt := @parameter0: java.util.List;

        src := @parameter1: java.util.List;

        sourceDominant := @parameter2: boolean;

        computer := @parameter3: org.apache.maven.model.merge.ModelMerger$KeyComputer;

        $stack4 = staticinvoke <ModelMerger$lambda_merge_24__333: java.util.function.BinaryOperator bootstrap$(boolean)>(sourceDominant);

        $stack5 = staticinvoke <org.apache.maven.model.merge.ModelMerger: java.util.List merge(java.util.List,java.util.List,org.apache.maven.model.merge.ModelMerger$KeyComputer,java.util.function.BinaryOperator)>(tgt, src, computer, $stack4);

        return $stack5;
    }

    private static java.util.List merge(java.util.List, java.util.List, org.apache.maven.model.merge.ModelMerger$KeyComputer, java.util.function.BinaryOperator)
    {
        java.util.List src, tgt, $r0;
        boolean $stack5, $stack6;
        org.apache.maven.model.merge.ModelMerger$KeyComputer computer;
        int $stack8, $stack9, $stack10;
        java.util.function.BinaryOperator $stack11, remapping;
        org.apache.maven.model.merge.ModelMerger$MergingList list, $u0;

        tgt := @parameter0: java.util.List;

        src := @parameter1: java.util.List;

        computer := @parameter2: org.apache.maven.model.merge.ModelMerger$KeyComputer;

        remapping := @parameter3: java.util.function.BinaryOperator;

        $stack5 = interfaceinvoke src.<java.util.List: boolean isEmpty()>();

        if $stack5 == 0 goto label1;

        return tgt;

     label1:
        $stack6 = tgt instanceof org.apache.maven.model.merge.ModelMerger$MergingList;

        if $stack6 == 0 goto label2;

        list = (org.apache.maven.model.merge.ModelMerger$MergingList) tgt;

        goto label3;

     label2:
        $u0 = new org.apache.maven.model.merge.ModelMerger$MergingList;

        $stack8 = interfaceinvoke src.<java.util.List: int size()>();

        $stack9 = interfaceinvoke tgt.<java.util.List: int size()>();

        $stack10 = $stack8 + $stack9;

        specialinvoke $u0.<org.apache.maven.model.merge.ModelMerger$MergingList: void <init>(org.apache.maven.model.merge.ModelMerger$KeyComputer,int)>(computer, $stack10);

        list = $u0;

        $stack11 = staticinvoke <ModelMerger$lambda_merge_25__334: java.util.function.BinaryOperator bootstrap$()>();

        virtualinvoke $u0.<org.apache.maven.model.merge.ModelMerger$MergingList: void mergeAll(java.util.Collection,java.util.function.BinaryOperator)>(tgt, $stack11);

     label3:
        virtualinvoke list.<org.apache.maven.model.merge.ModelMerger$MergingList: void mergeAll(java.util.Collection,java.util.function.BinaryOperator)>(src, remapping);

        $r0 = (java.util.List) list;

        return $r0;
    }

    private static java.lang.Object lambda$merge$25(java.lang.Object, java.lang.Object)
    {
        java.lang.Object s, t;

        t := @parameter0: java.lang.Object;

        s := @parameter1: java.lang.Object;

        return s;
    }

    private static java.lang.Object lambda$merge$24(boolean, java.lang.Object, java.lang.Object)
    {
        boolean sourceDominant;
        java.lang.Object t, s, $stack3;

        sourceDominant := @parameter0: boolean;

        t := @parameter1: java.lang.Object;

        s := @parameter2: java.lang.Object;

        if sourceDominant == 0 goto label1;

        $stack3 = s;

        goto label2;

     label1:
        $stack3 = t;

     label2:
        return $stack3;
    }

    private static java.lang.Object lambda$getExclusionKey$23(org.apache.maven.model.Exclusion)
    {
        org.apache.maven.model.Exclusion e;

        e := @parameter0: org.apache.maven.model.Exclusion;

        return e;
    }

    private static java.lang.Object lambda$getExtensionKey$22(org.apache.maven.model.Extension)
    {
        org.apache.maven.model.Extension e;

        e := @parameter0: org.apache.maven.model.Extension;

        return e;
    }

    private static java.lang.Object lambda$getResourceKey$21(org.apache.maven.model.Resource)
    {
        org.apache.maven.model.Resource r;

        r := @parameter0: org.apache.maven.model.Resource;

        return r;
    }

    private static java.lang.Object lambda$getNotifierKey$20(org.apache.maven.model.Notifier)
    {
        org.apache.maven.model.Notifier n;

        n := @parameter0: org.apache.maven.model.Notifier;

        return n;
    }

    private static java.lang.Object lambda$getRepositoryBaseKey$19(org.apache.maven.model.RepositoryBase)
    {
        org.apache.maven.model.RepositoryBase r;

        r := @parameter0: org.apache.maven.model.RepositoryBase;

        return r;
    }

    private static java.lang.Object lambda$getRepositoryKey$18(org.apache.maven.model.Repository)
    {
        org.apache.maven.model.Repository r;

        r := @parameter0: org.apache.maven.model.Repository;

        return r;
    }

    private static java.lang.Object lambda$getProfileKey$17(org.apache.maven.model.Profile)
    {
        org.apache.maven.model.Profile p;

        p := @parameter0: org.apache.maven.model.Profile;

        return p;
    }

    private static java.lang.Object lambda$getContributorKey$16(org.apache.maven.model.Contributor)
    {
        org.apache.maven.model.Contributor c;

        c := @parameter0: org.apache.maven.model.Contributor;

        return c;
    }

    private static java.lang.Object lambda$getDeveloperKey$15(org.apache.maven.model.Developer)
    {
        org.apache.maven.model.Developer d;

        d := @parameter0: org.apache.maven.model.Developer;

        return d;
    }

    private static java.lang.Object lambda$getMailingListKey$14(org.apache.maven.model.MailingList)
    {
        org.apache.maven.model.MailingList l;

        l := @parameter0: org.apache.maven.model.MailingList;

        return l;
    }

    private static java.lang.Object lambda$getLicenseKey$13(org.apache.maven.model.License)
    {
        org.apache.maven.model.License l;

        l := @parameter0: org.apache.maven.model.License;

        return l;
    }

    private static java.lang.Object lambda$getReportSetKey$12(org.apache.maven.model.ReportSet)
    {
        org.apache.maven.model.ReportSet s;

        s := @parameter0: org.apache.maven.model.ReportSet;

        return s;
    }

    private static java.lang.Object lambda$getReportPluginKey$11(org.apache.maven.model.ReportPlugin)
    {
        org.apache.maven.model.ReportPlugin p;

        p := @parameter0: org.apache.maven.model.ReportPlugin;

        return p;
    }

    private static java.lang.Object lambda$getPluginExecutionKey$10(org.apache.maven.model.PluginExecution)
    {
        org.apache.maven.model.PluginExecution e;

        e := @parameter0: org.apache.maven.model.PluginExecution;

        return e;
    }

    private static java.lang.Object lambda$getPluginKey$9(org.apache.maven.model.Plugin)
    {
        org.apache.maven.model.Plugin p;

        p := @parameter0: org.apache.maven.model.Plugin;

        return p;
    }

    private static java.lang.Object lambda$getDependencyKey$8(org.apache.maven.model.Dependency)
    {
        org.apache.maven.model.Dependency d;

        d := @parameter0: org.apache.maven.model.Dependency;

        return d;
    }

    private static java.lang.Object lambda$mergePatternSet_Excludes$7(java.lang.String)
    {
        java.lang.String e;

        e := @parameter0: java.lang.String;

        return e;
    }

    private static java.lang.Object lambda$mergePatternSet_Includes$6(java.lang.String)
    {
        java.lang.String e;

        e := @parameter0: java.lang.String;

        return e;
    }

    private static java.lang.Object lambda$mergePluginExecution_Goals$5(java.lang.String)
    {
        java.lang.String e;

        e := @parameter0: java.lang.String;

        return e;
    }

    private static java.lang.Object lambda$mergeBuildBase_Filters$4(java.lang.String)
    {
        java.lang.String e;

        e := @parameter0: java.lang.String;

        return e;
    }

    private static java.lang.Object lambda$mergeContributor_Roles$3(java.lang.String)
    {
        java.lang.String e;

        e := @parameter0: java.lang.String;

        return e;
    }

    private static java.lang.Object lambda$mergeMailingList_OtherArchives$2(java.lang.String)
    {
        java.lang.String e;

        e := @parameter0: java.lang.String;

        return e;
    }

    private static java.lang.Object lambda$mergeReportSet_Reports$1(java.lang.String)
    {
        java.lang.String e;

        e := @parameter0: java.lang.String;

        return e;
    }

    private static java.lang.Object lambda$mergeModelBase_Modules$0(java.lang.String)
    {
        java.lang.String e;

        e := @parameter0: java.lang.String;

        return e;
    }
}
