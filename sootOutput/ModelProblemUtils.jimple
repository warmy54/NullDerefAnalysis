public class ModelProblemUtils extends java.lang.Object
{

    public void <init>()
    {
        ModelProblemUtils this;

        this := @this: ModelProblemUtils;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String toSourceHint(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model model;
        java.lang.StringBuilder $stack3, $stack8, $stack9;
        java.lang.String $stack4, $stack7;
        java.io.File pomFile;

        model := @parameter0: org.apache.maven.model.Model;

        if model != null goto label1;

        return "";

     label1:
        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>(128);

        $stack4 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(org.apache.maven.model.Model)>(model);

        virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4);

        pomFile = virtualinvoke model.<org.apache.maven.model.Model: java.io.File getPomFile()>();

        if pomFile == null goto label2;

        $stack8 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(pomFile);

        virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label2:
        $stack7 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    static java.lang.String toPath(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model model;
        java.io.File pomFile;
        java.lang.String path;

        model := @parameter0: org.apache.maven.model.Model;

        path = "";

        if model == null goto label1;

        pomFile = virtualinvoke model.<org.apache.maven.model.Model: java.io.File getPomFile()>();

        if pomFile == null goto label1;

        path = virtualinvoke pomFile.<java.io.File: java.lang.String getAbsolutePath()>();

     label1:
        return path;
    }

    static java.lang.String toId(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model model;
        java.lang.String artifactId, $stack7, groupId, version;
        org.apache.maven.model.Parent $stack11, $stack13, $stack15, $stack19;

        model := @parameter0: org.apache.maven.model.Model;

        if model != null goto label1;

        return "";

     label1:
        groupId = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        if groupId != null goto label2;

        $stack15 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack15 == null goto label2;

        $stack19 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        groupId = virtualinvoke $stack19.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

     label2:
        artifactId = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        version = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        if version != null goto label3;

        $stack11 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        if $stack11 == null goto label3;

        $stack13 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        version = virtualinvoke $stack13.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

     label3:
        if version != null goto label4;

        version = "[unknown-version]";

     label4:
        $stack7 = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String toId(java.lang.String,java.lang.String,java.lang.String)>(groupId, artifactId, version);

        return $stack7;
    }

    static java.lang.String toId(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $stack4;
        java.lang.String groupId, artifactId, version, $stack22, $stack16, $stack12, $stack10;
        int $stack11, $stack15, $stack21;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        version := @parameter2: java.lang.String;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>(int)>(128);

        if groupId == null goto label1;

        $stack21 = virtualinvoke groupId.<java.lang.String: int length()>();

        if $stack21 <= 0 goto label1;

        $stack22 = groupId;

        goto label2;

     label1:
        $stack22 = "[unknown-group-id]";

     label2:
        virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22);

        virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        if artifactId == null goto label3;

        $stack15 = virtualinvoke artifactId.<java.lang.String: int length()>();

        if $stack15 <= 0 goto label3;

        $stack16 = artifactId;

        goto label4;

     label3:
        $stack16 = "[unknown-artifact-id]";

     label4:
        virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        if version == null goto label5;

        $stack11 = virtualinvoke version.<java.lang.String: int length()>();

        if $stack11 <= 0 goto label5;

        $stack12 = version;

        goto label6;

     label5:
        $stack12 = "[unknown-version]";

     label6:
        virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack10 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;
    }

    public static java.lang.String formatLocation(org.apache.maven.model.building.ModelProblem, java.lang.String)
    {
        java.lang.StringBuilder $stack3, $stack10, $stack19;
        org.apache.maven.model.building.ModelProblem problem;
        java.lang.String $stack4, projectId, $stack27, $stack29, $stack33, $stack8;
        boolean $stack5;
        int $stack9, $stack11, $stack18, $stack20, $stack30, $stack32, $stack6, $stack7;

        problem := @parameter0: org.apache.maven.model.building.ModelProblem;

        projectId := @parameter1: java.lang.String;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>(256);

        $stack4 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.String getModelId()>();

        $stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>(projectId);

        if $stack5 != 0 goto label2;

        $stack27 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.String getModelId()>();

        virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27);

        $stack29 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.String getSource()>();

        $stack30 = virtualinvoke $stack29.<java.lang.String: int length()>();

        if $stack30 <= 0 goto label2;

        $stack32 = virtualinvoke $stack3.<java.lang.StringBuilder: int length()>();

        if $stack32 <= 0 goto label1;

        virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label1:
        $stack33 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.String getSource()>();

        virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33);

     label2:
        $stack6 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: int getLineNumber()>();

        if $stack6 <= 0 goto label4;

        $stack18 = virtualinvoke $stack3.<java.lang.StringBuilder: int length()>();

        if $stack18 <= 0 goto label3;

        virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        $stack19 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("line ");

        $stack20 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: int getLineNumber()>();

        virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack20);

     label4:
        $stack7 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: int getColumnNumber()>();

        if $stack7 <= 0 goto label6;

        $stack9 = virtualinvoke $stack3.<java.lang.StringBuilder: int length()>();

        if $stack9 <= 0 goto label5;

        virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label5:
        $stack10 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("column ");

        $stack11 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: int getColumnNumber()>();

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack11);

     label6:
        $stack8 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack8;
    }
}
