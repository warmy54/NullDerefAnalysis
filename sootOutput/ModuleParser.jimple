public class ModuleParser extends java.lang.Object
{
    public static final java.util.Map cache;

    public void <init>()
    {
        ModuleParser this;

        this := @this: ModuleParser;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void parse(org.ooc.frontend.model.Module, java.lang.String, java.io.File, org.ubi.SourceReader, org.ooc.frontend.model.tokens.TokenReader, org.ooc.frontend.parser.Parser)
    {
        org.ooc.frontend.model.Module module, cached;
        java.io.File file, $stack53, vDecl#38, $u1, $u3;
        long $stack11, $stack36, $stack37;
        org.ooc.frontend.parser.Parser parser;
        org.ooc.frontend.model.tokens.TokenReader reader;
        org.ooc.frontend.model.NodeList $stack13, $stack71, $stack73, $stack76, $stack84, $stack91, vDecls;
        boolean $stack15, $stack19, $stack72, $stack74, $stack75, $stack78, $stack86, $stack88, $stack12;
        java.lang.Object $stack16, $stack24, $stack58, $stack62, $stack80, $stack89;
        java.lang.String $stack17, $stack28, $stack40, $stack49, $stack50, $stack52, $stack83, $stack94, $stack96, fullName, errToken#37;
        org.ooc.frontend.BuildParams $stack20, $stack42, $stack77;
        org.ooc.frontend.PathList $stack21, $stack43;
        java.util.Map $stack23;
        java.io.PrintStream $stack27;
        byte $stack38, $stack60, $stack64;
        org.ooc.frontend.model.tokens.Token $stack59, $stack63, errToken#34;
        org.ubi.SourceReader sReader;
        org.ooc.frontend.model.FunctionDecl $stack70;
        org.ooc.frontend.model.Visitable $stack79;
        org.ubi.FileLocation $stack82;
        org.ooc.middle.structs.MultiMap $stack93, $stack95;
        java.io.IOException $stack98;
        org.ooc.frontend.model.ClassDecl classDecl;
        org.ooc.frontend.model.CoverDecl classDecl#26;
        org.ooc.frontend.model.OpDecl classDecl#27;
        org.ooc.frontend.model.Node classDecl#28, $r0, $r1, $r4;
        java.util.Iterator errToken, classDecl#35;
        org.ooc.frontend.model.VariableDecl vDecl, vDecls#32;
        org.ooc.frontend.model.Declaration vDecls#33;
        org.ooc.frontend.model.Import vDecls#36;
        org.ubi.CompilationFailedError $u0;
        org.ooc.middle.OocCompilationError $u2;
        org.ubi.Locatable $r2;
        java.lang.Throwable $r3, $r5;

        module := @parameter0: org.ooc.frontend.model.Module;

        fullName := @parameter1: java.lang.String;

        file := @parameter2: java.io.File;

        sReader := @parameter3: org.ubi.SourceReader;

        reader := @parameter4: org.ooc.frontend.model.tokens.TokenReader;

        parser := @parameter5: org.ooc.frontend.parser.Parser;

        $stack11 = virtualinvoke file.<java.io.File: long lastModified()>();

        module.<org.ooc.frontend.model.Module: long lastModified> = $stack11;

     label01:
        staticinvoke <org.ooc.frontend.parser.ModuleParser: void addLangImports(org.ooc.frontend.model.Module,org.ooc.frontend.parser.Parser)>(module, parser);

     label02:
        $stack12 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: boolean hasNext()>();

        if $stack12 == 0 goto label18;

        $stack58 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack59 = (org.ooc.frontend.model.tokens.Token) $stack58;

        $stack60 = $stack59.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack60 == 51 goto label03;

        $stack62 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        $stack63 = (org.ooc.frontend.model.tokens.Token) $stack62;

        $stack64 = $stack63.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack64 != 38 goto label04;

     label03:
        virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: void skip()>();

        goto label02;

     label04:
        classDecl = staticinvoke <org.ooc.frontend.parser.ClassDeclParser: org.ooc.frontend.model.ClassDecl parse(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader)>(module, sReader, reader);

        if classDecl == null goto label05;

        $stack95 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.middle.structs.MultiMap getTypes()>();

        $stack96 = virtualinvoke classDecl.<org.ooc.frontend.model.ClassDecl: java.lang.String getName()>();

        virtualinvoke $stack95.<org.ooc.middle.structs.MultiMap: void put(java.lang.Object,java.lang.Object)>($stack96, classDecl);

        goto label02;

     label05:
        classDecl#26 = staticinvoke <org.ooc.frontend.parser.CoverDeclParser: org.ooc.frontend.model.CoverDecl parse(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader)>(module, sReader, reader);

        if classDecl#26 == null goto label06;

        $stack93 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.middle.structs.MultiMap getTypes()>();

        $stack94 = virtualinvoke classDecl#26.<org.ooc.frontend.model.CoverDecl: java.lang.String getName()>();

        virtualinvoke $stack93.<org.ooc.middle.structs.MultiMap: void put(java.lang.Object,java.lang.Object)>($stack94, classDecl#26);

        goto label02;

     label06:
        classDecl#27 = staticinvoke <org.ooc.frontend.parser.OpDeclParser: org.ooc.frontend.model.OpDecl parse(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader)>(module, sReader, reader);

        if classDecl#27 == null goto label07;

        $stack91 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getOps()>();

        $r0 = (org.ooc.frontend.model.Node) classDecl#27;

        virtualinvoke $stack91.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r0);

        goto label02;

     label07:
        classDecl#28 = staticinvoke <org.ooc.frontend.parser.VariableDeclParser: org.ooc.frontend.model.Node parseMulti(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader)>(module, sReader, reader);

        if classDecl#28 == null goto label11;

        $stack86 = classDecl#28 instanceof org.ooc.frontend.model.NodeList;

        if $stack86 == 0 goto label10;

        vDecls = (org.ooc.frontend.model.NodeList) classDecl#28;

        errToken = virtualinvoke vDecls.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label08:
        $stack88 = interfaceinvoke errToken.<java.util.Iterator: boolean hasNext()>();

        if $stack88 == 0 goto label09;

        $stack89 = interfaceinvoke errToken.<java.util.Iterator: java.lang.Object next()>();

        vDecl = (org.ooc.frontend.model.VariableDecl) $stack89;

        virtualinvoke vDecl.<org.ooc.frontend.model.VariableDecl: void addToModule(org.ooc.frontend.model.Module)>(module);

        virtualinvoke vDecl.<org.ooc.frontend.model.VariableDecl: void setGlobal(boolean)>(1);

        goto label08;

     label09:
        goto label02;

     label10:
        vDecls#32 = (org.ooc.frontend.model.VariableDecl) classDecl#28;

        virtualinvoke vDecls#32.<org.ooc.frontend.model.VariableDecl: void addToModule(org.ooc.frontend.model.Module)>(module);

        virtualinvoke vDecls#32.<org.ooc.frontend.model.VariableDecl: void setGlobal(boolean)>(1);

        goto label02;

     label11:
        vDecls#33 = staticinvoke <org.ooc.frontend.parser.DeclarationParser: org.ooc.frontend.model.Declaration parse(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader)>(module, sReader, reader);

        if vDecls#33 == null goto label12;

        $stack84 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getBody()>();

        $r1 = (org.ooc.frontend.model.Node) vDecls#33;

        virtualinvoke $stack84.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r1);

        goto label02;

     label12:
        $stack70 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.FunctionDecl getLoadFunc()>();

        $stack71 = virtualinvoke $stack70.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getBody()>();

        $stack72 = staticinvoke <org.ooc.frontend.parser.LineParser: boolean fill(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,org.ooc.frontend.model.NodeList)>(module, sReader, reader, $stack71);

        if $stack72 == 0 goto label13;

        goto label02;

     label13:
        $stack73 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getIncludes()>();

        $stack74 = staticinvoke <org.ooc.frontend.parser.IncludeParser: boolean fill(org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,org.ooc.frontend.model.NodeList)>(sReader, reader, $stack73);

        if $stack74 == 0 goto label14;

        goto label02;

     label14:
        $stack75 = staticinvoke <org.ooc.frontend.parser.ImportParser: boolean fill(org.ooc.frontend.model.Module,org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader)>(module, sReader, reader);

        if $stack75 == 0 goto label15;

        goto label02;

     label15:
        $stack76 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getUses()>();

        $stack77 = parser.<org.ooc.frontend.parser.Parser: org.ooc.frontend.BuildParams params>;

        $stack78 = staticinvoke <org.ooc.frontend.parser.UseParser: boolean fill(org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader,org.ooc.frontend.model.NodeList,org.ooc.frontend.BuildParams)>(sReader, reader, $stack76, $stack77);

        if $stack78 == 0 goto label16;

        goto label02;

     label16:
        $stack79 = staticinvoke <org.ooc.frontend.parser.CommentParser: org.ooc.frontend.model.Visitable parse(org.ubi.SourceReader,org.ooc.frontend.model.tokens.TokenReader)>(sReader, reader);

        if $stack79 == null goto label17;

        goto label02;

     label17:
        $stack80 = virtualinvoke reader.<org.ooc.frontend.model.tokens.TokenReader: java.lang.Object peek()>();

        errToken#34 = (org.ooc.frontend.model.tokens.Token) $stack80;

        $u0 = new org.ubi.CompilationFailedError;

        $r2 = (org.ubi.Locatable) errToken#34;

        $stack82 = virtualinvoke sReader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(org.ubi.Locatable)>($r2);

        $stack83 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.tokens.Token)>(errToken#34) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Expected declaration, include, or import in source unit, but got \u0001");

        specialinvoke $u0.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack82, $stack83);

        $r3 = (java.lang.Throwable) $u0;

        throw $r3;

     label18:
        $stack13 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getAllImports()>();

        classDecl#35 = virtualinvoke $stack13.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label19:
        $stack15 = interfaceinvoke classDecl#35.<java.util.Iterator: boolean hasNext()>();

        if $stack15 == 0 goto label25;

        $stack16 = interfaceinvoke classDecl#35.<java.util.Iterator: java.lang.Object next()>();

        vDecls#36 = (org.ooc.frontend.model.Import) $stack16;

        $stack17 = virtualinvoke vDecls#36.<org.ooc.frontend.model.Import: java.lang.String getPath()>();

        errToken#37 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.ooc");

        $stack19 = virtualinvoke errToken#37.<java.lang.String: boolean startsWith(java.lang.String)>("..");

        if $stack19 == 0 goto label20;

        $u1 = new java.io.File;

        $stack52 = virtualinvoke module.<org.ooc.frontend.model.Module: java.lang.String getParentPath()>();

        specialinvoke $u1.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack52, errToken#37);

        $stack53 = staticinvoke <org.ooc.utils.FileUtils: java.io.File resolveRedundancies(java.io.File)>($u1);

        errToken#37 = virtualinvoke $stack53.<java.io.File: java.lang.String getPath()>();

     label20:
        $stack20 = parser.<org.ooc.frontend.parser.Parser: org.ooc.frontend.BuildParams params>;

        $stack21 = $stack20.<org.ooc.frontend.BuildParams: org.ooc.frontend.PathList sourcePath>;

        vDecl#38 = virtualinvoke $stack21.<org.ooc.frontend.PathList: java.io.File getElement(java.lang.String)>(errToken#37);

        if vDecl#38 != null goto label21;

        $stack40 = virtualinvoke module.<org.ooc.frontend.model.Module: java.lang.String getParentPath()>();

        errToken#37 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack40, errToken#37) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/\u0001");

        $stack42 = parser.<org.ooc.frontend.parser.Parser: org.ooc.frontend.BuildParams params>;

        $stack43 = $stack42.<org.ooc.frontend.BuildParams: org.ooc.frontend.PathList sourcePath>;

        vDecl#38 = virtualinvoke $stack43.<org.ooc.frontend.PathList: java.io.File getElement(java.lang.String)>(errToken#37);

        if vDecl#38 != null goto label21;

        $u2 = new org.ooc.middle.OocCompilationError;

        $stack49 = virtualinvoke vDecls#36.<org.ooc.frontend.model.Import: java.lang.String getPath()>();

        $stack50 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack49) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Module not found in sourcepath: \u0001");

        $r4 = (org.ooc.frontend.model.Node) vDecls#36;

        specialinvoke $u2.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.Module,java.lang.String)>($r4, module, $stack50);

        $r5 = (java.lang.Throwable) $u2;

        throw $r5;

     label21:
        $stack23 = <org.ooc.frontend.parser.ModuleParser: java.util.Map cache>;

        $stack24 = interfaceinvoke $stack23.<java.util.Map: java.lang.Object get(java.lang.Object)>(errToken#37);

        cached = (org.ooc.frontend.model.Module) $stack24;

        if cached == null goto label22;

        $u3 = new java.io.File;

        specialinvoke $u3.<java.io.File: void <init>(java.io.File,java.lang.String)>(vDecl#38, errToken#37);

        $stack36 = virtualinvoke $u3.<java.io.File: long lastModified()>();

        $stack37 = cached.<org.ooc.frontend.model.Module: long lastModified>;

        $stack38 = $stack36 cmp $stack37;

        if $stack38 <= 0 goto label24;

     label22:
        if cached == null goto label23;

        $stack27 = <java.lang.System: java.io.PrintStream out>;

        $stack28 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(errToken#37) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 has been changed, recompiling...");

        virtualinvoke $stack27.<java.io.PrintStream: void println(java.lang.String)>($stack28);

     label23:
        cached = virtualinvoke parser.<org.ooc.frontend.parser.Parser: org.ooc.frontend.model.Module parse(java.lang.String,java.io.File,org.ooc.frontend.model.Import)>(errToken#37, vDecl#38, vDecls#36);

     label24:
        virtualinvoke vDecls#36.<org.ooc.frontend.model.Import: void setModule(org.ooc.frontend.model.Module)>(cached);

        goto label19;

     label25:
        goto label27;

     label26:
        $stack98 := @caughtexception;

        virtualinvoke $stack98.<java.io.IOException: void printStackTrace()>();

        staticinvoke <java.lang.System: void exit(int)>(1);

     label27:
        return;

        catch java.io.IOException from label01 to label25 with label26;
    }

    static void addLangImports(org.ooc.frontend.model.Module, org.ooc.frontend.parser.Parser)
    {
        org.ooc.frontend.parser.Parser parser;
        org.ooc.frontend.BuildParams $stack5;
        org.ooc.frontend.PathList $stack6;
        java.util.Collection paths;
        java.util.Iterator l3;
        boolean $stack9, $stack12, $stack19;
        java.lang.Object $stack10;
        java.lang.String $stack11, $stack18, path;
        int $stack15, $stack16;
        org.ooc.frontend.model.Module module;
        org.ooc.frontend.model.NodeList $stack20;
        org.ooc.frontend.model.tokens.Token $stack22;
        org.ooc.frontend.model.Import $u0;
        org.ooc.frontend.model.Node $r0;

        module := @parameter0: org.ooc.frontend.model.Module;

        parser := @parameter1: org.ooc.frontend.parser.Parser;

        $stack5 = parser.<org.ooc.frontend.parser.Parser: org.ooc.frontend.BuildParams params>;

        $stack6 = $stack5.<org.ooc.frontend.BuildParams: org.ooc.frontend.PathList sourcePath>;

        paths = virtualinvoke $stack6.<org.ooc.frontend.PathList: java.util.Collection getRelativePaths(java.lang.String)>("lang");

        l3 = interfaceinvoke paths.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack10 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        path = (java.lang.String) $stack10;

        $stack11 = virtualinvoke path.<java.lang.String: java.lang.String toLowerCase()>();

        $stack12 = virtualinvoke $stack11.<java.lang.String: boolean endsWith(java.lang.String)>(".ooc");

        if $stack12 == 0 goto label2;

        $stack15 = virtualinvoke path.<java.lang.String: int length()>();

        $stack16 = $stack15 - 4;

        path = virtualinvoke path.<java.lang.String: java.lang.String substring(int,int)>(0, $stack16);

        $stack18 = virtualinvoke module.<org.ooc.frontend.model.Module: java.lang.String getPath()>();

        $stack19 = virtualinvoke path.<java.lang.String: boolean equals(java.lang.Object)>($stack18);

        if $stack19 != 0 goto label2;

        $stack20 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getGlobalImports()>();

        $u0 = new org.ooc.frontend.model.Import;

        $stack22 = <org.ooc.frontend.model.tokens.Token: org.ooc.frontend.model.tokens.Token defaultToken>;

        specialinvoke $u0.<org.ooc.frontend.model.Import: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>(path, $stack22);

        $r0 = (org.ooc.frontend.model.Node) $u0;

        virtualinvoke $stack20.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r0);

     label2:
        goto label1;

     label3:
        return;
    }

    public static void clearCache()
    {
        java.util.Map $stack0;

        $stack0 = <org.ooc.frontend.parser.ModuleParser: java.util.Map cache>;

        interfaceinvoke $stack0.<java.util.Map: void clear()>();

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $stack0;

        $stack0 = new java.util.HashMap;

        specialinvoke $stack0.<java.util.HashMap: void <init>()>();

        <org.ooc.frontend.parser.ModuleParser: java.util.Map cache> = $stack0;

        return;
    }
}
