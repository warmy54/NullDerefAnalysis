public class ModuleSortedWrapper extends sortpom.wrapper.content.SortedWrapper
{
    private final java.lang.String text;

    public void <init>(org.jdom.Element, int)
    {
        ModuleSortedWrapper this;
        org.jdom.Element element;
        int sortOrder;
        java.lang.String $stack3;
        sortpom.wrapper.content.ModuleSortedWrapper $r0;

        this := @this: ModuleSortedWrapper;

        element := @parameter0: org.jdom.Element;

        sortOrder := @parameter1: int;

        specialinvoke this.<sortpom.wrapper.content.SortedWrapper: void <init>(org.jdom.Element,int)>(element, sortOrder);

        $stack3 = virtualinvoke element.<org.jdom.Element: java.lang.String getTextTrim()>();

        $r0 = (sortpom.wrapper.content.ModuleSortedWrapper) this;

        $r0.<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String text> = $stack3;

        return;
    }

    public boolean isBefore(sortpom.wrapper.content.Wrapper)
    {
        sortpom.wrapper.content.Wrapper wrapper;
        boolean $stack2, $stack3, $stack5;
        ModuleSortedWrapper this;
        sortpom.wrapper.content.ModuleSortedWrapper $stack4, $r0;

        this := @this: ModuleSortedWrapper;

        wrapper := @parameter0: sortpom.wrapper.content.Wrapper;

        $stack2 = wrapper instanceof sortpom.wrapper.content.ModuleSortedWrapper;

        if $stack2 == 0 goto label1;

        $stack4 = (sortpom.wrapper.content.ModuleSortedWrapper) wrapper;

        $r0 = (sortpom.wrapper.content.ModuleSortedWrapper) this;

        $stack5 = specialinvoke $r0.<sortpom.wrapper.content.ModuleSortedWrapper: boolean isBeforeAlphabeticalTextSortedWrapper(sortpom.wrapper.content.ModuleSortedWrapper)>($stack4);

        return $stack5;

     label1:
        $stack3 = specialinvoke this.<sortpom.wrapper.content.SortedWrapper: boolean isBefore(sortpom.wrapper.content.Wrapper)>(wrapper);

        return $stack3;
    }

    private boolean isBeforeAlphabeticalTextSortedWrapper(sortpom.wrapper.content.ModuleSortedWrapper)
    {
        sortpom.wrapper.content.ModuleSortedWrapper wrapper, $r0;
        ModuleSortedWrapper this;
        java.lang.String $stack2, $stack3;
        int $stack4;
        boolean $stack5;

        this := @this: ModuleSortedWrapper;

        wrapper := @parameter0: sortpom.wrapper.content.ModuleSortedWrapper;

        $stack3 = wrapper.<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String text>;

        $r0 = (sortpom.wrapper.content.ModuleSortedWrapper) this;

        $stack2 = $r0.<sortpom.wrapper.content.ModuleSortedWrapper: java.lang.String text>;

        $stack4 = virtualinvoke $stack3.<java.lang.String: int compareTo(java.lang.String)>($stack2);

        if $stack4 < 0 goto label1;

        $stack5 = 1;

        goto label2;

     label1:
        $stack5 = 0;

     label2:
        return $stack5;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $stack2, $stack4, $stack5, $u0;
        ModuleSortedWrapper this;
        org.jdom.Element $stack3;
        java.lang.String $stack6;
        sortpom.wrapper.content.ModuleSortedWrapper $r0;

        this := @this: ModuleSortedWrapper;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack2 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ModuleSortedWrapper{content=");

        $r0 = (sortpom.wrapper.content.ModuleSortedWrapper) this;

        $stack3 = virtualinvoke $r0.<sortpom.wrapper.content.ModuleSortedWrapper: org.jdom.Element getContent()>();

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack6;
    }
}
