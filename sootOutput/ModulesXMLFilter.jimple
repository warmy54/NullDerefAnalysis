class ModulesXMLFilter extends org.apache.maven.model.transform.AbstractEventXMLFilter
{
    private boolean parsingModules;
    private java.lang.String state;

    void <init>()
    {
        ModulesXMLFilter this;

        this := @this: ModulesXMLFilter;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void <init>()>();

        return;
    }

    void <init>(org.apache.maven.model.transform.sax.AbstractSAXFilter)
    {
        ModulesXMLFilter this;
        org.apache.maven.model.transform.sax.AbstractSAXFilter parent;

        this := @this: ModulesXMLFilter;

        parent := @parameter0: org.apache.maven.model.transform.sax.AbstractSAXFilter;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void <init>(org.apache.maven.model.transform.sax.AbstractSAXFilter)>(parent);

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        ModulesXMLFilter this;
        boolean $stack5, $stack13, $stack6;
        java.lang.String uri, localName, qName, $stack12;
        org.xml.sax.Attributes atts;
        org.apache.maven.model.transform.ModulesXMLFilter $r0, $r1, $r2, $r3;

        this := @this: ModulesXMLFilter;

        uri := @parameter0: java.lang.String;

        localName := @parameter1: java.lang.String;

        qName := @parameter2: java.lang.String;

        atts := @parameter3: org.xml.sax.Attributes;

        $r0 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        $stack5 = $r0.<org.apache.maven.model.transform.ModulesXMLFilter: boolean parsingModules>;

        if $stack5 != 0 goto label1;

        $stack12 = "modules";

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>(localName);

        if $stack13 == 0 goto label1;

        $r1 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        $r1.<org.apache.maven.model.transform.ModulesXMLFilter: boolean parsingModules> = 1;

     label1:
        $r2 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        $stack6 = $r2.<org.apache.maven.model.transform.ModulesXMLFilter: boolean parsingModules>;

        if $stack6 == 0 goto label2;

        $r3 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        $r3.<org.apache.maven.model.transform.ModulesXMLFilter: java.lang.String state> = localName;

     label2:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(uri, localName, qName, atts);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        ModulesXMLFilter this;
        boolean $stack6, $stack8;
        java.lang.String uri, localName, qName;
        int $stack7;
        byte l5;
        org.apache.maven.model.transform.ModulesXMLFilter $r0, $r1, $r2, $r3;

        this := @this: ModulesXMLFilter;

        uri := @parameter0: java.lang.String;

        localName := @parameter1: java.lang.String;

        qName := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        $stack6 = $r0.<org.apache.maven.model.transform.ModulesXMLFilter: boolean parsingModules>;

        if $stack6 == 0 goto label6;

        l5 = -1;

        $stack7 = virtualinvoke localName.<java.lang.String: int hashCode()>();

        lookupswitch($stack7)
        {
            case 1227433863: goto label1;
            default: goto label2;
        };

     label1:
        $stack8 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("modules");

        if $stack8 == 0 goto label2;

        l5 = 0;

     label2:
        lookupswitch(l5)
        {
            case 0: goto label3;
            default: goto label4;
        };

     label3:
        $r1 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        virtualinvoke $r1.<org.apache.maven.model.transform.ModulesXMLFilter: void executeEvents()>();

        $r2 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        $r2.<org.apache.maven.model.transform.ModulesXMLFilter: boolean parsingModules> = 0;

        goto label5;

     label4:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endElement(java.lang.String,java.lang.String,java.lang.String)>(uri, localName, qName);

     label5:
        goto label7;

     label6:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endElement(java.lang.String,java.lang.String,java.lang.String)>(uri, localName, qName);

     label7:
        $r3 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        $r3.<org.apache.maven.model.transform.ModulesXMLFilter: java.lang.String state> = "modules";

        return;
    }

    protected boolean isParsing()
    {
        ModulesXMLFilter this;
        boolean $stack1;
        org.apache.maven.model.transform.ModulesXMLFilter $r0;

        this := @this: ModulesXMLFilter;

        $r0 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.ModulesXMLFilter: boolean parsingModules>;

        return $stack1;
    }

    protected java.lang.String getState()
    {
        ModulesXMLFilter this;
        java.lang.String $stack1;
        org.apache.maven.model.transform.ModulesXMLFilter $r0;

        this := @this: ModulesXMLFilter;

        $r0 = (org.apache.maven.model.transform.ModulesXMLFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.ModulesXMLFilter: java.lang.String state>;

        return $stack1;
    }

    protected boolean acceptEvent(java.lang.String)
    {
        ModulesXMLFilter this;
        java.lang.String state;

        this := @this: ModulesXMLFilter;

        state := @parameter0: java.lang.String;

        return 0;
    }
}
