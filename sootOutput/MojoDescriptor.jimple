public class MojoDescriptor extends org.codehaus.plexus.component.repository.ComponentDescriptor implements java.lang.Cloneable
{
    public static final java.lang.String MAVEN_PLUGIN;
    public static final java.lang.String SINGLE_PASS_EXEC_STRATEGY;
    public static final java.lang.String MULTI_PASS_EXEC_STRATEGY;
    private static final java.lang.String DEFAULT_INSTANTIATION_STRATEGY;
    private static final java.lang.String DEFAULT_LANGUAGE;
    private java.util.List parameters;
    private java.util.Map parameterMap;
    private java.lang.String executionStrategy;
    private java.lang.String goal;
    private java.lang.String phase;
    private java.lang.String since;
    private java.lang.String executePhase;
    private java.lang.String executeGoal;
    private java.lang.String executeLifecycle;
    private java.lang.String deprecated;
    private boolean aggregator;
    private java.lang.String dependencyResolutionRequired;
    private java.lang.String dependencyCollectionRequired;
    private boolean projectRequired;
    private boolean onlineRequired;
    private org.codehaus.plexus.configuration.PlexusConfiguration mojoConfiguration;
    private org.apache.maven.plugin.descriptor.PluginDescriptor pluginDescriptor;
    private boolean inheritedByDefault;
    private boolean directInvocationOnly;
    private boolean requiresReports;
    private boolean threadSafe;

    public void <init>()
    {
        MojoDescriptor this;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: MojoDescriptor;

        specialinvoke this.<org.codehaus.plexus.component.repository.ComponentDescriptor: void <init>()>();

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executionStrategy> = "once-per-session";

        $r1 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r1.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean aggregator> = 0;

        $r2 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r2.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String dependencyResolutionRequired> = null;

        $r3 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r3.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean projectRequired> = 1;

        $r4 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r4.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean onlineRequired> = 0;

        $r5 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r5.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean inheritedByDefault> = 1;

        $r6 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r6.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean directInvocationOnly> = 0;

        $r7 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r7.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean requiresReports> = 0;

        $r8 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r8.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean threadSafe> = 0;

        $r9 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        virtualinvoke $r9.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setInstantiationStrategy(java.lang.String)>("per-lookup");

        $r10 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        virtualinvoke $r10.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setComponentFactory(java.lang.String)>("java");

        return;
    }

    public java.lang.String getLanguage()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getComponentFactory()>();

        return $stack1;
    }

    public void setLanguage(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String language;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        language := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setComponentFactory(java.lang.String)>(language);

        return;
    }

    public java.lang.String getDeprecated()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String deprecated>;

        return $stack1;
    }

    public void setDeprecated(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String deprecated;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        deprecated := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String deprecated> = deprecated;

        return;
    }

    public java.util.List getParameters()
    {
        MojoDescriptor this;
        java.util.List $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List parameters>;

        return $stack1;
    }

    public void setParameters(java.util.List) throws org.apache.maven.plugin.descriptor.DuplicateParameterException
    {
        java.util.List parameters;
        java.util.Iterator l2;
        boolean $stack5;
        java.lang.Object $stack6;
        org.apache.maven.plugin.descriptor.Parameter parameter;
        MojoDescriptor this;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        parameters := @parameter0: java.util.List;

        l2 = interfaceinvoke parameters.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack5 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack5 == 0 goto label2;

        $stack6 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        parameter = (org.apache.maven.plugin.descriptor.Parameter) $stack6;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void addParameter(org.apache.maven.plugin.descriptor.Parameter)>(parameter);

        goto label1;

     label2:
        return;
    }

    public void addParameter(org.apache.maven.plugin.descriptor.Parameter) throws org.apache.maven.plugin.descriptor.DuplicateParameterException
    {
        MojoDescriptor this;
        java.util.List $stack2, $stack3, $stack4, $stack9;
        org.apache.maven.plugin.descriptor.Parameter parameter;
        boolean $stack10;
        java.lang.String $stack14, $stack17, $stack20, $stack23;
        java.lang.StringBuilder $stack15, $stack16, $stack18, $stack19, $stack21, $stack22, $u0;
        org.apache.maven.plugin.descriptor.DuplicateParameterException $u1;
        java.util.LinkedList $u2;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0, $r1, $r2, $r3, $r5, $r6, $r7;
        java.lang.Throwable $r4;

        this := @this: MojoDescriptor;

        parameter := @parameter0: org.apache.maven.plugin.descriptor.Parameter;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack2 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List parameters>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack9 = $r1.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List parameters>;

        $stack10 = interfaceinvoke $stack9.<java.util.List: boolean contains(java.lang.Object)>(parameter);

        if $stack10 == 0 goto label1;

        $u1 = new org.apache.maven.plugin.descriptor.DuplicateParameterException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack14 = virtualinvoke parameter.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getName()>();

        $stack15 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been declared multiple times in mojo with goal: ");

        $r2 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack17 = virtualinvoke $r2.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getGoal()>();

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (implementation: ");

        $r3 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack20 = virtualinvoke $r3.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getImplementation()>();

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.apache.maven.plugin.descriptor.DuplicateParameterException: void <init>(java.lang.String)>($stack23);

        $r4 = (java.lang.Throwable) $u1;

        throw $r4;

     label1:
        $r5 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack3 = $r5.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List parameters>;

        if $stack3 != null goto label2;

        $u2 = new java.util.LinkedList;

        specialinvoke $u2.<java.util.LinkedList: void <init>()>();

        $r6 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r6.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List parameters> = $u2;

     label2:
        $r7 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack4 = $r7.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List parameters>;

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>(parameter);

        return;
    }

    public java.util.Map getParameterMap()
    {
        MojoDescriptor this;
        java.util.Map $stack3, $stack12, $stack4;
        java.util.List $stack6, $stack8;
        java.util.Iterator l1;
        boolean $stack10;
        java.lang.Object $stack11;
        org.apache.maven.plugin.descriptor.Parameter pd;
        java.lang.String $stack13;
        java.util.HashMap $u0;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack3 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.Map parameterMap>;

        if $stack3 != null goto label2;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r1 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r1.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.Map parameterMap> = $u0;

        $r2 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack6 = $r2.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List parameters>;

        if $stack6 == null goto label2;

        $r3 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack8 = $r3.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List parameters>;

        l1 = interfaceinvoke $stack8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label2;

        $stack11 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        pd = (org.apache.maven.plugin.descriptor.Parameter) $stack11;

        $r4 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack12 = $r4.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.Map parameterMap>;

        $stack13 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getName()>();

        interfaceinvoke $stack12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack13, pd);

        goto label1;

     label2:
        $r5 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack4 = $r5.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.Map parameterMap>;

        return $stack4;
    }

    public void setDependencyResolutionRequired(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String requiresDependencyResolution;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        requiresDependencyResolution := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String dependencyResolutionRequired> = requiresDependencyResolution;

        return;
    }

    public java.lang.String getDependencyResolutionRequired()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String dependencyResolutionRequired>;

        return $stack1;
    }

    public java.lang.String isDependencyResolutionRequired()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String dependencyResolutionRequired>;

        return $stack1;
    }

    public void setDependencyCollectionRequired(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String requiresDependencyCollection;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        requiresDependencyCollection := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String dependencyCollectionRequired> = requiresDependencyCollection;

        return;
    }

    public java.lang.String getDependencyCollectionRequired()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String dependencyCollectionRequired>;

        return $stack1;
    }

    public void setProjectRequired(boolean)
    {
        MojoDescriptor this;
        boolean requiresProject;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        requiresProject := @parameter0: boolean;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean projectRequired> = requiresProject;

        return;
    }

    public boolean isProjectRequired()
    {
        MojoDescriptor this;
        boolean $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean projectRequired>;

        return $stack1;
    }

    public void setOnlineRequired(boolean)
    {
        MojoDescriptor this;
        boolean requiresOnline;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        requiresOnline := @parameter0: boolean;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean onlineRequired> = requiresOnline;

        return;
    }

    public boolean isOnlineRequired()
    {
        MojoDescriptor this;
        boolean $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean onlineRequired>;

        return $stack1;
    }

    public boolean requiresOnline()
    {
        MojoDescriptor this;
        boolean $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean onlineRequired>;

        return $stack1;
    }

    public java.lang.String getPhase()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String phase>;

        return $stack1;
    }

    public void setPhase(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String phase;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        phase := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String phase> = phase;

        return;
    }

    public java.lang.String getSince()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String since>;

        return $stack1;
    }

    public void setSince(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String since;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        since := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String since> = since;

        return;
    }

    public java.lang.String getGoal()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String goal>;

        return $stack1;
    }

    public void setGoal(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String goal;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        goal := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String goal> = goal;

        return;
    }

    public java.lang.String getExecutePhase()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executePhase>;

        return $stack1;
    }

    public void setExecutePhase(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String executePhase;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        executePhase := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executePhase> = executePhase;

        return;
    }

    public boolean alwaysExecute()
    {
        MojoDescriptor this;
        java.lang.String $stack1, $stack2;
        boolean $stack3;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $stack2 = "always";

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executionStrategy>;

        $stack3 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>($stack1);

        return $stack3;
    }

    public java.lang.String getExecutionStrategy()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executionStrategy>;

        return $stack1;
    }

    public void setExecutionStrategy(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String executionStrategy;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        executionStrategy := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executionStrategy> = executionStrategy;

        return;
    }

    public org.codehaus.plexus.configuration.PlexusConfiguration getMojoConfiguration()
    {
        MojoDescriptor this;
        org.codehaus.plexus.configuration.PlexusConfiguration $stack1, $stack2, $r2;
        org.codehaus.plexus.configuration.xml.XmlPlexusConfiguration $u0;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0, $r1, $r3;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.codehaus.plexus.configuration.PlexusConfiguration mojoConfiguration>;

        if $stack1 != null goto label1;

        $u0 = new org.codehaus.plexus.configuration.xml.XmlPlexusConfiguration;

        specialinvoke $u0.<org.codehaus.plexus.configuration.xml.XmlPlexusConfiguration: void <init>(java.lang.String)>("configuration");

        $r1 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r2 = (org.codehaus.plexus.configuration.PlexusConfiguration) $u0;

        $r1.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.codehaus.plexus.configuration.PlexusConfiguration mojoConfiguration> = $r2;

     label1:
        $r3 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack2 = $r3.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.codehaus.plexus.configuration.PlexusConfiguration mojoConfiguration>;

        return $stack2;
    }

    public void setMojoConfiguration(org.codehaus.plexus.configuration.PlexusConfiguration)
    {
        MojoDescriptor this;
        org.codehaus.plexus.configuration.PlexusConfiguration mojoConfiguration;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        mojoConfiguration := @parameter0: org.codehaus.plexus.configuration.PlexusConfiguration;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.codehaus.plexus.configuration.PlexusConfiguration mojoConfiguration> = mojoConfiguration;

        return;
    }

    public java.lang.String getRole()
    {
        java.lang.String $stack1;
        MojoDescriptor this;

        this := @this: MojoDescriptor;

        $stack1 = <org.apache.maven.plugin.Mojo: java.lang.String ROLE>;

        return $stack1;
    }

    public java.lang.String getRoleHint()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getId()>();

        return $stack1;
    }

    public java.lang.String getId()
    {
        MojoDescriptor this;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack2;
        java.lang.String $stack3, $stack6, $stack8;
        java.lang.StringBuilder $stack4, $stack5, $stack7, $u0;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0, $r1;

        this := @this: MojoDescriptor;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        $stack3 = virtualinvoke $stack2.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getId()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r1 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack6 = virtualinvoke $r1.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getGoal()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack8;
    }

    public java.lang.String getFullGoalName()
    {
        MojoDescriptor this;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack2;
        java.lang.String $stack3, $stack6, $stack8;
        java.lang.StringBuilder $stack4, $stack5, $stack7, $u0;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0, $r1;

        this := @this: MojoDescriptor;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        $stack3 = virtualinvoke $stack2.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getGoalPrefix()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r1 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack6 = virtualinvoke $r1.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getGoal()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack8;
    }

    public java.lang.String getComponentType()
    {
        MojoDescriptor this;

        this := @this: MojoDescriptor;

        return "maven-plugin";
    }

    public org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()
    {
        MojoDescriptor this;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor pluginDescriptor>;

        return $stack1;
    }

    public void setPluginDescriptor(org.apache.maven.plugin.descriptor.PluginDescriptor)
    {
        MojoDescriptor this;
        org.apache.maven.plugin.descriptor.PluginDescriptor pluginDescriptor;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        pluginDescriptor := @parameter0: org.apache.maven.plugin.descriptor.PluginDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor pluginDescriptor> = pluginDescriptor;

        return;
    }

    public boolean isInheritedByDefault()
    {
        MojoDescriptor this;
        boolean $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean inheritedByDefault>;

        return $stack1;
    }

    public void setInheritedByDefault(boolean)
    {
        MojoDescriptor this;
        boolean inheritedByDefault;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        inheritedByDefault := @parameter0: boolean;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean inheritedByDefault> = inheritedByDefault;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        MojoDescriptor this;
        java.lang.Object object;
        boolean $stack3, $stack6, $stack9;
        org.apache.maven.plugin.descriptor.MojoDescriptor other, $r0, $r1, $r2, $r3;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack4, $stack5;
        java.lang.String $stack7, $stack8;

        this := @this: MojoDescriptor;

        object := @parameter0: java.lang.Object;

        if this != object goto label1;

        return 1;

     label1:
        $stack3 = object instanceof org.apache.maven.plugin.descriptor.MojoDescriptor;

        if $stack3 == 0 goto label3;

        other = (org.apache.maven.plugin.descriptor.MojoDescriptor) object;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack4 = virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        $stack5 = virtualinvoke other.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        $r1 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack6 = specialinvoke $r1.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean compareObjects(java.lang.Object,java.lang.Object)>($stack4, $stack5);

        if $stack6 != 0 goto label2;

        return 0;

     label2:
        $r2 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack7 = virtualinvoke $r2.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getGoal()>();

        $stack8 = virtualinvoke other.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getGoal()>();

        $r3 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack9 = specialinvoke $r3.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean compareObjects(java.lang.Object,java.lang.Object)>($stack7, $stack8);

        return $stack9;

     label3:
        return 0;
    }

    private boolean compareObjects(java.lang.Object, java.lang.Object)
    {
        java.lang.Object first, second;
        boolean $stack3;
        MojoDescriptor this;

        this := @this: MojoDescriptor;

        first := @parameter0: java.lang.Object;

        second := @parameter1: java.lang.Object;

        if first != second goto label1;

        return 1;

     label1:
        if first == null goto label2;

        if second != null goto label3;

     label2:
        return 0;

     label3:
        $stack3 = virtualinvoke first.<java.lang.Object: boolean equals(java.lang.Object)>(second);

        return $stack3;
    }

    public int hashCode()
    {
        MojoDescriptor this;
        java.lang.String goal;
        org.apache.maven.plugin.descriptor.PluginDescriptor pd;
        int $stack6, $stack8, result;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0, $r1;

        this := @this: MojoDescriptor;

        result = 1;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        goal = virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getGoal()>();

        if goal == null goto label1;

        $stack8 = virtualinvoke goal.<java.lang.String: int hashCode()>();

        result = 1 + $stack8;

     label1:
        $r1 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        pd = virtualinvoke $r1.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        if pd == null goto label2;

        $stack6 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: int hashCode()>();

        result = result - $stack6;

     label2:
        return result;
    }

    public java.lang.String getExecuteLifecycle()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executeLifecycle>;

        return $stack1;
    }

    public void setExecuteLifecycle(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String executeLifecycle;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        executeLifecycle := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executeLifecycle> = executeLifecycle;

        return;
    }

    public void setAggregator(boolean)
    {
        MojoDescriptor this;
        boolean aggregator;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        aggregator := @parameter0: boolean;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean aggregator> = aggregator;

        return;
    }

    public boolean isAggregator()
    {
        MojoDescriptor this;
        boolean $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean aggregator>;

        return $stack1;
    }

    public boolean isDirectInvocationOnly()
    {
        MojoDescriptor this;
        boolean $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean directInvocationOnly>;

        return $stack1;
    }

    public void setDirectInvocationOnly(boolean)
    {
        MojoDescriptor this;
        boolean directInvocationOnly;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        directInvocationOnly := @parameter0: boolean;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean directInvocationOnly> = directInvocationOnly;

        return;
    }

    public boolean isRequiresReports()
    {
        MojoDescriptor this;
        boolean $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean requiresReports>;

        return $stack1;
    }

    public void setRequiresReports(boolean)
    {
        MojoDescriptor this;
        boolean requiresReports;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        requiresReports := @parameter0: boolean;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean requiresReports> = requiresReports;

        return;
    }

    public void setExecuteGoal(java.lang.String)
    {
        MojoDescriptor this;
        java.lang.String executeGoal;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        executeGoal := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executeGoal> = executeGoal;

        return;
    }

    public java.lang.String getExecuteGoal()
    {
        MojoDescriptor this;
        java.lang.String $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String executeGoal>;

        return $stack1;
    }

    public boolean isThreadSafe()
    {
        MojoDescriptor this;
        boolean $stack1;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean threadSafe>;

        return $stack1;
    }

    public void setThreadSafe(boolean)
    {
        MojoDescriptor this;
        boolean threadSafe;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0;

        this := @this: MojoDescriptor;

        threadSafe := @parameter0: boolean;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean threadSafe> = threadSafe;

        return;
    }

    public boolean isForking()
    {
        MojoDescriptor this;
        java.lang.String $stack1, $stack2, $stack3, $stack6;
        int $stack4, $stack7;
        boolean $stack5;
        org.apache.maven.plugin.descriptor.MojoDescriptor $r0, $r1, $r2, $r3;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getExecuteGoal()>();

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack6 = virtualinvoke $r1.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getExecuteGoal()>();

        $stack7 = virtualinvoke $stack6.<java.lang.String: int length()>();

        if $stack7 > 0 goto label2;

     label1:
        $r2 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack2 = virtualinvoke $r2.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getExecutePhase()>();

        if $stack2 == null goto label3;

        $r3 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack3 = virtualinvoke $r3.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getExecutePhase()>();

        $stack4 = virtualinvoke $stack3.<java.lang.String: int length()>();

        if $stack4 <= 0 goto label3;

     label2:
        $stack5 = 1;

        goto label4;

     label3:
        $stack5 = 0;

     label4:
        return $stack5;
    }

    public org.apache.maven.plugin.descriptor.MojoDescriptor clone()
    {
        MojoDescriptor this;
        java.lang.Object $stack2;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack3;
        java.lang.CloneNotSupportedException $stack4;
        java.lang.UnsupportedOperationException $stack5;

        this := @this: MojoDescriptor;

     label1:
        $stack2 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        $stack3 = (org.apache.maven.plugin.descriptor.MojoDescriptor) $stack2;

     label2:
        return $stack3;

     label3:
        $stack4 := @caughtexception;

        $stack5 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack5.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($stack4);

        throw $stack5;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        MojoDescriptor this;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack1, $r0;

        this := @this: MojoDescriptor;

        $r0 = (org.apache.maven.plugin.descriptor.MojoDescriptor) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.MojoDescriptor clone()>();

        return $stack1;
    }

    public static void <clinit>()
    {
        <MojoDescriptor: java.lang.String DEFAULT_LANGUAGE> = "java";

        <MojoDescriptor: java.lang.String DEFAULT_INSTANTIATION_STRATEGY> = "per-lookup";

        <MojoDescriptor: java.lang.String MULTI_PASS_EXEC_STRATEGY> = "always";

        <MojoDescriptor: java.lang.String SINGLE_PASS_EXEC_STRATEGY> = "once-per-session";

        <MojoDescriptor: java.lang.String MAVEN_PLUGIN> = "maven-plugin";

        return;
    }
}
