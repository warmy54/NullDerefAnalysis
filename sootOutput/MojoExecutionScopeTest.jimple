public class MojoExecutionScopeTest extends java.lang.Object
{

    public void <init>()
    {
        MojoExecutionScopeTest this;

        this := @this: MojoExecutionScopeTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testNestedEnter() throws java.lang.Exception
    {
        org.apache.maven.execution.scope.internal.MojoExecutionScope $stack4;
        java.lang.Object $stack5, $stack8, $stack9, $stack12, $stack15;
        com.google.inject.Key $stack6, $stack10, $stack13;
        com.google.inject.Provider $stack7, $stack11, $stack14;
        org.junit.jupiter.api.function.Executable $stack17;
        MojoExecutionScopeTest this;

        this := @this: MojoExecutionScopeTest;

        $stack4 = new org.apache.maven.execution.scope.internal.MojoExecutionScope;

        specialinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void <init>()>();

        virtualinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void enter()>();

        $stack5 = new java.lang.Object;

        specialinvoke $stack5.<java.lang.Object: void <init>()>();

        virtualinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void seed(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Object;", $stack5);

        $stack6 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(class "Ljava/lang/Object;");

        $stack7 = virtualinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider)>($stack6, null);

        $stack8 = interfaceinvoke $stack7.<com.google.inject.Provider: java.lang.Object get()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertSame(java.lang.Object,java.lang.Object)>($stack5, $stack8);

        virtualinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void enter()>();

        $stack9 = new java.lang.Object;

        specialinvoke $stack9.<java.lang.Object: void <init>()>();

        virtualinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void seed(java.lang.Class,java.lang.Object)>(class "Ljava/lang/Object;", $stack9);

        $stack10 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(class "Ljava/lang/Object;");

        $stack11 = virtualinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider)>($stack10, null);

        $stack12 = interfaceinvoke $stack11.<com.google.inject.Provider: java.lang.Object get()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertSame(java.lang.Object,java.lang.Object)>($stack9, $stack12);

        virtualinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void exit()>();

        $stack13 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(class "Ljava/lang/Object;");

        $stack14 = virtualinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider)>($stack13, null);

        $stack15 = interfaceinvoke $stack14.<com.google.inject.Provider: java.lang.Object get()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertSame(java.lang.Object,java.lang.Object)>($stack5, $stack15);

        virtualinvoke $stack4.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void exit()>();

        $stack17 = staticinvoke <MojoExecutionScopeTest$lambda_testNestedEnter_0__309: org.junit.jupiter.api.function.Executable bootstrap$(org.apache.maven.execution.scope.internal.MojoExecutionScope)>($stack4);

        staticinvoke <org.junit.jupiter.api.Assertions: java.lang.Throwable assertThrows(java.lang.Class,org.junit.jupiter.api.function.Executable)>(class "Ljava/lang/IllegalStateException;", $stack17);

        return;
    }

    public void testMultiKeyInstance() throws java.lang.Exception
    {
        MojoExecutionScopeTest this;
        com.google.inject.Key $stack12, $stack16;
        com.google.inject.Provider $stack13, $stack14, $stack17, $stack18;
        java.lang.Object $stack15, $stack19;
        int $stack22, $stack24, $stack26;
        org.apache.maven.execution.scope.internal.MojoExecutionScope $u0;
        java.util.concurrent.atomic.AtomicInteger $u1, $u2, $u3;
        org.apache.maven.execution.scope.internal.MojoExecutionScopeTest$1 $u4;
        org.apache.maven.execution.MojoExecutionEvent $u5;
        org.apache.maven.execution.scope.internal.MojoExecutionScopeTest $r0;
        org.apache.maven.execution.scope.WeakMojoExecutionListener $r1, $r2;

        this := @this: MojoExecutionScopeTest;

        $u0 = new org.apache.maven.execution.scope.internal.MojoExecutionScope;

        specialinvoke $u0.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void enter()>();

        $u1 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $u1.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        $u2 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $u2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        $u3 = new java.util.concurrent.atomic.AtomicInteger;

        specialinvoke $u3.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();

        $u4 = new org.apache.maven.execution.scope.internal.MojoExecutionScopeTest$1;

        $r0 = (org.apache.maven.execution.scope.internal.MojoExecutionScopeTest) this;

        specialinvoke $u4.<org.apache.maven.execution.scope.internal.MojoExecutionScopeTest$1: void <init>(org.apache.maven.execution.scope.internal.MojoExecutionScopeTest,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger,java.util.concurrent.atomic.AtomicInteger)>($r0, $u1, $u2, $u3);

        $stack12 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(class "Ljava/lang/Object;");

        $r1 = (org.apache.maven.execution.scope.WeakMojoExecutionListener) $u4;

        $stack13 = staticinvoke <MojoExecutionScopeTest$lambda_testMultiKeyInstance_1__310: com.google.inject.Provider bootstrap$(org.apache.maven.execution.scope.WeakMojoExecutionListener)>($r1);

        $stack14 = virtualinvoke $u0.<org.apache.maven.execution.scope.internal.MojoExecutionScope: com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider)>($stack12, $stack13);

        $stack15 = interfaceinvoke $stack14.<com.google.inject.Provider: java.lang.Object get()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertSame(java.lang.Object,java.lang.Object)>($u4, $stack15);

        $stack16 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class)>(class "Lorg/apache/maven/execution/scope/WeakMojoExecutionListener;");

        $r2 = (org.apache.maven.execution.scope.WeakMojoExecutionListener) $u4;

        $stack17 = staticinvoke <MojoExecutionScopeTest$lambda_testMultiKeyInstance_2__311: com.google.inject.Provider bootstrap$(org.apache.maven.execution.scope.WeakMojoExecutionListener)>($r2);

        $stack18 = virtualinvoke $u0.<org.apache.maven.execution.scope.internal.MojoExecutionScope: com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider)>($stack16, $stack17);

        $stack19 = interfaceinvoke $stack18.<com.google.inject.Provider: java.lang.Object get()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertSame(java.lang.Object,java.lang.Object)>($u4, $stack19);

        $u5 = new org.apache.maven.execution.MojoExecutionEvent;

        specialinvoke $u5.<org.apache.maven.execution.MojoExecutionEvent: void <init>(org.apache.maven.execution.MavenSession,org.apache.maven.project.MavenProject,org.apache.maven.plugin.MojoExecution,org.apache.maven.plugin.Mojo)>(null, null, null, null);

        virtualinvoke $u0.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void beforeMojoExecution(org.apache.maven.execution.MojoExecutionEvent)>($u5);

        virtualinvoke $u0.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void afterMojoExecutionSuccess(org.apache.maven.execution.MojoExecutionEvent)>($u5);

        virtualinvoke $u0.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void afterExecutionFailure(org.apache.maven.execution.MojoExecutionEvent)>($u5);

        $stack22 = virtualinvoke $u1.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack22);

        $stack24 = virtualinvoke $u2.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack24);

        $stack26 = virtualinvoke $u3.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack26);

        virtualinvoke $u0.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void exit()>();

        return;
    }

    private static org.apache.maven.execution.scope.WeakMojoExecutionListener lambda$testMultiKeyInstance$2(org.apache.maven.execution.scope.WeakMojoExecutionListener)
    {
        org.apache.maven.execution.scope.WeakMojoExecutionListener instance;

        instance := @parameter0: org.apache.maven.execution.scope.WeakMojoExecutionListener;

        return instance;
    }

    private static java.lang.Object lambda$testMultiKeyInstance$1(org.apache.maven.execution.scope.WeakMojoExecutionListener)
    {
        org.apache.maven.execution.scope.WeakMojoExecutionListener instance;

        instance := @parameter0: org.apache.maven.execution.scope.WeakMojoExecutionListener;

        return instance;
    }

    private static void lambda$testNestedEnter$0(org.apache.maven.execution.scope.internal.MojoExecutionScope) throws java.lang.Throwable
    {
        org.apache.maven.execution.scope.internal.MojoExecutionScope scope;

        scope := @parameter0: org.apache.maven.execution.scope.internal.MojoExecutionScope;

        virtualinvoke scope.<org.apache.maven.execution.scope.internal.MojoExecutionScope: void exit()>();

        return;
    }
}
