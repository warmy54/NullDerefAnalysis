class MultiMap$1$1 extends java.lang.Object implements java.util.Iterator
{
    boolean hasNext;
    final org.ooc.middle.structs.MultiMap$1 this$1;

    void <init>(org.ooc.middle.structs.MultiMap$1)
    {
        MultiMap$1$1 this;
        org.ooc.middle.structs.MultiMap$1 this$1;
        org.ooc.middle.structs.MultiMap$1$1 $r0, $r1;

        this := @this: MultiMap$1$1;

        this$1 := @parameter0: org.ooc.middle.structs.MultiMap$1;

        $r0 = (org.ooc.middle.structs.MultiMap$1$1) this;

        $r0.<org.ooc.middle.structs.MultiMap$1$1: org.ooc.middle.structs.MultiMap$1 this$1> = this$1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r1 = (org.ooc.middle.structs.MultiMap$1$1) this;

        $r1.<org.ooc.middle.structs.MultiMap$1$1: boolean hasNext> = 1;

        return;
    }

    public boolean hasNext()
    {
        MultiMap$1$1 this;
        boolean $stack1;
        org.ooc.middle.structs.MultiMap$1$1 $r0;

        this := @this: MultiMap$1$1;

        $r0 = (org.ooc.middle.structs.MultiMap$1$1) this;

        $stack1 = $r0.<org.ooc.middle.structs.MultiMap$1$1: boolean hasNext>;

        return $stack1;
    }

    public java.lang.Object next()
    {
        MultiMap$1$1 this;
        org.ooc.middle.structs.MultiMap$1 $stack1;
        java.lang.Object $stack2;
        org.ooc.middle.structs.MultiMap$1$1 $r0, $r1;

        this := @this: MultiMap$1$1;

        $r0 = (org.ooc.middle.structs.MultiMap$1$1) this;

        $r0.<org.ooc.middle.structs.MultiMap$1$1: boolean hasNext> = 0;

        $r1 = (org.ooc.middle.structs.MultiMap$1$1) this;

        $stack1 = $r1.<org.ooc.middle.structs.MultiMap$1$1: org.ooc.middle.structs.MultiMap$1 this$1>;

        $stack2 = $stack1.<org.ooc.middle.structs.MultiMap$1: java.lang.Object val$o>;

        return $stack2;
    }

    public void remove()
    {
        MultiMap$1$1 this;
        org.ooc.middle.structs.MultiMap$1 $stack1, $stack3;
        org.ooc.middle.structs.MultiMap $stack2;
        java.lang.Object $stack4;
        java.util.Map $stack5;
        org.ooc.middle.structs.MultiMap$1$1 $r0, $r1;

        this := @this: MultiMap$1$1;

        $r0 = (org.ooc.middle.structs.MultiMap$1$1) this;

        $stack1 = $r0.<org.ooc.middle.structs.MultiMap$1$1: org.ooc.middle.structs.MultiMap$1 this$1>;

        $stack2 = $stack1.<org.ooc.middle.structs.MultiMap$1: org.ooc.middle.structs.MultiMap this$0>;

        $stack5 = $stack2.<org.ooc.middle.structs.MultiMap: java.util.Map map>;

        $r1 = (org.ooc.middle.structs.MultiMap$1$1) this;

        $stack3 = $r1.<org.ooc.middle.structs.MultiMap$1$1: org.ooc.middle.structs.MultiMap$1 this$1>;

        $stack4 = $stack3.<org.ooc.middle.structs.MultiMap$1: java.lang.Object val$key>;

        interfaceinvoke $stack5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($stack4);

        return;
    }
}
