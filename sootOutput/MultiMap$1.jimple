class MultiMap$1 extends java.lang.Object implements java.lang.Iterable
{
    final java.lang.Object val$o;
    final java.lang.Object val$key;
    final org.ooc.middle.structs.MultiMap this$0;

    void <init>(org.ooc.middle.structs.MultiMap, java.lang.Object, java.lang.Object)
    {
        MultiMap$1 this;
        org.ooc.middle.structs.MultiMap this$0;
        java.lang.Object l2, l3;
        org.ooc.middle.structs.MultiMap$1 $r0, $r1, $r2;

        this := @this: MultiMap$1;

        this$0 := @parameter0: org.ooc.middle.structs.MultiMap;

        l2 := @parameter1: java.lang.Object;

        l3 := @parameter2: java.lang.Object;

        $r0 = (org.ooc.middle.structs.MultiMap$1) this;

        $r0.<org.ooc.middle.structs.MultiMap$1: org.ooc.middle.structs.MultiMap this$0> = this$0;

        $r1 = (org.ooc.middle.structs.MultiMap$1) this;

        $r1.<org.ooc.middle.structs.MultiMap$1: java.lang.Object val$o> = l2;

        $r2 = (org.ooc.middle.structs.MultiMap$1) this;

        $r2.<org.ooc.middle.structs.MultiMap$1: java.lang.Object val$key> = l3;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.Iterator iterator()
    {
        MultiMap$1 this;
        org.ooc.middle.structs.MultiMap$1$1 $u0;
        org.ooc.middle.structs.MultiMap$1 $r0;
        java.util.Iterator $r1;

        this := @this: MultiMap$1;

        $u0 = new org.ooc.middle.structs.MultiMap$1$1;

        $r0 = (org.ooc.middle.structs.MultiMap$1) this;

        specialinvoke $u0.<org.ooc.middle.structs.MultiMap$1$1: void <init>(org.ooc.middle.structs.MultiMap$1)>($r0);

        $r1 = (java.util.Iterator) $u0;

        return $r1;
    }
}
