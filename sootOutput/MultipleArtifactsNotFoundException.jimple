public class MultipleArtifactsNotFoundException extends org.apache.maven.artifact.resolver.ArtifactResolutionException
{
    private static final java.lang.String LS;
    private final java.util.List resolvedArtifacts;
    private final java.util.List missingArtifacts;

    public void <init>(org.apache.maven.artifact.Artifact, java.util.List, java.util.List)
    {
        MultipleArtifactsNotFoundException this;
        org.apache.maven.artifact.Artifact originatingArtifact;
        java.util.List missingArtifacts, remoteRepositories;
        java.util.ArrayList $u0;
        org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException $r0;

        this := @this: MultipleArtifactsNotFoundException;

        originatingArtifact := @parameter0: org.apache.maven.artifact.Artifact;

        missingArtifacts := @parameter1: java.util.List;

        remoteRepositories := @parameter2: java.util.List;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException) this;

        specialinvoke $r0.<org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: void <init>(org.apache.maven.artifact.Artifact,java.util.List,java.util.List,java.util.List)>(originatingArtifact, $u0, missingArtifacts, remoteRepositories);

        return;
    }

    public void <init>(org.apache.maven.artifact.Artifact, java.util.List, java.util.List, java.util.List)
    {
        MultipleArtifactsNotFoundException this;
        java.util.List missingArtifacts, remoteRepositories, resolvedArtifacts;
        java.lang.String $stack5;
        org.apache.maven.artifact.Artifact originatingArtifact;
        org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException $r0, $r1;

        this := @this: MultipleArtifactsNotFoundException;

        originatingArtifact := @parameter0: org.apache.maven.artifact.Artifact;

        resolvedArtifacts := @parameter1: java.util.List;

        missingArtifacts := @parameter2: java.util.List;

        remoteRepositories := @parameter3: java.util.List;

        $stack5 = staticinvoke <org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.lang.String constructMessage(java.util.List)>(missingArtifacts);

        specialinvoke this.<org.apache.maven.artifact.resolver.ArtifactResolutionException: void <init>(java.lang.String,org.apache.maven.artifact.Artifact,java.util.List)>($stack5, originatingArtifact, remoteRepositories);

        $r0 = (org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException) this;

        $r0.<org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.util.List resolvedArtifacts> = resolvedArtifacts;

        $r1 = (org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException) this;

        $r1.<org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.util.List missingArtifacts> = missingArtifacts;

        return;
    }

    public java.util.List getResolvedArtifacts()
    {
        MultipleArtifactsNotFoundException this;
        java.util.List $stack1;
        org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException $r0;

        this := @this: MultipleArtifactsNotFoundException;

        $r0 = (org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.util.List resolvedArtifacts>;

        return $stack1;
    }

    public java.util.List getMissingArtifacts()
    {
        MultipleArtifactsNotFoundException this;
        java.util.List $stack1;
        org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException $r0;

        this := @this: MultipleArtifactsNotFoundException;

        $r0 = (org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.util.List missingArtifacts>;

        return $stack1;
    }

    private static java.lang.String constructMessage(java.util.List)
    {
        java.lang.StringBuilder $stack6, $stack7, $stack10, $stack15, $stack19, $stack22, $stack24, $stack26, $stack35, $stack36, $stack37, $stack39;
        java.lang.String $stack8, $stack11, $stack16, $stack23, $stack25, $stack28, $stack38, message, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack49;
        java.util.List artifacts, $stack48;
        boolean $stack14;
        java.lang.Object $stack34;
        org.apache.maven.artifact.Artifact artifact;
        int counter, size#3;
        java.util.Iterator size;

        artifacts := @parameter0: java.util.List;

        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>(int)>(256);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing:");

        $stack8 = <org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.lang.String LS>;

        virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("----------");

        $stack11 = <org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.lang.String LS>;

        virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        counter = 0;

        size = interfaceinvoke artifacts.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack14 = interfaceinvoke size.<java.util.Iterator: boolean hasNext()>();

        if $stack14 == 0 goto label2;

        $stack34 = interfaceinvoke size.<java.util.Iterator: java.lang.Object next()>();

        artifact = (org.apache.maven.artifact.Artifact) $stack34;

        $stack35 = new java.lang.StringBuilder;

        specialinvoke $stack35.<java.lang.StringBuilder: void <init>()>();

        counter = counter + 1;

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(counter);

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ");

        $stack38 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getId()>();

        $stack39 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38);

        message = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack42 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getGroupId()>();

        $stack43 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack44 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getVersion()>();

        $stack45 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getType()>();

        $stack46 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getClassifier()>();

        $stack47 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.lang.String getDownloadUrl()>();

        $stack48 = interfaceinvoke artifact.<org.apache.maven.artifact.Artifact: java.util.List getDependencyTrail()>();

        $stack49 = staticinvoke <org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.lang.String constructMissingArtifactMessage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List)>(message, "  ", $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48);

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49);

        goto label1;

     label2:
        $stack15 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("----------");

        $stack16 = <org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.lang.String LS>;

        virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        size#3 = interfaceinvoke artifacts.<java.util.List: int size()>();

        $stack19 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(size#3);

        virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" required artifact");

        if size#3 <= 1 goto label3;

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s are");

        goto label4;

     label3:
        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is");

     label4:
        $stack22 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" missing.");

        $stack23 = <org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.lang.String LS>;

        $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = <org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.lang.String LS>;

        $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25);

        virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("for artifact: ");

        $stack28 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack28;
    }

    static void <clinit>()
    {
        java.lang.String $stack0;

        $stack0 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        <org.apache.maven.artifact.resolver.MultipleArtifactsNotFoundException: java.lang.String LS> = $stack0;

        return;
    }
}
