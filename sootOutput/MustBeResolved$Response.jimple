public final enum class MustBeResolved$Response extends java.lang.Enum
{
    public static final enum org.ooc.frontend.model.interfaces.MustBeResolved$Response OK;
    public static final enum org.ooc.frontend.model.interfaces.MustBeResolved$Response RESTART;
    public static final enum org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP;
    private static final org.ooc.frontend.model.interfaces.MustBeResolved$Response[] $VALUES;

    public static org.ooc.frontend.model.interfaces.MustBeResolved$Response[] values()
    {
        org.ooc.frontend.model.interfaces.MustBeResolved$Response[] $stack0, $stack2;
        java.lang.Object $stack1;

        $stack0 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response[] $VALUES>;

        $stack1 = virtualinvoke $stack0.<java.lang.Object: java.lang.Object clone()>();

        $stack2 = (org.ooc.frontend.model.interfaces.MustBeResolved$Response[]) $stack1;

        return $stack2;
    }

    public static org.ooc.frontend.model.interfaces.MustBeResolved$Response valueOf(java.lang.String)
    {
        java.lang.String name;
        java.lang.Enum $stack1;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack2;

        name := @parameter0: java.lang.String;

        $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/ooc/frontend/model/interfaces/MustBeResolved$Response;", name);

        $stack2 = (org.ooc.frontend.model.interfaces.MustBeResolved$Response) $stack1;

        return $stack2;
    }

    private void <init>(java.lang.String, int)
    {
        MustBeResolved$Response this;
        java.lang.String l1;
        int l2;

        this := @this: MustBeResolved$Response;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }

    static void <clinit>()
    {
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack0, $stack1, $stack2, $stack4, $stack5, $stack6;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response[] $stack3;

        $stack0 = new org.ooc.frontend.model.interfaces.MustBeResolved$Response;

        specialinvoke $stack0.<org.ooc.frontend.model.interfaces.MustBeResolved$Response: void <init>(java.lang.String,int)>("OK", 0);

        <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK> = $stack0;

        $stack1 = new org.ooc.frontend.model.interfaces.MustBeResolved$Response;

        specialinvoke $stack1.<org.ooc.frontend.model.interfaces.MustBeResolved$Response: void <init>(java.lang.String,int)>("RESTART", 1);

        <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response RESTART> = $stack1;

        $stack2 = new org.ooc.frontend.model.interfaces.MustBeResolved$Response;

        specialinvoke $stack2.<org.ooc.frontend.model.interfaces.MustBeResolved$Response: void <init>(java.lang.String,int)>("LOOP", 2);

        <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP> = $stack2;

        $stack3 = newarray (org.ooc.frontend.model.interfaces.MustBeResolved$Response)[3];

        $stack4 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        $stack3[0] = $stack4;

        $stack5 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response RESTART>;

        $stack3[1] = $stack5;

        $stack6 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        $stack3[2] = $stack6;

        <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response[] $VALUES> = $stack3;

        return;
    }
}
