public class NewestConflictResolver extends java.lang.Object implements org.apache.maven.repository.legacy.resolver.conflict.ConflictResolver
{

    public void <init>()
    {
        NewestConflictResolver this;

        this := @this: NewestConflictResolver;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.maven.artifact.resolver.ResolutionNode resolveConflict(org.apache.maven.artifact.resolver.ResolutionNode, org.apache.maven.artifact.resolver.ResolutionNode)
    {
        org.apache.maven.artifact.resolver.ResolutionNode node1, node2, $stack10;
        org.apache.maven.artifact.Artifact $stack5, $stack7;
        org.apache.maven.artifact.versioning.ArtifactVersion version2, version1;
        int $stack9;
        java.lang.Throwable $stack11;
        NewestConflictResolver this;

        this := @this: NewestConflictResolver;

        node1 := @parameter0: org.apache.maven.artifact.resolver.ResolutionNode;

        node2 := @parameter1: org.apache.maven.artifact.resolver.ResolutionNode;

     label1:
        $stack5 = virtualinvoke node1.<org.apache.maven.artifact.resolver.ResolutionNode: org.apache.maven.artifact.Artifact getArtifact()>();

        version1 = interfaceinvoke $stack5.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.versioning.ArtifactVersion getSelectedVersion()>();

        $stack7 = virtualinvoke node2.<org.apache.maven.artifact.resolver.ResolutionNode: org.apache.maven.artifact.Artifact getArtifact()>();

        version2 = interfaceinvoke $stack7.<org.apache.maven.artifact.Artifact: org.apache.maven.artifact.versioning.ArtifactVersion getSelectedVersion()>();

        $stack9 = interfaceinvoke version1.<org.apache.maven.artifact.versioning.ArtifactVersion: int compareTo(java.lang.Object)>(version2);

        if $stack9 <= 0 goto label2;

        $stack10 = node1;

        goto label3;

     label2:
        $stack10 = node2;

     label3:
        return $stack10;

     label4:
        $stack11 := @caughtexception;

        return null;

        catch org.apache.maven.artifact.versioning.OverConstrainedVersionException from label1 to label3 with label4;
    }
}
