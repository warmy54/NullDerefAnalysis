public class NoSpaceBeforeCloseWriter extends sortpom.util.XmlWriter
{
    private final sortpom.util.XmlWriter out;

    void <init>(sortpom.util.XmlWriter)
    {
        NoSpaceBeforeCloseWriter this;
        sortpom.util.XmlWriter out;
        sortpom.util.NoSpaceBeforeCloseWriter $r0;

        this := @this: NoSpaceBeforeCloseWriter;

        out := @parameter0: sortpom.util.XmlWriter;

        specialinvoke this.<sortpom.util.XmlWriter: void <init>()>();

        $r0 = (sortpom.util.NoSpaceBeforeCloseWriter) this;

        $r0.<sortpom.util.NoSpaceBeforeCloseWriter: sortpom.util.XmlWriter out> = out;

        return;
    }

    public void write(java.lang.String)
    {
        java.lang.String str, $stack2;
        boolean $stack3;
        NoSpaceBeforeCloseWriter this;
        sortpom.util.XmlWriter $stack4, $stack5;
        sortpom.util.NoSpaceBeforeCloseWriter $r0, $r1;

        this := @this: NoSpaceBeforeCloseWriter;

        str := @parameter0: java.lang.String;

        $stack2 = " />";

        $stack3 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>(str);

        if $stack3 == 0 goto label1;

        $r0 = (sortpom.util.NoSpaceBeforeCloseWriter) this;

        $stack5 = $r0.<sortpom.util.NoSpaceBeforeCloseWriter: sortpom.util.XmlWriter out>;

        virtualinvoke $stack5.<sortpom.util.XmlWriter: void write(java.lang.String)>("/>");

        goto label2;

     label1:
        $r1 = (sortpom.util.NoSpaceBeforeCloseWriter) this;

        $stack4 = $r1.<sortpom.util.NoSpaceBeforeCloseWriter: sortpom.util.XmlWriter out>;

        virtualinvoke $stack4.<sortpom.util.XmlWriter: void write(java.lang.String)>(str);

     label2:
        return;
    }

    public void write(int)
    {
        NoSpaceBeforeCloseWriter this;
        int c;
        sortpom.util.XmlWriter $stack2;
        sortpom.util.NoSpaceBeforeCloseWriter $r0;

        this := @this: NoSpaceBeforeCloseWriter;

        c := @parameter0: int;

        $r0 = (sortpom.util.NoSpaceBeforeCloseWriter) this;

        $stack2 = $r0.<sortpom.util.NoSpaceBeforeCloseWriter: sortpom.util.XmlWriter out>;

        virtualinvoke $stack2.<sortpom.util.XmlWriter: void write(int)>(c);

        return;
    }

    public void flush()
    {
        NoSpaceBeforeCloseWriter this;
        sortpom.util.XmlWriter $stack1;
        sortpom.util.NoSpaceBeforeCloseWriter $r0;

        this := @this: NoSpaceBeforeCloseWriter;

        $r0 = (sortpom.util.NoSpaceBeforeCloseWriter) this;

        $stack1 = $r0.<sortpom.util.NoSpaceBeforeCloseWriter: sortpom.util.XmlWriter out>;

        virtualinvoke $stack1.<sortpom.util.XmlWriter: void flush()>();

        return;
    }

    public void close()
    {
        NoSpaceBeforeCloseWriter this;
        sortpom.util.XmlWriter $stack1;
        sortpom.util.NoSpaceBeforeCloseWriter $r0;

        this := @this: NoSpaceBeforeCloseWriter;

        $r0 = (sortpom.util.NoSpaceBeforeCloseWriter) this;

        $stack1 = $r0.<sortpom.util.NoSpaceBeforeCloseWriter: sortpom.util.XmlWriter out>;

        virtualinvoke $stack1.<sortpom.util.XmlWriter: void close()>();

        return;
    }

    public java.lang.String toString()
    {
        NoSpaceBeforeCloseWriter this;
        sortpom.util.XmlWriter $stack1;
        java.lang.String $stack2;
        sortpom.util.NoSpaceBeforeCloseWriter $r0;

        this := @this: NoSpaceBeforeCloseWriter;

        $r0 = (sortpom.util.NoSpaceBeforeCloseWriter) this;

        $stack1 = $r0.<sortpom.util.NoSpaceBeforeCloseWriter: sortpom.util.XmlWriter out>;

        $stack2 = virtualinvoke $stack1.<java.lang.Object: java.lang.String toString()>();

        return $stack2;
    }

    public void clearLineBuffer()
    {
        NoSpaceBeforeCloseWriter this;
        sortpom.util.XmlWriter $stack1;
        sortpom.util.NoSpaceBeforeCloseWriter $r0;

        this := @this: NoSpaceBeforeCloseWriter;

        $r0 = (sortpom.util.NoSpaceBeforeCloseWriter) this;

        $stack1 = $r0.<sortpom.util.NoSpaceBeforeCloseWriter: sortpom.util.XmlWriter out>;

        virtualinvoke $stack1.<sortpom.util.XmlWriter: void clearLineBuffer()>();

        return;
    }
}
