class NodeList$1 extends java.lang.Object implements java.util.Iterator
{
    org.ooc.frontend.model.NodeList list;
    int index;
    final org.ooc.frontend.model.NodeList this$0;

    void <init>(org.ooc.frontend.model.NodeList)
    {
        NodeList$1 this;
        org.ooc.frontend.model.NodeList this$0, $stack2;
        org.ooc.frontend.model.NodeList$1 $r0, $r1, $r2, $r3;

        this := @this: NodeList$1;

        this$0 := @parameter0: org.ooc.frontend.model.NodeList;

        $r0 = (org.ooc.frontend.model.NodeList$1) this;

        $r0.<org.ooc.frontend.model.NodeList$1: org.ooc.frontend.model.NodeList this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r1 = (org.ooc.frontend.model.NodeList$1) this;

        $stack2 = $r1.<org.ooc.frontend.model.NodeList$1: org.ooc.frontend.model.NodeList this$0>;

        $r2 = (org.ooc.frontend.model.NodeList$1) this;

        $r2.<org.ooc.frontend.model.NodeList$1: org.ooc.frontend.model.NodeList list> = $stack2;

        $r3 = (org.ooc.frontend.model.NodeList$1) this;

        $r3.<org.ooc.frontend.model.NodeList$1: int index> = 0;

        return;
    }

    public boolean hasNext()
    {
        NodeList$1 this;
        org.ooc.frontend.model.NodeList $stack1;
        int $stack2, $stack3;
        boolean $stack4;
        org.ooc.frontend.model.NodeList$1 $r0, $r1;

        this := @this: NodeList$1;

        $r0 = (org.ooc.frontend.model.NodeList$1) this;

        $stack2 = $r0.<org.ooc.frontend.model.NodeList$1: int index>;

        $r1 = (org.ooc.frontend.model.NodeList$1) this;

        $stack1 = $r1.<org.ooc.frontend.model.NodeList$1: org.ooc.frontend.model.NodeList list>;

        $stack3 = virtualinvoke $stack1.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack2 >= $stack3 goto label1;

        $stack4 = 1;

        goto label2;

     label1:
        $stack4 = 0;

     label2:
        return $stack4;
    }

    public org.ooc.frontend.model.Node next()
    {
        NodeList$1 this;
        org.ooc.frontend.model.NodeList $stack1, $stack4;
        int $stack2, $stack3, $stack6, $stack7, $stack10;
        org.ooc.frontend.model.Node[] $stack5;
        org.ooc.frontend.model.Node $stack8;
        java.lang.ArrayIndexOutOfBoundsException $u0;
        org.ooc.frontend.model.NodeList$1 $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: NodeList$1;

        $r0 = (org.ooc.frontend.model.NodeList$1) this;

        $stack2 = $r0.<org.ooc.frontend.model.NodeList$1: int index>;

        $r1 = (org.ooc.frontend.model.NodeList$1) this;

        $stack1 = $r1.<org.ooc.frontend.model.NodeList$1: org.ooc.frontend.model.NodeList list>;

        $stack3 = virtualinvoke $stack1.<org.ooc.frontend.model.NodeList: int size()>();

        if $stack2 < $stack3 goto label1;

        $u0 = new java.lang.ArrayIndexOutOfBoundsException;

        $r2 = (org.ooc.frontend.model.NodeList$1) this;

        $stack10 = $r2.<org.ooc.frontend.model.NodeList$1: int index>;

        specialinvoke $u0.<java.lang.ArrayIndexOutOfBoundsException: void <init>(int)>($stack10);

        throw $u0;

     label1:
        $r3 = (org.ooc.frontend.model.NodeList$1) this;

        $stack4 = $r3.<org.ooc.frontend.model.NodeList$1: org.ooc.frontend.model.NodeList list>;

        $stack5 = virtualinvoke $stack4.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node[] getNodes()>();

        $r4 = (org.ooc.frontend.model.NodeList$1) this;

        $stack6 = $r4.<org.ooc.frontend.model.NodeList$1: int index>;

        $stack7 = $stack6 + 1;

        $r5 = (org.ooc.frontend.model.NodeList$1) this;

        $r5.<org.ooc.frontend.model.NodeList$1: int index> = $stack7;

        $stack8 = $stack5[$stack6];

        return $stack8;
    }

    public void remove()
    {
        NodeList$1 this;
        int $stack1;
        org.ooc.frontend.model.NodeList $stack2;
        org.ooc.frontend.model.NodeList$1 $r0, $r1;

        this := @this: NodeList$1;

        $r0 = (org.ooc.frontend.model.NodeList$1) this;

        $stack2 = $r0.<org.ooc.frontend.model.NodeList$1: org.ooc.frontend.model.NodeList this$0>;

        $r1 = (org.ooc.frontend.model.NodeList$1) this;

        $stack1 = $r1.<org.ooc.frontend.model.NodeList$1: int index>;

        virtualinvoke $stack2.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node removeAt(int)>($stack1);

        return;
    }

    public volatile java.lang.Object next()
    {
        NodeList$1 this;
        org.ooc.frontend.model.Node $stack1;
        org.ooc.frontend.model.NodeList$1 $r0;

        this := @this: NodeList$1;

        $r0 = (org.ooc.frontend.model.NodeList$1) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.NodeList$1: org.ooc.frontend.model.Node next()>();

        return $stack1;
    }
}
