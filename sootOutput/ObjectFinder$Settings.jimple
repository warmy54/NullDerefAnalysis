public class ObjectFinder$Settings extends org.bytedeco.javacv.BaseChildSettings
{
    org.bytedeco.opencv.opencv_core.IplImage objectImage;
    org.bytedeco.opencv.opencv_features2d.AKAZE detector;
    double distanceThreshold;
    int matchesMin;
    double ransacReprojThreshold;
    boolean useFLANN;

    public void <init>()
    {
        ObjectFinder$Settings this;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack1;
        org.bytedeco.javacv.ObjectFinder$Settings $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: ObjectFinder$Settings;

        specialinvoke this.<org.bytedeco.javacv.BaseChildSettings: void <init>()>();

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_core.IplImage objectImage> = null;

        $stack1 = staticinvoke <org.bytedeco.opencv.opencv_features2d.AKAZE: org.bytedeco.opencv.opencv_features2d.AKAZE create()>();

        $r1 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r1.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector> = $stack1;

        $r2 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r2.<org.bytedeco.javacv.ObjectFinder$Settings: double distanceThreshold> = 0.75;

        $r3 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r3.<org.bytedeco.javacv.ObjectFinder$Settings: int matchesMin> = 4;

        $r4 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r4.<org.bytedeco.javacv.ObjectFinder$Settings: double ransacReprojThreshold> = 1.0;

        $r5 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r5.<org.bytedeco.javacv.ObjectFinder$Settings: boolean useFLANN> = 0;

        return;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getObjectImage()
    {
        ObjectFinder$Settings this;
        org.bytedeco.opencv.opencv_core.IplImage $stack1;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_core.IplImage objectImage>;

        return $stack1;
    }

    public void setObjectImage(org.bytedeco.opencv.opencv_core.IplImage)
    {
        ObjectFinder$Settings this;
        org.bytedeco.opencv.opencv_core.IplImage objectImage;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        objectImage := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_core.IplImage objectImage> = objectImage;

        return;
    }

    public int getDescriptorType()
    {
        ObjectFinder$Settings this;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack1;
        int $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        $stack2 = virtualinvoke $stack1.<org.bytedeco.opencv.opencv_features2d.AKAZE: int getDescriptorType()>();

        return $stack2;
    }

    public void setDescriptorType(int)
    {
        ObjectFinder$Settings this;
        int dtype;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        dtype := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack2 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        virtualinvoke $stack2.<org.bytedeco.opencv.opencv_features2d.AKAZE: void setDescriptorType(int)>(dtype);

        return;
    }

    public int getDescriptorSize()
    {
        ObjectFinder$Settings this;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack1;
        int $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        $stack2 = virtualinvoke $stack1.<org.bytedeco.opencv.opencv_features2d.AKAZE: int getDescriptorSize()>();

        return $stack2;
    }

    public void setDescriptorSize(int)
    {
        ObjectFinder$Settings this;
        int dsize;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        dsize := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack2 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        virtualinvoke $stack2.<org.bytedeco.opencv.opencv_features2d.AKAZE: void setDescriptorSize(int)>(dsize);

        return;
    }

    public int getDescriptorChannels()
    {
        ObjectFinder$Settings this;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack1;
        int $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        $stack2 = virtualinvoke $stack1.<org.bytedeco.opencv.opencv_features2d.AKAZE: int getDescriptorChannels()>();

        return $stack2;
    }

    public void setDescriptorChannels(int)
    {
        ObjectFinder$Settings this;
        int dch;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        dch := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack2 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        virtualinvoke $stack2.<org.bytedeco.opencv.opencv_features2d.AKAZE: void setDescriptorChannels(int)>(dch);

        return;
    }

    public double getThreshold()
    {
        ObjectFinder$Settings this;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack1;
        double $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        $stack2 = virtualinvoke $stack1.<org.bytedeco.opencv.opencv_features2d.AKAZE: double getThreshold()>();

        return $stack2;
    }

    public void setThreshold(double)
    {
        ObjectFinder$Settings this;
        double threshold;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack3;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        threshold := @parameter0: double;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack3 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        virtualinvoke $stack3.<org.bytedeco.opencv.opencv_features2d.AKAZE: void setThreshold(double)>(threshold);

        return;
    }

    public int getNOctaves()
    {
        ObjectFinder$Settings this;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack1;
        int $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        $stack2 = virtualinvoke $stack1.<org.bytedeco.opencv.opencv_features2d.AKAZE: int getNOctaves()>();

        return $stack2;
    }

    public void setNOctaves(int)
    {
        ObjectFinder$Settings this;
        int nOctaves;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        nOctaves := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack2 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        virtualinvoke $stack2.<org.bytedeco.opencv.opencv_features2d.AKAZE: void setNOctaves(int)>(nOctaves);

        return;
    }

    public int getNOctaveLayers()
    {
        ObjectFinder$Settings this;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack1;
        int $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        $stack2 = virtualinvoke $stack1.<org.bytedeco.opencv.opencv_features2d.AKAZE: int getNOctaveLayers()>();

        return $stack2;
    }

    public void setNOctaveLayers(int)
    {
        ObjectFinder$Settings this;
        int nOctaveLayers;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack2;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        nOctaveLayers := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack2 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        virtualinvoke $stack2.<org.bytedeco.opencv.opencv_features2d.AKAZE: void setNOctaveLayers(int)>(nOctaveLayers);

        return;
    }

    public double getDistanceThreshold()
    {
        ObjectFinder$Settings this;
        double $stack1;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: double distanceThreshold>;

        return $stack1;
    }

    public void setDistanceThreshold(double)
    {
        ObjectFinder$Settings this;
        double distanceThreshold;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        distanceThreshold := @parameter0: double;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r0.<org.bytedeco.javacv.ObjectFinder$Settings: double distanceThreshold> = distanceThreshold;

        return;
    }

    public int getMatchesMin()
    {
        ObjectFinder$Settings this;
        int $stack1;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: int matchesMin>;

        return $stack1;
    }

    public void setMatchesMin(int)
    {
        ObjectFinder$Settings this;
        int matchesMin;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        matchesMin := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r0.<org.bytedeco.javacv.ObjectFinder$Settings: int matchesMin> = matchesMin;

        return;
    }

    public double getRansacReprojThreshold()
    {
        ObjectFinder$Settings this;
        double $stack1;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: double ransacReprojThreshold>;

        return $stack1;
    }

    public void setRansacReprojThreshold(double)
    {
        ObjectFinder$Settings this;
        double ransacReprojThreshold;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        ransacReprojThreshold := @parameter0: double;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r0.<org.bytedeco.javacv.ObjectFinder$Settings: double ransacReprojThreshold> = ransacReprojThreshold;

        return;
    }

    public boolean isUseFLANN()
    {
        ObjectFinder$Settings this;
        boolean $stack1;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder$Settings: boolean useFLANN>;

        return $stack1;
    }

    public void setUseFLANN(boolean)
    {
        ObjectFinder$Settings this;
        boolean useFLANN;
        org.bytedeco.javacv.ObjectFinder$Settings $r0;

        this := @this: ObjectFinder$Settings;

        useFLANN := @parameter0: boolean;

        $r0 = (org.bytedeco.javacv.ObjectFinder$Settings) this;

        $r0.<org.bytedeco.javacv.ObjectFinder$Settings: boolean useFLANN> = useFLANN;

        return;
    }
}
