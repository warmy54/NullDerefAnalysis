public class ObjectFinder extends java.lang.Object
{
    org.bytedeco.javacv.ObjectFinder$Settings settings;
    static final java.util.logging.Logger logger;
    org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints;
    org.bytedeco.opencv.opencv_core.KeyPointVector imageKeypoints;
    org.bytedeco.opencv.opencv_core.Mat objectDescriptors;
    org.bytedeco.opencv.opencv_core.Mat imageDescriptors;
    org.bytedeco.opencv.opencv_core.Mat indicesMat;
    org.bytedeco.opencv.opencv_core.Mat distsMat;
    org.bytedeco.opencv.opencv_flann.Index flannIndex;
    org.bytedeco.opencv.opencv_flann.IndexParams indexParams;
    org.bytedeco.opencv.opencv_flann.SearchParams searchParams;
    org.bytedeco.opencv.opencv_core.Mat pt1;
    org.bytedeco.opencv.opencv_core.Mat pt2;
    org.bytedeco.opencv.opencv_core.Mat mask;
    org.bytedeco.opencv.opencv_core.Mat H;
    java.util.ArrayList ptpairs;
    static final int[] bits;
    static final boolean $assertionsDisabled;

    public void <init>(org.bytedeco.opencv.opencv_core.IplImage)
    {
        ObjectFinder this;
        org.bytedeco.opencv.opencv_core.IplImage objectImage;
        org.bytedeco.javacv.ObjectFinder$Settings $stack3, $stack4, $u0;
        org.bytedeco.javacv.ObjectFinder $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        this := @this: ObjectFinder;

        objectImage := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.bytedeco.javacv.ObjectFinder) this;

        $r0.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints> = null;

        $r1 = (org.bytedeco.javacv.ObjectFinder) this;

        $r1.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector imageKeypoints> = null;

        $r2 = (org.bytedeco.javacv.ObjectFinder) this;

        $r2.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat objectDescriptors> = null;

        $r3 = (org.bytedeco.javacv.ObjectFinder) this;

        $r3.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat imageDescriptors> = null;

        $r4 = (org.bytedeco.javacv.ObjectFinder) this;

        $r4.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.Index flannIndex> = null;

        $r5 = (org.bytedeco.javacv.ObjectFinder) this;

        $r5.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.IndexParams indexParams> = null;

        $r6 = (org.bytedeco.javacv.ObjectFinder) this;

        $r6.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.SearchParams searchParams> = null;

        $r7 = (org.bytedeco.javacv.ObjectFinder) this;

        $r7.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt1> = null;

        $r8 = (org.bytedeco.javacv.ObjectFinder) this;

        $r8.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt2> = null;

        $r9 = (org.bytedeco.javacv.ObjectFinder) this;

        $r9.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat mask> = null;

        $r10 = (org.bytedeco.javacv.ObjectFinder) this;

        $r10.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat H> = null;

        $r11 = (org.bytedeco.javacv.ObjectFinder) this;

        $r11.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs> = null;

        $u0 = new org.bytedeco.javacv.ObjectFinder$Settings;

        specialinvoke $u0.<org.bytedeco.javacv.ObjectFinder$Settings: void <init>()>();

        $r12 = (org.bytedeco.javacv.ObjectFinder) this;

        $r12.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings> = $u0;

        $r13 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack3 = $r13.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack3.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_core.IplImage objectImage> = objectImage;

        $r14 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack4 = $r14.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $r15 = (org.bytedeco.javacv.ObjectFinder) this;

        virtualinvoke $r15.<org.bytedeco.javacv.ObjectFinder: void setSettings(org.bytedeco.javacv.ObjectFinder$Settings)>($stack4);

        return;
    }

    public void <init>(org.bytedeco.javacv.ObjectFinder$Settings)
    {
        ObjectFinder this;
        org.bytedeco.javacv.ObjectFinder$Settings settings;
        org.bytedeco.javacv.ObjectFinder $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        this := @this: ObjectFinder;

        settings := @parameter0: org.bytedeco.javacv.ObjectFinder$Settings;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.bytedeco.javacv.ObjectFinder) this;

        $r0.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints> = null;

        $r1 = (org.bytedeco.javacv.ObjectFinder) this;

        $r1.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector imageKeypoints> = null;

        $r2 = (org.bytedeco.javacv.ObjectFinder) this;

        $r2.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat objectDescriptors> = null;

        $r3 = (org.bytedeco.javacv.ObjectFinder) this;

        $r3.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat imageDescriptors> = null;

        $r4 = (org.bytedeco.javacv.ObjectFinder) this;

        $r4.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.Index flannIndex> = null;

        $r5 = (org.bytedeco.javacv.ObjectFinder) this;

        $r5.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.IndexParams indexParams> = null;

        $r6 = (org.bytedeco.javacv.ObjectFinder) this;

        $r6.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.SearchParams searchParams> = null;

        $r7 = (org.bytedeco.javacv.ObjectFinder) this;

        $r7.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt1> = null;

        $r8 = (org.bytedeco.javacv.ObjectFinder) this;

        $r8.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt2> = null;

        $r9 = (org.bytedeco.javacv.ObjectFinder) this;

        $r9.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat mask> = null;

        $r10 = (org.bytedeco.javacv.ObjectFinder) this;

        $r10.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat H> = null;

        $r11 = (org.bytedeco.javacv.ObjectFinder) this;

        $r11.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs> = null;

        $r12 = (org.bytedeco.javacv.ObjectFinder) this;

        virtualinvoke $r12.<org.bytedeco.javacv.ObjectFinder: void setSettings(org.bytedeco.javacv.ObjectFinder$Settings)>(settings);

        return;
    }

    public org.bytedeco.javacv.ObjectFinder$Settings getSettings()
    {
        ObjectFinder this;
        org.bytedeco.javacv.ObjectFinder$Settings $stack1;
        org.bytedeco.javacv.ObjectFinder $r0;

        this := @this: ObjectFinder;

        $r0 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack1 = $r0.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        return $stack1;
    }

    public void setSettings(org.bytedeco.javacv.ObjectFinder$Settings)
    {
        ObjectFinder this;
        org.bytedeco.javacv.ObjectFinder$Settings settings;
        org.bytedeco.opencv.opencv_core.IplImage $stack5;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack6;
        org.bytedeco.opencv.opencv_core.Mat $stack7, $stack9, $stack23, $u1, $u2, $u3, $u4, $u8, $u9, $u10, $u11;
        org.bytedeco.opencv.opencv_core.KeyPointVector $stack10, $stack11, $u0;
        long $stack12;
        int total, $stack15, $stack17, $stack19, $stack21, $stack25, $stack26, $stack33, $stack35;
        boolean $stack13;
        java.util.logging.Logger $stack28;
        java.lang.StringBuilder $stack29, $stack30, $u13;
        java.lang.String $stack31;
        org.bytedeco.opencv.opencv_flann.SearchParams $stack39, $u7;
        org.bytedeco.opencv.opencv_flann.Index $u5;
        org.bytedeco.opencv.opencv_flann.LshIndexParams $u6;
        java.util.ArrayList $u12;
        org.bytedeco.javacv.ObjectFinder $r0, $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19;
        org.bytedeco.opencv.opencv_core.CvArr $r3;
        org.bytedeco.opencv.opencv_flann.IndexParams $r11;

        this := @this: ObjectFinder;

        settings := @parameter0: org.bytedeco.javacv.ObjectFinder$Settings;

        $r0 = (org.bytedeco.javacv.ObjectFinder) this;

        $r0.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings> = settings;

        $u0 = new org.bytedeco.opencv.opencv_core.KeyPointVector;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.KeyPointVector: void <init>()>();

        $r1 = (org.bytedeco.javacv.ObjectFinder) this;

        $r1.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints> = $u0;

        $u1 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u1.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $r2 = (org.bytedeco.javacv.ObjectFinder) this;

        $r2.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat objectDescriptors> = $u1;

        $stack6 = settings.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        $stack5 = settings.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_core.IplImage objectImage>;

        $r3 = (org.bytedeco.opencv.opencv_core.CvArr) $stack5;

        $stack7 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r3);

        $u2 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u2.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $r4 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack10 = $r4.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints>;

        $r5 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack9 = $r5.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat objectDescriptors>;

        virtualinvoke $stack6.<org.bytedeco.opencv.opencv_features2d.AKAZE: void detectAndCompute(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.KeyPointVector,org.bytedeco.opencv.opencv_core.Mat,boolean)>($stack7, $u2, $stack10, $stack9, 0);

        $r6 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack11 = $r6.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints>;

        $stack12 = virtualinvoke $stack11.<org.bytedeco.opencv.opencv_core.KeyPointVector: long size()>();

        total = (int) $stack12;

        $stack13 = settings.<org.bytedeco.javacv.ObjectFinder$Settings: boolean useFLANN>;

        if $stack13 == 0 goto label1;

        $u3 = new org.bytedeco.opencv.opencv_core.Mat;

        $stack33 = <org.bytedeco.opencv.global.opencv_core: int CV_32SC1>;

        specialinvoke $u3.<org.bytedeco.opencv.opencv_core.Mat: void <init>(int,int,int)>(total, 2, $stack33);

        $r7 = (org.bytedeco.javacv.ObjectFinder) this;

        $r7.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat indicesMat> = $u3;

        $u4 = new org.bytedeco.opencv.opencv_core.Mat;

        $stack35 = <org.bytedeco.opencv.global.opencv_core: int CV_32FC1>;

        specialinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: void <init>(int,int,int)>(total, 2, $stack35);

        $r8 = (org.bytedeco.javacv.ObjectFinder) this;

        $r8.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat distsMat> = $u4;

        $u5 = new org.bytedeco.opencv.opencv_flann.Index;

        specialinvoke $u5.<org.bytedeco.opencv.opencv_flann.Index: void <init>()>();

        $r9 = (org.bytedeco.javacv.ObjectFinder) this;

        $r9.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.Index flannIndex> = $u5;

        $u6 = new org.bytedeco.opencv.opencv_flann.LshIndexParams;

        specialinvoke $u6.<org.bytedeco.opencv.opencv_flann.LshIndexParams: void <init>(int,int,int)>(12, 20, 2);

        $r10 = (org.bytedeco.javacv.ObjectFinder) this;

        $r11 = (org.bytedeco.opencv.opencv_flann.IndexParams) $u6;

        $r10.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.IndexParams indexParams> = $r11;

        $u7 = new org.bytedeco.opencv.opencv_flann.SearchParams;

        specialinvoke $u7.<org.bytedeco.opencv.opencv_flann.SearchParams: void <init>(int,float,boolean)>(64, 0.0F, 1);

        $r12 = (org.bytedeco.javacv.ObjectFinder) this;

        $r12.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.SearchParams searchParams> = $u7;

        $r13 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack39 = $r13.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.SearchParams searchParams>;

        virtualinvoke $stack39.<org.bytedeco.opencv.opencv_flann.SearchParams: void deallocate(boolean)>(0);

     label1:
        $u8 = new org.bytedeco.opencv.opencv_core.Mat;

        $stack15 = <org.bytedeco.opencv.global.opencv_core: int CV_32FC2>;

        specialinvoke $u8.<org.bytedeco.opencv.opencv_core.Mat: void <init>(int,int,int)>(total, 1, $stack15);

        $r14 = (org.bytedeco.javacv.ObjectFinder) this;

        $r14.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt1> = $u8;

        $u9 = new org.bytedeco.opencv.opencv_core.Mat;

        $stack17 = <org.bytedeco.opencv.global.opencv_core: int CV_32FC2>;

        specialinvoke $u9.<org.bytedeco.opencv.opencv_core.Mat: void <init>(int,int,int)>(total, 1, $stack17);

        $r15 = (org.bytedeco.javacv.ObjectFinder) this;

        $r15.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt2> = $u9;

        $u10 = new org.bytedeco.opencv.opencv_core.Mat;

        $stack19 = <org.bytedeco.opencv.global.opencv_core: int CV_8UC1>;

        specialinvoke $u10.<org.bytedeco.opencv.opencv_core.Mat: void <init>(int,int,int)>(total, 1, $stack19);

        $r16 = (org.bytedeco.javacv.ObjectFinder) this;

        $r16.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat mask> = $u10;

        $u11 = new org.bytedeco.opencv.opencv_core.Mat;

        $stack21 = <org.bytedeco.opencv.global.opencv_core: int CV_64FC1>;

        specialinvoke $u11.<org.bytedeco.opencv.opencv_core.Mat: void <init>(int,int,int)>(3, 3, $stack21);

        $r17 = (org.bytedeco.javacv.ObjectFinder) this;

        $r17.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat H> = $u11;

        $u12 = new java.util.ArrayList;

        $r18 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack23 = $r18.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat objectDescriptors>;

        $stack25 = virtualinvoke $stack23.<org.bytedeco.opencv.opencv_core.Mat: int rows()>();

        $stack26 = 2 * $stack25;

        specialinvoke $u12.<java.util.ArrayList: void <init>(int)>($stack26);

        $r19 = (org.bytedeco.javacv.ObjectFinder) this;

        $r19.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs> = $u12;

        $stack28 = <org.bytedeco.javacv.ObjectFinder: java.util.logging.Logger logger>;

        $u13 = new java.lang.StringBuilder;

        specialinvoke $u13.<java.lang.StringBuilder: void <init>()>();

        $stack29 = virtualinvoke $u13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(total);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" object descriptors");

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack28.<java.util.logging.Logger: void info(java.lang.String)>($stack31);

        return;
    }

    public double[] find(org.bytedeco.opencv.opencv_core.IplImage)
    {
        ObjectFinder this;
        org.bytedeco.opencv.opencv_core.Mat $stack7, $stack15, $stack17, $stack19, $stack41, $stack43, $u1, $u2;
        int $stack8, $stack10, $stack20, $stack22, total, w, h;
        org.bytedeco.javacv.ObjectFinder$Settings $stack9, $stack13, $stack21, $stack30, $stack33;
        org.bytedeco.opencv.opencv_core.IplImage image, $stack31, $stack34;
        org.bytedeco.opencv.opencv_features2d.AKAZE $stack14;
        org.bytedeco.opencv.opencv_core.KeyPointVector $stack18, $stack23, $stack42, $stack44, $u0;
        long $stack24;
        java.util.logging.Logger $stack26;
        java.lang.StringBuilder $stack27, $stack28, $u3;
        java.lang.String $stack29;
        double[] $stack36, dstCorners;
        double $stack37, $stack38, $stack39, $stack40;
        org.bytedeco.javacv.ObjectFinder $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        org.bytedeco.opencv.opencv_core.CvArr $r5;

        this := @this: ObjectFinder;

        image := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        $r0 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack7 = $r0.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat objectDescriptors>;

        $stack8 = virtualinvoke $stack7.<org.bytedeco.opencv.opencv_core.Mat: int rows()>();

        $r1 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack9 = $r1.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack10 = virtualinvoke $stack9.<org.bytedeco.javacv.ObjectFinder$Settings: int getMatchesMin()>();

        if $stack8 >= $stack10 goto label1;

        return null;

     label1:
        $u0 = new org.bytedeco.opencv.opencv_core.KeyPointVector;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.KeyPointVector: void <init>()>();

        $r2 = (org.bytedeco.javacv.ObjectFinder) this;

        $r2.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector imageKeypoints> = $u0;

        $u1 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u1.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $r3 = (org.bytedeco.javacv.ObjectFinder) this;

        $r3.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat imageDescriptors> = $u1;

        $r4 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack13 = $r4.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack14 = $stack13.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_features2d.AKAZE detector>;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) image;

        $stack15 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r5);

        $u2 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u2.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $r6 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack18 = $r6.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector imageKeypoints>;

        $r7 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack17 = $r7.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat imageDescriptors>;

        virtualinvoke $stack14.<org.bytedeco.opencv.opencv_features2d.AKAZE: void detectAndCompute(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.KeyPointVector,org.bytedeco.opencv.opencv_core.Mat,boolean)>($stack15, $u2, $stack18, $stack17, 0);

        $r8 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack19 = $r8.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat imageDescriptors>;

        $stack20 = virtualinvoke $stack19.<org.bytedeco.opencv.opencv_core.Mat: int rows()>();

        $r9 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack21 = $r9.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack22 = virtualinvoke $stack21.<org.bytedeco.javacv.ObjectFinder$Settings: int getMatchesMin()>();

        if $stack20 >= $stack22 goto label2;

        return null;

     label2:
        $r10 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack23 = $r10.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector imageKeypoints>;

        $stack24 = virtualinvoke $stack23.<org.bytedeco.opencv.opencv_core.KeyPointVector: long size()>();

        total = (int) $stack24;

        $stack26 = <org.bytedeco.javacv.ObjectFinder: java.util.logging.Logger logger>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack27 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(total);

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" image descriptors");

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack26.<java.util.logging.Logger: void info(java.lang.String)>($stack29);

        $r11 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack30 = $r11.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack31 = $stack30.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_core.IplImage objectImage>;

        w = virtualinvoke $stack31.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $r12 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack33 = $r12.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack34 = $stack33.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_core.IplImage objectImage>;

        h = virtualinvoke $stack34.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack36 = newarray (double)[8];

        $stack36[0] = 0.0;

        $stack36[1] = 0.0;

        $stack37 = (double) w;

        $stack36[2] = $stack37;

        $stack36[3] = 0.0;

        $stack38 = (double) w;

        $stack36[4] = $stack38;

        $stack39 = (double) h;

        $stack36[5] = $stack39;

        $stack36[6] = 0.0;

        $stack40 = (double) h;

        $stack36[7] = $stack40;

        $r13 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack44 = $r13.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints>;

        $r14 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack43 = $r14.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat objectDescriptors>;

        $r15 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack42 = $r15.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector imageKeypoints>;

        $r16 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack41 = $r16.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat imageDescriptors>;

        $r17 = (org.bytedeco.javacv.ObjectFinder) this;

        dstCorners = virtualinvoke $r17.<org.bytedeco.javacv.ObjectFinder: double[] locatePlanarObject(org.bytedeco.opencv.opencv_core.KeyPointVector,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.KeyPointVector,org.bytedeco.opencv.opencv_core.Mat,double[])>($stack44, $stack43, $stack42, $stack41, $stack36);

        return dstCorners;
    }

    int compareDescriptors(java.nio.ByteBuffer, java.nio.ByteBuffer, int)
    {
        boolean $stack5;
        java.nio.ByteBuffer d1, d2;
        int[] $stack8;
        byte $stack9, $stack10;
        int $stack11, $stack12, $stack13, best, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, totalCost, $stack6, $stack7;
        java.lang.AssertionError $stack23;
        ObjectFinder this;

        this := @this: ObjectFinder;

        d1 := @parameter0: java.nio.ByteBuffer;

        d2 := @parameter1: java.nio.ByteBuffer;

        best := @parameter2: int;

        totalCost = 0;

        $stack5 = <org.bytedeco.javacv.ObjectFinder: boolean $assertionsDisabled>;

        if $stack5 != 0 goto label1;

        $stack17 = virtualinvoke d1.<java.nio.ByteBuffer: int limit()>();

        $stack18 = virtualinvoke d1.<java.nio.ByteBuffer: int position()>();

        $stack19 = $stack17 - $stack18;

        $stack20 = virtualinvoke d2.<java.nio.ByteBuffer: int limit()>();

        $stack21 = virtualinvoke d2.<java.nio.ByteBuffer: int position()>();

        $stack22 = $stack20 - $stack21;

        if $stack19 == $stack22 goto label1;

        $stack23 = new java.lang.AssertionError;

        specialinvoke $stack23.<java.lang.AssertionError: void <init>()>();

        throw $stack23;

     label1:
        $stack6 = virtualinvoke d1.<java.nio.ByteBuffer: int position()>();

        $stack7 = virtualinvoke d1.<java.nio.ByteBuffer: int limit()>();

        if $stack6 >= $stack7 goto label2;

        $stack8 = <org.bytedeco.javacv.ObjectFinder: int[] bits>;

        $stack9 = virtualinvoke d1.<java.nio.ByteBuffer: byte get()>();

        $stack10 = virtualinvoke d2.<java.nio.ByteBuffer: byte get()>();

        $stack11 = $stack9 ^ $stack10;

        $stack12 = $stack11 & 255;

        $stack13 = $stack8[$stack12];

        totalCost = totalCost + $stack13;

        if totalCost <= best goto label1;

        goto label2;

     label2:
        return totalCost;
    }

    int naiveNearestNeighbor(java.nio.ByteBuffer, java.nio.ByteBuffer)
    {
        java.nio.ByteBuffer vec, modelDescriptors, $stack21, mvec, $stack25;
        int $stack10, $stack11, size, $stack12, $stack13, $stack20, $stack22, $stack23, d, neighbor, dist1, dist2, i;
        ObjectFinder this;
        org.bytedeco.javacv.ObjectFinder$Settings $stack14;
        double $stack15, $stack16, $stack17, $stack18;
        byte $stack19;
        org.bytedeco.javacv.ObjectFinder $r0, $r1;

        this := @this: ObjectFinder;

        vec := @parameter0: java.nio.ByteBuffer;

        modelDescriptors := @parameter1: java.nio.ByteBuffer;

        neighbor = -1;

        dist1 = 2147483647;

        dist2 = 2147483647;

        $stack10 = virtualinvoke vec.<java.nio.ByteBuffer: int limit()>();

        $stack11 = virtualinvoke vec.<java.nio.ByteBuffer: int position()>();

        size = $stack10 - $stack11;

        i = 0;

     label1:
        $stack12 = i * size;

        $stack13 = virtualinvoke modelDescriptors.<java.nio.ByteBuffer: int capacity()>();

        if $stack12 >= $stack13 goto label4;

        $stack20 = i * size;

        $stack21 = virtualinvoke modelDescriptors.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>($stack20);

        $stack22 = i + 1;

        $stack23 = $stack22 * size;

        mvec = virtualinvoke $stack21.<java.nio.ByteBuffer: java.nio.ByteBuffer limit(int)>($stack23);

        $stack25 = virtualinvoke vec.<java.nio.ByteBuffer: java.nio.ByteBuffer reset()>();

        $r0 = (org.bytedeco.javacv.ObjectFinder) this;

        d = virtualinvoke $r0.<org.bytedeco.javacv.ObjectFinder: int compareDescriptors(java.nio.ByteBuffer,java.nio.ByteBuffer,int)>($stack25, mvec, dist2);

        if d >= dist1 goto label2;

        dist2 = dist1;

        dist1 = d;

        neighbor = i;

        goto label3;

     label2:
        if d >= dist2 goto label3;

        dist2 = d;

     label3:
        i = i + 1;

        goto label1;

     label4:
        $stack18 = (double) dist1;

        $r1 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack14 = $r1.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack16 = $stack14.<org.bytedeco.javacv.ObjectFinder$Settings: double distanceThreshold>;

        $stack15 = (double) dist2;

        $stack17 = $stack16 * $stack15;

        $stack19 = $stack18 cmpg $stack17;

        if $stack19 >= 0 goto label5;

        return neighbor;

     label5:
        return -1;
    }

    void findPairs(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat)
    {
        org.bytedeco.opencv.opencv_core.Mat imageDescriptors, objectDescriptors;
        int size, $stack12, $stack13, $stack14, $stack16, $stack17, nearestNeighbor, i;
        java.nio.Buffer $stack10, $stack11;
        java.nio.ByteBuffer objectBuf, imageBuf, $stack15, $stack18, descriptor;
        ObjectFinder this;
        java.util.ArrayList $stack24, $stack27;
        java.lang.Integer $stack25, $stack28;
        org.bytedeco.javacv.ObjectFinder $r0, $r1, $r2;

        this := @this: ObjectFinder;

        objectDescriptors := @parameter0: org.bytedeco.opencv.opencv_core.Mat;

        imageDescriptors := @parameter1: org.bytedeco.opencv.opencv_core.Mat;

        size = virtualinvoke imageDescriptors.<org.bytedeco.opencv.opencv_core.Mat: int cols()>();

        $stack10 = virtualinvoke objectDescriptors.<org.bytedeco.opencv.opencv_core.Mat: java.nio.Buffer createBuffer()>();

        objectBuf = (java.nio.ByteBuffer) $stack10;

        $stack11 = virtualinvoke imageDescriptors.<org.bytedeco.opencv.opencv_core.Mat: java.nio.Buffer createBuffer()>();

        imageBuf = (java.nio.ByteBuffer) $stack11;

        i = 0;

     label1:
        $stack12 = i * size;

        $stack13 = virtualinvoke objectBuf.<java.nio.ByteBuffer: int capacity()>();

        if $stack12 >= $stack13 goto label3;

        $stack14 = i * size;

        $stack15 = virtualinvoke objectBuf.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>($stack14);

        $stack16 = i + 1;

        $stack17 = $stack16 * size;

        $stack18 = virtualinvoke $stack15.<java.nio.ByteBuffer: java.nio.ByteBuffer limit(int)>($stack17);

        descriptor = virtualinvoke $stack18.<java.nio.ByteBuffer: java.nio.ByteBuffer mark()>();

        $r0 = (org.bytedeco.javacv.ObjectFinder) this;

        nearestNeighbor = virtualinvoke $r0.<org.bytedeco.javacv.ObjectFinder: int naiveNearestNeighbor(java.nio.ByteBuffer,java.nio.ByteBuffer)>(descriptor, imageBuf);

        if nearestNeighbor < 0 goto label2;

        $r1 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack24 = $r1.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i);

        virtualinvoke $stack24.<java.util.ArrayList: boolean add(java.lang.Object)>($stack25);

        $r2 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack27 = $r2.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(nearestNeighbor);

        virtualinvoke $stack27.<java.util.ArrayList: boolean add(java.lang.Object)>($stack28);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    void flannFindPairs(org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.Mat)
    {
        org.bytedeco.opencv.opencv_core.Mat objectDescriptors, imageDescriptors, $stack11, $stack12, $stack14, $stack16;
        int length, $stack18, $stack19, $stack21, $stack22, $stack25, $stack34, $stack36, i;
        ObjectFinder this;
        org.bytedeco.opencv.opencv_flann.IndexParams $stack8;
        org.bytedeco.opencv.opencv_flann.Index $stack9, $stack13;
        org.bytedeco.opencv.opencv_flann.SearchParams $stack10;
        java.nio.Buffer $stack15, $stack17;
        java.nio.IntBuffer indicesBuf, distsBuf;
        org.bytedeco.javacv.ObjectFinder$Settings $stack20;
        double $stack23, $stack24, $stack26, $stack27;
        byte $stack28;
        java.util.ArrayList $stack31, $stack35;
        java.lang.Integer $stack32, $stack37;
        org.bytedeco.javacv.ObjectFinder $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: ObjectFinder;

        objectDescriptors := @parameter0: org.bytedeco.opencv.opencv_core.Mat;

        imageDescriptors := @parameter1: org.bytedeco.opencv.opencv_core.Mat;

        length = virtualinvoke objectDescriptors.<org.bytedeco.opencv.opencv_core.Mat: int rows()>();

        $r0 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack9 = $r0.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.Index flannIndex>;

        $r1 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack8 = $r1.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.IndexParams indexParams>;

        virtualinvoke $stack9.<org.bytedeco.opencv.opencv_flann.Index: void build(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_flann.IndexParams,int)>(imageDescriptors, $stack8, 9);

        $r2 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack13 = $r2.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.Index flannIndex>;

        $r3 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack12 = $r3.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat indicesMat>;

        $r4 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack11 = $r4.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat distsMat>;

        $r5 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack10 = $r5.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_flann.SearchParams searchParams>;

        virtualinvoke $stack13.<org.bytedeco.opencv.opencv_flann.Index: void knnSearch(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,int,org.bytedeco.opencv.opencv_flann.SearchParams)>(objectDescriptors, $stack12, $stack11, 2, $stack10);

        $r6 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack14 = $r6.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat indicesMat>;

        $stack15 = virtualinvoke $stack14.<org.bytedeco.opencv.opencv_core.Mat: java.nio.Buffer createBuffer()>();

        indicesBuf = (java.nio.IntBuffer) $stack15;

        $r7 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack16 = $r7.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat distsMat>;

        $stack17 = virtualinvoke $stack16.<org.bytedeco.opencv.opencv_core.Mat: java.nio.Buffer createBuffer()>();

        distsBuf = (java.nio.IntBuffer) $stack17;

        i = 0;

     label1:
        if i >= length goto label3;

        $stack18 = 2 * i;

        $stack19 = virtualinvoke distsBuf.<java.nio.IntBuffer: int get(int)>($stack18);

        $stack23 = (double) $stack19;

        $r8 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack20 = $r8.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack24 = $stack20.<org.bytedeco.javacv.ObjectFinder$Settings: double distanceThreshold>;

        $stack21 = 2 * i;

        $stack22 = $stack21 + 1;

        $stack25 = virtualinvoke distsBuf.<java.nio.IntBuffer: int get(int)>($stack22);

        $stack26 = (double) $stack25;

        $stack27 = $stack24 * $stack26;

        $stack28 = $stack23 cmpg $stack27;

        if $stack28 >= 0 goto label2;

        $r9 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack31 = $r9.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i);

        virtualinvoke $stack31.<java.util.ArrayList: boolean add(java.lang.Object)>($stack32);

        $r10 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack35 = $r10.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack34 = 2 * i;

        $stack36 = virtualinvoke indicesBuf.<java.nio.IntBuffer: int get(int)>($stack34);

        $stack37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack36);

        virtualinvoke $stack35.<java.util.ArrayList: boolean add(java.lang.Object)>($stack37);

     label2:
        i = i + 1;

        goto label1;

     label3:
        return;
    }

    double[] locatePlanarObject(org.bytedeco.opencv.opencv_core.KeyPointVector, org.bytedeco.opencv.opencv_core.Mat, org.bytedeco.opencv.opencv_core.KeyPointVector, org.bytedeco.opencv.opencv_core.Mat, double[])
    {
        ObjectFinder this;
        java.util.ArrayList $stack22, $stack25, $stack94, $stack110;
        org.bytedeco.javacv.ObjectFinder$Settings $stack23, $stack32, $stack44, $stack54;
        boolean $stack24, $stack51;
        org.bytedeco.opencv.opencv_core.Mat objectDescriptors, imageDescriptors, $stack35, $stack37, $stack39, $stack40, $stack42, $stack45, $stack47, $stack48, $stack49, $stack50, $stack52, $stack56;
        int $stack26, n, $stack33, $stack53, $stack55, $stack59, $stack60, $stack61, $stack62, $stack63, $stack64, $stack86, $stack87, $stack88, $stack93, $stack97, $stack101, $stack104, $stack105, $stack108, $stack109, $stack113, $stack117, $stack120, $stack121, i, p2#6;
        java.util.logging.Logger $stack28;
        java.lang.StringBuilder $stack29, $stack30, $u0;
        java.lang.String $stack31;
        long $stack34, $stack36, $stack38, $stack98, $stack114;
        java.nio.Buffer $stack41, $stack43;
        java.nio.FloatBuffer pt1Idx, pt2Idx;
        double $stack46, x, y, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack71, Z, $stack72, $stack73, $stack74, $stack75, $stack76, $stack77, $stack78, X, $stack79, $stack80, $stack81, $stack82, $stack83, $stack84, $stack85, Y;
        org.bytedeco.javacpp.indexer.Indexer $stack57;
        java.lang.Object $stack58, $stack95, $stack111;
        double[] srcCorners, i#4, p1#5;
        org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints, imageKeypoints;
        java.lang.Integer $stack96, $stack112;
        org.bytedeco.opencv.opencv_core.KeyPoint $stack99, $stack115;
        float $stack102, $stack106, $stack118, $stack122;
        org.bytedeco.opencv.opencv_core.Point2f p1, p2;
        org.bytedeco.javacv.ObjectFinder $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        this := @this: ObjectFinder;

        objectKeypoints := @parameter0: org.bytedeco.opencv.opencv_core.KeyPointVector;

        objectDescriptors := @parameter1: org.bytedeco.opencv.opencv_core.Mat;

        imageKeypoints := @parameter2: org.bytedeco.opencv.opencv_core.KeyPointVector;

        imageDescriptors := @parameter3: org.bytedeco.opencv.opencv_core.Mat;

        srcCorners := @parameter4: double[];

        $r0 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack22 = $r0.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        virtualinvoke $stack22.<java.util.ArrayList: void clear()>();

        $r1 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack23 = $r1.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack24 = $stack23.<org.bytedeco.javacv.ObjectFinder$Settings: boolean useFLANN>;

        if $stack24 == 0 goto label1;

        $r2 = (org.bytedeco.javacv.ObjectFinder) this;

        virtualinvoke $r2.<org.bytedeco.javacv.ObjectFinder: void flannFindPairs(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat)>(objectDescriptors, imageDescriptors);

        goto label2;

     label1:
        $r3 = (org.bytedeco.javacv.ObjectFinder) this;

        virtualinvoke $r3.<org.bytedeco.javacv.ObjectFinder: void findPairs(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat)>(objectDescriptors, imageDescriptors);

     label2:
        $r4 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack25 = $r4.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack26 = virtualinvoke $stack25.<java.util.ArrayList: int size()>();

        n = $stack26 / 2;

        $stack28 = <org.bytedeco.javacv.ObjectFinder: java.util.logging.Logger logger>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack29 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(n);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" matching pairs found");

        $stack31 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack28.<java.util.logging.Logger: void info(java.lang.String)>($stack31);

        $r5 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack32 = $r5.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack33 = $stack32.<org.bytedeco.javacv.ObjectFinder$Settings: int matchesMin>;

        if n >= $stack33 goto label3;

        return null;

     label3:
        $r6 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack35 = $r6.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt1>;

        $stack34 = (long) n;

        virtualinvoke $stack35.<org.bytedeco.opencv.opencv_core.Mat: void resize(long)>($stack34);

        $r7 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack37 = $r7.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt2>;

        $stack36 = (long) n;

        virtualinvoke $stack37.<org.bytedeco.opencv.opencv_core.Mat: void resize(long)>($stack36);

        $r8 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack39 = $r8.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat mask>;

        $stack38 = (long) n;

        virtualinvoke $stack39.<org.bytedeco.opencv.opencv_core.Mat: void resize(long)>($stack38);

        $r9 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack40 = $r9.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt1>;

        $stack41 = virtualinvoke $stack40.<org.bytedeco.opencv.opencv_core.Mat: java.nio.Buffer createBuffer()>();

        pt1Idx = (java.nio.FloatBuffer) $stack41;

        $r10 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack42 = $r10.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt2>;

        $stack43 = virtualinvoke $stack42.<org.bytedeco.opencv.opencv_core.Mat: java.nio.Buffer createBuffer()>();

        pt2Idx = (java.nio.FloatBuffer) $stack43;

        i = 0;

     label4:
        if i >= n goto label5;

        $r11 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack94 = $r11.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack93 = 2 * i;

        $stack95 = virtualinvoke $stack94.<java.util.ArrayList: java.lang.Object get(int)>($stack93);

        $stack96 = (java.lang.Integer) $stack95;

        $stack97 = virtualinvoke $stack96.<java.lang.Integer: int intValue()>();

        $stack98 = (long) $stack97;

        $stack99 = virtualinvoke objectKeypoints.<org.bytedeco.opencv.opencv_core.KeyPointVector: org.bytedeco.opencv.opencv_core.KeyPoint get(long)>($stack98);

        p1 = virtualinvoke $stack99.<org.bytedeco.opencv.opencv_core.KeyPoint: org.bytedeco.opencv.opencv_core.Point2f pt()>();

        $stack101 = 2 * i;

        $stack102 = virtualinvoke p1.<org.bytedeco.opencv.opencv_core.Point2f: float x()>();

        virtualinvoke pt1Idx.<java.nio.FloatBuffer: java.nio.FloatBuffer put(int,float)>($stack101, $stack102);

        $stack104 = 2 * i;

        $stack105 = $stack104 + 1;

        $stack106 = virtualinvoke p1.<org.bytedeco.opencv.opencv_core.Point2f: float y()>();

        virtualinvoke pt1Idx.<java.nio.FloatBuffer: java.nio.FloatBuffer put(int,float)>($stack105, $stack106);

        $r12 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack110 = $r12.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack108 = 2 * i;

        $stack109 = $stack108 + 1;

        $stack111 = virtualinvoke $stack110.<java.util.ArrayList: java.lang.Object get(int)>($stack109);

        $stack112 = (java.lang.Integer) $stack111;

        $stack113 = virtualinvoke $stack112.<java.lang.Integer: int intValue()>();

        $stack114 = (long) $stack113;

        $stack115 = virtualinvoke imageKeypoints.<org.bytedeco.opencv.opencv_core.KeyPointVector: org.bytedeco.opencv.opencv_core.KeyPoint get(long)>($stack114);

        p2 = virtualinvoke $stack115.<org.bytedeco.opencv.opencv_core.KeyPoint: org.bytedeco.opencv.opencv_core.Point2f pt()>();

        $stack117 = 2 * i;

        $stack118 = virtualinvoke p2.<org.bytedeco.opencv.opencv_core.Point2f: float x()>();

        virtualinvoke pt2Idx.<java.nio.FloatBuffer: java.nio.FloatBuffer put(int,float)>($stack117, $stack118);

        $stack120 = 2 * i;

        $stack121 = $stack120 + 1;

        $stack122 = virtualinvoke p2.<org.bytedeco.opencv.opencv_core.Point2f: float y()>();

        virtualinvoke pt2Idx.<java.nio.FloatBuffer: java.nio.FloatBuffer put(int,float)>($stack121, $stack122);

        i = i + 1;

        goto label4;

     label5:
        $r13 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack48 = $r13.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt1>;

        $r14 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack47 = $r14.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat pt2>;

        $r15 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack44 = $r15.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack46 = $stack44.<org.bytedeco.javacv.ObjectFinder$Settings: double ransacReprojThreshold>;

        $r16 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack45 = $r16.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat mask>;

        $stack49 = staticinvoke <org.bytedeco.opencv.global.opencv_calib3d: org.bytedeco.opencv.opencv_core.Mat findHomography(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,int,double,org.bytedeco.opencv.opencv_core.Mat,int,double)>($stack48, $stack47, 8, $stack46, $stack45, 2000, 0.995);

        $r17 = (org.bytedeco.javacv.ObjectFinder) this;

        $r17.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat H> = $stack49;

        $r18 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack50 = $r18.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat H>;

        $stack51 = virtualinvoke $stack50.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack51 != 0 goto label6;

        $r19 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack52 = $r19.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat mask>;

        $stack53 = staticinvoke <org.bytedeco.opencv.global.opencv_core: int countNonZero(org.bytedeco.opencv.opencv_core.Mat)>($stack52);

        $r20 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack54 = $r20.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.javacv.ObjectFinder$Settings settings>;

        $stack55 = $stack54.<org.bytedeco.javacv.ObjectFinder$Settings: int matchesMin>;

        if $stack53 >= $stack55 goto label7;

     label6:
        return null;

     label7:
        $r21 = (org.bytedeco.javacv.ObjectFinder) this;

        $stack56 = $r21.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.Mat H>;

        $stack57 = virtualinvoke $stack56.<org.bytedeco.opencv.opencv_core.Mat: org.bytedeco.javacpp.indexer.Indexer createIndexer(boolean)>(0);

        $stack58 = virtualinvoke $stack57.<org.bytedeco.javacpp.indexer.Indexer: java.lang.Object array()>();

        i#4 = (double[]) $stack58;

        $stack59 = lengthof srcCorners;

        p1#5 = newarray (double)[$stack59];

        p2#6 = 0;

     label8:
        $stack60 = lengthof srcCorners;

        $stack61 = $stack60 / 2;

        if p2#6 >= $stack61 goto label9;

        $stack62 = 2 * p2#6;

        x = srcCorners[$stack62];

        $stack63 = 2 * p2#6;

        $stack64 = $stack63 + 1;

        y = srcCorners[$stack64];

        $stack65 = i#4[6];

        $stack68 = $stack65 * x;

        $stack66 = i#4[7];

        $stack67 = $stack66 * y;

        $stack70 = $stack68 + $stack67;

        $stack69 = i#4[8];

        $stack71 = $stack70 + $stack69;

        Z = 1.0 / $stack71;

        $stack72 = i#4[0];

        $stack75 = $stack72 * x;

        $stack73 = i#4[1];

        $stack74 = $stack73 * y;

        $stack77 = $stack75 + $stack74;

        $stack76 = i#4[2];

        $stack78 = $stack77 + $stack76;

        X = $stack78 * Z;

        $stack79 = i#4[3];

        $stack82 = $stack79 * x;

        $stack80 = i#4[4];

        $stack81 = $stack80 * y;

        $stack84 = $stack82 + $stack81;

        $stack83 = i#4[5];

        $stack85 = $stack84 + $stack83;

        Y = $stack85 * Z;

        $stack86 = 2 * p2#6;

        p1#5[$stack86] = X;

        $stack87 = 2 * p2#6;

        $stack88 = $stack87 + 1;

        p1#5[$stack88] = Y;

        p2#6 = p2#6 + 1;

        goto label8;

     label9:
        return p1#5;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] args;
        int $stack19, $stack20, $stack78, $stack81, radius, $stack93, $stack97, $stack102, $stack109, $stack111, $stack114, $stack116, $stack119, $stack124, $stack125, $stack128, $stack129, $stack132, $stack135, $stack136, $stack141, $stack142, $stack144, $stack145, $stack30, $stack31, $stack33, $stack34, $stack35, $stack36, $stack40, $stack41, $stack44, $stack45, $stack46, i, j, x1, y1, x2, y2, $stack61;
        java.lang.String objectFilename, sceneFilename, $stack29, $stack197, $stack191, $stack59;
        org.bytedeco.opencv.opencv_core.IplImage object, image, objectColor, correspond;
        java.io.PrintStream $stack24, $stack53;
        java.lang.StringBuilder $stack25, $stack26, $stack27, $stack28, $stack54, $stack57, $stack58, $u0, $u3;
        long start, $stack67, $stack68, $stack72, $stack94, $stack103, $stack127, $stack131, $stack134, $stack138, $stack55, $stack56;
        double[] dst_corners;
        org.bytedeco.javacv.Frame $stack65, $stack70;
        org.bytedeco.opencv.opencv_core.KeyPointVector $stack66, $stack73, $stack90, $stack99;
        byte $stack69;
        org.bytedeco.opencv.opencv_core.Point2f $stack76, $stack79, j#155, x1#156;
        float $stack77, $stack80, $stack82, $stack83, $stack108, $stack110, $stack113, $stack115, $stack117, $stack118;
        org.bytedeco.opencv.opencv_core.Mat $stack85, $stack106, $stack139;
        org.bytedeco.opencv.opencv_core.Scalar $stack86, $stack120, $stack146;
        java.util.ArrayList $stack89, $stack98, $stack60;
        java.lang.Object $stack91, $stack100;
        java.lang.Integer $stack92, $stack101;
        org.bytedeco.opencv.opencv_core.KeyPoint $stack95, $stack104, x2#161;
        double $stack126, $stack130, $stack133, $stack137;
        org.bytedeco.opencv.opencv_core.CvRect $stack42, $stack47;
        org.bytedeco.javacv.ObjectFinder$Settings $u1;
        org.bytedeco.javacv.ObjectFinder $u2;
        org.bytedeco.opencv.opencv_core.Point $u4, $u5, $u6, $u7, $u11;
        org.bytedeco.javacv.CanvasFrame $u8, $u9;
        org.bytedeco.javacv.OpenCVFrameConverter$ToIplImage $u10;
        org.bytedeco.opencv.opencv_core.CvArr $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        org.bytedeco.javacv.OpenCVFrameConverter $r8, $r10;

        args := @parameter0: java.lang.String[];

        $stack19 = lengthof args;

        if $stack19 != 2 goto label01;

        $stack197 = args[0];

        goto label02;

     label01:
        $stack197 = "/usr/local/share/OpenCV/samples/c/box.png";

     label02:
        objectFilename = $stack197;

        $stack20 = lengthof args;

        if $stack20 != 2 goto label03;

        $stack191 = args[1];

        goto label04;

     label03:
        $stack191 = "/usr/local/share/OpenCV/samples/c/box_in_scene.png";

     label04:
        sceneFilename = $stack191;

        object = staticinvoke <org.bytedeco.opencv.global.opencv_imgcodecs: org.bytedeco.opencv.opencv_core.IplImage cvLoadImage(java.lang.String,int)>(objectFilename, 0);

        image = staticinvoke <org.bytedeco.opencv.global.opencv_imgcodecs: org.bytedeco.opencv.opencv_core.IplImage cvLoadImage(java.lang.String,int)>($stack191, 0);

        if object == null goto label05;

        if image != null goto label06;

     label05:
        $stack24 = <java.lang.System: java.io.PrintStream err>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack25 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not load ");

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(objectFilename);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and/or ");

        $stack28 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(sceneFilename);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack24.<java.io.PrintStream: void println(java.lang.String)>($stack29);

        staticinvoke <java.lang.System: void exit(int)>(-1);

     label06:
        $stack30 = virtualinvoke object.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack31 = virtualinvoke object.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        objectColor = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack30, $stack31, 8, 3);

        $r0 = (org.bytedeco.opencv.opencv_core.CvArr) object;

        $r1 = (org.bytedeco.opencv.opencv_core.CvArr) objectColor;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvCvtColor(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r0, $r1, 8);

        $stack33 = virtualinvoke image.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack34 = virtualinvoke object.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack35 = virtualinvoke image.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack36 = $stack34 + $stack35;

        correspond = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack33, $stack36, 8, 1);

        $stack40 = virtualinvoke object.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack41 = virtualinvoke object.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack42 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvRect cvRect(int,int,int,int)>(0, 0, $stack40, $stack41);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetImageROI(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.CvRect)>(correspond, $stack42);

        $r2 = (org.bytedeco.opencv.opencv_core.CvArr) object;

        $r3 = (org.bytedeco.opencv.opencv_core.CvArr) correspond;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvCopy(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r2, $r3);

        $stack44 = virtualinvoke object.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack45 = virtualinvoke correspond.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack46 = virtualinvoke correspond.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack47 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvRect cvRect(int,int,int,int)>(0, $stack44, $stack45, $stack46);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetImageROI(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.CvRect)>(correspond, $stack47);

        $r4 = (org.bytedeco.opencv.opencv_core.CvArr) image;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) correspond;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvCopy(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r4, $r5);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvResetImageROI(org.bytedeco.opencv.opencv_core.IplImage)>(correspond);

        $u1 = new org.bytedeco.javacv.ObjectFinder$Settings;

        specialinvoke $u1.<org.bytedeco.javacv.ObjectFinder$Settings: void <init>()>();

        $u1.<org.bytedeco.javacv.ObjectFinder$Settings: org.bytedeco.opencv.opencv_core.IplImage objectImage> = object;

        $u1.<org.bytedeco.javacv.ObjectFinder$Settings: boolean useFLANN> = 1;

        $u1.<org.bytedeco.javacv.ObjectFinder$Settings: double ransacReprojThreshold> = 5.0;

        $u2 = new org.bytedeco.javacv.ObjectFinder;

        specialinvoke $u2.<org.bytedeco.javacv.ObjectFinder: void <init>(org.bytedeco.javacv.ObjectFinder$Settings)>($u1);

        start = staticinvoke <java.lang.System: long currentTimeMillis()>();

        dst_corners = virtualinvoke $u2.<org.bytedeco.javacv.ObjectFinder: double[] find(org.bytedeco.opencv.opencv_core.IplImage)>(image);

        $stack53 = <java.lang.System: java.io.PrintStream out>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack54 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finding time = ");

        $stack55 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $stack56 = $stack55 - start;

        $stack57 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($stack56);

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack53.<java.io.PrintStream: void println(java.lang.String)>($stack59);

        if dst_corners == null goto label08;

        i = 0;

     label07:
        if i >= 4 goto label08;

        $stack124 = i + 1;

        j = $stack124 % 4;

        $stack125 = 2 * i;

        $stack126 = dst_corners[$stack125];

        $stack127 = staticinvoke <java.lang.Math: long round(double)>($stack126);

        x1 = (int) $stack127;

        $stack128 = 2 * i;

        $stack129 = $stack128 + 1;

        $stack130 = dst_corners[$stack129];

        $stack131 = staticinvoke <java.lang.Math: long round(double)>($stack130);

        y1 = (int) $stack131;

        $stack132 = 2 * j;

        $stack133 = dst_corners[$stack132];

        $stack134 = staticinvoke <java.lang.Math: long round(double)>($stack133);

        x2 = (int) $stack134;

        $stack135 = 2 * j;

        $stack136 = $stack135 + 1;

        $stack137 = dst_corners[$stack136];

        $stack138 = staticinvoke <java.lang.Math: long round(double)>($stack137);

        y2 = (int) $stack138;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) correspond;

        $stack139 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r6);

        $u4 = new org.bytedeco.opencv.opencv_core.Point;

        $stack141 = virtualinvoke object.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack142 = y1 + $stack141;

        specialinvoke $u4.<org.bytedeco.opencv.opencv_core.Point: void <init>(int,int)>(x1, $stack142);

        $u5 = new org.bytedeco.opencv.opencv_core.Point;

        $stack144 = virtualinvoke object.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack145 = y2 + $stack144;

        specialinvoke $u5.<org.bytedeco.opencv.opencv_core.Point: void <init>(int,int)>(x2, $stack145);

        $stack146 = <org.bytedeco.opencv.opencv_core.Scalar: org.bytedeco.opencv.opencv_core.Scalar WHITE>;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void line(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Point,org.bytedeco.opencv.opencv_core.Point,org.bytedeco.opencv.opencv_core.Scalar,int,int,int)>($stack139, $u4, $u5, $stack146, 1, 8, 0);

        i = i + 1;

        goto label07;

     label08:
        i = 0;

     label09:
        $stack60 = $u2.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack61 = virtualinvoke $stack60.<java.util.ArrayList: int size()>();

        if i >= $stack61 goto label10;

        $stack90 = $u2.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints>;

        $stack89 = $u2.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack91 = virtualinvoke $stack89.<java.util.ArrayList: java.lang.Object get(int)>(i);

        $stack92 = (java.lang.Integer) $stack91;

        $stack93 = virtualinvoke $stack92.<java.lang.Integer: int intValue()>();

        $stack94 = (long) $stack93;

        $stack95 = virtualinvoke $stack90.<org.bytedeco.opencv.opencv_core.KeyPointVector: org.bytedeco.opencv.opencv_core.KeyPoint get(long)>($stack94);

        j#155 = virtualinvoke $stack95.<org.bytedeco.opencv.opencv_core.KeyPoint: org.bytedeco.opencv.opencv_core.Point2f pt()>();

        $stack99 = $u2.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector imageKeypoints>;

        $stack98 = $u2.<org.bytedeco.javacv.ObjectFinder: java.util.ArrayList ptpairs>;

        $stack97 = i + 1;

        $stack100 = virtualinvoke $stack98.<java.util.ArrayList: java.lang.Object get(int)>($stack97);

        $stack101 = (java.lang.Integer) $stack100;

        $stack102 = virtualinvoke $stack101.<java.lang.Integer: int intValue()>();

        $stack103 = (long) $stack102;

        $stack104 = virtualinvoke $stack99.<org.bytedeco.opencv.opencv_core.KeyPointVector: org.bytedeco.opencv.opencv_core.KeyPoint get(long)>($stack103);

        x1#156 = virtualinvoke $stack104.<org.bytedeco.opencv.opencv_core.KeyPoint: org.bytedeco.opencv.opencv_core.Point2f pt()>();

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) correspond;

        $stack106 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r7);

        $u6 = new org.bytedeco.opencv.opencv_core.Point;

        $stack108 = virtualinvoke j#155.<org.bytedeco.opencv.opencv_core.Point2f: float x()>();

        $stack109 = staticinvoke <java.lang.Math: int round(float)>($stack108);

        $stack110 = virtualinvoke j#155.<org.bytedeco.opencv.opencv_core.Point2f: float y()>();

        $stack111 = staticinvoke <java.lang.Math: int round(float)>($stack110);

        specialinvoke $u6.<org.bytedeco.opencv.opencv_core.Point: void <init>(int,int)>($stack109, $stack111);

        $u7 = new org.bytedeco.opencv.opencv_core.Point;

        $stack113 = virtualinvoke x1#156.<org.bytedeco.opencv.opencv_core.Point2f: float x()>();

        $stack114 = staticinvoke <java.lang.Math: int round(float)>($stack113);

        $stack115 = virtualinvoke x1#156.<org.bytedeco.opencv.opencv_core.Point2f: float y()>();

        $stack116 = virtualinvoke object.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack117 = (float) $stack116;

        $stack118 = $stack115 + $stack117;

        $stack119 = staticinvoke <java.lang.Math: int round(float)>($stack118);

        specialinvoke $u7.<org.bytedeco.opencv.opencv_core.Point: void <init>(int,int)>($stack114, $stack119);

        $stack120 = <org.bytedeco.opencv.opencv_core.Scalar: org.bytedeco.opencv.opencv_core.Scalar WHITE>;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void line(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Point,org.bytedeco.opencv.opencv_core.Point,org.bytedeco.opencv.opencv_core.Scalar,int,int,int)>($stack106, $u6, $u7, $stack120, 1, 8, 0);

        i = i + 2;

        goto label09;

     label10:
        $u8 = new org.bytedeco.javacv.CanvasFrame;

        specialinvoke $u8.<org.bytedeco.javacv.CanvasFrame: void <init>(java.lang.String)>("Object");

        $u9 = new org.bytedeco.javacv.CanvasFrame;

        specialinvoke $u9.<org.bytedeco.javacv.CanvasFrame: void <init>(java.lang.String)>("Object Correspond");

        $u10 = new org.bytedeco.javacv.OpenCVFrameConverter$ToIplImage;

        specialinvoke $u10.<org.bytedeco.javacv.OpenCVFrameConverter$ToIplImage: void <init>()>();

        $r8 = (org.bytedeco.javacv.OpenCVFrameConverter) $u10;

        $stack65 = virtualinvoke $r8.<org.bytedeco.javacv.OpenCVFrameConverter: org.bytedeco.javacv.Frame convert(org.bytedeco.opencv.opencv_core.IplImage)>(correspond);

        virtualinvoke $u9.<org.bytedeco.javacv.CanvasFrame: void showImage(org.bytedeco.javacv.Frame)>($stack65);

        y1 = 0;

     label11:
        $stack67 = (long) y1;

        $stack66 = $u2.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints>;

        $stack68 = virtualinvoke $stack66.<org.bytedeco.opencv.opencv_core.KeyPointVector: long size()>();

        $stack69 = $stack67 cmp $stack68;

        if $stack69 >= 0 goto label12;

        $stack73 = $u2.<org.bytedeco.javacv.ObjectFinder: org.bytedeco.opencv.opencv_core.KeyPointVector objectKeypoints>;

        $stack72 = (long) y1;

        x2#161 = virtualinvoke $stack73.<org.bytedeco.opencv.opencv_core.KeyPointVector: org.bytedeco.opencv.opencv_core.KeyPoint get(long)>($stack72);

        $u11 = new org.bytedeco.opencv.opencv_core.Point;

        $stack76 = virtualinvoke x2#161.<org.bytedeco.opencv.opencv_core.KeyPoint: org.bytedeco.opencv.opencv_core.Point2f pt()>();

        $stack77 = virtualinvoke $stack76.<org.bytedeco.opencv.opencv_core.Point2f: float x()>();

        $stack78 = staticinvoke <java.lang.Math: int round(float)>($stack77);

        $stack79 = virtualinvoke x2#161.<org.bytedeco.opencv.opencv_core.KeyPoint: org.bytedeco.opencv.opencv_core.Point2f pt()>();

        $stack80 = virtualinvoke $stack79.<org.bytedeco.opencv.opencv_core.Point2f: float y()>();

        $stack81 = staticinvoke <java.lang.Math: int round(float)>($stack80);

        specialinvoke $u11.<org.bytedeco.opencv.opencv_core.Point: void <init>(int,int)>($stack78, $stack81);

        $stack82 = virtualinvoke x2#161.<org.bytedeco.opencv.opencv_core.KeyPoint: float size()>();

        $stack83 = $stack82 / 2.0F;

        radius = staticinvoke <java.lang.Math: int round(float)>($stack83);

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) objectColor;

        $stack85 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r9);

        $stack86 = <org.bytedeco.opencv.opencv_core.Scalar: org.bytedeco.opencv.opencv_core.Scalar RED>;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void circle(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Point,int,org.bytedeco.opencv.opencv_core.Scalar,int,int,int)>($stack85, $u11, radius, $stack86, 1, 8, 0);

        y1 = y1 + 1;

        goto label11;

     label12:
        $r10 = (org.bytedeco.javacv.OpenCVFrameConverter) $u10;

        $stack70 = virtualinvoke $r10.<org.bytedeco.javacv.OpenCVFrameConverter: org.bytedeco.javacv.Frame convert(org.bytedeco.opencv.opencv_core.IplImage)>(objectColor);

        virtualinvoke $u8.<org.bytedeco.javacv.CanvasFrame: void showImage(org.bytedeco.javacv.Frame)>($stack70);

        virtualinvoke $u8.<org.bytedeco.javacv.CanvasFrame: java.awt.event.KeyEvent waitKey()>();

        virtualinvoke $u8.<org.bytedeco.javacv.CanvasFrame: void dispose()>();

        virtualinvoke $u9.<org.bytedeco.javacv.CanvasFrame: void dispose()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $stack2, $stack4;
        boolean $stack3, $stack16;
        java.lang.String $stack5;
        java.util.logging.Logger $stack6;
        int[] $stack7, $stack11, $stack8;
        int $stack12, $stack13, $stack14, i, $stack9, j;

        $stack2 = class "Lorg/bytedeco/javacv/ObjectFinder;";

        $stack3 = virtualinvoke $stack2.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack3 != 0 goto label1;

        $stack16 = 1;

        goto label2;

     label1:
        $stack16 = 0;

     label2:
        <org.bytedeco.javacv.ObjectFinder: boolean $assertionsDisabled> = $stack16;

        $stack4 = class "Lorg/bytedeco/javacv/ObjectFinder;";

        $stack5 = virtualinvoke $stack4.<java.lang.Class: java.lang.String getName()>();

        $stack6 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($stack5);

        <org.bytedeco.javacv.ObjectFinder: java.util.logging.Logger logger> = $stack6;

        $stack7 = newarray (int)[256];

        <org.bytedeco.javacv.ObjectFinder: int[] bits> = $stack7;

        i = 0;

     label3:
        $stack8 = <org.bytedeco.javacv.ObjectFinder: int[] bits>;

        $stack9 = lengthof $stack8;

        if i >= $stack9 goto label6;

        j = i;

     label4:
        if j == 0 goto label5;

        $stack11 = <org.bytedeco.javacv.ObjectFinder: int[] bits>;

        $stack13 = $stack11[i];

        $stack12 = j & 1;

        $stack14 = $stack13 + $stack12;

        $stack11[i] = $stack14;

        j = j >> 1;

        goto label4;

     label5:
        i = i + 1;

        goto label3;

     label6:
        return;
    }
}
