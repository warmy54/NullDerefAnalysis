class OpenCVFrameConverter$1 extends org.bytedeco.javacpp.BytePointer
{
    final org.opencv.core.Mat val$mat;
    final org.bytedeco.javacv.OpenCVFrameConverter this$0;

    void <init>(org.bytedeco.javacv.OpenCVFrameConverter, org.opencv.core.Mat)
    {
        OpenCVFrameConverter$1 this;
        org.bytedeco.javacv.OpenCVFrameConverter this$0;
        org.opencv.core.Mat l2, $stack3;
        long $stack4;
        org.bytedeco.javacv.OpenCVFrameConverter$1 $r0, $r1, $r2, $r3;

        this := @this: OpenCVFrameConverter$1;

        this$0 := @parameter0: org.bytedeco.javacv.OpenCVFrameConverter;

        l2 := @parameter1: org.opencv.core.Mat;

        $r0 = (org.bytedeco.javacv.OpenCVFrameConverter$1) this;

        $r0.<org.bytedeco.javacv.OpenCVFrameConverter$1: org.bytedeco.javacv.OpenCVFrameConverter this$0> = this$0;

        $r1 = (org.bytedeco.javacv.OpenCVFrameConverter$1) this;

        $r1.<org.bytedeco.javacv.OpenCVFrameConverter$1: org.opencv.core.Mat val$mat> = l2;

        specialinvoke this.<org.bytedeco.javacpp.BytePointer: void <init>()>();

        $r2 = (org.bytedeco.javacv.OpenCVFrameConverter$1) this;

        $stack3 = $r2.<org.bytedeco.javacv.OpenCVFrameConverter$1: org.opencv.core.Mat val$mat>;

        $stack4 = virtualinvoke $stack3.<org.opencv.core.Mat: long dataAddr()>();

        $r3 = (org.bytedeco.javacv.OpenCVFrameConverter$1) this;

        $r3.<org.bytedeco.javacv.OpenCVFrameConverter$1: long address> = $stack4;

        return;
    }
}
