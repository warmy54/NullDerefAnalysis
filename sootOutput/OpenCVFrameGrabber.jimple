public class OpenCVFrameGrabber extends org.bytedeco.javacv.FrameGrabber
{
    private static org.bytedeco.javacv.FrameGrabber$Exception loadingException;
    private int deviceNumber;
    private java.lang.String filename;
    private int apiPreference;
    private org.bytedeco.opencv.opencv_videoio.VideoCapture capture;
    private org.bytedeco.opencv.opencv_core.Mat returnMatrix;
    private final org.bytedeco.javacv.OpenCVFrameConverter converter;
    private final org.bytedeco.opencv.opencv_core.Mat mat;

    public static java.lang.String[] getDeviceDescriptions() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        java.lang.UnsupportedOperationException $stack0;

        staticinvoke <org.bytedeco.javacv.OpenCVFrameGrabber: void tryLoad()>();

        $stack0 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Device enumeration not support by OpenCV.");

        throw $stack0;
    }

    public static org.bytedeco.javacv.OpenCVFrameGrabber createDefault(java.io.File) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        org.bytedeco.javacv.OpenCVFrameGrabber $stack1;
        java.io.File deviceFile;

        deviceFile := @parameter0: java.io.File;

        $stack1 = new org.bytedeco.javacv.OpenCVFrameGrabber;

        specialinvoke $stack1.<org.bytedeco.javacv.OpenCVFrameGrabber: void <init>(java.io.File)>(deviceFile);

        return $stack1;
    }

    public static org.bytedeco.javacv.OpenCVFrameGrabber createDefault(java.lang.String) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        org.bytedeco.javacv.OpenCVFrameGrabber $stack1;
        java.lang.String devicePath;

        devicePath := @parameter0: java.lang.String;

        $stack1 = new org.bytedeco.javacv.OpenCVFrameGrabber;

        specialinvoke $stack1.<org.bytedeco.javacv.OpenCVFrameGrabber: void <init>(java.lang.String)>(devicePath);

        return $stack1;
    }

    public static org.bytedeco.javacv.OpenCVFrameGrabber createDefault(int) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        org.bytedeco.javacv.OpenCVFrameGrabber $stack1;
        int deviceNumber;

        deviceNumber := @parameter0: int;

        $stack1 = new org.bytedeco.javacv.OpenCVFrameGrabber;

        specialinvoke $stack1.<org.bytedeco.javacv.OpenCVFrameGrabber: void <init>(int)>(deviceNumber);

        return $stack1;
    }

    public static void tryLoad() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        org.bytedeco.javacv.FrameGrabber$Exception $stack1, $stack3, $u1;
        java.lang.Throwable $stack4, $r0, $r1;
        java.lang.StringBuilder $stack7, $stack8, $u0;
        java.lang.String $stack9;

        $stack1 = <org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.FrameGrabber$Exception loadingException>;

        if $stack1 == null goto label1;

        $stack3 = <org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.FrameGrabber$Exception loadingException>;

        $r0 = (java.lang.Throwable) $stack3;

        throw $r0;

     label1:
        staticinvoke <org.bytedeco.javacpp.Loader: java.lang.String load(java.lang.Class)>(class "Lorg/bytedeco/opencv/global/opencv_highgui;");

     label2:
        goto label4;

     label3:
        $stack4 := @caughtexception;

        $u1 = new org.bytedeco.javacv.FrameGrabber$Exception;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load ");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(class "Lorg/bytedeco/javacv/OpenCVFrameGrabber;");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack9, $stack4);

        <org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.FrameGrabber$Exception loadingException> = $u1;

        $r1 = (java.lang.Throwable) $u1;

        throw $r1;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public void <init>(int)
    {
        OpenCVFrameGrabber this;
        int deviceNumber;
        org.bytedeco.javacv.OpenCVFrameConverter$ToMat $u0;
        org.bytedeco.opencv.opencv_core.Mat $u1;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8;
        org.bytedeco.javacv.OpenCVFrameConverter $r6;

        this := @this: OpenCVFrameGrabber;

        deviceNumber := @parameter0: int;

        specialinvoke this.<org.bytedeco.javacv.FrameGrabber: void <init>()>();

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: int deviceNumber> = 0;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String filename> = null;

        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: int apiPreference> = 0;

        $r3 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r3.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture> = null;

        $r4 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r4.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix> = null;

        $u0 = new org.bytedeco.javacv.OpenCVFrameConverter$ToMat;

        specialinvoke $u0.<org.bytedeco.javacv.OpenCVFrameConverter$ToMat: void <init>()>();

        $r5 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r6 = (org.bytedeco.javacv.OpenCVFrameConverter) $u0;

        $r5.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.OpenCVFrameConverter converter> = $r6;

        $u1 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u1.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $r7 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r7.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat> = $u1;

        $r8 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r8.<org.bytedeco.javacv.OpenCVFrameGrabber: int deviceNumber> = deviceNumber;

        return;
    }

    public void <init>(java.io.File)
    {
        OpenCVFrameGrabber this;
        java.io.File file;
        java.lang.String $stack2;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0;

        this := @this: OpenCVFrameGrabber;

        file := @parameter0: java.io.File;

        $stack2 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>();

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        specialinvoke $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: void <init>(java.lang.String)>($stack2);

        return;
    }

    public void <init>(java.io.File, int)
    {
        OpenCVFrameGrabber this;
        java.io.File file;
        java.lang.String $stack3;
        int apiPreference;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0;

        this := @this: OpenCVFrameGrabber;

        file := @parameter0: java.io.File;

        apiPreference := @parameter1: int;

        $stack3 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>();

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        specialinvoke $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: void <init>(java.lang.String,int)>($stack3, apiPreference);

        return;
    }

    public void <init>(java.lang.String)
    {
        OpenCVFrameGrabber this;
        java.lang.String filename;
        org.bytedeco.javacv.OpenCVFrameConverter$ToMat $u0;
        org.bytedeco.opencv.opencv_core.Mat $u1;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8;
        org.bytedeco.javacv.OpenCVFrameConverter $r6;

        this := @this: OpenCVFrameGrabber;

        filename := @parameter0: java.lang.String;

        specialinvoke this.<org.bytedeco.javacv.FrameGrabber: void <init>()>();

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: int deviceNumber> = 0;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String filename> = null;

        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: int apiPreference> = 0;

        $r3 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r3.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture> = null;

        $r4 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r4.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix> = null;

        $u0 = new org.bytedeco.javacv.OpenCVFrameConverter$ToMat;

        specialinvoke $u0.<org.bytedeco.javacv.OpenCVFrameConverter$ToMat: void <init>()>();

        $r5 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r6 = (org.bytedeco.javacv.OpenCVFrameConverter) $u0;

        $r5.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.OpenCVFrameConverter converter> = $r6;

        $u1 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u1.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $r7 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r7.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat> = $u1;

        $r8 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r8.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String filename> = filename;

        return;
    }

    public void <init>(java.lang.String, int)
    {
        OpenCVFrameGrabber this;
        java.lang.String filename;
        int apiPreference;
        org.bytedeco.javacv.OpenCVFrameConverter$ToMat $u0;
        org.bytedeco.opencv.opencv_core.Mat $u1;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9;
        org.bytedeco.javacv.OpenCVFrameConverter $r6;

        this := @this: OpenCVFrameGrabber;

        filename := @parameter0: java.lang.String;

        apiPreference := @parameter1: int;

        specialinvoke this.<org.bytedeco.javacv.FrameGrabber: void <init>()>();

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: int deviceNumber> = 0;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String filename> = null;

        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: int apiPreference> = 0;

        $r3 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r3.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture> = null;

        $r4 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r4.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix> = null;

        $u0 = new org.bytedeco.javacv.OpenCVFrameConverter$ToMat;

        specialinvoke $u0.<org.bytedeco.javacv.OpenCVFrameConverter$ToMat: void <init>()>();

        $r5 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r6 = (org.bytedeco.javacv.OpenCVFrameConverter) $u0;

        $r5.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.OpenCVFrameConverter converter> = $r6;

        $u1 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u1.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $r7 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r7.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat> = $u1;

        $r8 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r8.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String filename> = filename;

        $r9 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r9.<org.bytedeco.javacv.OpenCVFrameGrabber: int apiPreference> = apiPreference;

        return;
    }

    public void release() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        OpenCVFrameGrabber this;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        virtualinvoke $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: void stop()>();

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        OpenCVFrameGrabber this;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0;

        this := @this: OpenCVFrameGrabber;

        specialinvoke this.<java.lang.Object: void finalize()>();

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        virtualinvoke $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: void release()>();

        return;
    }

    public double getGamma()
    {
        OpenCVFrameGrabber this;
        double $stack1, $stack3;
        byte $stack2;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: double gamma>;

        $stack2 = $stack1 cmpl 0.0;

        if $stack2 != 0 goto label1;

        return 2.2;

     label1:
        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack3 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: double gamma>;

        return $stack3;
    }

    public java.lang.String getFormat()
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack2, $stack3;
        double $stack4;
        int fourcc, $stack7, $stack10, $stack11, $stack14, $stack15, $stack18, $stack19;
        java.lang.StringBuilder $stack6, $stack9, $stack13, $stack17, $stack21, $u0;
        char $stack8, $stack12, $stack16, $stack20;
        java.lang.String $stack22, $stack23;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack2 != null goto label1;

        $stack23 = specialinvoke this.<org.bytedeco.javacv.FrameGrabber: java.lang.String getFormat()>();

        return $stack23;

     label1:
        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack3 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack4 = virtualinvoke $stack3.<org.bytedeco.opencv.opencv_videoio.VideoCapture: double get(int)>(6);

        fourcc = (int) $stack4;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack6 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $stack7 = fourcc & 255;

        $stack8 = (char) $stack7;

        $stack9 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack8);

        $stack10 = fourcc >> 8;

        $stack11 = $stack10 & 255;

        $stack12 = (char) $stack11;

        $stack13 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack12);

        $stack14 = fourcc >> 16;

        $stack15 = $stack14 & 255;

        $stack16 = (char) $stack15;

        $stack17 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack16);

        $stack18 = fourcc >> 24;

        $stack19 = $stack18 & 255;

        $stack20 = (char) $stack19;

        $stack21 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack22;
    }

    public int getImageWidth()
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_core.Mat $stack1, $stack7;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack2, $stack3;
        double $stack4;
        int $stack8, $stack5;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2, $r3;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix>;

        if $stack1 == null goto label1;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack7 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix>;

        $stack8 = virtualinvoke $stack7.<org.bytedeco.opencv.opencv_core.Mat: int cols()>();

        return $stack8;

     label1:
        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack2 != null goto label2;

        $stack5 = specialinvoke this.<org.bytedeco.javacv.FrameGrabber: int getImageWidth()>();

        goto label3;

     label2:
        $r3 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack3 = $r3.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack4 = virtualinvoke $stack3.<org.bytedeco.opencv.opencv_videoio.VideoCapture: double get(int)>(3);

        $stack5 = (int) $stack4;

     label3:
        return $stack5;
    }

    public int getImageHeight()
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_core.Mat $stack1, $stack7;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack2, $stack3;
        double $stack4;
        int $stack8, $stack5;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2, $r3;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix>;

        if $stack1 == null goto label1;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack7 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix>;

        $stack8 = virtualinvoke $stack7.<org.bytedeco.opencv.opencv_core.Mat: int rows()>();

        return $stack8;

     label1:
        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack2 != null goto label2;

        $stack5 = specialinvoke this.<org.bytedeco.javacv.FrameGrabber: int getImageHeight()>();

        goto label3;

     label2:
        $r3 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack3 = $r3.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack4 = virtualinvoke $stack3.<org.bytedeco.opencv.opencv_videoio.VideoCapture: double get(int)>(4);

        $stack5 = (int) $stack4;

     label3:
        return $stack5;
    }

    public int getPixelFormat()
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack1, $stack2;
        double $stack3;
        int $stack4;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack1 != null goto label1;

        $stack4 = specialinvoke this.<org.bytedeco.javacv.FrameGrabber: int getPixelFormat()>();

        goto label2;

     label1:
        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack3 = virtualinvoke $stack2.<org.bytedeco.opencv.opencv_videoio.VideoCapture: double get(int)>(16);

        $stack4 = (int) $stack3;

     label2:
        return $stack4;
    }

    public double getFrameRate()
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack1, $stack2;
        double $stack3, $stack5;
        int $stack4;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack1 != null goto label1;

        $stack5 = specialinvoke this.<org.bytedeco.javacv.FrameGrabber: double getFrameRate()>();

        goto label2;

     label1:
        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack3 = virtualinvoke $stack2.<org.bytedeco.opencv.opencv_videoio.VideoCapture: double get(int)>(5);

        $stack4 = (int) $stack3;

        $stack5 = (double) $stack4;

     label2:
        return $stack5;
    }

    public void setImageMode(org.bytedeco.javacv.FrameGrabber$ImageMode)
    {
        org.bytedeco.javacv.FrameGrabber$ImageMode imageMode, $stack2;
        OpenCVFrameGrabber this;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;

        this := @this: OpenCVFrameGrabber;

        imageMode := @parameter0: org.bytedeco.javacv.FrameGrabber$ImageMode;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.FrameGrabber$ImageMode imageMode>;

        if imageMode == $stack2 goto label1;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix> = null;

     label1:
        specialinvoke this.<org.bytedeco.javacv.FrameGrabber: void setImageMode(org.bytedeco.javacv.FrameGrabber$ImageMode)>(imageMode);

        return;
    }

    public int getFrameNumber()
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack1, $stack2;
        double $stack3;
        int $stack4;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack1 != null goto label1;

        $stack4 = specialinvoke this.<org.bytedeco.javacv.FrameGrabber: int getFrameNumber()>();

        goto label2;

     label1:
        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack3 = virtualinvoke $stack2.<org.bytedeco.opencv.opencv_videoio.VideoCapture: double get(int)>(1);

        $stack4 = (int) $stack3;

     label2:
        return $stack4;
    }

    public void setFrameNumber(int) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack2, $stack4;
        int frameNumber;
        double $stack3;
        boolean $stack5;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $u0;
        java.lang.String $stack11;
        org.bytedeco.javacv.FrameGrabber$Exception $u1;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;
        java.lang.Throwable $r2;

        this := @this: OpenCVFrameGrabber;

        frameNumber := @parameter0: int;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack2 != null goto label1;

        specialinvoke this.<org.bytedeco.javacv.FrameGrabber: void setFrameNumber(int)>(frameNumber);

        goto label2;

     label1:
        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack4 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack3 = (double) frameNumber;

        $stack5 = virtualinvoke $stack4.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(1, $stack3);

        if $stack5 != 0 goto label2;

        $u1 = new org.bytedeco.javacv.FrameGrabber$Exception;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set() Error: Could not set CAP_PROP_POS_FRAMES to ");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(frameNumber);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String)>($stack11);

        $r2 = (java.lang.Throwable) $u1;

        throw $r2;

     label2:
        return;
    }

    public long getTimestamp()
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack1, $stack2;
        double $stack3, $stack4;
        long $stack5;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack1 != null goto label1;

        $stack5 = specialinvoke this.<org.bytedeco.javacv.FrameGrabber: long getTimestamp()>();

        goto label2;

     label1:
        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack3 = virtualinvoke $stack2.<org.bytedeco.opencv.opencv_videoio.VideoCapture: double get(int)>(0);

        $stack4 = $stack3 * 1000.0;

        $stack5 = staticinvoke <java.lang.Math: long round(double)>($stack4);

     label2:
        return $stack5;
    }

    public void setTimestamp(long) throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack3, $stack6;
        long timestamp;
        double $stack4, $stack5, $stack11, $stack12;
        boolean $stack7;
        java.lang.StringBuilder $stack10, $stack13, $stack14, $u0;
        java.lang.String $stack15;
        org.bytedeco.javacv.FrameGrabber$Exception $u1;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;
        java.lang.Throwable $r2;

        this := @this: OpenCVFrameGrabber;

        timestamp := @parameter0: long;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack3 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack3 != null goto label1;

        specialinvoke this.<org.bytedeco.javacv.FrameGrabber: void setTimestamp(long)>(timestamp);

        goto label2;

     label1:
        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack6 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack4 = (double) timestamp;

        $stack5 = $stack4 / 1000.0;

        $stack7 = virtualinvoke $stack6.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(0, $stack5);

        if $stack7 != 0 goto label2;

        $u1 = new org.bytedeco.javacv.FrameGrabber$Exception;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set() Error: Could not set CAP_PROP_POS_MSEC to ");

        $stack11 = (double) timestamp;

        $stack12 = $stack11 / 1000.0;

        $stack13 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String)>($stack15);

        $r2 = (java.lang.Throwable) $u1;

        throw $r2;

     label2:
        return;
    }

    public int getLengthInFrames()
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack1, $stack2;
        double $stack3;
        int $stack4;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack1 != null goto label1;

        $stack4 = specialinvoke this.<org.bytedeco.javacv.FrameGrabber: int getLengthInFrames()>();

        goto label2;

     label1:
        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack3 = virtualinvoke $stack2.<org.bytedeco.opencv.opencv_videoio.VideoCapture: double get(int)>(7);

        $stack4 = (int) $stack3;

     label2:
        return $stack4;
    }

    public long getLengthInTime()
    {
        OpenCVFrameGrabber this;
        int $stack1;
        long $stack2, $stack3, $stack7;
        double $stack4, $stack5, $stack6;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: int getLengthInFrames()>();

        $stack2 = (long) $stack1;

        $stack3 = $stack2 * 1000000L;

        $stack4 = (double) $stack3;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack5 = virtualinvoke $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: double getFrameRate()>();

        $stack6 = $stack4 / $stack5;

        $stack7 = staticinvoke <java.lang.Math: long round(double)>($stack6);

        return $stack7;
    }

    public double getOption(int)
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack2, $stack8;
        int propId;
        java.util.Map $stack3;
        java.lang.String $stack4, $stack6;
        java.lang.Object $stack5;
        double $stack7, $stack9;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2;

        this := @this: OpenCVFrameGrabber;

        propId := @parameter0: int;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack2 == null goto label1;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack8 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack9 = virtualinvoke $stack8.<org.bytedeco.opencv.opencv_videoio.VideoCapture: double get(int)>(propId);

        return $stack9;

     label1:
        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack3 = $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: java.util.Map options>;

        $stack4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(propId);

        $stack5 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack4);

        $stack6 = (java.lang.String) $stack5;

        $stack7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($stack6);

        return $stack7;
    }

    public void setOption(int, double)
    {
        OpenCVFrameGrabber this;
        int propId;
        java.util.Map $stack4;
        java.lang.String $stack5, $stack6;
        double value;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack8, $stack9;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2;

        this := @this: OpenCVFrameGrabber;

        propId := @parameter0: int;

        value := @parameter1: double;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack4 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: java.util.Map options>;

        $stack5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(propId);

        $stack6 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(value);

        interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack5, $stack6);

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack8 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack8 == null goto label1;

        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack9 = $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        virtualinvoke $stack9.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(propId, value);

     label1:
        return;
    }

    public void start() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        OpenCVFrameGrabber this;
        java.lang.String $stack5, $stack35, $stack38, $stack73, $stack76, $stack77, $stack78, $stack80, $stack82, $stack84, $stack91, $stack98, $stack101, $stack8;
        int $stack7, $stack13, $stack21, $stack36, $stack45, $stack54, $stack60, $stack64, $stack69, $stack74, $stack88, $stack92, $stack96, $stack100, $stack9, $stack10, cc1#32;
        org.bytedeco.javacv.FrameGrabber$ImageMode $stack14, $stack15;
        java.util.Map $stack16;
        java.util.Set $stack17;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack22, $stack25, $stack29, $stack33, $stack42, $stack47, $stack51, $stack56, $stack62, $stack66, $stack71, $stack86, $u0, $u1, $u2;
        boolean $stack23, $stack24, $stack26, $stack30, $stack57, $stack67, $stack19;
        java.lang.Object $stack32, $stack34, $stack37;
        double $stack39, $stack46, $stack50, $stack55, $stack61, $stack65, $stack70, $stack89, $stack11;
        char $stack79, $stack81, $stack83, $stack85;
        byte cc2, cc3, cc0, cc1, $stack12;
        java.lang.InterruptedException $stack102;
        java.lang.Thread $stack103;
        java.util.Iterator cc0#25;
        java.util.Map$Entry cc1#30;
        org.bytedeco.opencv.opencv_core.Mat $u3;
        org.bytedeco.javacv.FrameGrabber$Exception $u4, $u5;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r43;
        java.lang.Throwable $r41, $r44;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack5 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String filename>;

        if $stack5 == null goto label02;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack91 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String filename>;

        $stack92 = virtualinvoke $stack91.<java.lang.String: int length()>();

        if $stack92 <= 0 goto label02;

        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack96 = $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: int apiPreference>;

        if $stack96 <= 0 goto label01;

        $u0 = new org.bytedeco.opencv.opencv_videoio.VideoCapture;

        $r3 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack101 = $r3.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String filename>;

        $r4 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack100 = $r4.<org.bytedeco.javacv.OpenCVFrameGrabber: int apiPreference>;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_videoio.VideoCapture: void <init>(java.lang.String,int)>($stack101, $stack100);

        $r5 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r5.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture> = $u0;

        goto label03;

     label01:
        $u1 = new org.bytedeco.opencv.opencv_videoio.VideoCapture;

        $r6 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack98 = $r6.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String filename>;

        specialinvoke $u1.<org.bytedeco.opencv.opencv_videoio.VideoCapture: void <init>(java.lang.String)>($stack98);

        $r7 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r7.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture> = $u1;

        goto label03;

     label02:
        $u2 = new org.bytedeco.opencv.opencv_videoio.VideoCapture;

        $r8 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack7 = $r8.<org.bytedeco.javacv.OpenCVFrameGrabber: int deviceNumber>;

        specialinvoke $u2.<org.bytedeco.opencv.opencv_videoio.VideoCapture: void <init>(int)>($stack7);

        $r9 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r9.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture> = $u2;

     label03:
        $r10 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack8 = $r10.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String format>;

        if $stack8 == null goto label04;

        $r11 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack73 = $r11.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String format>;

        $stack74 = virtualinvoke $stack73.<java.lang.String: int length()>();

        if $stack74 < 4 goto label04;

        $r12 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack76 = $r12.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String format>;

        $stack77 = virtualinvoke $stack76.<java.lang.String: java.lang.String toUpperCase()>();

        $r13 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r13.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String format> = $stack77;

        $r14 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack78 = $r14.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String format>;

        $stack79 = virtualinvoke $stack78.<java.lang.String: char charAt(int)>(0);

        cc0 = (byte) $stack79;

        $r15 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack80 = $r15.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String format>;

        $stack81 = virtualinvoke $stack80.<java.lang.String: char charAt(int)>(1);

        cc1 = (byte) $stack81;

        $r16 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack82 = $r16.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String format>;

        $stack83 = virtualinvoke $stack82.<java.lang.String: char charAt(int)>(2);

        cc2 = (byte) $stack83;

        $r17 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack84 = $r17.<org.bytedeco.javacv.OpenCVFrameGrabber: java.lang.String format>;

        $stack85 = virtualinvoke $stack84.<java.lang.String: char charAt(int)>(3);

        cc3 = (byte) $stack85;

        $r18 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack86 = $r18.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack88 = staticinvoke <org.bytedeco.opencv.opencv_videoio.VideoWriter: int fourcc(byte,byte,byte,byte)>(cc0, cc1, cc2, cc3);

        $stack89 = (double) $stack88;

        virtualinvoke $stack86.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(6, $stack89);

     label04:
        $r19 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack9 = $r19.<org.bytedeco.javacv.OpenCVFrameGrabber: int imageWidth>;

        if $stack9 <= 0 goto label05;

        $r20 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack66 = $r20.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $r21 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack64 = $r21.<org.bytedeco.javacv.OpenCVFrameGrabber: int imageWidth>;

        $stack65 = (double) $stack64;

        $stack67 = virtualinvoke $stack66.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(3, $stack65);

        if $stack67 != 0 goto label05;

        $r22 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack71 = $r22.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $r23 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack69 = $r23.<org.bytedeco.javacv.OpenCVFrameGrabber: int imageWidth>;

        $stack70 = (double) $stack69;

        virtualinvoke $stack71.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(3, $stack70);

     label05:
        $r24 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack10 = $r24.<org.bytedeco.javacv.OpenCVFrameGrabber: int imageHeight>;

        if $stack10 <= 0 goto label06;

        $r25 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack56 = $r25.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $r26 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack54 = $r26.<org.bytedeco.javacv.OpenCVFrameGrabber: int imageHeight>;

        $stack55 = (double) $stack54;

        $stack57 = virtualinvoke $stack56.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(4, $stack55);

        if $stack57 != 0 goto label06;

        $r27 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack62 = $r27.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $r28 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack60 = $r28.<org.bytedeco.javacv.OpenCVFrameGrabber: int imageHeight>;

        $stack61 = (double) $stack60;

        virtualinvoke $stack62.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(4, $stack61);

     label06:
        $r29 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack11 = $r29.<org.bytedeco.javacv.OpenCVFrameGrabber: double frameRate>;

        $stack12 = $stack11 cmpl 0.0;

        if $stack12 <= 0 goto label07;

        $r30 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack51 = $r30.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $r31 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack50 = $r31.<org.bytedeco.javacv.OpenCVFrameGrabber: double frameRate>;

        virtualinvoke $stack51.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(5, $stack50);

     label07:
        $r32 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack13 = $r32.<org.bytedeco.javacv.OpenCVFrameGrabber: int bpp>;

        if $stack13 <= 0 goto label08;

        $r33 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack47 = $r33.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $r34 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack45 = $r34.<org.bytedeco.javacv.OpenCVFrameGrabber: int bpp>;

        $stack46 = (double) $stack45;

        virtualinvoke $stack47.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(8, $stack46);

     label08:
        $r35 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack15 = $r35.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.FrameGrabber$ImageMode imageMode>;

        $stack14 = <org.bytedeco.javacv.FrameGrabber$ImageMode: org.bytedeco.javacv.FrameGrabber$ImageMode RAW>;

        if $stack15 != $stack14 goto label09;

        $r36 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack42 = $r36.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        virtualinvoke $stack42.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>(16, 0.0);

     label09:
        $r37 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack16 = $r37.<org.bytedeco.javacv.OpenCVFrameGrabber: java.util.Map options>;

        $stack17 = interfaceinvoke $stack16.<java.util.Map: java.util.Set entrySet()>();

        cc0#25 = interfaceinvoke $stack17.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $stack19 = interfaceinvoke cc0#25.<java.util.Iterator: boolean hasNext()>();

        if $stack19 == 0 goto label11;

        $stack32 = interfaceinvoke cc0#25.<java.util.Iterator: java.lang.Object next()>();

        cc1#30 = (java.util.Map$Entry) $stack32;

        $r38 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack33 = $r38.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack34 = interfaceinvoke cc1#30.<java.util.Map$Entry: java.lang.Object getKey()>();

        $stack35 = (java.lang.String) $stack34;

        $stack36 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($stack35);

        $stack37 = interfaceinvoke cc1#30.<java.util.Map$Entry: java.lang.Object getValue()>();

        $stack38 = (java.lang.String) $stack37;

        $stack39 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($stack38);

        virtualinvoke $stack33.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean set(int,double)>($stack36, $stack39);

        goto label10;

     label11:
        $u3 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u3.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

     label12:
        cc1#32 = 0;

     label13:
        $stack21 = cc1#32;

        cc1#32 = cc1#32 + 1;

        if $stack21 >= 100 goto label14;

        $r39 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack29 = $r39.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack30 = virtualinvoke $stack29.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean read(org.bytedeco.opencv.opencv_core.Mat)>($u3);

        if $stack30 != 0 goto label14;

        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

        goto label13;

     label14:
        goto label16;

     label15:
        $stack102 := @caughtexception;

        $stack103 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $stack103.<java.lang.Thread: void interrupt()>();

     label16:
        $r40 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack22 = $r40.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack23 = virtualinvoke $stack22.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean read(org.bytedeco.opencv.opencv_core.Mat)>($u3);

        if $stack23 != 0 goto label17;

        $u4 = new org.bytedeco.javacv.FrameGrabber$Exception;

        specialinvoke $u4.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String)>("read() Error: Could not read frame in start().");

        $r41 = (java.lang.Throwable) $u4;

        throw $r41;

     label17:
        $r42 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack24 = $r42.<org.bytedeco.javacv.OpenCVFrameGrabber: boolean triggerMode>;

        if $stack24 != 0 goto label18;

        $r43 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack25 = $r43.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack26 = virtualinvoke $stack25.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean grab()>();

        if $stack26 != 0 goto label18;

        $u5 = new org.bytedeco.javacv.FrameGrabber$Exception;

        specialinvoke $u5.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String)>("grab() Error: Could not grab frame. (Has start() been called?)");

        $r44 = (java.lang.Throwable) $u5;

        throw $r44;

     label18:
        return;

        catch java.lang.InterruptedException from label12 to label14 with label15;
    }

    public void stop() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack1, $stack2;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        if $stack1 == null goto label1;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        virtualinvoke $stack2.<org.bytedeco.opencv.opencv_videoio.VideoCapture: void release()>();

        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture> = null;

     label1:
        return;
    }

    public void trigger() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        OpenCVFrameGrabber this;
        int $stack4, $stack5, i;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack6, $stack9;
        boolean $stack7;
        org.bytedeco.opencv.opencv_core.Mat $u0;
        org.bytedeco.javacv.FrameGrabber$Exception $u1;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r2;
        java.lang.Throwable $r3;

        this := @this: OpenCVFrameGrabber;

        $u0 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        i = 0;

     label1:
        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack4 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: int numBuffers>;

        $stack5 = $stack4 + 1;

        if i >= $stack5 goto label2;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack9 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        virtualinvoke $stack9.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean read(org.bytedeco.opencv.opencv_core.Mat)>($u0);

        i = i + 1;

        goto label1;

     label2:
        $r2 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack6 = $r2.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack7 = virtualinvoke $stack6.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean grab()>();

        if $stack7 != 0 goto label3;

        $u1 = new org.bytedeco.javacv.FrameGrabber$Exception;

        specialinvoke $u1.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String)>("grab() Error: Could not grab frame. (Has start() been called?)");

        $r3 = (java.lang.Throwable) $u1;

        throw $r3;

     label3:
        return;
    }

    public org.bytedeco.javacv.Frame grab() throws org.bytedeco.javacv.FrameGrabber$Exception
    {
        OpenCVFrameGrabber this;
        org.bytedeco.opencv.opencv_core.Mat $stack1, $stack9, $stack13, $stack19, $stack20, $stack21, $stack24, $stack27, $stack30, $stack36, $stack39, $stack40, $stack41, $stack44, $stack47, $stack50, $stack10, $u2, $u3;
        org.bytedeco.opencv.opencv_videoio.VideoCapture $stack2, $stack56;
        boolean $stack3, $stack4, $stack57;
        org.bytedeco.javacv.FrameGrabber$ImageMode $stack5, $stack6, $stack7, $stack8;
        int $stack14, $stack26, $stack29, $stack32, $stack37, $stack46, $stack49, $stack52;
        int[] $stack23, $stack43;
        org.bytedeco.javacv.OpenCVFrameConverter $stack11;
        org.bytedeco.javacv.Frame $stack12;
        org.bytedeco.javacv.FrameGrabber$Exception $u0, $u1;
        org.bytedeco.javacv.OpenCVFrameGrabber $r0, $r1, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;
        java.lang.Throwable $r2, $r5;

        this := @this: OpenCVFrameGrabber;

        $r0 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack2 = $r0.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $r1 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack1 = $r1.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $stack3 = virtualinvoke $stack2.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean retrieve(org.bytedeco.opencv.opencv_core.Mat)>($stack1);

        if $stack3 != 0 goto label1;

        $u0 = new org.bytedeco.javacv.FrameGrabber$Exception;

        specialinvoke $u0.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String)>("retrieve() Error: Could not retrieve frame. (Has start() been called?)");

        $r2 = (java.lang.Throwable) $u0;

        throw $r2;

     label1:
        $r3 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack4 = $r3.<org.bytedeco.javacv.OpenCVFrameGrabber: boolean triggerMode>;

        if $stack4 != 0 goto label2;

        $r4 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack56 = $r4.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_videoio.VideoCapture capture>;

        $stack57 = virtualinvoke $stack56.<org.bytedeco.opencv.opencv_videoio.VideoCapture: boolean grab()>();

        if $stack57 != 0 goto label2;

        $u1 = new org.bytedeco.javacv.FrameGrabber$Exception;

        specialinvoke $u1.<org.bytedeco.javacv.FrameGrabber$Exception: void <init>(java.lang.String)>("grab() Error: Could not grab frame. (Has start() been called?)");

        $r5 = (java.lang.Throwable) $u1;

        throw $r5;

     label2:
        $r6 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack6 = $r6.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.FrameGrabber$ImageMode imageMode>;

        $stack5 = <org.bytedeco.javacv.FrameGrabber$ImageMode: org.bytedeco.javacv.FrameGrabber$ImageMode GRAY>;

        if $stack6 != $stack5 goto label4;

        $r7 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack36 = $r7.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $stack37 = virtualinvoke $stack36.<org.bytedeco.opencv.opencv_core.Mat: int channels()>();

        if $stack37 <= 1 goto label4;

        $r8 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack39 = $r8.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix>;

        if $stack39 != null goto label3;

        $u2 = new org.bytedeco.opencv.opencv_core.Mat;

        $stack43 = newarray (int)[4];

        $r9 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack44 = $r9.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $stack46 = virtualinvoke $stack44.<org.bytedeco.opencv.opencv_core.Mat: int rows()>();

        $stack43[0] = $stack46;

        $r10 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack47 = $r10.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $stack49 = virtualinvoke $stack47.<org.bytedeco.opencv.opencv_core.Mat: int cols()>();

        $stack43[1] = $stack49;

        $r11 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack50 = $r11.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $stack52 = virtualinvoke $stack50.<org.bytedeco.opencv.opencv_core.Mat: int depth()>();

        $stack43[2] = $stack52;

        $stack43[3] = 1;

        specialinvoke $u2.<org.bytedeco.opencv.opencv_core.Mat: void <init>(int[])>($stack43);

        $r12 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r12.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix> = $u2;

     label3:
        $r13 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack41 = $r13.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $r14 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack40 = $r14.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix>;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvtColor(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,int)>($stack41, $stack40, 6);

        goto label7;

     label4:
        $r15 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack8 = $r15.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.FrameGrabber$ImageMode imageMode>;

        $stack7 = <org.bytedeco.javacv.FrameGrabber$ImageMode: org.bytedeco.javacv.FrameGrabber$ImageMode COLOR>;

        if $stack8 != $stack7 goto label6;

        $r16 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack13 = $r16.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $stack14 = virtualinvoke $stack13.<org.bytedeco.opencv.opencv_core.Mat: int channels()>();

        if $stack14 != 1 goto label6;

        $r17 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack19 = $r17.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix>;

        if $stack19 != null goto label5;

        $u3 = new org.bytedeco.opencv.opencv_core.Mat;

        $stack23 = newarray (int)[4];

        $r18 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack24 = $r18.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $stack26 = virtualinvoke $stack24.<org.bytedeco.opencv.opencv_core.Mat: int rows()>();

        $stack23[0] = $stack26;

        $r19 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack27 = $r19.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $stack29 = virtualinvoke $stack27.<org.bytedeco.opencv.opencv_core.Mat: int cols()>();

        $stack23[1] = $stack29;

        $r20 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack30 = $r20.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $stack32 = virtualinvoke $stack30.<org.bytedeco.opencv.opencv_core.Mat: int depth()>();

        $stack23[2] = $stack32;

        $stack23[3] = 3;

        specialinvoke $u3.<org.bytedeco.opencv.opencv_core.Mat: void <init>(int[])>($stack23);

        $r21 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r21.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix> = $u3;

     label5:
        $r22 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack21 = $r22.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $r23 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack20 = $r23.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix>;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvtColor(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,int)>($stack21, $stack20, 8);

        goto label7;

     label6:
        $r24 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack9 = $r24.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat mat>;

        $r25 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $r25.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix> = $stack9;

     label7:
        $r26 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack11 = $r26.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.OpenCVFrameConverter converter>;

        $r27 = (org.bytedeco.javacv.OpenCVFrameGrabber) this;

        $stack10 = $r27.<org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.opencv.opencv_core.Mat returnMatrix>;

        $stack12 = virtualinvoke $stack11.<org.bytedeco.javacv.OpenCVFrameConverter: org.bytedeco.javacv.Frame convert(org.bytedeco.opencv.opencv_core.Mat)>($stack10);

        return $stack12;
    }

    static void <clinit>()
    {
        <org.bytedeco.javacv.OpenCVFrameGrabber: org.bytedeco.javacv.FrameGrabber$Exception loadingException> = null;

        return;
    }
}
