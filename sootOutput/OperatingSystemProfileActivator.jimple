public class OperatingSystemProfileActivator extends java.lang.Object implements org.apache.maven.model.profile.activation.ProfileActivator
{

    public void <init>()
    {
        OperatingSystemProfileActivator this;

        this := @this: OperatingSystemProfileActivator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isActive(org.apache.maven.model.Profile, org.apache.maven.model.profile.ProfileActivationContext, org.apache.maven.model.building.ModelProblemCollector)
    {
        org.apache.maven.model.Profile profile;
        org.apache.maven.model.Activation activation;
        org.apache.maven.model.ActivationOS os;
        OperatingSystemProfileActivator this;
        java.lang.String $stack10, $stack12, $stack14, $stack16, $stack18, $stack20, $stack22, $stack24;
        org.apache.maven.model.profile.ProfileActivationContext context;
        org.apache.maven.model.building.ModelProblemCollector problems;
        boolean active;
        org.apache.maven.model.profile.activation.OperatingSystemProfileActivator $r0, $r1, $r2, $r3, $r4;

        this := @this: OperatingSystemProfileActivator;

        profile := @parameter0: org.apache.maven.model.Profile;

        context := @parameter1: org.apache.maven.model.profile.ProfileActivationContext;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        activation = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        if activation != null goto label1;

        return 0;

     label1:
        os = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationOS getOs()>();

        if os != null goto label2;

        return 0;

     label2:
        $r0 = (org.apache.maven.model.profile.activation.OperatingSystemProfileActivator) this;

        active = specialinvoke $r0.<org.apache.maven.model.profile.activation.OperatingSystemProfileActivator: boolean ensureAtLeastOneNonNull(org.apache.maven.model.ActivationOS)>(os);

        if active == 0 goto label3;

        $stack22 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getFamily()>();

        if $stack22 == null goto label3;

        $stack24 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getFamily()>();

        $r1 = (org.apache.maven.model.profile.activation.OperatingSystemProfileActivator) this;

        active = specialinvoke $r1.<org.apache.maven.model.profile.activation.OperatingSystemProfileActivator: boolean determineFamilyMatch(java.lang.String)>($stack24);

     label3:
        if active == 0 goto label4;

        $stack18 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getName()>();

        if $stack18 == null goto label4;

        $stack20 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getName()>();

        $r2 = (org.apache.maven.model.profile.activation.OperatingSystemProfileActivator) this;

        active = specialinvoke $r2.<org.apache.maven.model.profile.activation.OperatingSystemProfileActivator: boolean determineNameMatch(java.lang.String)>($stack20);

     label4:
        if active == 0 goto label5;

        $stack14 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getArch()>();

        if $stack14 == null goto label5;

        $stack16 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getArch()>();

        $r3 = (org.apache.maven.model.profile.activation.OperatingSystemProfileActivator) this;

        active = specialinvoke $r3.<org.apache.maven.model.profile.activation.OperatingSystemProfileActivator: boolean determineArchMatch(java.lang.String)>($stack16);

     label5:
        if active == 0 goto label6;

        $stack10 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getVersion()>();

        if $stack10 == null goto label6;

        $stack12 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getVersion()>();

        $r4 = (org.apache.maven.model.profile.activation.OperatingSystemProfileActivator) this;

        active = specialinvoke $r4.<org.apache.maven.model.profile.activation.OperatingSystemProfileActivator: boolean determineVersionMatch(java.lang.String)>($stack12);

     label6:
        return active;
    }

    public boolean presentInConfig(org.apache.maven.model.Profile, org.apache.maven.model.profile.ProfileActivationContext, org.apache.maven.model.building.ModelProblemCollector)
    {
        org.apache.maven.model.Profile profile;
        org.apache.maven.model.Activation activation;
        org.apache.maven.model.ActivationOS os;
        OperatingSystemProfileActivator this;
        org.apache.maven.model.profile.ProfileActivationContext context;
        org.apache.maven.model.building.ModelProblemCollector problems;

        this := @this: OperatingSystemProfileActivator;

        profile := @parameter0: org.apache.maven.model.Profile;

        context := @parameter1: org.apache.maven.model.profile.ProfileActivationContext;

        problems := @parameter2: org.apache.maven.model.building.ModelProblemCollector;

        activation = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        if activation != null goto label1;

        return 0;

     label1:
        os = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationOS getOs()>();

        if os != null goto label2;

        return 0;

     label2:
        return 1;
    }

    private boolean ensureAtLeastOneNonNull(org.apache.maven.model.ActivationOS)
    {
        org.apache.maven.model.ActivationOS os;
        java.lang.String $stack2, $stack3, $stack4, $stack5;
        OperatingSystemProfileActivator this;
        boolean $stack6;

        this := @this: OperatingSystemProfileActivator;

        os := @parameter0: org.apache.maven.model.ActivationOS;

        $stack2 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getArch()>();

        if $stack2 != null goto label1;

        $stack3 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getFamily()>();

        if $stack3 != null goto label1;

        $stack4 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getName()>();

        if $stack4 != null goto label1;

        $stack5 = virtualinvoke os.<org.apache.maven.model.ActivationOS: java.lang.String getVersion()>();

        if $stack5 == null goto label2;

     label1:
        $stack6 = 1;

        goto label3;

     label2:
        $stack6 = 0;

     label3:
        return $stack6;
    }

    private boolean determineVersionMatch(java.lang.String)
    {
        java.lang.String version, test;
        boolean $stack5, result, reverse, $stack7;
        OperatingSystemProfileActivator this;

        this := @this: OperatingSystemProfileActivator;

        version := @parameter0: java.lang.String;

        test = version;

        reverse = 0;

        $stack5 = virtualinvoke version.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $stack5 == 0 goto label1;

        reverse = 1;

        test = virtualinvoke version.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        result = staticinvoke <org.codehaus.plexus.util.Os: boolean isVersion(java.lang.String)>(test);

        if reverse == 0 goto label3;

        if result != 0 goto label2;

        $stack7 = 1;

        goto label4;

     label2:
        $stack7 = 0;

        goto label4;

     label3:
        $stack7 = result;

     label4:
        return $stack7;
    }

    private boolean determineArchMatch(java.lang.String)
    {
        java.lang.String arch, test;
        boolean $stack5, result, reverse, $stack7;
        OperatingSystemProfileActivator this;

        this := @this: OperatingSystemProfileActivator;

        arch := @parameter0: java.lang.String;

        test = arch;

        reverse = 0;

        $stack5 = virtualinvoke arch.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $stack5 == 0 goto label1;

        reverse = 1;

        test = virtualinvoke arch.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        result = staticinvoke <org.codehaus.plexus.util.Os: boolean isArch(java.lang.String)>(test);

        if reverse == 0 goto label3;

        if result != 0 goto label2;

        $stack7 = 1;

        goto label4;

     label2:
        $stack7 = 0;

        goto label4;

     label3:
        $stack7 = result;

     label4:
        return $stack7;
    }

    private boolean determineNameMatch(java.lang.String)
    {
        java.lang.String name, test;
        boolean $stack5, result, reverse, $stack7;
        OperatingSystemProfileActivator this;

        this := @this: OperatingSystemProfileActivator;

        name := @parameter0: java.lang.String;

        test = name;

        reverse = 0;

        $stack5 = virtualinvoke name.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $stack5 == 0 goto label1;

        reverse = 1;

        test = virtualinvoke name.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        result = staticinvoke <org.codehaus.plexus.util.Os: boolean isName(java.lang.String)>(test);

        if reverse == 0 goto label3;

        if result != 0 goto label2;

        $stack7 = 1;

        goto label4;

     label2:
        $stack7 = 0;

        goto label4;

     label3:
        $stack7 = result;

     label4:
        return $stack7;
    }

    private boolean determineFamilyMatch(java.lang.String)
    {
        java.lang.String family, test;
        boolean $stack5, result, reverse, $stack7;
        OperatingSystemProfileActivator this;

        this := @this: OperatingSystemProfileActivator;

        family := @parameter0: java.lang.String;

        test = family;

        reverse = 0;

        $stack5 = virtualinvoke family.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $stack5 == 0 goto label1;

        reverse = 1;

        test = virtualinvoke family.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        result = staticinvoke <org.codehaus.plexus.util.Os: boolean isFamily(java.lang.String)>(test);

        if reverse == 0 goto label3;

        if result != 0 goto label2;

        $stack7 = 1;

        goto label4;

     label2:
        $stack7 = 0;

        goto label4;

     label3:
        $stack7 = result;

     label4:
        return $stack7;
    }
}
