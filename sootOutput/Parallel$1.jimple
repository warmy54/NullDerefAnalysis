class Parallel$1 extends java.lang.Object implements java.lang.Runnable
{
    final org.bytedeco.javacv.Parallel$Looper val$looper;
    final int val$subFrom;
    final int val$subTo;
    final int val$looperID;

    void <init>(org.bytedeco.javacv.Parallel$Looper, int, int, int)
    {
        Parallel$1 this;
        org.bytedeco.javacv.Parallel$Looper l1;
        int l2, l3, l4;
        org.bytedeco.javacv.Parallel$1 $r0, $r1, $r2, $r3;

        this := @this: Parallel$1;

        l1 := @parameter0: org.bytedeco.javacv.Parallel$Looper;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        l4 := @parameter3: int;

        $r0 = (org.bytedeco.javacv.Parallel$1) this;

        $r0.<org.bytedeco.javacv.Parallel$1: org.bytedeco.javacv.Parallel$Looper val$looper> = l1;

        $r1 = (org.bytedeco.javacv.Parallel$1) this;

        $r1.<org.bytedeco.javacv.Parallel$1: int val$subFrom> = l2;

        $r2 = (org.bytedeco.javacv.Parallel$1) this;

        $r2.<org.bytedeco.javacv.Parallel$1: int val$subTo> = l3;

        $r3 = (org.bytedeco.javacv.Parallel$1) this;

        $r3.<org.bytedeco.javacv.Parallel$1: int val$looperID> = l4;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        Parallel$1 this;
        int $stack1, $stack2, $stack3;
        org.bytedeco.javacv.Parallel$Looper $stack4;
        org.bytedeco.javacv.Parallel$1 $r0, $r1, $r2, $r3;

        this := @this: Parallel$1;

        $r0 = (org.bytedeco.javacv.Parallel$1) this;

        $stack4 = $r0.<org.bytedeco.javacv.Parallel$1: org.bytedeco.javacv.Parallel$Looper val$looper>;

        $r1 = (org.bytedeco.javacv.Parallel$1) this;

        $stack3 = $r1.<org.bytedeco.javacv.Parallel$1: int val$subFrom>;

        $r2 = (org.bytedeco.javacv.Parallel$1) this;

        $stack2 = $r2.<org.bytedeco.javacv.Parallel$1: int val$subTo>;

        $r3 = (org.bytedeco.javacv.Parallel$1) this;

        $stack1 = $r3.<org.bytedeco.javacv.Parallel$1: int val$looperID>;

        interfaceinvoke $stack4.<org.bytedeco.javacv.Parallel$Looper: void loop(int,int,int)>($stack3, $stack2, $stack1);

        return;
    }
}
