public class ParamdocXpp3Writer extends java.lang.Object
{
    private static final java.lang.String NAMESPACE;
    private java.lang.String fileComment;

    public void <init>()
    {
        ParamdocXpp3Writer this;
        org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer $r0;

        this := @this: ParamdocXpp3Writer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer) this;

        $r0.<org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String fileComment> = null;

        return;
    }

    public void setFileComment(java.lang.String)
    {
        ParamdocXpp3Writer this;
        java.lang.String fileComment;
        org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer $r0;

        this := @this: ParamdocXpp3Writer;

        fileComment := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer) this;

        $r0.<org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String fileComment> = fileComment;

        return;
    }

    public void write(java.io.Writer, org.apache.maven.usability.plugin.ExpressionDocumentation) throws java.io.IOException
    {
        java.io.Writer writer;
        org.apache.maven.usability.plugin.ExpressionDocumentation expressionDocumentation;
        java.lang.String $stack5;
        ParamdocXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer $r4;

        this := @this: ParamdocXpp3Writer;

        writer := @parameter0: java.io.Writer;

        expressionDocumentation := @parameter1: org.apache.maven.usability.plugin.ExpressionDocumentation;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.Writer)>(writer);

        $stack5 = virtualinvoke expressionDocumentation.<org.apache.maven.usability.plugin.ExpressionDocumentation: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack5, null);

        $r4 = (org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: void writeExpressionDocumentation(org.apache.maven.usability.plugin.ExpressionDocumentation,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(expressionDocumentation, "paramdoc", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    public void write(java.io.OutputStream, org.apache.maven.usability.plugin.ExpressionDocumentation) throws java.io.IOException
    {
        java.io.OutputStream stream;
        org.apache.maven.usability.plugin.ExpressionDocumentation expressionDocumentation;
        java.lang.String $stack5, $stack6;
        ParamdocXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer $r4;

        this := @this: ParamdocXpp3Writer;

        stream := @parameter0: java.io.OutputStream;

        expressionDocumentation := @parameter1: org.apache.maven.usability.plugin.ExpressionDocumentation;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $stack5 = virtualinvoke expressionDocumentation.<org.apache.maven.usability.plugin.ExpressionDocumentation: java.lang.String getModelEncoding()>();

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(stream, $stack5);

        $stack6 = virtualinvoke expressionDocumentation.<org.apache.maven.usability.plugin.ExpressionDocumentation: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack6, null);

        $r4 = (org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: void writeExpressionDocumentation(org.apache.maven.usability.plugin.ExpressionDocumentation,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(expressionDocumentation, "paramdoc", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    private void writeExpression(org.apache.maven.usability.plugin.Expression, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack20, $stack23, $stack29, $stack31, $stack37, $stack39, $stack60, $stack61, $stack65, $stack66, $stack89, $stack90, $stack94, $stack95, $stack102, $stack104, $stack109, $stack111, $stack116, $stack118;
        java.lang.String tagName, $stack7, $stack9, $stack10, $stack11, $stack15, $stack17, $stack19, $stack22, $stack24, $stack28, $stack30, $stack32, $stack36, $stack38, $stack40, $stack46, $stack52, $stack57, $stack59, $stack62, $stack64, $stack67, $stack69, $stack75, $stack81, $stack86, $stack88, $stack91, $stack93, $stack96, $stack98, $stack101, $stack103, $stack105, $stack108, $stack110, $stack112, $stack115, $stack117, $stack119, key, value, $stack14;
        org.apache.maven.usability.plugin.Expression expression;
        java.util.Properties $stack12, $stack43, $stack48, $stack55, $stack72, $stack77, $stack84, $stack13;
        boolean $stack16, $stack21, $stack51, $stack80;
        int $stack44, $stack73;
        java.util.Set $stack49, $stack78;
        java.lang.Object $stack54, $stack56, $stack83, $stack85;
        ParamdocXpp3Writer this;
        java.util.Iterator iter;

        this := @this: ParamdocXpp3Writer;

        expression := @parameter0: org.apache.maven.usability.plugin.Expression;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack7 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        $stack9 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getSyntax()>();

        if $stack9 == null goto label01;

        $stack115 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack116 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack115, "syntax");

        $stack117 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getSyntax()>();

        $stack118 = interfaceinvoke $stack116.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack117);

        $stack119 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack118.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack119, "syntax");

     label01:
        $stack10 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getDescription()>();

        if $stack10 == null goto label02;

        $stack108 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack109 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack108, "description");

        $stack110 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getDescription()>();

        $stack111 = interfaceinvoke $stack109.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack110);

        $stack112 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack111.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack112, "description");

     label02:
        $stack11 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getConfiguration()>();

        if $stack11 == null goto label03;

        $stack101 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack102 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack101, "configuration");

        $stack103 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getConfiguration()>();

        $stack104 = interfaceinvoke $stack102.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack103);

        $stack105 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack104.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack105, "configuration");

     label03:
        $stack12 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.util.Properties getCliOptions()>();

        if $stack12 == null goto label06;

        $stack72 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.util.Properties getCliOptions()>();

        $stack73 = virtualinvoke $stack72.<java.util.Properties: int size()>();

        if $stack73 <= 0 goto label06;

        $stack75 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack75, "cliOptions");

        $stack77 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.util.Properties getCliOptions()>();

        $stack78 = virtualinvoke $stack77.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack78.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $stack80 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack80 == 0 goto label05;

        $stack83 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $stack83;

        $stack84 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.util.Properties getCliOptions()>();

        $stack85 = virtualinvoke $stack84.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);

        value = (java.lang.String) $stack85;

        $stack86 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack86, "cliOption");

        $stack88 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack89 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack88, "key");

        $stack90 = interfaceinvoke $stack89.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(key);

        $stack91 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack90.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack91, "key");

        $stack93 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack94 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack93, "value");

        $stack95 = interfaceinvoke $stack94.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack96 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack95.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack96, "value");

        $stack98 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack98, "cliOption");

        goto label04;

     label05:
        $stack81 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack81, "cliOptions");

     label06:
        $stack13 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.util.Properties getApiMethods()>();

        if $stack13 == null goto label09;

        $stack43 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.util.Properties getApiMethods()>();

        $stack44 = virtualinvoke $stack43.<java.util.Properties: int size()>();

        if $stack44 <= 0 goto label09;

        $stack46 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack46, "apiMethods");

        $stack48 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.util.Properties getApiMethods()>();

        $stack49 = virtualinvoke $stack48.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack49.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $stack51 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack51 == 0 goto label08;

        $stack54 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $stack54;

        $stack55 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.util.Properties getApiMethods()>();

        $stack56 = virtualinvoke $stack55.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);

        value = (java.lang.String) $stack56;

        $stack57 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack57, "apiMethod");

        $stack59 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack60 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack59, "key");

        $stack61 = interfaceinvoke $stack60.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(key);

        $stack62 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack61.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack62, "key");

        $stack64 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack65 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack64, "value");

        $stack66 = interfaceinvoke $stack65.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack67 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack67, "value");

        $stack69 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack69, "apiMethod");

        goto label07;

     label08:
        $stack52 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack52, "apiMethods");

     label09:
        $stack14 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getDeprecation()>();

        if $stack14 == null goto label10;

        $stack36 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack37 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "deprecation");

        $stack38 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getDeprecation()>();

        $stack39 = interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack38);

        $stack40 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "deprecation");

     label10:
        $stack15 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getBan()>();

        if $stack15 == null goto label11;

        $stack28 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack29 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack28, "ban");

        $stack30 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: java.lang.String getBan()>();

        $stack31 = interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack30);

        $stack32 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack31.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack32, "ban");

     label11:
        $stack16 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: boolean isEditable()>();

        if $stack16 == 1 goto label12;

        $stack19 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "editable");

        $stack21 = virtualinvoke expression.<org.apache.maven.usability.plugin.Expression: boolean isEditable()>();

        $stack22 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack21);

        $stack23 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "editable");

     label12:
        $stack17 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, tagName);

        return;
    }

    private void writeExpressionDocumentation(org.apache.maven.usability.plugin.ExpressionDocumentation, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        ParamdocXpp3Writer this;
        java.lang.String $stack6, tagName, $stack7, $stack17, $stack22, $stack26, $stack11;
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        org.apache.maven.usability.plugin.ExpressionDocumentation expressionDocumentation;
        java.util.List $stack10, $stack13, $stack19;
        int $stack14;
        java.util.Iterator iter;
        boolean $stack21;
        java.lang.Object $stack24;
        org.apache.maven.usability.plugin.Expression o;
        org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer $r0, $r1, $r2;

        this := @this: ParamdocXpp3Writer;

        expressionDocumentation := @parameter0: org.apache.maven.usability.plugin.ExpressionDocumentation;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $r0 = (org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer) this;

        $stack6 = $r0.<org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String fileComment>;

        if $stack6 == null goto label1;

        $r1 = (org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer) this;

        $stack26 = $r1.<org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String fileComment>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void comment(java.lang.String)>($stack26);

     label1:
        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("", "http://maven.apache.org/PARAMDOC/1.0.0");

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("xsi", "http://www.w3.org/2001/XMLSchema-instance");

        $stack7 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "xsi:schemaLocation", "http://maven.apache.org/PARAMDOC/1.0.0 http://maven.apache.org/xsd/paramdoc-1.0.0.xsd");

        $stack10 = virtualinvoke expressionDocumentation.<org.apache.maven.usability.plugin.ExpressionDocumentation: java.util.List getExpressions()>();

        if $stack10 == null goto label4;

        $stack13 = virtualinvoke expressionDocumentation.<org.apache.maven.usability.plugin.ExpressionDocumentation: java.util.List getExpressions()>();

        $stack14 = interfaceinvoke $stack13.<java.util.List: int size()>();

        if $stack14 <= 0 goto label4;

        $stack17 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack17, "expressions");

        $stack19 = virtualinvoke expressionDocumentation.<org.apache.maven.usability.plugin.ExpressionDocumentation: java.util.List getExpressions()>();

        iter = interfaceinvoke $stack19.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack21 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label3;

        $stack24 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.usability.plugin.Expression) $stack24;

        $r2 = (org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: void writeExpression(org.apache.maven.usability.plugin.Expression,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "expression", serializer);

        goto label2;

     label3:
        $stack22 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "expressions");

     label4:
        $stack11 = <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    static void <clinit>()
    {
        <org.apache.maven.usability.plugin.io.xpp3.ParamdocXpp3Writer: java.lang.String NAMESPACE> = null;

        return;
    }
}
