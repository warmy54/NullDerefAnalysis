class ParentXMLFilter extends org.apache.maven.model.transform.AbstractEventXMLFilter
{
    private boolean parsingParent;
    private java.lang.String state;
    private java.lang.String parentWhitespace;
    private java.lang.String groupId;
    private java.lang.String artifactId;
    private java.lang.String relativePath;
    private boolean hasVersion;
    private boolean hasRelativePath;
    private java.util.Optional resolvedParent;
    private final java.util.function.Function relativePathMapper;
    private java.nio.file.Path projectPath;

    void <init>(java.util.function.Function)
    {
        ParentXMLFilter this;
        java.util.function.Function relativePathMapper;
        org.apache.maven.model.transform.ParentXMLFilter $r0, $r1;

        this := @this: ParentXMLFilter;

        relativePathMapper := @parameter0: java.util.function.Function;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void <init>()>();

        $r0 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r0.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String parentWhitespace> = "";

        $r1 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r1.<org.apache.maven.model.transform.ParentXMLFilter: java.util.function.Function relativePathMapper> = relativePathMapper;

        return;
    }

    public void setProjectPath(java.nio.file.Path)
    {
        ParentXMLFilter this;
        java.nio.file.Path projectPath;
        org.apache.maven.model.transform.ParentXMLFilter $r0;

        this := @this: ParentXMLFilter;

        projectPath := @parameter0: java.nio.file.Path;

        $r0 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r0.<org.apache.maven.model.transform.ParentXMLFilter: java.nio.file.Path projectPath> = projectPath;

        return;
    }

    protected boolean isParsing()
    {
        ParentXMLFilter this;
        boolean $stack1;
        org.apache.maven.model.transform.ParentXMLFilter $r0;

        this := @this: ParentXMLFilter;

        $r0 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.ParentXMLFilter: boolean parsingParent>;

        return $stack1;
    }

    protected java.lang.String getState()
    {
        ParentXMLFilter this;
        java.lang.String $stack1;
        org.apache.maven.model.transform.ParentXMLFilter $r0;

        this := @this: ParentXMLFilter;

        $r0 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String state>;

        return $stack1;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        ParentXMLFilter this;
        boolean $stack5, $stack8, $stack9, $stack10, $stack12, $stack13, $stack14, $stack21, $stack6;
        java.lang.String uri, localName, qName, $stack7, $stack11, $stack20;
        org.xml.sax.Attributes atts;
        org.apache.maven.model.transform.ParentXMLFilter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: ParentXMLFilter;

        uri := @parameter0: java.lang.String;

        localName := @parameter1: java.lang.String;

        qName := @parameter2: java.lang.String;

        atts := @parameter3: org.xml.sax.Attributes;

        $r0 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack5 = $r0.<org.apache.maven.model.transform.ParentXMLFilter: boolean parsingParent>;

        if $stack5 != 0 goto label1;

        $stack20 = "parent";

        $stack21 = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>(localName);

        if $stack21 == 0 goto label1;

        $r1 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r1.<org.apache.maven.model.transform.ParentXMLFilter: boolean parsingParent> = 1;

     label1:
        $r2 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack6 = $r2.<org.apache.maven.model.transform.ParentXMLFilter: boolean parsingParent>;

        if $stack6 == 0 goto label2;

        $r3 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r3.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String state> = localName;

        $r4 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack8 = $r4.<org.apache.maven.model.transform.ParentXMLFilter: boolean hasVersion>;

        $stack7 = "version";

        $stack9 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(localName);

        $stack10 = $stack8 | $stack9;

        $r5 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r5.<org.apache.maven.model.transform.ParentXMLFilter: boolean hasVersion> = $stack10;

        $r6 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack12 = $r6.<org.apache.maven.model.transform.ParentXMLFilter: boolean hasRelativePath>;

        $stack11 = "relativePath";

        $stack13 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(localName);

        $stack14 = $stack12 | $stack13;

        $r7 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r7.<org.apache.maven.model.transform.ParentXMLFilter: boolean hasRelativePath> = $stack14;

     label2:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(uri, localName, qName, atts);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        ParentXMLFilter this;
        boolean $stack8, $stack11, $stack25, $stack26, $stack27;
        char[] ch;
        int start, length, $stack10;
        java.lang.String eventState, $stack12, $stack13, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $u0;
        byte l7;
        org.apache.maven.model.transform.ParentXMLFilter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: ParentXMLFilter;

        ch := @parameter0: char[];

        start := @parameter1: int;

        length := @parameter2: int;

        $r0 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack8 = $r0.<org.apache.maven.model.transform.ParentXMLFilter: boolean parsingParent>;

        if $stack8 == 0 goto label10;

        $r1 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        eventState = $r1.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String state>;

        $u0 = new java.lang.String;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>(ch, start, length);

        l7 = -1;

        $stack10 = virtualinvoke eventState.<java.lang.String: int hashCode()>();

        lookupswitch($stack10)
        {
            case -995424086: goto label01;
            case -70808303: goto label02;
            case 240640653: goto label04;
            case 293428218: goto label03;
            default: goto label05;
        };

     label01:
        $stack27 = virtualinvoke eventState.<java.lang.String: boolean equals(java.lang.Object)>("parent");

        if $stack27 == 0 goto label05;

        l7 = 0;

        goto label05;

     label02:
        $stack26 = virtualinvoke eventState.<java.lang.String: boolean equals(java.lang.Object)>("relativePath");

        if $stack26 == 0 goto label05;

        l7 = 1;

        goto label05;

     label03:
        $stack11 = virtualinvoke eventState.<java.lang.String: boolean equals(java.lang.Object)>("groupId");

        if $stack11 == 0 goto label05;

        l7 = 2;

        goto label05;

     label04:
        $stack25 = virtualinvoke eventState.<java.lang.String: boolean equals(java.lang.Object)>("artifactId");

        if $stack25 == 0 goto label05;

        l7 = 3;

     label05:
        tableswitch(l7)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            default: goto label10;
        };

     label06:
        $r2 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack22 = $r2.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String parentWhitespace>;

        $stack23 = staticinvoke <org.apache.maven.model.transform.ParentXMLFilter: java.lang.String nullSafeAppend(java.lang.String,java.lang.String)>($stack22, $u0);

        $r3 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r3.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String parentWhitespace> = $stack23;

        goto label10;

     label07:
        $r4 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack20 = $r4.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String relativePath>;

        $stack21 = staticinvoke <org.apache.maven.model.transform.ParentXMLFilter: java.lang.String nullSafeAppend(java.lang.String,java.lang.String)>($stack20, $u0);

        $r5 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r5.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String relativePath> = $stack21;

        goto label10;

     label08:
        $r6 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack18 = $r6.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String groupId>;

        $stack19 = staticinvoke <org.apache.maven.model.transform.ParentXMLFilter: java.lang.String nullSafeAppend(java.lang.String,java.lang.String)>($stack18, $u0);

        $r7 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r7.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String groupId> = $stack19;

        goto label10;

     label09:
        $r8 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack12 = $r8.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String artifactId>;

        $stack13 = staticinvoke <org.apache.maven.model.transform.ParentXMLFilter: java.lang.String nullSafeAppend(java.lang.String,java.lang.String)>($stack12, $u0);

        $r9 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r9.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String artifactId> = $stack13;

        goto label10;

     label10:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void characters(char[],int,int)>(ch, start, length);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        ParentXMLFilter this;
        boolean $stack9, $stack11, $stack12, $stack22, $stack40, $stack14;
        java.lang.String uri, localName, qName, $stack27, $stack29, $stack41, $stack42, $stack47, versionQName, resolvedParentVersion;
        int $stack10, $stack31, $stack39;
        java.util.Optional $stack13, $stack21, $stack33, $stack45;
        org.apache.maven.model.transform.AbstractEventXMLFilter$Includer i;
        char[] $stack28, $stack37;
        java.lang.Object $stack34;
        org.apache.maven.model.transform.RelativeProject $stack35;
        java.lang.String[] $stack43;
        java.nio.file.Path $stack44;
        java.lang.Throwable $stack55, $stack56;
        byte l5;
        org.apache.maven.model.transform.ParentXMLFilter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: ParentXMLFilter;

        uri := @parameter0: java.lang.String;

        localName := @parameter1: java.lang.String;

        qName := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack9 = $r0.<org.apache.maven.model.transform.ParentXMLFilter: boolean parsingParent>;

        if $stack9 == 0 goto label15;

        l5 = -1;

        $stack10 = virtualinvoke localName.<java.lang.String: int hashCode()>();

        lookupswitch($stack10)
        {
            case -995424086: goto label01;
            default: goto label02;
        };

     label01:
        $stack11 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("parent");

        if $stack11 == 0 goto label02;

        l5 = 0;

     label02:
        lookupswitch(l5)
        {
            case 0: goto label03;
            default: goto label15;
        };

     label03:
        $r1 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack12 = $r1.<org.apache.maven.model.transform.ParentXMLFilter: boolean hasVersion>;

        if $stack12 != 0 goto label05;

        $r2 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack40 = $r2.<org.apache.maven.model.transform.ParentXMLFilter: boolean hasRelativePath>;

        if $stack40 == 0 goto label04;

        $r3 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack47 = $r3.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String relativePath>;

        if $stack47 == null goto label05;

     label04:
        $r4 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack41 = $r4.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String relativePath>;

        $stack42 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($stack41, "../pom.xml");

        $stack43 = newarray (java.lang.String)[0];

        $stack44 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>($stack42, $stack43);

        $r5 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack45 = virtualinvoke $r5.<org.apache.maven.model.transform.ParentXMLFilter: java.util.Optional resolveRelativePath(java.nio.file.Path)>($stack44);

        $r6 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r6.<org.apache.maven.model.transform.ParentXMLFilter: java.util.Optional resolvedParent> = $stack45;

        goto label06;

     label05:
        $stack13 = staticinvoke <java.util.Optional: java.util.Optional empty()>();

        $r7 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r7.<org.apache.maven.model.transform.ParentXMLFilter: java.util.Optional resolvedParent> = $stack13;

     label06:
        $r8 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack14 = $r8.<org.apache.maven.model.transform.ParentXMLFilter: boolean hasVersion>;

        if $stack14 != 0 goto label14;

        $r9 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack21 = $r9.<org.apache.maven.model.transform.ParentXMLFilter: java.util.Optional resolvedParent>;

        $stack22 = virtualinvoke $stack21.<java.util.Optional: boolean isPresent()>();

        if $stack22 == 0 goto label14;

        i = specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: org.apache.maven.model.transform.AbstractEventXMLFilter$Includer include()>();

     label07:
        $r10 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack27 = $r10.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String parentWhitespace>;

        $stack28 = virtualinvoke $stack27.<java.lang.String: char[] toCharArray()>();

        $r11 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack29 = $r11.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String parentWhitespace>;

        $stack31 = virtualinvoke $stack29.<java.lang.String: int length()>();

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void characters(char[],int,int)>($stack28, 0, $stack31);

        versionQName = staticinvoke <org.apache.maven.model.transform.sax.SAXEventUtils: java.lang.String renameQName(java.lang.String,java.lang.String)>(qName, "version");

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(uri, "version", versionQName, null);

        $r12 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack33 = $r12.<org.apache.maven.model.transform.ParentXMLFilter: java.util.Optional resolvedParent>;

        $stack34 = virtualinvoke $stack33.<java.util.Optional: java.lang.Object get()>();

        $stack35 = (org.apache.maven.model.transform.RelativeProject) $stack34;

        resolvedParentVersion = virtualinvoke $stack35.<org.apache.maven.model.transform.RelativeProject: java.lang.String getVersion()>();

        $stack37 = virtualinvoke resolvedParentVersion.<java.lang.String: char[] toCharArray()>();

        $stack39 = virtualinvoke resolvedParentVersion.<java.lang.String: int length()>();

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void characters(char[],int,int)>($stack37, 0, $stack39);

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endElement(java.lang.String,java.lang.String,java.lang.String)>(uri, "version", versionQName);

     label08:
        if i == null goto label14;

        interfaceinvoke i.<org.apache.maven.model.transform.AbstractEventXMLFilter$Includer: void close()>();

        goto label14;

     label09:
        $stack56 := @caughtexception;

        if i == null goto label13;

     label10:
        interfaceinvoke i.<org.apache.maven.model.transform.AbstractEventXMLFilter$Includer: void close()>();

     label11:
        goto label13;

     label12:
        $stack55 := @caughtexception;

        virtualinvoke $stack56.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack55);

     label13:
        throw $stack56;

     label14:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void executeEvents()>();

        $r13 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r13.<org.apache.maven.model.transform.ParentXMLFilter: boolean parsingParent> = 0;

        goto label15;

     label15:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endElement(java.lang.String,java.lang.String,java.lang.String)>(uri, localName, qName);

        $r14 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $r14.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String state> = "";

        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label10 to label11 with label12;
    }

    protected java.util.Optional resolveRelativePath(java.nio.file.Path)
    {
        ParentXMLFilter this;
        java.nio.file.Path relativePath, $stack5, $stack10, pomPath;
        java.nio.file.LinkOption[] $stack7;
        boolean $stack8, $stack12, $stack17, $stack20;
        java.util.function.Function $stack9;
        java.lang.Object $stack11, $stack14;
        java.util.Optional mappedProject, $stack13;
        org.apache.maven.model.transform.RelativeProject project;
        java.lang.String $stack15, $stack16, $stack18, $stack19;
        org.apache.maven.model.transform.ParentXMLFilter $r0, $r1, $r2, $r3;

        this := @this: ParentXMLFilter;

        relativePath := @parameter0: java.nio.file.Path;

        $r0 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack5 = $r0.<org.apache.maven.model.transform.ParentXMLFilter: java.nio.file.Path projectPath>;

        pomPath = interfaceinvoke $stack5.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>(relativePath);

        $stack7 = newarray (java.nio.file.LinkOption)[0];

        $stack8 = staticinvoke <java.nio.file.Files: boolean isDirectory(java.nio.file.Path,java.nio.file.LinkOption[])>(pomPath, $stack7);

        if $stack8 == 0 goto label1;

        pomPath = interfaceinvoke pomPath.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>("pom.xml");

     label1:
        $r1 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack9 = $r1.<org.apache.maven.model.transform.ParentXMLFilter: java.util.function.Function relativePathMapper>;

        $stack10 = interfaceinvoke pomPath.<java.nio.file.Path: java.nio.file.Path normalize()>();

        $stack11 = interfaceinvoke $stack9.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>($stack10);

        mappedProject = (java.util.Optional) $stack11;

        $stack12 = virtualinvoke mappedProject.<java.util.Optional: boolean isPresent()>();

        if $stack12 == 0 goto label2;

        $stack14 = virtualinvoke mappedProject.<java.util.Optional: java.lang.Object get()>();

        project = (org.apache.maven.model.transform.RelativeProject) $stack14;

        $r2 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack15 = $r2.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String groupId>;

        $stack16 = virtualinvoke project.<org.apache.maven.model.transform.RelativeProject: java.lang.String getGroupId()>();

        $stack17 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack15, $stack16);

        if $stack17 == 0 goto label2;

        $r3 = (org.apache.maven.model.transform.ParentXMLFilter) this;

        $stack18 = $r3.<org.apache.maven.model.transform.ParentXMLFilter: java.lang.String artifactId>;

        $stack19 = virtualinvoke project.<org.apache.maven.model.transform.RelativeProject: java.lang.String getArtifactId()>();

        $stack20 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack18, $stack19);

        if $stack20 == 0 goto label2;

        return mappedProject;

     label2:
        $stack13 = staticinvoke <java.util.Optional: java.util.Optional empty()>();

        return $stack13;
    }
}
