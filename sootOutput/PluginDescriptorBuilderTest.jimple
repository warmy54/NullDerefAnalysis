public class PluginDescriptorBuilderTest extends java.lang.Object
{

    public void <init>()
    {
        PluginDescriptorBuilderTest this;

        this := @this: PluginDescriptorBuilderTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private org.apache.maven.plugin.descriptor.PluginDescriptor build(java.lang.String) throws java.io.IOException, org.codehaus.plexus.configuration.PlexusConfigurationException
    {
        PluginDescriptorBuilderTest this;
        java.lang.Class $stack3;
        java.lang.String resource;
        java.io.InputStream $stack4;
        org.codehaus.plexus.util.xml.XmlStreamReader reader;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack7;
        org.apache.maven.plugin.descriptor.PluginDescriptorBuilder $u0;
        java.io.Reader $r0;

        this := @this: PluginDescriptorBuilderTest;

        resource := @parameter0: java.lang.String;

        $stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack4 = virtualinvoke $stack3.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(resource);

        reader = staticinvoke <org.codehaus.plexus.util.ReaderFactory: org.codehaus.plexus.util.xml.XmlStreamReader newXmlReader(java.io.InputStream)>($stack4);

        $u0 = new org.apache.maven.plugin.descriptor.PluginDescriptorBuilder;

        specialinvoke $u0.<org.apache.maven.plugin.descriptor.PluginDescriptorBuilder: void <init>()>();

        $r0 = (java.io.Reader) reader;

        $stack7 = virtualinvoke $u0.<org.apache.maven.plugin.descriptor.PluginDescriptorBuilder: org.apache.maven.plugin.descriptor.PluginDescriptor build(java.io.Reader)>($r0);

        return $stack7;
    }

    public void testBuildReader() throws java.lang.Exception
    {
        PluginDescriptorBuilderTest this;
        org.apache.maven.plugin.descriptor.PluginDescriptor pd;
        java.lang.String $stack9, $stack11, $stack13, $stack15, $stack17, $stack33, $stack35, $stack37, $stack39, $stack59, $stack61, $stack63, $stack65, $stack67, $stack69, $stack71, $stack73, $stack75, $stack77, $stack91, $stack93, $stack95, $stack99, $stack101, $stack103, $stack105, $stack113, $stack115, $stack117, $stack119, $stack121, $stack125, $stack127, $stack129, $stack133, $stack135, $stack137, $stack139, $stack143, $stack145, $stack147;
        java.lang.Boolean $stack18, $stack20, $stack21, $stack23, $stack40, $stack42, $stack43, $stack45, $stack46, $stack48, $stack49, $stack51, $stack52, $stack54, $stack55, $stack57, $stack106, $stack108, $stack109, $stack111, $stack148, $stack150;
        boolean $stack19, $stack22, $stack41, $stack44, $stack47, $stack50, $stack53, $stack56, $stack107, $stack110, $stack149;
        java.util.List $stack25, $stack28, $stack30, $stack79, $stack82, $stack96, $stack122, $stack130, $stack140;
        int $stack26, $stack29, $stack80, $stack83, $stack87;
        java.lang.Object $stack31, $stack97, $stack123, $stack131, $stack141;
        org.codehaus.plexus.configuration.PlexusConfiguration $stack84, $stack86, $stack88, pc;
        org.apache.maven.plugin.descriptor.Parameter mp;
        org.codehaus.plexus.component.repository.ComponentRequirement cr;
        org.codehaus.plexus.component.repository.ComponentDependency cd;
        org.apache.maven.plugin.descriptor.MojoDescriptor md;
        org.apache.maven.plugin.descriptor.PluginDescriptorBuilderTest $r0;

        this := @this: PluginDescriptorBuilderTest;

        $r0 = (org.apache.maven.plugin.descriptor.PluginDescriptorBuilderTest) this;

        pd = specialinvoke $r0.<org.apache.maven.plugin.descriptor.PluginDescriptorBuilderTest: org.apache.maven.plugin.descriptor.PluginDescriptor build(java.lang.String)>("/plugin.xml");

        $stack9 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getGroupId()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("org.apache.maven.plugins", $stack9);

        $stack11 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getArtifactId()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("maven-jar-plugin", $stack11);

        $stack13 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("2.3-SNAPSHOT", $stack13);

        $stack15 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getGoalPrefix()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("jar", $stack15);

        $stack17 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getDescription()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("plugin-description", $stack17);

        $stack18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack19 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: boolean isIsolatedRealm()>();

        $stack20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack19);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack18, $stack20);

        $stack21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack22 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: boolean isInheritedByDefault()>();

        $stack23 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack22);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack21, $stack23);

        $stack25 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.util.List getMojos()>();

        $stack26 = interfaceinvoke $stack25.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(2, $stack26);

        $stack28 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.util.List getDependencies()>();

        $stack29 = interfaceinvoke $stack28.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack29);

        $stack30 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.util.List getMojos()>();

        $stack31 = interfaceinvoke $stack30.<java.util.List: java.lang.Object get(int)>(0);

        md = (org.apache.maven.plugin.descriptor.MojoDescriptor) $stack31;

        $stack33 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getGoal()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("jar", $stack33);

        $stack35 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getDescription()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("mojo-description", $stack35);

        $stack37 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getDependencyResolutionRequired()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("runtime", $stack37);

        $stack39 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getDependencyCollectionRequired()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("test", $stack39);

        $stack40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack41 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isAggregator()>();

        $stack42 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack41);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack40, $stack42);

        $stack43 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack44 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isDirectInvocationOnly()>();

        $stack45 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack44);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack43, $stack45);

        $stack46 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack47 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isInheritedByDefault()>();

        $stack48 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack47);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack46, $stack48);

        $stack49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack50 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isOnlineRequired()>();

        $stack51 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack50);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack49, $stack51);

        $stack52 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack53 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isProjectRequired()>();

        $stack54 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack53);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack52, $stack54);

        $stack55 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack56 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isThreadSafe()>();

        $stack57 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack56);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack55, $stack57);

        $stack59 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getPhase()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("package", $stack59);

        $stack61 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getImplementation()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("org.apache.maven.plugin.jar.JarMojo", $stack61);

        $stack63 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getComponentConfigurator()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("antrun", $stack63);

        $stack65 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getLanguage()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("java", $stack65);

        $stack67 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getInstantiationStrategy()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("per-lookup", $stack67);

        $stack69 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getExecuteGoal()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("some-goal", $stack69);

        $stack71 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getExecutePhase()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("generate-sources", $stack71);

        $stack73 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getExecuteLifecycle()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("cobertura", $stack73);

        $stack75 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getSince()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("2.2", $stack75);

        $stack77 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getDeprecated()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("deprecated-mojo", $stack77);

        $stack79 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List getRequirements()>();

        $stack80 = interfaceinvoke $stack79.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack80);

        $stack82 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List getParameters()>();

        $stack83 = interfaceinvoke $stack82.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack83);

        $stack84 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.codehaus.plexus.configuration.PlexusConfiguration getMojoConfiguration()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>($stack84);

        $stack86 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.codehaus.plexus.configuration.PlexusConfiguration getMojoConfiguration()>();

        $stack87 = interfaceinvoke $stack86.<org.codehaus.plexus.configuration.PlexusConfiguration: int getChildCount()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(1, $stack87);

        $stack88 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.codehaus.plexus.configuration.PlexusConfiguration getMojoConfiguration()>();

        pc = interfaceinvoke $stack88.<org.codehaus.plexus.configuration.PlexusConfiguration: org.codehaus.plexus.configuration.PlexusConfiguration getChild(int)>(0);

        $stack91 = interfaceinvoke pc.<org.codehaus.plexus.configuration.PlexusConfiguration: java.lang.String getValue()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("${jar.finalName}", $stack91);

        $stack93 = interfaceinvoke pc.<org.codehaus.plexus.configuration.PlexusConfiguration: java.lang.String getAttribute(java.lang.String)>("default-value");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("${project.build.finalName}", $stack93);

        $stack95 = interfaceinvoke pc.<org.codehaus.plexus.configuration.PlexusConfiguration: java.lang.String getAttribute(java.lang.String)>("implementation");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("java.lang.String", $stack95);

        $stack96 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List getParameters()>();

        $stack97 = interfaceinvoke $stack96.<java.util.List: java.lang.Object get(int)>(0);

        mp = (org.apache.maven.plugin.descriptor.Parameter) $stack97;

        $stack99 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getName()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("finalName", $stack99);

        $stack101 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getAlias()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("jarName", $stack101);

        $stack103 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getType()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("java.lang.String", $stack103);

        $stack105 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getImplementation()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("java.lang.String", $stack105);

        $stack106 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack107 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: boolean isEditable()>();

        $stack108 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack107);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack106, $stack108);

        $stack109 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack110 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: boolean isRequired()>();

        $stack111 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack110);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack109, $stack111);

        $stack113 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getDescription()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("parameter-description", $stack113);

        $stack115 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getDeprecated()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("deprecated-parameter", $stack115);

        $stack117 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getExpression()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("${jar.finalName}", $stack117);

        $stack119 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getDefaultValue()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("${project.build.finalName}", $stack119);

        $stack121 = virtualinvoke mp.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getSince()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("3.0.0", $stack121);

        $stack122 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.util.List getRequirements()>();

        $stack123 = interfaceinvoke $stack122.<java.util.List: java.lang.Object get(int)>(0);

        cr = (org.codehaus.plexus.component.repository.ComponentRequirement) $stack123;

        $stack125 = virtualinvoke cr.<org.codehaus.plexus.component.repository.ComponentRequirement: java.lang.String getRole()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("org.codehaus.plexus.archiver.Archiver", $stack125);

        $stack127 = virtualinvoke cr.<org.codehaus.plexus.component.repository.ComponentRequirement: java.lang.String getRoleHint()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("jar", $stack127);

        $stack129 = virtualinvoke cr.<org.codehaus.plexus.component.repository.ComponentRequirement: java.lang.String getFieldName()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("jarArchiver", $stack129);

        $stack130 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.util.List getDependencies()>();

        $stack131 = interfaceinvoke $stack130.<java.util.List: java.lang.Object get(int)>(0);

        cd = (org.codehaus.plexus.component.repository.ComponentDependency) $stack131;

        $stack133 = virtualinvoke cd.<org.codehaus.plexus.component.repository.ComponentDependency: java.lang.String getGroupId()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("org.apache.maven", $stack133);

        $stack135 = virtualinvoke cd.<org.codehaus.plexus.component.repository.ComponentDependency: java.lang.String getArtifactId()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("maven-plugin-api", $stack135);

        $stack137 = virtualinvoke cd.<org.codehaus.plexus.component.repository.ComponentDependency: java.lang.String getVersion()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("2.0.6", $stack137);

        $stack139 = virtualinvoke cd.<org.codehaus.plexus.component.repository.ComponentDependency: java.lang.String getType()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("jar", $stack139);

        $stack140 = virtualinvoke pd.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.util.List getMojos()>();

        $stack141 = interfaceinvoke $stack140.<java.util.List: java.lang.Object get(int)>(1);

        md = (org.apache.maven.plugin.descriptor.MojoDescriptor) $stack141;

        $stack143 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getGoal()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("war", $stack143);

        $stack145 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getDependencyResolutionRequired()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack145);

        $stack147 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getDependencyCollectionRequired()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>(null, $stack147);

        $stack148 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack149 = virtualinvoke md.<org.apache.maven.plugin.descriptor.MojoDescriptor: boolean isThreadSafe()>();

        $stack150 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack149);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack148, $stack150);

        return;
    }
}
