public class PluginDescriptorParsingException extends java.lang.Exception
{

    public void <init>(org.apache.maven.model.Plugin, java.lang.String, java.lang.Throwable)
    {
        PluginDescriptorParsingException this;
        org.apache.maven.model.Plugin plugin;
        java.lang.String descriptorLocation, $stack4;
        java.lang.Throwable e;

        this := @this: PluginDescriptorParsingException;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        descriptorLocation := @parameter1: java.lang.String;

        e := @parameter2: java.lang.Throwable;

        $stack4 = staticinvoke <org.apache.maven.plugin.PluginDescriptorParsingException: java.lang.String createMessage(org.apache.maven.model.Plugin,java.lang.String,java.lang.Throwable)>(plugin, descriptorLocation, e);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack4, e);

        return;
    }

    private static java.lang.String createMessage(org.apache.maven.model.Plugin, java.lang.String, java.lang.Throwable)
    {
        org.apache.maven.model.Plugin plugin;
        java.lang.String descriptorLocation, $stack7, $stack21, message;
        java.lang.Throwable e;
        java.lang.StringBuilder $stack4, $stack5, $stack6, $stack8, $stack11, $stack12, $stack13, $stack14, $stack15, $stack18, $stack19, $stack20, $stack22;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        descriptorLocation := @parameter1: java.lang.String;

        e := @parameter2: java.lang.Throwable;

        message = "Failed to parse plugin descriptor";

        if plugin == null goto label1;

        $stack18 = new java.lang.StringBuilder;

        specialinvoke $stack18.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to parse plugin descriptor");

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $stack21 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getId()>();

        $stack22 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack21);

        message = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        if descriptorLocation == null goto label2;

        $stack11 = new java.lang.StringBuilder;

        specialinvoke $stack11.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(descriptorLocation);

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        message = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        if e == null goto label3;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack7 = virtualinvoke e.<java.lang.Throwable: java.lang.String getMessage()>();

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        message = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        return message;
    }
}
