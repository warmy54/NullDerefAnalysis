public class PluginExecutionException extends org.apache.maven.plugin.PluginManagerException
{
    private final org.apache.maven.plugin.MojoExecution mojoExecution;

    public void <init>(org.apache.maven.plugin.MojoExecution, org.apache.maven.project.MavenProject, java.lang.String)
    {
        PluginExecutionException this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack4;
        org.apache.maven.project.MavenProject project;
        java.lang.String message;
        org.apache.maven.plugin.PluginExecutionException $r0;

        this := @this: PluginExecutionException;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        project := @parameter1: org.apache.maven.project.MavenProject;

        message := @parameter2: java.lang.String;

        $stack4 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        specialinvoke this.<org.apache.maven.plugin.PluginManagerException: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor,org.apache.maven.project.MavenProject,java.lang.String)>($stack4, project, message);

        $r0 = (org.apache.maven.plugin.PluginExecutionException) this;

        $r0.<org.apache.maven.plugin.PluginExecutionException: org.apache.maven.plugin.MojoExecution mojoExecution> = mojoExecution;

        return;
    }

    public void <init>(org.apache.maven.plugin.MojoExecution, org.apache.maven.project.MavenProject, java.lang.String, java.lang.Throwable)
    {
        PluginExecutionException this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack5;
        org.apache.maven.project.MavenProject project;
        java.lang.String message;
        java.lang.Throwable cause;
        org.apache.maven.plugin.PluginExecutionException $r0;

        this := @this: PluginExecutionException;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        project := @parameter1: org.apache.maven.project.MavenProject;

        message := @parameter2: java.lang.String;

        cause := @parameter3: java.lang.Throwable;

        $stack5 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        specialinvoke this.<org.apache.maven.plugin.PluginManagerException: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor,org.apache.maven.project.MavenProject,java.lang.String,java.lang.Throwable)>($stack5, project, message, cause);

        $r0 = (org.apache.maven.plugin.PluginExecutionException) this;

        $r0.<org.apache.maven.plugin.PluginExecutionException: org.apache.maven.plugin.MojoExecution mojoExecution> = mojoExecution;

        return;
    }

    public void <init>(org.apache.maven.plugin.MojoExecution, org.apache.maven.project.MavenProject, java.lang.Exception)
    {
        PluginExecutionException this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack4;
        org.apache.maven.project.MavenProject project;
        java.lang.Exception cause;
        java.lang.String $stack5;
        org.apache.maven.plugin.PluginExecutionException $r0;

        this := @this: PluginExecutionException;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        project := @parameter1: org.apache.maven.project.MavenProject;

        cause := @parameter2: java.lang.Exception;

        $stack4 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        $stack5 = staticinvoke <org.apache.maven.plugin.PluginExecutionException: java.lang.String constructMessage(org.apache.maven.plugin.MojoExecution,java.lang.Throwable)>(mojoExecution, cause);

        specialinvoke this.<org.apache.maven.plugin.PluginManagerException: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor,org.apache.maven.project.MavenProject,java.lang.String,java.lang.Throwable)>($stack4, project, $stack5, cause);

        $r0 = (org.apache.maven.plugin.PluginExecutionException) this;

        $r0.<org.apache.maven.plugin.PluginExecutionException: org.apache.maven.plugin.MojoExecution mojoExecution> = mojoExecution;

        return;
    }

    public void <init>(org.apache.maven.plugin.MojoExecution, org.apache.maven.project.MavenProject, org.apache.maven.project.DuplicateArtifactAttachmentException)
    {
        PluginExecutionException this;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack4;
        org.apache.maven.project.MavenProject project;
        org.apache.maven.project.DuplicateArtifactAttachmentException cause;
        java.lang.String $stack5;
        java.lang.Throwable $r0, $r1;
        org.apache.maven.plugin.PluginExecutionException $r2;

        this := @this: PluginExecutionException;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        project := @parameter1: org.apache.maven.project.MavenProject;

        cause := @parameter2: org.apache.maven.project.DuplicateArtifactAttachmentException;

        $stack4 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        $r0 = (java.lang.Throwable) cause;

        $stack5 = staticinvoke <org.apache.maven.plugin.PluginExecutionException: java.lang.String constructMessage(org.apache.maven.plugin.MojoExecution,java.lang.Throwable)>(mojoExecution, $r0);

        $r1 = (java.lang.Throwable) cause;

        specialinvoke this.<org.apache.maven.plugin.PluginManagerException: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor,org.apache.maven.project.MavenProject,java.lang.String,java.lang.Throwable)>($stack4, project, $stack5, $r1);

        $r2 = (org.apache.maven.plugin.PluginExecutionException) this;

        $r2.<org.apache.maven.plugin.PluginExecutionException: org.apache.maven.plugin.MojoExecution mojoExecution> = mojoExecution;

        return;
    }

    public org.apache.maven.plugin.MojoExecution getMojoExecution()
    {
        PluginExecutionException this;
        org.apache.maven.plugin.MojoExecution $stack1;
        org.apache.maven.plugin.PluginExecutionException $r0;

        this := @this: PluginExecutionException;

        $r0 = (org.apache.maven.plugin.PluginExecutionException) this;

        $stack1 = $r0.<org.apache.maven.plugin.PluginExecutionException: org.apache.maven.plugin.MojoExecution mojoExecution>;

        return $stack1;
    }

    private static java.lang.String constructMessage(org.apache.maven.plugin.MojoExecution, java.lang.Throwable)
    {
        org.apache.maven.plugin.MojoExecution mojoExecution;
        java.lang.Throwable cause;
        java.lang.StringBuilder $stack3, $stack4, $stack5, $stack12, $stack13, $stack14, $stack16, $stack18, $stack19, $stack21, $stack22, $stack25, $stack26;
        java.lang.String $stack7, $stack15, $stack20, $stack24, message;
        boolean $stack8;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack23;

        mojoExecution := @parameter0: org.apache.maven.plugin.MojoExecution;

        cause := @parameter1: java.lang.Throwable;

        if mojoExecution == null goto label1;

        $stack18 = new java.lang.StringBuilder;

        specialinvoke $stack18.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Execution ");

        $stack20 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: java.lang.String getExecutionId()>();

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of goal ");

        $stack23 = virtualinvoke mojoExecution.<org.apache.maven.plugin.MojoExecution: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        $stack24 = virtualinvoke $stack23.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getId()>();

        $stack25 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed");

        message = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        message = "Mojo execution failed";

     label2:
        if cause == null goto label3;

        $stack7 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>();

        $stack8 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>($stack7);

        if $stack8 == 0 goto label3;

        $stack12 = new java.lang.StringBuilder;

        specialinvoke $stack12.<java.lang.StringBuilder: void <init>()>();

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack15 = virtualinvoke cause.<java.lang.Throwable: java.lang.String getMessage()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        message = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label3:
        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        message = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return message;
    }
}
