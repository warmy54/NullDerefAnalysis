public interface  PluginManager extends java.lang.Object
{
    public static final java.lang.String ROLE;

    public abstract void executeMojo(org.apache.maven.project.MavenProject, org.apache.maven.plugin.MojoExecution, org.apache.maven.execution.MavenSession) throws org.apache.maven.plugin.MojoExecutionException, org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.plugin.MojoFailureException, org.apache.maven.artifact.resolver.ArtifactNotFoundException, org.apache.maven.project.artifact.InvalidDependencyVersionException, org.apache.maven.plugin.PluginManagerException, org.apache.maven.plugin.PluginConfigurationException;

    public abstract org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptorForPrefix(java.lang.String);

    public abstract org.apache.maven.model.Plugin getPluginDefinitionForPrefix(java.lang.String, org.apache.maven.execution.MavenSession, org.apache.maven.project.MavenProject);

    public abstract org.apache.maven.plugin.descriptor.PluginDescriptor verifyPlugin(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.settings.Settings, org.apache.maven.artifact.repository.ArtifactRepository) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.artifact.resolver.ArtifactNotFoundException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException, org.apache.maven.plugin.InvalidPluginException, org.apache.maven.plugin.PluginManagerException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.version.PluginVersionNotFoundException;

    public abstract java.lang.Object getPluginComponent(org.apache.maven.model.Plugin, java.lang.String, java.lang.String) throws org.apache.maven.plugin.PluginManagerException, org.codehaus.plexus.component.repository.exception.ComponentLookupException;

    public abstract java.util.Map getPluginComponents(org.apache.maven.model.Plugin, java.lang.String) throws org.codehaus.plexus.component.repository.exception.ComponentLookupException, org.apache.maven.plugin.PluginManagerException;

    public abstract org.apache.maven.plugin.descriptor.PluginDescriptor loadPluginDescriptor(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.execution.MavenSession) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.artifact.resolver.ArtifactNotFoundException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException, org.apache.maven.plugin.InvalidPluginException, org.apache.maven.plugin.PluginManagerException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.version.PluginVersionNotFoundException;

    public abstract org.apache.maven.plugin.descriptor.PluginDescriptor loadPluginFully(org.apache.maven.model.Plugin, org.apache.maven.project.MavenProject, org.apache.maven.execution.MavenSession) throws org.apache.maven.artifact.resolver.ArtifactResolutionException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.artifact.resolver.ArtifactNotFoundException, org.apache.maven.artifact.versioning.InvalidVersionSpecificationException, org.apache.maven.plugin.InvalidPluginException, org.apache.maven.plugin.PluginManagerException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.version.PluginVersionNotFoundException;

    static void <clinit>()
    {
        java.lang.Class $stack0;
        java.lang.String $stack1;

        $stack0 = class "Lorg/apache/maven/plugin/PluginManager;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: java.lang.String getName()>();

        <org.apache.maven.plugin.PluginManager: java.lang.String ROLE> = $stack1;

        return;
    }
}
