public class PluginNotFoundException extends org.apache.maven.artifact.resolver.AbstractArtifactResolutionException
{
    private org.apache.maven.model.Plugin plugin;

    public void <init>(org.apache.maven.model.Plugin, org.apache.maven.artifact.resolver.ArtifactNotFoundException)
    {
        PluginNotFoundException this;
        java.lang.StringBuilder $stack4, $stack6, $u0;
        org.apache.maven.artifact.resolver.ArtifactNotFoundException e;
        java.lang.String $stack5, $stack7, $stack8, $stack9, $stack10;
        java.util.List $stack13;
        java.lang.Throwable $stack15;
        org.apache.maven.model.Plugin plugin;
        org.apache.maven.plugin.PluginNotFoundException $r0;

        this := @this: PluginNotFoundException;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        e := @parameter1: org.apache.maven.artifact.resolver.ArtifactNotFoundException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Plugin could not be found - check that the goal name is correct: ");

        $stack5 = virtualinvoke e.<org.apache.maven.artifact.resolver.ArtifactNotFoundException: java.lang.String getMessage()>();

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack8 = virtualinvoke e.<org.apache.maven.artifact.resolver.ArtifactNotFoundException: java.lang.String getGroupId()>();

        $stack9 = virtualinvoke e.<org.apache.maven.artifact.resolver.ArtifactNotFoundException: java.lang.String getArtifactId()>();

        $stack10 = virtualinvoke e.<org.apache.maven.artifact.resolver.ArtifactNotFoundException: java.lang.String getVersion()>();

        $stack13 = virtualinvoke e.<org.apache.maven.artifact.resolver.ArtifactNotFoundException: java.util.List getRemoteRepositories()>();

        $stack15 = virtualinvoke e.<org.apache.maven.artifact.resolver.ArtifactNotFoundException: java.lang.Throwable getCause()>();

        specialinvoke this.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.lang.Throwable)>($stack7, $stack8, $stack9, $stack10, "maven-plugin", null, $stack13, null, $stack15);

        $r0 = (org.apache.maven.plugin.PluginNotFoundException) this;

        $r0.<org.apache.maven.plugin.PluginNotFoundException: org.apache.maven.model.Plugin plugin> = plugin;

        return;
    }

    public void <init>(org.apache.maven.model.Plugin, java.util.List)
    {
        PluginNotFoundException this;
        org.apache.maven.model.Plugin plugin;
        java.lang.String $stack4, $stack5, $stack6;
        java.util.List remoteRepositories;
        org.apache.maven.plugin.PluginNotFoundException $r0;

        this := @this: PluginNotFoundException;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        remoteRepositories := @parameter1: java.util.List;

        $stack4 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $stack5 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $stack6 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        specialinvoke this.<org.apache.maven.artifact.resolver.AbstractArtifactResolutionException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List)>("Plugin could not be found, please check its coordinates for typos and ensure the required plugin repositories are defined in the POM", $stack4, $stack5, $stack6, "maven-plugin", null, remoteRepositories, null);

        $r0 = (org.apache.maven.plugin.PluginNotFoundException) this;

        $r0.<org.apache.maven.plugin.PluginNotFoundException: org.apache.maven.model.Plugin plugin> = plugin;

        return;
    }

    public org.apache.maven.model.Plugin getPlugin()
    {
        PluginNotFoundException this;
        org.apache.maven.model.Plugin $stack1;
        org.apache.maven.plugin.PluginNotFoundException $r0;

        this := @this: PluginNotFoundException;

        $r0 = (org.apache.maven.plugin.PluginNotFoundException) this;

        $stack1 = $r0.<org.apache.maven.plugin.PluginNotFoundException: org.apache.maven.model.Plugin plugin>;

        return $stack1;
    }
}
