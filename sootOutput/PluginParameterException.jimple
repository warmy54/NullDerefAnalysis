public class PluginParameterException extends org.apache.maven.plugin.PluginConfigurationException
{
    private static final java.lang.String LS;
    private final java.util.List parameters;
    private final org.apache.maven.plugin.descriptor.MojoDescriptor mojo;

    public void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor, java.util.List)
    {
        PluginParameterException this;
        org.apache.maven.plugin.descriptor.MojoDescriptor mojo;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack3;
        java.lang.StringBuilder $stack5, $stack7, $stack8, $stack10, $stack11, $u0;
        java.util.List parameters;
        java.lang.String $stack6, $stack9, $stack12;
        org.apache.maven.plugin.PluginParameterException $r0, $r1;

        this := @this: PluginParameterException;

        mojo := @parameter0: org.apache.maven.plugin.descriptor.MojoDescriptor;

        parameters := @parameter1: java.util.List;

        $stack3 = virtualinvoke mojo.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The parameters ");

        $stack6 = staticinvoke <org.apache.maven.plugin.PluginParameterException: java.lang.String format(java.util.List)>(parameters);

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for goal ");

        $stack9 = virtualinvoke mojo.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getRoleHint()>();

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" are missing or invalid");

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke this.<org.apache.maven.plugin.PluginConfigurationException: void <init>(org.apache.maven.plugin.descriptor.PluginDescriptor,java.lang.String)>($stack3, $stack12);

        $r0 = (org.apache.maven.plugin.PluginParameterException) this;

        $r0.<org.apache.maven.plugin.PluginParameterException: org.apache.maven.plugin.descriptor.MojoDescriptor mojo> = mojo;

        $r1 = (org.apache.maven.plugin.PluginParameterException) this;

        $r1.<org.apache.maven.plugin.PluginParameterException: java.util.List parameters> = parameters;

        return;
    }

    private static java.lang.String format(java.util.List)
    {
        java.lang.StringBuilder $stack4, $stack11, $stack13;
        java.util.List parameters;
        java.lang.String $stack5, $stack12;
        java.util.Iterator l2;
        boolean $stack7;
        java.lang.Object $stack9;
        org.apache.maven.plugin.descriptor.Parameter parameter;
        int $stack10;

        parameters := @parameter0: java.util.List;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>(int)>(128);

        if parameters == null goto label3;

        l2 = interfaceinvoke parameters.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack9 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        parameter = (org.apache.maven.plugin.descriptor.Parameter) $stack9;

        $stack10 = virtualinvoke $stack4.<java.lang.StringBuilder: int length()>();

        if $stack10 <= 0 goto label2;

        virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $stack11 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $stack12 = virtualinvoke parameter.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getName()>();

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        goto label1;

     label3:
        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack5;
    }

    public org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()
    {
        PluginParameterException this;
        org.apache.maven.plugin.descriptor.MojoDescriptor $stack1;
        org.apache.maven.plugin.PluginParameterException $r0;

        this := @this: PluginParameterException;

        $r0 = (org.apache.maven.plugin.PluginParameterException) this;

        $stack1 = $r0.<org.apache.maven.plugin.PluginParameterException: org.apache.maven.plugin.descriptor.MojoDescriptor mojo>;

        return $stack1;
    }

    public java.util.List getParameters()
    {
        PluginParameterException this;
        java.util.List $stack1;
        org.apache.maven.plugin.PluginParameterException $r0;

        this := @this: PluginParameterException;

        $r0 = (org.apache.maven.plugin.PluginParameterException) this;

        $stack1 = $r0.<org.apache.maven.plugin.PluginParameterException: java.util.List parameters>;

        return $stack1;
    }

    private static void decomposeParameterIntoUserInstructions(org.apache.maven.plugin.descriptor.MojoDescriptor, org.apache.maven.plugin.descriptor.Parameter, java.lang.StringBuilder)
    {
        org.apache.maven.plugin.descriptor.Parameter param;
        java.lang.String expression, $stack13, $stack15, $stack18, $stack20, $stack23, $stack44, $stack49, $stack62, $stack64, $stack66, $stack69, $stack71, $stack74, $stack77, $stack84, $stack87, $stack98, $stack102, $stack105, $stack115, $stack118, $stack121, $stack124, $stack131, $stack135, $stack139, $stack27, $stack30, $stack32, $stack35, $stack38, $stack41, $stack53, $stack56, alias#109;
        boolean $stack10, $stack12, isArray, $stack63, isCollection, isMap, isProperties, $stack60, $stack11;
        java.lang.StringBuilder messageBuffer, $stack14, $stack16, $stack17, $stack19, $stack48, $stack65, $stack67, $stack68, $stack70, $stack73, $stack75, $stack76, $stack79, $stack80, $stack81, $stack82, $stack83, $stack85, $stack86, $stack97, $stack101, $stack104, $stack120, $stack123, $stack29, $stack31, $stack34, $stack36, $stack37, $stack40, $stack42, $stack52, $stack54, $stack55;
        org.apache.maven.plugin.descriptor.MojoDescriptor mojo;
        java.lang.Class $stack130, $stack132, $stack134, $stack136, $stack138, $stack140;
        java.lang.ClassNotFoundException $stack156;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack26;

        mojo := @parameter0: org.apache.maven.plugin.descriptor.MojoDescriptor;

        param := @parameter1: org.apache.maven.plugin.descriptor.Parameter;

        messageBuffer := @parameter2: java.lang.StringBuilder;

        expression = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getExpression()>();

        $stack10 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: boolean isEditable()>();

        if $stack10 == 0 goto label13;

        $stack23 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getType()>();

        isArray = virtualinvoke $stack23.<java.lang.String: boolean endsWith(java.lang.String)>("[]");

        isCollection = 0;

        isMap = 0;

        isProperties = 0;

        if isArray != 0 goto label04;

     label01:
        $stack130 = class "Ljava/util/Collection;";

        $stack131 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getType()>();

        $stack132 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($stack131);

        isCollection = virtualinvoke $stack130.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack132);

        $stack134 = class "Ljava/util/Map;";

        $stack135 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getType()>();

        $stack136 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($stack135);

        isMap = virtualinvoke $stack134.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack136);

        $stack138 = class "Ljava/util/Properties;";

        $stack139 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getType()>();

        $stack140 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($stack139);

        isProperties = virtualinvoke $stack138.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($stack140);

     label02:
        goto label04;

     label03:
        $stack156 := @caughtexception;

     label04:
        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Inside the definition for plugin \'");

        $stack26 = virtualinvoke mojo.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        $stack27 = virtualinvoke $stack26.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getArtifactId()>();

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27);

        $stack29 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', specify the following:");

        $stack30 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack31 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30);

        $stack32 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32);

        $stack34 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<configuration>");

        $stack35 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35);

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ...");

        $stack38 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38);

        $stack40 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <");

        $stack41 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getName()>();

        $stack42 = virtualinvoke $stack40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack41);

        virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

        if isArray != 0 goto label05;

        if isCollection == 0 goto label06;

     label05:
        $stack44 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44);

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <item>");

        goto label08;

     label06:
        if isProperties == 0 goto label07;

        $stack118 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack118);

        $stack120 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <property>");

        $stack121 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack121);

        $stack123 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      <name>KEY</name>");

        $stack124 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack124);

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      <value>");

        goto label08;

     label07:
        if isMap == 0 goto label08;

        $stack115 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack115);

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <KEY>");

     label08:
        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VALUE");

        if isArray != 0 goto label09;

        if isCollection == 0 goto label10;

     label09:
        $stack48 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</item>");

        $stack49 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack49);

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        goto label12;

     label10:
        if isProperties == 0 goto label11;

        $stack101 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</value>");

        $stack102 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack102);

        $stack104 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    </property>");

        $stack105 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack105);

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        goto label12;

     label11:
        if isMap == 0 goto label12;

        $stack97 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</KEY>");

        $stack98 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack98);

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

     label12:
        $stack52 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $stack53 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getName()>();

        $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53);

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $stack56 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack56);

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</configuration>");

        alias#109 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getAlias()>();

        $stack60 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(alias#109);

        if $stack60 == 0 goto label13;

        $stack62 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: java.lang.String getName()>();

        $stack63 = virtualinvoke alias#109.<java.lang.String: boolean equals(java.lang.Object)>($stack62);

        if $stack63 != 0 goto label13;

        $stack64 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack65 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack64);

        $stack66 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack67 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack66);

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-OR-");

        $stack69 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack70 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack69);

        $stack71 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack71);

        $stack73 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<configuration>");

        $stack74 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack75 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack74);

        $stack76 = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ...");

        $stack77 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack77);

        $stack79 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <");

        $stack80 = virtualinvoke $stack79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(alias#109);

        $stack81 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">VALUE</");

        $stack82 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(alias#109);

        $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $stack84 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack84);

        $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</configuration>");

        $stack87 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack87);

     label13:
        $stack11 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isEmpty(java.lang.String)>(expression);

        if $stack11 == 0 goto label14;

        virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        goto label15;

     label14:
        $stack12 = virtualinvoke param.<org.apache.maven.plugin.descriptor.Parameter: boolean isEditable()>();

        if $stack12 == 0 goto label15;

        $stack13 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack14 = virtualinvoke messageBuffer.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-OR-");

        $stack18 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

     label15:
        return;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
    }

    public java.lang.String buildDiagnosticMessage()
    {
        PluginParameterException this;
        java.util.List params;
        org.apache.maven.plugin.descriptor.MojoDescriptor mojo;
        java.lang.StringBuilder $stack10, $stack13, $stack14, $stack16, $stack17, $stack25, $stack26, $stack27, $u0;
        org.apache.maven.plugin.descriptor.PluginDescriptor $stack11;
        java.lang.String $stack12, $stack15, $stack18, $stack22, $stack24, $stack29;
        java.util.Iterator it;
        boolean $stack21;
        java.lang.Object $stack23;
        org.apache.maven.plugin.descriptor.Parameter param;
        int idx;
        org.apache.maven.plugin.PluginParameterException $r0, $r1;

        this := @this: PluginParameterException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>(int)>(256);

        $r0 = (org.apache.maven.plugin.PluginParameterException) this;

        params = virtualinvoke $r0.<org.apache.maven.plugin.PluginParameterException: java.util.List getParameters()>();

        $r1 = (org.apache.maven.plugin.PluginParameterException) this;

        mojo = virtualinvoke $r1.<org.apache.maven.plugin.PluginParameterException: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("One or more required plugin parameters are invalid/missing for \'");

        $stack11 = virtualinvoke mojo.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        $stack12 = virtualinvoke $stack11.<org.apache.maven.plugin.descriptor.PluginDescriptor: java.lang.String getGoalPrefix()>();

        $stack13 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $stack15 = virtualinvoke mojo.<org.apache.maven.plugin.descriptor.MojoDescriptor: java.lang.String getGoal()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack18 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        idx = 0;

        it = interfaceinvoke params.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack21 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label2;

        $stack23 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();

        param = (org.apache.maven.plugin.descriptor.Parameter) $stack23;

        $stack24 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        $stack25 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(idx);

        virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        staticinvoke <org.apache.maven.plugin.PluginParameterException: void decomposeParameterIntoUserInstructions(org.apache.maven.plugin.descriptor.MojoDescriptor,org.apache.maven.plugin.descriptor.Parameter,java.lang.StringBuilder)>(mojo, param, $u0);

        $stack29 = <org.apache.maven.plugin.PluginParameterException: java.lang.String LS>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack29);

        idx = idx + 1;

        goto label1;

     label2:
        $stack22 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack22;
    }

    static void <clinit>()
    {
        java.lang.String $stack0;

        $stack0 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        <org.apache.maven.plugin.PluginParameterException: java.lang.String LS> = $stack0;

        return;
    }
}
