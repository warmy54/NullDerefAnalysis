public class PluginParameterExceptionTest extends java.lang.Object
{
    private final java.lang.String LS;

    public void <init>()
    {
        PluginParameterExceptionTest this;
        java.lang.String $stack1;
        org.apache.maven.plugin.PluginParameterExceptionTest $r0;

        this := @this: PluginParameterExceptionTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        $r0 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $r0.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS> = $stack1;

        return;
    }

    public void testMissingRequiredStringArrayTypeParameter()
    {
        java.util.List $stack9;
        java.lang.StringBuilder $stack11, $stack13, $stack15, $stack16, $stack18, $stack20, $stack21, $stack23, $stack24, $stack26, $stack27, $stack29, $stack30, $stack32, $stack33, $stack35, $stack36, $stack38, $u4;
        PluginParameterExceptionTest this;
        java.lang.String $stack12, $stack14, $stack17, $stack19, $stack22, $stack25, $stack28, $stack31, $stack34, $stack37, $stack39, $stack40;
        org.apache.maven.plugin.descriptor.MojoDescriptor $u0;
        org.apache.maven.plugin.descriptor.PluginDescriptor $u1;
        org.apache.maven.plugin.descriptor.Parameter $u2;
        org.apache.maven.plugin.PluginParameterException $u3;
        org.apache.maven.plugin.PluginParameterExceptionTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: PluginParameterExceptionTest;

        $u0 = new org.apache.maven.plugin.descriptor.MojoDescriptor;

        specialinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setGoal(java.lang.String)>("goal");

        $u1 = new org.apache.maven.plugin.descriptor.PluginDescriptor;

        specialinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setGoalPrefix(java.lang.String)>("goalPrefix");

        virtualinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setArtifactId(java.lang.String)>("artifactId");

        virtualinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setPluginDescriptor(org.apache.maven.plugin.descriptor.PluginDescriptor)>($u1);

        $u2 = new org.apache.maven.plugin.descriptor.Parameter;

        specialinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setType(java.lang.String)>("java.lang.String[]");

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setName(java.lang.String)>("toAddresses");

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setRequired(boolean)>(1);

        $u3 = new org.apache.maven.plugin.PluginParameterException;

        $stack9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($u2);

        specialinvoke $u3.<org.apache.maven.plugin.PluginParameterException: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor,java.util.List)>($u0, $stack9);

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("One or more required plugin parameters are invalid/missing for \'goalPrefix:goal\'");

        $r0 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack12 = $r0.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $r1 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack14 = $r1.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[0] Inside the definition for plugin \'artifactId\', specify the following:");

        $r2 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack17 = $r2.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $r3 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack19 = $r3.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<configuration>");

        $r4 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack22 = $r4.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ...");

        $r5 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack25 = $r5.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <toAddresses>");

        $r6 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack28 = $r6.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <item>VALUE</item>");

        $r7 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack31 = $r7.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  </toAddresses>");

        $r8 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack34 = $r8.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</configuration>.");

        $r9 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack37 = $r9.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack40 = virtualinvoke $u3.<org.apache.maven.plugin.PluginParameterException: java.lang.String buildDiagnosticMessage()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack39, $stack40);

        return;
    }

    public void testMissingRequiredCollectionTypeParameter()
    {
        java.util.List $stack9;
        java.lang.StringBuilder $stack11, $stack13, $stack15, $stack16, $stack18, $stack20, $stack21, $stack23, $stack24, $stack26, $stack27, $stack29, $stack30, $stack32, $stack33, $stack35, $stack36, $stack38, $u4;
        PluginParameterExceptionTest this;
        java.lang.String $stack12, $stack14, $stack17, $stack19, $stack22, $stack25, $stack28, $stack31, $stack34, $stack37, $stack39, $stack40;
        org.apache.maven.plugin.descriptor.MojoDescriptor $u0;
        org.apache.maven.plugin.descriptor.PluginDescriptor $u1;
        org.apache.maven.plugin.descriptor.Parameter $u2;
        org.apache.maven.plugin.PluginParameterException $u3;
        org.apache.maven.plugin.PluginParameterExceptionTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: PluginParameterExceptionTest;

        $u0 = new org.apache.maven.plugin.descriptor.MojoDescriptor;

        specialinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setGoal(java.lang.String)>("goal");

        $u1 = new org.apache.maven.plugin.descriptor.PluginDescriptor;

        specialinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setGoalPrefix(java.lang.String)>("goalPrefix");

        virtualinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setArtifactId(java.lang.String)>("artifactId");

        virtualinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setPluginDescriptor(org.apache.maven.plugin.descriptor.PluginDescriptor)>($u1);

        $u2 = new org.apache.maven.plugin.descriptor.Parameter;

        specialinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setType(java.lang.String)>("java.util.List");

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setName(java.lang.String)>("toAddresses");

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setRequired(boolean)>(1);

        $u3 = new org.apache.maven.plugin.PluginParameterException;

        $stack9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($u2);

        specialinvoke $u3.<org.apache.maven.plugin.PluginParameterException: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor,java.util.List)>($u0, $stack9);

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("One or more required plugin parameters are invalid/missing for \'goalPrefix:goal\'");

        $r0 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack12 = $r0.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $r1 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack14 = $r1.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[0] Inside the definition for plugin \'artifactId\', specify the following:");

        $r2 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack17 = $r2.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $r3 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack19 = $r3.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<configuration>");

        $r4 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack22 = $r4.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ...");

        $r5 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack25 = $r5.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <toAddresses>");

        $r6 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack28 = $r6.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <item>VALUE</item>");

        $r7 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack31 = $r7.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  </toAddresses>");

        $r8 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack34 = $r8.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</configuration>.");

        $r9 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack37 = $r9.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack40 = virtualinvoke $u3.<org.apache.maven.plugin.PluginParameterException: java.lang.String buildDiagnosticMessage()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack39, $stack40);

        return;
    }

    public void testMissingRequiredMapTypeParameter()
    {
        java.util.List $stack9;
        java.lang.StringBuilder $stack11, $stack13, $stack15, $stack16, $stack18, $stack20, $stack21, $stack23, $stack24, $stack26, $stack27, $stack29, $stack30, $stack32, $stack33, $stack35, $stack36, $stack38, $u4;
        PluginParameterExceptionTest this;
        java.lang.String $stack12, $stack14, $stack17, $stack19, $stack22, $stack25, $stack28, $stack31, $stack34, $stack37, $stack39, $stack40;
        org.apache.maven.plugin.descriptor.MojoDescriptor $u0;
        org.apache.maven.plugin.descriptor.PluginDescriptor $u1;
        org.apache.maven.plugin.descriptor.Parameter $u2;
        org.apache.maven.plugin.PluginParameterException $u3;
        org.apache.maven.plugin.PluginParameterExceptionTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: PluginParameterExceptionTest;

        $u0 = new org.apache.maven.plugin.descriptor.MojoDescriptor;

        specialinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setGoal(java.lang.String)>("goal");

        $u1 = new org.apache.maven.plugin.descriptor.PluginDescriptor;

        specialinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setGoalPrefix(java.lang.String)>("goalPrefix");

        virtualinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setArtifactId(java.lang.String)>("artifactId");

        virtualinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setPluginDescriptor(org.apache.maven.plugin.descriptor.PluginDescriptor)>($u1);

        $u2 = new org.apache.maven.plugin.descriptor.Parameter;

        specialinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setType(java.lang.String)>("java.util.Map");

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setName(java.lang.String)>("toAddresses");

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setRequired(boolean)>(1);

        $u3 = new org.apache.maven.plugin.PluginParameterException;

        $stack9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($u2);

        specialinvoke $u3.<org.apache.maven.plugin.PluginParameterException: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor,java.util.List)>($u0, $stack9);

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("One or more required plugin parameters are invalid/missing for \'goalPrefix:goal\'");

        $r0 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack12 = $r0.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $r1 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack14 = $r1.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[0] Inside the definition for plugin \'artifactId\', specify the following:");

        $r2 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack17 = $r2.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $r3 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack19 = $r3.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<configuration>");

        $r4 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack22 = $r4.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ...");

        $r5 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack25 = $r5.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <toAddresses>");

        $r6 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack28 = $r6.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <KEY>VALUE</KEY>");

        $r7 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack31 = $r7.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  </toAddresses>");

        $r8 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack34 = $r8.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</configuration>.");

        $r9 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack37 = $r9.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack40 = virtualinvoke $u3.<org.apache.maven.plugin.PluginParameterException: java.lang.String buildDiagnosticMessage()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack39, $stack40);

        return;
    }

    public void testMissingRequiredPropertiesTypeParameter()
    {
        java.util.List $stack9;
        java.lang.StringBuilder $stack11, $stack13, $stack15, $stack16, $stack18, $stack20, $stack21, $stack23, $stack24, $stack26, $stack27, $stack29, $stack30, $stack32, $stack33, $stack35, $stack36, $stack38, $stack39, $stack41, $stack42, $stack44, $stack45, $stack47, $u4;
        PluginParameterExceptionTest this;
        java.lang.String $stack12, $stack14, $stack17, $stack19, $stack22, $stack25, $stack28, $stack31, $stack34, $stack37, $stack40, $stack43, $stack46, $stack48, $stack49;
        org.apache.maven.plugin.descriptor.MojoDescriptor $u0;
        org.apache.maven.plugin.descriptor.PluginDescriptor $u1;
        org.apache.maven.plugin.descriptor.Parameter $u2;
        org.apache.maven.plugin.PluginParameterException $u3;
        org.apache.maven.plugin.PluginParameterExceptionTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        this := @this: PluginParameterExceptionTest;

        $u0 = new org.apache.maven.plugin.descriptor.MojoDescriptor;

        specialinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setGoal(java.lang.String)>("goal");

        $u1 = new org.apache.maven.plugin.descriptor.PluginDescriptor;

        specialinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setGoalPrefix(java.lang.String)>("goalPrefix");

        virtualinvoke $u1.<org.apache.maven.plugin.descriptor.PluginDescriptor: void setArtifactId(java.lang.String)>("artifactId");

        virtualinvoke $u0.<org.apache.maven.plugin.descriptor.MojoDescriptor: void setPluginDescriptor(org.apache.maven.plugin.descriptor.PluginDescriptor)>($u1);

        $u2 = new org.apache.maven.plugin.descriptor.Parameter;

        specialinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setType(java.lang.String)>("java.util.Properties");

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setName(java.lang.String)>("toAddresses");

        virtualinvoke $u2.<org.apache.maven.plugin.descriptor.Parameter: void setRequired(boolean)>(1);

        $u3 = new org.apache.maven.plugin.PluginParameterException;

        $stack9 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($u2);

        specialinvoke $u3.<org.apache.maven.plugin.PluginParameterException: void <init>(org.apache.maven.plugin.descriptor.MojoDescriptor,java.util.List)>($u0, $stack9);

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack11 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("One or more required plugin parameters are invalid/missing for \'goalPrefix:goal\'");

        $r0 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack12 = $r0.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $r1 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack14 = $r1.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[0] Inside the definition for plugin \'artifactId\', specify the following:");

        $r2 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack17 = $r2.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $r3 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack19 = $r3.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<configuration>");

        $r4 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack22 = $r4.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ...");

        $r5 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack25 = $r5.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack26 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack25);

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <toAddresses>");

        $r6 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack28 = $r6.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack29 = virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28);

        $stack30 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <property>");

        $r7 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack31 = $r7.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack32 = virtualinvoke $stack30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack31);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      <name>KEY</name>");

        $r8 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack34 = $r8.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack35 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("      <value>VALUE</value>");

        $r9 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack37 = $r9.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack38 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        $stack39 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    </property>");

        $r10 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack40 = $r10.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack41 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack40);

        $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  </toAddresses>");

        $r11 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack43 = $r11.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack44 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack43);

        $stack45 = virtualinvoke $stack44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</configuration>.");

        $r12 = (org.apache.maven.plugin.PluginParameterExceptionTest) this;

        $stack46 = $r12.<org.apache.maven.plugin.PluginParameterExceptionTest: java.lang.String LS>;

        $stack47 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack46);

        $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack49 = virtualinvoke $u3.<org.apache.maven.plugin.PluginParameterException: java.lang.String buildDiagnosticMessage()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>($stack48, $stack49);

        return;
    }
}
