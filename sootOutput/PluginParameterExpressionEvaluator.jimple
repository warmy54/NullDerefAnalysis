public class PluginParameterExpressionEvaluator extends java.lang.Object implements org.codehaus.plexus.component.configurator.expression.TypeAwareExpressionEvaluator
{
    private org.apache.maven.execution.MavenSession session;
    private org.apache.maven.plugin.MojoExecution mojoExecution;
    private org.apache.maven.project.MavenProject project;
    private java.lang.String basedir;
    private java.util.Properties properties;

    public void <init>(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.MojoExecution, org.apache.maven.project.path.PathTranslator, org.codehaus.plexus.logging.Logger, org.apache.maven.project.MavenProject, java.util.Properties)
    {
        PluginParameterExpressionEvaluator this;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.project.path.PathTranslator pathTranslator;
        org.codehaus.plexus.logging.Logger logger;
        org.apache.maven.project.MavenProject project;
        java.util.Properties properties;
        org.apache.maven.plugin.PluginParameterExpressionEvaluator $r0;

        this := @this: PluginParameterExpressionEvaluator;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        mojoExecution := @parameter1: org.apache.maven.plugin.MojoExecution;

        pathTranslator := @parameter2: org.apache.maven.project.path.PathTranslator;

        logger := @parameter3: org.codehaus.plexus.logging.Logger;

        project := @parameter4: org.apache.maven.project.MavenProject;

        properties := @parameter5: java.util.Properties;

        $r0 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        specialinvoke $r0.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: void <init>(org.apache.maven.execution.MavenSession,org.apache.maven.plugin.MojoExecution)>(session, mojoExecution);

        return;
    }

    public void <init>(org.apache.maven.execution.MavenSession)
    {
        PluginParameterExpressionEvaluator this;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.plugin.PluginParameterExpressionEvaluator $r0;

        this := @this: PluginParameterExpressionEvaluator;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        $r0 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        specialinvoke $r0.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: void <init>(org.apache.maven.execution.MavenSession,org.apache.maven.plugin.MojoExecution)>(session, null);

        return;
    }

    public void <init>(org.apache.maven.execution.MavenSession, org.apache.maven.plugin.MojoExecution)
    {
        PluginParameterExpressionEvaluator this;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.plugin.MojoExecution mojoExecution;
        org.apache.maven.project.MavenProject $stack6, $stack11, $stack17;
        java.util.Properties $stack7, $stack8, $stack9, $stack10, $u0;
        java.io.File projectFile;
        java.lang.String basedir;
        org.apache.maven.plugin.PluginParameterExpressionEvaluator $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: PluginParameterExpressionEvaluator;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        mojoExecution := @parameter1: org.apache.maven.plugin.MojoExecution;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $r0.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session> = session;

        $r1 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $r1.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.plugin.MojoExecution mojoExecution> = mojoExecution;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        $r2 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $r2.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.util.Properties properties> = $u0;

        $stack6 = virtualinvoke session.<org.apache.maven.execution.MavenSession: org.apache.maven.project.MavenProject getCurrentProject()>();

        $r3 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $r3.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project> = $stack6;

        $r4 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack7 = $r4.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.util.Properties properties>;

        $stack8 = virtualinvoke session.<org.apache.maven.execution.MavenSession: java.util.Properties getUserProperties()>();

        virtualinvoke $stack7.<java.util.Properties: void putAll(java.util.Map)>($stack8);

        $r5 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack9 = $r5.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.util.Properties properties>;

        $stack10 = virtualinvoke session.<org.apache.maven.execution.MavenSession: java.util.Properties getSystemProperties()>();

        virtualinvoke $stack9.<java.util.Properties: void putAll(java.util.Map)>($stack10);

        basedir = null;

        $r6 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack11 = $r6.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project>;

        if $stack11 == null goto label1;

        $r7 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack17 = $r7.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project>;

        projectFile = virtualinvoke $stack17.<org.apache.maven.project.MavenProject: java.io.File getBasedir()>();

        if projectFile == null goto label1;

        basedir = virtualinvoke projectFile.<java.io.File: java.lang.String getAbsolutePath()>();

     label1:
        if basedir != null goto label2;

        basedir = virtualinvoke session.<org.apache.maven.execution.MavenSession: java.lang.String getExecutionRootDirectory()>();

     label2:
        if basedir != null goto label3;

        basedir = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

     label3:
        $r8 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $r8.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.String basedir> = basedir;

        return;
    }

    public java.lang.Object evaluate(java.lang.String) throws org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException
    {
        PluginParameterExpressionEvaluator this;
        java.lang.String expr;
        java.lang.Object $stack2;
        org.apache.maven.plugin.PluginParameterExpressionEvaluator $r0;

        this := @this: PluginParameterExpressionEvaluator;

        expr := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.Object evaluate(java.lang.String,java.lang.Class)>(expr, null);

        return $stack2;
    }

    public java.lang.Object evaluate(java.lang.String, java.lang.Class) throws org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException
    {
        java.lang.String expr, expression, $stack13, $stack15, $stack18, $stack20, $stack22, $stack24, $stack28, $stack34, $stack37, $stack39, $stack62, $stack71, $stack74, $stack80, $stack82, $stack86, $stack96, $stack103, $stack109, $stack114, $stack122, $stack135, $stack143, $stack150, $stack156, $stack163, $stack195, $stack203, $stack209, $stack215, $stack221, $stack227, retVal, $stack169, subResult#50, lastIndex#88;
        PluginParameterExpressionEvaluator this;
        boolean $stack10, $stack14, $stack16, $stack17, $stack19, $stack21, $stack23, $stack25, $stack26, $stack55, $stack56, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack72, $stack73, $stack75, $stack76, $stack149, $stack31;
        org.apache.maven.plugin.MojoExecution $stack11, $stack115, $stack118;
        org.apache.maven.project.MavenProject $stack29, $stack45, $stack46, $stack48, $stack58, $stack130;
        java.lang.StringBuilder $stack38, $stack41, $stack61, $stack63, $stack81, $stack83, $stack95, $stack97, $stack108, $stack110, $stack121, $stack123, $stack142, $stack144, $stack159, $stack160, $stack164, $stack174, $stack175, $stack192, $stack196, $stack201, $stack202, $stack207, $stack208, $stack213, $stack214, $stack219, $stack220, $stack225, $stack226, $stack167, $stack171, $u0, $u1, $u2, $u3, $u4, $u5, $u7, $u8, $u10, $u11, $u13, $u14, $u16, $u17, $u19, $u20;
        java.lang.Object $stack40, value, subResult, $stack170;
        java.util.Properties $stack43, $stack47, $stack49, $stack51;
        java.lang.Class type;
        org.apache.maven.execution.MavenSession $stack87, $stack91, $stack99, $stack125, $stack132, $stack136, $stack139, $stack146;
        org.apache.maven.settings.Settings $stack88, $stack92;
        int $stack155, $stack161, $stack162, $stack183, $stack193, $stack194, index, lastIndex, $stack168, retVal#89;
        char $stack184;
        java.lang.Exception $stack198, $stack204, $stack210, $stack216, $stack222;
        org.apache.maven.plugin.descriptor.MojoDescriptor index#35;
        org.apache.maven.plugin.descriptor.PluginDescriptor retVal#49;
        org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException $u6, $u9, $u12, $u15, $u18;
        org.apache.maven.plugin.PluginParameterExpressionEvaluator $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        java.lang.Throwable $r8, $r15, $r20, $r21, $r25;

        this := @this: PluginParameterExpressionEvaluator;

        expr := @parameter0: java.lang.String;

        type := @parameter1: java.lang.Class;

        value = null;

        if expr != null goto label01;

        return null;

     label01:
        $r0 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        expression = specialinvoke $r0.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.String stripTokens(java.lang.String)>(expr);

        $stack10 = virtualinvoke expression.<java.lang.String: boolean equals(java.lang.Object)>(expr);

        if $stack10 == 0 goto label07;

        index = virtualinvoke expr.<java.lang.String: int indexOf(java.lang.String)>("${");

        if index < 0 goto label05;

        lastIndex = virtualinvoke expr.<java.lang.String: int indexOf(int,int)>(125, index);

        if lastIndex < 0 goto label05;

        retVal = virtualinvoke expr.<java.lang.String: java.lang.String substring(int,int)>(0, index);

        if index <= 0 goto label02;

        $stack183 = index - 1;

        $stack184 = virtualinvoke expr.<java.lang.String: char charAt(int)>($stack183);

        if $stack184 != 36 goto label02;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack192 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retVal);

        $stack194 = index + 1;

        $stack193 = lastIndex + 1;

        $stack195 = virtualinvoke expr.<java.lang.String: java.lang.String substring(int,int)>($stack194, $stack193);

        $stack196 = virtualinvoke $stack192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack195);

        retVal = virtualinvoke $stack196.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label02:
        $stack155 = lastIndex + 1;

        $stack156 = virtualinvoke expr.<java.lang.String: java.lang.String substring(int,int)>(index, $stack155);

        $r1 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        subResult = virtualinvoke $r1.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.Object evaluate(java.lang.String)>($stack156);

        if subResult == null goto label03;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack174 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retVal);

        $stack175 = virtualinvoke $stack174.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(subResult);

        retVal = virtualinvoke $stack175.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label03:
        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack159 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retVal);

        $stack160 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        $stack162 = index + 1;

        $stack161 = lastIndex + 1;

        $stack163 = virtualinvoke expr.<java.lang.String: java.lang.String substring(int,int)>($stack162, $stack161);

        $stack164 = virtualinvoke $stack160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack163);

        retVal = virtualinvoke $stack164.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack167 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(retVal);

        $stack168 = lastIndex + 1;

        $stack169 = virtualinvoke expr.<java.lang.String: java.lang.String substring(int)>($stack168);

        $r2 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack170 = virtualinvoke $r2.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.Object evaluate(java.lang.String)>($stack169);

        $stack171 = virtualinvoke $stack167.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack170);

        retVal = virtualinvoke $stack171.<java.lang.StringBuilder: java.lang.String toString()>();

        return retVal;

     label05:
        $stack149 = virtualinvoke expression.<java.lang.String: boolean contains(java.lang.CharSequence)>("$$");

        if $stack149 == 0 goto label06;

        $stack150 = virtualinvoke expression.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\$\\$", "\\$");

        return $stack150;

     label06:
        return expression;

     label07:
        $r3 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack11 = $r3.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.plugin.MojoExecution mojoExecution>;

        index#35 = virtualinvoke $stack11.<org.apache.maven.plugin.MojoExecution: org.apache.maven.plugin.descriptor.MojoDescriptor getMojoDescriptor()>();

        $stack13 = "localRepository";

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>(expression);

        if $stack14 == 0 goto label08;

        $r4 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack146 = $r4.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session>;

        value = virtualinvoke $stack146.<org.apache.maven.execution.MavenSession: org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository()>();

        goto label44;

     label08:
        $stack15 = "session";

        $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>(expression);

        if $stack16 == 0 goto label09;

        $r5 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        value = $r5.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session>;

        goto label44;

     label09:
        $stack17 = virtualinvoke expression.<java.lang.String: boolean startsWith(java.lang.String)>("session");

        if $stack17 == 0 goto label14;

     label10:
        lastIndex = virtualinvoke expression.<java.lang.String: int indexOf(int)>(47);

        if lastIndex <= 0 goto label11;

        retVal = virtualinvoke expression.<java.lang.String: java.lang.String substring(int,int)>(1, lastIndex);

        $r6 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack139 = $r6.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session>;

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>(retVal, $stack139);

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack142 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value);

        $stack143 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(lastIndex);

        $stack144 = virtualinvoke $stack142.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack143);

        value = virtualinvoke $stack144.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label11:
        $stack135 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(1);

        $r7 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack136 = $r7.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session>;

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>($stack135, $stack136);

     label12:
        goto label44;

     label13:
        $stack222 := @caughtexception;

        $u6 = new org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack225 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error evaluating plugin parameter expression: ");

        $stack226 = virtualinvoke $stack225.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expression);

        $stack227 = virtualinvoke $stack226.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u6.<org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException: void <init>(java.lang.String,java.lang.Throwable)>($stack227, $stack222);

        $r8 = (java.lang.Throwable) $u6;

        throw $r8;

     label14:
        $stack18 = "reactorProjects";

        $stack19 = virtualinvoke $stack18.<java.lang.String: boolean equals(java.lang.Object)>(expression);

        if $stack19 == 0 goto label15;

        $r9 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack132 = $r9.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session>;

        value = virtualinvoke $stack132.<org.apache.maven.execution.MavenSession: java.util.List getProjects()>();

        goto label44;

     label15:
        $stack20 = "mojoExecution";

        $stack21 = virtualinvoke $stack20.<java.lang.String: boolean equals(java.lang.Object)>(expression);

        if $stack21 == 0 goto label16;

        $r10 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        value = $r10.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.plugin.MojoExecution mojoExecution>;

        goto label44;

     label16:
        $stack22 = "project";

        $stack23 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>(expression);

        if $stack23 == 0 goto label17;

        $r11 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        value = $r11.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project>;

        goto label44;

     label17:
        $stack24 = "executedProject";

        $stack25 = virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>(expression);

        if $stack25 == 0 goto label18;

        $r12 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack130 = $r12.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project>;

        value = virtualinvoke $stack130.<org.apache.maven.project.MavenProject: org.apache.maven.project.MavenProject getExecutionProject()>();

        goto label44;

     label18:
        $stack26 = virtualinvoke expression.<java.lang.String: boolean startsWith(java.lang.String)>("project");

        if $stack26 != 0 goto label19;

        $stack65 = virtualinvoke expression.<java.lang.String: boolean startsWith(java.lang.String)>("pom");

        if $stack65 == 0 goto label23;

     label19:
        lastIndex = virtualinvoke expression.<java.lang.String: int indexOf(int)>(47);

        if lastIndex <= 0 goto label20;

        retVal = virtualinvoke expression.<java.lang.String: java.lang.String substring(int,int)>(0, lastIndex);

        $r13 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack58 = $r13.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project>;

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>(retVal, $stack58);

        $u7 = new java.lang.StringBuilder;

        specialinvoke $u7.<java.lang.StringBuilder: void <init>()>();

        $stack61 = virtualinvoke $u7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value);

        $stack62 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(lastIndex);

        $stack63 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack62);

        value = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label21;

     label20:
        $stack28 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(1);

        $r14 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack29 = $r14.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project>;

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>($stack28, $stack29);

     label21:
        goto label44;

     label22:
        $stack216 := @caughtexception;

        $u9 = new org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;

        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $stack219 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error evaluating plugin parameter expression: ");

        $stack220 = virtualinvoke $stack219.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expression);

        $stack221 = virtualinvoke $stack220.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u9.<org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException: void <init>(java.lang.String,java.lang.Throwable)>($stack221, $stack216);

        $r15 = (java.lang.Throwable) $u9;

        throw $r15;

     label23:
        $stack66 = virtualinvoke expression.<java.lang.String: boolean equals(java.lang.Object)>("repositorySystemSession");

        if $stack66 == 0 goto label24;

        $r16 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack125 = $r16.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session>;

        value = virtualinvoke $stack125.<org.apache.maven.execution.MavenSession: org.eclipse.aether.RepositorySystemSession getRepositorySession()>();

        goto label44;

     label24:
        $stack67 = virtualinvoke expression.<java.lang.String: boolean equals(java.lang.Object)>("mojo");

        if $stack67 == 0 goto label25;

        $r17 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        value = $r17.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.plugin.MojoExecution mojoExecution>;

        goto label44;

     label25:
        $stack68 = virtualinvoke expression.<java.lang.String: boolean startsWith(java.lang.String)>("mojo");

        if $stack68 == 0 goto label30;

     label26:
        lastIndex = virtualinvoke expression.<java.lang.String: int indexOf(int)>(47);

        if lastIndex <= 0 goto label27;

        retVal = virtualinvoke expression.<java.lang.String: java.lang.String substring(int,int)>(1, lastIndex);

        $r18 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack118 = $r18.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.plugin.MojoExecution mojoExecution>;

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>(retVal, $stack118);

        $u10 = new java.lang.StringBuilder;

        specialinvoke $u10.<java.lang.StringBuilder: void <init>()>();

        $stack121 = virtualinvoke $u10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value);

        $stack122 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(lastIndex);

        $stack123 = virtualinvoke $stack121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack122);

        value = virtualinvoke $stack123.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label28;

     label27:
        $stack114 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(1);

        $r19 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack115 = $r19.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.plugin.MojoExecution mojoExecution>;

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>($stack114, $stack115);

     label28:
        goto label44;

     label29:
        $stack210 := @caughtexception;

        $u12 = new org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;

        $u11 = new java.lang.StringBuilder;

        specialinvoke $u11.<java.lang.StringBuilder: void <init>()>();

        $stack213 = virtualinvoke $u11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error evaluating plugin parameter expression: ");

        $stack214 = virtualinvoke $stack213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expression);

        $stack215 = virtualinvoke $stack214.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u12.<org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException: void <init>(java.lang.String,java.lang.Throwable)>($stack215, $stack210);

        $r20 = (java.lang.Throwable) $u12;

        throw $r20;

     label30:
        $stack69 = virtualinvoke expression.<java.lang.String: boolean equals(java.lang.Object)>("plugin");

        if $stack69 == 0 goto label31;

        value = virtualinvoke index#35.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        goto label44;

     label31:
        $stack70 = virtualinvoke expression.<java.lang.String: boolean startsWith(java.lang.String)>("plugin");

        if $stack70 == 0 goto label36;

     label32:
        lastIndex = virtualinvoke expression.<java.lang.String: int indexOf(int)>(47);

        retVal#49 = virtualinvoke index#35.<org.apache.maven.plugin.descriptor.MojoDescriptor: org.apache.maven.plugin.descriptor.PluginDescriptor getPluginDescriptor()>();

        if lastIndex <= 0 goto label33;

        subResult#50 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int,int)>(1, lastIndex);

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>(subResult#50, retVal#49);

        $u13 = new java.lang.StringBuilder;

        specialinvoke $u13.<java.lang.StringBuilder: void <init>()>();

        $stack108 = virtualinvoke $u13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value);

        $stack109 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(lastIndex);

        $stack110 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack109);

        value = virtualinvoke $stack110.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label34;

     label33:
        $stack103 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(1);

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>($stack103, retVal#49);

     label34:
        goto label44;

     label35:
        $stack204 := @caughtexception;

        $u15 = new org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;

        $u14 = new java.lang.StringBuilder;

        specialinvoke $u14.<java.lang.StringBuilder: void <init>()>();

        $stack207 = virtualinvoke $u14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error evaluating plugin parameter expression: ");

        $stack208 = virtualinvoke $stack207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expression);

        $stack209 = virtualinvoke $stack208.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u15.<org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException: void <init>(java.lang.String,java.lang.Throwable)>($stack209, $stack204);

        $r21 = (java.lang.Throwable) $u15;

        throw $r21;

     label36:
        $stack71 = "settings";

        $stack72 = virtualinvoke $stack71.<java.lang.String: boolean equals(java.lang.Object)>(expression);

        if $stack72 == 0 goto label37;

        $r22 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack99 = $r22.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session>;

        value = virtualinvoke $stack99.<org.apache.maven.execution.MavenSession: org.apache.maven.settings.Settings getSettings()>();

        goto label44;

     label37:
        $stack73 = virtualinvoke expression.<java.lang.String: boolean startsWith(java.lang.String)>("settings");

        if $stack73 == 0 goto label42;

     label38:
        lastIndex = virtualinvoke expression.<java.lang.String: int indexOf(int)>(47);

        if lastIndex <= 0 goto label39;

        retVal = virtualinvoke expression.<java.lang.String: java.lang.String substring(int,int)>(1, lastIndex);

        $r23 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack91 = $r23.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session>;

        $stack92 = virtualinvoke $stack91.<org.apache.maven.execution.MavenSession: org.apache.maven.settings.Settings getSettings()>();

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>(retVal, $stack92);

        $u16 = new java.lang.StringBuilder;

        specialinvoke $u16.<java.lang.StringBuilder: void <init>()>();

        $stack95 = virtualinvoke $u16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(value);

        $stack96 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(lastIndex);

        $stack97 = virtualinvoke $stack95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack96);

        value = virtualinvoke $stack97.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label40;

     label39:
        $stack86 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(1);

        $r24 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack87 = $r24.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.execution.MavenSession session>;

        $stack88 = virtualinvoke $stack87.<org.apache.maven.execution.MavenSession: org.apache.maven.settings.Settings getSettings()>();

        value = staticinvoke <org.codehaus.plexus.util.introspection.ReflectionValueExtractor: java.lang.Object evaluate(java.lang.String,java.lang.Object)>($stack86, $stack88);

     label40:
        goto label44;

     label41:
        $stack198 := @caughtexception;

        $u18 = new org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException;

        $u17 = new java.lang.StringBuilder;

        specialinvoke $u17.<java.lang.StringBuilder: void <init>()>();

        $stack201 = virtualinvoke $u17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error evaluating plugin parameter expression: ");

        $stack202 = virtualinvoke $stack201.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(expression);

        $stack203 = virtualinvoke $stack202.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u18.<org.codehaus.plexus.component.configurator.expression.ExpressionEvaluationException: void <init>(java.lang.String,java.lang.Throwable)>($stack203, $stack198);

        $r25 = (java.lang.Throwable) $u18;

        throw $r25;

     label42:
        $stack74 = "basedir";

        $stack75 = virtualinvoke $stack74.<java.lang.String: boolean equals(java.lang.Object)>(expression);

        if $stack75 == 0 goto label43;

        $r26 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        value = $r26.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.String basedir>;

        goto label44;

     label43:
        $stack76 = virtualinvoke expression.<java.lang.String: boolean startsWith(java.lang.String)>("basedir");

        if $stack76 == 0 goto label44;

        lastIndex = virtualinvoke expression.<java.lang.String: int indexOf(int)>(47);

        if lastIndex <= 0 goto label44;

        $u19 = new java.lang.StringBuilder;

        specialinvoke $u19.<java.lang.StringBuilder: void <init>()>();

        $r27 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack80 = $r27.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.String basedir>;

        $stack81 = virtualinvoke $u19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack80);

        $stack82 = virtualinvoke expression.<java.lang.String: java.lang.String substring(int)>(lastIndex);

        $stack83 = virtualinvoke $stack81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack82);

        value = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.String toString()>();

     label44:
        if value == null goto label45;

        if type == null goto label45;

        $stack55 = value instanceof java.lang.String;

        if $stack55 != 0 goto label45;

        $stack56 = staticinvoke <org.apache.maven.plugin.PluginParameterExpressionEvaluator: boolean isTypeCompatible(java.lang.Class,java.lang.Object)>(type, value);

        if $stack56 != 0 goto label45;

        value = null;

     label45:
        if value != null goto label47;

        $r28 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack43 = $r28.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.util.Properties properties>;

        if $stack43 == null goto label46;

        $r29 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack51 = $r29.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.util.Properties properties>;

        value = virtualinvoke $stack51.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(expression);

     label46:
        if value != null goto label47;

        $r30 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack45 = $r30.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project>;

        if $stack45 == null goto label47;

        $r31 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack46 = $r31.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project>;

        $stack47 = virtualinvoke $stack46.<org.apache.maven.project.MavenProject: java.util.Properties getProperties()>();

        if $stack47 == null goto label47;

        $r32 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack48 = $r32.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: org.apache.maven.project.MavenProject project>;

        $stack49 = virtualinvoke $stack48.<org.apache.maven.project.MavenProject: java.util.Properties getProperties()>();

        value = virtualinvoke $stack49.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(expression);

     label47:
        $stack31 = value instanceof java.lang.String;

        if $stack31 == 0 goto label49;

        lastIndex#88 = (java.lang.String) value;

        retVal#89 = virtualinvoke lastIndex#88.<java.lang.String: int indexOf(java.lang.String)>("${");

        if retVal#89 < 0 goto label49;

        if retVal#89 <= 0 goto label48;

        $u20 = new java.lang.StringBuilder;

        specialinvoke $u20.<java.lang.StringBuilder: void <init>()>();

        $stack37 = virtualinvoke lastIndex#88.<java.lang.String: java.lang.String substring(int,int)>(0, retVal#89);

        $stack38 = virtualinvoke $u20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack37);

        $stack39 = virtualinvoke lastIndex#88.<java.lang.String: java.lang.String substring(int)>(retVal#89);

        $r33 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack40 = virtualinvoke $r33.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.Object evaluate(java.lang.String)>($stack39);

        $stack41 = virtualinvoke $stack38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack40);

        value = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label49;

     label48:
        $stack34 = virtualinvoke lastIndex#88.<java.lang.String: java.lang.String substring(int)>(retVal#89);

        $r34 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        value = virtualinvoke $r34.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.Object evaluate(java.lang.String)>($stack34);

     label49:
        return value;

        catch java.lang.Exception from label10 to label12 with label13;
        catch java.lang.Exception from label19 to label21 with label22;
        catch java.lang.Exception from label26 to label28 with label29;
        catch java.lang.Exception from label32 to label34 with label35;
        catch java.lang.Exception from label38 to label40 with label41;
    }

    private static boolean isTypeCompatible(java.lang.Class, java.lang.Object)
    {
        java.lang.Class type, $stack4;
        java.lang.Object value;
        boolean $stack2, $stack3, $stack6, $stack9, $stack7;
        java.lang.String $stack5, $stack8;

        type := @parameter0: java.lang.Class;

        value := @parameter1: java.lang.Object;

        $stack2 = virtualinvoke type.<java.lang.Class: boolean isInstance(java.lang.Object)>(value);

        if $stack2 == 0 goto label1;

        return 1;

     label1:
        $stack3 = virtualinvoke type.<java.lang.Class: boolean isPrimitive()>();

        if $stack3 != 0 goto label2;

        $stack8 = virtualinvoke type.<java.lang.Class: java.lang.String getName()>();

        $stack9 = virtualinvoke $stack8.<java.lang.String: boolean startsWith(java.lang.String)>("java.lang.");

        if $stack9 == 0 goto label3;

     label2:
        $stack4 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>();

        $stack5 = virtualinvoke $stack4.<java.lang.Class: java.lang.String getName()>();

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean startsWith(java.lang.String)>("java.lang.");

        if $stack6 == 0 goto label3;

        $stack7 = 1;

        goto label4;

     label3:
        $stack7 = 0;

     label4:
        return $stack7;
    }

    private java.lang.String stripTokens(java.lang.String)
    {
        boolean $stack2;
        int $stack3, $stack4, $stack5, $stack8, $stack9;
        PluginParameterExpressionEvaluator this;
        java.lang.String expr;

        this := @this: PluginParameterExpressionEvaluator;

        expr := @parameter0: java.lang.String;

        $stack2 = virtualinvoke expr.<java.lang.String: boolean startsWith(java.lang.String)>("${");

        if $stack2 == 0 goto label1;

        $stack3 = virtualinvoke expr.<java.lang.String: int indexOf(int)>(125);

        $stack4 = virtualinvoke expr.<java.lang.String: int length()>();

        $stack5 = $stack4 - 1;

        if $stack3 != $stack5 goto label1;

        $stack8 = virtualinvoke expr.<java.lang.String: int length()>();

        $stack9 = $stack8 - 1;

        expr = virtualinvoke expr.<java.lang.String: java.lang.String substring(int,int)>(2, $stack9);

     label1:
        return expr;
    }

    public java.io.File alignToBaseDirectory(java.io.File)
    {
        boolean $stack2, $stack5;
        java.lang.String $stack3, $stack4, $stack8, $stack9;
        PluginParameterExpressionEvaluator this;
        java.net.URI $stack10, $stack11;
        java.io.File file, $u0, $u1;
        org.apache.maven.plugin.PluginParameterExpressionEvaluator $r0;

        this := @this: PluginParameterExpressionEvaluator;

        file := @parameter0: java.io.File;

        if file == null goto label3;

        $stack2 = virtualinvoke file.<java.io.File: boolean isAbsolute()>();

        if $stack2 == 0 goto label1;

        goto label3;

     label1:
        $stack3 = virtualinvoke file.<java.io.File: java.lang.String getPath()>();

        $stack4 = <java.io.File: java.lang.String separator>;

        $stack5 = virtualinvoke $stack3.<java.lang.String: boolean startsWith(java.lang.String)>($stack4);

        if $stack5 == 0 goto label2;

        file = virtualinvoke file.<java.io.File: java.io.File getAbsoluteFile()>();

        goto label3;

     label2:
        $u1 = new java.io.File;

        $u0 = new java.io.File;

        $r0 = (org.apache.maven.plugin.PluginParameterExpressionEvaluator) this;

        $stack8 = $r0.<org.apache.maven.plugin.PluginParameterExpressionEvaluator: java.lang.String basedir>;

        $stack9 = virtualinvoke file.<java.io.File: java.lang.String getPath()>();

        specialinvoke $u0.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack8, $stack9);

        $stack10 = virtualinvoke $u0.<java.io.File: java.net.URI toURI()>();

        $stack11 = virtualinvoke $stack10.<java.net.URI: java.net.URI normalize()>();

        specialinvoke $u1.<java.io.File: void <init>(java.net.URI)>($stack11);

        file = virtualinvoke $u1.<java.io.File: java.io.File getAbsoluteFile()>();

     label3:
        return file;
    }
}
