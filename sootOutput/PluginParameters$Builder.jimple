public class PluginParameters$Builder extends java.lang.Object
{
    private java.io.File pomFile;
    private boolean createBackupFile;
    private java.lang.String backupFileExtension;
    private java.lang.String violationFilename;
    private java.lang.String encoding;
    private sortpom.parameter.LineSeparatorUtil lineSeparatorUtil;
    private java.lang.String indentCharacters;
    private boolean indentBlankLines;
    private boolean indentSchemaLocation;
    private boolean expandEmptyElements;
    private boolean spaceBeforeCloseEmptyElement;
    private java.lang.String predefinedSortOrder;
    private java.lang.String customSortOrderFile;
    private sortpom.parameter.DependencySortOrder sortDependencies;
    private sortpom.parameter.DependencySortOrder sortDependencyExclusions;
    private sortpom.parameter.DependencySortOrder sortPlugins;
    private boolean sortProperties;
    private boolean sortModules;
    private boolean sortExecutions;
    private boolean keepBlankLines;
    private sortpom.parameter.VerifyFailType verifyFailType;
    private sortpom.parameter.VerifyFailOnType verifyFailOn;
    private boolean ignoreLineSeparators;
    private boolean keepTimestamp;

    private void <init>()
    {
        PluginParameters$Builder this;

        this := @this: PluginParameters$Builder;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public sortpom.parameter.PluginParameters$Builder setPomFile(java.io.File)
    {
        PluginParameters$Builder this;
        java.io.File pomFile;
        sortpom.parameter.PluginParameters$Builder $r0, $r1;

        this := @this: PluginParameters$Builder;

        pomFile := @parameter0: java.io.File;

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $r0.<sortpom.parameter.PluginParameters$Builder: java.io.File pomFile> = pomFile;

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        return $r1;
    }

    public sortpom.parameter.PluginParameters$Builder setFileOutput(boolean, java.lang.String, java.lang.String, boolean)
    {
        PluginParameters$Builder this;
        boolean createBackupFile, keepTimestamp;
        java.lang.String backupFileExtension, violationFilename;
        sortpom.parameter.PluginParameters$Builder $r0, $r1, $r2, $r3, $r4;

        this := @this: PluginParameters$Builder;

        createBackupFile := @parameter0: boolean;

        backupFileExtension := @parameter1: java.lang.String;

        violationFilename := @parameter2: java.lang.String;

        keepTimestamp := @parameter3: boolean;

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $r0.<sortpom.parameter.PluginParameters$Builder: boolean createBackupFile> = createBackupFile;

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        $r1.<sortpom.parameter.PluginParameters$Builder: java.lang.String backupFileExtension> = backupFileExtension;

        $r2 = (sortpom.parameter.PluginParameters$Builder) this;

        $r2.<sortpom.parameter.PluginParameters$Builder: java.lang.String violationFilename> = violationFilename;

        $r3 = (sortpom.parameter.PluginParameters$Builder) this;

        $r3.<sortpom.parameter.PluginParameters$Builder: boolean keepTimestamp> = keepTimestamp;

        $r4 = (sortpom.parameter.PluginParameters$Builder) this;

        return $r4;
    }

    public sortpom.parameter.PluginParameters$Builder setEncoding(java.lang.String)
    {
        PluginParameters$Builder this;
        java.lang.String encoding;
        sortpom.parameter.PluginParameters$Builder $r0, $r1;

        this := @this: PluginParameters$Builder;

        encoding := @parameter0: java.lang.String;

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $r0.<sortpom.parameter.PluginParameters$Builder: java.lang.String encoding> = encoding;

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        return $r1;
    }

    public sortpom.parameter.PluginParameters$Builder setFormatting(java.lang.String, boolean, boolean, boolean)
    {
        PluginParameters$Builder this;
        java.lang.String lineSeparator;
        boolean expandEmptyElements, spaceBeforeCloseEmptyElement, keepBlankLines;
        sortpom.parameter.LineSeparatorUtil $u0;
        sortpom.parameter.PluginParameters$Builder $r0, $r1, $r2, $r3, $r4;

        this := @this: PluginParameters$Builder;

        lineSeparator := @parameter0: java.lang.String;

        expandEmptyElements := @parameter1: boolean;

        spaceBeforeCloseEmptyElement := @parameter2: boolean;

        keepBlankLines := @parameter3: boolean;

        $u0 = new sortpom.parameter.LineSeparatorUtil;

        specialinvoke $u0.<sortpom.parameter.LineSeparatorUtil: void <init>(java.lang.String)>(lineSeparator);

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $r0.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.LineSeparatorUtil lineSeparatorUtil> = $u0;

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        $r1.<sortpom.parameter.PluginParameters$Builder: boolean expandEmptyElements> = expandEmptyElements;

        $r2 = (sortpom.parameter.PluginParameters$Builder) this;

        $r2.<sortpom.parameter.PluginParameters$Builder: boolean spaceBeforeCloseEmptyElement> = spaceBeforeCloseEmptyElement;

        $r3 = (sortpom.parameter.PluginParameters$Builder) this;

        $r3.<sortpom.parameter.PluginParameters$Builder: boolean keepBlankLines> = keepBlankLines;

        $r4 = (sortpom.parameter.PluginParameters$Builder) this;

        return $r4;
    }

    public sortpom.parameter.PluginParameters$Builder setIndent(int, boolean, boolean)
    {
        PluginParameters$Builder this;
        int nrOfIndentSpace;
        java.lang.String $stack5;
        boolean indentBlankLines, indentSchemaLocation;
        sortpom.parameter.IndentCharacters $u0;
        sortpom.parameter.PluginParameters$Builder $r0, $r1, $r2, $r3;

        this := @this: PluginParameters$Builder;

        nrOfIndentSpace := @parameter0: int;

        indentBlankLines := @parameter1: boolean;

        indentSchemaLocation := @parameter2: boolean;

        $u0 = new sortpom.parameter.IndentCharacters;

        specialinvoke $u0.<sortpom.parameter.IndentCharacters: void <init>(int)>(nrOfIndentSpace);

        $stack5 = virtualinvoke $u0.<sortpom.parameter.IndentCharacters: java.lang.String getIndentCharacters()>();

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $r0.<sortpom.parameter.PluginParameters$Builder: java.lang.String indentCharacters> = $stack5;

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        $r1.<sortpom.parameter.PluginParameters$Builder: boolean indentBlankLines> = indentBlankLines;

        $r2 = (sortpom.parameter.PluginParameters$Builder) this;

        $r2.<sortpom.parameter.PluginParameters$Builder: boolean indentSchemaLocation> = indentSchemaLocation;

        $r3 = (sortpom.parameter.PluginParameters$Builder) this;

        return $r3;
    }

    public sortpom.parameter.PluginParameters$Builder setSortOrder(java.lang.String, java.lang.String)
    {
        PluginParameters$Builder this;
        java.lang.String customSortOrderFile, predefinedSortOrder;
        sortpom.parameter.PluginParameters$Builder $r0, $r1, $r2;

        this := @this: PluginParameters$Builder;

        customSortOrderFile := @parameter0: java.lang.String;

        predefinedSortOrder := @parameter1: java.lang.String;

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $r0.<sortpom.parameter.PluginParameters$Builder: java.lang.String customSortOrderFile> = customSortOrderFile;

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        $r1.<sortpom.parameter.PluginParameters$Builder: java.lang.String predefinedSortOrder> = predefinedSortOrder;

        $r2 = (sortpom.parameter.PluginParameters$Builder) this;

        return $r2;
    }

    public sortpom.parameter.PluginParameters$Builder setSortEntities(java.lang.String, java.lang.String, java.lang.String, boolean, boolean, boolean)
    {
        PluginParameters$Builder this;
        java.lang.String sortDependencies, sortDependencyExclusions, sortPlugins;
        boolean sortProperties, sortModules, sortExecutions;
        sortpom.parameter.DependencySortOrder $u0, $u1, $u2;
        sortpom.parameter.PluginParameters$Builder $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: PluginParameters$Builder;

        sortDependencies := @parameter0: java.lang.String;

        sortDependencyExclusions := @parameter1: java.lang.String;

        sortPlugins := @parameter2: java.lang.String;

        sortProperties := @parameter3: boolean;

        sortModules := @parameter4: boolean;

        sortExecutions := @parameter5: boolean;

        $u0 = new sortpom.parameter.DependencySortOrder;

        specialinvoke $u0.<sortpom.parameter.DependencySortOrder: void <init>(java.lang.String)>(sortDependencies);

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $r0.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.DependencySortOrder sortDependencies> = $u0;

        $u1 = new sortpom.parameter.DependencySortOrder;

        specialinvoke $u1.<sortpom.parameter.DependencySortOrder: void <init>(java.lang.String)>(sortDependencyExclusions);

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        $r1.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.DependencySortOrder sortDependencyExclusions> = $u1;

        $u2 = new sortpom.parameter.DependencySortOrder;

        specialinvoke $u2.<sortpom.parameter.DependencySortOrder: void <init>(java.lang.String)>(sortPlugins);

        $r2 = (sortpom.parameter.PluginParameters$Builder) this;

        $r2.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.DependencySortOrder sortPlugins> = $u2;

        $r3 = (sortpom.parameter.PluginParameters$Builder) this;

        $r3.<sortpom.parameter.PluginParameters$Builder: boolean sortProperties> = sortProperties;

        $r4 = (sortpom.parameter.PluginParameters$Builder) this;

        $r4.<sortpom.parameter.PluginParameters$Builder: boolean sortModules> = sortModules;

        $r5 = (sortpom.parameter.PluginParameters$Builder) this;

        $r5.<sortpom.parameter.PluginParameters$Builder: boolean sortExecutions> = sortExecutions;

        $r6 = (sortpom.parameter.PluginParameters$Builder) this;

        return $r6;
    }

    public sortpom.parameter.PluginParameters$Builder setVerifyFail(java.lang.String, java.lang.String)
    {
        PluginParameters$Builder this;
        java.lang.String verifyFail, verifyFailOn;
        sortpom.parameter.VerifyFailType $stack3;
        sortpom.parameter.VerifyFailOnType $stack4;
        sortpom.parameter.PluginParameters$Builder $r0, $r1, $r2;

        this := @this: PluginParameters$Builder;

        verifyFail := @parameter0: java.lang.String;

        verifyFailOn := @parameter1: java.lang.String;

        $stack3 = staticinvoke <sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType fromString(java.lang.String)>(verifyFail);

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $r0.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.VerifyFailType verifyFailType> = $stack3;

        $stack4 = staticinvoke <sortpom.parameter.VerifyFailOnType: sortpom.parameter.VerifyFailOnType fromString(java.lang.String)>(verifyFailOn);

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        $r1.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.VerifyFailOnType verifyFailOn> = $stack4;

        $r2 = (sortpom.parameter.PluginParameters$Builder) this;

        return $r2;
    }

    public sortpom.parameter.PluginParameters$Builder setTriggers(boolean)
    {
        PluginParameters$Builder this;
        boolean ignoreLineSeparators;
        sortpom.parameter.PluginParameters$Builder $r0, $r1;

        this := @this: PluginParameters$Builder;

        ignoreLineSeparators := @parameter0: boolean;

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $r0.<sortpom.parameter.PluginParameters$Builder: boolean ignoreLineSeparators> = ignoreLineSeparators;

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        return $r1;
    }

    public sortpom.parameter.PluginParameters build()
    {
        PluginParameters$Builder this;
        boolean $stack2, $stack3, $stack6, $stack7, $stack8, $stack14, $stack15, $stack17, $stack18, $stack19, $stack24;
        sortpom.parameter.VerifyFailOnType $stack4;
        sortpom.parameter.VerifyFailType $stack5;
        sortpom.parameter.DependencySortOrder $stack9, $stack10, $stack11;
        java.lang.String $stack12, $stack13, $stack16, $stack21, $stack22, $stack23;
        sortpom.parameter.LineSeparatorUtil $stack20;
        java.io.File $stack25;
        sortpom.parameter.PluginParameters $u0;
        sortpom.parameter.PluginParameters$Builder $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;

        this := @this: PluginParameters$Builder;

        $u0 = new sortpom.parameter.PluginParameters;

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack25 = $r0.<sortpom.parameter.PluginParameters$Builder: java.io.File pomFile>;

        $r1 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack24 = $r1.<sortpom.parameter.PluginParameters$Builder: boolean createBackupFile>;

        $r2 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack23 = $r2.<sortpom.parameter.PluginParameters$Builder: java.lang.String backupFileExtension>;

        $r3 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack22 = $r3.<sortpom.parameter.PluginParameters$Builder: java.lang.String violationFilename>;

        $r4 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack21 = $r4.<sortpom.parameter.PluginParameters$Builder: java.lang.String encoding>;

        $r5 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack20 = $r5.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.LineSeparatorUtil lineSeparatorUtil>;

        $r6 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack19 = $r6.<sortpom.parameter.PluginParameters$Builder: boolean expandEmptyElements>;

        $r7 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack18 = $r7.<sortpom.parameter.PluginParameters$Builder: boolean spaceBeforeCloseEmptyElement>;

        $r8 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack17 = $r8.<sortpom.parameter.PluginParameters$Builder: boolean keepBlankLines>;

        $r9 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack16 = $r9.<sortpom.parameter.PluginParameters$Builder: java.lang.String indentCharacters>;

        $r10 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack15 = $r10.<sortpom.parameter.PluginParameters$Builder: boolean indentBlankLines>;

        $r11 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack14 = $r11.<sortpom.parameter.PluginParameters$Builder: boolean indentSchemaLocation>;

        $r12 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack13 = $r12.<sortpom.parameter.PluginParameters$Builder: java.lang.String predefinedSortOrder>;

        $r13 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack12 = $r13.<sortpom.parameter.PluginParameters$Builder: java.lang.String customSortOrderFile>;

        $r14 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack11 = $r14.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.DependencySortOrder sortDependencies>;

        $r15 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack10 = $r15.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.DependencySortOrder sortDependencyExclusions>;

        $r16 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack9 = $r16.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.DependencySortOrder sortPlugins>;

        $r17 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack8 = $r17.<sortpom.parameter.PluginParameters$Builder: boolean sortProperties>;

        $r18 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack7 = $r18.<sortpom.parameter.PluginParameters$Builder: boolean sortModules>;

        $r19 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack6 = $r19.<sortpom.parameter.PluginParameters$Builder: boolean sortExecutions>;

        $r20 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack5 = $r20.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.VerifyFailType verifyFailType>;

        $r21 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack4 = $r21.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.VerifyFailOnType verifyFailOn>;

        $r22 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack3 = $r22.<sortpom.parameter.PluginParameters$Builder: boolean ignoreLineSeparators>;

        $r23 = (sortpom.parameter.PluginParameters$Builder) this;

        $stack2 = $r23.<sortpom.parameter.PluginParameters$Builder: boolean keepTimestamp>;

        specialinvoke $u0.<sortpom.parameter.PluginParameters: void <init>(java.io.File,boolean,java.lang.String,java.lang.String,java.lang.String,sortpom.parameter.LineSeparatorUtil,boolean,boolean,boolean,java.lang.String,boolean,boolean,java.lang.String,java.lang.String,sortpom.parameter.DependencySortOrder,sortpom.parameter.DependencySortOrder,sortpom.parameter.DependencySortOrder,boolean,boolean,boolean,sortpom.parameter.VerifyFailType,sortpom.parameter.VerifyFailOnType,boolean,boolean,sortpom.parameter.PluginParameters$1)>($stack25, $stack24, $stack23, $stack22, $stack21, $stack20, $stack19, $stack18, $stack17, $stack16, $stack15, $stack14, $stack13, $stack12, $stack11, $stack10, $stack9, $stack8, $stack7, $stack6, $stack5, $stack4, $stack3, $stack2, null);

        return $u0;
    }

    void <init>(sortpom.parameter.PluginParameters$1)
    {
        PluginParameters$Builder this;
        sortpom.parameter.PluginParameters$1 x0;
        sortpom.parameter.PluginParameters$Builder $r0;

        this := @this: PluginParameters$Builder;

        x0 := @parameter0: sortpom.parameter.PluginParameters$1;

        $r0 = (sortpom.parameter.PluginParameters$Builder) this;

        specialinvoke $r0.<sortpom.parameter.PluginParameters$Builder: void <init>()>();

        return;
    }
}
