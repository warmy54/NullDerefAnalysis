public class PluginVersionResolutionException extends java.lang.Exception
{
    private final java.lang.String groupId;
    private final java.lang.String artifactId;
    private final java.lang.String baseMessage;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable)
    {
        PluginVersionResolutionException this;
        java.lang.StringBuilder $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $u0;
        java.lang.String groupId, artifactId, baseMessage, $stack12;
        java.lang.Throwable cause;
        org.apache.maven.plugin.version.PluginVersionResolutionException $r0, $r1, $r2;

        this := @this: PluginVersionResolutionException;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        baseMessage := @parameter2: java.lang.String;

        cause := @parameter3: java.lang.Throwable;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack6 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error resolving version for plugin \'");

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(groupId);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(artifactId);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(baseMessage);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack12, cause);

        $r0 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $r0.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String groupId> = groupId;

        $r1 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $r1.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String artifactId> = artifactId;

        $r2 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $r2.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String baseMessage> = baseMessage;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        PluginVersionResolutionException this;
        java.lang.StringBuilder $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $u0;
        java.lang.String groupId, artifactId, baseMessage, $stack11;
        org.apache.maven.plugin.version.PluginVersionResolutionException $r0, $r1, $r2;

        this := @this: PluginVersionResolutionException;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        baseMessage := @parameter2: java.lang.String;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error resolving version for plugin \'");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(groupId);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(artifactId);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\': ");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(baseMessage);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>($stack11);

        $r0 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $r0.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String groupId> = groupId;

        $r1 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $r1.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String artifactId> = artifactId;

        $r2 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $r2.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String baseMessage> = baseMessage;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.eclipse.aether.repository.LocalRepository, java.util.List, java.lang.String)
    {
        PluginVersionResolutionException this;
        java.lang.StringBuilder $stack7, $stack8, $stack9, $stack10, $stack11, $stack13, $stack14, $stack15, $u0;
        java.lang.String groupId, artifactId, $stack12, baseMessage, $stack16;
        org.eclipse.aether.repository.LocalRepository localRepository;
        java.util.List remoteRepositories;
        org.apache.maven.plugin.version.PluginVersionResolutionException $r0, $r1, $r2;

        this := @this: PluginVersionResolutionException;

        groupId := @parameter0: java.lang.String;

        artifactId := @parameter1: java.lang.String;

        localRepository := @parameter2: org.eclipse.aether.repository.LocalRepository;

        remoteRepositories := @parameter3: java.util.List;

        baseMessage := @parameter4: java.lang.String;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error resolving version for plugin \'");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(groupId);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(artifactId);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' from the repositories ");

        $stack12 = staticinvoke <org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String format(org.eclipse.aether.repository.LocalRepository,java.util.List)>(localRepository, remoteRepositories);

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(baseMessage);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>($stack16);

        $r0 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $r0.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String groupId> = groupId;

        $r1 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $r1.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String artifactId> = artifactId;

        $r2 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $r2.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String baseMessage> = baseMessage;

        return;
    }

    public java.lang.String getGroupId()
    {
        PluginVersionResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.plugin.version.PluginVersionResolutionException $r0;

        this := @this: PluginVersionResolutionException;

        $r0 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $stack1 = $r0.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String groupId>;

        return $stack1;
    }

    public java.lang.String getArtifactId()
    {
        PluginVersionResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.plugin.version.PluginVersionResolutionException $r0;

        this := @this: PluginVersionResolutionException;

        $r0 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $stack1 = $r0.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String artifactId>;

        return $stack1;
    }

    public java.lang.String getBaseMessage()
    {
        PluginVersionResolutionException this;
        java.lang.String $stack1;
        org.apache.maven.plugin.version.PluginVersionResolutionException $r0;

        this := @this: PluginVersionResolutionException;

        $r0 = (org.apache.maven.plugin.version.PluginVersionResolutionException) this;

        $stack1 = $r0.<org.apache.maven.plugin.version.PluginVersionResolutionException: java.lang.String baseMessage>;

        return $stack1;
    }

    private static java.lang.String format(org.eclipse.aether.repository.LocalRepository, java.util.List)
    {
        java.lang.StringBuilder $stack5, $stack18, $stack19, $stack21, $stack24, $stack25, $stack27;
        org.eclipse.aether.repository.LocalRepository localRepository;
        java.util.List remoteRepositories;
        boolean $stack8, $stack13;
        java.util.Iterator l3;
        java.lang.Object $stack14;
        org.eclipse.aether.repository.RemoteRepository repository;
        java.lang.String $stack17, $stack20, $stack23, $stack7;
        java.io.File $stack26;

        localRepository := @parameter0: org.eclipse.aether.repository.LocalRepository;

        remoteRepositories := @parameter1: java.util.List;

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>(java.lang.String)>("[");

        if localRepository == null goto label1;

        $stack23 = virtualinvoke localRepository.<org.eclipse.aether.repository.LocalRepository: java.lang.String getId()>();

        $stack24 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $stack26 = virtualinvoke localRepository.<org.eclipse.aether.repository.LocalRepository: java.io.File getBasedir()>();

        $stack27 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack26);

        virtualinvoke $stack27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label1:
        if remoteRepositories == null goto label4;

        $stack8 = interfaceinvoke remoteRepositories.<java.util.List: boolean isEmpty()>();

        if $stack8 != 0 goto label4;

        l3 = interfaceinvoke remoteRepositories.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack13 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label4;

        $stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        repository = (org.eclipse.aether.repository.RemoteRepository) $stack14;

        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        if repository == null goto label3;

        $stack17 = virtualinvoke repository.<org.eclipse.aether.repository.RemoteRepository: java.lang.String getId()>();

        $stack18 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $stack20 = virtualinvoke repository.<org.eclipse.aether.repository.RemoteRepository: java.lang.String getUrl()>();

        $stack21 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack20);

        virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label3:
        goto label2;

     label4:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }
}
