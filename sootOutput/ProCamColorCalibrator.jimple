public class ProCamColorCalibrator extends java.lang.Object
{
    private org.bytedeco.javacv.ProCamColorCalibrator$Settings settings;
    private org.bytedeco.javacv.MarkerDetector markerDetector;
    private org.bytedeco.javacv.MarkedPlane boardPlane;
    private org.bytedeco.javacv.CameraDevice camera;
    private org.bytedeco.javacv.ProjectorDevice projector;
    private java.awt.Color[] projectorColors;
    private java.awt.Color[] cameraColors;
    private int counter;
    private org.bytedeco.opencv.opencv_core.CvMat boardSrcPts;
    private org.bytedeco.opencv.opencv_core.CvMat boardDstPts;
    private org.bytedeco.opencv.opencv_core.CvMat projSrcPts;
    private org.bytedeco.opencv.opencv_core.CvMat projDstPts;
    private org.bytedeco.opencv.opencv_core.CvMat camKinv;
    private org.bytedeco.opencv.opencv_core.IplImage mask;
    private org.bytedeco.opencv.opencv_core.IplImage mask2;
    private org.bytedeco.opencv.opencv_core.IplImage undistImage;
    private static java.lang.ThreadLocal H3x3;
    private static java.lang.ThreadLocal R3x3;
    private static java.lang.ThreadLocal t3x1;
    private static java.lang.ThreadLocal n3x1;
    private static java.lang.ThreadLocal z3x1;
    static final boolean $assertionsDisabled;

    public void <init>(org.bytedeco.javacv.ProCamColorCalibrator$Settings, org.bytedeco.javacv.MarkerDetector$Settings, org.bytedeco.javacv.MarkedPlane, org.bytedeco.javacv.CameraDevice, org.bytedeco.javacv.ProjectorDevice)
    {
        ProCamColorCalibrator this;
        org.bytedeco.javacv.ProCamColorCalibrator$Settings settings;
        org.bytedeco.javacv.MarkerDetector$Settings detectorSettings;
        org.bytedeco.javacv.MarkedPlane boardPlane;
        org.bytedeco.javacv.CameraDevice camera;
        org.bytedeco.javacv.ProjectorDevice projector;
        org.bytedeco.javacv.Marker[] boardMarkers;
        int $stack10, $stack11, $stack12, $stack14, $stack15, $stack16, $stack21, $stack24, $stack27, $stack30, $stack33, $stack37, $stack38, $stack40, $stack41, $stack43, $stack44, $stack46, $stack47, $stack55, $stack58, i;
        org.bytedeco.opencv.opencv_core.CvMat $stack13, $stack17, $stack19, $stack34, $stack35, $stack49, $stack51, $stack52, $stack53, $stack59;
        double[] $stack18, $stack36, $stack57;
        double $stack22, $stack25, $stack28, $stack31, $stack39, $stack42, $stack45, $stack48;
        org.bytedeco.javacv.Marker $stack56;
        org.bytedeco.javacv.MarkerDetector $u0;
        org.bytedeco.javacv.ProCamColorCalibrator $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        org.bytedeco.opencv.opencv_core.CvArr $r21, $r22;

        this := @this: ProCamColorCalibrator;

        settings := @parameter0: org.bytedeco.javacv.ProCamColorCalibrator$Settings;

        detectorSettings := @parameter1: org.bytedeco.javacv.MarkerDetector$Settings;

        boardPlane := @parameter2: org.bytedeco.javacv.MarkedPlane;

        camera := @parameter3: org.bytedeco.javacv.CameraDevice;

        projector := @parameter4: org.bytedeco.javacv.ProjectorDevice;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r0.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.MarkerDetector markerDetector> = null;

        $r1 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r1.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane> = null;

        $r2 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r2.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.CameraDevice camera> = null;

        $r3 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r3.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProjectorDevice projector> = null;

        $r4 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r4.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] projectorColors> = null;

        $r5 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r5.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] cameraColors> = null;

        $r6 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r6.<org.bytedeco.javacv.ProCamColorCalibrator: int counter> = 0;

        $r7 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r7.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProCamColorCalibrator$Settings settings> = settings;

        $u0 = new org.bytedeco.javacv.MarkerDetector;

        specialinvoke $u0.<org.bytedeco.javacv.MarkerDetector: void <init>(org.bytedeco.javacv.MarkerDetector$Settings)>(detectorSettings);

        $r8 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r8.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.MarkerDetector markerDetector> = $u0;

        $r9 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r9.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane> = boardPlane;

        $r10 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r10.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.CameraDevice camera> = camera;

        $r11 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r11.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProjectorDevice projector> = projector;

        boardMarkers = virtualinvoke boardPlane.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] getMarkers()>();

        $stack10 = lengthof boardMarkers;

        $stack11 = $stack10 * 4;

        $stack12 = 4 + $stack11;

        $stack13 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int,int,int)>($stack12, 1, 6, 2);

        $r12 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r12.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardSrcPts> = $stack13;

        $stack14 = lengthof boardMarkers;

        $stack15 = $stack14 * 4;

        $stack16 = 4 + $stack15;

        $stack17 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int,int,int)>($stack16, 1, 6, 2);

        $r13 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r13.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardDstPts> = $stack17;

        $r14 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack19 = $r14.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardSrcPts>;

        $stack18 = newarray (double)[8];

        $stack18[0] = 0.0;

        $stack18[1] = 0.0;

        $stack21 = virtualinvoke boardPlane.<org.bytedeco.javacv.MarkedPlane: int getWidth()>();

        $stack22 = (double) $stack21;

        $stack18[2] = $stack22;

        $stack18[3] = 0.0;

        $stack24 = virtualinvoke boardPlane.<org.bytedeco.javacv.MarkedPlane: int getWidth()>();

        $stack25 = (double) $stack24;

        $stack18[4] = $stack25;

        $stack27 = virtualinvoke boardPlane.<org.bytedeco.javacv.MarkedPlane: int getHeight()>();

        $stack28 = (double) $stack27;

        $stack18[5] = $stack28;

        $stack18[6] = 0.0;

        $stack30 = virtualinvoke boardPlane.<org.bytedeco.javacv.MarkedPlane: int getHeight()>();

        $stack31 = (double) $stack30;

        $stack18[7] = $stack31;

        virtualinvoke $stack19.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack18);

        i = 0;

     label1:
        $stack33 = lengthof boardMarkers;

        if i >= $stack33 goto label2;

        $r15 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack59 = $r15.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardSrcPts>;

        $stack55 = i * 8;

        $stack58 = 8 + $stack55;

        $stack56 = boardMarkers[i];

        $stack57 = $stack56.<org.bytedeco.javacv.Marker: double[] corners>;

        virtualinvoke $stack59.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double[])>($stack58, $stack57);

        i = i + 1;

        goto label1;

     label2:
        $stack34 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int,int,int)>(4, 1, 6, 2);

        $r16 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r16.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat projSrcPts> = $stack34;

        $stack35 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int,int,int)>(4, 1, 6, 2);

        $r17 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r17.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat projDstPts> = $stack35;

        $r18 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack49 = $r18.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat projSrcPts>;

        $stack36 = newarray (double)[8];

        $stack36[0] = 0.0;

        $stack36[1] = 0.0;

        $stack37 = projector.<org.bytedeco.javacv.ProjectorDevice: int imageWidth>;

        $stack38 = $stack37 - 1;

        $stack39 = (double) $stack38;

        $stack36[2] = $stack39;

        $stack36[3] = 0.0;

        $stack40 = projector.<org.bytedeco.javacv.ProjectorDevice: int imageWidth>;

        $stack41 = $stack40 - 1;

        $stack42 = (double) $stack41;

        $stack36[4] = $stack42;

        $stack43 = projector.<org.bytedeco.javacv.ProjectorDevice: int imageHeight>;

        $stack44 = $stack43 - 1;

        $stack45 = (double) $stack44;

        $stack36[5] = $stack45;

        $stack36[6] = 0.0;

        $stack46 = projector.<org.bytedeco.javacv.ProjectorDevice: int imageHeight>;

        $stack47 = $stack46 - 1;

        $stack48 = (double) $stack47;

        $stack36[7] = $stack48;

        virtualinvoke $stack49.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack36);

        $stack51 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $r19 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r19.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat camKinv> = $stack51;

        $stack53 = camera.<org.bytedeco.javacv.CameraDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r20 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack52 = $r20.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat camKinv>;

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) $stack53;

        $r22 = (org.bytedeco.opencv.opencv_core.CvArr) $stack52;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r21, $r22);

        return;
    }

    public int getColorCount()
    {
        ProCamColorCalibrator this;
        int $stack1;
        org.bytedeco.javacv.ProCamColorCalibrator $r0;

        this := @this: ProCamColorCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamColorCalibrator: int counter>;

        return $stack1;
    }

    public java.awt.Color[] getProjectorColors()
    {
        ProCamColorCalibrator this;
        org.bytedeco.javacv.ProjectorDevice $stack13;
        org.bytedeco.javacv.ProjectiveDevice$Settings $stack15;
        double $stack16, invgamma, $stack31, $stack32, $stack33, r, $stack37, $stack38, $stack39, g, $stack43, $stack44, $stack45, b;
        org.bytedeco.javacv.ProCamColorCalibrator$Settings $stack17;
        int s, $stack20, $stack21, $stack23, $stack24, $stack27, j, k, $stack29, $stack30, $stack35, $stack36, $stack41, $stack42, i;
        java.awt.Color[] $stack18, $stack19, $stack22, $stack25, $stack26, $stack51;
        float $stack48, $stack49, $stack50;
        java.awt.Color $u0;
        org.bytedeco.javacv.ProCamColorCalibrator $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: ProCamColorCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack13 = $r0.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProjectorDevice projector>;

        $stack15 = virtualinvoke $stack13.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack16 = virtualinvoke $stack15.<org.bytedeco.javacv.ProjectiveDevice$Settings: double getResponseGamma()>();

        invgamma = 1.0 / $stack16;

        $r1 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack17 = $r1.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProCamColorCalibrator$Settings settings>;

        s = $stack17.<org.bytedeco.javacv.ProCamColorCalibrator$Settings: int samplesPerChannel>;

        $r2 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack18 = $r2.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] projectorColors>;

        if $stack18 != null goto label2;

        $stack20 = s * s;

        $stack21 = $stack20 * s;

        $stack22 = newarray (java.awt.Color)[$stack21];

        $r3 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r3.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] projectorColors> = $stack22;

        $stack23 = s * s;

        $stack24 = $stack23 * s;

        $stack25 = newarray (java.awt.Color)[$stack24];

        $r4 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r4.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] cameraColors> = $stack25;

        i = 0;

     label1:
        $r5 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack26 = $r5.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] projectorColors>;

        $stack27 = lengthof $stack26;

        if i >= $stack27 goto label2;

        j = i / s;

        k = j / s;

        $stack29 = i % s;

        $stack32 = (double) $stack29;

        $stack30 = s - 1;

        $stack31 = (double) $stack30;

        $stack33 = $stack32 / $stack31;

        r = staticinvoke <java.lang.Math: double pow(double,double)>($stack33, invgamma);

        $stack35 = j % s;

        $stack38 = (double) $stack35;

        $stack36 = s - 1;

        $stack37 = (double) $stack36;

        $stack39 = $stack38 / $stack37;

        g = staticinvoke <java.lang.Math: double pow(double,double)>($stack39, invgamma);

        $stack41 = k % s;

        $stack44 = (double) $stack41;

        $stack42 = s - 1;

        $stack43 = (double) $stack42;

        $stack45 = $stack44 / $stack43;

        b = staticinvoke <java.lang.Math: double pow(double,double)>($stack45, invgamma);

        $r6 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack51 = $r6.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] projectorColors>;

        $u0 = new java.awt.Color;

        $stack50 = (float) r;

        $stack49 = (float) g;

        $stack48 = (float) b;

        specialinvoke $u0.<java.awt.Color: void <init>(float,float,float)>($stack50, $stack49, $stack48);

        $stack51[i] = $u0;

        i = i + 1;

        goto label1;

     label2:
        $r7 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack19 = $r7.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] projectorColors>;

        return $stack19;
    }

    public java.awt.Color getProjectorColor()
    {
        ProCamColorCalibrator this;
        java.awt.Color[] $stack1;
        int $stack2;
        java.awt.Color $stack3;
        org.bytedeco.javacv.ProCamColorCalibrator $r0, $r1;

        this := @this: ProCamColorCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] getProjectorColors()>();

        $r1 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack2 = $r1.<org.bytedeco.javacv.ProCamColorCalibrator: int counter>;

        $stack3 = $stack1[$stack2];

        return $stack3;
    }

    public java.awt.Color[] getCameraColors()
    {
        ProCamColorCalibrator this;
        java.awt.Color[] $stack1;
        org.bytedeco.javacv.ProCamColorCalibrator $r0;

        this := @this: ProCamColorCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] cameraColors>;

        return $stack1;
    }

    public java.awt.Color getCameraColor()
    {
        ProCamColorCalibrator this;
        java.awt.Color[] $stack1;
        int $stack2;
        java.awt.Color $stack3;
        org.bytedeco.javacv.ProCamColorCalibrator $r0, $r1;

        this := @this: ProCamColorCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] getCameraColors()>();

        $r1 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack2 = $r1.<org.bytedeco.javacv.ProCamColorCalibrator: int counter>;

        $stack3 = $stack1[$stack2];

        return $stack3;
    }

    public void addCameraColor()
    {
        ProCamColorCalibrator this;
        int $stack1, $stack2;
        org.bytedeco.javacv.ProCamColorCalibrator $r0, $r1;

        this := @this: ProCamColorCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamColorCalibrator: int counter>;

        $stack2 = $stack1 + 1;

        $r1 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r1.<org.bytedeco.javacv.ProCamColorCalibrator: int counter> = $stack2;

        return;
    }

    public void addCameraColor(java.awt.Color)
    {
        ProCamColorCalibrator this;
        int $stack2, $stack3;
        java.awt.Color[] $stack4;
        java.awt.Color color;
        org.bytedeco.javacv.ProCamColorCalibrator $r0, $r1, $r2;

        this := @this: ProCamColorCalibrator;

        color := @parameter0: java.awt.Color;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack4 = $r0.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] cameraColors>;

        $r1 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack2 = $r1.<org.bytedeco.javacv.ProCamColorCalibrator: int counter>;

        $stack3 = $stack2 + 1;

        $r2 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r2.<org.bytedeco.javacv.ProCamColorCalibrator: int counter> = $stack3;

        $stack4[$stack2] = color;

        return;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getMaskImage()
    {
        ProCamColorCalibrator this;
        org.bytedeco.opencv.opencv_core.IplImage $stack1;
        org.bytedeco.javacv.ProCamColorCalibrator $r0;

        this := @this: ProCamColorCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        return $stack1;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getUndistortedCameraImage()
    {
        ProCamColorCalibrator this;
        org.bytedeco.opencv.opencv_core.IplImage $stack1;
        org.bytedeco.javacv.ProCamColorCalibrator $r0;

        this := @this: ProCamColorCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage undistImage>;

        return $stack1;
    }

    public boolean processCameraImage(org.bytedeco.opencv.opencv_core.IplImage)
    {
        ProCamColorCalibrator this;
        org.bytedeco.opencv.opencv_core.IplImage $stack22, cameraImage, $stack92, $stack94, $stack100, $stack102, $stack105, $stack106, $stack107, $stack108, $stack109, $stack110, $stack111, $stack161, $stack199, $stack230, $stack233, $stack236, $stack239, $stack242, $stack248, $stack251, $stack23, $stack24, $stack30, $stack36, $stack49, $stack51;
        org.bytedeco.opencv.opencv_core.CvMat H, R, t, n, z, $stack66, $stack67, $stack68, $stack70, $stack75, $stack77, $stack79, $stack80, $stack88, $stack89, $stack90;
        org.bytedeco.javacv.Marker[] detectedBoardMarkers, $stack57;
        org.bytedeco.javacv.MarkedPlane $stack64, $stack55;
        double[] boardPts, projPts, $stack47;
        double d, $stack76, $stack82, $stack83, $stack86, $stack87, s, $stack120, $stack121, $stack124, $stack125, $stack128, $stack129, $stack133, $stack135, $stack136, $stack137, $stack138, $stack139, $stack144, $stack146, $stack147, $stack148, $stack149, $stack150, $stack154, $stack157, $stack172, $stack174, $stack175, $stack176, $stack177, $stack178, $stack183, $stack185, $stack186, $stack187, $stack188, $stack189, $stack193, $stack196, $stack56, $stack61, $stack60, $stack62, cx, cy;
        org.bytedeco.javacv.ProjectorDevice $stack73, $stack74, $stack78;
        org.bytedeco.opencv.opencv_core.CvPoint $stack95, $stack103, $stack164, $u0, $u1, $u2;
        org.bytedeco.opencv.opencv_core.CvScalar $stack96, $stack104, $stack165, j#434;
        int $stack97, $stack98, $stack99, $stack117, $stack119, $stack122, $stack126, $stack131, $stack132, $stack140, $stack141, $stack142, $stack143, $stack153, $stack155, $stack156, $stack162, $stack163, $stack170, $stack171, $stack179, $stack180, $stack181, $stack182, $stack192, $stack194, $stack195, $stack231, $stack232, $stack234, $stack235, $stack237, $stack238, $stack240, $stack241, $stack243, $stack244, $stack249, $stack250, $stack252, $stack253, $stack25, $stack26, $stack29, $stack31, $stack32, $stack35, $stack54, $stack58, j;
        org.bytedeco.javacv.CameraDevice $stack113, $stack50;
        int[] o;
        java.awt.Color[] $stack118;
        float $stack123, $stack127, $stack130;
        org.bytedeco.javacv.ProCamColorCalibrator$Settings $stack134, $stack145, $stack173, $stack184, $stack59;
        java.lang.ThreadLocal $stack37, $stack39, $stack41, $stack43, $stack45;
        java.lang.Object $stack38, $stack40, $stack42, $stack44, $stack46;
        org.bytedeco.javacv.MarkerDetector $stack52;
        byte $stack63;
        java.awt.Color $u3;
        org.bytedeco.javacv.ProCamColorCalibrator $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r24, $r25, $r34, $r35, $r40, $r44, $r54, $r55, $r58, $r59, $r61, $r62, $r63, $r65, $r67, $r69, $r70, $r71, $r73, $r74, $r75, $r79, $r80, $r83, $r84, $r87, $r88, $r89;
        org.bytedeco.opencv.opencv_core.CvArr $r22, $r23, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r36, $r37, $r38, $r39, $r41, $r42, $r43, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r56, $r57, $r60, $r64, $r66, $r68, $r72, $r76, $r77, $r78, $r81, $r82, $r85, $r86;

        this := @this: ProCamColorCalibrator;

        cameraImage := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack22 = $r0.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage undistImage>;

        if $stack22 == null goto label01;

        $r1 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack242 = $r1.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage undistImage>;

        $stack243 = virtualinvoke $stack242.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack244 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        if $stack243 != $stack244 goto label01;

        $r2 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack248 = $r2.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage undistImage>;

        $stack249 = virtualinvoke $stack248.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack250 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        if $stack249 != $stack250 goto label01;

        $r3 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack251 = $r3.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage undistImage>;

        $stack252 = virtualinvoke $stack251.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        $stack253 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        if $stack252 == $stack253 goto label02;

     label01:
        $stack23 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage clone()>();

        $r4 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r4.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage undistImage> = $stack23;

     label02:
        $r5 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack24 = $r5.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        if $stack24 == null goto label03;

        $r6 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack199 = $r6.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask2>;

        if $stack199 == null goto label03;

        $r7 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack230 = $r7.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $stack231 = virtualinvoke $stack230.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack232 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        if $stack231 != $stack232 goto label03;

        $r8 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack233 = $r8.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask2>;

        $stack234 = virtualinvoke $stack233.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack235 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        if $stack234 != $stack235 goto label03;

        $r9 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack236 = $r9.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $stack237 = virtualinvoke $stack236.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack238 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        if $stack237 != $stack238 goto label03;

        $r10 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack239 = $r10.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask2>;

        $stack240 = virtualinvoke $stack239.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack241 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        if $stack240 == $stack241 goto label04;

     label03:
        $stack25 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack26 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack29 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int origin()>();

        $stack30 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>($stack25, $stack26, 8, 1, $stack29);

        $r11 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r11.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask> = $stack30;

        $stack31 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack32 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack35 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int origin()>();

        $stack36 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>($stack31, $stack32, 8, 1, $stack35);

        $r12 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r12.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask2> = $stack36;

     label04:
        $stack37 = <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal H3x3>;

        $stack38 = virtualinvoke $stack37.<java.lang.ThreadLocal: java.lang.Object get()>();

        H = (org.bytedeco.opencv.opencv_core.CvMat) $stack38;

        $stack39 = <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal R3x3>;

        $stack40 = virtualinvoke $stack39.<java.lang.ThreadLocal: java.lang.Object get()>();

        R = (org.bytedeco.opencv.opencv_core.CvMat) $stack40;

        $stack41 = <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal t3x1>;

        $stack42 = virtualinvoke $stack41.<java.lang.ThreadLocal: java.lang.Object get()>();

        t = (org.bytedeco.opencv.opencv_core.CvMat) $stack42;

        $stack43 = <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal n3x1>;

        $stack44 = virtualinvoke $stack43.<java.lang.ThreadLocal: java.lang.Object get()>();

        n = (org.bytedeco.opencv.opencv_core.CvMat) $stack44;

        $stack45 = <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal z3x1>;

        $stack46 = virtualinvoke $stack45.<java.lang.ThreadLocal: java.lang.Object get()>();

        z = (org.bytedeco.opencv.opencv_core.CvMat) $stack46;

        $stack47 = newarray (double)[3];

        $stack47[0] = 0.0;

        $stack47[1] = 0.0;

        $stack47[2] = 1.0;

        virtualinvoke z.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack47);

        $r13 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack50 = $r13.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.CameraDevice camera>;

        $r14 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack49 = $r14.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage undistImage>;

        virtualinvoke $stack50.<org.bytedeco.javacv.CameraDevice: void undistort(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage)>(cameraImage, $stack49);

        $r15 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack52 = $r15.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.MarkerDetector markerDetector>;

        $r16 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack51 = $r16.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage undistImage>;

        detectedBoardMarkers = virtualinvoke $stack52.<org.bytedeco.javacv.MarkerDetector: org.bytedeco.javacv.Marker[] detect(org.bytedeco.opencv.opencv_core.IplImage,boolean)>($stack51, 0);

        $stack54 = lengthof detectedBoardMarkers;

        $stack56 = (double) $stack54;

        $r17 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack55 = $r17.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        $stack57 = virtualinvoke $stack55.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] getMarkers()>();

        $stack58 = lengthof $stack57;

        $stack61 = (double) $stack58;

        $r18 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack59 = $r18.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProCamColorCalibrator$Settings settings>;

        $stack60 = $stack59.<org.bytedeco.javacv.ProCamColorCalibrator$Settings: double detectedBoardMin>;

        $stack62 = $stack61 * $stack60;

        $stack63 = $stack56 cmpl $stack62;

        if $stack63 < 0 goto label15;

        $r19 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack64 = $r19.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        virtualinvoke $stack64.<org.bytedeco.javacv.MarkedPlane: double getTotalWarp(org.bytedeco.javacv.Marker[],org.bytedeco.opencv.opencv_core.CvMat)>(detectedBoardMarkers, H);

        $r20 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack67 = $r20.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardSrcPts>;

        $r21 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack66 = $r21.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardDstPts>;

        $r22 = (org.bytedeco.opencv.opencv_core.CvArr) $stack67;

        $r23 = (org.bytedeco.opencv.opencv_core.CvArr) $stack66;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvPerspectiveTransform(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvMat)>($r22, $r23, H);

        $r24 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack68 = $r24.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardDstPts>;

        boardPts = virtualinvoke $stack68.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        $r25 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack70 = $r25.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat camKinv>;

        $r26 = (org.bytedeco.opencv.opencv_core.CvArr) $stack70;

        $r27 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        $r28 = (org.bytedeco.opencv.opencv_core.CvArr) R;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r26, $r27, $r28);

        staticinvoke <org.bytedeco.javacv.JavaCV: double HnToRt(org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat)>(R, z, R, t);

        $r29 = (org.bytedeco.opencv.opencv_core.CvArr) R;

        $r30 = (org.bytedeco.opencv.opencv_core.CvArr) z;

        $r31 = (org.bytedeco.opencv.opencv_core.CvArr) n;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r29, $r30, $r31);

        $r32 = (org.bytedeco.opencv.opencv_core.CvArr) t;

        $r33 = (org.bytedeco.opencv.opencv_core.CvArr) z;

        d = staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvDotProduct(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r32, $r33);

        $r34 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack73 = $r34.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProjectorDevice projector>;

        $stack77 = $stack73.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        $stack76 = -1.0 / d;

        $r35 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack74 = $r35.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProjectorDevice projector>;

        $stack75 = $stack74.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r36 = (org.bytedeco.opencv.opencv_core.CvArr) $stack77;

        $r37 = (org.bytedeco.opencv.opencv_core.CvArr) n;

        $r38 = (org.bytedeco.opencv.opencv_core.CvArr) $stack75;

        $r39 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r36, $r37, $stack76, $r38, 1.0, $r39, 2);

        $r40 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack78 = $r40.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProjectorDevice projector>;

        $stack79 = $stack78.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r41 = (org.bytedeco.opencv.opencv_core.CvArr) $stack79;

        $r42 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        $r43 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r41, $r42, $r43);

        $r44 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack80 = $r44.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat camKinv>;

        $r45 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        $r46 = (org.bytedeco.opencv.opencv_core.CvArr) $stack80;

        $r47 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r45, $r46, $r47);

        $stack82 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        $stack83 = 1.0 / $stack82;

        $r48 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        $r49 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvConvertScale(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,double)>($r48, $r49, $stack83, 0.0);

        $r50 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        $r51 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r50, $r51);

        $stack86 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        $stack87 = 1.0 / $stack86;

        $r52 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        $r53 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvConvertScale(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,double)>($r52, $r53, $stack87, 0.0);

        $r54 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack89 = $r54.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat projSrcPts>;

        $r55 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack88 = $r55.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat projDstPts>;

        $r56 = (org.bytedeco.opencv.opencv_core.CvArr) $stack89;

        $r57 = (org.bytedeco.opencv.opencv_core.CvArr) $stack88;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvPerspectiveTransform(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvMat)>($r56, $r57, H);

        $r58 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack90 = $r58.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.CvMat projDstPts>;

        projPts = virtualinvoke $stack90.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        $r59 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack92 = $r59.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $r60 = (org.bytedeco.opencv.opencv_core.CvArr) $stack92;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetZero(org.bytedeco.opencv.opencv_core.CvArr)>($r60);

        cx = 0.0;

        cy = 0.0;

        j = 0;

     label05:
        if j >= 4 goto label06;

        $stack192 = j * 2;

        $stack193 = boardPts[$stack192];

        cx = cx + $stack193;

        $stack194 = j * 2;

        $stack195 = $stack194 + 1;

        $stack196 = boardPts[$stack195];

        cy = cy + $stack196;

        j = j + 1;

        goto label05;

     label06:
        cx = cx / 4.0;

        cy = cy / 4.0;

        j = 0;

     label07:
        if j >= 4 goto label08;

        $stack170 = j * 2;

        $stack177 = boardPts[$stack170];

        $stack171 = j * 2;

        $stack172 = boardPts[$stack171];

        $stack175 = $stack172 - cx;

        $r61 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack173 = $r61.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProCamColorCalibrator$Settings settings>;

        $stack174 = $stack173.<org.bytedeco.javacv.ProCamColorCalibrator$Settings: double trimmingFraction>;

        $stack176 = $stack175 * $stack174;

        $stack178 = $stack177 - $stack176;

        boardPts[$stack170] = $stack178;

        $stack179 = j * 2;

        $stack180 = $stack179 + 1;

        $stack188 = boardPts[$stack180];

        $stack181 = j * 2;

        $stack182 = $stack181 + 1;

        $stack183 = boardPts[$stack182];

        $stack186 = $stack183 - cy;

        $r62 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack184 = $r62.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProCamColorCalibrator$Settings settings>;

        $stack185 = $stack184.<org.bytedeco.javacv.ProCamColorCalibrator$Settings: double trimmingFraction>;

        $stack187 = $stack186 * $stack185;

        $stack189 = $stack188 - $stack187;

        boardPts[$stack180] = $stack189;

        j = j + 1;

        goto label07;

     label08:
        $r63 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack94 = $r63.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $u0 = new org.bytedeco.opencv.opencv_core.CvPoint;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.CvPoint: void <init>(long)>(4L);

        $stack95 = virtualinvoke $u0.<org.bytedeco.opencv.opencv_core.CvPoint: org.bytedeco.opencv.opencv_core.CvPoint put(byte,double[],int,int)>(16, boardPts, 0, 8);

        $stack96 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar WHITE>;

        $r64 = (org.bytedeco.opencv.opencv_core.CvArr) $stack94;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvFillConvexPoly(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvPoint,int,org.bytedeco.opencv.opencv_core.CvScalar,int,int)>($r64, $stack95, 4, $stack96, 8, 16);

        j = 0;

     label09:
        $stack97 = lengthof boardPts;

        $stack98 = $stack97 - 8;

        $stack99 = $stack98 / 8;

        if j >= $stack99 goto label10;

        $r65 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack161 = $r65.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $u1 = new org.bytedeco.opencv.opencv_core.CvPoint;

        specialinvoke $u1.<org.bytedeco.opencv.opencv_core.CvPoint: void <init>(long)>(4L);

        $stack162 = j * 8;

        $stack163 = 8 + $stack162;

        $stack164 = virtualinvoke $u1.<org.bytedeco.opencv.opencv_core.CvPoint: org.bytedeco.opencv.opencv_core.CvPoint put(byte,double[],int,int)>(16, boardPts, $stack163, 8);

        $stack165 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar BLACK>;

        $r66 = (org.bytedeco.opencv.opencv_core.CvArr) $stack161;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvFillConvexPoly(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvPoint,int,org.bytedeco.opencv.opencv_core.CvScalar,int,int)>($r66, $stack164, 4, $stack165, 8, 16);

        j = j + 1;

        goto label09;

     label10:
        $r67 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack100 = $r67.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask2>;

        $r68 = (org.bytedeco.opencv.opencv_core.CvArr) $stack100;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetZero(org.bytedeco.opencv.opencv_core.CvArr)>($r68);

        cx = 0.0;

        cy = 0.0;

        j = 0;

     label11:
        if j >= 4 goto label12;

        $stack153 = j * 2;

        $stack154 = projPts[$stack153];

        cx = cx + $stack154;

        $stack155 = j * 2;

        $stack156 = $stack155 + 1;

        $stack157 = projPts[$stack156];

        cy = cy + $stack157;

        j = j + 1;

        goto label11;

     label12:
        cx = cx / 4.0;

        cy = cy / 4.0;

        j = 0;

     label13:
        if j >= 4 goto label14;

        $stack131 = j * 2;

        $stack138 = projPts[$stack131];

        $stack132 = j * 2;

        $stack133 = projPts[$stack132];

        $stack136 = $stack133 - cx;

        $r69 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack134 = $r69.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProCamColorCalibrator$Settings settings>;

        $stack135 = $stack134.<org.bytedeco.javacv.ProCamColorCalibrator$Settings: double trimmingFraction>;

        $stack137 = $stack136 * $stack135;

        $stack139 = $stack138 - $stack137;

        projPts[$stack131] = $stack139;

        $stack140 = j * 2;

        $stack141 = $stack140 + 1;

        $stack149 = projPts[$stack141];

        $stack142 = j * 2;

        $stack143 = $stack142 + 1;

        $stack144 = projPts[$stack143];

        $stack147 = $stack144 - cy;

        $r70 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack145 = $r70.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProCamColorCalibrator$Settings settings>;

        $stack146 = $stack145.<org.bytedeco.javacv.ProCamColorCalibrator$Settings: double trimmingFraction>;

        $stack148 = $stack147 * $stack146;

        $stack150 = $stack149 - $stack148;

        projPts[$stack141] = $stack150;

        j = j + 1;

        goto label13;

     label14:
        $r71 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack102 = $r71.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask2>;

        $u2 = new org.bytedeco.opencv.opencv_core.CvPoint;

        specialinvoke $u2.<org.bytedeco.opencv.opencv_core.CvPoint: void <init>(long)>(4L);

        $stack103 = virtualinvoke $u2.<org.bytedeco.opencv.opencv_core.CvPoint: org.bytedeco.opencv.opencv_core.CvPoint put(byte,double[],int,int)>(16, projPts, 0, 8);

        $stack104 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar WHITE>;

        $r72 = (org.bytedeco.opencv.opencv_core.CvArr) $stack102;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvFillConvexPoly(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvPoint,int,org.bytedeco.opencv.opencv_core.CvScalar,int,int)>($r72, $stack103, 4, $stack104, 8, 16);

        $r73 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack107 = $r73.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $r74 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack106 = $r74.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask2>;

        $r75 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack105 = $r75.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $r76 = (org.bytedeco.opencv.opencv_core.CvArr) $stack107;

        $r77 = (org.bytedeco.opencv.opencv_core.CvArr) $stack106;

        $r78 = (org.bytedeco.opencv.opencv_core.CvArr) $stack105;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvAnd(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r76, $r77, $r78, null);

        $r79 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack109 = $r79.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $r80 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack108 = $r80.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $r81 = (org.bytedeco.opencv.opencv_core.CvArr) $stack109;

        $r82 = (org.bytedeco.opencv.opencv_core.CvArr) $stack108;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvErode(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.IplConvKernel,int)>($r81, $r82, null, 1);

        $r83 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack111 = $r83.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage undistImage>;

        $r84 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack110 = $r84.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.opencv.opencv_core.IplImage mask>;

        $r85 = (org.bytedeco.opencv.opencv_core.CvArr) $stack111;

        $r86 = (org.bytedeco.opencv.opencv_core.CvArr) $stack110;

        j#434 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvScalar cvAvg(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r85, $r86);

        $r87 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack113 = $r87.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.CameraDevice camera>;

        o = virtualinvoke $stack113.<org.bytedeco.javacv.CameraDevice: int[] getRGBColorOrder()>();

        s = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: double highValue()>();

        $r88 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack118 = $r88.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] cameraColors>;

        $r89 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack119 = $r89.<org.bytedeco.javacv.ProCamColorCalibrator: int counter>;

        $u3 = new java.awt.Color;

        $stack117 = o[0];

        $stack120 = virtualinvoke j#434.<org.bytedeco.opencv.opencv_core.CvScalar: double val(int)>($stack117);

        $stack121 = $stack120 / s;

        $stack123 = (float) $stack121;

        $stack122 = o[1];

        $stack124 = virtualinvoke j#434.<org.bytedeco.opencv.opencv_core.CvScalar: double val(int)>($stack122);

        $stack125 = $stack124 / s;

        $stack127 = (float) $stack125;

        $stack126 = o[2];

        $stack128 = virtualinvoke j#434.<org.bytedeco.opencv.opencv_core.CvScalar: double val(int)>($stack126);

        $stack129 = $stack128 / s;

        $stack130 = (float) $stack129;

        specialinvoke $u3.<java.awt.Color: void <init>(float,float,float)>($stack123, $stack127, $stack130);

        $stack118[$stack119] = $u3;

        return 1;

     label15:
        return 0;
    }

    public double calibrate()
    {
        ProCamColorCalibrator this;
        java.awt.Color[] cc, pc;
        boolean $stack6;
        org.bytedeco.javacv.ProjectorDevice $stack8, $stack9, $stack19;
        double $stack10, $stack20;
        org.bytedeco.javacv.CameraDevice $stack11, $stack13, $stack15, $stack17;
        org.bytedeco.opencv.opencv_core.CvMat $stack12, $stack14, $stack16, $stack18;
        int $stack21, $stack22;
        java.lang.AssertionError $u0;
        org.bytedeco.javacv.ColorCalibrator $u1;
        org.bytedeco.javacv.ProCamColorCalibrator $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r10, $r12, $r13;
        org.bytedeco.javacv.ProjectiveDevice $r4;
        org.bytedeco.opencv.opencv_core.CvArr $r9, $r11;

        this := @this: ProCamColorCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        cc = virtualinvoke $r0.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] getCameraColors()>();

        $r1 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        pc = virtualinvoke $r1.<org.bytedeco.javacv.ProCamColorCalibrator: java.awt.Color[] getProjectorColors()>();

        $stack6 = <org.bytedeco.javacv.ProCamColorCalibrator: boolean $assertionsDisabled>;

        if $stack6 != 0 goto label1;

        $r2 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack22 = $r2.<org.bytedeco.javacv.ProCamColorCalibrator: int counter>;

        $stack21 = lengthof pc;

        if $stack22 == $stack21 goto label1;

        $u0 = new java.lang.AssertionError;

        specialinvoke $u0.<java.lang.AssertionError: void <init>()>();

        throw $u0;

     label1:
        $u1 = new org.bytedeco.javacv.ColorCalibrator;

        $r3 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack8 = $r3.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProjectorDevice projector>;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) $stack8;

        specialinvoke $u1.<org.bytedeco.javacv.ColorCalibrator: void <init>(org.bytedeco.javacv.ProjectiveDevice)>($r4);

        $r5 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack9 = $r5.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProjectorDevice projector>;

        $stack10 = virtualinvoke $u1.<org.bytedeco.javacv.ColorCalibrator: double calibrate(java.awt.Color[],java.awt.Color[])>(cc, pc);

        $stack9.<org.bytedeco.javacv.ProjectorDevice: double avgColorErr> = $stack10;

        $r6 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack11 = $r6.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.CameraDevice camera>;

        $stack12 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $stack11.<org.bytedeco.javacv.CameraDevice: org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix> = $stack12;

        $r7 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack13 = $r7.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.CameraDevice camera>;

        $stack14 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 1);

        $stack13.<org.bytedeco.javacv.CameraDevice: org.bytedeco.opencv.opencv_core.CvMat additiveLight> = $stack14;

        $r8 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack15 = $r8.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.CameraDevice camera>;

        $stack16 = $stack15.<org.bytedeco.javacv.CameraDevice: org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix>;

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) $stack16;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetIdentity(org.bytedeco.opencv.opencv_core.CvArr)>($r9);

        $r10 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack17 = $r10.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.CameraDevice camera>;

        $stack18 = $stack17.<org.bytedeco.javacv.CameraDevice: org.bytedeco.opencv.opencv_core.CvMat additiveLight>;

        $r11 = (org.bytedeco.opencv.opencv_core.CvArr) $stack18;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetZero(org.bytedeco.opencv.opencv_core.CvArr)>($r11);

        $r12 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $r12.<org.bytedeco.javacv.ProCamColorCalibrator: int counter> = 0;

        $r13 = (org.bytedeco.javacv.ProCamColorCalibrator) this;

        $stack19 = $r13.<org.bytedeco.javacv.ProCamColorCalibrator: org.bytedeco.javacv.ProjectorDevice projector>;

        $stack20 = $stack19.<org.bytedeco.javacv.ProjectorDevice: double avgColorErr>;

        return $stack20;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack7;
        java.lang.ThreadLocal $stack2, $stack3, $stack4, $stack5, $stack6;

        $stack0 = class "Lorg/bytedeco/javacv/ProCamColorCalibrator;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack7 = 1;

        goto label2;

     label1:
        $stack7 = 0;

     label2:
        <org.bytedeco.javacv.ProCamColorCalibrator: boolean $assertionsDisabled> = $stack7;

        $stack2 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 3);

        <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal H3x3> = $stack2;

        $stack3 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 3);

        <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal R3x3> = $stack3;

        $stack4 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 1);

        <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal t3x1> = $stack4;

        $stack5 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 1);

        <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal n3x1> = $stack5;

        $stack6 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 1);

        <org.bytedeco.javacv.ProCamColorCalibrator: java.lang.ThreadLocal z3x1> = $stack6;

        return;
    }
}
