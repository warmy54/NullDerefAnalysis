public class ProCamGeometricCalibrator extends java.lang.Object
{
    private final int MSB_IMAGE_SHIFT;
    private final int LSB_IMAGE_SHIFT;
    private org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings;
    private org.bytedeco.javacv.MarkerDetector$Settings detectorSettings;
    private org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators;
    private org.bytedeco.javacv.MarkerDetector[] markerDetectors;
    java.util.LinkedList[] allImagedBoardMarkers;
    private org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage;
    private org.bytedeco.opencv.opencv_core.IplImage[] tempImage1;
    private org.bytedeco.opencv.opencv_core.IplImage[] tempImage2;
    private org.bytedeco.javacv.Marker[][] lastDetectedMarkers1;
    private org.bytedeco.javacv.Marker[][] lastDetectedMarkers2;
    private double[] rmseBoardWarp;
    private double[] rmseProjWarp;
    private org.bytedeco.opencv.opencv_core.CvMat[] boardWarp;
    private org.bytedeco.opencv.opencv_core.CvMat[] projWarp;
    private org.bytedeco.opencv.opencv_core.CvMat[] prevBoardWarp;
    private org.bytedeco.opencv.opencv_core.CvMat[] lastBoardWarp;
    private org.bytedeco.opencv.opencv_core.CvMat[] tempPts1;
    private org.bytedeco.opencv.opencv_core.CvMat[] tempPts2;
    private boolean updatePrewarp;
    private final org.bytedeco.javacv.MarkedPlane boardPlane;
    private final org.bytedeco.javacv.MarkedPlane projectorPlane;
    private final org.bytedeco.javacv.GeometricCalibrator projectorCalibrator;
    private final org.bytedeco.opencv.opencv_core.CvMat boardWarpSrcPts;
    private static java.lang.ThreadLocal tempWarp3x3;
    static final boolean $assertionsDisabled;

    public void <init>(org.bytedeco.javacv.ProCamGeometricCalibrator$Settings, org.bytedeco.javacv.MarkerDetector$Settings, org.bytedeco.javacv.MarkedPlane, org.bytedeco.javacv.MarkedPlane, org.bytedeco.javacv.ProjectiveDevice, org.bytedeco.javacv.ProjectiveDevice)
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings;
        org.bytedeco.javacv.MarkerDetector$Settings detectorSettings;
        org.bytedeco.javacv.MarkedPlane boardPlane, projectorPlane;
        org.bytedeco.javacv.GeometricCalibrator[] $stack7;
        org.bytedeco.javacv.ProjectiveDevice camera, projector;
        org.bytedeco.javacv.GeometricCalibrator $u0, $u1;
        org.bytedeco.javacv.GeometricCalibrator$Settings $r0, $r1;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r2;

        this := @this: ProCamGeometricCalibrator;

        settings := @parameter0: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings;

        detectorSettings := @parameter1: org.bytedeco.javacv.MarkerDetector$Settings;

        boardPlane := @parameter2: org.bytedeco.javacv.MarkedPlane;

        projectorPlane := @parameter3: org.bytedeco.javacv.MarkedPlane;

        camera := @parameter4: org.bytedeco.javacv.ProjectiveDevice;

        projector := @parameter5: org.bytedeco.javacv.ProjectiveDevice;

        $stack7 = newarray (org.bytedeco.javacv.GeometricCalibrator)[1];

        $u0 = new org.bytedeco.javacv.GeometricCalibrator;

        $r0 = (org.bytedeco.javacv.GeometricCalibrator$Settings) settings;

        specialinvoke $u0.<org.bytedeco.javacv.GeometricCalibrator: void <init>(org.bytedeco.javacv.GeometricCalibrator$Settings,org.bytedeco.javacv.MarkerDetector$Settings,org.bytedeco.javacv.MarkedPlane,org.bytedeco.javacv.ProjectiveDevice)>($r0, detectorSettings, boardPlane, camera);

        this.<ProCamGeometricCalibrator: int LSB_IMAGE_SHIFT> = 7;

        this.<ProCamGeometricCalibrator: int MSB_IMAGE_SHIFT> = 8;

        $stack7[0] = $u0;

        $u1 = new org.bytedeco.javacv.GeometricCalibrator;

        $r1 = (org.bytedeco.javacv.GeometricCalibrator$Settings) settings;

        specialinvoke $u1.<org.bytedeco.javacv.GeometricCalibrator: void <init>(org.bytedeco.javacv.GeometricCalibrator$Settings,org.bytedeco.javacv.MarkerDetector$Settings,org.bytedeco.javacv.MarkedPlane,org.bytedeco.javacv.ProjectiveDevice)>($r1, detectorSettings, projectorPlane, projector);

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        specialinvoke $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: void <init>(org.bytedeco.javacv.ProCamGeometricCalibrator$Settings,org.bytedeco.javacv.MarkerDetector$Settings,org.bytedeco.javacv.MarkedPlane,org.bytedeco.javacv.MarkedPlane,org.bytedeco.javacv.GeometricCalibrator[],org.bytedeco.javacv.GeometricCalibrator)>(settings, detectorSettings, boardPlane, projectorPlane, $stack7, $u1);

        return;
    }

    public void <init>(org.bytedeco.javacv.ProCamGeometricCalibrator$Settings, org.bytedeco.javacv.MarkerDetector$Settings, org.bytedeco.javacv.MarkedPlane, org.bytedeco.javacv.MarkedPlane, org.bytedeco.javacv.GeometricCalibrator[], org.bytedeco.javacv.GeometricCalibrator)
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings;
        org.bytedeco.javacv.MarkerDetector$Settings detectorSettings;
        org.bytedeco.javacv.MarkedPlane boardPlane, projectorPlane;
        org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators;
        int n, i, h;
        org.bytedeco.javacv.MarkerDetector[] $stack10, $stack45;
        java.util.LinkedList[] $stack11, $stack47;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack12, $stack13, $stack14, $stack48, $stack49, $stack50;
        org.bytedeco.javacv.Marker[][] $stack15, $stack16, $stack51, $stack52;
        double[] $stack17, $stack18, $stack36, $stack53, $stack54;
        org.bytedeco.opencv.opencv_core.CvMat[] $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack55, $stack57, $stack59, $stack61, $stack63, $stack65, $stack67, $stack69;
        org.bytedeco.javacv.GeometricCalibrator projectorCalibrator;
        org.bytedeco.opencv.opencv_core.CvMat $stack25, $stack41, $stack56, $stack58, $stack60, $stack62, $stack64, $stack66, $stack68, $stack70;
        org.bytedeco.opencv.opencv_core.IplImage $stack26, $stack28, $stack32, $stack34;
        org.bytedeco.javacv.ProjectiveDevice $stack30, $stack31;
        double $stack37, $stack38, $stack39, $stack40;
        org.bytedeco.javacv.MarkerDetector $u0;
        java.util.LinkedList $u1;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r38, $r40, $r41, $r42, $r43, $r44;
        org.bytedeco.opencv.opencv_core.CvArr $r37, $r39;

        this := @this: ProCamGeometricCalibrator;

        settings := @parameter0: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings;

        detectorSettings := @parameter1: org.bytedeco.javacv.MarkerDetector$Settings;

        boardPlane := @parameter2: org.bytedeco.javacv.MarkedPlane;

        projectorPlane := @parameter3: org.bytedeco.javacv.MarkedPlane;

        cameraCalibrators := @parameter4: org.bytedeco.javacv.GeometricCalibrator[];

        projectorCalibrator := @parameter5: org.bytedeco.javacv.GeometricCalibrator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<ProCamGeometricCalibrator: int LSB_IMAGE_SHIFT> = 7;

        this.<ProCamGeometricCalibrator: int MSB_IMAGE_SHIFT> = 8;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: int MSB_IMAGE_SHIFT> = 8;

        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: int LSB_IMAGE_SHIFT> = 7;

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: boolean updatePrewarp> = 0;

        $r3 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r3.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings> = settings;

        $r4 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r4.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkerDetector$Settings detectorSettings> = detectorSettings;

        $r5 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r5.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane> = boardPlane;

        $r6 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r6.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane> = projectorPlane;

        $r7 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r7.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators> = cameraCalibrators;

        n = lengthof cameraCalibrators;

        $stack10 = newarray (org.bytedeco.javacv.MarkerDetector)[n];

        $r8 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r8.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkerDetector[] markerDetectors> = $stack10;

        $stack11 = newarray (java.util.LinkedList)[n];

        $r9 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r9.<org.bytedeco.javacv.ProCamGeometricCalibrator: java.util.LinkedList[] allImagedBoardMarkers> = $stack11;

        $stack12 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[n];

        $r10 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r10.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage> = $stack12;

        $stack13 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[n];

        $r11 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r11.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage1> = $stack13;

        $stack14 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[n];

        $r12 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r12.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage2> = $stack14;

        $stack15 = newarray (org.bytedeco.javacv.Marker[])[n];

        $r13 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r13.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers1> = $stack15;

        $stack16 = newarray (org.bytedeco.javacv.Marker[])[n];

        $r14 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r14.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers2> = $stack16;

        $stack17 = newarray (double)[n];

        $r15 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r15.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseBoardWarp> = $stack17;

        $stack18 = newarray (double)[n];

        $r16 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r16.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseProjWarp> = $stack18;

        $stack19 = newarray (org.bytedeco.opencv.opencv_core.CvMat)[n];

        $r17 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r17.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp> = $stack19;

        $stack20 = newarray (org.bytedeco.opencv.opencv_core.CvMat)[n];

        $r18 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r18.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] projWarp> = $stack20;

        $stack21 = newarray (org.bytedeco.opencv.opencv_core.CvMat)[n];

        $r19 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r19.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] prevBoardWarp> = $stack21;

        $stack22 = newarray (org.bytedeco.opencv.opencv_core.CvMat)[n];

        $r20 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r20.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] lastBoardWarp> = $stack22;

        $stack23 = newarray (org.bytedeco.opencv.opencv_core.CvMat)[n];

        $r21 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r21.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts1> = $stack23;

        $stack24 = newarray (org.bytedeco.opencv.opencv_core.CvMat)[n];

        $r22 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r22.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts2> = $stack24;

        i = 0;

     label1:
        if i >= n goto label2;

        $r23 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack45 = $r23.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkerDetector[] markerDetectors>;

        $u0 = new org.bytedeco.javacv.MarkerDetector;

        specialinvoke $u0.<org.bytedeco.javacv.MarkerDetector: void <init>(org.bytedeco.javacv.MarkerDetector$Settings)>(detectorSettings);

        $stack45[i] = $u0;

        $r24 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack47 = $r24.<org.bytedeco.javacv.ProCamGeometricCalibrator: java.util.LinkedList[] allImagedBoardMarkers>;

        $u1 = new java.util.LinkedList;

        specialinvoke $u1.<java.util.LinkedList: void <init>()>();

        $stack47[i] = $u1;

        $r25 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack48 = $r25.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack48[i] = null;

        $r26 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack49 = $r26.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage1>;

        $stack49[i] = null;

        $r27 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack50 = $r27.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage2>;

        $stack50[i] = null;

        $r28 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack51 = $r28.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers1>;

        $stack51[i] = null;

        $r29 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack52 = $r29.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers2>;

        $stack52[i] = null;

        $r30 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack53 = $r30.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseBoardWarp>;

        $stack53[i] = #Infinity;

        $r31 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack54 = $r31.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseProjWarp>;

        $stack54[i] = #Infinity;

        $r32 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack55 = $r32.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack56 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $stack55[i] = $stack56;

        $r33 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack57 = $r33.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] projWarp>;

        $stack58 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $stack57[i] = $stack58;

        $r34 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack59 = $r34.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] prevBoardWarp>;

        $stack60 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $stack59[i] = $stack60;

        $r35 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack61 = $r35.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] lastBoardWarp>;

        $stack62 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $stack61[i] = $stack62;

        $r36 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack63 = $r36.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] prevBoardWarp>;

        $stack64 = $stack63[i];

        $r37 = (org.bytedeco.opencv.opencv_core.CvArr) $stack64;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetIdentity(org.bytedeco.opencv.opencv_core.CvArr)>($r37);

        $r38 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack65 = $r38.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] lastBoardWarp>;

        $stack66 = $stack65[i];

        $r39 = (org.bytedeco.opencv.opencv_core.CvArr) $stack66;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetIdentity(org.bytedeco.opencv.opencv_core.CvArr)>($r39);

        $r40 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack67 = $r40.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts1>;

        $stack68 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int,int,int)>(1, 4, 6, 2);

        $stack67[i] = $stack68;

        $r41 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack69 = $r41.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts2>;

        $stack70 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int,int,int)>(1, 4, 6, 2);

        $stack69[i] = $stack70;

        i = i + 1;

        goto label1;

     label2:
        $r42 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r42.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator> = projectorCalibrator;

        $stack25 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int,int,int)>(1, 4, 6, 2);

        $r43 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r43.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardWarpSrcPts> = $stack25;

        if boardPlane == null goto label3;

        $stack32 = virtualinvoke boardPlane.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage getImage()>();

        i = virtualinvoke $stack32.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack34 = virtualinvoke boardPlane.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage getImage()>();

        h = virtualinvoke $stack34.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $r44 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack41 = $r44.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardWarpSrcPts>;

        $stack36 = newarray (double)[8];

        $stack36[0] = 0.0;

        $stack36[1] = 0.0;

        $stack37 = (double) i;

        $stack36[2] = $stack37;

        $stack36[3] = 0.0;

        $stack38 = (double) i;

        $stack36[4] = $stack38;

        $stack39 = (double) h;

        $stack36[5] = $stack39;

        $stack36[6] = 0.0;

        $stack40 = (double) h;

        $stack36[7] = $stack40;

        virtualinvoke $stack41.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack36);

     label3:
        if projectorPlane == null goto label4;

        $stack26 = virtualinvoke projectorPlane.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage getImage()>();

        i = virtualinvoke $stack26.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack28 = virtualinvoke projectorPlane.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage getImage()>();

        h = virtualinvoke $stack28.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack30 = virtualinvoke projectorCalibrator.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack30.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth> = i;

        $stack31 = virtualinvoke projectorCalibrator.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack31.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight> = h;

     label4:
        return;
    }

    public org.bytedeco.javacv.MarkedPlane getBoardPlane()
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.MarkedPlane $stack1;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        return $stack1;
    }

    public org.bytedeco.javacv.MarkedPlane getProjectorPlane()
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.MarkedPlane $stack1;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        return $stack1;
    }

    public org.bytedeco.javacv.GeometricCalibrator[] getCameraCalibrators()
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.GeometricCalibrator[] $stack1;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        return $stack1;
    }

    public org.bytedeco.javacv.GeometricCalibrator getProjectorCalibrator()
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.GeometricCalibrator $stack1;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        return $stack1;
    }

    public int getImageCount()
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.GeometricCalibrator $stack6, c;
        int $stack7, $stack9, n, l3, $stack13, l4;
        org.bytedeco.javacv.GeometricCalibrator[] $stack8, l2;
        boolean $stack10;
        java.lang.AssertionError $u0;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2;

        this := @this: ProCamGeometricCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack6 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        $stack7 = virtualinvoke $stack6.<org.bytedeco.javacv.GeometricCalibrator: int getImageCount()>();

        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack8 = $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack9 = lengthof $stack8;

        n = $stack7 / $stack9;

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        l2 = $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        l3 = lengthof l2;

        l4 = 0;

     label1:
        if l4 >= l3 goto label3;

        c = l2[l4];

        $stack10 = <org.bytedeco.javacv.ProCamGeometricCalibrator: boolean $assertionsDisabled>;

        if $stack10 != 0 goto label2;

        $stack13 = virtualinvoke c.<org.bytedeco.javacv.GeometricCalibrator: int getImageCount()>();

        if $stack13 == n goto label2;

        $u0 = new java.lang.AssertionError;

        specialinvoke $u0.<java.lang.AssertionError: void <init>()>();

        throw $u0;

     label2:
        l4 = l4 + 1;

        goto label1;

     label3:
        return n;
    }

    public org.bytedeco.javacv.Marker[][] processCameraImage(org.bytedeco.opencv.opencv_core.IplImage)
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.opencv.opencv_core.IplImage cameraImage;
        org.bytedeco.javacv.Marker[][] $stack2;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        cameraImage := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack2 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] processCameraImage(org.bytedeco.opencv.opencv_core.IplImage,int)>(cameraImage, 0);

        return $stack2;
    }

    public org.bytedeco.javacv.Marker[][] processCameraImage(org.bytedeco.opencv.opencv_core.IplImage, int)
    {
        ProCamGeometricCalibrator this;
        int cameraNumber, $stack8, $stack12, $stack13, $stack31, $stack80, $stack83, $stack109, $stack112, $stack135, $stack136, $stack149, $stack150, $stack153, $stack154, $stack123, $stack124, $stack125, $stack127, $stack48, $stack51, $stack56, $stack61, $stack64, $stack69;
        org.bytedeco.javacv.GeometricCalibrator[] $stack5, $stack9;
        org.bytedeco.javacv.GeometricCalibrator $stack6, $stack10;
        org.bytedeco.javacv.ProjectiveDevice $stack7, $stack11;
        org.bytedeco.opencv.opencv_core.IplImage cameraImage, $stack30, $stack44, $stack79, $stack82, $stack108, $stack111, $stack121, $stack134, $stack148, $stack152, $stack128, $stack130, $stack46, $stack50, $stack53, $stack57, $stack59, $stack63, $stack66, $stack70;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack14, $stack29, $stack43, $stack78, $stack81, $stack107, $stack110, $stack120, $stack133, $stack147, $stack151, $stack122, $stack129, $stack47, $stack45, $stack49, $stack52, $stack60, $stack58, $stack62, $stack65;
        org.bytedeco.javacv.MarkedPlane $stack15, $stack18, $stack22, $stack25;
        org.bytedeco.opencv.opencv_core.CvScalar $stack16, $stack19, $stack23, $stack26;
        double $stack17, $stack20, $stack24, $stack27;
        byte $stack21, $stack28;
        boolean boardWhiteMarkers, projWhiteMarkers, $stack37, $stack117, $stack113;
        java.lang.Object[] $stack32, $stack71;
        org.bytedeco.javacv.Marker[][] $stack39, $stack41, $stack38;
        org.bytedeco.javacv.Marker[] $stack40, $stack42;
        org.bytedeco.javacv.ProCamGeometricCalibrator$1 $u0;
        org.bytedeco.javacv.ProCamGeometricCalibrator$2 $u1;
        org.bytedeco.javacv.ProCamGeometricCalibrator$3 $u2;
        org.bytedeco.javacv.ProCamGeometricCalibrator$4 $u3;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r32, $r33, $r35, $r36, $r37;
        org.bytedeco.opencv.opencv_core.CvArr $r8, $r9;
        java.lang.Runnable[] $r31, $r34;

        this := @this: ProCamGeometricCalibrator;

        cameraImage := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        cameraNumber := @parameter1: int;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack5 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack6 = $stack5[cameraNumber];

        $stack7 = virtualinvoke $stack6.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack8 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack7.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth> = $stack8;

        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack9 = $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack10 = $stack9[cameraNumber];

        $stack11 = virtualinvoke $stack10.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack12 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack11.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight> = $stack12;

        $stack13 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int nChannels()>();

        if $stack13 <= 1 goto label03;

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack120 = $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack121 = $stack120[cameraNumber];

        if $stack121 == null goto label01;

        $r3 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack133 = $r3.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack134 = $stack133[cameraNumber];

        $stack135 = virtualinvoke $stack134.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack136 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        if $stack135 != $stack136 goto label01;

        $r4 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack147 = $r4.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack148 = $stack147[cameraNumber];

        $stack149 = virtualinvoke $stack148.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack150 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        if $stack149 != $stack150 goto label01;

        $r5 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack151 = $r5.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack152 = $stack151[cameraNumber];

        $stack153 = virtualinvoke $stack152.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        $stack154 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        if $stack153 == $stack154 goto label02;

     label01:
        $r6 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack122 = $r6.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack123 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $stack124 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack125 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        $stack127 = virtualinvoke cameraImage.<org.bytedeco.opencv.opencv_core.IplImage: int origin()>();

        $stack128 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>($stack123, $stack124, $stack125, 1, $stack127);

        $stack122[cameraNumber] = $stack128;

     label02:
        $r7 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack129 = $r7.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack130 = $stack129[cameraNumber];

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) cameraImage;

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) $stack130;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvCvtColor(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r8, $r9, 6);

        goto label04;

     label03:
        $r10 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack14 = $r10.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack14[cameraNumber] = cameraImage;

     label04:
        $r11 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack15 = $r11.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        $stack16 = virtualinvoke $stack15.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar getForegroundColor()>();

        $stack17 = virtualinvoke $stack16.<org.bytedeco.opencv.opencv_core.CvScalar: double magnitude()>();

        $r12 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack18 = $r12.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        $stack19 = virtualinvoke $stack18.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar getBackgroundColor()>();

        $stack20 = virtualinvoke $stack19.<org.bytedeco.opencv.opencv_core.CvScalar: double magnitude()>();

        $stack21 = $stack17 cmpl $stack20;

        if $stack21 <= 0 goto label05;

        $stack117 = 1;

        goto label06;

     label05:
        $stack117 = 0;

     label06:
        boardWhiteMarkers = $stack117;

        $r13 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack22 = $r13.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $stack23 = virtualinvoke $stack22.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar getForegroundColor()>();

        $stack24 = virtualinvoke $stack23.<org.bytedeco.opencv.opencv_core.CvScalar: double magnitude()>();

        $r14 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack25 = $r14.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $stack26 = virtualinvoke $stack25.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvScalar getBackgroundColor()>();

        $stack27 = virtualinvoke $stack26.<org.bytedeco.opencv.opencv_core.CvScalar: double magnitude()>();

        $stack28 = $stack24 cmpl $stack27;

        if $stack28 <= 0 goto label07;

        $stack113 = 1;

        goto label08;

     label07:
        $stack113 = 0;

     label08:
        projWhiteMarkers = $stack113;

        $r15 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack29 = $r15.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack30 = $stack29[cameraNumber];

        $stack31 = virtualinvoke $stack30.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        if $stack31 <= 8 goto label11;

        $r16 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack43 = $r16.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage1>;

        $stack44 = $stack43[cameraNumber];

        if $stack44 == null goto label09;

        $r17 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack78 = $r17.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage1>;

        $stack79 = $stack78[cameraNumber];

        $stack80 = virtualinvoke $stack79.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $r18 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack81 = $r18.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack82 = $stack81[cameraNumber];

        $stack83 = virtualinvoke $stack82.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        if $stack80 != $stack83 goto label09;

        $r19 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack107 = $r19.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage1>;

        $stack108 = $stack107[cameraNumber];

        $stack109 = virtualinvoke $stack108.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $r20 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack110 = $r20.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack111 = $stack110[cameraNumber];

        $stack112 = virtualinvoke $stack111.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        if $stack109 == $stack112 goto label10;

     label09:
        $r21 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack47 = $r21.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage1>;

        $r22 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack45 = $r22.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack46 = $stack45[cameraNumber];

        $stack48 = virtualinvoke $stack46.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $r23 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack49 = $r23.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack50 = $stack49[cameraNumber];

        $stack51 = virtualinvoke $stack50.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $r24 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack52 = $r24.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack53 = $stack52[cameraNumber];

        $stack56 = virtualinvoke $stack53.<org.bytedeco.opencv.opencv_core.IplImage: int origin()>();

        $stack57 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>($stack48, $stack51, 8, 1, $stack56);

        $stack47[cameraNumber] = $stack57;

        $r25 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack60 = $r25.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage2>;

        $r26 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack58 = $r26.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack59 = $stack58[cameraNumber];

        $stack61 = virtualinvoke $stack59.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $r27 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack62 = $r27.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack63 = $stack62[cameraNumber];

        $stack64 = virtualinvoke $stack63.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $r28 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack65 = $r28.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        $stack66 = $stack65[cameraNumber];

        $stack69 = virtualinvoke $stack66.<org.bytedeco.opencv.opencv_core.IplImage: int origin()>();

        $stack70 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int,int)>($stack61, $stack64, 8, 1, $stack69);

        $stack60[cameraNumber] = $stack70;

     label10:
        $stack71 = newarray (java.lang.Runnable)[2];

        $u0 = new org.bytedeco.javacv.ProCamGeometricCalibrator$1;

        $r29 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        specialinvoke $u0.<org.bytedeco.javacv.ProCamGeometricCalibrator$1: void <init>(org.bytedeco.javacv.ProCamGeometricCalibrator,int,boolean)>($r29, cameraNumber, boardWhiteMarkers);

        $stack71[0] = $u0;

        $u1 = new org.bytedeco.javacv.ProCamGeometricCalibrator$2;

        $r30 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        specialinvoke $u1.<org.bytedeco.javacv.ProCamGeometricCalibrator$2: void <init>(org.bytedeco.javacv.ProCamGeometricCalibrator,int,boolean)>($r30, cameraNumber, projWhiteMarkers);

        $stack71[1] = $u1;

        $r31 = (java.lang.Runnable[]) $stack71;

        staticinvoke <org.bytedeco.javacv.Parallel: void run(java.lang.Runnable[])>($r31);

        goto label12;

     label11:
        $stack32 = newarray (java.lang.Runnable)[2];

        $u2 = new org.bytedeco.javacv.ProCamGeometricCalibrator$3;

        $r32 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        specialinvoke $u2.<org.bytedeco.javacv.ProCamGeometricCalibrator$3: void <init>(org.bytedeco.javacv.ProCamGeometricCalibrator,int,boolean)>($r32, cameraNumber, boardWhiteMarkers);

        $stack32[0] = $u2;

        $u3 = new org.bytedeco.javacv.ProCamGeometricCalibrator$4;

        $r33 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        specialinvoke $u3.<org.bytedeco.javacv.ProCamGeometricCalibrator$4: void <init>(org.bytedeco.javacv.ProCamGeometricCalibrator,int,boolean)>($r33, cameraNumber, $stack113);

        $stack32[1] = $u3;

        $r34 = (java.lang.Runnable[]) $stack32;

        staticinvoke <org.bytedeco.javacv.Parallel: void run(java.lang.Runnable[])>($r34);

     label12:
        $r35 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack37 = virtualinvoke $r35.<org.bytedeco.javacv.ProCamGeometricCalibrator: boolean processMarkers(int)>(cameraNumber);

        if $stack37 == 0 goto label13;

        $stack38 = newarray (org.bytedeco.javacv.Marker[])[2];

        $r36 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack39 = $r36.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers1>;

        $stack40 = $stack39[cameraNumber];

        $stack38[0] = $stack40;

        $r37 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack41 = $r37.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers2>;

        $stack42 = $stack41[cameraNumber];

        $stack38[1] = $stack42;

        goto label14;

     label13:
        $stack38 = null;

     label14:
        return $stack38;
    }

    public void drawMarkers(org.bytedeco.opencv.opencv_core.IplImage)
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.opencv.opencv_core.IplImage image;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        image := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: void drawMarkers(org.bytedeco.opencv.opencv_core.IplImage,int)>(image, 0);

        return;
    }

    public void drawMarkers(org.bytedeco.opencv.opencv_core.IplImage, int)
    {
        ProCamGeometricCalibrator this;
        int cameraNumber;
        org.bytedeco.javacv.GeometricCalibrator[] $stack3;
        org.bytedeco.javacv.GeometricCalibrator $stack4, $stack8;
        org.bytedeco.opencv.opencv_core.IplImage image;
        org.bytedeco.javacv.Marker[][] $stack5, $stack9;
        org.bytedeco.javacv.Marker[] $stack6, $stack10;
        org.bytedeco.javacv.MarkerDetector $stack7, $stack11;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2, $r3;

        this := @this: ProCamGeometricCalibrator;

        image := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        cameraNumber := @parameter1: int;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack3 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack4 = $stack3[cameraNumber];

        $stack7 = $stack4.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.MarkerDetector markerDetector>;

        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack5 = $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers1>;

        $stack6 = $stack5[cameraNumber];

        virtualinvoke $stack7.<org.bytedeco.javacv.MarkerDetector: void draw(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.javacv.Marker[])>(image, $stack6);

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack8 = $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        $stack11 = $stack8.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.MarkerDetector markerDetector>;

        $r3 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack9 = $r3.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers2>;

        $stack10 = $stack9[cameraNumber];

        virtualinvoke $stack11.<org.bytedeco.javacv.MarkerDetector: void draw(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.javacv.Marker[])>(image, $stack10);

        return;
    }

    public boolean processMarkers()
    {
        ProCamGeometricCalibrator this;
        boolean $stack1;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: boolean processMarkers(int)>(0);

        return $stack1;
    }

    public boolean processMarkers(int)
    {
        ProCamGeometricCalibrator this;
        int cameraNumber;
        org.bytedeco.javacv.Marker[][] $stack2, $stack3;
        org.bytedeco.javacv.Marker[] $stack4, $stack5;
        boolean $stack6;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2;

        this := @this: ProCamGeometricCalibrator;

        cameraNumber := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack2 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers1>;

        $stack5 = $stack2[cameraNumber];

        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack3 = $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers2>;

        $stack4 = $stack3[cameraNumber];

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack6 = virtualinvoke $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: boolean processMarkers(org.bytedeco.javacv.Marker[],org.bytedeco.javacv.Marker[],int)>($stack5, $stack4, cameraNumber);

        return $stack6;
    }

    public boolean processMarkers(org.bytedeco.javacv.Marker[], org.bytedeco.javacv.Marker[])
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.Marker[] imagedBoardMarkers, imagedProjectorMarkers;
        boolean $stack3;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        imagedBoardMarkers := @parameter0: org.bytedeco.javacv.Marker[];

        imagedProjectorMarkers := @parameter1: org.bytedeco.javacv.Marker[];

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack3 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: boolean processMarkers(org.bytedeco.javacv.Marker[],org.bytedeco.javacv.Marker[],int)>(imagedBoardMarkers, imagedProjectorMarkers, 0);

        return $stack3;
    }

    public boolean processMarkers(org.bytedeco.javacv.Marker[], org.bytedeco.javacv.Marker[], int)
    {
        ProCamGeometricCalibrator this;
        int cameraNumber, $stack24, $stack26, $stack27, imageSize, $stack43, $stack47, $stack53, $stack57;
        org.bytedeco.javacv.Marker[] imagedBoardMarkers, imagedProjectorMarkers, $stack46, $stack56;
        org.bytedeco.opencv.opencv_core.CvMat[] $stack9, $stack14, $stack63, $stack64, $stack68, $stack69, $stack73, $stack74, $stack78, $stack79, $stack83, $stack84, $stack88, $stack89;
        org.bytedeco.opencv.opencv_core.CvMat $stack10, $stack15, $stack65, $stack66, $stack67, $stack70, $stack71, $stack72, $stack75, $stack76, $stack80, $stack81, $stack82, $stack85, $stack86, $stack90, $stack91;
        org.bytedeco.javacv.MarkedPlane $stack11, $stack16, $stack44, $stack54;
        double[] $stack12, $stack17, $stack28, $stack35;
        double $stack13, $stack18, $stack30, $stack31, $stack32, $stack33, $stack37, $stack38, $stack39, $stack40, $stack45, $stack49, $stack50, $stack51, $stack55, $stack59, $stack60, $stack61, rmsePrev, rmseLast, $stack93, $stack94, $stack95, $stack98, $stack99, $stack100;
        org.bytedeco.javacv.GeometricCalibrator[] $stack19, $stack22;
        org.bytedeco.javacv.GeometricCalibrator $stack20, $stack23;
        org.bytedeco.javacv.ProjectiveDevice $stack21, $stack25;
        org.bytedeco.javacv.ProCamGeometricCalibrator$Settings $stack29, $stack36, $stack48, $stack58, $stack92, $stack97;
        byte $stack34, $stack41, $stack52, $stack62, $stack96, $stack101;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r27, $r28, $r31, $r32, $r33, $r36, $r37, $r40, $r41, $r44, $r45;
        org.bytedeco.opencv.opencv_core.CvArr $r20, $r21, $r25, $r26, $r29, $r30, $r34, $r35, $r38, $r39, $r42, $r43;

        this := @this: ProCamGeometricCalibrator;

        imagedBoardMarkers := @parameter0: org.bytedeco.javacv.Marker[];

        imagedProjectorMarkers := @parameter1: org.bytedeco.javacv.Marker[];

        cameraNumber := @parameter2: int;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack12 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseBoardWarp>;

        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack11 = $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack9 = $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack10 = $stack9[cameraNumber];

        $stack13 = virtualinvoke $stack11.<org.bytedeco.javacv.MarkedPlane: double getTotalWarp(org.bytedeco.javacv.Marker[],org.bytedeco.opencv.opencv_core.CvMat)>(imagedBoardMarkers, $stack10);

        $stack12[cameraNumber] = $stack13;

        $r3 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack17 = $r3.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseProjWarp>;

        $r4 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack16 = $r4.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $r5 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack14 = $r5.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] projWarp>;

        $stack15 = $stack14[cameraNumber];

        $stack18 = virtualinvoke $stack16.<org.bytedeco.javacv.MarkedPlane: double getTotalWarp(org.bytedeco.javacv.Marker[],org.bytedeco.opencv.opencv_core.CvMat)>(imagedProjectorMarkers, $stack15);

        $stack17[cameraNumber] = $stack18;

        $r6 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack19 = $r6.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack20 = $stack19[cameraNumber];

        $stack21 = virtualinvoke $stack20.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack24 = $stack21.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r7 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack22 = $r7.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack23 = $stack22[cameraNumber];

        $stack25 = virtualinvoke $stack23.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack26 = $stack25.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack27 = $stack24 + $stack26;

        imageSize = $stack27 / 2;

        $r8 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack28 = $r8.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseBoardWarp>;

        $stack33 = $stack28[cameraNumber];

        $r9 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack29 = $r9.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings>;

        $stack31 = $stack29.<org.bytedeco.javacv.ProCamGeometricCalibrator$Settings: double prewarpUpdateErrorMax>;

        $stack30 = (double) imageSize;

        $stack32 = $stack31 * $stack30;

        $stack34 = $stack33 cmpg $stack32;

        if $stack34 > 0 goto label1;

        $r10 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack35 = $r10.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseProjWarp>;

        $stack40 = $stack35[cameraNumber];

        $r11 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack36 = $r11.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings>;

        $stack38 = $stack36.<org.bytedeco.javacv.ProCamGeometricCalibrator$Settings: double prewarpUpdateErrorMax>;

        $stack37 = (double) imageSize;

        $stack39 = $stack38 * $stack37;

        $stack41 = $stack40 cmpg $stack39;

        if $stack41 > 0 goto label1;

        $r12 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $r12.<org.bytedeco.javacv.ProCamGeometricCalibrator: boolean updatePrewarp> = 1;

        goto label2;

     label1:
        return 0;

     label2:
        $stack43 = lengthof imagedBoardMarkers;

        $stack45 = (double) $stack43;

        $r13 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack44 = $r13.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        $stack46 = virtualinvoke $stack44.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] getMarkers()>();

        $stack47 = lengthof $stack46;

        $stack50 = (double) $stack47;

        $r14 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack48 = $r14.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings>;

        $stack49 = $stack48.<org.bytedeco.javacv.ProCamGeometricCalibrator$Settings: double detectedBoardMin>;

        $stack51 = $stack50 * $stack49;

        $stack52 = $stack45 cmpg $stack51;

        if $stack52 < 0 goto label3;

        $stack53 = lengthof imagedProjectorMarkers;

        $stack55 = (double) $stack53;

        $r15 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack54 = $r15.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $stack56 = virtualinvoke $stack54.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] getMarkers()>();

        $stack57 = lengthof $stack56;

        $stack60 = (double) $stack57;

        $r16 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack58 = $r16.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings>;

        $stack59 = $stack58.<org.bytedeco.javacv.ProCamGeometricCalibrator$Settings: double detectedProjectorMin>;

        $stack61 = $stack60 * $stack59;

        $stack62 = $stack55 cmpg $stack61;

        if $stack62 >= 0 goto label4;

     label3:
        return 0;

     label4:
        $r17 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack67 = $r17.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardWarpSrcPts>;

        $r18 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack63 = $r18.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts1>;

        $stack66 = $stack63[cameraNumber];

        $r19 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack64 = $r19.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack65 = $stack64[cameraNumber];

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) $stack67;

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) $stack66;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvPerspectiveTransform(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvMat)>($r20, $r21, $stack65);

        $r22 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack72 = $r22.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardWarpSrcPts>;

        $r23 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack68 = $r23.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts2>;

        $stack71 = $stack68[cameraNumber];

        $r24 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack69 = $r24.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] prevBoardWarp>;

        $stack70 = $stack69[cameraNumber];

        $r25 = (org.bytedeco.opencv.opencv_core.CvArr) $stack72;

        $r26 = (org.bytedeco.opencv.opencv_core.CvArr) $stack71;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvPerspectiveTransform(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvMat)>($r25, $r26, $stack70);

        $r27 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack73 = $r27.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts1>;

        $stack76 = $stack73[cameraNumber];

        $r28 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack74 = $r28.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts2>;

        $stack75 = $stack74[cameraNumber];

        $r29 = (org.bytedeco.opencv.opencv_core.CvArr) $stack76;

        $r30 = (org.bytedeco.opencv.opencv_core.CvArr) $stack75;

        rmsePrev = staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvNorm(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r29, $r30);

        $r31 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack82 = $r31.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat boardWarpSrcPts>;

        $r32 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack78 = $r32.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts2>;

        $stack81 = $stack78[cameraNumber];

        $r33 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack79 = $r33.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] lastBoardWarp>;

        $stack80 = $stack79[cameraNumber];

        $r34 = (org.bytedeco.opencv.opencv_core.CvArr) $stack82;

        $r35 = (org.bytedeco.opencv.opencv_core.CvArr) $stack81;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvPerspectiveTransform(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvMat)>($r34, $r35, $stack80);

        $r36 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack83 = $r36.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts1>;

        $stack86 = $stack83[cameraNumber];

        $r37 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack84 = $r37.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] tempPts2>;

        $stack85 = $stack84[cameraNumber];

        $r38 = (org.bytedeco.opencv.opencv_core.CvArr) $stack86;

        $r39 = (org.bytedeco.opencv.opencv_core.CvArr) $stack85;

        rmseLast = staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvNorm(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r38, $r39);

        $r40 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack88 = $r40.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack91 = $stack88[cameraNumber];

        $r41 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack89 = $r41.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] prevBoardWarp>;

        $stack90 = $stack89[cameraNumber];

        $r42 = (org.bytedeco.opencv.opencv_core.CvArr) $stack91;

        $r43 = (org.bytedeco.opencv.opencv_core.CvArr) $stack90;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvCopy(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r42, $r43);

        $r44 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack92 = $r44.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings>;

        $stack94 = $stack92.<org.bytedeco.javacv.ProCamGeometricCalibrator$Settings: double patternSteadySize>;

        $stack93 = (double) imageSize;

        $stack95 = $stack94 * $stack93;

        $stack96 = rmsePrev cmpg $stack95;

        if $stack96 >= 0 goto label5;

        $r45 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack97 = $r45.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings>;

        $stack99 = $stack97.<org.bytedeco.javacv.ProCamGeometricCalibrator$Settings: double patternMovedSize>;

        $stack98 = (double) imageSize;

        $stack100 = $stack99 * $stack98;

        $stack101 = rmseLast cmpl $stack100;

        if $stack101 <= 0 goto label5;

        return 1;

     label5:
        return 0;
    }

    public void addMarkers() throws java.lang.InterruptedException
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: void addMarkers(int)>(0);

        return;
    }

    public void addMarkers(int) throws java.lang.InterruptedException
    {
        ProCamGeometricCalibrator this;
        int cameraNumber;
        org.bytedeco.javacv.Marker[][] $stack2, $stack3;
        org.bytedeco.javacv.Marker[] $stack4, $stack5;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2;

        this := @this: ProCamGeometricCalibrator;

        cameraNumber := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack2 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers1>;

        $stack5 = $stack2[cameraNumber];

        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack3 = $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers2>;

        $stack4 = $stack3[cameraNumber];

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        virtualinvoke $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: void addMarkers(org.bytedeco.javacv.Marker[],org.bytedeco.javacv.Marker[],int)>($stack5, $stack4, cameraNumber);

        return;
    }

    public void addMarkers(org.bytedeco.javacv.Marker[], org.bytedeco.javacv.Marker[]) throws java.lang.InterruptedException
    {
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.Marker[] imagedBoardMarkers, imagedProjectorMarkers;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        imagedBoardMarkers := @parameter0: org.bytedeco.javacv.Marker[];

        imagedProjectorMarkers := @parameter1: org.bytedeco.javacv.Marker[];

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: void addMarkers(org.bytedeco.javacv.Marker[],org.bytedeco.javacv.Marker[],int)>(imagedBoardMarkers, imagedProjectorMarkers, 0);

        return;
    }

    public void addMarkers(org.bytedeco.javacv.Marker[], org.bytedeco.javacv.Marker[], int) throws java.lang.InterruptedException
    {
        java.lang.ThreadLocal $stack16;
        java.lang.Object $stack17;
        org.bytedeco.opencv.opencv_core.CvMat tempWarp, $stack23, $stack46, $stack58, $stack59;
        ProCamGeometricCalibrator this;
        org.bytedeco.javacv.ProCamGeometricCalibrator$Settings $stack18;
        boolean $stack19, outside;
        org.bytedeco.javacv.Marker[] imagedBoardMarkers, boardMarkersToAdd, $stack37, $stack42, imagedProjectorMarkers, $stack65, $stack108, inProjectorBoardMarkers, i#11;
        int $stack20, $stack21, cameraNumber, h, $stack31, $stack32, $stack43, $stack49, $stack51, $stack52, $stack73, $stack76, margin, $stack77, $stack82, $stack83, $stack88, $stack89, $stack93, $stack94, $stack95, i, totalToAdd, i#5, j, $stack44;
        org.bytedeco.opencv.opencv_core.CvMat[] $stack22, $stack56, $stack57;
        org.bytedeco.javacv.MarkedPlane $stack25, $stack28, $stack35, $stack41, $stack45, $stack64, $stack106;
        org.bytedeco.opencv.opencv_core.IplImage $stack26, $stack29;
        java.lang.Object[] $stack33;
        org.bytedeco.javacv.GeometricCalibrator[] $stack34, $stack50, $stack105;
        org.bytedeco.javacv.GeometricCalibrator $stack36, $stack47, $stack48, $stack53, $stack54, $stack60, $stack107;
        java.util.LinkedList[] $stack38, $stack109;
        java.util.LinkedList $stack39, $stack110;
        org.bytedeco.javacv.Marker $stack66, $stack67, $stack70, $stack74, $stack101, $stack102;
        double[] c;
        org.bytedeco.javacv.MarkerDetector$Settings $stack75;
        double $stack78, $stack79, $stack84, $stack85, $stack90, $stack91, $stack96, $stack97;
        byte $stack80, $stack86, $stack92, $stack98;
        java.lang.Throwable $stack115;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2, $r3, $r4, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        org.bytedeco.opencv.opencv_core.CvArr $r5, $r6, $r24, $r25;

        this := @this: ProCamGeometricCalibrator;

        imagedBoardMarkers := @parameter0: org.bytedeco.javacv.Marker[];

        imagedProjectorMarkers := @parameter1: org.bytedeco.javacv.Marker[];

        cameraNumber := @parameter2: int;

        $stack16 = <org.bytedeco.javacv.ProCamGeometricCalibrator: java.lang.ThreadLocal tempWarp3x3>;

        $stack17 = virtualinvoke $stack16.<java.lang.ThreadLocal: java.lang.Object get()>();

        tempWarp = (org.bytedeco.opencv.opencv_core.CvMat) $stack17;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack18 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings>;

        $stack19 = $stack18.<org.bytedeco.javacv.ProCamGeometricCalibrator$Settings: boolean useOnlyIntersection>;

        if $stack19 != 0 goto label01;

        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack105 = $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack107 = $stack105[cameraNumber];

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack106 = $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        $stack108 = virtualinvoke $stack106.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] getMarkers()>();

        virtualinvoke $stack107.<org.bytedeco.javacv.GeometricCalibrator: void addMarkers(org.bytedeco.javacv.Marker[],org.bytedeco.javacv.Marker[])>($stack108, imagedBoardMarkers);

        $r3 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack109 = $r3.<org.bytedeco.javacv.ProCamGeometricCalibrator: java.util.LinkedList[] allImagedBoardMarkers>;

        $stack110 = $stack109[cameraNumber];

        virtualinvoke $stack110.<java.util.LinkedList: boolean add(java.lang.Object)>(imagedBoardMarkers);

        goto label11;

     label01:
        $stack20 = lengthof imagedBoardMarkers;

        inProjectorBoardMarkers = newarray (org.bytedeco.javacv.Marker)[$stack20];

        i = 0;

     label02:
        $stack21 = lengthof inProjectorBoardMarkers;

        if i >= $stack21 goto label03;

        $stack101 = imagedBoardMarkers[i];

        $stack102 = virtualinvoke $stack101.<org.bytedeco.javacv.Marker: org.bytedeco.javacv.Marker clone()>();

        inProjectorBoardMarkers[i] = $stack102;

        i = i + 1;

        goto label02;

     label03:
        $r4 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack22 = $r4.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] projWarp>;

        $stack23 = $stack22[cameraNumber];

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) $stack23;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) tempWarp;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r5, $r6);

        staticinvoke <org.bytedeco.javacv.Marker: void applyWarp(org.bytedeco.javacv.Marker[],org.bytedeco.opencv.opencv_core.CvMat)>(inProjectorBoardMarkers, tempWarp);

        $r7 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack25 = $r7.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $stack26 = virtualinvoke $stack25.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage getImage()>();

        i = virtualinvoke $stack26.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        $r8 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack28 = $r8.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $stack29 = virtualinvoke $stack28.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage getImage()>();

        h = virtualinvoke $stack29.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        $stack31 = lengthof imagedBoardMarkers;

        boardMarkersToAdd = newarray (org.bytedeco.javacv.Marker)[$stack31];

        totalToAdd = 0;

        i#5 = 0;

     label04:
        $stack32 = lengthof inProjectorBoardMarkers;

        if i#5 >= $stack32 goto label10;

        $stack70 = inProjectorBoardMarkers[i#5];

        c = $stack70.<org.bytedeco.javacv.Marker: double[] corners>;

        outside = 0;

        j = 0;

     label05:
        if j >= 4 goto label08;

        $r9 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack75 = $r9.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkerDetector$Settings detectorSettings>;

        $stack76 = $stack75.<org.bytedeco.javacv.MarkerDetector$Settings: int subPixelWindow>;

        margin = $stack76 / 2;

        $stack77 = 2 * j;

        $stack79 = c[$stack77];

        $stack78 = (double) margin;

        $stack80 = $stack79 cmpg $stack78;

        if $stack80 < 0 goto label06;

        $stack82 = 2 * j;

        $stack85 = c[$stack82];

        $stack83 = i - margin;

        $stack84 = (double) $stack83;

        $stack86 = $stack85 cmpl $stack84;

        if $stack86 >= 0 goto label06;

        $stack88 = 2 * j;

        $stack89 = $stack88 + 1;

        $stack91 = c[$stack89];

        $stack90 = (double) margin;

        $stack92 = $stack91 cmpg $stack90;

        if $stack92 < 0 goto label06;

        $stack93 = 2 * j;

        $stack94 = $stack93 + 1;

        $stack97 = c[$stack94];

        $stack95 = h - margin;

        $stack96 = (double) $stack95;

        $stack98 = $stack97 cmpl $stack96;

        if $stack98 < 0 goto label07;

     label06:
        outside = 1;

        goto label08;

     label07:
        j = j + 1;

        goto label05;

     label08:
        if outside != 0 goto label09;

        $stack73 = totalToAdd;

        totalToAdd = totalToAdd + 1;

        $stack74 = imagedBoardMarkers[i#5];

        boardMarkersToAdd[$stack73] = $stack74;

     label09:
        i#5 = i#5 + 1;

        goto label04;

     label10:
        $stack33 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(boardMarkersToAdd, totalToAdd);

        i#11 = (org.bytedeco.javacv.Marker[]) $stack33;

        $r10 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack34 = $r10.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack36 = $stack34[cameraNumber];

        $r11 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack35 = $r11.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        $stack37 = virtualinvoke $stack35.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] getMarkers()>();

        virtualinvoke $stack36.<org.bytedeco.javacv.GeometricCalibrator: void addMarkers(org.bytedeco.javacv.Marker[],org.bytedeco.javacv.Marker[])>($stack37, i#11);

        $r12 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack38 = $r12.<org.bytedeco.javacv.ProCamGeometricCalibrator: java.util.LinkedList[] allImagedBoardMarkers>;

        $stack39 = $stack38[cameraNumber];

        virtualinvoke $stack39.<java.util.LinkedList: boolean add(java.lang.Object)>(i#11);

     label11:
        $r13 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack41 = $r13.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $stack42 = virtualinvoke $stack41.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] getMarkers()>();

        $stack43 = lengthof $stack42;

        inProjectorBoardMarkers = newarray (org.bytedeco.javacv.Marker)[$stack43];

        i#5 = 0;

     label12:
        $stack44 = lengthof inProjectorBoardMarkers;

        if i#5 >= $stack44 goto label13;

        $r14 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack64 = $r14.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $stack65 = virtualinvoke $stack64.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.javacv.Marker[] getMarkers()>();

        $stack66 = $stack65[i#5];

        $stack67 = virtualinvoke $stack66.<org.bytedeco.javacv.Marker: org.bytedeco.javacv.Marker clone()>();

        inProjectorBoardMarkers[i#5] = $stack67;

        i#5 = i#5 + 1;

        goto label12;

     label13:
        $r15 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack45 = $r15.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $stack46 = virtualinvoke $stack45.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat getPrewarp()>();

        staticinvoke <org.bytedeco.javacv.Marker: void applyWarp(org.bytedeco.javacv.Marker[],org.bytedeco.opencv.opencv_core.CvMat)>(inProjectorBoardMarkers, $stack46);

        $r16 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack47 = $r16.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        entermonitor $stack47;

     label14:
        $r17 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack48 = $r17.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        $stack49 = virtualinvoke $stack48.<org.bytedeco.javacv.GeometricCalibrator: int getImageCount()>();

        $r18 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack50 = $r18.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack51 = lengthof $stack50;

        $stack52 = $stack49 % $stack51;

        if $stack52 >= cameraNumber goto label15;

        $r19 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack60 = $r19.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        virtualinvoke $stack60.<java.lang.Object: void wait()>();

        goto label14;

     label15:
        $r20 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack53 = $r20.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        virtualinvoke $stack53.<org.bytedeco.javacv.GeometricCalibrator: void addMarkers(org.bytedeco.javacv.Marker[],org.bytedeco.javacv.Marker[])>(imagedProjectorMarkers, inProjectorBoardMarkers);

        $r21 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack54 = $r21.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        virtualinvoke $stack54.<java.lang.Object: void notify()>();

        exitmonitor $stack47;

     label16:
        goto label19;

     label17:
        $stack115 := @caughtexception;

        exitmonitor $stack47;

     label18:
        throw $stack115;

     label19:
        $r22 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack56 = $r22.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack59 = $stack56[cameraNumber];

        $r23 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack57 = $r23.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] lastBoardWarp>;

        $stack58 = $stack57[cameraNumber];

        $r24 = (org.bytedeco.opencv.opencv_core.CvArr) $stack59;

        $r25 = (org.bytedeco.opencv.opencv_core.CvArr) $stack58;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvCopy(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r24, $r25);

        return;

        catch java.lang.Throwable from label14 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getProjectorImage()
    {
        ProCamGeometricCalibrator this;
        boolean $stack7;
        org.bytedeco.javacv.MarkedPlane $stack8, $stack12, $stack19;
        org.bytedeco.opencv.opencv_core.IplImage $stack9;
        org.bytedeco.javacv.GeometricCalibrator[] $stack10;
        int $stack11, minCameraNumber, i;
        org.bytedeco.opencv.opencv_core.CvMat[] $stack14, $stack17;
        org.bytedeco.opencv.opencv_core.CvMat $stack15, $stack18, i#4;
        double[] $stack21, $stack22;
        double $stack23, $stack24, rmse, minRmse;
        byte $stack25;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2, $r3, $r4, $r5, $r8, $r12, $r13;
        org.bytedeco.opencv.opencv_core.CvArr $r6, $r7, $r9, $r10, $r11;

        this := @this: ProCamGeometricCalibrator;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack7 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: boolean updatePrewarp>;

        if $stack7 == 0 goto label4;

        minRmse = 1.7976931348623157E308;

        minCameraNumber = 0;

        i = 0;

     label1:
        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack10 = $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack11 = lengthof $stack10;

        if i >= $stack11 goto label3;

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack21 = $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseBoardWarp>;

        $stack24 = $stack21[i];

        $r3 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack22 = $r3.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] rmseProjWarp>;

        $stack23 = $stack22[i];

        rmse = $stack24 + $stack23;

        $stack25 = rmse cmpg minRmse;

        if $stack25 >= 0 goto label2;

        minRmse = rmse;

        minCameraNumber = i;

     label2:
        i = i + 1;

        goto label1;

     label3:
        $r4 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack12 = $r4.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        i#4 = virtualinvoke $stack12.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.CvMat getPrewarp()>();

        $r5 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack14 = $r5.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] projWarp>;

        $stack15 = $stack14[minCameraNumber];

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) $stack15;

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) i#4;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r6, $r7);

        $r8 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack17 = $r8.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack18 = $stack17[minCameraNumber];

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) i#4;

        $r10 = (org.bytedeco.opencv.opencv_core.CvArr) $stack18;

        $r11 = (org.bytedeco.opencv.opencv_core.CvArr) i#4;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r9, $r10, $r11);

        $r12 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack19 = $r12.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        virtualinvoke $stack19.<org.bytedeco.javacv.MarkedPlane: void setPrewarp(org.bytedeco.opencv.opencv_core.CvMat)>(i#4);

     label4:
        $r13 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack8 = $r13.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane projectorPlane>;

        $stack9 = virtualinvoke $stack8.<org.bytedeco.javacv.MarkedPlane: org.bytedeco.opencv.opencv_core.IplImage getImage()>();

        return $stack9;
    }

    public double[] calibrate(boolean, boolean)
    {
        ProCamGeometricCalibrator this;
        boolean useCenters, calibrateCameras;
        double[] $stack3;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0;

        this := @this: ProCamGeometricCalibrator;

        useCenters := @parameter0: boolean;

        calibrateCameras := @parameter1: boolean;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack3 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: double[] calibrate(boolean,boolean)>(useCenters, calibrateCameras);

        return $stack3;
    }

    public double[] calibrate(boolean, boolean, int)
    {
        ProCamGeometricCalibrator this;
        int cameraAtOrigin, $stack28, $stack46, $stack55, $stack57, $stack58, $stack64, $stack65, $stack66, $stack67, $stack129, cameraNumber, $stack30, i;
        org.bytedeco.javacv.GeometricCalibrator[] $stack20, $stack27, $stack45, $stack49, $stack53, $stack81, $stack107, $stack116, $stack128, $stack135, $stack138, $stack142, $stack29;
        org.bytedeco.javacv.GeometricCalibrator calibratorAtOrigin, $stack21, $stack32, $stack33, $stack37, $stack39, $stack50, $stack54, $stack82, $stack108, $stack117, $stack136, $stack139, $stack143;
        boolean calibrateCameras, $stack31, useCenters, $stack91;
        java.util.Iterator ip, $stack61, $stack125;
        java.util.Iterator[] ib;
        java.util.LinkedList im, $stack124, cameraNumber#2, maxError#20, $u0, $u1, $u2;
        double[] $stack40, $stack110, $stack111, $stack119, $stack120, cameraNumber#19, distortedBoardMarkers#21;
        double $stack41, $stack42, $stack43, $stack44, $stack51, $stack59, $stack60, $stack71, maxError;
        org.bytedeco.javacv.ProCamGeometricCalibrator$Settings $stack48;
        org.bytedeco.javacv.ProjectiveDevice $stack52, $stack56, $stack109, $stack118;
        java.lang.Object $stack62, $stack63;
        org.bytedeco.javacv.Marker[] distortedProjectorMarkers, undistortedBoardMarkers, undistortedProjectorMarkers, $stack83, $stack85, distortedBoardMarkers;
        org.bytedeco.opencv.opencv_core.CvMat[] $stack68, $stack73, $stack74, $stack78;
        org.bytedeco.opencv.opencv_core.CvMat $stack69, $stack75, $stack76, $stack79;
        org.bytedeco.javacv.MarkedPlane $stack70;
        byte $stack72;
        org.bytedeco.javacv.Marker $stack105, $stack106, $stack114, $stack115;
        java.util.LinkedList[] $stack123;
        java.lang.AssertionError $u3;
        org.bytedeco.javacv.ProCamGeometricCalibrator $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r25, $r26;
        org.bytedeco.opencv.opencv_core.CvArr $r19, $r20;

        this := @this: ProCamGeometricCalibrator;

        useCenters := @parameter0: boolean;

        calibrateCameras := @parameter1: boolean;

        cameraAtOrigin := @parameter2: int;

        $r0 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack20 = $r0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        calibratorAtOrigin = $stack20[cameraAtOrigin];

        if calibrateCameras == 0 goto label03;

        cameraNumber = 0;

     label01:
        $r1 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack128 = $r1.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack129 = lengthof $stack128;

        if cameraNumber >= $stack129 goto label03;

        $r2 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack135 = $r2.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack136 = $stack135[cameraNumber];

        virtualinvoke $stack136.<org.bytedeco.javacv.GeometricCalibrator: double[] calibrate(boolean)>(useCenters);

        $r3 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack138 = $r3.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack139 = $stack138[cameraNumber];

        if $stack139 == calibratorAtOrigin goto label02;

        $r4 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack142 = $r4.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack143 = $stack142[cameraNumber];

        virtualinvoke calibratorAtOrigin.<org.bytedeco.javacv.GeometricCalibrator: double[] calibrateStereo(boolean,org.bytedeco.javacv.GeometricCalibrator)>(useCenters, $stack143);

     label02:
        cameraNumber = cameraNumber + 1;

        goto label01;

     label03:
        $r5 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack21 = $r5.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        cameraNumber#2 = virtualinvoke $stack21.<org.bytedeco.javacv.GeometricCalibrator: java.util.LinkedList getAllObjectMarkers()>();

        $u0 = new java.util.LinkedList;

        specialinvoke $u0.<java.util.LinkedList: void <init>()>();

        $u1 = new java.util.LinkedList;

        specialinvoke $u1.<java.util.LinkedList: void <init>()>();

        $u2 = new java.util.LinkedList;

        specialinvoke $u2.<java.util.LinkedList: void <init>()>();

        ip = virtualinvoke cameraNumber#2.<java.util.LinkedList: java.util.Iterator iterator()>();

        $r6 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack27 = $r6.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack28 = lengthof $stack27;

        ib = newarray (java.util.Iterator)[$stack28];

        cameraNumber = 0;

     label04:
        $r7 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack29 = $r7.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack30 = lengthof $stack29;

        if cameraNumber >= $stack30 goto label05;

        $r8 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack123 = $r8.<org.bytedeco.javacv.ProCamGeometricCalibrator: java.util.LinkedList[] allImagedBoardMarkers>;

        $stack124 = $stack123[cameraNumber];

        $stack125 = virtualinvoke $stack124.<java.util.LinkedList: java.util.Iterator iterator()>();

        ib[cameraNumber] = $stack125;

        cameraNumber = cameraNumber + 1;

        goto label04;

     label05:
        $stack31 = interfaceinvoke ip.<java.util.Iterator: boolean hasNext()>();

        if $stack31 == 0 goto label15;

        cameraNumber = 0;

     label06:
        $r9 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack45 = $r9.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack46 = lengthof $stack45;

        if cameraNumber >= $stack46 goto label14;

        $r10 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack48 = $r10.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.ProCamGeometricCalibrator$Settings settings>;

        $stack51 = $stack48.<org.bytedeco.javacv.ProCamGeometricCalibrator$Settings: double prewarpUpdateErrorMax>;

        $r11 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack49 = $r11.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack50 = $stack49[cameraNumber];

        $stack52 = virtualinvoke $stack50.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack55 = $stack52.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r12 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack53 = $r12.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack54 = $stack53[cameraNumber];

        $stack56 = virtualinvoke $stack54.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack57 = $stack56.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack58 = $stack55 + $stack57;

        $stack59 = (double) $stack58;

        $stack60 = $stack51 * $stack59;

        maxError = $stack60 / 2.0;

        $stack61 = ib[cameraNumber];

        $stack62 = interfaceinvoke $stack61.<java.util.Iterator: java.lang.Object next()>();

        distortedBoardMarkers = (org.bytedeco.javacv.Marker[]) $stack62;

        $stack63 = interfaceinvoke ip.<java.util.Iterator: java.lang.Object next()>();

        distortedProjectorMarkers = (org.bytedeco.javacv.Marker[]) $stack63;

        $stack64 = lengthof distortedBoardMarkers;

        undistortedBoardMarkers = newarray (org.bytedeco.javacv.Marker)[$stack64];

        $stack65 = lengthof distortedProjectorMarkers;

        undistortedProjectorMarkers = newarray (org.bytedeco.javacv.Marker)[$stack65];

        i = 0;

     label07:
        $stack66 = lengthof distortedBoardMarkers;

        if i >= $stack66 goto label08;

        $stack114 = distortedBoardMarkers[i];

        $stack115 = virtualinvoke $stack114.<org.bytedeco.javacv.Marker: org.bytedeco.javacv.Marker clone()>();

        undistortedBoardMarkers[i] = $stack115;

        $r13 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack116 = $r13.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack117 = $stack116[cameraNumber];

        $stack118 = virtualinvoke $stack117.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack119 = $stack115.<org.bytedeco.javacv.Marker: double[] corners>;

        $stack120 = virtualinvoke $stack118.<org.bytedeco.javacv.ProjectiveDevice: double[] undistort(double[])>($stack119);

        $stack115.<org.bytedeco.javacv.Marker: double[] corners> = $stack120;

        i = i + 1;

        goto label07;

     label08:
        i = 0;

     label09:
        $stack67 = lengthof distortedProjectorMarkers;

        if i >= $stack67 goto label10;

        $stack105 = distortedProjectorMarkers[i];

        $stack106 = virtualinvoke $stack105.<org.bytedeco.javacv.Marker: org.bytedeco.javacv.Marker clone()>();

        undistortedProjectorMarkers[i] = $stack106;

        $r14 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack107 = $r14.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack108 = $stack107[cameraNumber];

        $stack109 = virtualinvoke $stack108.<org.bytedeco.javacv.GeometricCalibrator: org.bytedeco.javacv.ProjectiveDevice getProjectiveDevice()>();

        $stack110 = $stack106.<org.bytedeco.javacv.Marker: double[] corners>;

        $stack111 = virtualinvoke $stack109.<org.bytedeco.javacv.ProjectiveDevice: double[] undistort(double[])>($stack110);

        $stack106.<org.bytedeco.javacv.Marker: double[] corners> = $stack111;

        i = i + 1;

        goto label09;

     label10:
        $r15 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack70 = $r15.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkedPlane boardPlane>;

        $r16 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack68 = $r16.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack69 = $stack68[cameraNumber];

        $stack71 = virtualinvoke $stack70.<org.bytedeco.javacv.MarkedPlane: double getTotalWarp(org.bytedeco.javacv.Marker[],org.bytedeco.opencv.opencv_core.CvMat)>(undistortedBoardMarkers, $stack69);

        $stack72 = $stack71 cmpl maxError;

        if $stack72 <= 0 goto label11;

        $stack91 = <org.bytedeco.javacv.ProCamGeometricCalibrator: boolean $assertionsDisabled>;

        if $stack91 != 0 goto label11;

        $u3 = new java.lang.AssertionError;

        specialinvoke $u3.<java.lang.AssertionError: void <init>()>();

        throw $u3;

     label11:
        $r17 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack73 = $r17.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack76 = $stack73[cameraNumber];

        $r18 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack74 = $r18.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack75 = $stack74[cameraNumber];

        $r19 = (org.bytedeco.opencv.opencv_core.CvArr) $stack76;

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) $stack75;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r19, $r20);

        $r21 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack78 = $r21.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.CvMat[] boardWarp>;

        $stack79 = $stack78[cameraNumber];

        staticinvoke <org.bytedeco.javacv.Marker: void applyWarp(org.bytedeco.javacv.Marker[],org.bytedeco.opencv.opencv_core.CvMat)>(undistortedProjectorMarkers, $stack79);

        virtualinvoke $u1.<java.util.LinkedList: boolean add(java.lang.Object)>(undistortedProjectorMarkers);

        $r22 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack81 = $r22.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        $stack82 = $stack81[cameraNumber];

        if $stack82 != calibratorAtOrigin goto label12;

        virtualinvoke $u2.<java.util.LinkedList: boolean add(java.lang.Object)>(undistortedProjectorMarkers);

        virtualinvoke $u0.<java.util.LinkedList: boolean add(java.lang.Object)>(distortedProjectorMarkers);

        goto label13;

     label12:
        $stack83 = newarray (org.bytedeco.javacv.Marker)[0];

        virtualinvoke $u2.<java.util.LinkedList: boolean add(java.lang.Object)>($stack83);

        $stack85 = newarray (org.bytedeco.javacv.Marker)[0];

        virtualinvoke $u0.<java.util.LinkedList: boolean add(java.lang.Object)>($stack85);

     label13:
        cameraNumber = cameraNumber + 1;

        goto label06;

     label14:
        goto label05;

     label15:
        $r23 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack32 = $r23.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        virtualinvoke $stack32.<org.bytedeco.javacv.GeometricCalibrator: void setAllObjectMarkers(java.util.LinkedList)>($u1);

        $r24 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack33 = $r24.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        cameraNumber#19 = virtualinvoke $stack33.<org.bytedeco.javacv.GeometricCalibrator: double[] calibrate(boolean)>(useCenters);

        maxError#20 = virtualinvoke calibratorAtOrigin.<org.bytedeco.javacv.GeometricCalibrator: java.util.LinkedList getAllObjectMarkers()>();

        im = virtualinvoke calibratorAtOrigin.<org.bytedeco.javacv.GeometricCalibrator: java.util.LinkedList getAllImageMarkers()>();

        virtualinvoke calibratorAtOrigin.<org.bytedeco.javacv.GeometricCalibrator: void setAllObjectMarkers(java.util.LinkedList)>($u2);

        virtualinvoke calibratorAtOrigin.<org.bytedeco.javacv.GeometricCalibrator: void setAllImageMarkers(java.util.LinkedList)>($u0);

        $r25 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack37 = $r25.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        distortedBoardMarkers#21 = virtualinvoke calibratorAtOrigin.<org.bytedeco.javacv.GeometricCalibrator: double[] calibrateStereo(boolean,org.bytedeco.javacv.GeometricCalibrator)>(useCenters, $stack37);

        $r26 = (org.bytedeco.javacv.ProCamGeometricCalibrator) this;

        $stack39 = $r26.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator projectorCalibrator>;

        virtualinvoke $stack39.<org.bytedeco.javacv.GeometricCalibrator: void setAllObjectMarkers(java.util.LinkedList)>(cameraNumber#2);

        virtualinvoke calibratorAtOrigin.<org.bytedeco.javacv.GeometricCalibrator: void setAllObjectMarkers(java.util.LinkedList)>(maxError#20);

        virtualinvoke calibratorAtOrigin.<org.bytedeco.javacv.GeometricCalibrator: void setAllImageMarkers(java.util.LinkedList)>(im);

        $stack40 = newarray (double)[4];

        $stack41 = cameraNumber#19[0];

        $stack40[0] = $stack41;

        $stack42 = cameraNumber#19[1];

        $stack40[1] = $stack42;

        $stack43 = distortedBoardMarkers#21[0];

        $stack40[2] = $stack43;

        $stack44 = distortedBoardMarkers#21[1];

        $stack40[3] = $stack44;

        return $stack40;
    }

    static org.bytedeco.opencv.opencv_core.IplImage[] access$000(org.bytedeco.javacv.ProCamGeometricCalibrator)
    {
        org.bytedeco.javacv.ProCamGeometricCalibrator x0;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamGeometricCalibrator;

        $stack1 = x0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] grayscaleImage>;

        return $stack1;
    }

    static org.bytedeco.opencv.opencv_core.IplImage[] access$100(org.bytedeco.javacv.ProCamGeometricCalibrator)
    {
        org.bytedeco.javacv.ProCamGeometricCalibrator x0;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamGeometricCalibrator;

        $stack1 = x0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage1>;

        return $stack1;
    }

    static org.bytedeco.javacv.Marker[][] access$200(org.bytedeco.javacv.ProCamGeometricCalibrator)
    {
        org.bytedeco.javacv.ProCamGeometricCalibrator x0;
        org.bytedeco.javacv.Marker[][] $stack1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamGeometricCalibrator;

        $stack1 = x0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers1>;

        return $stack1;
    }

    static org.bytedeco.javacv.GeometricCalibrator[] access$300(org.bytedeco.javacv.ProCamGeometricCalibrator)
    {
        org.bytedeco.javacv.ProCamGeometricCalibrator x0;
        org.bytedeco.javacv.GeometricCalibrator[] $stack1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamGeometricCalibrator;

        $stack1 = x0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.GeometricCalibrator[] cameraCalibrators>;

        return $stack1;
    }

    static org.bytedeco.opencv.opencv_core.IplImage[] access$400(org.bytedeco.javacv.ProCamGeometricCalibrator)
    {
        org.bytedeco.javacv.ProCamGeometricCalibrator x0;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamGeometricCalibrator;

        $stack1 = x0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.opencv.opencv_core.IplImage[] tempImage2>;

        return $stack1;
    }

    static org.bytedeco.javacv.Marker[][] access$500(org.bytedeco.javacv.ProCamGeometricCalibrator)
    {
        org.bytedeco.javacv.ProCamGeometricCalibrator x0;
        org.bytedeco.javacv.Marker[][] $stack1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamGeometricCalibrator;

        $stack1 = x0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.Marker[][] lastDetectedMarkers2>;

        return $stack1;
    }

    static org.bytedeco.javacv.MarkerDetector[] access$600(org.bytedeco.javacv.ProCamGeometricCalibrator)
    {
        org.bytedeco.javacv.ProCamGeometricCalibrator x0;
        org.bytedeco.javacv.MarkerDetector[] $stack1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamGeometricCalibrator;

        $stack1 = x0.<org.bytedeco.javacv.ProCamGeometricCalibrator: org.bytedeco.javacv.MarkerDetector[] markerDetectors>;

        return $stack1;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack3;
        java.lang.ThreadLocal $stack2;

        $stack0 = class "Lorg/bytedeco/javacv/ProCamGeometricCalibrator;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        <org.bytedeco.javacv.ProCamGeometricCalibrator: boolean $assertionsDisabled> = $stack3;

        $stack2 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 3);

        <org.bytedeco.javacv.ProCamGeometricCalibrator: java.lang.ThreadLocal tempWarp3x3> = $stack2;

        return;
    }
}
