public class ProCamTransformer$Parameters extends java.lang.Object implements org.bytedeco.javacv.ImageTransformer$Parameters
{
    private org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters;
    private org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters;
    private org.bytedeco.opencv.opencv_core.IplImage[] tempImage;
    private org.bytedeco.opencv.opencv_core.CvMat H;
    private org.bytedeco.opencv.opencv_core.CvMat R;
    private org.bytedeco.opencv.opencv_core.CvMat n;
    private org.bytedeco.opencv.opencv_core.CvMat t;
    final org.bytedeco.javacv.ProCamTransformer this$0;

    protected void <init>(org.bytedeco.javacv.ProCamTransformer)
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer this$0;
        org.bytedeco.opencv.opencv_core.CvMat $stack2, $stack3, $stack4, $stack5;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: ProCamTransformer$Parameters;

        this$0 := @parameter0: org.bytedeco.javacv.ProCamTransformer;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters> = null;

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters> = null;

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.IplImage[] tempImage> = null;

        $stack2 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $r4 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r4.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H> = $stack2;

        $stack3 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $r5 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r5.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R> = $stack3;

        $stack4 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 1);

        $r6 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r6.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n> = $stack4;

        $stack5 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 1);

        $r7 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r7.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t> = $stack5;

        $r8 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        virtualinvoke $r8.<org.bytedeco.javacv.ProCamTransformer$Parameters: void reset(boolean)>(0);

        return;
    }

    protected void <init>(org.bytedeco.javacv.ProCamTransformer, org.bytedeco.javacv.ProjectiveColorTransformer$Parameters, org.bytedeco.javacv.ProjectiveColorTransformer$Parameters)
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer this$0;
        org.bytedeco.opencv.opencv_core.CvMat $stack4, $stack5, $stack6, $stack7;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters, projectorParameters;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: ProCamTransformer$Parameters;

        this$0 := @parameter0: org.bytedeco.javacv.ProCamTransformer;

        surfaceParameters := @parameter1: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters;

        projectorParameters := @parameter2: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters> = null;

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters> = null;

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.IplImage[] tempImage> = null;

        $stack4 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $r4 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r4.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H> = $stack4;

        $stack5 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $r5 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r5.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R> = $stack5;

        $stack6 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 1);

        $r6 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r6.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n> = $stack6;

        $stack7 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 1);

        $r7 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r7.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t> = $stack7;

        $r8 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        virtualinvoke $r8.<org.bytedeco.javacv.ProCamTransformer$Parameters: void reset(org.bytedeco.javacv.ProjectiveColorTransformer$Parameters,org.bytedeco.javacv.ProjectiveColorTransformer$Parameters)>(surfaceParameters, projectorParameters);

        return;
    }

    public org.bytedeco.javacv.ProjectiveColorTransformer$Parameters getSurfaceParameters()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack1;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        return $stack1;
    }

    public org.bytedeco.javacv.ProjectiveColorTransformer$Parameters getProjectorParameters()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack1;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        return $stack1;
    }

    private int getSizeForSurface()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer $stack1, $stack5, $stack8;
        org.bytedeco.javacv.ProjectiveColorTransformer $stack2, $stack6, $stack9;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack3;
        int $stack4, $stack7, $stack10, $stack11, $stack12;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack2 = $stack1.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        if $stack2 != null goto label1;

        $stack12 = 0;

        goto label2;

     label1:
        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack3 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        $stack4 = virtualinvoke $stack3.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: int size()>();

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack5 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack6 = $stack5.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        $stack7 = virtualinvoke $stack6.<org.bytedeco.javacv.ProjectiveColorTransformer: int getNumGains()>();

        $stack10 = $stack4 - $stack7;

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack8 = $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack9 = $stack8.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        $stack11 = virtualinvoke $stack9.<org.bytedeco.javacv.ProjectiveColorTransformer: int getNumBiases()>();

        $stack12 = $stack10 - $stack11;

     label2:
        return $stack12;
    }

    private int getSizeForProjector()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack1;
        int $stack2;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $stack2 = virtualinvoke $stack1.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: int size()>();

        return $stack2;
    }

    public int size()
    {
        ProCamTransformer$Parameters this;
        int $stack1, $stack2, $stack3;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack1 = specialinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: int getSizeForSurface()>();

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack2 = specialinvoke $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: int getSizeForProjector()>();

        $stack3 = $stack1 + $stack2;

        return $stack3;
    }

    public double[] get()
    {
        ProCamTransformer$Parameters this;
        int $stack3, $stack4, i;
        double[] p;
        double $stack5;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack3 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: int size()>();

        p = newarray (double)[$stack3];

        i = 0;

     label1:
        $stack4 = lengthof p;

        if i >= $stack4 goto label2;

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack5 = virtualinvoke $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: double get(int)>(i);

        p[i] = $stack5;

        i = i + 1;

        goto label1;

     label2:
        return p;
    }

    public double get(int)
    {
        int i, $stack2, $stack4, $stack5;
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack3, $stack7;
        double $stack6, $stack8;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3;

        this := @this: ProCamTransformer$Parameters;

        i := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack2 = specialinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: int getSizeForSurface()>();

        if i >= $stack2 goto label1;

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack7 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        $stack8 = virtualinvoke $stack7.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: double get(int)>(i);

        return $stack8;

     label1:
        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack3 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack4 = specialinvoke $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: int getSizeForSurface()>();

        $stack5 = i - $stack4;

        $stack6 = virtualinvoke $stack3.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: double get(int)>($stack5);

        return $stack6;
    }

    public transient void set(double[])
    {
        double[] p;
        int $stack3, i;
        ProCamTransformer$Parameters this;
        double $stack4;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0;

        this := @this: ProCamTransformer$Parameters;

        p := @parameter0: double[];

        i = 0;

     label1:
        $stack3 = lengthof p;

        if i >= $stack3 goto label2;

        $stack4 = p[i];

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: void set(int,double)>(i, $stack4);

        i = i + 1;

        goto label1;

     label2:
        return;
    }

    public void set(int, double)
    {
        int i, $stack4, $stack6, $stack7;
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack5, $stack8;
        double p;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3;

        this := @this: ProCamTransformer$Parameters;

        i := @parameter0: int;

        p := @parameter1: double;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack4 = specialinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: int getSizeForSurface()>();

        if i >= $stack4 goto label1;

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack8 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        virtualinvoke $stack8.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: void set(int,double)>(i, p);

        goto label2;

     label1:
        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack5 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack6 = specialinvoke $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: int getSizeForSurface()>();

        $stack7 = i - $stack6;

        virtualinvoke $stack5.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: void set(int,double)>($stack7, p);

     label2:
        return;
    }

    public void set(org.bytedeco.javacv.ImageTransformer$Parameters)
    {
        org.bytedeco.javacv.ImageTransformer$Parameters p, $r2, $r5;
        org.bytedeco.javacv.ProCamTransformer$Parameters pcp, $r0, $r1, $r3, $r4;
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer $stack3;
        org.bytedeco.javacv.ProjectiveColorTransformer $stack4;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack5, $stack6, $stack7, $stack8, $stack9;

        this := @this: ProCamTransformer$Parameters;

        p := @parameter0: org.bytedeco.javacv.ImageTransformer$Parameters;

        pcp = (org.bytedeco.javacv.ProCamTransformer$Parameters) p;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack3 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack4 = $stack3.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        if $stack4 == null goto label1;

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack7 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        $stack8 = virtualinvoke pcp.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters getSurfaceParameters()>();

        $r2 = (org.bytedeco.javacv.ImageTransformer$Parameters) $stack8;

        virtualinvoke $stack7.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: void set(org.bytedeco.javacv.ImageTransformer$Parameters)>($r2);

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack9 = $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        virtualinvoke $stack9.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: void resetColor(boolean)>(0);

     label1:
        $r4 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack5 = $r4.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $stack6 = virtualinvoke pcp.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters getProjectorParameters()>();

        $r5 = (org.bytedeco.javacv.ImageTransformer$Parameters) $stack6;

        virtualinvoke $stack5.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: void set(org.bytedeco.javacv.ImageTransformer$Parameters)>($r5);

        return;
    }

    public void reset(boolean)
    {
        ProCamTransformer$Parameters this;
        boolean asIdentity;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0;

        this := @this: ProCamTransformer$Parameters;

        asIdentity := @parameter0: boolean;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: void reset(org.bytedeco.javacv.ProjectiveColorTransformer$Parameters,org.bytedeco.javacv.ProjectiveColorTransformer$Parameters)>(null, null);

        return;
    }

    public void reset(org.bytedeco.javacv.ProjectiveColorTransformer$Parameters, org.bytedeco.javacv.ProjectiveColorTransformer$Parameters)
    {
        ProCamTransformer$Parameters this;
        double[] $stack3;
        org.bytedeco.javacv.ProCamTransformer $stack4, $stack13, $stack16;
        org.bytedeco.javacv.ProjectiveColorTransformer $stack5, $stack14, $stack17;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters, projectorParameters;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: ProCamTransformer$Parameters;

        surfaceParameters := @parameter0: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters;

        projectorParameters := @parameter1: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters;

        if surfaceParameters != null goto label1;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack13 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack14 = $stack13.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        if $stack14 == null goto label1;

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack16 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack17 = $stack16.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        surfaceParameters = virtualinvoke $stack17.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters createParameters()>();

     label1:
        if projectorParameters != null goto label2;

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack4 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack5 = $stack4.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        projectorParameters = virtualinvoke $stack5.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters createParameters()>();

     label2:
        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters> = surfaceParameters;

        $r4 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r4.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters> = projectorParameters;

        $r5 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack3 = virtualinvoke $r5.<org.bytedeco.javacv.ProCamTransformer$Parameters: double[] getSubspace()>();

        $r6 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        virtualinvoke $r6.<org.bytedeco.javacv.ProCamTransformer$Parameters: void setSubspace(double[])>($stack3);

        return;
    }

    public double getConstraintError()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer $stack3;
        org.bytedeco.javacv.ProjectiveColorTransformer $stack4;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack5, $stack7;
        double $stack6;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack3 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack4 = $stack3.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        if $stack4 != null goto label1;

        $stack6 = 0.0;

        goto label2;

     label1:
        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack5 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        $stack6 = virtualinvoke $stack5.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: double getConstraintError()>();

     label2:
        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack7 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        virtualinvoke $stack7.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: void update()>();

        return $stack6;
    }

    public void compose(org.bytedeco.javacv.ImageTransformer$Parameters, boolean, org.bytedeco.javacv.ImageTransformer$Parameters, boolean)
    {
        java.lang.UnsupportedOperationException $stack5;
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ImageTransformer$Parameters p1, p2;
        boolean inverse1, inverse2;

        this := @this: ProCamTransformer$Parameters;

        p1 := @parameter0: org.bytedeco.javacv.ImageTransformer$Parameters;

        inverse1 := @parameter1: boolean;

        p2 := @parameter2: org.bytedeco.javacv.ImageTransformer$Parameters;

        inverse2 := @parameter3: boolean;

        $stack5 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Compose operation not supported.");

        throw $stack5;
    }

    public boolean preoptimize()
    {
        ProCamTransformer$Parameters this;
        double[] $stack2, p;
        double $stack4, $stack5, $stack6;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3, $r4;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack2 = specialinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: double[] getSubspaceInternal()>();

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        p = specialinvoke $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: double[] setSubspaceInternal(double[])>($stack2);

        if p == null goto label1;

        $stack4 = p[8];

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        virtualinvoke $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: void set(int,double)>(8, $stack4);

        $stack5 = p[9];

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        virtualinvoke $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: void set(int,double)>(9, $stack5);

        $stack6 = p[10];

        $r4 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        virtualinvoke $r4.<org.bytedeco.javacv.ProCamTransformer$Parameters: void set(int,double)>(10, $stack6);

        return 1;

     label1:
        return 0;
    }

    public transient void setSubspace(double[])
    {
        ProCamTransformer$Parameters this;
        double[] p, dst;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1;

        this := @this: ProCamTransformer$Parameters;

        p := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        dst = specialinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: double[] setSubspaceInternal(double[])>(p);

        if dst == null goto label1;

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        virtualinvoke $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: void set(double[])>(dst);

     label1:
        return;
    }

    public double[] getSubspace()
    {
        ProCamTransformer$Parameters this;
        double[] $stack1;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack1 = specialinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: double[] getSubspaceInternal()>();

        return $stack1;
    }

    private transient double[] setSubspaceInternal(double[])
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer $stack6, $stack54, $stack58, $stack63, $stack80, $stack83, $stack86, $stack89, $stack92, $stack99;
        org.bytedeco.opencv.opencv_core.CvMat $stack7, $stack12, $stack14, $stack16, $stack22, $stack25, $stack26, $stack29, $stack32, $stack35, $stack38, $stack41, $stack44, $stack47, $stack50, $stack55, $stack56, $stack57, $stack60, $stack61, $stack62, $stack65, $stack66, $stack67, $stack68, $stack69, $stack70, $stack71, $stack75, $stack77, $stack78, $stack79, $stack85, $stack88, $stack91, $stack94, $stack95, $stack102;
        double[] dst, $stack8, p, $stack18, $stack24, $stack74, src, $stack101;
        double $stack9, $stack10, $stack11, $stack19, $stack20, $stack21, $stack28, $stack31, $stack34, $stack37, $stack40, $stack43, $stack46, $stack49, $stack52, $stack73, scale, $stack96, $stack97, $stack98;
        org.bytedeco.opencv.opencv_core.Mat $stack15, $stack17;
        org.bytedeco.javacv.ProjectiveColorTransformer $stack59, $stack64, $stack81, $stack84, $stack87, $stack90, $stack93, $stack100;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r23, $r24, $r25, $r29, $r30, $r31, $r35, $r36, $r37, $r41, $r42, $r43, $r44, $r45, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56;
        org.bytedeco.opencv.opencv_core.CvArr $r3, $r5, $r20, $r21, $r22, $r26, $r27, $r28, $r32, $r33, $r34, $r38, $r39, $r40, $r46, $r47, $r48;

        this := @this: ProCamTransformer$Parameters;

        p := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack6 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack7 = $stack6.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.opencv.opencv_core.CvMat invFrontoParallelH>;

        if $stack7 != null goto label1;

        return null;

     label1:
        dst = newarray (double)[11];

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack12 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack8 = newarray (double)[3];

        $stack9 = p[0];

        $stack8[0] = $stack9;

        $stack10 = p[1];

        $stack8[1] = $stack10;

        $stack11 = p[2];

        $stack8[2] = $stack11;

        virtualinvoke $stack12.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack8);

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack14 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $r3 = (org.bytedeco.opencv.opencv_core.CvArr) $stack14;

        $stack15 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r3);

        $r4 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack16 = $r4.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) $stack16;

        $stack17 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r5);

        staticinvoke <org.bytedeco.opencv.global.opencv_calib3d: void Rodrigues(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat)>($stack15, $stack17, null);

        $r6 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack22 = $r6.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack18 = newarray (double)[3];

        $stack19 = p[3];

        $stack18[0] = $stack19;

        $stack20 = p[4];

        $stack18[1] = $stack20;

        $stack21 = p[5];

        $stack18[2] = $stack21;

        virtualinvoke $stack22.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack18);

        $r7 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack26 = $r7.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $stack24 = newarray (double)[9];

        $r8 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack25 = $r8.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $stack28 = virtualinvoke $stack25.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack24[0] = $stack28;

        $r9 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack29 = $r9.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $stack31 = virtualinvoke $stack29.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack24[1] = $stack31;

        $r10 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack32 = $r10.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack34 = virtualinvoke $stack32.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack24[2] = $stack34;

        $r11 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack35 = $r11.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $stack37 = virtualinvoke $stack35.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(3);

        $stack24[3] = $stack37;

        $r12 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack38 = $r12.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $stack40 = virtualinvoke $stack38.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(4);

        $stack24[4] = $stack40;

        $r13 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack41 = $r13.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack43 = virtualinvoke $stack41.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack24[5] = $stack43;

        $r14 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack44 = $r14.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $stack46 = virtualinvoke $stack44.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(6);

        $stack24[6] = $stack46;

        $r15 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack47 = $r15.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $stack49 = virtualinvoke $stack47.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(7);

        $stack24[7] = $stack49;

        $r16 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack50 = $r16.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack52 = virtualinvoke $stack50.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack24[8] = $stack52;

        virtualinvoke $stack26.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack24);

        $r17 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack57 = $r17.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r18 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack54 = $r18.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack56 = $stack54.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.opencv.opencv_core.CvMat invFrontoParallelH>;

        $r19 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack55 = $r19.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) $stack57;

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) $stack56;

        $r22 = (org.bytedeco.opencv.opencv_core.CvArr) $stack55;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r20, $r21, $r22);

        $r23 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack58 = $r23.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack59 = $stack58.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        $stack60 = virtualinvoke $stack59.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getK2()>();

        $r24 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack62 = $r24.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r25 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack61 = $r25.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r26 = (org.bytedeco.opencv.opencv_core.CvArr) $stack60;

        $r27 = (org.bytedeco.opencv.opencv_core.CvArr) $stack62;

        $r28 = (org.bytedeco.opencv.opencv_core.CvArr) $stack61;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r26, $r27, $r28);

        $r29 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack65 = $r29.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r30 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack63 = $r30.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack64 = $stack63.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        $stack66 = virtualinvoke $stack64.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getInvK1()>();

        $r31 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack67 = $r31.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r32 = (org.bytedeco.opencv.opencv_core.CvArr) $stack65;

        $r33 = (org.bytedeco.opencv.opencv_core.CvArr) $stack66;

        $r34 = (org.bytedeco.opencv.opencv_core.CvArr) $stack67;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r32, $r33, $r34);

        $r35 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack70 = $r35.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r36 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack69 = $r36.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $r37 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack68 = $r37.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $r38 = (org.bytedeco.opencv.opencv_core.CvArr) $stack70;

        $r39 = (org.bytedeco.opencv.opencv_core.CvArr) $stack69;

        $r40 = (org.bytedeco.opencv.opencv_core.CvArr) $stack68;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r38, $r39, 1.0, null, 0.0, $r40, 1);

        $r41 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack71 = $r41.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack73 = virtualinvoke $stack71.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        scale = 1.0 / $stack73;

        $r42 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack75 = $r42.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $stack74 = newarray (double)[3];

        $stack74[0] = 0.0;

        $stack74[1] = 0.0;

        $stack74[2] = 1.0;

        virtualinvoke $stack75.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack74);

        $r43 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack79 = $r43.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r44 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack78 = $r44.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $r45 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack77 = $r45.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $r46 = (org.bytedeco.opencv.opencv_core.CvArr) $stack79;

        $r47 = (org.bytedeco.opencv.opencv_core.CvArr) $stack78;

        $r48 = (org.bytedeco.opencv.opencv_core.CvArr) $stack77;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r46, $r47, scale, null, 0.0, $r48, 0);

        $r49 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack80 = $r49.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack81 = $stack80.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        src = virtualinvoke $stack81.<org.bytedeco.javacv.ProjectiveColorTransformer: double[] getReferencePoints2()>();

        $r50 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack83 = $r50.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack84 = $stack83.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack85 = virtualinvoke $stack84.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getInvK1()>();

        $r51 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack86 = $r51.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack87 = $stack86.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack88 = virtualinvoke $stack87.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getK2()>();

        $r52 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack89 = $r52.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack90 = $stack89.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack91 = virtualinvoke $stack90.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getR()>();

        $r53 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack92 = $r53.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack93 = $stack92.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack94 = virtualinvoke $stack93.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getT()>();

        $r54 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack95 = $r54.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        staticinvoke <org.bytedeco.javacv.JavaCV: void perspectiveTransform(double[],double[],org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,boolean)>(src, dst, $stack85, $stack88, $stack91, $stack94, $stack95, 1);

        $stack96 = dst[0];

        dst[8] = $stack96;

        $stack97 = dst[2];

        dst[9] = $stack97;

        $stack98 = dst[4];

        dst[10] = $stack98;

        $r55 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack99 = $r55.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack100 = $stack99.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        $stack101 = virtualinvoke $stack100.<org.bytedeco.javacv.ProjectiveColorTransformer: double[] getReferencePoints1()>();

        $r56 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack102 = $r56.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        staticinvoke <org.bytedeco.javacv.JavaCV: void perspectiveTransform(double[],double[],org.bytedeco.opencv.opencv_core.CvMat)>($stack101, dst, $stack102);

        return dst;
    }

    private double[] getSubspaceInternal()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer $stack2, $stack4, $stack7, $stack14;
        org.bytedeco.opencv.opencv_core.CvMat $stack3, $stack6, $stack8, $stack9, $stack11, $stack12, $stack13, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack24, $stack27, $stack30, $stack33, $stack36, $stack39, $stack42;
        org.bytedeco.javacv.ProjectiveColorTransformer $stack5, $stack15;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack10;
        org.bytedeco.opencv.opencv_core.Mat $stack23, $stack25;
        double[] $stack26;
        double $stack29, $stack32, $stack35, $stack38, $stack41, $stack44;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3, $r7, $r8, $r9, $r13, $r14, $r15, $r19, $r20, $r21, $r22, $r24, $r26, $r27, $r28, $r29, $r30, $r31;
        org.bytedeco.opencv.opencv_core.CvArr $r4, $r5, $r6, $r10, $r11, $r12, $r16, $r17, $r18, $r23, $r25;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack2 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack3 = $stack2.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.opencv.opencv_core.CvMat frontoParallelH>;

        if $stack3 != null goto label1;

        return null;

     label1:
        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack4 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack5 = $stack4.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        $stack6 = virtualinvoke $stack5.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getK1()>();

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack7 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack9 = $stack7.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.opencv.opencv_core.CvMat frontoParallelH>;

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack8 = $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r4 = (org.bytedeco.opencv.opencv_core.CvArr) $stack6;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) $stack9;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) $stack8;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r4, $r5, $r6);

        $r7 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack10 = $r7.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        $stack11 = virtualinvoke $stack10.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat getH()>();

        $r8 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack13 = $r8.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r9 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack12 = $r9.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r10 = (org.bytedeco.opencv.opencv_core.CvArr) $stack11;

        $r11 = (org.bytedeco.opencv.opencv_core.CvArr) $stack13;

        $r12 = (org.bytedeco.opencv.opencv_core.CvArr) $stack12;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r10, $r11, $r12);

        $r13 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack14 = $r13.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack15 = $stack14.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        $stack16 = virtualinvoke $stack15.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getInvK2()>();

        $r14 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack18 = $r14.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r15 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack17 = $r15.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r16 = (org.bytedeco.opencv.opencv_core.CvArr) $stack16;

        $r17 = (org.bytedeco.opencv.opencv_core.CvArr) $stack18;

        $r18 = (org.bytedeco.opencv.opencv_core.CvArr) $stack17;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r16, $r17, $r18);

        $r19 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack21 = $r19.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r20 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack20 = $r20.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r21 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack19 = $r21.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        staticinvoke <org.bytedeco.javacv.JavaCV: void HtoRt(org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat)>($stack21, $stack20, $stack19);

        $r22 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack22 = $r22.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r23 = (org.bytedeco.opencv.opencv_core.CvArr) $stack22;

        $stack23 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r23);

        $r24 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack24 = $r24.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $r25 = (org.bytedeco.opencv.opencv_core.CvArr) $stack24;

        $stack25 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r25);

        staticinvoke <org.bytedeco.opencv.global.opencv_calib3d: void Rodrigues(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat)>($stack23, $stack25, null);

        $stack26 = newarray (double)[6];

        $r26 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack27 = $r26.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $stack29 = virtualinvoke $stack27.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack26[0] = $stack29;

        $r27 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack30 = $r27.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $stack32 = virtualinvoke $stack30.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack26[1] = $stack32;

        $r28 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack33 = $r28.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $stack35 = virtualinvoke $stack33.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack26[2] = $stack35;

        $r29 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack36 = $r29.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack38 = virtualinvoke $stack36.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack26[3] = $stack38;

        $r30 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack39 = $r30.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack41 = virtualinvoke $stack39.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack26[4] = $stack41;

        $r31 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack42 = $r31.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack44 = virtualinvoke $stack42.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack26[5] = $stack44;

        return $stack26;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getN()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer $stack5, $stack8, $stack21, $stack25, $stack30, $stack33, $stack40;
        org.bytedeco.javacv.ProjectiveColorTransformer $stack6, $stack9, $stack22, $stack26, $stack31, $stack34, $stack41;
        double[] src, $stack10, dst;
        java.lang.Object $stack11;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack12, $stack15, $stack18;
        double $stack14, $stack17, $stack20, $stack45, d, $stack47;
        org.bytedeco.opencv.opencv_core.CvMat $stack23, $stack24, $stack27, $stack28, $stack29, $stack32, $stack35, $stack36, $stack37, $stack38, $stack43, $stack44, $stack46, $stack48, $stack49, $stack50;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r24, $r25, $r26, $r30;
        org.bytedeco.opencv.opencv_core.CvArr $r7, $r8, $r12, $r13, $r14, $r22, $r23, $r27, $r28, $r29;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack5 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack6 = $stack5.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        src = virtualinvoke $stack6.<org.bytedeco.javacv.ProjectiveColorTransformer: double[] getReferencePoints2()>();

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack8 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack9 = $stack8.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack10 = virtualinvoke $stack9.<org.bytedeco.javacv.ProjectiveColorTransformer: double[] getReferencePoints1()>();

        $stack11 = virtualinvoke $stack10.<java.lang.Object: java.lang.Object clone()>();

        dst = (double[]) $stack11;

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack12 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $stack14 = virtualinvoke $stack12.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: double get(int)>(0);

        dst[0] = $stack14;

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack15 = $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $stack17 = virtualinvoke $stack15.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: double get(int)>(1);

        dst[2] = $stack17;

        $r4 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack18 = $r4.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $stack20 = virtualinvoke $stack18.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: double get(int)>(2);

        dst[4] = $stack20;

        $r5 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack21 = $r5.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack22 = $stack21.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack23 = virtualinvoke $stack22.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getR()>();

        $r6 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack24 = $r6.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) $stack23;

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) $stack24;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvTranspose(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r7, $r8);

        $r9 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack27 = $r9.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r10 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack25 = $r10.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack26 = $stack25.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack28 = virtualinvoke $stack26.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getT()>();

        $r11 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack29 = $r11.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $r12 = (org.bytedeco.opencv.opencv_core.CvArr) $stack27;

        $r13 = (org.bytedeco.opencv.opencv_core.CvArr) $stack28;

        $r14 = (org.bytedeco.opencv.opencv_core.CvArr) $stack29;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r12, $r13, -1.0, null, 0.0, $r14, 0);

        $r15 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack30 = $r15.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack31 = $stack30.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack32 = virtualinvoke $stack31.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getInvK2()>();

        $r16 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack33 = $r16.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack34 = $stack33.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack35 = virtualinvoke $stack34.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getK1()>();

        $r17 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack38 = $r17.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r18 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack37 = $r18.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $r19 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack36 = $r19.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        staticinvoke <org.bytedeco.javacv.JavaCV: org.bytedeco.opencv.opencv_core.CvMat getPlaneParameters(double[],double[],org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat)>(src, dst, $stack32, $stack35, $stack38, $stack37, $stack36);

        $r20 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack43 = $r20.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $r21 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack40 = $r21.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack41 = $stack40.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer projectorTransformer>;

        $stack44 = virtualinvoke $stack41.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getT()>();

        $r22 = (org.bytedeco.opencv.opencv_core.CvArr) $stack43;

        $r23 = (org.bytedeco.opencv.opencv_core.CvArr) $stack44;

        $stack45 = staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvDotProduct(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r22, $r23);

        d = 1.0 + $stack45;

        $r24 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack49 = $r24.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r25 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack48 = $r25.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $stack47 = 1.0 / d;

        $r26 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack46 = $r26.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $r27 = (org.bytedeco.opencv.opencv_core.CvArr) $stack49;

        $r28 = (org.bytedeco.opencv.opencv_core.CvArr) $stack48;

        $r29 = (org.bytedeco.opencv.opencv_core.CvArr) $stack46;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r27, $r28, $stack47, null, 0.0, $r29, 0);

        $r30 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack50 = $r30.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        return $stack50;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getN0()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.opencv.opencv_core.CvMat $stack3, $stack10, $stack11, $stack14, $stack15, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack40, $stack42, $stack43, $stack44, $stack45, $stack46;
        org.bytedeco.javacv.ProCamTransformer $stack4, $stack6, $stack17, $stack25;
        org.bytedeco.javacv.ProjectiveColorTransformer $stack5, $stack18, $stack26;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack7, $stack13;
        org.bytedeco.javacv.CameraDevice $stack8;
        double[] $stack9, $stack39;
        double $stack38, scale;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r18, $r19, $r20, $r24, $r25, $r26, $r30, $r31, $r32, $r33, $r34, $r35, $r39, $r40, $r41, $r42, $r43, $r47;
        org.bytedeco.opencv.opencv_core.CvArr $r10, $r11, $r15, $r16, $r17, $r21, $r22, $r23, $r27, $r28, $r29, $r36, $r37, $r38, $r44, $r45, $r46;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack3 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat getN()>();

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n> = $stack3;

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack4 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack5 = $stack4.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        if $stack5 != null goto label1;

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack46 = $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        return $stack46;

     label1:
        $r4 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack6 = $r4.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack8 = $stack6.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.CameraDevice camera>;

        $r5 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack7 = $r5.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        $stack9 = virtualinvoke $stack7.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: double[] get()>();

        $r6 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack11 = $r6.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $r7 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack10 = $r7.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        virtualinvoke $stack8.<org.bytedeco.javacv.CameraDevice: org.bytedeco.opencv.opencv_core.CvMat getFrontoParallelH(double[],org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat)>($stack9, $stack11, $stack10);

        $r8 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack13 = $r8.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        $stack14 = virtualinvoke $stack13.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat getH()>();

        $r9 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack15 = $r9.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r10 = (org.bytedeco.opencv.opencv_core.CvArr) $stack14;

        $r11 = (org.bytedeco.opencv.opencv_core.CvArr) $stack15;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r10, $r11);

        $r12 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack19 = $r12.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r13 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack17 = $r13.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack18 = $stack17.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        $stack20 = virtualinvoke $stack18.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getK2()>();

        $r14 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack21 = $r14.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r15 = (org.bytedeco.opencv.opencv_core.CvArr) $stack19;

        $r16 = (org.bytedeco.opencv.opencv_core.CvArr) $stack20;

        $r17 = (org.bytedeco.opencv.opencv_core.CvArr) $stack21;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r15, $r16, $r17);

        $r18 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack24 = $r18.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r19 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack23 = $r19.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r20 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack22 = $r20.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) $stack24;

        $r22 = (org.bytedeco.opencv.opencv_core.CvArr) $stack23;

        $r23 = (org.bytedeco.opencv.opencv_core.CvArr) $stack22;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r21, $r22, $r23);

        $r24 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack25 = $r24.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        $stack26 = $stack25.<org.bytedeco.javacv.ProCamTransformer: org.bytedeco.javacv.ProjectiveColorTransformer surfaceTransformer>;

        $stack27 = virtualinvoke $stack26.<org.bytedeco.javacv.ProjectiveColorTransformer: org.bytedeco.opencv.opencv_core.CvMat getInvK1()>();

        $r25 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack29 = $r25.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r26 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack28 = $r26.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r27 = (org.bytedeco.opencv.opencv_core.CvArr) $stack27;

        $r28 = (org.bytedeco.opencv.opencv_core.CvArr) $stack29;

        $r29 = (org.bytedeco.opencv.opencv_core.CvArr) $stack28;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r27, $r28, $r29);

        $r30 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack32 = $r30.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat H>;

        $r31 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack31 = $r31.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r32 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack30 = $r32.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        staticinvoke <org.bytedeco.javacv.JavaCV: void HtoRt(org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat)>($stack32, $stack31, $stack30);

        $r33 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack35 = $r33.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r34 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack34 = $r34.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $r35 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack33 = $r35.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $r36 = (org.bytedeco.opencv.opencv_core.CvArr) $stack35;

        $r37 = (org.bytedeco.opencv.opencv_core.CvArr) $stack34;

        $r38 = (org.bytedeco.opencv.opencv_core.CvArr) $stack33;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r36, $r37, 1.0, null, 0.0, $r38, 1);

        $r39 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack36 = $r39.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat t>;

        $stack38 = virtualinvoke $stack36.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        scale = 1.0 / $stack38;

        $r40 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack40 = $r40.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $stack39 = newarray (double)[3];

        $stack39[0] = 0.0;

        $stack39[1] = 0.0;

        $stack39[2] = 1.0;

        virtualinvoke $stack40.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack39);

        $r41 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack44 = $r41.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r42 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack43 = $r42.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $r43 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack42 = $r43.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        $r44 = (org.bytedeco.opencv.opencv_core.CvArr) $stack44;

        $r45 = (org.bytedeco.opencv.opencv_core.CvArr) $stack43;

        $r46 = (org.bytedeco.opencv.opencv_core.CvArr) $stack42;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r44, $r45, scale, null, 0.0, $r46, 0);

        $r47 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack45 = $r47.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat n>;

        return $stack45;
    }

    public org.bytedeco.javacv.ProCamTransformer$Parameters clone()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer $stack3;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack4, $stack5, $stack7, $stack8, $stack6;
        org.bytedeco.javacv.ProCamTransformer$Parameters $u0, $r0, $r1, $r2, $r3;

        this := @this: ProCamTransformer$Parameters;

        $u0 = new org.bytedeco.javacv.ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack3 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer this$0>;

        specialinvoke $u0.<org.bytedeco.javacv.ProCamTransformer$Parameters: void <init>(org.bytedeco.javacv.ProCamTransformer)>($stack3);

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack4 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        if $stack4 != null goto label1;

        $stack6 = null;

        goto label2;

     label1:
        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack5 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        $stack6 = virtualinvoke $stack5.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters clone()>();

     label2:
        $u0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters> = $stack6;

        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack7 = $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $stack8 = virtualinvoke $stack7.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters clone()>();

        $u0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters> = $stack8;

        return $u0;
    }

    public java.lang.String toString()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack1, $stack2, $stack5, $stack8;
        java.lang.String $stack3, $stack6, $stack9, $stack11;
        java.lang.StringBuilder $stack7, $stack10, $u0;
        org.bytedeco.javacv.ProCamTransformer$Parameters $r0, $r1, $r2, $r3;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        if $stack1 == null goto label1;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r1 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack5 = $r1.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        $stack6 = virtualinvoke $stack5.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: java.lang.String toString()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $r2 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack8 = $r2.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $stack9 = virtualinvoke $stack8.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: java.lang.String toString()>();

        $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack11;

     label1:
        $r3 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack2 = $r3.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters projectorParameters>;

        $stack3 = virtualinvoke $stack2.<org.bytedeco.javacv.ProjectiveColorTransformer$Parameters: java.lang.String toString()>();

        return $stack3;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer$Parameters $stack1, $r0;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer$Parameters clone()>();

        return $stack1;
    }

    public volatile org.bytedeco.javacv.ImageTransformer$Parameters clone()
    {
        ProCamTransformer$Parameters this;
        org.bytedeco.javacv.ProCamTransformer$Parameters $stack1, $r0;
        org.bytedeco.javacv.ImageTransformer$Parameters $r1;

        this := @this: ProCamTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProCamTransformer$Parameters) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProCamTransformer$Parameters clone()>();

        $r1 = (org.bytedeco.javacv.ImageTransformer$Parameters) $stack1;

        return $r1;
    }

    static org.bytedeco.opencv.opencv_core.IplImage[] access$000(org.bytedeco.javacv.ProCamTransformer$Parameters)
    {
        org.bytedeco.javacv.ProCamTransformer$Parameters x0;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamTransformer$Parameters;

        $stack1 = x0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.IplImage[] tempImage>;

        return $stack1;
    }

    static org.bytedeco.opencv.opencv_core.IplImage[] access$002(org.bytedeco.javacv.ProCamTransformer$Parameters, org.bytedeco.opencv.opencv_core.IplImage[])
    {
        org.bytedeco.javacv.ProCamTransformer$Parameters x0;
        org.bytedeco.opencv.opencv_core.IplImage[] x1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamTransformer$Parameters;

        x1 := @parameter1: org.bytedeco.opencv.opencv_core.IplImage[];

        x0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.opencv.opencv_core.IplImage[] tempImage> = x1;

        return x1;
    }

    static org.bytedeco.javacv.ProjectiveColorTransformer$Parameters access$100(org.bytedeco.javacv.ProCamTransformer$Parameters)
    {
        org.bytedeco.javacv.ProCamTransformer$Parameters x0;
        org.bytedeco.javacv.ProjectiveColorTransformer$Parameters $stack1;

        x0 := @parameter0: org.bytedeco.javacv.ProCamTransformer$Parameters;

        $stack1 = x0.<org.bytedeco.javacv.ProCamTransformer$Parameters: org.bytedeco.javacv.ProjectiveColorTransformer$Parameters surfaceParameters>;

        return $stack1;
    }
}
