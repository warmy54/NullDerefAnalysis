public final enum class Problem$Severity extends java.lang.Enum
{
    public static final enum org.apache.maven.building.Problem$Severity FATAL;
    public static final enum org.apache.maven.building.Problem$Severity ERROR;
    public static final enum org.apache.maven.building.Problem$Severity WARNING;
    private static final org.apache.maven.building.Problem$Severity[] $VALUES;

    public static org.apache.maven.building.Problem$Severity[] values()
    {
        org.apache.maven.building.Problem$Severity[] $stack0, $stack2;
        java.lang.Object $stack1;

        $stack0 = <org.apache.maven.building.Problem$Severity: org.apache.maven.building.Problem$Severity[] $VALUES>;

        $stack1 = virtualinvoke $stack0.<java.lang.Object: java.lang.Object clone()>();

        $stack2 = (org.apache.maven.building.Problem$Severity[]) $stack1;

        return $stack2;
    }

    public static org.apache.maven.building.Problem$Severity valueOf(java.lang.String)
    {
        java.lang.String name;
        java.lang.Enum $stack1;
        org.apache.maven.building.Problem$Severity $stack2;

        name := @parameter0: java.lang.String;

        $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/maven/building/Problem$Severity;", name);

        $stack2 = (org.apache.maven.building.Problem$Severity) $stack1;

        return $stack2;
    }

    private void <init>(java.lang.String, int)
    {
        Problem$Severity this;
        java.lang.String l1;
        int l2;

        this := @this: Problem$Severity;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: int;

        specialinvoke this.<java.lang.Enum: void <init>(java.lang.String,int)>(l1, l2);

        return;
    }

    static void <clinit>()
    {
        org.apache.maven.building.Problem$Severity $stack0, $stack1, $stack2, $stack4, $stack5, $stack6;
        org.apache.maven.building.Problem$Severity[] $stack3;

        $stack0 = new org.apache.maven.building.Problem$Severity;

        specialinvoke $stack0.<org.apache.maven.building.Problem$Severity: void <init>(java.lang.String,int)>("FATAL", 0);

        <org.apache.maven.building.Problem$Severity: org.apache.maven.building.Problem$Severity FATAL> = $stack0;

        $stack1 = new org.apache.maven.building.Problem$Severity;

        specialinvoke $stack1.<org.apache.maven.building.Problem$Severity: void <init>(java.lang.String,int)>("ERROR", 1);

        <org.apache.maven.building.Problem$Severity: org.apache.maven.building.Problem$Severity ERROR> = $stack1;

        $stack2 = new org.apache.maven.building.Problem$Severity;

        specialinvoke $stack2.<org.apache.maven.building.Problem$Severity: void <init>(java.lang.String,int)>("WARNING", 2);

        <org.apache.maven.building.Problem$Severity: org.apache.maven.building.Problem$Severity WARNING> = $stack2;

        $stack3 = newarray (org.apache.maven.building.Problem$Severity)[3];

        $stack4 = <org.apache.maven.building.Problem$Severity: org.apache.maven.building.Problem$Severity FATAL>;

        $stack3[0] = $stack4;

        $stack5 = <org.apache.maven.building.Problem$Severity: org.apache.maven.building.Problem$Severity ERROR>;

        $stack3[1] = $stack5;

        $stack6 = <org.apache.maven.building.Problem$Severity: org.apache.maven.building.Problem$Severity WARNING>;

        $stack3[2] = $stack6;

        <org.apache.maven.building.Problem$Severity: org.apache.maven.building.Problem$Severity[] $VALUES> = $stack3;

        return;
    }
}
