public class ProcessUtils$StreamRelay extends java.lang.Object
{
    protected final java.io.InputStream inStream;
    protected final java.io.OutputStream outStream;

    public void <init>(java.io.InputStream, java.io.OutputStream)
    {
        ProcessUtils$StreamRelay this;
        java.io.InputStream inStream;
        java.io.OutputStream outStream;
        org.ooc.utils.ProcessUtils$StreamRelay $r0, $r1;

        this := @this: ProcessUtils$StreamRelay;

        inStream := @parameter0: java.io.InputStream;

        outStream := @parameter1: java.io.OutputStream;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.ooc.utils.ProcessUtils$StreamRelay) this;

        $r0.<org.ooc.utils.ProcessUtils$StreamRelay: java.io.InputStream inStream> = inStream;

        $r1 = (org.ooc.utils.ProcessUtils$StreamRelay) this;

        $r1.<org.ooc.utils.ProcessUtils$StreamRelay: java.io.OutputStream outStream> = outStream;

        return;
    }

    public boolean update() throws java.io.IOException
    {
        int $stack3, $stack5;
        byte[] buffer;
        ProcessUtils$StreamRelay this;
        java.io.InputStream $stack4;
        java.io.OutputStream $stack6;
        org.ooc.utils.ProcessUtils$StreamRelay $r0, $r1;

        this := @this: ProcessUtils$StreamRelay;

        $stack3 = <org.ooc.utils.ProcessUtils: int BUFFER_SIZE>;

        buffer = newarray (byte)[$stack3];

        $r0 = (org.ooc.utils.ProcessUtils$StreamRelay) this;

        $stack4 = $r0.<org.ooc.utils.ProcessUtils$StreamRelay: java.io.InputStream inStream>;

        $stack5 = virtualinvoke $stack4.<java.io.InputStream: int read(byte[])>(buffer);

        if $stack5 == -1 goto label1;

        $r1 = (org.ooc.utils.ProcessUtils$StreamRelay) this;

        $stack6 = $r1.<org.ooc.utils.ProcessUtils$StreamRelay: java.io.OutputStream outStream>;

        virtualinvoke $stack6.<java.io.OutputStream: void write(byte[],int,int)>(buffer, 0, $stack5);

        return 1;

     label1:
        return 0;
    }
}
