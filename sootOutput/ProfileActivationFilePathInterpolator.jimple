public class ProfileActivationFilePathInterpolator extends java.lang.Object
{
    private org.apache.maven.model.path.PathTranslator pathTranslator;

    public void <init>()
    {
        ProfileActivationFilePathInterpolator this;

        this := @this: ProfileActivationFilePathInterpolator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.maven.model.path.ProfileActivationFilePathInterpolator setPathTranslator(org.apache.maven.model.path.PathTranslator)
    {
        ProfileActivationFilePathInterpolator this;
        org.apache.maven.model.path.PathTranslator pathTranslator;
        org.apache.maven.model.path.ProfileActivationFilePathInterpolator $r0, $r1;

        this := @this: ProfileActivationFilePathInterpolator;

        pathTranslator := @parameter0: org.apache.maven.model.path.PathTranslator;

        $r0 = (org.apache.maven.model.path.ProfileActivationFilePathInterpolator) this;

        $r0.<org.apache.maven.model.path.ProfileActivationFilePathInterpolator: org.apache.maven.model.path.PathTranslator pathTranslator> = pathTranslator;

        $r1 = (org.apache.maven.model.path.ProfileActivationFilePathInterpolator) this;

        return $r1;
    }

    public java.lang.String interpolate(java.lang.String, org.apache.maven.model.profile.ProfileActivationContext) throws org.codehaus.plexus.interpolation.InterpolationException
    {
        java.lang.String path, absolutePath, $stack17;
        org.apache.maven.model.profile.ProfileActivationContext context;
        java.io.File basedir;
        boolean $stack8;
        java.util.Map $stack10, $stack12, $stack14;
        ProfileActivationFilePathInterpolator this;
        org.apache.maven.model.path.PathTranslator $stack16;
        org.codehaus.plexus.interpolation.RegexBasedInterpolator $u0;
        org.apache.maven.model.path.ProfileActivationFilePathInterpolator$1 $u1;
        org.codehaus.plexus.interpolation.MapBasedValueSource $u2, $u3, $u4;
        org.apache.maven.model.path.ProfileActivationFilePathInterpolator $r0, $r5;
        org.codehaus.plexus.interpolation.ValueSource $r1, $r2, $r3, $r4;

        this := @this: ProfileActivationFilePathInterpolator;

        path := @parameter0: java.lang.String;

        context := @parameter1: org.apache.maven.model.profile.ProfileActivationContext;

        if path != null goto label1;

        return null;

     label1:
        $u0 = new org.codehaus.plexus.interpolation.RegexBasedInterpolator;

        specialinvoke $u0.<org.codehaus.plexus.interpolation.RegexBasedInterpolator: void <init>()>();

        basedir = interfaceinvoke context.<org.apache.maven.model.profile.ProfileActivationContext: java.io.File getProjectDirectory()>();

        if basedir == null goto label2;

        $u1 = new org.apache.maven.model.path.ProfileActivationFilePathInterpolator$1;

        $r0 = (org.apache.maven.model.path.ProfileActivationFilePathInterpolator) this;

        specialinvoke $u1.<org.apache.maven.model.path.ProfileActivationFilePathInterpolator$1: void <init>(org.apache.maven.model.path.ProfileActivationFilePathInterpolator,boolean,java.io.File)>($r0, 0, basedir);

        $r1 = (org.codehaus.plexus.interpolation.ValueSource) $u1;

        virtualinvoke $u0.<org.codehaus.plexus.interpolation.RegexBasedInterpolator: void addValueSource(org.codehaus.plexus.interpolation.ValueSource)>($r1);

        goto label3;

     label2:
        $stack8 = virtualinvoke path.<java.lang.String: boolean contains(java.lang.CharSequence)>("${basedir}");

        if $stack8 == 0 goto label3;

        return null;

     label3:
        $u2 = new org.codehaus.plexus.interpolation.MapBasedValueSource;

        $stack10 = interfaceinvoke context.<org.apache.maven.model.profile.ProfileActivationContext: java.util.Map getProjectProperties()>();

        specialinvoke $u2.<org.codehaus.plexus.interpolation.MapBasedValueSource: void <init>(java.util.Map)>($stack10);

        $r2 = (org.codehaus.plexus.interpolation.ValueSource) $u2;

        virtualinvoke $u0.<org.codehaus.plexus.interpolation.RegexBasedInterpolator: void addValueSource(org.codehaus.plexus.interpolation.ValueSource)>($r2);

        $u3 = new org.codehaus.plexus.interpolation.MapBasedValueSource;

        $stack12 = interfaceinvoke context.<org.apache.maven.model.profile.ProfileActivationContext: java.util.Map getUserProperties()>();

        specialinvoke $u3.<org.codehaus.plexus.interpolation.MapBasedValueSource: void <init>(java.util.Map)>($stack12);

        $r3 = (org.codehaus.plexus.interpolation.ValueSource) $u3;

        virtualinvoke $u0.<org.codehaus.plexus.interpolation.RegexBasedInterpolator: void addValueSource(org.codehaus.plexus.interpolation.ValueSource)>($r3);

        $u4 = new org.codehaus.plexus.interpolation.MapBasedValueSource;

        $stack14 = interfaceinvoke context.<org.apache.maven.model.profile.ProfileActivationContext: java.util.Map getSystemProperties()>();

        specialinvoke $u4.<org.codehaus.plexus.interpolation.MapBasedValueSource: void <init>(java.util.Map)>($stack14);

        $r4 = (org.codehaus.plexus.interpolation.ValueSource) $u4;

        virtualinvoke $u0.<org.codehaus.plexus.interpolation.RegexBasedInterpolator: void addValueSource(org.codehaus.plexus.interpolation.ValueSource)>($r4);

        absolutePath = virtualinvoke $u0.<org.codehaus.plexus.interpolation.RegexBasedInterpolator: java.lang.String interpolate(java.lang.String,java.lang.String)>(path, "");

        $r5 = (org.apache.maven.model.path.ProfileActivationFilePathInterpolator) this;

        $stack16 = $r5.<org.apache.maven.model.path.ProfileActivationFilePathInterpolator: org.apache.maven.model.path.PathTranslator pathTranslator>;

        $stack17 = interfaceinvoke $stack16.<org.apache.maven.model.path.PathTranslator: java.lang.String alignToBaseDirectory(java.lang.String,java.io.File)>(absolutePath, basedir);

        return $stack17;
    }
}
