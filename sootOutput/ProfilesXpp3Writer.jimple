public class ProfilesXpp3Writer extends java.lang.Object
{
    private static final java.lang.String NAMESPACE;
    private java.lang.String fileComment;

    public void <init>()
    {
        ProfilesXpp3Writer this;
        org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer $r0;

        this := @this: ProfilesXpp3Writer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        $r0.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String fileComment> = null;

        return;
    }

    public void setFileComment(java.lang.String)
    {
        ProfilesXpp3Writer this;
        java.lang.String fileComment;
        org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer $r0;

        this := @this: ProfilesXpp3Writer;

        fileComment := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        $r0.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String fileComment> = fileComment;

        return;
    }

    public void write(java.io.Writer, org.apache.maven.profiles.ProfilesRoot) throws java.io.IOException
    {
        java.io.Writer writer;
        org.apache.maven.profiles.ProfilesRoot profilesRoot;
        java.lang.String $stack5;
        ProfilesXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer $r4;

        this := @this: ProfilesXpp3Writer;

        writer := @parameter0: java.io.Writer;

        profilesRoot := @parameter1: org.apache.maven.profiles.ProfilesRoot;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.Writer)>(writer);

        $stack5 = virtualinvoke profilesRoot.<org.apache.maven.profiles.ProfilesRoot: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack5, null);

        $r4 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeProfilesRoot(org.apache.maven.profiles.ProfilesRoot,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(profilesRoot, "profilesXml", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    public void write(java.io.OutputStream, org.apache.maven.profiles.ProfilesRoot) throws java.io.IOException
    {
        java.io.OutputStream stream;
        org.apache.maven.profiles.ProfilesRoot profilesRoot;
        java.lang.String $stack5, $stack6;
        ProfilesXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer $r4;

        this := @this: ProfilesXpp3Writer;

        stream := @parameter0: java.io.OutputStream;

        profilesRoot := @parameter1: org.apache.maven.profiles.ProfilesRoot;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $stack5 = virtualinvoke profilesRoot.<org.apache.maven.profiles.ProfilesRoot: java.lang.String getModelEncoding()>();

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(stream, $stack5);

        $stack6 = virtualinvoke profilesRoot.<org.apache.maven.profiles.ProfilesRoot: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack6, null);

        $r4 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeProfilesRoot(org.apache.maven.profiles.ProfilesRoot,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(profilesRoot, "profilesXml", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    private void writeActivation(org.apache.maven.profiles.Activation, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack28, $stack31;
        java.lang.String tagName, $stack4, $stack7, $stack11, $stack20, $stack22, $stack24, $stack27, $stack30, $stack32;
        org.apache.maven.profiles.Activation activation;
        boolean $stack6, $stack29;
        org.apache.maven.profiles.ActivationOS $stack8, $stack18;
        org.apache.maven.profiles.ActivationProperty $stack9, $stack16;
        org.apache.maven.profiles.ActivationFile $stack10, $stack13;
        ProfilesXpp3Writer this;
        org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer $r0, $r1, $r2;

        this := @this: ProfilesXpp3Writer;

        activation := @parameter0: org.apache.maven.profiles.Activation;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activation.<org.apache.maven.profiles.Activation: boolean isActiveByDefault()>();

        if $stack6 == 0 goto label1;

        $stack27 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "activeByDefault");

        $stack29 = virtualinvoke activation.<org.apache.maven.profiles.Activation: boolean isActiveByDefault()>();

        $stack30 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack29);

        $stack31 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack30);

        $stack32 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack31.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack32, "activeByDefault");

     label1:
        $stack7 = virtualinvoke activation.<org.apache.maven.profiles.Activation: java.lang.String getJdk()>();

        if $stack7 == null goto label2;

        $stack20 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "jdk");

        $stack22 = virtualinvoke activation.<org.apache.maven.profiles.Activation: java.lang.String getJdk()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "jdk");

     label2:
        $stack8 = virtualinvoke activation.<org.apache.maven.profiles.Activation: org.apache.maven.profiles.ActivationOS getOs()>();

        if $stack8 == null goto label3;

        $stack18 = virtualinvoke activation.<org.apache.maven.profiles.Activation: org.apache.maven.profiles.ActivationOS getOs()>();

        $r0 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeActivationOS(org.apache.maven.profiles.ActivationOS,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack18, "os", serializer);

     label3:
        $stack9 = virtualinvoke activation.<org.apache.maven.profiles.Activation: org.apache.maven.profiles.ActivationProperty getProperty()>();

        if $stack9 == null goto label4;

        $stack16 = virtualinvoke activation.<org.apache.maven.profiles.Activation: org.apache.maven.profiles.ActivationProperty getProperty()>();

        $r1 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeActivationProperty(org.apache.maven.profiles.ActivationProperty,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack16, "property", serializer);

     label4:
        $stack10 = virtualinvoke activation.<org.apache.maven.profiles.Activation: org.apache.maven.profiles.ActivationFile getFile()>();

        if $stack10 == null goto label5;

        $stack13 = virtualinvoke activation.<org.apache.maven.profiles.Activation: org.apache.maven.profiles.ActivationFile getFile()>();

        $r2 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeActivationFile(org.apache.maven.profiles.ActivationFile,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack13, "file", serializer);

     label5:
        $stack11 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writeActivationFile(org.apache.maven.profiles.ActivationFile, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.profiles.ActivationFile activationFile;
        ProfilesXpp3Writer this;

        this := @this: ProfilesXpp3Writer;

        activationFile := @parameter0: org.apache.maven.profiles.ActivationFile;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationFile.<org.apache.maven.profiles.ActivationFile: java.lang.String getMissing()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "missing");

        $stack20 = virtualinvoke activationFile.<org.apache.maven.profiles.ActivationFile: java.lang.String getMissing()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "missing");

     label1:
        $stack7 = virtualinvoke activationFile.<org.apache.maven.profiles.ActivationFile: java.lang.String getExists()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "exists");

        $stack12 = virtualinvoke activationFile.<org.apache.maven.profiles.ActivationFile: java.lang.String getExists()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "exists");

     label2:
        $stack8 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeActivationOS(org.apache.maven.profiles.ActivationOS, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30, $stack35, $stack37;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36, $stack38;
        org.apache.maven.profiles.ActivationOS activationOS;
        ProfilesXpp3Writer this;

        this := @this: ProfilesXpp3Writer;

        activationOS := @parameter0: org.apache.maven.profiles.ActivationOS;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationOS.<org.apache.maven.profiles.ActivationOS: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "name");

        $stack36 = virtualinvoke activationOS.<org.apache.maven.profiles.ActivationOS: java.lang.String getName()>();

        $stack37 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack36);

        $stack38 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "name");

     label1:
        $stack7 = virtualinvoke activationOS.<org.apache.maven.profiles.ActivationOS: java.lang.String getFamily()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "family");

        $stack29 = virtualinvoke activationOS.<org.apache.maven.profiles.ActivationOS: java.lang.String getFamily()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "family");

     label2:
        $stack8 = virtualinvoke activationOS.<org.apache.maven.profiles.ActivationOS: java.lang.String getArch()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "arch");

        $stack22 = virtualinvoke activationOS.<org.apache.maven.profiles.ActivationOS: java.lang.String getArch()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "arch");

     label3:
        $stack9 = virtualinvoke activationOS.<org.apache.maven.profiles.ActivationOS: java.lang.String getVersion()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "version");

        $stack14 = virtualinvoke activationOS.<org.apache.maven.profiles.ActivationOS: java.lang.String getVersion()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "version");

     label4:
        $stack10 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeActivationProperty(org.apache.maven.profiles.ActivationProperty, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.profiles.ActivationProperty activationProperty;
        ProfilesXpp3Writer this;

        this := @this: ProfilesXpp3Writer;

        activationProperty := @parameter0: org.apache.maven.profiles.ActivationProperty;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationProperty.<org.apache.maven.profiles.ActivationProperty: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "name");

        $stack20 = virtualinvoke activationProperty.<org.apache.maven.profiles.ActivationProperty: java.lang.String getName()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "name");

     label1:
        $stack7 = virtualinvoke activationProperty.<org.apache.maven.profiles.ActivationProperty: java.lang.String getValue()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "value");

        $stack12 = virtualinvoke activationProperty.<org.apache.maven.profiles.ActivationProperty: java.lang.String getValue()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "value");

     label2:
        $stack8 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeProfile(org.apache.maven.profiles.Profile, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack56, $stack57, $stack64, $stack66;
        java.lang.String tagName, $stack7, $stack9, $stack20, $stack25, $stack32, $stack37, $stack44, $stack50, value, $stack55, $stack58, $stack63, $stack65, $stack67, key, $stack14;
        org.apache.maven.profiles.Profile profile;
        org.apache.maven.profiles.Activation $stack10, $stack61;
        java.util.Properties $stack11, $stack41, $stack46, $stack53;
        java.util.List $stack16, $stack22, $stack29, $stack34, $stack12, $stack13;
        int $stack17, $stack30, $stack42;
        boolean $stack24, $stack36, $stack49;
        java.lang.Object $stack27, $stack39, $stack52, $stack54;
        ProfilesXpp3Writer this;
        java.util.Set $stack47;
        java.util.Iterator iter;
        org.apache.maven.profiles.Repository key#8;
        org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer $r0, $r1, $r2;

        this := @this: ProfilesXpp3Writer;

        profile := @parameter0: org.apache.maven.profiles.Profile;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack7 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        $stack9 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.lang.String getId()>();

        if $stack9 == null goto label01;

        $stack63 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack64 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack63, "id");

        $stack65 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.lang.String getId()>();

        $stack66 = interfaceinvoke $stack64.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack65);

        $stack67 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack67, "id");

     label01:
        $stack10 = virtualinvoke profile.<org.apache.maven.profiles.Profile: org.apache.maven.profiles.Activation getActivation()>();

        if $stack10 == null goto label02;

        $stack61 = virtualinvoke profile.<org.apache.maven.profiles.Profile: org.apache.maven.profiles.Activation getActivation()>();

        $r0 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeActivation(org.apache.maven.profiles.Activation,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack61, "activation", serializer);

     label02:
        $stack11 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.Properties getProperties()>();

        if $stack11 == null goto label05;

        $stack41 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.Properties getProperties()>();

        $stack42 = virtualinvoke $stack41.<java.util.Properties: int size()>();

        if $stack42 <= 0 goto label05;

        $stack44 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack44, "properties");

        $stack46 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.Properties getProperties()>();

        $stack47 = virtualinvoke $stack46.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack47.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $stack49 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack49 == 0 goto label04;

        $stack52 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $stack52;

        $stack53 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.Properties getProperties()>();

        $stack54 = virtualinvoke $stack53.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);

        value = (java.lang.String) $stack54;

        $stack55 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack56 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack55, key);

        $stack57 = interfaceinvoke $stack56.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack58 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack57.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack58, key);

        goto label03;

     label04:
        $stack50 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack50, "properties");

     label05:
        $stack12 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.List getRepositories()>();

        if $stack12 == null goto label08;

        $stack29 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.List getRepositories()>();

        $stack30 = interfaceinvoke $stack29.<java.util.List: int size()>();

        if $stack30 <= 0 goto label08;

        $stack32 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack32, "repositories");

        $stack34 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.List getRepositories()>();

        iter = interfaceinvoke $stack34.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack36 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack36 == 0 goto label07;

        $stack39 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key#8 = (org.apache.maven.profiles.Repository) $stack39;

        $r1 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeRepository(org.apache.maven.profiles.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(key#8, "repository", serializer);

        goto label06;

     label07:
        $stack37 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack37, "repositories");

     label08:
        $stack13 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.List getPluginRepositories()>();

        if $stack13 == null goto label11;

        $stack16 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.List getPluginRepositories()>();

        $stack17 = interfaceinvoke $stack16.<java.util.List: int size()>();

        if $stack17 <= 0 goto label11;

        $stack20 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "pluginRepositories");

        $stack22 = virtualinvoke profile.<org.apache.maven.profiles.Profile: java.util.List getPluginRepositories()>();

        iter = interfaceinvoke $stack22.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $stack24 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack24 == 0 goto label10;

        $stack27 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key#8 = (org.apache.maven.profiles.Repository) $stack27;

        $r2 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeRepository(org.apache.maven.profiles.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(key#8, "pluginRepository", serializer);

        goto label09;

     label10:
        $stack25 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack25, "pluginRepositories");

     label11:
        $stack14 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, tagName);

        return;
    }

    private void writeProfilesRoot(org.apache.maven.profiles.ProfilesRoot, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        ProfilesXpp3Writer this;
        java.lang.String $stack6, tagName, $stack7, $stack18, $stack23, $stack26, $stack29, $stack35, $stack40, $stack44, o#8, $stack12;
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack27, $stack28;
        org.apache.maven.profiles.ProfilesRoot profilesRoot;
        java.util.List $stack10, $stack14, $stack20, $stack32, $stack37, $stack11;
        int $stack15, $stack33;
        boolean $stack22, $stack39;
        java.lang.Object $stack25, $stack42;
        java.util.Iterator iter;
        org.apache.maven.profiles.Profile o;
        org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer $r0, $r1, $r2;

        this := @this: ProfilesXpp3Writer;

        profilesRoot := @parameter0: org.apache.maven.profiles.ProfilesRoot;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $r0 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        $stack6 = $r0.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String fileComment>;

        if $stack6 == null goto label1;

        $r1 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        $stack44 = $r1.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String fileComment>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void comment(java.lang.String)>($stack44);

     label1:
        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("", "http://maven.apache.org/PROFILES/1.0.0");

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("xsi", "http://www.w3.org/2001/XMLSchema-instance");

        $stack7 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "xsi:schemaLocation", "http://maven.apache.org/PROFILES/1.0.0 http://maven.apache.org/xsd/profiles-1.0.0.xsd");

        $stack10 = virtualinvoke profilesRoot.<org.apache.maven.profiles.ProfilesRoot: java.util.List getProfiles()>();

        if $stack10 == null goto label4;

        $stack32 = virtualinvoke profilesRoot.<org.apache.maven.profiles.ProfilesRoot: java.util.List getProfiles()>();

        $stack33 = interfaceinvoke $stack32.<java.util.List: int size()>();

        if $stack33 <= 0 goto label4;

        $stack35 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack35, "profiles");

        $stack37 = virtualinvoke profilesRoot.<org.apache.maven.profiles.ProfilesRoot: java.util.List getProfiles()>();

        iter = interfaceinvoke $stack37.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack39 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack39 == 0 goto label3;

        $stack42 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.profiles.Profile) $stack42;

        $r2 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeProfile(org.apache.maven.profiles.Profile,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "profile", serializer);

        goto label2;

     label3:
        $stack40 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "profiles");

     label4:
        $stack11 = virtualinvoke profilesRoot.<org.apache.maven.profiles.ProfilesRoot: java.util.List getActiveProfiles()>();

        if $stack11 == null goto label7;

        $stack14 = virtualinvoke profilesRoot.<org.apache.maven.profiles.ProfilesRoot: java.util.List getActiveProfiles()>();

        $stack15 = interfaceinvoke $stack14.<java.util.List: int size()>();

        if $stack15 <= 0 goto label7;

        $stack18 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "activeProfiles");

        $stack20 = virtualinvoke profilesRoot.<org.apache.maven.profiles.ProfilesRoot: java.util.List getActiveProfiles()>();

        iter = interfaceinvoke $stack20.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $stack22 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack22 == 0 goto label6;

        $stack25 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#8 = (java.lang.String) $stack25;

        $stack26 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "activeProfile");

        $stack28 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(o#8);

        $stack29 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack29, "activeProfile");

        goto label5;

     label6:
        $stack23 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "activeProfiles");

     label7:
        $stack12 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack12, tagName);

        return;
    }

    private void writeRepository(org.apache.maven.profiles.Repository, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack19, $stack21, $stack25, $stack27, $stack32, $stack34, $stack39, $stack41;
        java.lang.String tagName, $stack4, $stack8, $stack9, $stack10, $stack11, $stack14, $stack18, $stack20, $stack22, $stack24, $stack26, $stack28, $stack31, $stack33, $stack35, $stack38, $stack40, $stack42, $stack12;
        org.apache.maven.profiles.Repository repository;
        org.apache.maven.profiles.RepositoryPolicy $stack6, $stack7, $stack45, $stack47;
        boolean $stack15;
        ProfilesXpp3Writer this;
        org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer $r0, $r1;

        this := @this: ProfilesXpp3Writer;

        repository := @parameter0: org.apache.maven.profiles.Repository;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repository.<org.apache.maven.profiles.Repository: org.apache.maven.profiles.RepositoryPolicy getReleases()>();

        if $stack6 == null goto label1;

        $stack47 = virtualinvoke repository.<org.apache.maven.profiles.Repository: org.apache.maven.profiles.RepositoryPolicy getReleases()>();

        $r0 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeRepositoryPolicy(org.apache.maven.profiles.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack47, "releases", serializer);

     label1:
        $stack7 = virtualinvoke repository.<org.apache.maven.profiles.Repository: org.apache.maven.profiles.RepositoryPolicy getSnapshots()>();

        if $stack7 == null goto label2;

        $stack45 = virtualinvoke repository.<org.apache.maven.profiles.Repository: org.apache.maven.profiles.RepositoryPolicy getSnapshots()>();

        $r1 = (org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: void writeRepositoryPolicy(org.apache.maven.profiles.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack45, "snapshots", serializer);

     label2:
        $stack8 = virtualinvoke repository.<org.apache.maven.profiles.Repository: java.lang.String getId()>();

        if $stack8 == null goto label3;

        $stack38 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack39 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack38, "id");

        $stack40 = virtualinvoke repository.<org.apache.maven.profiles.Repository: java.lang.String getId()>();

        $stack41 = interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack40);

        $stack42 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack41.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack42, "id");

     label3:
        $stack9 = virtualinvoke repository.<org.apache.maven.profiles.Repository: java.lang.String getName()>();

        if $stack9 == null goto label4;

        $stack31 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack32 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack31, "name");

        $stack33 = virtualinvoke repository.<org.apache.maven.profiles.Repository: java.lang.String getName()>();

        $stack34 = interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack33);

        $stack35 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "name");

     label4:
        $stack10 = virtualinvoke repository.<org.apache.maven.profiles.Repository: java.lang.String getUrl()>();

        if $stack10 == null goto label5;

        $stack24 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack25 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "url");

        $stack26 = virtualinvoke repository.<org.apache.maven.profiles.Repository: java.lang.String getUrl()>();

        $stack27 = interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack26);

        $stack28 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "url");

     label5:
        $stack11 = virtualinvoke repository.<org.apache.maven.profiles.Repository: java.lang.String getLayout()>();

        if $stack11 == null goto label6;

        $stack14 = virtualinvoke repository.<org.apache.maven.profiles.Repository: java.lang.String getLayout()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack15 != 0 goto label6;

        $stack18 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "layout");

        $stack20 = virtualinvoke repository.<org.apache.maven.profiles.Repository: java.lang.String getLayout()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "layout");

     label6:
        $stack12 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack12, tagName);

        return;
    }

    private void writeRepositoryBase(org.apache.maven.profiles.RepositoryBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack17, $stack19, $stack23, $stack25, $stack30, $stack32, $stack37, $stack39;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack12, $stack16, $stack18, $stack20, $stack22, $stack24, $stack26, $stack29, $stack31, $stack33, $stack36, $stack38, $stack40, $stack10;
        org.apache.maven.profiles.RepositoryBase repositoryBase;
        boolean $stack13;
        ProfilesXpp3Writer this;

        this := @this: ProfilesXpp3Writer;

        repositoryBase := @parameter0: org.apache.maven.profiles.RepositoryBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repositoryBase.<org.apache.maven.profiles.RepositoryBase: java.lang.String getId()>();

        if $stack6 == null goto label1;

        $stack36 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack37 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "id");

        $stack38 = virtualinvoke repositoryBase.<org.apache.maven.profiles.RepositoryBase: java.lang.String getId()>();

        $stack39 = interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack38);

        $stack40 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "id");

     label1:
        $stack7 = virtualinvoke repositoryBase.<org.apache.maven.profiles.RepositoryBase: java.lang.String getName()>();

        if $stack7 == null goto label2;

        $stack29 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack30 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack29, "name");

        $stack31 = virtualinvoke repositoryBase.<org.apache.maven.profiles.RepositoryBase: java.lang.String getName()>();

        $stack32 = interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack31);

        $stack33 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack33, "name");

     label2:
        $stack8 = virtualinvoke repositoryBase.<org.apache.maven.profiles.RepositoryBase: java.lang.String getUrl()>();

        if $stack8 == null goto label3;

        $stack22 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack23 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack22, "url");

        $stack24 = virtualinvoke repositoryBase.<org.apache.maven.profiles.RepositoryBase: java.lang.String getUrl()>();

        $stack25 = interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack24);

        $stack26 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack26, "url");

     label3:
        $stack9 = virtualinvoke repositoryBase.<org.apache.maven.profiles.RepositoryBase: java.lang.String getLayout()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke repositoryBase.<org.apache.maven.profiles.RepositoryBase: java.lang.String getLayout()>();

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack13 != 0 goto label4;

        $stack16 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack17 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "layout");

        $stack18 = virtualinvoke repositoryBase.<org.apache.maven.profiles.RepositoryBase: java.lang.String getLayout()>();

        $stack19 = interfaceinvoke $stack17.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack18);

        $stack20 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "layout");

     label4:
        $stack10 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeRepositoryPolicy(org.apache.maven.profiles.RepositoryPolicy, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack12, $stack14, $stack20, $stack22, $stack27, $stack30;
        java.lang.String tagName, $stack4, $stack7, $stack8, $stack9, $stack11, $stack13, $stack15, $stack19, $stack21, $stack23, $stack26, $stack29, $stack31;
        org.apache.maven.profiles.RepositoryPolicy repositoryPolicy;
        boolean $stack6, $stack28;
        ProfilesXpp3Writer this;

        this := @this: ProfilesXpp3Writer;

        repositoryPolicy := @parameter0: org.apache.maven.profiles.RepositoryPolicy;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repositoryPolicy.<org.apache.maven.profiles.RepositoryPolicy: boolean isEnabled()>();

        if $stack6 == 1 goto label1;

        $stack26 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "enabled");

        $stack28 = virtualinvoke repositoryPolicy.<org.apache.maven.profiles.RepositoryPolicy: boolean isEnabled()>();

        $stack29 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack28);

        $stack30 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "enabled");

     label1:
        $stack7 = virtualinvoke repositoryPolicy.<org.apache.maven.profiles.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        if $stack7 == null goto label2;

        $stack19 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "updatePolicy");

        $stack21 = virtualinvoke repositoryPolicy.<org.apache.maven.profiles.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "updatePolicy");

     label2:
        $stack8 = virtualinvoke repositoryPolicy.<org.apache.maven.profiles.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        if $stack8 == null goto label3;

        $stack11 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        $stack12 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack11, "checksumPolicy");

        $stack13 = virtualinvoke repositoryPolicy.<org.apache.maven.profiles.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        $stack14 = interfaceinvoke $stack12.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack13);

        $stack15 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack15, "checksumPolicy");

     label3:
        $stack9 = <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    static void <clinit>()
    {
        <org.apache.maven.profiles.io.xpp3.ProfilesXpp3Writer: java.lang.String NAMESPACE> = null;

        return;
    }
}
