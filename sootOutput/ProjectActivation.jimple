public class ProjectActivation extends java.lang.Object
{
    private final java.util.List activations;

    public void <init>()
    {
        ProjectActivation this;
        java.util.ArrayList $u0;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $r0.<org.apache.maven.execution.ProjectActivation: java.util.List activations> = $u0;

        return;
    }

    public void addProjectActivation(java.lang.String, boolean, boolean)
    {
        boolean active, optional;
        org.apache.maven.execution.ActivationSettings settings;
        ProjectActivation this;
        java.lang.String selector;
        java.util.List $stack7;
        org.apache.maven.execution.ProjectActivation$ProjectActivationSettings $u0;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        selector := @parameter0: java.lang.String;

        active := @parameter1: boolean;

        optional := @parameter2: boolean;

        settings = staticinvoke <org.apache.maven.execution.ActivationSettings: org.apache.maven.execution.ActivationSettings of(boolean,boolean)>(active, optional);

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack7 = $r0.<org.apache.maven.execution.ProjectActivation: java.util.List activations>;

        $u0 = new org.apache.maven.execution.ProjectActivation$ProjectActivationSettings;

        specialinvoke $u0.<org.apache.maven.execution.ProjectActivation$ProjectActivationSettings: void <init>(java.lang.String,org.apache.maven.execution.ActivationSettings)>(selector, settings);

        interfaceinvoke $stack7.<java.util.List: boolean add(java.lang.Object)>($u0);

        return;
    }

    private java.util.stream.Stream getProjects(java.util.function.Predicate)
    {
        ProjectActivation this;
        java.util.List $stack2;
        java.util.stream.Stream $stack3, $stack5;
        java.util.function.Predicate predicate, $stack4;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        predicate := @parameter0: java.util.function.Predicate;

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack2 = $r0.<org.apache.maven.execution.ProjectActivation: java.util.List activations>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.util.stream.Stream stream()>();

        $stack4 = staticinvoke <ProjectActivation$lambda_getProjects_0__309: java.util.function.Predicate bootstrap$(java.util.function.Predicate)>(predicate);

        $stack5 = interfaceinvoke $stack3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>($stack4);

        return $stack5;
    }

    private java.util.Set getProjectSelectors(java.util.function.Predicate)
    {
        ProjectActivation this;
        java.util.function.Predicate predicate;
        java.util.stream.Stream $stack2, $stack4;
        java.util.function.Function $stack3;
        java.util.stream.Collector $stack5;
        java.lang.Object $stack6;
        java.util.Set $stack7;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        predicate := @parameter0: java.util.function.Predicate;

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.execution.ProjectActivation: java.util.stream.Stream getProjects(java.util.function.Predicate)>(predicate);

        $stack3 = staticinvoke <ProjectActivation$lambda_getProjectSelectors_1__310: java.util.function.Function bootstrap$()>();

        $stack4 = interfaceinvoke $stack2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($stack3);

        $stack5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toSet()>();

        $stack6 = interfaceinvoke $stack4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($stack5);

        $stack7 = (java.util.Set) $stack6;

        return $stack7;
    }

    public java.util.Set getRequiredActiveProjectSelectors()
    {
        ProjectActivation this;
        java.util.function.Predicate $stack1;
        java.util.Set $stack2;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        $stack1 = staticinvoke <ProjectActivation$lambda_getRequiredActiveProjectSelectors_2__311: java.util.function.Predicate bootstrap$()>();

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.execution.ProjectActivation: java.util.Set getProjectSelectors(java.util.function.Predicate)>($stack1);

        return $stack2;
    }

    public java.util.Set getOptionalActiveProjectSelectors()
    {
        ProjectActivation this;
        java.util.function.Predicate $stack1;
        java.util.Set $stack2;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        $stack1 = staticinvoke <ProjectActivation$lambda_getOptionalActiveProjectSelectors_3__312: java.util.function.Predicate bootstrap$()>();

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.execution.ProjectActivation: java.util.Set getProjectSelectors(java.util.function.Predicate)>($stack1);

        return $stack2;
    }

    public java.util.Set getRequiredInactiveProjectSelectors()
    {
        ProjectActivation this;
        java.util.function.Predicate $stack1;
        java.util.Set $stack2;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        $stack1 = staticinvoke <ProjectActivation$lambda_getRequiredInactiveProjectSelectors_4__314: java.util.function.Predicate bootstrap$()>();

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.execution.ProjectActivation: java.util.Set getProjectSelectors(java.util.function.Predicate)>($stack1);

        return $stack2;
    }

    public java.util.Set getOptionalInactiveProjectSelectors()
    {
        ProjectActivation this;
        java.util.function.Predicate $stack1;
        java.util.Set $stack2;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        $stack1 = staticinvoke <ProjectActivation$lambda_getOptionalInactiveProjectSelectors_5__313: java.util.function.Predicate bootstrap$()>();

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack2 = specialinvoke $r0.<org.apache.maven.execution.ProjectActivation: java.util.Set getProjectSelectors(java.util.function.Predicate)>($stack1);

        return $stack2;
    }

    public java.util.List getSelectedProjects()
    {
        ProjectActivation this;
        java.util.function.Predicate $stack2;
        java.util.Set $stack3;
        java.util.List $stack4;
        java.util.ArrayList $u0;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        $u0 = new java.util.ArrayList;

        $stack2 = staticinvoke <ProjectActivation$lambda_getSelectedProjects_6__315: java.util.function.Predicate bootstrap$()>();

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.execution.ProjectActivation: java.util.Set getProjectSelectors(java.util.function.Predicate)>($stack2);

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>($stack3);

        $stack4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($u0);

        return $stack4;
    }

    public java.util.List getExcludedProjects()
    {
        ProjectActivation this;
        java.util.function.Predicate $stack2;
        java.util.Set $stack3;
        java.util.List $stack4;
        java.util.ArrayList $u0;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        $u0 = new java.util.ArrayList;

        $stack2 = staticinvoke <ProjectActivation$lambda_getExcludedProjects_7__316: java.util.function.Predicate bootstrap$()>();

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.execution.ProjectActivation: java.util.Set getProjectSelectors(java.util.function.Predicate)>($stack2);

        specialinvoke $u0.<java.util.ArrayList: void <init>(java.util.Collection)>($stack3);

        $stack4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($u0);

        return $stack4;
    }

    public void overwriteActiveProjects(java.util.List)
    {
        ProjectActivation this;
        java.util.function.Predicate $stack3;
        java.util.stream.Stream $stack4;
        java.util.stream.Collector $stack5;
        java.lang.Object $stack6;
        java.util.List projects, $stack7, activeProjectSelectors;
        java.util.function.Consumer $stack9;
        org.apache.maven.execution.ProjectActivation $r0, $r1, $r2;

        this := @this: ProjectActivation;

        activeProjectSelectors := @parameter0: java.util.List;

        $stack3 = staticinvoke <ProjectActivation$lambda_overwriteActiveProjects_8__317: java.util.function.Predicate bootstrap$()>();

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.execution.ProjectActivation: java.util.stream.Stream getProjects(java.util.function.Predicate)>($stack3);

        $stack5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $stack6 = interfaceinvoke $stack4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($stack5);

        projects = (java.util.List) $stack6;

        $r1 = (org.apache.maven.execution.ProjectActivation) this;

        $stack7 = $r1.<org.apache.maven.execution.ProjectActivation: java.util.List activations>;

        interfaceinvoke $stack7.<java.util.List: boolean removeAll(java.util.Collection)>(projects);

        $r2 = (org.apache.maven.execution.ProjectActivation) this;

        $stack9 = staticinvoke <ProjectActivation$activateOptionalProject__319: java.util.function.Consumer bootstrap$(org.apache.maven.execution.ProjectActivation)>($r2);

        interfaceinvoke activeProjectSelectors.<java.util.List: void forEach(java.util.function.Consumer)>($stack9);

        return;
    }

    public void overwriteInactiveProjects(java.util.List)
    {
        ProjectActivation this;
        java.util.function.Predicate $stack3;
        java.util.stream.Stream $stack4;
        java.util.stream.Collector $stack5;
        java.lang.Object $stack6;
        java.util.List projects, $stack7, inactiveProjectSelectors;
        java.util.function.Consumer $stack9;
        org.apache.maven.execution.ProjectActivation $r0, $r1, $r2;

        this := @this: ProjectActivation;

        inactiveProjectSelectors := @parameter0: java.util.List;

        $stack3 = staticinvoke <ProjectActivation$lambda_overwriteInactiveProjects_9__318: java.util.function.Predicate bootstrap$()>();

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.execution.ProjectActivation: java.util.stream.Stream getProjects(java.util.function.Predicate)>($stack3);

        $stack5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();

        $stack6 = interfaceinvoke $stack4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($stack5);

        projects = (java.util.List) $stack6;

        $r1 = (org.apache.maven.execution.ProjectActivation) this;

        $stack7 = $r1.<org.apache.maven.execution.ProjectActivation: java.util.List activations>;

        interfaceinvoke $stack7.<java.util.List: boolean removeAll(java.util.Collection)>(projects);

        $r2 = (org.apache.maven.execution.ProjectActivation) this;

        $stack9 = staticinvoke <ProjectActivation$deactivateOptionalProject__320: java.util.function.Consumer bootstrap$(org.apache.maven.execution.ProjectActivation)>($r2);

        interfaceinvoke inactiveProjectSelectors.<java.util.List: void forEach(java.util.function.Consumer)>($stack9);

        return;
    }

    public void activateRequiredProject(java.lang.String)
    {
        ProjectActivation this;
        java.lang.String selector;
        org.apache.maven.execution.ActivationSettings $stack3;
        java.util.List $stack4;
        org.apache.maven.execution.ProjectActivation$ProjectActivationSettings $u0;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        selector := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack4 = $r0.<org.apache.maven.execution.ProjectActivation: java.util.List activations>;

        $u0 = new org.apache.maven.execution.ProjectActivation$ProjectActivationSettings;

        $stack3 = <org.apache.maven.execution.ActivationSettings: org.apache.maven.execution.ActivationSettings ACTIVATION_REQUIRED>;

        specialinvoke $u0.<org.apache.maven.execution.ProjectActivation$ProjectActivationSettings: void <init>(java.lang.String,org.apache.maven.execution.ActivationSettings)>(selector, $stack3);

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($u0);

        return;
    }

    public void activateOptionalProject(java.lang.String)
    {
        ProjectActivation this;
        java.lang.String selector;
        org.apache.maven.execution.ActivationSettings $stack3;
        java.util.List $stack4;
        org.apache.maven.execution.ProjectActivation$ProjectActivationSettings $u0;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        selector := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack4 = $r0.<org.apache.maven.execution.ProjectActivation: java.util.List activations>;

        $u0 = new org.apache.maven.execution.ProjectActivation$ProjectActivationSettings;

        $stack3 = <org.apache.maven.execution.ActivationSettings: org.apache.maven.execution.ActivationSettings ACTIVATION_OPTIONAL>;

        specialinvoke $u0.<org.apache.maven.execution.ProjectActivation$ProjectActivationSettings: void <init>(java.lang.String,org.apache.maven.execution.ActivationSettings)>(selector, $stack3);

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($u0);

        return;
    }

    public void deactivateRequiredProject(java.lang.String)
    {
        ProjectActivation this;
        java.lang.String selector;
        org.apache.maven.execution.ActivationSettings $stack3;
        java.util.List $stack4;
        org.apache.maven.execution.ProjectActivation$ProjectActivationSettings $u0;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        selector := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack4 = $r0.<org.apache.maven.execution.ProjectActivation: java.util.List activations>;

        $u0 = new org.apache.maven.execution.ProjectActivation$ProjectActivationSettings;

        $stack3 = <org.apache.maven.execution.ActivationSettings: org.apache.maven.execution.ActivationSettings DEACTIVATION_REQUIRED>;

        specialinvoke $u0.<org.apache.maven.execution.ProjectActivation$ProjectActivationSettings: void <init>(java.lang.String,org.apache.maven.execution.ActivationSettings)>(selector, $stack3);

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($u0);

        return;
    }

    public void deactivateOptionalProject(java.lang.String)
    {
        ProjectActivation this;
        java.lang.String selector;
        org.apache.maven.execution.ActivationSettings $stack3;
        java.util.List $stack4;
        org.apache.maven.execution.ProjectActivation$ProjectActivationSettings $u0;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        selector := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack4 = $r0.<org.apache.maven.execution.ProjectActivation: java.util.List activations>;

        $u0 = new org.apache.maven.execution.ProjectActivation$ProjectActivationSettings;

        $stack3 = <org.apache.maven.execution.ActivationSettings: org.apache.maven.execution.ActivationSettings DEACTIVATION_OPTIONAL>;

        specialinvoke $u0.<org.apache.maven.execution.ProjectActivation$ProjectActivationSettings: void <init>(java.lang.String,org.apache.maven.execution.ActivationSettings)>(selector, $stack3);

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($u0);

        return;
    }

    public boolean isEmpty()
    {
        ProjectActivation this;
        java.util.List $stack1;
        boolean $stack2;
        org.apache.maven.execution.ProjectActivation $r0;

        this := @this: ProjectActivation;

        $r0 = (org.apache.maven.execution.ProjectActivation) this;

        $stack1 = $r0.<org.apache.maven.execution.ProjectActivation: java.util.List activations>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: boolean isEmpty()>();

        return $stack2;
    }

    private static boolean lambda$overwriteInactiveProjects$9(org.apache.maven.execution.ActivationSettings)
    {
        org.apache.maven.execution.ActivationSettings pa;
        boolean $stack1, $stack2;

        pa := @parameter0: org.apache.maven.execution.ActivationSettings;

        $stack1 = pa.<org.apache.maven.execution.ActivationSettings: boolean active>;

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    private static boolean lambda$overwriteActiveProjects$8(org.apache.maven.execution.ActivationSettings)
    {
        org.apache.maven.execution.ActivationSettings pa;
        boolean $stack1;

        pa := @parameter0: org.apache.maven.execution.ActivationSettings;

        $stack1 = pa.<org.apache.maven.execution.ActivationSettings: boolean active>;

        return $stack1;
    }

    private static boolean lambda$getExcludedProjects$7(org.apache.maven.execution.ActivationSettings)
    {
        org.apache.maven.execution.ActivationSettings pa;
        boolean $stack1, $stack2;

        pa := @parameter0: org.apache.maven.execution.ActivationSettings;

        $stack1 = pa.<org.apache.maven.execution.ActivationSettings: boolean active>;

        if $stack1 != 0 goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    private static boolean lambda$getSelectedProjects$6(org.apache.maven.execution.ActivationSettings)
    {
        org.apache.maven.execution.ActivationSettings pa;
        boolean $stack1;

        pa := @parameter0: org.apache.maven.execution.ActivationSettings;

        $stack1 = pa.<org.apache.maven.execution.ActivationSettings: boolean active>;

        return $stack1;
    }

    private static boolean lambda$getOptionalInactiveProjectSelectors$5(org.apache.maven.execution.ActivationSettings)
    {
        org.apache.maven.execution.ActivationSettings pa;
        boolean $stack1, $stack2, $stack3;

        pa := @parameter0: org.apache.maven.execution.ActivationSettings;

        $stack1 = pa.<org.apache.maven.execution.ActivationSettings: boolean optional>;

        if $stack1 == 0 goto label1;

        $stack2 = pa.<org.apache.maven.execution.ActivationSettings: boolean active>;

        if $stack2 != 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    private static boolean lambda$getRequiredInactiveProjectSelectors$4(org.apache.maven.execution.ActivationSettings)
    {
        org.apache.maven.execution.ActivationSettings pa;
        boolean $stack1, $stack2, $stack3;

        pa := @parameter0: org.apache.maven.execution.ActivationSettings;

        $stack1 = pa.<org.apache.maven.execution.ActivationSettings: boolean optional>;

        if $stack1 != 0 goto label1;

        $stack2 = pa.<org.apache.maven.execution.ActivationSettings: boolean active>;

        if $stack2 != 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    private static boolean lambda$getOptionalActiveProjectSelectors$3(org.apache.maven.execution.ActivationSettings)
    {
        org.apache.maven.execution.ActivationSettings pa;
        boolean $stack1, $stack2, $stack3;

        pa := @parameter0: org.apache.maven.execution.ActivationSettings;

        $stack1 = pa.<org.apache.maven.execution.ActivationSettings: boolean optional>;

        if $stack1 == 0 goto label1;

        $stack2 = pa.<org.apache.maven.execution.ActivationSettings: boolean active>;

        if $stack2 == 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    private static boolean lambda$getRequiredActiveProjectSelectors$2(org.apache.maven.execution.ActivationSettings)
    {
        org.apache.maven.execution.ActivationSettings pa;
        boolean $stack1, $stack2, $stack3;

        pa := @parameter0: org.apache.maven.execution.ActivationSettings;

        $stack1 = pa.<org.apache.maven.execution.ActivationSettings: boolean optional>;

        if $stack1 != 0 goto label1;

        $stack2 = pa.<org.apache.maven.execution.ActivationSettings: boolean active>;

        if $stack2 == 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    private static java.lang.String lambda$getProjectSelectors$1(org.apache.maven.execution.ProjectActivation$ProjectActivationSettings)
    {
        org.apache.maven.execution.ProjectActivation$ProjectActivationSettings activation;
        java.lang.String $stack1;

        activation := @parameter0: org.apache.maven.execution.ProjectActivation$ProjectActivationSettings;

        $stack1 = activation.<org.apache.maven.execution.ProjectActivation$ProjectActivationSettings: java.lang.String selector>;

        return $stack1;
    }

    private static boolean lambda$getProjects$0(java.util.function.Predicate, org.apache.maven.execution.ProjectActivation$ProjectActivationSettings)
    {
        java.util.function.Predicate predicate;
        org.apache.maven.execution.ProjectActivation$ProjectActivationSettings activation;
        org.apache.maven.execution.ActivationSettings $stack2;
        boolean $stack3;

        predicate := @parameter0: java.util.function.Predicate;

        activation := @parameter1: org.apache.maven.execution.ProjectActivation$ProjectActivationSettings;

        $stack2 = activation.<org.apache.maven.execution.ProjectActivation$ProjectActivationSettings: org.apache.maven.execution.ActivationSettings activationSettings>;

        $stack3 = interfaceinvoke predicate.<java.util.function.Predicate: boolean test(java.lang.Object)>($stack2);

        return $stack3;
    }
}
