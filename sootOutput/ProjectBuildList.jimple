public class ProjectBuildList extends java.lang.Object implements java.lang.Iterable
{
    private final java.util.List items;

    public void <init>(java.util.List)
    {
        ProjectBuildList this;
        java.util.List items, $stack2;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0;

        this := @this: ProjectBuildList;

        items := @parameter0: java.util.List;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(items);

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items> = $stack2;

        return;
    }

    public org.apache.maven.lifecycle.internal.ProjectBuildList getByTaskSegment(org.apache.maven.lifecycle.internal.TaskSegment)
    {
        ProjectBuildList this;
        java.util.List $stack6;
        java.util.Iterator l3;
        boolean $stack8;
        java.lang.Object $stack10;
        org.apache.maven.lifecycle.internal.ProjectSegment projectBuild;
        org.apache.maven.lifecycle.internal.TaskSegment taskSegment, $stack11;
        java.util.ArrayList $u0;
        org.apache.maven.lifecycle.internal.ProjectBuildList $u1, $r0;

        this := @this: ProjectBuildList;

        taskSegment := @parameter0: org.apache.maven.lifecycle.internal.TaskSegment;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack6 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        l3 = interfaceinvoke $stack6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label3;

        $stack10 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        projectBuild = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack10;

        $stack11 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.lifecycle.internal.TaskSegment getTaskSegment()>();

        if taskSegment != $stack11 goto label2;

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>(projectBuild);

     label2:
        goto label1;

     label3:
        $u1 = new org.apache.maven.lifecycle.internal.ProjectBuildList;

        specialinvoke $u1.<org.apache.maven.lifecycle.internal.ProjectBuildList: void <init>(java.util.List)>($u0);

        return $u1;
    }

    public java.util.Map selectSegment(org.apache.maven.lifecycle.internal.TaskSegment)
    {
        ProjectBuildList this;
        java.util.List $stack6;
        java.util.Iterator l3;
        boolean $stack8;
        java.lang.Object $stack9;
        org.apache.maven.lifecycle.internal.ProjectSegment projectBuild;
        org.apache.maven.lifecycle.internal.TaskSegment taskSegment, $stack10;
        org.apache.maven.project.MavenProject $stack12;
        java.util.HashMap $u0;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0;

        this := @this: ProjectBuildList;

        taskSegment := @parameter0: org.apache.maven.lifecycle.internal.TaskSegment;

        $u0 = new java.util.HashMap;

        specialinvoke $u0.<java.util.HashMap: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack6 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        l3 = interfaceinvoke $stack6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label3;

        $stack9 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        projectBuild = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack9;

        $stack10 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.lifecycle.internal.TaskSegment getTaskSegment()>();

        if taskSegment != $stack10 goto label2;

        $stack12 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        interfaceinvoke $u0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack12, projectBuild);

     label2:
        goto label1;

     label3:
        return $u0;
    }

    public org.apache.maven.lifecycle.internal.ProjectSegment findByMavenProject(org.apache.maven.project.MavenProject)
    {
        ProjectBuildList this;
        java.util.List $stack4;
        java.util.Iterator l2;
        boolean $stack6, $stack9;
        java.lang.Object $stack7;
        org.apache.maven.lifecycle.internal.ProjectSegment projectBuild;
        org.apache.maven.project.MavenProject mavenProject, $stack8;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0;

        this := @this: ProjectBuildList;

        mavenProject := @parameter0: org.apache.maven.project.MavenProject;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack4 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        l2 = interfaceinvoke $stack4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label3;

        $stack7 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        projectBuild = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack7;

        $stack8 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        $stack9 = virtualinvoke mavenProject.<org.apache.maven.project.MavenProject: boolean equals(java.lang.Object)>($stack8);

        if $stack9 == 0 goto label2;

        return projectBuild;

     label2:
        goto label1;

     label3:
        return null;
    }

    public java.util.Iterator iterator()
    {
        ProjectBuildList this;
        java.util.List $stack1;
        java.util.Iterator $stack2;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0;

        this := @this: ProjectBuildList;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: java.util.Iterator iterator()>();

        return $stack2;
    }

    public void closeAll()
    {
        ProjectBuildList this;
        java.util.List $stack4;
        java.util.Iterator l1;
        boolean $stack6;
        java.lang.Object $stack7;
        org.apache.maven.lifecycle.internal.ProjectSegment item;
        org.apache.maven.execution.MavenSession sessionForThisModule;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0;

        this := @this: ProjectBuildList;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack4 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        l1 = interfaceinvoke $stack4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label2;

        $stack7 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack7;

        sessionForThisModule = virtualinvoke item.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.execution.MavenSession getSession()>();

        virtualinvoke sessionForThisModule.<org.apache.maven.execution.MavenSession: void setCurrentProject(org.apache.maven.project.MavenProject)>(null);

        goto label1;

     label2:
        return;
    }

    public int size()
    {
        ProjectBuildList this;
        java.util.List $stack1;
        int $stack2;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0;

        this := @this: ProjectBuildList;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: int size()>();

        return $stack2;
    }

    public org.apache.maven.lifecycle.internal.ProjectSegment get(int)
    {
        ProjectBuildList this;
        int index;
        java.util.List $stack2;
        java.lang.Object $stack3;
        org.apache.maven.lifecycle.internal.ProjectSegment $stack4;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0;

        this := @this: ProjectBuildList;

        index := @parameter0: int;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack2 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        $stack3 = interfaceinvoke $stack2.<java.util.List: java.lang.Object get(int)>(index);

        $stack4 = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack3;

        return $stack4;
    }

    public java.util.Set getReactorProjectKeys()
    {
        ProjectBuildList this;
        java.util.List $stack7, $stack10;
        int $stack8, $stack9;
        java.util.Iterator l2;
        boolean $stack12;
        java.lang.Object $stack13;
        org.apache.maven.lifecycle.internal.ProjectSegment projectBuild;
        org.apache.maven.project.MavenProject project;
        java.lang.String $stack15, $stack16, $stack17, key;
        java.util.HashSet $u0;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0, $r1;

        this := @this: ProjectBuildList;

        $u0 = new java.util.HashSet;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack7 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        $stack8 = interfaceinvoke $stack7.<java.util.List: int size()>();

        $stack9 = $stack8 * 2;

        specialinvoke $u0.<java.util.HashSet: void <init>(int)>($stack9);

        $r1 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack10 = $r1.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        l2 = interfaceinvoke $stack10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack12 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label2;

        $stack13 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        projectBuild = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack13;

        project = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        $stack15 = virtualinvoke project.<org.apache.maven.project.MavenProject: java.lang.String getGroupId()>();

        $stack16 = virtualinvoke project.<org.apache.maven.project.MavenProject: java.lang.String getArtifactId()>();

        $stack17 = virtualinvoke project.<org.apache.maven.project.MavenProject: java.lang.String getVersion()>();

        key = staticinvoke <org.apache.maven.artifact.ArtifactUtils: java.lang.String key(java.lang.String,java.lang.String,java.lang.String)>($stack15, $stack16, $stack17);

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>(key);

        goto label1;

     label2:
        return $u0;
    }

    public boolean isEmpty()
    {
        ProjectBuildList this;
        java.util.List $stack1;
        boolean $stack2;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0;

        this := @this: ProjectBuildList;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        $stack2 = interfaceinvoke $stack1.<java.util.List: boolean isEmpty()>();

        return $stack2;
    }

    public java.util.Set getProjects()
    {
        ProjectBuildList this;
        java.util.List $stack5;
        java.util.Iterator l2;
        boolean $stack7;
        java.lang.Object $stack8;
        org.apache.maven.lifecycle.internal.ProjectSegment s;
        org.apache.maven.project.MavenProject $stack9;
        java.util.HashSet $u0;
        org.apache.maven.lifecycle.internal.ProjectBuildList $r0;

        this := @this: ProjectBuildList;

        $u0 = new java.util.HashSet;

        specialinvoke $u0.<java.util.HashSet: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.ProjectBuildList) this;

        $stack5 = $r0.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.List items>;

        l2 = interfaceinvoke $stack5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label2;

        $stack8 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        s = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack8;

        $stack9 = virtualinvoke s.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        interfaceinvoke $u0.<java.util.Set: boolean add(java.lang.Object)>($stack9);

        goto label1;

     label2:
        return $u0;
    }
}
