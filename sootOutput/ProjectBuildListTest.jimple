public class ProjectBuildListTest extends java.lang.Object
{

    public void <init>()
    {
        ProjectBuildListTest this;

        this := @this: ProjectBuildListTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testGetByTaskSegment() throws java.lang.Exception
    {
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.lifecycle.internal.ProjectBuildList projectBuildList, byTaskSegment;
        org.apache.maven.lifecycle.internal.ProjectSegment $stack7;
        org.apache.maven.lifecycle.internal.TaskSegment taskSegment;
        int $stack10, $stack16, $stack17;
        java.lang.Integer $stack11, $stack12;
        org.hamcrest.Matcher $stack13, $stack14;
        ProjectBuildListTest this;

        this := @this: ProjectBuildListTest;

        session = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.execution.MavenSession getMavenSession()>();

        projectBuildList = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.lifecycle.internal.ProjectBuildList getProjectBuildList(org.apache.maven.execution.MavenSession)>(session);

        $stack7 = virtualinvoke projectBuildList.<org.apache.maven.lifecycle.internal.ProjectBuildList: org.apache.maven.lifecycle.internal.ProjectSegment get(int)>(0);

        taskSegment = virtualinvoke $stack7.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.lifecycle.internal.TaskSegment getTaskSegment()>();

        $stack10 = virtualinvoke projectBuildList.<org.apache.maven.lifecycle.internal.ProjectBuildList: int size()>();

        $stack11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack10);

        $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $stack13 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher greaterThanOrEqualTo(java.lang.Comparable)>($stack12);

        $stack14 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack13);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>("This test assumes there are at least 6 elements in projectBuilds", $stack11, $stack14);

        byTaskSegment = virtualinvoke projectBuildList.<org.apache.maven.lifecycle.internal.ProjectBuildList: org.apache.maven.lifecycle.internal.ProjectBuildList getByTaskSegment(org.apache.maven.lifecycle.internal.TaskSegment)>(taskSegment);

        $stack16 = virtualinvoke projectBuildList.<org.apache.maven.lifecycle.internal.ProjectBuildList: int size()>();

        $stack17 = virtualinvoke byTaskSegment.<org.apache.maven.lifecycle.internal.ProjectBuildList: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>($stack16, $stack17);

        return;
    }
}
