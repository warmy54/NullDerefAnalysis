public class ProjectBuildingException extends java.lang.Exception
{
    private final java.lang.String projectId;
    private java.io.File pomFile;
    private java.util.List results;

    public void <init>(java.lang.String, java.lang.String, java.lang.Throwable)
    {
        ProjectBuildingException this;
        java.lang.String message, projectId, $stack4;
        java.lang.Throwable cause;
        org.apache.maven.project.ProjectBuildingException $r0;

        this := @this: ProjectBuildingException;

        projectId := @parameter0: java.lang.String;

        message := @parameter1: java.lang.String;

        cause := @parameter2: java.lang.Throwable;

        $stack4 = staticinvoke <org.apache.maven.project.ProjectBuildingException: java.lang.String createMessage(java.lang.String,java.lang.String,java.io.File)>(message, projectId, null);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack4, cause);

        $r0 = (org.apache.maven.project.ProjectBuildingException) this;

        $r0.<org.apache.maven.project.ProjectBuildingException: java.lang.String projectId> = projectId;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.io.File)
    {
        ProjectBuildingException this;
        java.lang.String message, projectId, $stack4;
        java.io.File pomFile;
        org.apache.maven.project.ProjectBuildingException $r0, $r1;

        this := @this: ProjectBuildingException;

        projectId := @parameter0: java.lang.String;

        message := @parameter1: java.lang.String;

        pomFile := @parameter2: java.io.File;

        $stack4 = staticinvoke <org.apache.maven.project.ProjectBuildingException: java.lang.String createMessage(java.lang.String,java.lang.String,java.io.File)>(message, projectId, pomFile);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>($stack4);

        $r0 = (org.apache.maven.project.ProjectBuildingException) this;

        $r0.<org.apache.maven.project.ProjectBuildingException: java.lang.String projectId> = projectId;

        $r1 = (org.apache.maven.project.ProjectBuildingException) this;

        $r1.<org.apache.maven.project.ProjectBuildingException: java.io.File pomFile> = pomFile;

        return;
    }

    protected void <init>(java.lang.String, java.lang.String, java.io.File, java.lang.Throwable)
    {
        ProjectBuildingException this;
        java.lang.String message, projectId, $stack5;
        java.io.File pomFile;
        java.lang.Throwable cause;
        org.apache.maven.project.ProjectBuildingException $r0, $r1;

        this := @this: ProjectBuildingException;

        projectId := @parameter0: java.lang.String;

        message := @parameter1: java.lang.String;

        pomFile := @parameter2: java.io.File;

        cause := @parameter3: java.lang.Throwable;

        $stack5 = staticinvoke <org.apache.maven.project.ProjectBuildingException: java.lang.String createMessage(java.lang.String,java.lang.String,java.io.File)>(message, projectId, pomFile);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>($stack5, cause);

        $r0 = (org.apache.maven.project.ProjectBuildingException) this;

        $r0.<org.apache.maven.project.ProjectBuildingException: java.lang.String projectId> = projectId;

        $r1 = (org.apache.maven.project.ProjectBuildingException) this;

        $r1.<org.apache.maven.project.ProjectBuildingException: java.io.File pomFile> = pomFile;

        return;
    }

    public void <init>(java.util.List)
    {
        ProjectBuildingException this;
        java.util.List results;
        java.lang.String $stack2;
        org.apache.maven.project.ProjectBuildingException $r0, $r1;

        this := @this: ProjectBuildingException;

        results := @parameter0: java.util.List;

        $stack2 = staticinvoke <org.apache.maven.project.ProjectBuildingException: java.lang.String createMessage(java.util.List)>(results);

        specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>($stack2);

        $r0 = (org.apache.maven.project.ProjectBuildingException) this;

        $r0.<org.apache.maven.project.ProjectBuildingException: java.lang.String projectId> = "";

        $r1 = (org.apache.maven.project.ProjectBuildingException) this;

        $r1.<org.apache.maven.project.ProjectBuildingException: java.util.List results> = results;

        return;
    }

    public java.io.File getPomFile()
    {
        ProjectBuildingException this;
        java.io.File $stack1;
        org.apache.maven.project.ProjectBuildingException $r0;

        this := @this: ProjectBuildingException;

        $r0 = (org.apache.maven.project.ProjectBuildingException) this;

        $stack1 = $r0.<org.apache.maven.project.ProjectBuildingException: java.io.File pomFile>;

        return $stack1;
    }

    public java.lang.String getPomLocation()
    {
        ProjectBuildingException this;
        java.io.File $stack1, $stack2;
        java.lang.String $stack3;
        org.apache.maven.project.ProjectBuildingException $r0, $r1;

        this := @this: ProjectBuildingException;

        $r0 = (org.apache.maven.project.ProjectBuildingException) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.project.ProjectBuildingException: java.io.File getPomFile()>();

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.project.ProjectBuildingException) this;

        $stack2 = virtualinvoke $r1.<org.apache.maven.project.ProjectBuildingException: java.io.File getPomFile()>();

        $stack3 = virtualinvoke $stack2.<java.io.File: java.lang.String getAbsolutePath()>();

        return $stack3;

     label1:
        return "null";
    }

    public java.lang.String getProjectId()
    {
        ProjectBuildingException this;
        java.lang.String $stack1;
        org.apache.maven.project.ProjectBuildingException $r0;

        this := @this: ProjectBuildingException;

        $r0 = (org.apache.maven.project.ProjectBuildingException) this;

        $stack1 = $r0.<org.apache.maven.project.ProjectBuildingException: java.lang.String projectId>;

        return $stack1;
    }

    public java.util.List getResults()
    {
        ProjectBuildingException this;
        java.util.List $stack1;
        org.apache.maven.project.ProjectBuildingException $r0;

        this := @this: ProjectBuildingException;

        $r0 = (org.apache.maven.project.ProjectBuildingException) this;

        $stack1 = $r0.<org.apache.maven.project.ProjectBuildingException: java.util.List results>;

        return $stack1;
    }

    private static java.lang.String createMessage(java.lang.String, java.lang.String, java.io.File)
    {
        java.lang.StringBuilder $stack4, $stack6, $stack9;
        java.lang.String message, projectId, $stack8, $stack10;
        java.io.File pomFile;

        message := @parameter0: java.lang.String;

        projectId := @parameter1: java.lang.String;

        pomFile := @parameter2: java.io.File;

        $stack4 = new java.lang.StringBuilder;

        specialinvoke $stack4.<java.lang.StringBuilder: void <init>(int)>(256);

        virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(message);

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for project ");

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(projectId);

        if pomFile == null goto label1;

        $stack9 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $stack10 = virtualinvoke pomFile.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

     label1:
        $stack8 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack8;
    }

    private static java.lang.String createMessage(java.util.List)
    {
        java.io.StringWriter $stack9;
        java.io.PrintWriter $stack10;
        java.util.List results, $stack15;
        java.util.Iterator l3, l5;
        boolean $stack12, $stack17, $stack24;
        java.lang.String $stack13, $stack21, $stack22, location;
        java.lang.Object $stack14, $stack19;
        org.apache.maven.project.ProjectBuildingResult result;
        org.apache.maven.model.building.ModelProblem problem;
        org.apache.maven.model.building.ModelProblem$Severity $stack20;
        java.lang.Throwable $stack26;

        results := @parameter0: java.util.List;

        $stack9 = new java.io.StringWriter;

        specialinvoke $stack9.<java.io.StringWriter: void <init>(int)>(1024);

        $stack10 = new java.io.PrintWriter;

        specialinvoke $stack10.<java.io.PrintWriter: void <init>(java.io.Writer)>($stack9);

        virtualinvoke $stack10.<java.io.PrintWriter: void println(java.lang.String)>("Some problems were encountered while processing the POMs:");

     label1:
        l3 = interfaceinvoke results.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label6;

        $stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        result = (org.apache.maven.project.ProjectBuildingResult) $stack14;

        $stack15 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.util.List getProblems()>();

        l5 = interfaceinvoke $stack15.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack17 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label5;

        $stack19 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        problem = (org.apache.maven.model.building.ModelProblem) $stack19;

        virtualinvoke $stack10.<java.io.PrintWriter: void print(java.lang.String)>("[");

        $stack20 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: org.apache.maven.model.building.ModelProblem$Severity getSeverity()>();

        virtualinvoke $stack10.<java.io.PrintWriter: void print(java.lang.Object)>($stack20);

        virtualinvoke $stack10.<java.io.PrintWriter: void print(java.lang.String)>("] ");

        $stack21 = interfaceinvoke problem.<org.apache.maven.model.building.ModelProblem: java.lang.String getMessage()>();

        virtualinvoke $stack10.<java.io.PrintWriter: void print(java.lang.String)>($stack21);

        $stack22 = interfaceinvoke result.<org.apache.maven.project.ProjectBuildingResult: java.lang.String getProjectId()>();

        location = staticinvoke <org.apache.maven.model.building.ModelProblemUtils: java.lang.String formatLocation(org.apache.maven.model.building.ModelProblem,java.lang.String)>(problem, $stack22);

        $stack24 = virtualinvoke location.<java.lang.String: boolean isEmpty()>();

        if $stack24 != 0 goto label4;

        virtualinvoke $stack10.<java.io.PrintWriter: void print(java.lang.String)>(" @ ");

        virtualinvoke $stack10.<java.io.PrintWriter: void println(java.lang.String)>(location);

     label4:
        goto label3;

     label5:
        goto label2;

     label6:
        virtualinvoke $stack10.<java.io.PrintWriter: void close()>();

        goto label9;

     label7:
        $stack26 := @caughtexception;

     label8:
        virtualinvoke $stack10.<java.io.PrintWriter: void close()>();

        throw $stack26;

     label9:
        $stack13 = virtualinvoke $stack9.<java.io.StringWriter: java.lang.String toString()>();

        return $stack13;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
