public interface  ProjectBuildingRequest extends java.lang.Object
{

    public abstract org.apache.maven.project.ProjectBuildingRequest setLocalRepository(org.apache.maven.artifact.repository.ArtifactRepository);

    public abstract org.apache.maven.artifact.repository.ArtifactRepository getLocalRepository();

    public abstract org.apache.maven.project.ProjectBuildingRequest setRemoteRepositories(java.util.List);

    public abstract java.util.List getRemoteRepositories();

    public abstract org.apache.maven.project.ProjectBuildingRequest setPluginArtifactRepositories(java.util.List);

    public abstract java.util.List getPluginArtifactRepositories();

    public abstract org.apache.maven.project.ProjectBuildingRequest setSystemProperties(java.util.Properties);

    public abstract java.util.Properties getSystemProperties();

    public abstract org.apache.maven.project.ProjectBuildingRequest setUserProperties(java.util.Properties);

    public abstract java.util.Properties getUserProperties();

    public abstract void setProject(org.apache.maven.project.MavenProject);

    public abstract org.apache.maven.project.MavenProject getProject();

    public abstract org.apache.maven.project.ProjectBuildingRequest setProcessPlugins(boolean);

    public abstract boolean isProcessPlugins();

    public abstract org.apache.maven.project.ProjectBuildingRequest setResolveDependencies(boolean);

    public abstract boolean isResolveDependencies();

    public abstract org.apache.maven.project.ProjectBuildingRequest setValidationLevel(int);

    public abstract int getValidationLevel();

    public abstract void setActiveProfileIds(java.util.List);

    public abstract java.util.List getActiveProfileIds();

    public abstract void setInactiveProfileIds(java.util.List);

    public abstract java.util.List getInactiveProfileIds();

    public abstract void addProfile(org.apache.maven.model.Profile);

    public abstract void setProfiles(java.util.List);

    public abstract java.util.List getProfiles();

    public abstract java.util.Date getBuildStartTime();

    public abstract void setBuildStartTime(java.util.Date);

    public abstract org.eclipse.aether.RepositorySystemSession getRepositorySession();

    public abstract org.apache.maven.project.ProjectBuildingRequest setRepositorySession(org.eclipse.aether.RepositorySystemSession);

    public abstract org.apache.maven.project.ProjectBuildingRequest setRepositoryMerging(org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging);

    public abstract org.apache.maven.project.ProjectBuildingRequest$RepositoryMerging getRepositoryMerging();

    public abstract boolean isResolveVersionRanges();

    public abstract org.apache.maven.project.ProjectBuildingRequest setResolveVersionRanges(boolean);
}
