class ProjectDependenciesResolverStub$1 extends java.lang.Object implements org.apache.maven.project.DependencyResolutionResult
{
    final org.apache.maven.lifecycle.internal.stub.ProjectDependenciesResolverStub this$0;

    void <init>(org.apache.maven.lifecycle.internal.stub.ProjectDependenciesResolverStub)
    {
        ProjectDependenciesResolverStub$1 this;
        org.apache.maven.lifecycle.internal.stub.ProjectDependenciesResolverStub this$0;
        org.apache.maven.lifecycle.internal.stub.ProjectDependenciesResolverStub$1 $r0;

        this := @this: ProjectDependenciesResolverStub$1;

        this$0 := @parameter0: org.apache.maven.lifecycle.internal.stub.ProjectDependenciesResolverStub;

        $r0 = (org.apache.maven.lifecycle.internal.stub.ProjectDependenciesResolverStub$1) this;

        $r0.<org.apache.maven.lifecycle.internal.stub.ProjectDependenciesResolverStub$1: org.apache.maven.lifecycle.internal.stub.ProjectDependenciesResolverStub this$0> = this$0;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List getUnresolvedDependencies()
    {
        java.util.List $stack1;
        ProjectDependenciesResolverStub$1 this;

        this := @this: ProjectDependenciesResolverStub$1;

        $stack1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack1;
    }

    public java.util.List getResolvedDependencies()
    {
        java.util.List $stack1;
        ProjectDependenciesResolverStub$1 this;

        this := @this: ProjectDependenciesResolverStub$1;

        $stack1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack1;
    }

    public java.util.List getResolutionErrors(org.eclipse.aether.graph.Dependency)
    {
        java.util.List $stack2;
        ProjectDependenciesResolverStub$1 this;
        org.eclipse.aether.graph.Dependency dependency;

        this := @this: ProjectDependenciesResolverStub$1;

        dependency := @parameter0: org.eclipse.aether.graph.Dependency;

        $stack2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack2;
    }

    public org.eclipse.aether.graph.DependencyNode getDependencyGraph()
    {
        org.eclipse.aether.graph.Dependency $stack2;
        ProjectDependenciesResolverStub$1 this;
        org.eclipse.aether.graph.DefaultDependencyNode $u0;
        org.eclipse.aether.graph.DependencyNode $r0;

        this := @this: ProjectDependenciesResolverStub$1;

        $u0 = new org.eclipse.aether.graph.DefaultDependencyNode;

        $stack2 = (org.eclipse.aether.graph.Dependency) null;

        specialinvoke $u0.<org.eclipse.aether.graph.DefaultDependencyNode: void <init>(org.eclipse.aether.graph.Dependency)>($stack2);

        $r0 = (org.eclipse.aether.graph.DependencyNode) $u0;

        return $r0;
    }

    public java.util.List getDependencies()
    {
        java.util.List $stack1;
        ProjectDependenciesResolverStub$1 this;

        this := @this: ProjectDependenciesResolverStub$1;

        $stack1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack1;
    }

    public java.util.List getCollectionErrors()
    {
        java.util.List $stack1;
        ProjectDependenciesResolverStub$1 this;

        this := @this: ProjectDependenciesResolverStub$1;

        $stack1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack1;
    }
}
