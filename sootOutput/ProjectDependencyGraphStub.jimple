public class ProjectDependencyGraphStub extends java.lang.Object implements org.apache.maven.execution.ProjectDependencyGraph
{
    public static final org.apache.maven.project.MavenProject A;
    public static final org.apache.maven.project.MavenProject B;
    public static final org.apache.maven.project.MavenProject C;
    public static final org.apache.maven.project.MavenProject X;
    public static final org.apache.maven.project.MavenProject Y;
    public static final org.apache.maven.project.MavenProject Z;
    public static final org.apache.maven.project.MavenProject UNKNOWN;

    public void <init>()
    {
        ProjectDependencyGraphStub this;

        this := @this: ProjectDependencyGraphStub;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.maven.lifecycle.internal.ProjectBuildList getProjectBuildList(org.apache.maven.execution.MavenSession) throws org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException
    {
        org.apache.maven.execution.MavenSession session;
        java.util.List list;
        org.apache.maven.lifecycle.internal.ProjectBuildList $stack3;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        list = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: java.util.List getProjectBuilds(org.apache.maven.execution.MavenSession)>(session);

        $stack3 = new org.apache.maven.lifecycle.internal.ProjectBuildList;

        specialinvoke $stack3.<org.apache.maven.lifecycle.internal.ProjectBuildList: void <init>(java.util.List)>(list);

        return $stack3;
    }

    public static java.util.List getProjectBuilds(org.apache.maven.execution.MavenSession) throws org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException
    {
        java.util.ArrayList $stack3;
        org.apache.maven.lifecycle.internal.TaskSegment segment;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.project.MavenProject $stack5, $stack8, $stack11, $stack14, $stack17, $stack20;
        org.apache.maven.lifecycle.internal.ProjectSegment $stack6, $stack9, $stack12, $stack15, $stack18, $stack21;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        $stack3 = new java.util.ArrayList;

        specialinvoke $stack3.<java.util.ArrayList: void <init>()>();

        segment = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.lifecycle.internal.TaskSegment createTaskSegment()>();

        $stack5 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        $stack6 = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.lifecycle.internal.ProjectSegment createProjectBuild(org.apache.maven.project.MavenProject,org.apache.maven.execution.MavenSession,org.apache.maven.lifecycle.internal.TaskSegment)>($stack5, session, segment);

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>($stack6);

        $stack8 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B>;

        $stack9 = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.lifecycle.internal.ProjectSegment createProjectBuild(org.apache.maven.project.MavenProject,org.apache.maven.execution.MavenSession,org.apache.maven.lifecycle.internal.TaskSegment)>($stack8, session, segment);

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>($stack9);

        $stack11 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject C>;

        $stack12 = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.lifecycle.internal.ProjectSegment createProjectBuild(org.apache.maven.project.MavenProject,org.apache.maven.execution.MavenSession,org.apache.maven.lifecycle.internal.TaskSegment)>($stack11, session, segment);

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>($stack12);

        $stack14 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject X>;

        $stack15 = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.lifecycle.internal.ProjectSegment createProjectBuild(org.apache.maven.project.MavenProject,org.apache.maven.execution.MavenSession,org.apache.maven.lifecycle.internal.TaskSegment)>($stack14, session, segment);

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>($stack15);

        $stack17 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Y>;

        $stack18 = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.lifecycle.internal.ProjectSegment createProjectBuild(org.apache.maven.project.MavenProject,org.apache.maven.execution.MavenSession,org.apache.maven.lifecycle.internal.TaskSegment)>($stack17, session, segment);

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>($stack18);

        $stack20 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Z>;

        $stack21 = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.lifecycle.internal.ProjectSegment createProjectBuild(org.apache.maven.project.MavenProject,org.apache.maven.execution.MavenSession,org.apache.maven.lifecycle.internal.TaskSegment)>($stack20, session, segment);

        interfaceinvoke $stack3.<java.util.List: boolean add(java.lang.Object)>($stack21);

        return $stack3;
    }

    private static org.apache.maven.lifecycle.internal.ProjectSegment createProjectBuild(org.apache.maven.project.MavenProject, org.apache.maven.execution.MavenSession, org.apache.maven.lifecycle.internal.TaskSegment) throws org.apache.maven.plugin.InvalidPluginDescriptorException, org.apache.maven.plugin.version.PluginVersionResolutionException, org.apache.maven.plugin.PluginDescriptorParsingException, org.apache.maven.plugin.prefix.NoPluginFoundForPrefixException, org.apache.maven.plugin.MojoNotFoundException, org.apache.maven.plugin.PluginNotFoundException, org.apache.maven.plugin.PluginResolutionException, org.apache.maven.lifecycle.LifecyclePhaseNotFoundException, org.apache.maven.lifecycle.LifecycleNotFoundException
    {
        org.apache.maven.execution.MavenSession session, session1;
        org.apache.maven.lifecycle.internal.ProjectSegment $stack5;
        org.apache.maven.project.MavenProject project;
        org.apache.maven.lifecycle.internal.TaskSegment taskSegment;

        project := @parameter0: org.apache.maven.project.MavenProject;

        session := @parameter1: org.apache.maven.execution.MavenSession;

        taskSegment := @parameter2: org.apache.maven.lifecycle.internal.TaskSegment;

        session1 = virtualinvoke session.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.MavenSession clone()>();

        $stack5 = new org.apache.maven.lifecycle.internal.ProjectSegment;

        specialinvoke $stack5.<org.apache.maven.lifecycle.internal.ProjectSegment: void <init>(org.apache.maven.project.MavenProject,org.apache.maven.lifecycle.internal.TaskSegment,org.apache.maven.execution.MavenSession)>(project, taskSegment, session1);

        return $stack5;
    }

    private static org.apache.maven.lifecycle.internal.TaskSegment createTaskSegment()
    {
        org.apache.maven.lifecycle.internal.TaskSegment $stack1;
        java.util.List $stack2, $stack5;
        org.apache.maven.lifecycle.internal.GoalTask $stack3, $stack6;

        $stack1 = new org.apache.maven.lifecycle.internal.TaskSegment;

        specialinvoke $stack1.<org.apache.maven.lifecycle.internal.TaskSegment: void <init>(boolean)>(0);

        $stack2 = virtualinvoke $stack1.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $stack3 = new org.apache.maven.lifecycle.internal.GoalTask;

        specialinvoke $stack3.<org.apache.maven.lifecycle.internal.GoalTask: void <init>(java.lang.String)>("t1");

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>($stack3);

        $stack5 = virtualinvoke $stack1.<org.apache.maven.lifecycle.internal.TaskSegment: java.util.List getTasks()>();

        $stack6 = new org.apache.maven.lifecycle.internal.GoalTask;

        specialinvoke $stack6.<org.apache.maven.lifecycle.internal.GoalTask: void <init>(java.lang.String)>("t2");

        interfaceinvoke $stack5.<java.util.List: boolean add(java.lang.Object)>($stack6);

        return $stack1;
    }

    private java.util.List getDependencies()
    {
        ProjectDependencyGraphStub this;
        org.apache.maven.project.MavenProject $stack4, $stack5, $stack8, $stack9, $stack12, $stack13, $stack16, $stack17, $stack20, $stack21, $stack24, $stack25;
        java.util.ArrayList $u0;
        org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency $u1, $u2, $u3, $u4, $u5, $u6;
        org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: ProjectDependencyGraphStub;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $u1 = new org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency;

        $stack5 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B>;

        $stack4 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        $r0 = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub) this;

        specialinvoke $u1.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency: void <init>(org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub,org.apache.maven.project.MavenProject,org.apache.maven.project.MavenProject)>($r0, $stack5, $stack4);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u1);

        $u2 = new org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency;

        $stack9 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject C>;

        $stack8 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        $r1 = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub) this;

        specialinvoke $u2.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency: void <init>(org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub,org.apache.maven.project.MavenProject,org.apache.maven.project.MavenProject)>($r1, $stack9, $stack8);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u2);

        $u3 = new org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency;

        $stack13 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject X>;

        $stack12 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B>;

        $r2 = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub) this;

        specialinvoke $u3.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency: void <init>(org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub,org.apache.maven.project.MavenProject,org.apache.maven.project.MavenProject)>($r2, $stack13, $stack12);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u3);

        $u4 = new org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency;

        $stack17 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject X>;

        $stack16 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject C>;

        $r3 = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub) this;

        specialinvoke $u4.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency: void <init>(org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub,org.apache.maven.project.MavenProject,org.apache.maven.project.MavenProject)>($r3, $stack17, $stack16);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u4);

        $u5 = new org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency;

        $stack21 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Y>;

        $stack20 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B>;

        $r4 = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub) this;

        specialinvoke $u5.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency: void <init>(org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub,org.apache.maven.project.MavenProject,org.apache.maven.project.MavenProject)>($r4, $stack21, $stack20);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u5);

        $u6 = new org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency;

        $stack25 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Z>;

        $stack24 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject C>;

        $r5 = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub) this;

        specialinvoke $u6.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency: void <init>(org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub,org.apache.maven.project.MavenProject,org.apache.maven.project.MavenProject)>($r5, $stack25, $stack24);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u6);

        return $u0;
    }

    public java.util.List getAllProjects()
    {
        org.apache.maven.project.MavenProject[] $stack1;
        org.apache.maven.project.MavenProject $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8;
        java.util.List $stack9;
        ProjectDependencyGraphStub this;

        this := @this: ProjectDependencyGraphStub;

        $stack1 = newarray (org.apache.maven.project.MavenProject)[7];

        $stack2 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        $stack1[0] = $stack2;

        $stack3 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B>;

        $stack1[1] = $stack3;

        $stack4 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject C>;

        $stack1[2] = $stack4;

        $stack5 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject X>;

        $stack1[3] = $stack5;

        $stack6 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Y>;

        $stack1[4] = $stack6;

        $stack7 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Z>;

        $stack1[5] = $stack7;

        $stack8 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject UNKNOWN>;

        $stack1[6] = $stack8;

        $stack9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack1);

        return $stack9;
    }

    public java.util.List getSortedProjects()
    {
        org.apache.maven.project.MavenProject[] $stack1;
        org.apache.maven.project.MavenProject $stack2, $stack3, $stack4, $stack5, $stack6, $stack7;
        java.util.List $stack8;
        ProjectDependencyGraphStub this;

        this := @this: ProjectDependencyGraphStub;

        $stack1 = newarray (org.apache.maven.project.MavenProject)[6];

        $stack2 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        $stack1[0] = $stack2;

        $stack3 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B>;

        $stack1[1] = $stack3;

        $stack4 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject C>;

        $stack1[2] = $stack4;

        $stack5 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject X>;

        $stack1[3] = $stack5;

        $stack6 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Y>;

        $stack1[4] = $stack6;

        $stack7 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Z>;

        $stack1[5] = $stack7;

        $stack8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack1);

        return $stack8;
    }

    public java.util.List getDownstreamProjects(org.apache.maven.project.MavenProject, boolean)
    {
        boolean transitive, $stack9;
        ProjectDependencyGraphStub this;
        java.util.List $stack7;
        java.util.Iterator l4;
        java.lang.Object $stack10;
        org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency dependency;
        org.apache.maven.project.MavenProject project;
        java.lang.RuntimeException $u0;
        java.util.ArrayList $u1;
        org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub $r0;

        this := @this: ProjectDependencyGraphStub;

        project := @parameter0: org.apache.maven.project.MavenProject;

        transitive := @parameter1: boolean;

        if transitive == 0 goto label1;

        $u0 = new java.lang.RuntimeException;

        specialinvoke $u0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented yet");

        throw $u0;

     label1:
        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub) this;

        $stack7 = specialinvoke $r0.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: java.util.List getDependencies()>();

        l4 = interfaceinvoke $stack7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack9 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack10 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        dependency = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency) $stack10;

        virtualinvoke dependency.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency: void addIfDownstream(org.apache.maven.project.MavenProject,java.util.List)>(project, $u1);

        goto label2;

     label3:
        return $u1;
    }

    public java.util.List getUpstreamProjects(org.apache.maven.project.MavenProject, boolean)
    {
        ProjectDependencyGraphStub this;
        java.util.List dependencies;
        java.util.Iterator l5;
        boolean $stack10, transitive;
        java.lang.Object $stack11;
        org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency dependency;
        org.apache.maven.project.MavenProject project;
        java.util.ArrayList $u0;
        org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub $r0;

        this := @this: ProjectDependencyGraphStub;

        project := @parameter0: org.apache.maven.project.MavenProject;

        transitive := @parameter1: boolean;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub) this;

        dependencies = specialinvoke $r0.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: java.util.List getDependencies()>();

        l5 = interfaceinvoke dependencies.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label2;

        $stack11 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        dependency = (org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency) $stack11;

        virtualinvoke dependency.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub$Dependency: void addIfUpstreamOf(org.apache.maven.project.MavenProject,java.util.List)>(project, $u0);

        goto label1;

     label2:
        return $u0;
    }

    public static org.apache.maven.execution.MavenSession getMavenSession(org.apache.maven.project.MavenProject)
    {
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.project.MavenProject mavenProject;

        mavenProject := @parameter0: org.apache.maven.project.MavenProject;

        session = staticinvoke <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.execution.MavenSession getMavenSession()>();

        virtualinvoke session.<org.apache.maven.execution.MavenSession: void setCurrentProject(org.apache.maven.project.MavenProject)>(mavenProject);

        return session;
    }

    public static org.apache.maven.execution.MavenSession getMavenSession()
    {
        java.lang.String[] $stack8;
        java.util.List $stack9, $stack13;
        org.apache.maven.execution.DefaultMavenExecutionResult $u0;
        org.apache.maven.execution.DefaultMavenExecutionRequest $u1;
        org.apache.maven.execution.AbstractExecutionListener $u2;
        org.apache.maven.execution.MavenSession $u3;
        org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub $u4;
        org.apache.maven.execution.MavenExecutionRequest $r0, $r2, $r3, $r4;
        org.apache.maven.execution.ExecutionListener $r1;
        org.apache.maven.execution.MavenExecutionResult $r5;
        org.apache.maven.execution.ProjectDependencyGraph $r6;

        $u0 = new org.apache.maven.execution.DefaultMavenExecutionResult;

        specialinvoke $u0.<org.apache.maven.execution.DefaultMavenExecutionResult: void <init>()>();

        $u1 = new org.apache.maven.execution.DefaultMavenExecutionRequest;

        specialinvoke $u1.<org.apache.maven.execution.DefaultMavenExecutionRequest: void <init>()>();

        $u2 = new org.apache.maven.execution.AbstractExecutionListener;

        specialinvoke $u2.<org.apache.maven.execution.AbstractExecutionListener: void <init>()>();

        $r0 = (org.apache.maven.execution.MavenExecutionRequest) $u1;

        $r1 = (org.apache.maven.execution.ExecutionListener) $u2;

        interfaceinvoke $r0.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setExecutionListener(org.apache.maven.execution.ExecutionListener)>($r1);

        $stack8 = newarray (java.lang.String)[3];

        $stack8[0] = "clean";

        $stack8[1] = "aggr";

        $stack8[2] = "install";

        $stack9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($stack8);

        $r2 = (org.apache.maven.execution.MavenExecutionRequest) $u1;

        interfaceinvoke $r2.<org.apache.maven.execution.MavenExecutionRequest: org.apache.maven.execution.MavenExecutionRequest setGoals(java.util.List)>($stack9);

        $r3 = (org.apache.maven.execution.MavenExecutionRequest) $u1;

        interfaceinvoke $r3.<org.apache.maven.execution.MavenExecutionRequest: void setDegreeOfConcurrency(int)>(1);

        $u3 = new org.apache.maven.execution.MavenSession;

        $r4 = (org.apache.maven.execution.MavenExecutionRequest) $u1;

        $r5 = (org.apache.maven.execution.MavenExecutionResult) $u0;

        specialinvoke $u3.<org.apache.maven.execution.MavenSession: void <init>(org.codehaus.plexus.PlexusContainer,org.eclipse.aether.RepositorySystemSession,org.apache.maven.execution.MavenExecutionRequest,org.apache.maven.execution.MavenExecutionResult)>(null, null, $r4, $r5);

        $u4 = new org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub;

        specialinvoke $u4.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: void <init>()>();

        $r6 = (org.apache.maven.execution.ProjectDependencyGraph) $u4;

        virtualinvoke $u3.<org.apache.maven.execution.MavenSession: void setProjectDependencyGraph(org.apache.maven.execution.ProjectDependencyGraph)>($r6);

        $stack13 = virtualinvoke $u4.<org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: java.util.List getSortedProjects()>();

        virtualinvoke $u3.<org.apache.maven.execution.MavenSession: void setProjects(java.util.List)>($stack13);

        return $u3;
    }

    static void <clinit>()
    {
        org.apache.maven.project.MavenProject $stack0, $stack1, $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack12;

        $stack0 = new org.apache.maven.project.MavenProject;

        specialinvoke $stack0.<org.apache.maven.project.MavenProject: void <init>()>();

        <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A> = $stack0;

        $stack1 = new org.apache.maven.project.MavenProject;

        specialinvoke $stack1.<org.apache.maven.project.MavenProject: void <init>()>();

        <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B> = $stack1;

        $stack2 = new org.apache.maven.project.MavenProject;

        specialinvoke $stack2.<org.apache.maven.project.MavenProject: void <init>()>();

        <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject C> = $stack2;

        $stack3 = new org.apache.maven.project.MavenProject;

        specialinvoke $stack3.<org.apache.maven.project.MavenProject: void <init>()>();

        <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject X> = $stack3;

        $stack4 = new org.apache.maven.project.MavenProject;

        specialinvoke $stack4.<org.apache.maven.project.MavenProject: void <init>()>();

        <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Y> = $stack4;

        $stack5 = new org.apache.maven.project.MavenProject;

        specialinvoke $stack5.<org.apache.maven.project.MavenProject: void <init>()>();

        <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Z> = $stack5;

        $stack6 = new org.apache.maven.project.MavenProject;

        specialinvoke $stack6.<org.apache.maven.project.MavenProject: void <init>()>();

        <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject UNKNOWN> = $stack6;

        $stack7 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject A>;

        virtualinvoke $stack7.<org.apache.maven.project.MavenProject: void setArtifactId(java.lang.String)>("A");

        $stack8 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject B>;

        virtualinvoke $stack8.<org.apache.maven.project.MavenProject: void setArtifactId(java.lang.String)>("B");

        $stack9 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject C>;

        virtualinvoke $stack9.<org.apache.maven.project.MavenProject: void setArtifactId(java.lang.String)>("C");

        $stack10 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject X>;

        virtualinvoke $stack10.<org.apache.maven.project.MavenProject: void setArtifactId(java.lang.String)>("X");

        $stack11 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Y>;

        virtualinvoke $stack11.<org.apache.maven.project.MavenProject: void setArtifactId(java.lang.String)>("Y");

        $stack12 = <org.apache.maven.lifecycle.internal.stub.ProjectDependencyGraphStub: org.apache.maven.project.MavenProject Z>;

        virtualinvoke $stack12.<org.apache.maven.project.MavenProject: void setArtifactId(java.lang.String)>("Z");

        return;
    }
}
