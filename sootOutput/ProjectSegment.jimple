public final class ProjectSegment extends java.lang.Object
{
    private final org.apache.maven.project.MavenProject project;
    private final org.apache.maven.lifecycle.internal.TaskSegment taskSegment;
    private final org.apache.maven.execution.MavenSession session;
    private final java.util.List nonTransitiveUpstreamProjects;
    private final java.util.List transitiveUpstreamProjects;

    public void <init>(org.apache.maven.project.MavenProject, org.apache.maven.lifecycle.internal.TaskSegment, org.apache.maven.execution.MavenSession)
    {
        ProjectSegment this;
        org.apache.maven.project.MavenProject project, $stack7, $stack9;
        org.apache.maven.lifecycle.internal.TaskSegment taskSegment;
        org.apache.maven.execution.MavenSession copiedSession, $stack5;
        org.apache.maven.execution.ProjectDependencyGraph dependencyGraph;
        java.util.List $stack8, $stack10;
        org.apache.maven.lifecycle.internal.ProjectSegment $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: ProjectSegment;

        project := @parameter0: org.apache.maven.project.MavenProject;

        taskSegment := @parameter1: org.apache.maven.lifecycle.internal.TaskSegment;

        copiedSession := @parameter2: org.apache.maven.execution.MavenSession;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $r0.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject project> = project;

        $r1 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $r1.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.lifecycle.internal.TaskSegment taskSegment> = taskSegment;

        $r2 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $r2.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.execution.MavenSession session> = copiedSession;

        $r3 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack5 = virtualinvoke $r3.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.execution.MavenSession getSession()>();

        dependencyGraph = virtualinvoke $stack5.<org.apache.maven.execution.MavenSession: org.apache.maven.execution.ProjectDependencyGraph getProjectDependencyGraph()>();

        $r4 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack7 = virtualinvoke $r4.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        $stack8 = interfaceinvoke dependencyGraph.<org.apache.maven.execution.ProjectDependencyGraph: java.util.List getUpstreamProjects(org.apache.maven.project.MavenProject,boolean)>($stack7, 0);

        $r5 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $r5.<org.apache.maven.lifecycle.internal.ProjectSegment: java.util.List nonTransitiveUpstreamProjects> = $stack8;

        $r6 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack9 = virtualinvoke $r6.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        $stack10 = interfaceinvoke dependencyGraph.<org.apache.maven.execution.ProjectDependencyGraph: java.util.List getUpstreamProjects(org.apache.maven.project.MavenProject,boolean)>($stack9, 1);

        $r7 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $r7.<org.apache.maven.lifecycle.internal.ProjectSegment: java.util.List transitiveUpstreamProjects> = $stack10;

        return;
    }

    public org.apache.maven.execution.MavenSession getSession()
    {
        ProjectSegment this;
        org.apache.maven.execution.MavenSession $stack1;
        org.apache.maven.lifecycle.internal.ProjectSegment $r0;

        this := @this: ProjectSegment;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.execution.MavenSession session>;

        return $stack1;
    }

    public org.apache.maven.project.MavenProject getProject()
    {
        ProjectSegment this;
        org.apache.maven.project.MavenProject $stack1;
        org.apache.maven.lifecycle.internal.ProjectSegment $r0;

        this := @this: ProjectSegment;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject project>;

        return $stack1;
    }

    public org.apache.maven.lifecycle.internal.TaskSegment getTaskSegment()
    {
        ProjectSegment this;
        org.apache.maven.lifecycle.internal.TaskSegment $stack1;
        org.apache.maven.lifecycle.internal.ProjectSegment $r0;

        this := @this: ProjectSegment;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.lifecycle.internal.TaskSegment taskSegment>;

        return $stack1;
    }

    public java.util.List getImmediateUpstreamProjects()
    {
        ProjectSegment this;
        java.util.List $stack1;
        org.apache.maven.lifecycle.internal.ProjectSegment $r0;

        this := @this: ProjectSegment;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ProjectSegment: java.util.List nonTransitiveUpstreamProjects>;

        return $stack1;
    }

    public java.util.List getTransitiveUpstreamProjects()
    {
        ProjectSegment this;
        java.util.List $stack1;
        org.apache.maven.lifecycle.internal.ProjectSegment $r0;

        this := @this: ProjectSegment;

        $r0 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.ProjectSegment: java.util.List transitiveUpstreamProjects>;

        return $stack1;
    }

    public java.lang.String toString()
    {
        ProjectSegment this;
        org.apache.maven.project.MavenProject $stack2;
        java.lang.String $stack3, $stack8;
        java.lang.StringBuilder $stack4, $stack5, $stack7, $u0;
        org.apache.maven.lifecycle.internal.TaskSegment $stack6;
        org.apache.maven.lifecycle.internal.ProjectSegment $r0, $r1;

        this := @this: ProjectSegment;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        $stack3 = virtualinvoke $stack2.<org.apache.maven.project.MavenProject: java.lang.String getId()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r1 = (org.apache.maven.lifecycle.internal.ProjectSegment) this;

        $stack6 = virtualinvoke $r1.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.lifecycle.internal.TaskSegment getTaskSegment()>();

        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack8;
    }
}
