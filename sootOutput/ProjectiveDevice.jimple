public class ProjectiveDevice extends java.lang.Object
{
    private org.bytedeco.javacv.ProjectiveDevice$Settings settings;
    public int imageWidth;
    public int imageHeight;
    public org.bytedeco.opencv.opencv_core.CvMat cameraMatrix;
    public org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs;
    public org.bytedeco.opencv.opencv_core.CvMat extrParams;
    public org.bytedeco.opencv.opencv_core.CvMat reprojErrs;
    public double avgReprojErr;
    public double maxReprojErr;
    public org.bytedeco.opencv.opencv_core.CvMat R;
    public org.bytedeco.opencv.opencv_core.CvMat T;
    public org.bytedeco.opencv.opencv_core.CvMat E;
    public org.bytedeco.opencv.opencv_core.CvMat F;
    public double avgEpipolarErr;
    public double maxEpipolarErr;
    public java.lang.String colorOrder;
    public org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix;
    public org.bytedeco.opencv.opencv_core.CvMat additiveLight;
    public double avgColorErr;
    public double colorR2;
    private boolean fixedPointMaps;
    private int mapsPyramidLevel;
    private org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1;
    private org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2;
    private org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1;
    private org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2;
    private org.bytedeco.opencv.opencv_core.IplImage tempImage;
    private static java.lang.ThreadLocal temp3x3;
    private static java.lang.ThreadLocal B4x3;
    private static java.lang.ThreadLocal a4x1;
    private static java.lang.ThreadLocal t3x1;
    private static java.lang.ThreadLocal relativeR3x3;
    private static java.lang.ThreadLocal relativeT3x1;
    private static java.lang.ThreadLocal R13x3;
    private static java.lang.ThreadLocal P13x4;
    private static java.lang.ThreadLocal R23x3;
    private static java.lang.ThreadLocal P23x4;
    static final boolean $assertionsDisabled;

    public void <init>(java.lang.String)
    {
        ProjectiveDevice this;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack3, $stack4, $stack5, $stack6;
        java.lang.String name;
        org.bytedeco.javacv.ProjectiveDevice$Settings $u0;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        this := @this: ProjectiveDevice;

        name := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r0.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth> = 0;

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r1.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight> = 0;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix> = null;

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs> = null;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat extrParams> = null;

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r5.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat reprojErrs> = null;

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r6.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R> = null;

        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r7.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T> = null;

        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r8.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat E> = null;

        $r9 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r9.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat F> = null;

        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r10.<org.bytedeco.javacv.ProjectiveDevice: java.lang.String colorOrder> = "BGR";

        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r11.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix> = null;

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r12.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat additiveLight> = null;

        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r13.<org.bytedeco.javacv.ProjectiveDevice: double colorR2> = 1.0;

        $r14 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r14.<org.bytedeco.javacv.ProjectiveDevice: boolean fixedPointMaps> = 0;

        $r15 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r15.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel> = 0;

        $stack3 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[1];

        $stack3[0] = null;

        $r16 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r16.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1> = $stack3;

        $stack4 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[1];

        $stack4[0] = null;

        $r17 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r17.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2> = $stack4;

        $stack5 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[1];

        $stack5[0] = null;

        $r18 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r18.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1> = $stack5;

        $stack6 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[1];

        $stack6[0] = null;

        $r19 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r19.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2> = $stack6;

        $r20 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r20.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage> = null;

        $u0 = new org.bytedeco.javacv.ProjectiveDevice$Settings;

        specialinvoke $u0.<org.bytedeco.javacv.ProjectiveDevice$Settings: void <init>()>();

        $u0.<org.bytedeco.javacv.ProjectiveDevice$Settings: java.lang.String name> = name;

        $r21 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r21.<org.bytedeco.javacv.ProjectiveDevice: void setSettings(org.bytedeco.javacv.ProjectiveDevice$Settings)>($u0);

        return;
    }

    public void <init>(java.lang.String, java.io.File) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        ProjectiveDevice this;
        java.lang.String name;
        java.io.File file;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1;

        this := @this: ProjectiveDevice;

        name := @parameter0: java.lang.String;

        file := @parameter1: java.io.File;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void <init>(java.lang.String)>(name);

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r1.<org.bytedeco.javacv.ProjectiveDevice: void readParameters(java.io.File)>(file);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        ProjectiveDevice this;
        java.lang.String name, filename;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1;

        this := @this: ProjectiveDevice;

        name := @parameter0: java.lang.String;

        filename := @parameter1: java.lang.String;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void <init>(java.lang.String)>(name);

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r1.<org.bytedeco.javacv.ProjectiveDevice: void readParameters(java.lang.String)>(filename);

        return;
    }

    public void <init>(java.lang.String, org.bytedeco.opencv.opencv_core.FileStorage) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        ProjectiveDevice this;
        java.lang.String name;
        org.bytedeco.opencv.opencv_core.FileStorage fs;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1;

        this := @this: ProjectiveDevice;

        name := @parameter0: java.lang.String;

        fs := @parameter1: org.bytedeco.opencv.opencv_core.FileStorage;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void <init>(java.lang.String)>(name);

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r1.<org.bytedeco.javacv.ProjectiveDevice: void readParameters(org.bytedeco.opencv.opencv_core.FileStorage)>(fs);

        return;
    }

    public void <init>(org.bytedeco.javacv.ProjectiveDevice$Settings) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        ProjectiveDevice this;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack2, $stack3, $stack4, $stack5;
        org.bytedeco.javacv.ProjectiveDevice$Settings settings;
        boolean $stack6;
        org.bytedeco.javacv.ProjectiveDevice$CalibratedSettings $stack7;
        java.io.File $stack8;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        this := @this: ProjectiveDevice;

        settings := @parameter0: org.bytedeco.javacv.ProjectiveDevice$Settings;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r0.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth> = 0;

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r1.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight> = 0;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix> = null;

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs> = null;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat extrParams> = null;

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r5.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat reprojErrs> = null;

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r6.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R> = null;

        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r7.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T> = null;

        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r8.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat E> = null;

        $r9 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r9.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat F> = null;

        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r10.<org.bytedeco.javacv.ProjectiveDevice: java.lang.String colorOrder> = "BGR";

        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r11.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix> = null;

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r12.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat additiveLight> = null;

        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r13.<org.bytedeco.javacv.ProjectiveDevice: double colorR2> = 1.0;

        $r14 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r14.<org.bytedeco.javacv.ProjectiveDevice: boolean fixedPointMaps> = 0;

        $r15 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r15.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel> = 0;

        $stack2 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[1];

        $stack2[0] = null;

        $r16 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r16.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1> = $stack2;

        $stack3 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[1];

        $stack3[0] = null;

        $r17 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r17.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2> = $stack3;

        $stack4 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[1];

        $stack4[0] = null;

        $r18 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r18.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1> = $stack4;

        $stack5 = newarray (org.bytedeco.opencv.opencv_core.IplImage)[1];

        $stack5[0] = null;

        $r19 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r19.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2> = $stack5;

        $r20 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r20.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage> = null;

        $r21 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r21.<org.bytedeco.javacv.ProjectiveDevice: void setSettings(org.bytedeco.javacv.ProjectiveDevice$Settings)>(settings);

        $stack6 = settings instanceof org.bytedeco.javacv.ProjectiveDevice$CalibratedSettings;

        if $stack6 == 0 goto label1;

        $stack7 = (org.bytedeco.javacv.ProjectiveDevice$CalibratedSettings) settings;

        $stack8 = $stack7.<org.bytedeco.javacv.ProjectiveDevice$CalibratedSettings: java.io.File parametersFile>;

        $r22 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r22.<org.bytedeco.javacv.ProjectiveDevice: void readParameters(java.io.File)>($stack8);

     label1:
        return;
    }

    public org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()
    {
        ProjectiveDevice this;
        org.bytedeco.javacv.ProjectiveDevice$Settings $stack1;
        org.bytedeco.javacv.ProjectiveDevice $r0;

        this := @this: ProjectiveDevice;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings settings>;

        return $stack1;
    }

    public void setSettings(org.bytedeco.javacv.ProjectiveDevice$Settings)
    {
        ProjectiveDevice this;
        org.bytedeco.javacv.ProjectiveDevice$Settings settings;
        org.bytedeco.javacv.ProjectiveDevice $r0;

        this := @this: ProjectiveDevice;

        settings := @parameter0: org.bytedeco.javacv.ProjectiveDevice$Settings;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r0.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings settings> = settings;

        return;
    }

    public void rescale(int, int)
    {
        int imageWidth, $stack8, $stack10, imageHeight, $stack13, p, $stack56;
        ProjectiveDevice this;
        org.bytedeco.opencv.opencv_core.CvMat $stack9, $stack16, $stack17, $stack22, $stack23, $stack28, $stack29, $stack34, $stack35, $stack40, $stack41, $stack46, $stack47;
        double $stack11, $stack12, sx, $stack14, $stack15, sy, $stack19, $stack20, $stack25, $stack26, $stack31, $stack32, $stack37, $stack38, $stack43, $stack44, $stack49, $stack50;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack52, $stack53, $stack54, $stack55;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;

        this := @this: ProjectiveDevice;

        imageWidth := @parameter0: int;

        imageHeight := @parameter1: int;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack8 = $r0.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        if imageWidth != $stack8 goto label1;

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack56 = $r1.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        if imageHeight == $stack56 goto label2;

     label1:
        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack9 = $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        if $stack9 == null goto label2;

        $stack12 = (double) imageWidth;

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack10 = $r3.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $stack11 = (double) $stack10;

        sx = $stack12 / $stack11;

        $stack15 = (double) imageHeight;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack13 = $r4.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack14 = (double) $stack13;

        sy = $stack15 / $stack14;

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack17 = $r5.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack16 = $r6.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack19 = virtualinvoke $stack16.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack20 = sx * $stack19;

        virtualinvoke $stack17.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(0, $stack20);

        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack23 = $r7.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack22 = $r8.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack25 = virtualinvoke $stack22.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack26 = sx * $stack25;

        virtualinvoke $stack23.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(1, $stack26);

        $r9 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack29 = $r9.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack28 = $r10.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack31 = virtualinvoke $stack28.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack32 = sx * $stack31;

        virtualinvoke $stack29.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(2, $stack32);

        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack35 = $r11.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack34 = $r12.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack37 = virtualinvoke $stack34.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(3);

        $stack38 = sy * $stack37;

        virtualinvoke $stack35.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(3, $stack38);

        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack41 = $r13.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r14 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack40 = $r14.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack43 = virtualinvoke $stack40.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(4);

        $stack44 = sy * $stack43;

        virtualinvoke $stack41.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(4, $stack44);

        $r15 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack47 = $r15.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r16 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack46 = $r16.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack49 = virtualinvoke $stack46.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(5);

        $stack50 = sy * $stack49;

        virtualinvoke $stack47.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(5, $stack50);

        $r17 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r17.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth> = imageWidth;

        $r18 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r18.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight> = imageHeight;

        $r19 = (org.bytedeco.javacv.ProjectiveDevice) this;

        p = $r19.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $r20 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack55 = $r20.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $r21 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack54 = $r21.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $r22 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack53 = $r22.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $r23 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack52 = $r23.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $stack52[p] = null;

        $stack53[p] = null;

        $stack54[p] = null;

        $stack55[p] = null;

     label2:
        return;
    }

    public int[] getRGBColorOrder()
    {
        int[] order;
        ProjectiveDevice this;
        java.lang.String $stack3;
        char $stack4, $stack5;
        boolean $stack8;
        int i;
        java.lang.AssertionError $u0;
        org.bytedeco.javacv.ProjectiveDevice $r0;

        this := @this: ProjectiveDevice;

        order = newarray (int)[3];

        i = 0;

     label1:
        if i >= 3 goto label7;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack3 = $r0.<org.bytedeco.javacv.ProjectiveDevice: java.lang.String colorOrder>;

        $stack4 = virtualinvoke $stack3.<java.lang.String: char charAt(int)>(i);

        $stack5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($stack4);

        lookupswitch($stack5)
        {
            case 66: goto label2;
            case 71: goto label3;
            case 82: goto label4;
            default: goto label5;
        };

     label2:
        order[i] = 2;

        goto label6;

     label3:
        order[i] = 1;

        goto label6;

     label4:
        order[i] = 0;

        goto label6;

     label5:
        $stack8 = <org.bytedeco.javacv.ProjectiveDevice: boolean $assertionsDisabled>;

        if $stack8 != 0 goto label6;

        $u0 = new java.lang.AssertionError;

        specialinvoke $u0.<java.lang.AssertionError: void <init>()>();

        throw $u0;

     label6:
        i = i + 1;

        goto label1;

     label7:
        return order;
    }

    public static double[] undistort(double[], double[])
    {
        double[] k, xd, xu;
        double k1, k2, k3, p1, p2, xo, yo, $stack56, $stack57, r_2, $stack58, $stack59, $stack60, $stack61, $stack62, $stack63, $stack64, $stack65, k_radial, $stack66, $stack67, $stack68, $stack69, $stack70, $stack71, $stack72, delta_x, $stack73, $stack74, $stack75, $stack76, $stack77, $stack78, $stack79, delta_y, $stack80, $stack81, $stack100, $stack97, $stack94, $stack84, x, y;
        int $stack37, $stack38, $stack39, $stack40, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52, i, $stack42, $stack43, j;
        java.lang.Object $stack41;

        xd := @parameter0: double[];

        k := @parameter1: double[];

        k1 = k[0];

        k2 = k[1];

        $stack37 = lengthof k;

        if $stack37 <= 4 goto label1;

        $stack100 = k[4];

        goto label2;

     label1:
        $stack100 = 0.0;

     label2:
        k3 = $stack100;

        $stack38 = lengthof k;

        if $stack38 <= 5 goto label3;

        $stack97 = k[5];

        goto label3;

     label3:
        $stack39 = lengthof k;

        if $stack39 <= 6 goto label4;

        $stack94 = k[6];

        goto label4;

     label4:
        $stack40 = lengthof k;

        if $stack40 <= 7 goto label5;

        $stack84 = k[7];

        goto label5;

     label5:
        p1 = k[2];

        p2 = k[3];

        $stack41 = virtualinvoke xd.<java.lang.Object: java.lang.Object clone()>();

        xu = (double[]) $stack41;

        i = 0;

     label6:
        $stack42 = lengthof xd;

        $stack43 = $stack42 / 2;

        if i >= $stack43 goto label9;

        $stack44 = i * 2;

        x = xu[$stack44];

        $stack45 = i * 2;

        $stack46 = $stack45 + 1;

        y = xu[$stack46];

        $stack47 = i * 2;

        xo = xd[$stack47];

        $stack48 = i * 2;

        $stack49 = $stack48 + 1;

        yo = xd[$stack49];

        j = 0;

     label7:
        if j >= 20 goto label8;

        $stack57 = x * x;

        $stack56 = y * y;

        r_2 = $stack57 + $stack56;

        $stack58 = k1 * r_2;

        $stack61 = 1.0 + $stack58;

        $stack59 = k2 * r_2;

        $stack60 = $stack59 * r_2;

        $stack65 = $stack61 + $stack60;

        $stack62 = k3 * r_2;

        $stack63 = $stack62 * r_2;

        $stack64 = $stack63 * r_2;

        k_radial = $stack65 + $stack64;

        $stack66 = 2.0 * p1;

        $stack67 = $stack66 * x;

        $stack72 = $stack67 * y;

        $stack68 = 2.0 * x;

        $stack69 = $stack68 * x;

        $stack70 = r_2 + $stack69;

        $stack71 = p2 * $stack70;

        delta_x = $stack72 + $stack71;

        $stack73 = 2.0 * y;

        $stack74 = $stack73 * y;

        $stack75 = r_2 + $stack74;

        $stack79 = p1 * $stack75;

        $stack76 = 2.0 * p2;

        $stack77 = $stack76 * x;

        $stack78 = $stack77 * y;

        delta_y = $stack79 + $stack78;

        $stack80 = xo - delta_x;

        x = $stack80 / k_radial;

        $stack81 = yo - delta_y;

        y = $stack81 / k_radial;

        j = j + 1;

        goto label7;

     label8:
        $stack50 = i * 2;

        xu[$stack50] = x;

        $stack51 = i * 2;

        $stack52 = $stack51 + 1;

        xu[$stack52] = y;

        i = i + 1;

        goto label6;

     label9:
        return xu;
    }

    public transient double[] undistort(double[])
    {
        double[] x, xn, $stack7, xu, $stack10;
        ProjectiveDevice this;
        org.bytedeco.opencv.opencv_core.CvMat $stack4, $stack6, $stack9;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2;

        this := @this: ProjectiveDevice;

        x := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack4 = $r0.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        xn = staticinvoke <org.bytedeco.javacv.ProjectiveDevice: double[] normalize(double[],org.bytedeco.opencv.opencv_core.CvMat)>(x, $stack4);

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack6 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs>;

        $stack7 = virtualinvoke $stack6.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        xu = staticinvoke <org.bytedeco.javacv.ProjectiveDevice: double[] undistort(double[],double[])>(xn, $stack7);

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack9 = $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack10 = staticinvoke <org.bytedeco.javacv.ProjectiveDevice: double[] unnormalize(double[],org.bytedeco.opencv.opencv_core.CvMat)>(xu, $stack9);

        return $stack10;
    }

    public static double[] distort(double[], double[])
    {
        double[] k, xu, xd;
        double k1, k2, k3, p1, p2, x, y, $stack42, $stack43, r_2, $stack44, $stack45, $stack46, $stack47, $stack48, $stack49, $stack50, $stack51, k_radial, $stack52, $stack53, $stack54, $stack55, $stack56, $stack57, $stack58, delta_x, $stack59, $stack60, $stack61, $stack62, $stack63, $stack64, $stack65, delta_y, $stack66, $stack67, $stack70, $stack71, $stack92, $stack89, $stack86, $stack76;
        int $stack32, $stack33, $stack34, $stack35, $stack39, $stack40, $stack41, $stack68, $stack69, $stack72, i, $stack37, $stack38;
        java.lang.Object $stack36;

        xu := @parameter0: double[];

        k := @parameter1: double[];

        k1 = k[0];

        k2 = k[1];

        $stack32 = lengthof k;

        if $stack32 <= 4 goto label1;

        $stack92 = k[4];

        goto label2;

     label1:
        $stack92 = 0.0;

     label2:
        k3 = $stack92;

        $stack33 = lengthof k;

        if $stack33 <= 5 goto label3;

        $stack89 = k[5];

        goto label3;

     label3:
        $stack34 = lengthof k;

        if $stack34 <= 6 goto label4;

        $stack86 = k[6];

        goto label4;

     label4:
        $stack35 = lengthof k;

        if $stack35 <= 7 goto label5;

        $stack76 = k[7];

        goto label5;

     label5:
        p1 = k[2];

        p2 = k[3];

        $stack36 = virtualinvoke xu.<java.lang.Object: java.lang.Object clone()>();

        xd = (double[]) $stack36;

        i = 0;

     label6:
        $stack37 = lengthof xu;

        $stack38 = $stack37 / 2;

        if i >= $stack38 goto label7;

        $stack39 = i * 2;

        x = xu[$stack39];

        $stack40 = i * 2;

        $stack41 = $stack40 + 1;

        y = xu[$stack41];

        $stack43 = x * x;

        $stack42 = y * y;

        r_2 = $stack43 + $stack42;

        $stack44 = k1 * r_2;

        $stack47 = 1.0 + $stack44;

        $stack45 = k2 * r_2;

        $stack46 = $stack45 * r_2;

        $stack51 = $stack47 + $stack46;

        $stack48 = k3 * r_2;

        $stack49 = $stack48 * r_2;

        $stack50 = $stack49 * r_2;

        k_radial = $stack51 + $stack50;

        $stack52 = 2.0 * p1;

        $stack53 = $stack52 * x;

        $stack58 = $stack53 * y;

        $stack54 = 2.0 * x;

        $stack55 = $stack54 * x;

        $stack56 = r_2 + $stack55;

        $stack57 = p2 * $stack56;

        delta_x = $stack58 + $stack57;

        $stack59 = 2.0 * y;

        $stack60 = $stack59 * y;

        $stack61 = r_2 + $stack60;

        $stack65 = p1 * $stack61;

        $stack62 = 2.0 * p2;

        $stack63 = $stack62 * x;

        $stack64 = $stack63 * y;

        delta_y = $stack65 + $stack64;

        $stack68 = i * 2;

        $stack66 = x * k_radial;

        $stack67 = $stack66 + delta_x;

        xd[$stack68] = $stack67;

        $stack69 = i * 2;

        $stack72 = $stack69 + 1;

        $stack70 = y * k_radial;

        $stack71 = $stack70 + delta_y;

        xd[$stack72] = $stack71;

        i = i + 1;

        goto label6;

     label7:
        return xd;
    }

    public transient double[] distort(double[])
    {
        double[] x, xn, $stack7, xd, $stack10;
        ProjectiveDevice this;
        org.bytedeco.opencv.opencv_core.CvMat $stack4, $stack6, $stack9;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2;

        this := @this: ProjectiveDevice;

        x := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack4 = $r0.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        xn = staticinvoke <org.bytedeco.javacv.ProjectiveDevice: double[] normalize(double[],org.bytedeco.opencv.opencv_core.CvMat)>(x, $stack4);

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack6 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs>;

        $stack7 = virtualinvoke $stack6.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        xd = staticinvoke <org.bytedeco.javacv.ProjectiveDevice: double[] distort(double[],double[])>(xn, $stack7);

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack9 = $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack10 = staticinvoke <org.bytedeco.javacv.ProjectiveDevice: double[] unnormalize(double[],org.bytedeco.opencv.opencv_core.CvMat)>(xd, $stack9);

        return $stack10;
    }

    public static double[] normalize(double[], org.bytedeco.opencv.opencv_core.CvMat)
    {
        double[] xu, xn;
        java.lang.Object $stack14;
        org.bytedeco.opencv.opencv_core.CvMat K;
        double $stack15, $stack16, fx, $stack17, $stack18, fy, $stack19, $stack20, dx, $stack21, $stack22, dy, $stack23, $stack24, s, $stack28, $stack29, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, $stack43, $stack44, $stack45;
        int $stack25, $stack26, $stack27, $stack30, $stack31, $stack39, $stack40, $stack41, $stack42, $stack46, i;

        xu := @parameter0: double[];

        K := @parameter1: org.bytedeco.opencv.opencv_core.CvMat;

        $stack14 = virtualinvoke xu.<java.lang.Object: java.lang.Object clone()>();

        xn = (double[]) $stack14;

        $stack15 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack16 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        fx = $stack15 / $stack16;

        $stack17 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(4);

        $stack18 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        fy = $stack17 / $stack18;

        $stack19 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack20 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        dx = $stack19 / $stack20;

        $stack21 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(5);

        $stack22 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        dy = $stack21 / $stack22;

        $stack23 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack24 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        s = $stack23 / $stack24;

        i = 0;

     label1:
        $stack25 = lengthof xu;

        $stack26 = $stack25 / 2;

        if i >= $stack26 goto label2;

        $stack39 = i * 2;

        $stack27 = i * 2;

        $stack28 = xu[$stack27];

        $stack29 = $stack28 - dx;

        $stack37 = $stack29 / fx;

        $stack30 = i * 2;

        $stack31 = $stack30 + 1;

        $stack32 = xu[$stack31];

        $stack33 = $stack32 + dy;

        $stack35 = s * $stack33;

        $stack34 = fx * fy;

        $stack36 = $stack35 / $stack34;

        $stack38 = $stack37 - $stack36;

        xn[$stack39] = $stack38;

        $stack40 = i * 2;

        $stack46 = $stack40 + 1;

        $stack41 = i * 2;

        $stack42 = $stack41 + 1;

        $stack43 = xu[$stack42];

        $stack44 = $stack43 - dy;

        $stack45 = $stack44 / fy;

        xn[$stack46] = $stack45;

        i = i + 1;

        goto label1;

     label2:
        return xn;
    }

    public static double[] unnormalize(double[], org.bytedeco.opencv.opencv_core.CvMat)
    {
        double[] xn, xu;
        java.lang.Object $stack14;
        org.bytedeco.opencv.opencv_core.CvMat K;
        double $stack15, $stack16, fx, $stack17, $stack18, fy, $stack19, $stack20, dx, $stack21, $stack22, dy, $stack23, $stack24, s, $stack28, $stack29, $stack32, $stack33, $stack34, $stack35, $stack40, $stack41, $stack42;
        int $stack25, $stack26, $stack27, $stack30, $stack31, $stack36, $stack37, $stack38, $stack39, $stack43, i;

        xn := @parameter0: double[];

        K := @parameter1: org.bytedeco.opencv.opencv_core.CvMat;

        $stack14 = virtualinvoke xn.<java.lang.Object: java.lang.Object clone()>();

        xu = (double[]) $stack14;

        $stack15 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack16 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        fx = $stack15 / $stack16;

        $stack17 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(4);

        $stack18 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        fy = $stack17 / $stack18;

        $stack19 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack20 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        dx = $stack19 / $stack20;

        $stack21 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(5);

        $stack22 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        dy = $stack21 / $stack22;

        $stack23 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack24 = virtualinvoke K.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        s = $stack23 / $stack24;

        i = 0;

     label1:
        $stack25 = lengthof xn;

        $stack26 = $stack25 / 2;

        if i >= $stack26 goto label2;

        $stack36 = i * 2;

        $stack27 = i * 2;

        $stack28 = xn[$stack27];

        $stack29 = fx * $stack28;

        $stack34 = $stack29 + dx;

        $stack30 = i * 2;

        $stack31 = $stack30 + 1;

        $stack32 = xn[$stack31];

        $stack33 = s * $stack32;

        $stack35 = $stack34 + $stack33;

        xu[$stack36] = $stack35;

        $stack37 = i * 2;

        $stack43 = $stack37 + 1;

        $stack38 = i * 2;

        $stack39 = $stack38 + 1;

        $stack40 = xn[$stack39];

        $stack41 = fy * $stack40;

        $stack42 = $stack41 + dy;

        xu[$stack43] = $stack42;

        i = i + 1;

        goto label1;

     label2:
        return xu;
    }

    public boolean isFixedPointMaps()
    {
        ProjectiveDevice this;
        boolean $stack1;
        org.bytedeco.javacv.ProjectiveDevice $r0;

        this := @this: ProjectiveDevice;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveDevice: boolean fixedPointMaps>;

        return $stack1;
    }

    public void setFixedPointMaps(boolean)
    {
        ProjectiveDevice this;
        boolean fixedPointMaps, $stack3;
        int p;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack4, $stack5, $stack6, $stack7;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: ProjectiveDevice;

        fixedPointMaps := @parameter0: boolean;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack3 = $r0.<org.bytedeco.javacv.ProjectiveDevice: boolean fixedPointMaps>;

        if $stack3 == fixedPointMaps goto label1;

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r1.<org.bytedeco.javacv.ProjectiveDevice: boolean fixedPointMaps> = fixedPointMaps;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        p = $r2.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack7 = $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack6 = $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack5 = $r5.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack4 = $r6.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $stack4[p] = null;

        $stack5[p] = null;

        $stack6[p] = null;

        $stack7[p] = null;

     label1:
        return;
    }

    public int getMapsPyramidLevel()
    {
        ProjectiveDevice this;
        int $stack1;
        org.bytedeco.javacv.ProjectiveDevice $r0;

        this := @this: ProjectiveDevice;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        return $stack1;
    }

    public void setMapsPyramidLevel(int)
    {
        ProjectiveDevice this;
        int mapsPyramidLevel, $stack3, $stack5, $stack23, $stack41, $stack43, $stack6, $stack10, $stack14, $stack18;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack4, $stack22, $stack40, $stack42, $stack7, $stack9, $stack11, $stack13, $stack15, $stack17, $stack19, $stack21;
        java.lang.Object[] $stack8, $stack12, $stack16, $stack20;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: ProjectiveDevice;

        mapsPyramidLevel := @parameter0: int;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack3 = $r0.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        if $stack3 == mapsPyramidLevel goto label2;

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r1.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel> = mapsPyramidLevel;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack4 = $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $stack5 = lengthof $stack4;

        if mapsPyramidLevel >= $stack5 goto label1;

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack22 = $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $stack23 = lengthof $stack22;

        if mapsPyramidLevel >= $stack23 goto label1;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack40 = $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $stack41 = lengthof $stack40;

        if mapsPyramidLevel >= $stack41 goto label1;

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack42 = $r5.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $stack43 = lengthof $stack42;

        if mapsPyramidLevel < $stack43 goto label2;

     label1:
        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack7 = $r6.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $stack6 = mapsPyramidLevel + 1;

        $stack8 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($stack7, $stack6);

        $stack9 = (org.bytedeco.opencv.opencv_core.IplImage[]) $stack8;

        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r7.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1> = $stack9;

        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack11 = $r8.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $stack10 = mapsPyramidLevel + 1;

        $stack12 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($stack11, $stack10);

        $stack13 = (org.bytedeco.opencv.opencv_core.IplImage[]) $stack12;

        $r9 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r9.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2> = $stack13;

        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack15 = $r10.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $stack14 = mapsPyramidLevel + 1;

        $stack16 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($stack15, $stack14);

        $stack17 = (org.bytedeco.opencv.opencv_core.IplImage[]) $stack16;

        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r11.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1> = $stack17;

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack19 = $r12.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $stack18 = mapsPyramidLevel + 1;

        $stack20 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($stack19, $stack18);

        $stack21 = (org.bytedeco.opencv.opencv_core.IplImage[]) $stack20;

        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r13.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2> = $stack21;

     label2:
        return;
    }

    private void initUndistortMaps()
    {
        ProjectiveDevice this;
        int p, $stack12, $stack13, $stack16, $stack17, $stack32, $stack33, $stack36, w, $stack37, h, $stack39, $stack40, $stack43, $stack44, $stack50, $stack51, $stack54, $stack55;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack9, $stack14, $stack18, $stack22, $stack25, $stack34, $stack35, $stack38, $stack42, $stack46, $stack48, $stack52, $stack56, $stack71;
        org.bytedeco.opencv.opencv_core.IplImage $stack10, $stack15, $stack19, $stack23, $stack26, map1, map2, $stack41, $stack45, $stack47, $stack49, $stack53, $stack57, $stack72;
        boolean $stack11;
        org.bytedeco.opencv.opencv_core.CvMat $stack20, $stack28;
        org.bytedeco.opencv.opencv_core.Mat A, m1, m2, $stack29, $u0;
        org.bytedeco.opencv.opencv_core.Size $stack31;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r20, $r22, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r34;
        org.bytedeco.opencv.opencv_core.CvArr $r17, $r19, $r21, $r23, $r32, $r33, $r35, $r36;

        this := @this: ProjectiveDevice;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        p = $r0.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack9 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $stack10 = $stack9[p];

        if $stack10 == null goto label1;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack71 = $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $stack72 = $stack71[p];

        if $stack72 != null goto label4;

     label1:
        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack11 = $r3.<org.bytedeco.javacv.ProjectiveDevice: boolean fixedPointMaps>;

        if $stack11 == 0 goto label2;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack52 = $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack51 = $r5.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack50 = $r6.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack53 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack51, $stack50, -2147483632, 2);

        $stack52[p] = $stack53;

        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack56 = $r7.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack55 = $r8.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r9 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack54 = $r9.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack57 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack55, $stack54, 16, 1);

        $stack56[p] = $stack57;

        goto label3;

     label2:
        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack14 = $r10.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack13 = $r11.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack12 = $r12.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack15 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack13, $stack12, 32, 1);

        $stack14[p] = $stack15;

        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack18 = $r13.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $r14 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack17 = $r14.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r15 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack16 = $r15.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack19 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack17, $stack16, 32, 1);

        $stack18[p] = $stack19;

     label3:
        $r16 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack20 = $r16.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r17 = (org.bytedeco.opencv.opencv_core.CvArr) $stack20;

        A = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r17);

        $r18 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack22 = $r18.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $stack23 = $stack22[p];

        $r19 = (org.bytedeco.opencv.opencv_core.CvArr) $stack23;

        m1 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r19);

        $r20 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack25 = $r20.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $stack26 = $stack25[p];

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) $stack26;

        m2 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r21);

        $r22 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack28 = $r22.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs>;

        $r23 = (org.bytedeco.opencv.opencv_core.CvArr) $stack28;

        $stack29 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r23);

        $u0 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $stack31 = virtualinvoke m1.<org.bytedeco.opencv.opencv_core.Mat: org.bytedeco.opencv.opencv_core.Size size()>();

        $stack32 = virtualinvoke m1.<org.bytedeco.opencv.opencv_core.Mat: int type()>();

        staticinvoke <org.bytedeco.opencv.global.opencv_calib3d: void initUndistortRectifyMap(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Size,int,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat)>(A, $stack29, $u0, A, $stack31, $stack32, m1, m2);

        $r24 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack33 = $r24.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        if $stack33 <= 0 goto label4;

        $r25 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack34 = $r25.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        map1 = $stack34[p];

        $r26 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack35 = $r26.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        map2 = $stack35[p];

        $r27 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack36 = $r27.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        w = $stack36 >> p;

        $r28 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack37 = $r28.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        h = $stack37 >> p;

        $r29 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack38 = $r29.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $stack39 = virtualinvoke map1.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        $stack40 = virtualinvoke map1.<org.bytedeco.opencv.opencv_core.IplImage: int nChannels()>();

        $stack41 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>(w, h, $stack39, $stack40);

        $stack38[p] = $stack41;

        $r30 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack42 = $r30.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $stack43 = virtualinvoke map2.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        $stack44 = virtualinvoke map2.<org.bytedeco.opencv.opencv_core.IplImage: int nChannels()>();

        $stack45 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>(w, h, $stack43, $stack44);

        $stack42[p] = $stack45;

        $r31 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack46 = $r31.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $stack47 = $stack46[p];

        $r32 = (org.bytedeco.opencv.opencv_core.CvArr) map1;

        $r33 = (org.bytedeco.opencv.opencv_core.CvArr) $stack47;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvResize(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r32, $r33, 0);

        $r34 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack48 = $r34.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $stack49 = $stack48[p];

        $r35 = (org.bytedeco.opencv.opencv_core.CvArr) map2;

        $r36 = (org.bytedeco.opencv.opencv_core.CvArr) $stack49;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvResize(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r35, $r36, 0);

     label4:
        return;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getUndistortMap1()
    {
        ProjectiveDevice this;
        int $stack1;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack2;
        org.bytedeco.opencv.opencv_core.IplImage $stack3;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2;

        this := @this: ProjectiveDevice;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void initUndistortMaps()>();

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack2 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack1 = $r2.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack3 = $stack2[$stack1];

        return $stack3;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getUndistortMap2()
    {
        ProjectiveDevice this;
        int $stack1;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack2;
        org.bytedeco.opencv.opencv_core.IplImage $stack3;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2;

        this := @this: ProjectiveDevice;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void initUndistortMaps()>();

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack2 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack1 = $r2.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack3 = $stack2[$stack1];

        return $stack3;
    }

    public void undistort(org.bytedeco.opencv.opencv_core.IplImage, org.bytedeco.opencv.opencv_core.IplImage)
    {
        org.bytedeco.opencv.opencv_core.IplImage src, dst, $stack8, $stack9;
        ProjectiveDevice this;
        int $stack3, $stack5;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack4, $stack6;
        org.bytedeco.opencv.opencv_core.CvScalar $stack7;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4;
        org.bytedeco.opencv.opencv_core.CvArr $r5, $r6, $r7, $r8;

        this := @this: ProjectiveDevice;

        src := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        dst := @parameter1: org.bytedeco.opencv.opencv_core.IplImage;

        if src == null goto label1;

        if dst == null goto label1;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void initUndistortMaps()>();

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack4 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack3 = $r2.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack9 = $stack4[$stack3];

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack6 = $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack5 = $r4.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack8 = $stack6[$stack5];

        $stack7 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar ZERO>;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) src;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) dst;

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) $stack9;

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) $stack8;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvRemap(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int,org.bytedeco.opencv.opencv_core.CvScalar)>($r5, $r6, $r7, $r8, 9, $stack7);

     label1:
        return;
    }

    public org.bytedeco.opencv.opencv_core.IplImage undistort(org.bytedeco.opencv.opencv_core.IplImage)
    {
        org.bytedeco.opencv.opencv_core.IplImage image, $stack2, $stack3, $stack4, $stack10, $stack11, $stack12, $stack13;
        ProjectiveDevice this;
        int $stack5, $stack7;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack6, $stack8;
        org.bytedeco.opencv.opencv_core.CvScalar $stack9;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r13;
        org.bytedeco.opencv.opencv_core.CvArr $r9, $r10, $r11, $r12;

        this := @this: ProjectiveDevice;

        image := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        if image == null goto label1;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void initUndistortMaps()>();

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack2 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage>;

        $stack3 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage createIfNotCompatible(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage)>($stack2, image);

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage> = $stack3;

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack4 = $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvResetImageROI(org.bytedeco.opencv.opencv_core.IplImage)>($stack4);

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack12 = $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage>;

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack6 = $r5.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps1>;

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack5 = $r6.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack11 = $stack6[$stack5];

        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack8 = $r7.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] undistortMaps2>;

        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack7 = $r8.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack10 = $stack8[$stack7];

        $stack9 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar ZERO>;

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) image;

        $r10 = (org.bytedeco.opencv.opencv_core.CvArr) $stack12;

        $r11 = (org.bytedeco.opencv.opencv_core.CvArr) $stack11;

        $r12 = (org.bytedeco.opencv.opencv_core.CvArr) $stack10;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvRemap(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int,org.bytedeco.opencv.opencv_core.CvScalar)>($r9, $r10, $r11, $r12, 9, $stack9);

        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack13 = $r13.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage>;

        return $stack13;

     label1:
        return null;
    }

    private void initDistortMaps()
    {
        ProjectiveDevice this;
        int p, $stack14, $stack15, $stack17, $stack18, width, height, $stack27, $stack30, $stack31, h, $stack33, $stack34, $stack37, $stack38, $stack44, $stack45, $stack48, $stack49, y, x, distxy#10;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack12, $stack25, $stack26, $stack28, $stack29, $stack32, $stack36, $stack40, $stack42, $stack46, $stack50, $stack52, $stack53, $stack71;
        org.bytedeco.opencv.opencv_core.IplImage $stack13, mapx, mapy, $stack35, $stack39, $stack41, $stack43, $stack47, $stack51, $stack54, $stack55, $stack72, y#8, x#9;
        java.nio.FloatBuffer bufx, bufy;
        boolean $stack24;
        double[] $stack59, distxy;
        double $stack60, $stack61, $stack63, $stack66;
        float $stack64, $stack67;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r33;
        org.bytedeco.opencv.opencv_core.CvArr $r17, $r18, $r19, $r20, $r31, $r32, $r34, $r35;

        this := @this: ProjectiveDevice;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        p = $r0.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack12 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $stack13 = $stack12[p];

        if $stack13 == null goto label1;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack71 = $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $stack72 = $stack71[p];

        if $stack72 != null goto label8;

     label1:
        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack15 = $r3.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack14 = $r4.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        mapx = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack15, $stack14, 32, 1);

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack18 = $r5.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack17 = $r6.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        mapy = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack18, $stack17, 32, 1);

        bufx = virtualinvoke mapx.<org.bytedeco.opencv.opencv_core.IplImage: java.nio.FloatBuffer getFloatBuffer()>();

        bufy = virtualinvoke mapy.<org.bytedeco.opencv.opencv_core.IplImage: java.nio.FloatBuffer getFloatBuffer()>();

        width = virtualinvoke mapx.<org.bytedeco.opencv.opencv_core.IplImage: int width()>();

        height = virtualinvoke mapx.<org.bytedeco.opencv.opencv_core.IplImage: int height()>();

        y = 0;

     label2:
        if y >= height goto label5;

        x = 0;

     label3:
        if x >= width goto label4;

        $stack59 = newarray (double)[2];

        $stack60 = (double) x;

        $stack59[0] = $stack60;

        $stack61 = (double) y;

        $stack59[1] = $stack61;

        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        distxy = virtualinvoke $r7.<org.bytedeco.javacv.ProjectiveDevice: double[] undistort(double[])>($stack59);

        $stack63 = distxy[0];

        $stack64 = (float) $stack63;

        virtualinvoke bufx.<java.nio.FloatBuffer: java.nio.FloatBuffer put(float)>($stack64);

        $stack66 = distxy[1];

        $stack67 = (float) $stack66;

        virtualinvoke bufy.<java.nio.FloatBuffer: java.nio.FloatBuffer put(float)>($stack67);

        x = x + 1;

        goto label3;

     label4:
        y = y + 1;

        goto label2;

     label5:
        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack24 = $r8.<org.bytedeco.javacv.ProjectiveDevice: boolean fixedPointMaps>;

        if $stack24 == 0 goto label6;

        $r9 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack46 = $r9.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack45 = $r10.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack44 = $r11.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack47 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack45, $stack44, -2147483632, 2);

        $stack46[p] = $stack47;

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack50 = $r12.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack49 = $r13.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r14 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack48 = $r14.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack51 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>($stack49, $stack48, 16, 1);

        $stack50[p] = $stack51;

        $r15 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack52 = $r15.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $stack55 = $stack52[p];

        $r16 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack53 = $r16.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $stack54 = $stack53[p];

        $r17 = (org.bytedeco.opencv.opencv_core.CvArr) mapx;

        $r18 = (org.bytedeco.opencv.opencv_core.CvArr) mapy;

        $r19 = (org.bytedeco.opencv.opencv_core.CvArr) $stack55;

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) $stack54;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvConvertMaps(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r17, $r18, $r19, $r20);

        virtualinvoke mapx.<org.bytedeco.opencv.opencv_core.IplImage: void release()>();

        virtualinvoke mapy.<org.bytedeco.opencv.opencv_core.IplImage: void release()>();

        goto label7;

     label6:
        $r21 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack25 = $r21.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $stack25[p] = mapx;

        $r22 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack26 = $r22.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $stack26[p] = mapy;

     label7:
        $r23 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack27 = $r23.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        if $stack27 <= 0 goto label8;

        $r24 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack28 = $r24.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        y#8 = $stack28[p];

        $r25 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack29 = $r25.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        x#9 = $stack29[p];

        $r26 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack30 = $r26.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        distxy#10 = $stack30 >> p;

        $r27 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack31 = $r27.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        h = $stack31 >> p;

        $r28 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack32 = $r28.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $stack33 = virtualinvoke y#8.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        $stack34 = virtualinvoke y#8.<org.bytedeco.opencv.opencv_core.IplImage: int nChannels()>();

        $stack35 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>(distxy#10, h, $stack33, $stack34);

        $stack32[p] = $stack35;

        $r29 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack36 = $r29.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $stack37 = virtualinvoke x#9.<org.bytedeco.opencv.opencv_core.IplImage: int depth()>();

        $stack38 = virtualinvoke x#9.<org.bytedeco.opencv.opencv_core.IplImage: int nChannels()>();

        $stack39 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage create(int,int,int,int)>(distxy#10, h, $stack37, $stack38);

        $stack36[p] = $stack39;

        $r30 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack40 = $r30.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $stack41 = $stack40[p];

        $r31 = (org.bytedeco.opencv.opencv_core.CvArr) y#8;

        $r32 = (org.bytedeco.opencv.opencv_core.CvArr) $stack41;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvResize(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r31, $r32, 0);

        $r33 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack42 = $r33.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $stack43 = $stack42[p];

        $r34 = (org.bytedeco.opencv.opencv_core.CvArr) x#9;

        $r35 = (org.bytedeco.opencv.opencv_core.CvArr) $stack43;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvResize(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r34, $r35, 0);

     label8:
        return;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getDistortMap1()
    {
        ProjectiveDevice this;
        int $stack1;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack2;
        org.bytedeco.opencv.opencv_core.IplImage $stack3;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2;

        this := @this: ProjectiveDevice;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void initDistortMaps()>();

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack2 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack1 = $r2.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack3 = $stack2[$stack1];

        return $stack3;
    }

    public org.bytedeco.opencv.opencv_core.IplImage getDistortMap2()
    {
        ProjectiveDevice this;
        int $stack1;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack2;
        org.bytedeco.opencv.opencv_core.IplImage $stack3;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2;

        this := @this: ProjectiveDevice;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void initDistortMaps()>();

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack2 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack1 = $r2.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack3 = $stack2[$stack1];

        return $stack3;
    }

    public void distort(org.bytedeco.opencv.opencv_core.IplImage, org.bytedeco.opencv.opencv_core.IplImage)
    {
        org.bytedeco.opencv.opencv_core.IplImage src, dst, $stack8, $stack9;
        ProjectiveDevice this;
        int $stack3, $stack5;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack4, $stack6;
        org.bytedeco.opencv.opencv_core.CvScalar $stack7;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4;
        org.bytedeco.opencv.opencv_core.CvArr $r5, $r6, $r7, $r8;

        this := @this: ProjectiveDevice;

        src := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        dst := @parameter1: org.bytedeco.opencv.opencv_core.IplImage;

        if src == null goto label1;

        if dst == null goto label1;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void initDistortMaps()>();

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack4 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack3 = $r2.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack9 = $stack4[$stack3];

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack6 = $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack5 = $r4.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack8 = $stack6[$stack5];

        $stack7 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar ZERO>;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) src;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) dst;

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) $stack9;

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) $stack8;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvRemap(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int,org.bytedeco.opencv.opencv_core.CvScalar)>($r5, $r6, $r7, $r8, 9, $stack7);

     label1:
        return;
    }

    public org.bytedeco.opencv.opencv_core.IplImage distort(org.bytedeco.opencv.opencv_core.IplImage)
    {
        org.bytedeco.opencv.opencv_core.IplImage image, $stack2, $stack3, $stack9, $stack10, $stack11, $stack12;
        ProjectiveDevice this;
        int $stack4, $stack6;
        org.bytedeco.opencv.opencv_core.IplImage[] $stack5, $stack7;
        org.bytedeco.opencv.opencv_core.CvScalar $stack8;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r12;
        org.bytedeco.opencv.opencv_core.CvArr $r8, $r9, $r10, $r11;

        this := @this: ProjectiveDevice;

        image := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        if image == null goto label1;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void initDistortMaps()>();

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack2 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage>;

        $stack3 = staticinvoke <org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage createIfNotCompatible(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.IplImage)>($stack2, image);

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage> = $stack3;

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack11 = $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage>;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack5 = $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps1>;

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack4 = $r5.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack10 = $stack5[$stack4];

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack7 = $r6.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage[] distortMaps2>;

        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack6 = $r7.<org.bytedeco.javacv.ProjectiveDevice: int mapsPyramidLevel>;

        $stack9 = $stack7[$stack6];

        $stack8 = <org.bytedeco.opencv.opencv_core.CvScalar: org.bytedeco.opencv.opencv_core.CvScalar ZERO>;

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) image;

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) $stack11;

        $r10 = (org.bytedeco.opencv.opencv_core.CvArr) $stack10;

        $r11 = (org.bytedeco.opencv.opencv_core.CvArr) $stack9;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvRemap(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int,org.bytedeco.opencv.opencv_core.CvScalar)>($r8, $r9, $r10, $r11, 9, $stack8);

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack12 = $r12.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.IplImage tempImage>;

        return $stack12;

     label1:
        return null;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getBackProjectionMatrix(org.bytedeco.opencv.opencv_core.CvMat, double, org.bytedeco.opencv.opencv_core.CvMat)
    {
        java.lang.ThreadLocal $stack8;
        java.lang.Object $stack9;
        org.bytedeco.opencv.opencv_core.CvMat temp, B, $stack15, $stack16, n, $stack38, $stack39;
        int $stack11, $stack12, $stack32, $stack33;
        ProjectiveDevice this;
        double $stack17, d, a, $stack19, $stack20, $stack23, $stack24, $stack27, $stack28, $stack42, $stack43;
        double[] $stack36;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r10, $r11;
        org.bytedeco.opencv.opencv_core.CvArr $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        this := @this: ProjectiveDevice;

        n := @parameter0: org.bytedeco.opencv.opencv_core.CvMat;

        d := @parameter1: double;

        B := @parameter2: org.bytedeco.opencv.opencv_core.CvMat;

        $stack8 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal temp3x3>;

        $stack9 = virtualinvoke $stack8.<java.lang.ThreadLocal: java.lang.Object get()>();

        temp = (org.bytedeco.opencv.opencv_core.CvMat) $stack9;

        virtualinvoke temp.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat cols(int)>(1);

        $stack11 = virtualinvoke temp.<org.bytedeco.opencv.opencv_core.CvMat: int step()>();

        $stack12 = $stack11 / 3;

        virtualinvoke temp.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat step(int)>($stack12);

        virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat rows(int)>(3);

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack16 = $r0.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack15 = $r1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        $r2 = (org.bytedeco.opencv.opencv_core.CvArr) $stack16;

        $r3 = (org.bytedeco.opencv.opencv_core.CvArr) $stack15;

        $r4 = (org.bytedeco.opencv.opencv_core.CvArr) temp;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r2, $r3, -1.0, null, 0.0, $r4, 1);

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) temp;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) n;

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) B;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r5, $r6, 1.0, null, 0.0, $r7, 2);

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) n;

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) temp;

        $stack17 = staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvDotProduct(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r8, $r9);

        a = $stack17 + d;

        $stack19 = virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack20 = $stack19 - a;

        virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(0, $stack20);

        $stack23 = virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(4);

        $stack24 = $stack23 - a;

        virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(4, $stack24);

        $stack27 = virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        $stack28 = $stack27 - a;

        virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(8, $stack28);

        virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat rows(int)>(4);

        virtualinvoke temp.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat cols(int)>(3);

        $stack32 = virtualinvoke temp.<org.bytedeco.opencv.opencv_core.CvMat: int step()>();

        $stack33 = $stack32 * 3;

        virtualinvoke temp.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat step(int)>($stack33);

        $stack36 = virtualinvoke n.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double[])>(9, $stack36);

        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack39 = $r10.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack38 = $r11.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r12 = (org.bytedeco.opencv.opencv_core.CvArr) $stack39;

        $r13 = (org.bytedeco.opencv.opencv_core.CvArr) $stack38;

        $r14 = (org.bytedeco.opencv.opencv_core.CvArr) temp;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r12, $r13, $r14);

        $r15 = (org.bytedeco.opencv.opencv_core.CvArr) temp;

        $r16 = (org.bytedeco.opencv.opencv_core.CvArr) temp;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,int)>($r15, $r16, 0);

        $r17 = (org.bytedeco.opencv.opencv_core.CvArr) B;

        $r18 = (org.bytedeco.opencv.opencv_core.CvArr) temp;

        $r19 = (org.bytedeco.opencv.opencv_core.CvArr) B;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r17, $r18, $r19);

        $stack42 = virtualinvoke B.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(11);

        $stack43 = 1.0 / $stack42;

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) B;

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) B;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvConvertScale(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,double)>($r20, $r21, $stack43, 0.0);

        return B;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getFrontoParallelH(double[], org.bytedeco.opencv.opencv_core.CvMat, org.bytedeco.opencv.opencv_core.CvMat)
    {
        java.lang.ThreadLocal $stack34, $stack36, $stack38;
        java.lang.Object $stack35, $stack37, $stack39;
        org.bytedeco.opencv.opencv_core.CvMat B, a, t, n, H, $stack62;
        double $stack40, s, $stack42, $stack43, $stack44, $stack45, $stack46, $stack48, $stack49, $stack51, $stack52, theta, $stack55, $stack56, $stack57, $stack58, $stack67, $stack68, $stack69, $stack72, $stack73, $stack74, $stack77, $stack78, $stack79, x1, y1, x2, y2, x3, y3, x4, y4, $stack81, $stack82, $stack83, $stack84, $stack85, $stack86, $stack87, $stack88, $stack89, $stack90, $stack91, $stack92, $stack93, $stack94, u, $stack95, $stack96, $stack97, $stack98, x, y;
        double[] dir, $stack50, $stack54, roipts, $stack64;
        org.bytedeco.opencv.opencv_core.Mat $stack60, $stack61;
        ProjectiveDevice this;
        org.bytedeco.opencv.opencv_core.CvArr $r0, $r1, $r3, $r4, $r5, $r7, $r8, $r9;
        org.bytedeco.javacv.ProjectiveDevice $r2, $r6;

        this := @this: ProjectiveDevice;

        roipts := @parameter0: double[];

        n := @parameter1: org.bytedeco.opencv.opencv_core.CvMat;

        H := @parameter2: org.bytedeco.opencv.opencv_core.CvMat;

        $stack34 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal B4x3>;

        $stack35 = virtualinvoke $stack34.<java.lang.ThreadLocal: java.lang.Object get()>();

        B = (org.bytedeco.opencv.opencv_core.CvMat) $stack35;

        $stack36 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal a4x1>;

        $stack37 = virtualinvoke $stack36.<java.lang.ThreadLocal: java.lang.Object get()>();

        a = (org.bytedeco.opencv.opencv_core.CvMat) $stack37;

        $stack38 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal t3x1>;

        $stack39 = virtualinvoke $stack38.<java.lang.ThreadLocal: java.lang.Object get()>();

        t = (org.bytedeco.opencv.opencv_core.CvMat) $stack39;

        $stack40 = virtualinvoke n.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        s = staticinvoke <java.lang.Math: double signum(double)>($stack40);

        $stack42 = neg s;

        $stack43 = virtualinvoke n.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack44 = $stack42 * $stack43;

        $stack45 = virtualinvoke n.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack46 = s * $stack45;

        dir = staticinvoke <org.bytedeco.javacv.JavaCV: double[] unitize(double,double)>($stack44, $stack46);

        $stack48 = virtualinvoke n.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack49 = s * $stack48;

        $stack50 = virtualinvoke n.<org.bytedeco.opencv.opencv_core.CvMat: double[] get()>();

        $stack51 = staticinvoke <org.bytedeco.javacv.JavaCV: double norm(double[])>($stack50);

        $stack52 = $stack49 / $stack51;

        theta = staticinvoke <java.lang.Math: double acos(double)>($stack52);

        $stack54 = newarray (double)[3];

        $stack55 = dir[0];

        $stack56 = theta * $stack55;

        $stack54[0] = $stack56;

        $stack57 = dir[1];

        $stack58 = theta * $stack57;

        $stack54[1] = $stack58;

        $stack54[2] = 0.0;

        virtualinvoke t.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack54);

        $r0 = (org.bytedeco.opencv.opencv_core.CvArr) t;

        $stack60 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r0);

        $r1 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        $stack61 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r1);

        staticinvoke <org.bytedeco.opencv.global.opencv_calib3d: void Rodrigues(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat)>($stack60, $stack61, null);

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack62 = $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r3 = (org.bytedeco.opencv.opencv_core.CvArr) $stack62;

        $r4 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r3, $r4, $r5);

        x = 0.0;

        y = 0.0;

        if roipts == null goto label1;

        x1 = roipts[0];

        y1 = roipts[1];

        x2 = roipts[4];

        y2 = roipts[5];

        x3 = roipts[2];

        y3 = roipts[3];

        x4 = roipts[6];

        y4 = roipts[7];

        $stack82 = x4 - x3;

        $stack81 = y1 - y3;

        $stack86 = $stack82 * $stack81;

        $stack84 = y4 - y3;

        $stack83 = x1 - x3;

        $stack85 = $stack84 * $stack83;

        $stack94 = $stack86 - $stack85;

        $stack88 = y4 - y3;

        $stack87 = x2 - x1;

        $stack92 = $stack88 * $stack87;

        $stack90 = x4 - x3;

        $stack89 = y2 - y1;

        $stack91 = $stack90 * $stack89;

        $stack93 = $stack92 - $stack91;

        u = $stack94 / $stack93;

        $stack95 = x2 - x1;

        $stack96 = u * $stack95;

        x = x1 + $stack96;

        $stack97 = y2 - y1;

        $stack98 = u * $stack97;

        y = y1 + $stack98;

     label1:
        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r6.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat getBackProjectionMatrix(org.bytedeco.opencv.opencv_core.CvMat,double,org.bytedeco.opencv.opencv_core.CvMat)>(n, -1.0, B);

        $stack64 = newarray (double)[3];

        $stack64[0] = x;

        $stack64[1] = y;

        $stack64[2] = 1.0;

        virtualinvoke t.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack64);

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) B;

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) t;

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) a;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r7, $r8, $r9);

        $stack67 = virtualinvoke a.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack68 = virtualinvoke a.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(3);

        $stack69 = $stack67 / $stack68;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(2, $stack69);

        $stack72 = virtualinvoke a.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack73 = virtualinvoke a.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(3);

        $stack74 = $stack72 / $stack73;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(5, $stack74);

        $stack77 = virtualinvoke a.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack78 = virtualinvoke a.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(3);

        $stack79 = $stack77 / $stack78;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(8, $stack79);

        return H;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getRectifyingHomography(org.bytedeco.javacv.ProjectiveDevice, org.bytedeco.opencv.opencv_core.CvMat)
    {
        java.lang.ThreadLocal $stack10, $stack12, $stack18, $stack20, $stack22, $stack24;
        java.lang.Object $stack11, $stack13, $stack19, $stack21, $stack23, $stack25;
        org.bytedeco.opencv.opencv_core.CvMat relativeR, relativeT, $stack14, $stack15, $stack16, $stack17, R1, P1, R2, P2, $stack35, $stack37, $stack39, $stack41, $stack53, $stack54, H;
        ProjectiveDevice this;
        org.bytedeco.javacv.ProjectiveDevice peer, $r0, $r4, $r9, $r10, $r12, $r15, $r23, $r27;
        int $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34;
        org.bytedeco.opencv.opencv_core.Mat $stack36, $stack38, $stack40, $stack42, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $u1;
        org.bytedeco.opencv.opencv_core.Size $u0, $u2;
        org.bytedeco.opencv.opencv_core.CvArr $r1, $r2, $r3, $r5, $r6, $r7, $r8, $r11, $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r29, $r30, $r31, $r32;

        this := @this: ProjectiveDevice;

        peer := @parameter0: org.bytedeco.javacv.ProjectiveDevice;

        H := @parameter1: org.bytedeco.opencv.opencv_core.CvMat;

        $stack10 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal relativeR3x3>;

        $stack11 = virtualinvoke $stack10.<java.lang.ThreadLocal: java.lang.Object get()>();

        relativeR = (org.bytedeco.opencv.opencv_core.CvMat) $stack11;

        $stack12 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal relativeT3x1>;

        $stack13 = virtualinvoke $stack12.<java.lang.ThreadLocal: java.lang.Object get()>();

        relativeT = (org.bytedeco.opencv.opencv_core.CvMat) $stack13;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack15 = $r0.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $stack14 = peer.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r1 = (org.bytedeco.opencv.opencv_core.CvArr) $stack15;

        $r2 = (org.bytedeco.opencv.opencv_core.CvArr) $stack14;

        $r3 = (org.bytedeco.opencv.opencv_core.CvArr) relativeR;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r1, $r2, 1.0, null, 0.0, $r3, 2);

        $stack17 = peer.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack16 = $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) relativeR;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) $stack17;

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) $stack16;

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) relativeT;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r5, $r6, -1.0, $r7, 1.0, $r8, 0);

        $stack18 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal R13x3>;

        $stack19 = virtualinvoke $stack18.<java.lang.ThreadLocal: java.lang.Object get()>();

        R1 = (org.bytedeco.opencv.opencv_core.CvMat) $stack19;

        $stack20 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal P13x4>;

        $stack21 = virtualinvoke $stack20.<java.lang.ThreadLocal: java.lang.Object get()>();

        P1 = (org.bytedeco.opencv.opencv_core.CvMat) $stack21;

        $stack22 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal R23x3>;

        $stack23 = virtualinvoke $stack22.<java.lang.ThreadLocal: java.lang.Object get()>();

        R2 = (org.bytedeco.opencv.opencv_core.CvMat) $stack23;

        $stack24 = <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal P23x4>;

        $stack25 = virtualinvoke $stack24.<java.lang.ThreadLocal: java.lang.Object get()>();

        P2 = (org.bytedeco.opencv.opencv_core.CvMat) $stack25;

        $u0 = new org.bytedeco.opencv.opencv_core.Size;

        $stack28 = peer.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $r9 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack27 = $r9.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $stack29 = $stack28 + $stack27;

        $stack34 = $stack29 / 2;

        $stack31 = peer.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack30 = $r10.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack32 = $stack31 + $stack30;

        $stack33 = $stack32 / 2;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.Size: void <init>(int,int)>($stack34, $stack33);

        $stack35 = peer.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r11 = (org.bytedeco.opencv.opencv_core.CvArr) $stack35;

        $stack36 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r11);

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack37 = $r12.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r13 = (org.bytedeco.opencv.opencv_core.CvArr) $stack37;

        $stack38 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r13);

        $stack39 = peer.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs>;

        $r14 = (org.bytedeco.opencv.opencv_core.CvArr) $stack39;

        $stack40 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r14);

        $r15 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack41 = $r15.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs>;

        $r16 = (org.bytedeco.opencv.opencv_core.CvArr) $stack41;

        $stack42 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r16);

        $r17 = (org.bytedeco.opencv.opencv_core.CvArr) relativeR;

        $stack43 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r17);

        $r18 = (org.bytedeco.opencv.opencv_core.CvArr) relativeT;

        $stack44 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r18);

        $r19 = (org.bytedeco.opencv.opencv_core.CvArr) R1;

        $stack45 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r19);

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) R2;

        $stack46 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r20);

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) P1;

        $stack47 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r21);

        $r22 = (org.bytedeco.opencv.opencv_core.CvArr) P2;

        $stack48 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r22);

        $u1 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u1.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $u2 = new org.bytedeco.opencv.opencv_core.Size;

        specialinvoke $u2.<org.bytedeco.opencv.opencv_core.Size: void <init>()>();

        staticinvoke <org.bytedeco.opencv.global.opencv_calib3d: void stereoRectify(org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Size,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,org.bytedeco.opencv.opencv_core.Mat,int,double,org.bytedeco.opencv.opencv_core.Size,org.bytedeco.opencv.opencv_core.Rect,org.bytedeco.opencv.opencv_core.Rect)>($stack36, $stack38, $stack40, $stack42, $u0, $stack43, $stack44, $stack45, $stack46, $stack47, $stack48, $u1, 0, -1.0, $u2, null, null);

        $r23 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack53 = $r23.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r24 = (org.bytedeco.opencv.opencv_core.CvArr) $stack53;

        $r25 = (org.bytedeco.opencv.opencv_core.CvArr) R2;

        $r26 = (org.bytedeco.opencv.opencv_core.CvArr) R2;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r24, $r25, $r26);

        $r27 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack54 = $r27.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r28 = (org.bytedeco.opencv.opencv_core.CvArr) $stack54;

        $r29 = (org.bytedeco.opencv.opencv_core.CvArr) R1;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r28, $r29);

        $r30 = (org.bytedeco.opencv.opencv_core.CvArr) R2;

        $r31 = (org.bytedeco.opencv.opencv_core.CvArr) R1;

        $r32 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r30, $r31, $r32);

        return H;
    }

    public static org.bytedeco.javacv.ProjectiveDevice[] read(java.lang.String) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        java.lang.String filename;
        org.bytedeco.javacv.CameraDevice[] cameraDevices;
        org.bytedeco.javacv.ProjectorDevice[] projectorDevices;
        int $stack13, $stack14, $stack15, $stack16, $stack19, i, l7, l8;
        java.lang.Object[] devices;
        org.bytedeco.javacv.CameraDevice d;
        org.bytedeco.javacv.ProjectorDevice d#9;
        org.bytedeco.opencv.opencv_core.FileStorage $u0;
        org.bytedeco.javacv.ProjectiveDevice[] $r0;

        filename := @parameter0: java.lang.String;

        $u0 = new org.bytedeco.opencv.opencv_core.FileStorage;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.FileStorage: void <init>(java.lang.String,int)>(filename, 0);

        cameraDevices = staticinvoke <org.bytedeco.javacv.CameraDevice: org.bytedeco.javacv.CameraDevice[] read(org.bytedeco.opencv.opencv_core.FileStorage)>($u0);

        projectorDevices = staticinvoke <org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice[] read(org.bytedeco.opencv.opencv_core.FileStorage)>($u0);

        $stack14 = lengthof cameraDevices;

        $stack13 = lengthof projectorDevices;

        $stack15 = $stack14 + $stack13;

        devices = newarray (org.bytedeco.javacv.ProjectiveDevice)[$stack15];

        i = 0;

        l7 = lengthof cameraDevices;

        l8 = 0;

     label1:
        if l8 >= l7 goto label2;

        d = cameraDevices[l8];

        $stack19 = i;

        i = i + 1;

        devices[$stack19] = d;

        l8 = l8 + 1;

        goto label1;

     label2:
        l7 = lengthof projectorDevices;

        l8 = 0;

     label3:
        if l8 >= l7 goto label4;

        d#9 = projectorDevices[l8];

        $stack16 = i;

        i = i + 1;

        devices[$stack16] = d#9;

        l8 = l8 + 1;

        goto label3;

     label4:
        virtualinvoke $u0.<org.bytedeco.opencv.opencv_core.FileStorage: void release()>();

        $r0 = (org.bytedeco.javacv.ProjectiveDevice[]) devices;

        return $r0;
    }

    public static transient void write(java.lang.String, org.bytedeco.javacv.ProjectiveDevice[][])
    {
        org.bytedeco.javacv.ProjectiveDevice[][] devices;
        java.lang.String filename;
        org.bytedeco.javacv.ProjectiveDevice[] ds, l9, allDevices#6;
        int l10, $stack15, $stack18, totalLength, i, l5, ds, l7, l11;
        org.bytedeco.javacv.ProjectiveDevice d;

        filename := @parameter0: java.lang.String;

        devices := @parameter1: org.bytedeco.javacv.ProjectiveDevice[][];

        totalLength = 0;

        i = lengthof devices;

        l5 = 0;

     label1:
        if l5 >= i goto label2;

        ds = devices[l5];

        $stack18 = lengthof ds;

        totalLength = totalLength + $stack18;

        l5 = l5 + 1;

        goto label1;

     label2:
        allDevices#6 = newarray (org.bytedeco.javacv.ProjectiveDevice)[totalLength];

        i = 0;

        ds = lengthof devices;

        l7 = 0;

     label3:
        if l7 >= ds goto label6;

        ds = devices[l7];

        l9 = ds;

        l10 = lengthof ds;

        l11 = 0;

     label4:
        if l11 >= l10 goto label5;

        d = l9[l11];

        $stack15 = i;

        i = i + 1;

        allDevices#6[$stack15] = d;

        l11 = l11 + 1;

        goto label4;

     label5:
        l7 = l7 + 1;

        goto label3;

     label6:
        staticinvoke <org.bytedeco.javacv.ProjectiveDevice: void write(java.lang.String,org.bytedeco.javacv.ProjectiveDevice[])>(filename, allDevices#6);

        return;
    }

    public static transient void write(java.lang.String, org.bytedeco.javacv.ProjectiveDevice[])
    {
        org.bytedeco.opencv.opencv_core.FileStorage $stack7, $stack8, $stack11;
        java.lang.String filename, $stack20, $stack25;
        org.bytedeco.javacv.ProjectiveDevice[] devices;
        boolean $stack16, $stack21;
        org.bytedeco.javacv.ProjectiveDevice$Settings $stack19, $stack24;
        int l4, l5;
        org.bytedeco.javacv.ProjectiveDevice d;

        filename := @parameter0: java.lang.String;

        devices := @parameter1: org.bytedeco.javacv.ProjectiveDevice[];

        $stack7 = new org.bytedeco.opencv.opencv_core.FileStorage;

        specialinvoke $stack7.<org.bytedeco.opencv.opencv_core.FileStorage: void <init>(java.lang.String,int)>(filename, 1);

        $stack8 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.FileStorage shiftLeft(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>($stack7, "Cameras");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.FileStorage shiftLeft(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>($stack8, "[");

        l4 = lengthof devices;

        l5 = 0;

     label1:
        if l5 >= l4 goto label3;

        d = devices[l5];

        $stack21 = d instanceof org.bytedeco.javacv.CameraDevice;

        if $stack21 == 0 goto label2;

        $stack24 = virtualinvoke d.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack25 = virtualinvoke $stack24.<org.bytedeco.javacv.ProjectiveDevice$Settings: java.lang.String getName()>();

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>($stack7, $stack25);

     label2:
        l5 = l5 + 1;

        goto label1;

     label3:
        staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.FileStorage shiftLeft(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>($stack7, "]");

        $stack11 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.FileStorage shiftLeft(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>($stack7, "Projectors");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.FileStorage shiftLeft(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>($stack11, "[");

        l4 = lengthof devices;

        l5 = 0;

     label4:
        if l5 >= l4 goto label6;

        d = devices[l5];

        $stack16 = d instanceof org.bytedeco.javacv.ProjectorDevice;

        if $stack16 == 0 goto label5;

        $stack19 = virtualinvoke d.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack20 = virtualinvoke $stack19.<org.bytedeco.javacv.ProjectiveDevice$Settings: java.lang.String getName()>();

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>($stack7, $stack20);

     label5:
        l5 = l5 + 1;

        goto label4;

     label6:
        staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.FileStorage shiftLeft(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>($stack7, "]");

        l4 = lengthof devices;

        l5 = 0;

     label7:
        if l5 >= l4 goto label8;

        d = devices[l5];

        virtualinvoke d.<org.bytedeco.javacv.ProjectiveDevice: void writeParameters(org.bytedeco.opencv.opencv_core.FileStorage)>($stack7);

        l5 = l5 + 1;

        goto label7;

     label8:
        virtualinvoke $stack7.<org.bytedeco.opencv.opencv_core.FileStorage: void release()>();

        return;
    }

    public void writeParameters(java.io.File)
    {
        ProjectiveDevice this;
        java.io.File file;
        java.lang.String $stack2;
        org.bytedeco.javacv.ProjectiveDevice $r0;

        this := @this: ProjectiveDevice;

        file := @parameter0: java.io.File;

        $stack2 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>();

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void writeParameters(java.lang.String)>($stack2);

        return;
    }

    public void writeParameters(java.lang.String)
    {
        java.lang.String filename;
        ProjectiveDevice this;
        org.bytedeco.opencv.opencv_core.FileStorage $u0;
        org.bytedeco.javacv.ProjectiveDevice $r0;

        this := @this: ProjectiveDevice;

        filename := @parameter0: java.lang.String;

        $u0 = new org.bytedeco.opencv.opencv_core.FileStorage;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.FileStorage: void <init>(java.lang.String,int)>(filename, 1);

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void writeParameters(org.bytedeco.opencv.opencv_core.FileStorage)>($u0);

        virtualinvoke $u0.<org.bytedeco.opencv.opencv_core.FileStorage: void release()>();

        return;
    }

    public void writeParameters(org.bytedeco.opencv.opencv_core.FileStorage)
    {
        org.bytedeco.opencv.opencv_core.FileStorage fs, $stack4;
        ProjectiveDevice this;
        org.bytedeco.javacv.ProjectiveDevice$Settings $stack2, $stack9;
        java.lang.String $stack3, $stack23;
        int $stack6, $stack7;
        double $stack10, $stack15, $stack16, $stack21, $stack22, $stack26, $stack27;
        org.bytedeco.opencv.opencv_core.CvMat $stack11, $stack12, $stack13, $stack14, $stack17, $stack18, $stack19, $stack20, $stack24, $stack25, $stack29, $stack40, $stack44, $stack57, $stack61, $stack65, $stack69, $stack79, $stack83, $stack87;
        org.bytedeco.opencv.opencv_core.Mat $stack31, $stack42, $stack46, $stack59, $stack63, $stack67, $stack71, $stack81, $stack85, $stack89;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r25, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r39, $r40;
        org.bytedeco.opencv.opencv_core.CvArr $r6, $r9, $r12, $r15, $r20, $r23, $r26, $r29, $r35, $r38;

        this := @this: ProjectiveDevice;

        fs := @parameter0: org.bytedeco.opencv.opencv_core.FileStorage;

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack2 = virtualinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack3 = virtualinvoke $stack2.<org.bytedeco.javacv.ProjectiveDevice$Settings: java.lang.String getName()>();

        $stack4 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.FileStorage shiftLeft(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>(fs, $stack3);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.FileStorage shiftLeft(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>($stack4, "{");

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack6 = $r1.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,int)>(fs, "imageWidth", $stack6);

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack7 = $r2.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,int)>(fs, "imageHeight", $stack7);

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack9 = virtualinvoke $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack10 = virtualinvoke $stack9.<org.bytedeco.javacv.ProjectiveDevice$Settings: double getResponseGamma()>();

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,double)>(fs, "responseGamma", $stack10);

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack11 = $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        if $stack11 == null goto label01;

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack87 = $r5.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) $stack87;

        $stack89 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r6);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "cameraMatrix", $stack89);

     label01:
        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack12 = $r7.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs>;

        if $stack12 == null goto label02;

        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack83 = $r8.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs>;

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) $stack83;

        $stack85 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r9);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "distortionCoeffs", $stack85);

     label02:
        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack13 = $r10.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat extrParams>;

        if $stack13 == null goto label03;

        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack79 = $r11.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat extrParams>;

        $r12 = (org.bytedeco.opencv.opencv_core.CvArr) $stack79;

        $stack81 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r12);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "extrParams", $stack81);

     label03:
        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack14 = $r13.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat reprojErrs>;

        if $stack14 == null goto label04;

        $r14 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack69 = $r14.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat reprojErrs>;

        $r15 = (org.bytedeco.opencv.opencv_core.CvArr) $stack69;

        $stack71 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r15);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "reprojErrs", $stack71);

     label04:
        $r16 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack15 = $r16.<org.bytedeco.javacv.ProjectiveDevice: double avgReprojErr>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,double)>(fs, "avgReprojErr", $stack15);

        $r17 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack16 = $r17.<org.bytedeco.javacv.ProjectiveDevice: double maxReprojErr>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,double)>(fs, "maxReprojErr", $stack16);

        $r18 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack17 = $r18.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        if $stack17 == null goto label05;

        $r19 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack65 = $r19.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) $stack65;

        $stack67 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r20);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "R", $stack67);

     label05:
        $r21 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack18 = $r21.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        if $stack18 == null goto label06;

        $r22 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack61 = $r22.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        $r23 = (org.bytedeco.opencv.opencv_core.CvArr) $stack61;

        $stack63 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r23);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "T", $stack63);

     label06:
        $r24 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack19 = $r24.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat E>;

        if $stack19 == null goto label07;

        $r25 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack57 = $r25.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat E>;

        $r26 = (org.bytedeco.opencv.opencv_core.CvArr) $stack57;

        $stack59 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r26);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "E", $stack59);

     label07:
        $r27 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack20 = $r27.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat F>;

        if $stack20 == null goto label08;

        $r28 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack44 = $r28.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat F>;

        $r29 = (org.bytedeco.opencv.opencv_core.CvArr) $stack44;

        $stack46 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r29);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "F", $stack46);

     label08:
        $r30 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack21 = $r30.<org.bytedeco.javacv.ProjectiveDevice: double avgEpipolarErr>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,double)>(fs, "avgEpipolarErr", $stack21);

        $r31 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack22 = $r31.<org.bytedeco.javacv.ProjectiveDevice: double maxEpipolarErr>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,double)>(fs, "maxEpipolarErr", $stack22);

        $r32 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack23 = $r32.<org.bytedeco.javacv.ProjectiveDevice: java.lang.String colorOrder>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,java.lang.String)>(fs, "colorOrder", $stack23);

        $r33 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack24 = $r33.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix>;

        if $stack24 == null goto label09;

        $r34 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack40 = $r34.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix>;

        $r35 = (org.bytedeco.opencv.opencv_core.CvArr) $stack40;

        $stack42 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r35);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "colorMixingMatrix", $stack42);

     label09:
        $r36 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack25 = $r36.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat additiveLight>;

        if $stack25 == null goto label10;

        $r37 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack29 = $r37.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat additiveLight>;

        $r38 = (org.bytedeco.opencv.opencv_core.CvArr) $stack29;

        $stack31 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.Mat cvarrToMat(org.bytedeco.opencv.opencv_core.CvArr)>($r38);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,org.bytedeco.opencv.opencv_core.Mat)>(fs, "additiveLight", $stack31);

     label10:
        $r39 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack26 = $r39.<org.bytedeco.javacv.ProjectiveDevice: double avgColorErr>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,double)>(fs, "avgColorErr", $stack26);

        $r40 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack27 = $r40.<org.bytedeco.javacv.ProjectiveDevice: double colorR2>;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void write(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String,double)>(fs, "colorR2", $stack27);

        staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.FileStorage shiftLeft(org.bytedeco.opencv.opencv_core.FileStorage,java.lang.String)>(fs, "}");

        return;
    }

    public void readParameters(java.io.File) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        ProjectiveDevice this;
        java.io.File file;
        java.lang.String $stack2;
        org.bytedeco.javacv.ProjectiveDevice $r0;

        this := @this: ProjectiveDevice;

        file := @parameter0: java.io.File;

        $stack2 = virtualinvoke file.<java.io.File: java.lang.String getAbsolutePath()>();

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void readParameters(java.lang.String)>($stack2);

        return;
    }

    public void readParameters(java.lang.String) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        java.lang.String filename;
        ProjectiveDevice this;
        org.bytedeco.opencv.opencv_core.FileStorage $u0;
        org.bytedeco.javacv.ProjectiveDevice $r0;

        this := @this: ProjectiveDevice;

        filename := @parameter0: java.lang.String;

        $u0 = new org.bytedeco.opencv.opencv_core.FileStorage;

        specialinvoke $u0.<org.bytedeco.opencv.opencv_core.FileStorage: void <init>(java.lang.String,int)>(filename, 0);

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: void readParameters(org.bytedeco.opencv.opencv_core.FileStorage)>($u0);

        virtualinvoke $u0.<org.bytedeco.opencv.opencv_core.FileStorage: void release()>();

        return;
    }

    public void readParameters(org.bytedeco.opencv.opencv_core.FileStorage) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        org.bytedeco.opencv.opencv_core.FileStorage fs;
        ProjectiveDevice this;
        org.bytedeco.javacv.ProjectiveDevice$Settings $stack5, $stack137, $stack152, $stack160;
        java.lang.String $stack6, $stack82, $stack153, $stack156, $stack161, $stack164;
        org.bytedeco.opencv.opencv_core.FileNode fn, $stack8, $stack10, $stack12, $stack15, $stack19, $stack23, $stack27, $stack31, $stack33, $stack35, $stack39, $stack43, $stack47, $stack51, $stack53, $stack55, $stack57, $stack61, $stack65, $stack67;
        boolean $stack9, $stack11, $stack13, $stack16, $stack20, $stack24, $stack28, $stack32, $stack34, $stack36, $stack40, $stack44, $stack48, $stack52, $stack54, $stack56, $stack58, $stack62, $stack66, $stack68;
        org.bytedeco.opencv.opencv_core.CvMat $stack17, $stack21, $stack25, $stack29, $stack37, $stack41, $stack45, $stack49, $stack59, $stack63, $stack18, $stack22, $stack26, $stack30, $stack38, $stack42, $stack46, $stack50, $stack60, $stack64;
        double $stack69, $stack70, $stack87, $stack90, $stack111, $stack116, $stack138;
        org.bytedeco.javacpp.BytePointer $stack81;
        int $stack143, $stack146;
        java.lang.StringBuilder $stack151, $stack154, $stack155, $stack159, $stack162, $stack163, $u0, $u2;
        org.bytedeco.javacv.ProjectiveDevice$Exception $u1, $u3;
        org.bytedeco.opencv.opencv_core.Mat $u4;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r2, $r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        java.lang.Throwable $r1, $r4;

        this := @this: ProjectiveDevice;

        fs := @parameter0: org.bytedeco.opencv.opencv_core.FileStorage;

        if fs != null goto label01;

        $u1 = new org.bytedeco.javacv.ProjectiveDevice$Exception;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack159 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: FileStorage is null, cannot read parameters for device ");

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack160 = virtualinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack161 = virtualinvoke $stack160.<org.bytedeco.javacv.ProjectiveDevice$Settings: java.lang.String getName()>();

        $stack162 = virtualinvoke $stack159.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack161);

        $stack163 = virtualinvoke $stack162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Is the parametersFile correct?");

        $stack164 = virtualinvoke $stack163.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.bytedeco.javacv.ProjectiveDevice$Exception: void <init>(java.lang.String)>($stack164);

        $r1 = (java.lang.Throwable) $u1;

        throw $r1;

     label01:
        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack5 = virtualinvoke $r2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack6 = virtualinvoke $stack5.<org.bytedeco.javacv.ProjectiveDevice$Settings: java.lang.String getName()>();

        fn = virtualinvoke fs.<org.bytedeco.opencv.opencv_core.FileStorage: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>($stack6);

        if fn != null goto label02;

        $u3 = new org.bytedeco.javacv.ProjectiveDevice$Exception;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack151 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: FileNode is null, cannot read parameters for device ");

        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack152 = virtualinvoke $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack153 = virtualinvoke $stack152.<org.bytedeco.javacv.ProjectiveDevice$Settings: java.lang.String getName()>();

        $stack154 = virtualinvoke $stack151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack153);

        $stack155 = virtualinvoke $stack154.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Is the name correct?");

        $stack156 = virtualinvoke $stack155.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u3.<org.bytedeco.javacv.ProjectiveDevice$Exception: void <init>(java.lang.String)>($stack156);

        $r4 = (java.lang.Throwable) $u3;

        throw $r4;

     label02:
        $stack8 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("imageWidth");

        $stack9 = virtualinvoke $stack8.<org.bytedeco.opencv.opencv_core.FileNode: boolean isInt()>();

        if $stack9 == 0 goto label03;

        $stack146 = virtualinvoke $stack8.<org.bytedeco.opencv.opencv_core.FileNode: int asInt()>();

        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r5.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth> = $stack146;

     label03:
        $stack10 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("imageHeight");

        $stack11 = virtualinvoke $stack10.<org.bytedeco.opencv.opencv_core.FileNode: boolean isInt()>();

        if $stack11 == 0 goto label04;

        $stack143 = virtualinvoke $stack10.<org.bytedeco.opencv.opencv_core.FileNode: int asInt()>();

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r6.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight> = $stack143;

     label04:
        $stack12 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("gamma");

        $stack13 = virtualinvoke $stack12.<org.bytedeco.opencv.opencv_core.FileNode: boolean isReal()>();

        if $stack13 == 0 goto label05;

        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack137 = virtualinvoke $r7.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack138 = virtualinvoke $stack12.<org.bytedeco.opencv.opencv_core.FileNode: double asDouble()>();

        virtualinvoke $stack137.<org.bytedeco.javacv.ProjectiveDevice$Settings: void setResponseGamma(double)>($stack138);

     label05:
        $u4 = new org.bytedeco.opencv.opencv_core.Mat;

        specialinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: void <init>()>();

        $stack15 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("cameraMatrix");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack15, $u4);

        $stack16 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack16 == 0 goto label06;

        $stack18 = null;

        goto label07;

     label06:
        $stack17 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack18 = virtualinvoke $stack17.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label07:
        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r8.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix> = $stack18;

        $stack19 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("distortionCoeffs");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack19, $u4);

        $stack20 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack20 == 0 goto label08;

        $stack22 = null;

        goto label09;

     label08:
        $stack21 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack22 = virtualinvoke $stack21.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label09:
        $r9 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r9.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs> = $stack22;

        $stack23 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("extrParams");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack23, $u4);

        $stack24 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack24 == 0 goto label10;

        $stack26 = null;

        goto label11;

     label10:
        $stack25 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack26 = virtualinvoke $stack25.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label11:
        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r10.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat extrParams> = $stack26;

        $stack27 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("reprojErrs");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack27, $u4);

        $stack28 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack28 == 0 goto label12;

        $stack30 = null;

        goto label13;

     label12:
        $stack29 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack30 = virtualinvoke $stack29.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label13:
        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r11.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat reprojErrs> = $stack30;

        $stack31 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("avgReprojErr");

        $stack32 = virtualinvoke $stack31.<org.bytedeco.opencv.opencv_core.FileNode: boolean isReal()>();

        if $stack32 == 0 goto label14;

        $stack116 = virtualinvoke $stack31.<org.bytedeco.opencv.opencv_core.FileNode: double asDouble()>();

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r12.<org.bytedeco.javacv.ProjectiveDevice: double avgReprojErr> = $stack116;

     label14:
        $stack33 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("maxReprojErr");

        $stack34 = virtualinvoke $stack33.<org.bytedeco.opencv.opencv_core.FileNode: boolean isReal()>();

        if $stack34 == 0 goto label15;

        $stack111 = virtualinvoke $stack33.<org.bytedeco.opencv.opencv_core.FileNode: double asDouble()>();

        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r13.<org.bytedeco.javacv.ProjectiveDevice: double maxReprojErr> = $stack111;

     label15:
        $stack35 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("R");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack35, $u4);

        $stack36 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack36 == 0 goto label16;

        $stack38 = null;

        goto label17;

     label16:
        $stack37 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack38 = virtualinvoke $stack37.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label17:
        $r14 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r14.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R> = $stack38;

        $stack39 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("T");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack39, $u4);

        $stack40 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack40 == 0 goto label18;

        $stack42 = null;

        goto label19;

     label18:
        $stack41 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack42 = virtualinvoke $stack41.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label19:
        $r15 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r15.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T> = $stack42;

        $stack43 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("E");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack43, $u4);

        $stack44 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack44 == 0 goto label20;

        $stack46 = null;

        goto label21;

     label20:
        $stack45 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack46 = virtualinvoke $stack45.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label21:
        $r16 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r16.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat E> = $stack46;

        $stack47 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("F");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack47, $u4);

        $stack48 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack48 == 0 goto label22;

        $stack50 = null;

        goto label23;

     label22:
        $stack49 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack50 = virtualinvoke $stack49.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label23:
        $r17 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r17.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat F> = $stack50;

        $stack51 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("avgEpipolarErr");

        $stack52 = virtualinvoke $stack51.<org.bytedeco.opencv.opencv_core.FileNode: boolean isReal()>();

        if $stack52 == 0 goto label24;

        $stack90 = virtualinvoke $stack51.<org.bytedeco.opencv.opencv_core.FileNode: double asDouble()>();

        $r18 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r18.<org.bytedeco.javacv.ProjectiveDevice: double avgEpipolarErr> = $stack90;

     label24:
        $stack53 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("maxEpipolarErr");

        $stack54 = virtualinvoke $stack53.<org.bytedeco.opencv.opencv_core.FileNode: boolean isReal()>();

        if $stack54 == 0 goto label25;

        $stack87 = virtualinvoke $stack53.<org.bytedeco.opencv.opencv_core.FileNode: double asDouble()>();

        $r19 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r19.<org.bytedeco.javacv.ProjectiveDevice: double maxEpipolarErr> = $stack87;

     label25:
        $stack55 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("colorOrder");

        $stack56 = virtualinvoke $stack55.<org.bytedeco.opencv.opencv_core.FileNode: boolean isString()>();

        if $stack56 == 0 goto label26;

        $stack81 = virtualinvoke $stack55.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.javacpp.BytePointer asBytePointer()>();

        $stack82 = virtualinvoke $stack81.<org.bytedeco.javacpp.BytePointer: java.lang.String getString()>();

        $r20 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r20.<org.bytedeco.javacv.ProjectiveDevice: java.lang.String colorOrder> = $stack82;

     label26:
        $stack57 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("colorMixingMatrix");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack57, $u4);

        $stack58 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack58 == 0 goto label27;

        $stack60 = null;

        goto label28;

     label27:
        $stack59 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack60 = virtualinvoke $stack59.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label28:
        $r21 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r21.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix> = $stack60;

        $stack61 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("additiveLight");

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void read(org.bytedeco.opencv.opencv_core.FileNode,org.bytedeco.opencv.opencv_core.Mat)>($stack61, $u4);

        $stack62 = virtualinvoke $u4.<org.bytedeco.opencv.opencv_core.Mat: boolean empty()>();

        if $stack62 == 0 goto label29;

        $stack64 = null;

        goto label30;

     label29:
        $stack63 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvMat cvMat(org.bytedeco.opencv.opencv_core.Mat)>($u4);

        $stack64 = virtualinvoke $stack63.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label30:
        $r22 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r22.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat additiveLight> = $stack64;

        $stack65 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("avgColorErr");

        $stack66 = virtualinvoke $stack65.<org.bytedeco.opencv.opencv_core.FileNode: boolean isReal()>();

        if $stack66 == 0 goto label31;

        $stack70 = virtualinvoke $stack65.<org.bytedeco.opencv.opencv_core.FileNode: double asDouble()>();

        $r23 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r23.<org.bytedeco.javacv.ProjectiveDevice: double avgColorErr> = $stack70;

     label31:
        $stack67 = virtualinvoke fn.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("colorR2");

        $stack68 = virtualinvoke $stack67.<org.bytedeco.opencv.opencv_core.FileNode: boolean isReal()>();

        if $stack68 == 0 goto label32;

        $stack69 = virtualinvoke $stack67.<org.bytedeco.opencv.opencv_core.FileNode: double asDouble()>();

        $r24 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $r24.<org.bytedeco.javacv.ProjectiveDevice: double colorR2> = $stack69;

     label32:
        return;
    }

    public java.lang.String toString()
    {
        ProjectiveDevice this;
        org.bytedeco.javacv.ProjectiveDevice$Settings $stack4, $stack15;
        java.lang.String $stack5, $stack16, $stack56, s, $stack23, $stack40, $stack45, $stack61, $stack66;
        java.lang.StringBuilder $stack6, $stack7, $stack9, $stack10, $stack12, $stack13, $stack19, $stack20, $stack24, $stack25, $stack28, $stack29, $stack32, $stack33, $stack36, $stack37, $stack41, $stack42, $stack46, $stack47, $stack50, $stack51, $stack54, $stack55, $stack57, $stack58, $stack62, $stack63, $stack67, $stack68, $stack71, $stack72, $stack75, $stack103, $stack104, $u0, $u1, $u2;
        int $stack8, $stack11, $stack17, i;
        org.bytedeco.opencv.opencv_core.CvMat $stack21, $stack22, $stack26, $stack38, $stack39, $stack43, $stack44, $stack59, $stack60, $stack64, $stack65;
        double $stack30, $stack34, $stack48, $stack52, $stack69, $stack73;
        float $stack31, $stack35, $stack49, $stack53, $stack70, $stack74;
        java.lang.Object $stack27;
        org.bytedeco.javacv.ProjectiveDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        this := @this: ProjectiveDevice;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack4 = virtualinvoke $r0.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack5 = virtualinvoke $stack4.<org.bytedeco.javacv.ProjectiveDevice$Settings: java.lang.String getName()>();

        $stack6 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r1 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack8 = $r1.<org.bytedeco.javacv.ProjectiveDevice: int imageWidth>;

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $r2 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack11 = $r2.<org.bytedeco.javacv.ProjectiveDevice: int imageHeight>;

        $stack12 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack11);

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\n");

        s = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        i = 0;

     label01:
        $r3 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack15 = virtualinvoke $r3.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()>();

        $stack16 = virtualinvoke $stack15.<org.bytedeco.javacv.ProjectiveDevice$Settings: java.lang.String getName()>();

        $stack17 = virtualinvoke $stack16.<java.lang.String: int length()>();

        if i >= $stack17 goto label02;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack103 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack104 = virtualinvoke $stack103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        s = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.String toString()>();

        i = i + 1;

        goto label01;

     label02:
        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack19 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nIntrinsics\n----------\ncamera matrix = ");

        $r4 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack21 = $r4.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        if $stack21 != null goto label03;

        $stack23 = "null";

        goto label04;

     label03:
        $r5 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack22 = $r5.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack23 = virtualinvoke $stack22.<org.bytedeco.opencv.opencv_core.CvMat: java.lang.String toString(int)>(16);

     label04:
        $stack24 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23);

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ndistortion coefficients = ");

        $r6 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack26 = $r6.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs>;

        if $stack26 != null goto label05;

        $stack27 = "null";

        goto label06;

     label05:
        $r7 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack27 = $r7.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat distortionCoeffs>;

     label06:
        $stack28 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack27);

        $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nreprojection RMS/max error (pixels) = ");

        $r8 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack30 = $r8.<org.bytedeco.javacv.ProjectiveDevice: double avgReprojErr>;

        $stack31 = (float) $stack30;

        $stack32 = virtualinvoke $stack29.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack31);

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r9 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack34 = $r9.<org.bytedeco.javacv.ProjectiveDevice: double maxReprojErr>;

        $stack35 = (float) $stack34;

        $stack36 = virtualinvoke $stack33.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack35);

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nExtrinsics\n----------\nrotation = ");

        $r10 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack38 = $r10.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        if $stack38 != null goto label07;

        $stack40 = "null";

        goto label08;

     label07:
        $r11 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack39 = $r11.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $stack40 = virtualinvoke $stack39.<org.bytedeco.opencv.opencv_core.CvMat: java.lang.String toString(int)>(11);

     label08:
        $stack41 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack40);

        $stack42 = virtualinvoke $stack41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ntranslation = ");

        $r12 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack43 = $r12.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        if $stack43 != null goto label09;

        $stack45 = "null";

        goto label10;

     label09:
        $r13 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack44 = $r13.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        $stack45 = virtualinvoke $stack44.<org.bytedeco.opencv.opencv_core.CvMat: java.lang.String toString(int)>(14);

     label10:
        $stack46 = virtualinvoke $stack42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack45);

        $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nepipolar RMS/max error (pixels) = ");

        $r14 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack48 = $r14.<org.bytedeco.javacv.ProjectiveDevice: double avgEpipolarErr>;

        $stack49 = (float) $stack48;

        $stack50 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack49);

        $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r15 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack52 = $r15.<org.bytedeco.javacv.ProjectiveDevice: double maxEpipolarErr>;

        $stack53 = (float) $stack52;

        $stack54 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack53);

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nColor\n-----\norder = ");

        $r16 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack56 = $r16.<org.bytedeco.javacv.ProjectiveDevice: java.lang.String colorOrder>;

        $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack56);

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nmixing matrix = ");

        $r17 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack59 = $r17.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix>;

        if $stack59 != null goto label11;

        $stack61 = "null";

        goto label12;

     label11:
        $r18 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack60 = $r18.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat colorMixingMatrix>;

        $stack61 = virtualinvoke $stack60.<org.bytedeco.opencv.opencv_core.CvMat: java.lang.String toString(int)>(16);

     label12:
        $stack62 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack61);

        $stack63 = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nadditive light = ");

        $r19 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack64 = $r19.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat additiveLight>;

        if $stack64 != null goto label13;

        $stack66 = "null";

        goto label14;

     label13:
        $r20 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack65 = $r20.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat additiveLight>;

        $stack66 = virtualinvoke $stack65.<org.bytedeco.opencv.opencv_core.CvMat: java.lang.String toString(int)>(17);

     label14:
        $stack67 = virtualinvoke $stack63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack66);

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nnormalized RMSE (intensity) = ");

        $r21 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack69 = $r21.<org.bytedeco.javacv.ProjectiveDevice: double avgColorErr>;

        $stack70 = (float) $stack69;

        $stack71 = virtualinvoke $stack68.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack70);

        $stack72 = virtualinvoke $stack71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nR^2 (intensity) = ");

        $r22 = (org.bytedeco.javacv.ProjectiveDevice) this;

        $stack73 = $r22.<org.bytedeco.javacv.ProjectiveDevice: double colorR2>;

        $stack74 = (float) $stack73;

        $stack75 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($stack74);

        s = virtualinvoke $stack75.<java.lang.StringBuilder: java.lang.String toString()>();

        return s;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack12;
        java.lang.ThreadLocal $stack2, $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11;

        $stack0 = class "Lorg/bytedeco/javacv/ProjectiveDevice;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack12 = 1;

        goto label2;

     label1:
        $stack12 = 0;

     label2:
        <org.bytedeco.javacv.ProjectiveDevice: boolean $assertionsDisabled> = $stack12;

        $stack2 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 3);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal temp3x3> = $stack2;

        $stack3 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(4, 3);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal B4x3> = $stack3;

        $stack4 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(4, 1);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal a4x1> = $stack4;

        $stack5 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 1);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal t3x1> = $stack5;

        $stack6 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 3);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal relativeR3x3> = $stack6;

        $stack7 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 1);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal relativeT3x1> = $stack7;

        $stack8 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 3);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal R13x3> = $stack8;

        $stack9 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 4);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal P13x4> = $stack9;

        $stack10 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 3);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal R23x3> = $stack10;

        $stack11 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 4);

        <org.bytedeco.javacv.ProjectiveDevice: java.lang.ThreadLocal P23x4> = $stack11;

        return;
    }
}
