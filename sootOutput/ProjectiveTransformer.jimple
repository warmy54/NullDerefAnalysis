public class ProjectiveTransformer extends java.lang.Object implements org.bytedeco.javacv.ImageTransformer
{
    protected static java.lang.ThreadLocal H3x3;
    protected static java.lang.ThreadLocal pts4x1;
    protected org.bytedeco.opencv.opencv_core.CvMat K1;
    protected org.bytedeco.opencv.opencv_core.CvMat K2;
    protected org.bytedeco.opencv.opencv_core.CvMat invK1;
    protected org.bytedeco.opencv.opencv_core.CvMat invK2;
    protected org.bytedeco.opencv.opencv_core.CvMat R;
    protected org.bytedeco.opencv.opencv_core.CvMat t;
    protected org.bytedeco.opencv.opencv_core.CvMat n;
    protected double[] referencePoints1;
    protected double[] referencePoints2;
    protected org.bytedeco.opencv.opencv_core.CvScalar fillColor;
    protected org.bytedeco.opencv.cvkernels$KernelData kernelData;
    protected org.bytedeco.opencv.opencv_core.CvMat[] H;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        ProjectiveTransformer this;
        double[] $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $stack1 = newarray (double)[0];

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveTransformer: void <init>(org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,double[],double[])>(null, null, null, null, null, $stack1, null);

        return;
    }

    public void <init>(double[])
    {
        ProjectiveTransformer this;
        double[] referencePoints;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        referencePoints := @parameter0: double[];

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveTransformer: void <init>(org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,double[],double[])>(null, null, null, null, null, referencePoints, null);

        return;
    }

    public void <init>(org.bytedeco.javacv.ProjectiveDevice, org.bytedeco.javacv.ProjectiveDevice, org.bytedeco.opencv.opencv_core.CvMat, double[], double[])
    {
        ProjectiveTransformer this;
        org.bytedeco.javacv.ProjectiveDevice d1, d2;
        org.bytedeco.opencv.opencv_core.CvMat n, $stack6, $stack7, $stack8, $stack9;
        double[] referencePoints1, referencePoints2;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        d1 := @parameter0: org.bytedeco.javacv.ProjectiveDevice;

        d2 := @parameter1: org.bytedeco.javacv.ProjectiveDevice;

        n := @parameter2: org.bytedeco.opencv.opencv_core.CvMat;

        referencePoints1 := @parameter3: double[];

        referencePoints2 := @parameter4: double[];

        $stack9 = d1.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack8 = d2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat cameraMatrix>;

        $stack7 = d2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $stack6 = d2.<org.bytedeco.javacv.ProjectiveDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        specialinvoke $r0.<org.bytedeco.javacv.ProjectiveTransformer: void <init>(org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,org.bytedeco.opencv.opencv_core.CvMat,double[],double[])>($stack9, $stack8, $stack7, $stack6, n, referencePoints1, referencePoints2);

        return;
    }

    public void <init>(org.bytedeco.opencv.opencv_core.CvMat, org.bytedeco.opencv.opencv_core.CvMat, org.bytedeco.opencv.opencv_core.CvMat, org.bytedeco.opencv.opencv_core.CvMat, org.bytedeco.opencv.opencv_core.CvMat, double[], double[])
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvScalar $stack8;
        org.bytedeco.opencv.opencv_core.CvMat K1, K2, R, t, n, $stack29, $stack32, $stack9, $stack10, $stack11, $stack12, $stack13, $stack14, $stack15;
        double[] referencePoints1, referencePoints2, $stack17, $stack19;
        java.lang.Object $stack16, $stack18;
        org.bytedeco.javacv.ProjectiveTransformer $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r19, $r22, $r23, $r24, $r25, $r26;
        org.bytedeco.opencv.opencv_core.CvArr $r17, $r18, $r20, $r21;

        this := @this: ProjectiveTransformer;

        K1 := @parameter0: org.bytedeco.opencv.opencv_core.CvMat;

        K2 := @parameter1: org.bytedeco.opencv.opencv_core.CvMat;

        R := @parameter2: org.bytedeco.opencv.opencv_core.CvMat;

        t := @parameter3: org.bytedeco.opencv.opencv_core.CvMat;

        n := @parameter4: org.bytedeco.opencv.opencv_core.CvMat;

        referencePoints1 := @parameter5: double[];

        referencePoints2 := @parameter6: double[];

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat K1> = null;

        $r1 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r1.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat K2> = null;

        $r2 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r2.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK1> = null;

        $r3 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r3.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK2> = null;

        $r4 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r4.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat R> = null;

        $r5 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r5.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat t> = null;

        $r6 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r6.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat n> = null;

        $r7 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r7.<org.bytedeco.javacv.ProjectiveTransformer: double[] referencePoints1> = null;

        $r8 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r8.<org.bytedeco.javacv.ProjectiveTransformer: double[] referencePoints2> = null;

        $stack8 = staticinvoke <org.bytedeco.opencv.global.opencv_core: org.bytedeco.opencv.opencv_core.CvScalar cvScalar(double,double,double,double)>(0.0, 0.0, 0.0, 1.0);

        $r9 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r9.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvScalar fillColor> = $stack8;

        $r10 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r10.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData> = null;

        $r11 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r11.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat[] H> = null;

        if K1 != null goto label01;

        $stack9 = null;

        goto label02;

     label01:
        $stack9 = virtualinvoke K1.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label02:
        $r12 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r12.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat K1> = $stack9;

        if K2 != null goto label03;

        $stack10 = null;

        goto label04;

     label03:
        $stack10 = virtualinvoke K2.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label04:
        $r13 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r13.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat K2> = $stack10;

        if K1 != null goto label05;

        $stack11 = null;

        goto label06;

     label05:
        $stack11 = virtualinvoke K1.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label06:
        $r14 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r14.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK1> = $stack11;

        if K2 != null goto label07;

        $stack12 = null;

        goto label08;

     label07:
        $stack12 = virtualinvoke K2.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label08:
        $r15 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r15.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK2> = $stack12;

        if K1 == null goto label09;

        $r16 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack32 = $r16.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK1>;

        $r17 = (org.bytedeco.opencv.opencv_core.CvArr) K1;

        $r18 = (org.bytedeco.opencv.opencv_core.CvArr) $stack32;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r17, $r18);

     label09:
        if K2 == null goto label10;

        $r19 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack29 = $r19.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK2>;

        $r20 = (org.bytedeco.opencv.opencv_core.CvArr) K2;

        $r21 = (org.bytedeco.opencv.opencv_core.CvArr) $stack29;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r20, $r21);

     label10:
        if R != null goto label11;

        $stack13 = null;

        goto label12;

     label11:
        $stack13 = virtualinvoke R.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label12:
        $r22 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r22.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat R> = $stack13;

        if t != null goto label13;

        $stack14 = null;

        goto label14;

     label13:
        $stack14 = virtualinvoke t.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label14:
        $r23 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r23.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat t> = $stack14;

        if n != null goto label15;

        $stack15 = null;

        goto label16;

     label15:
        $stack15 = virtualinvoke n.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat clone()>();

     label16:
        $r24 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r24.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat n> = $stack15;

        if referencePoints1 != null goto label17;

        $stack17 = null;

        goto label18;

     label17:
        $stack16 = virtualinvoke referencePoints1.<java.lang.Object: java.lang.Object clone()>();

        $stack17 = (double[]) $stack16;

     label18:
        $r25 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r25.<org.bytedeco.javacv.ProjectiveTransformer: double[] referencePoints1> = $stack17;

        if referencePoints2 != null goto label19;

        $stack19 = null;

        goto label20;

     label19:
        $stack18 = virtualinvoke referencePoints2.<java.lang.Object: java.lang.Object clone()>();

        $stack19 = (double[]) $stack18;

     label20:
        $r26 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r26.<org.bytedeco.javacv.ProjectiveTransformer: double[] referencePoints2> = $stack19;

        return;
    }

    public org.bytedeco.opencv.opencv_core.CvScalar getFillColor()
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvScalar $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvScalar fillColor>;

        return $stack1;
    }

    public void setFillColor(org.bytedeco.opencv.opencv_core.CvScalar)
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvScalar fillColor;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        fillColor := @parameter0: org.bytedeco.opencv.opencv_core.CvScalar;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvScalar fillColor> = fillColor;

        return;
    }

    public double[] getReferencePoints1()
    {
        ProjectiveTransformer this;
        double[] $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: double[] referencePoints1>;

        return $stack1;
    }

    public double[] getReferencePoints2()
    {
        ProjectiveTransformer this;
        double[] $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: double[] referencePoints2>;

        return $stack1;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getK1()
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvMat $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat K1>;

        return $stack1;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getK2()
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvMat $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat K2>;

        return $stack1;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getInvK1()
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvMat $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK1>;

        return $stack1;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getInvK2()
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvMat $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK2>;

        return $stack1;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getR()
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvMat $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat R>;

        return $stack1;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getT()
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvMat $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat t>;

        return $stack1;
    }

    public org.bytedeco.opencv.opencv_core.CvMat getN()
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvMat $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat n>;

        return $stack1;
    }

    protected void prepareHomography(org.bytedeco.opencv.opencv_core.CvMat, int, org.bytedeco.javacv.ProjectiveTransformer$Parameters, boolean)
    {
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvMat $stack6, $stack7, H, $stack29, $stack32, $stack34, $stack35;
        boolean inverse, $stack36;
        org.bytedeco.javacv.ProjectiveTransformer$Parameters p;
        int pyramidLevel, scale;
        double $stack10, $stack11, $stack12, $stack15, $stack16, $stack17, $stack20, $stack21, $stack22, $stack25, $stack26, $stack27;
        org.bytedeco.javacv.ProjectiveTransformer $r0, $r1, $r2, $r3;
        org.bytedeco.opencv.opencv_core.CvArr $r4, $r5, $r6;

        this := @this: ProjectiveTransformer;

        H := @parameter0: org.bytedeco.opencv.opencv_core.CvMat;

        pyramidLevel := @parameter1: int;

        p := @parameter2: org.bytedeco.javacv.ProjectiveTransformer$Parameters;

        inverse := @parameter3: boolean;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack6 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat K2>;

        if $stack6 == null goto label1;

        $r1 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack32 = $r1.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK1>;

        if $stack32 == null goto label1;

        $r2 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack34 = $r2.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat R>;

        if $stack34 == null goto label1;

        $r3 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack35 = $r3.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat t>;

        if $stack35 == null goto label1;

        $stack36 = p.<org.bytedeco.javacv.ProjectiveTransformer$Parameters: boolean fakeIdentity>;

        if $stack36 == 0 goto label1;

        $r4 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetIdentity(org.bytedeco.opencv.opencv_core.CvArr)>($r4);

        return;

     label1:
        if inverse == 0 goto label2;

        $stack29 = virtualinvoke p.<org.bytedeco.javacv.ProjectiveTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat getH()>();

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(org.bytedeco.opencv.opencv_core.CvMat)>($stack29);

        goto label3;

     label2:
        $stack7 = virtualinvoke p.<org.bytedeco.javacv.ProjectiveTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat getH()>();

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) $stack7;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r5, $r6);

     label3:
        if pyramidLevel <= 0 goto label4;

        scale = 1 << pyramidLevel;

        $stack10 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack11 = (double) scale;

        $stack12 = $stack10 / $stack11;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(2, $stack12);

        $stack15 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(5);

        $stack16 = (double) scale;

        $stack17 = $stack15 / $stack16;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(5, $stack17);

        $stack20 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(6);

        $stack21 = (double) scale;

        $stack22 = $stack20 * $stack21;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(6, $stack22);

        $stack25 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(7);

        $stack26 = (double) scale;

        $stack27 = $stack25 * $stack26;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(7, $stack27);

     label4:
        return;
    }

    public void transform(org.bytedeco.opencv.opencv_core.IplImage, org.bytedeco.opencv.opencv_core.IplImage, org.bytedeco.opencv.opencv_core.CvRect, int, org.bytedeco.javacv.ImageTransformer$Parameters, boolean)
    {
        org.bytedeco.javacv.ImageTransformer$Parameters parameters;
        org.bytedeco.javacv.ProjectiveTransformer$Parameters p;
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvMat $stack11, H, $stack110, $stack118, $stack119;
        int pyramidLevel, $stack16, $stack25, x, y, $stack106, $stack14;
        org.bytedeco.opencv.opencv_core.CvRect roi;
        org.bytedeco.opencv.opencv_core.IplImage dstImage, srcImage;
        boolean inverse, $stack120;
        org.bytedeco.opencv.opencv_core.CvScalar $stack17;
        double $stack29, $stack30, $stack31, $stack32, $stack33, $stack36, $stack37, $stack38, $stack39, $stack40, $stack43, $stack44, $stack45, $stack46, $stack47, $stack50, $stack51, $stack52, $stack53, $stack54, $stack57, $stack58, $stack59, $stack60, $stack61, $stack64, $stack65, $stack66, $stack67, $stack68, $stack74, $stack75, $stack76, $stack77, $stack78, $stack79, $stack80, $stack81, $stack82, $stack85, $stack86, $stack87, $stack88, $stack89, $stack90, $stack91, $stack92, $stack93, $stack96, $stack97, $stack98, $stack99, $stack100, $stack101, $stack102, $stack103, $stack104;
        java.lang.ThreadLocal $stack12;
        java.lang.Object $stack13;
        byte $stack18;
        org.bytedeco.javacv.ProjectiveTransformer $r0, $r1, $r2, $r3, $r6, $r7;
        org.bytedeco.opencv.opencv_core.CvArr $r4, $r5, $r8, $r9;

        this := @this: ProjectiveTransformer;

        srcImage := @parameter0: org.bytedeco.opencv.opencv_core.IplImage;

        dstImage := @parameter1: org.bytedeco.opencv.opencv_core.IplImage;

        roi := @parameter2: org.bytedeco.opencv.opencv_core.CvRect;

        pyramidLevel := @parameter3: int;

        parameters := @parameter4: org.bytedeco.javacv.ImageTransformer$Parameters;

        inverse := @parameter5: boolean;

        p = (org.bytedeco.javacv.ProjectiveTransformer$Parameters) parameters;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack11 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat K2>;

        if $stack11 == null goto label2;

        $r1 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack110 = $r1.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat invK1>;

        if $stack110 == null goto label2;

        $r2 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack118 = $r2.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat R>;

        if $stack118 == null goto label2;

        $r3 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack119 = $r3.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat t>;

        if $stack119 == null goto label2;

        $stack120 = p.<org.bytedeco.javacv.ProjectiveTransformer$Parameters: boolean fakeIdentity>;

        if $stack120 == 0 goto label2;

        if srcImage == dstImage goto label1;

        $r4 = (org.bytedeco.opencv.opencv_core.CvArr) srcImage;

        $r5 = (org.bytedeco.opencv.opencv_core.CvArr) dstImage;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvCopy(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r4, $r5);

     label1:
        return;

     label2:
        $stack12 = <org.bytedeco.javacv.ProjectiveTransformer: java.lang.ThreadLocal H3x3>;

        $stack13 = virtualinvoke $stack12.<java.lang.ThreadLocal: java.lang.Object get()>();

        H = (org.bytedeco.opencv.opencv_core.CvMat) $stack13;

        $r6 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        virtualinvoke $r6.<org.bytedeco.javacv.ProjectiveTransformer: void prepareHomography(org.bytedeco.opencv.opencv_core.CvMat,int,org.bytedeco.javacv.ProjectiveTransformer$Parameters,boolean)>(H, pyramidLevel, p, 1);

        if roi == null goto label5;

        $stack25 = virtualinvoke roi.<org.bytedeco.opencv.opencv_core.CvRect: int x()>();

        if $stack25 != 0 goto label3;

        $stack106 = virtualinvoke roi.<org.bytedeco.opencv.opencv_core.CvRect: int y()>();

        if $stack106 == 0 goto label5;

     label3:
        x = virtualinvoke roi.<org.bytedeco.opencv.opencv_core.CvRect: int x()>();

        y = virtualinvoke roi.<org.bytedeco.opencv.opencv_core.CvRect: int y()>();

        if inverse == 0 goto label4;

        $stack74 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack75 = (double) x;

        $stack76 = $stack74 * $stack75;

        $stack77 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack78 = (double) y;

        $stack79 = $stack77 * $stack78;

        $stack80 = $stack76 + $stack79;

        $stack81 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack82 = $stack80 + $stack81;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(2, $stack82);

        $stack85 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(3);

        $stack86 = (double) x;

        $stack87 = $stack85 * $stack86;

        $stack88 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(4);

        $stack89 = (double) y;

        $stack90 = $stack88 * $stack89;

        $stack91 = $stack87 + $stack90;

        $stack92 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(5);

        $stack93 = $stack91 + $stack92;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(5, $stack93);

        $stack96 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(6);

        $stack97 = (double) x;

        $stack98 = $stack96 * $stack97;

        $stack99 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(7);

        $stack100 = (double) y;

        $stack101 = $stack99 * $stack100;

        $stack102 = $stack98 + $stack101;

        $stack103 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        $stack104 = $stack102 + $stack103;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(8, $stack104);

        goto label5;

     label4:
        $stack29 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(0);

        $stack30 = (double) x;

        $stack31 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(6);

        $stack32 = $stack30 * $stack31;

        $stack33 = $stack29 - $stack32;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(0, $stack33);

        $stack36 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(1);

        $stack37 = (double) x;

        $stack38 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(7);

        $stack39 = $stack37 * $stack38;

        $stack40 = $stack36 - $stack39;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(1, $stack40);

        $stack43 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(2);

        $stack44 = (double) x;

        $stack45 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        $stack46 = $stack44 * $stack45;

        $stack47 = $stack43 - $stack46;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(2, $stack47);

        $stack50 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(3);

        $stack51 = (double) y;

        $stack52 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(6);

        $stack53 = $stack51 * $stack52;

        $stack54 = $stack50 - $stack53;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(3, $stack54);

        $stack57 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(4);

        $stack58 = (double) y;

        $stack59 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(7);

        $stack60 = $stack58 * $stack59;

        $stack61 = $stack57 - $stack60;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(4, $stack61);

        $stack64 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(5);

        $stack65 = (double) y;

        $stack66 = virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(8);

        $stack67 = $stack65 * $stack66;

        $stack68 = $stack64 - $stack67;

        virtualinvoke H.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(int,double)>(5, $stack68);

     label5:
        $stack14 = virtualinvoke srcImage.<org.bytedeco.opencv.opencv_core.IplImage: int origin()>();

        virtualinvoke dstImage.<org.bytedeco.opencv.opencv_core.IplImage: org.bytedeco.opencv.opencv_core.IplImage origin(int)>($stack14);

        if roi != null goto label6;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvResetImageROI(org.bytedeco.opencv.opencv_core.IplImage)>(dstImage);

        goto label7;

     label6:
        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvSetImageROI(org.bytedeco.opencv.opencv_core.IplImage,org.bytedeco.opencv.opencv_core.CvRect)>(dstImage, roi);

     label7:
        if inverse == 0 goto label8;

        $stack18 = 16;

        goto label9;

     label8:
        $stack18 = 0;

     label9:
        $stack16 = 9 | $stack18;

        $r7 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack17 = virtualinvoke $r7.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvScalar getFillColor()>();

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) srcImage;

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) dstImage;

        staticinvoke <org.bytedeco.opencv.global.opencv_imgproc: void cvWarpPerspective(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvMat,int,org.bytedeco.opencv.opencv_core.CvScalar)>($r8, $r9, H, $stack16, $stack17);

        return;
    }

    public void transform(org.bytedeco.opencv.opencv_core.CvMat, org.bytedeco.opencv.opencv_core.CvMat, org.bytedeco.javacv.ImageTransformer$Parameters, boolean)
    {
        org.bytedeco.javacv.ImageTransformer$Parameters parameters;
        org.bytedeco.javacv.ProjectiveTransformer$Parameters p;
        boolean inverse;
        org.bytedeco.opencv.opencv_core.CvMat srcPts, dstPts, $stack10, H;
        java.lang.ThreadLocal $stack8;
        java.lang.Object $stack9;
        ProjectiveTransformer this;
        org.bytedeco.opencv.opencv_core.CvArr $r0, $r1, $r2, $r3;

        this := @this: ProjectiveTransformer;

        srcPts := @parameter0: org.bytedeco.opencv.opencv_core.CvMat;

        dstPts := @parameter1: org.bytedeco.opencv.opencv_core.CvMat;

        parameters := @parameter2: org.bytedeco.javacv.ImageTransformer$Parameters;

        inverse := @parameter3: boolean;

        p = (org.bytedeco.javacv.ProjectiveTransformer$Parameters) parameters;

        if inverse == 0 goto label1;

        $stack8 = <org.bytedeco.javacv.ProjectiveTransformer: java.lang.ThreadLocal H3x3>;

        $stack9 = virtualinvoke $stack8.<java.lang.ThreadLocal: java.lang.Object get()>();

        H = (org.bytedeco.opencv.opencv_core.CvMat) $stack9;

        $stack10 = virtualinvoke p.<org.bytedeco.javacv.ProjectiveTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat getH()>();

        $r0 = (org.bytedeco.opencv.opencv_core.CvArr) $stack10;

        $r1 = (org.bytedeco.opencv.opencv_core.CvArr) H;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvInvert(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r0, $r1);

        goto label2;

     label1:
        H = virtualinvoke p.<org.bytedeco.javacv.ProjectiveTransformer$Parameters: org.bytedeco.opencv.opencv_core.CvMat getH()>();

     label2:
        $r2 = (org.bytedeco.opencv.opencv_core.CvArr) srcPts;

        $r3 = (org.bytedeco.opencv.opencv_core.CvArr) dstPts;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvPerspectiveTransform(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvMat)>($r2, $r3, H);

        return;
    }

    public void transform(org.bytedeco.javacv.ImageTransformer$Data[], org.bytedeco.opencv.opencv_core.CvRect, org.bytedeco.javacv.ImageTransformer$Parameters[], boolean[])
    {
        boolean $stack8, $stack79;
        ProjectiveTransformer this;
        org.bytedeco.opencv.cvkernels$KernelData $stack9, $stack19, $stack23, $stack25, $stack27, $stack31, $stack33, $stack36, $stack39, $stack42, $stack48, $stack52, $stack54, $stack58, $stack62, $stack66, $stack70, $stack74, $stack85, $stack87, $stack89, $stack93, $stack97, $stack101, $stack133, $u1;
        org.bytedeco.javacv.ImageTransformer$Data[] data;
        int $stack11, $stack14, $stack21, $stack29, $stack35, $stack38, $stack41, $stack81, $stack127, $stack128, $stack135, $stack141, $stack142, i, $stack17, $stack18;
        long $stack12, $stack22, $stack30, $stack47, $stack134, $stack136, i#22;
        org.bytedeco.opencv.opencv_core.CvMat[] $stack15, $stack76, $stack83, $stack122, $stack126, $stack13, $stack16;
        org.bytedeco.opencv.opencv_core.CvRect roi;
        org.bytedeco.opencv.opencv_core.CvScalar $stack26;
        org.bytedeco.javacv.ImageTransformer$Data $stack34, $stack37, $stack40, $stack43, $stack50, $stack56, $stack60, $stack64, $stack68, $stack72, $stack77, $stack91, $stack95, $stack99;
        double $stack44, $stack69, $stack73;
        org.bytedeco.opencv.opencv_core.IplImage $stack51, $stack57, $stack61, $stack65, $stack92, $stack96;
        org.bytedeco.javacv.ImageTransformer$Parameters[] parameters;
        org.bytedeco.javacv.ImageTransformer$Parameters $stack78;
        boolean[] inverses;
        org.bytedeco.javacv.ProjectiveTransformer$Parameters $stack80;
        org.bytedeco.opencv.opencv_core.CvMat $stack82, $stack84, $stack123;
        java.nio.DoubleBuffer $stack100;
        byte $stack137;
        java.lang.AssertionError $u0;
        org.bytedeco.javacv.ProjectiveTransformer $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34;

        this := @this: ProjectiveTransformer;

        data := @parameter0: org.bytedeco.javacv.ImageTransformer$Data[];

        roi := @parameter1: org.bytedeco.opencv.opencv_core.CvRect;

        parameters := @parameter2: org.bytedeco.javacv.ImageTransformer$Parameters[];

        inverses := @parameter3: boolean[];

        $stack8 = <org.bytedeco.javacv.ProjectiveTransformer: boolean $assertionsDisabled>;

        if $stack8 != 0 goto label01;

        $stack142 = lengthof data;

        $stack141 = lengthof parameters;

        if $stack142 == $stack141 goto label01;

        $u0 = new java.lang.AssertionError;

        specialinvoke $u0.<java.lang.AssertionError: void <init>()>();

        throw $u0;

     label01:
        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack9 = $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        if $stack9 == null goto label02;

        $r1 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack133 = $r1.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack134 = virtualinvoke $stack133.<org.bytedeco.opencv.cvkernels$KernelData: long capacity()>();

        $stack135 = lengthof data;

        $stack136 = (long) $stack135;

        $stack137 = $stack134 cmp $stack136;

        if $stack137 >= 0 goto label03;

     label02:
        $u1 = new org.bytedeco.opencv.cvkernels$KernelData;

        $stack11 = lengthof data;

        $stack12 = (long) $stack11;

        specialinvoke $u1.<org.bytedeco.opencv.cvkernels$KernelData: void <init>(long)>($stack12);

        $r2 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r2.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData> = $u1;

     label03:
        $r3 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack13 = $r3.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat[] H>;

        if $stack13 == null goto label04;

        $r4 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack126 = $r4.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat[] H>;

        $stack128 = lengthof $stack126;

        $stack127 = lengthof data;

        if $stack128 >= $stack127 goto label06;

     label04:
        $stack14 = lengthof data;

        $stack15 = newarray (org.bytedeco.opencv.opencv_core.CvMat)[$stack14];

        $r5 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $r5.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat[] H> = $stack15;

        i = 0;

     label05:
        $r6 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack16 = $r6.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat[] H>;

        $stack17 = lengthof $stack16;

        if i >= $stack17 goto label06;

        $r7 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack122 = $r7.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat[] H>;

        $stack123 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat create(int,int)>(3, 3);

        $stack122[i] = $stack123;

        i = i + 1;

        goto label05;

     label06:
        i = 0;

     label07:
        $stack18 = lengthof data;

        if i >= $stack18 goto label10;

        $r8 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack48 = $r8.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack47 = (long) i;

        virtualinvoke $stack48.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData position(long)>($stack47);

        $r9 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack52 = $r9.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack50 = data[i];

        $stack51 = $stack50.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage srcImg>;

        virtualinvoke $stack52.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData srcImg(org.bytedeco.opencv.opencv_core.IplImage)>($stack51);

        $r10 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack54 = $r10.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        virtualinvoke $stack54.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData srcImg2(org.bytedeco.opencv.opencv_core.IplImage)>(null);

        $r11 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack58 = $r11.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack56 = data[i];

        $stack57 = $stack56.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage subImg>;

        virtualinvoke $stack58.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData subImg(org.bytedeco.opencv.opencv_core.IplImage)>($stack57);

        $r12 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack62 = $r12.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack60 = data[i];

        $stack61 = $stack60.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage srcDotImg>;

        virtualinvoke $stack62.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData srcDotImg(org.bytedeco.opencv.opencv_core.IplImage)>($stack61);

        $r13 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack66 = $r13.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack64 = data[i];

        $stack65 = $stack64.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage mask>;

        virtualinvoke $stack66.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData mask(org.bytedeco.opencv.opencv_core.IplImage)>($stack65);

        $r14 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack70 = $r14.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack68 = data[i];

        $stack69 = $stack68.<org.bytedeco.javacv.ImageTransformer$Data: double zeroThreshold>;

        virtualinvoke $stack70.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData zeroThreshold(double)>($stack69);

        $r15 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack74 = $r15.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack72 = data[i];

        $stack73 = $stack72.<org.bytedeco.javacv.ImageTransformer$Data: double outlierThreshold>;

        virtualinvoke $stack74.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData outlierThreshold(double)>($stack73);

        $r16 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack76 = $r16.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat[] H>;

        $stack82 = $stack76[i];

        $stack77 = data[i];

        $stack81 = $stack77.<org.bytedeco.javacv.ImageTransformer$Data: int pyramidLevel>;

        $stack78 = parameters[i];

        $stack80 = (org.bytedeco.javacv.ProjectiveTransformer$Parameters) $stack78;

        if inverses != null goto label08;

        $stack79 = 0;

        goto label09;

     label08:
        $stack79 = inverses[i];

     label09:
        $r17 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        virtualinvoke $r17.<org.bytedeco.javacv.ProjectiveTransformer: void prepareHomography(org.bytedeco.opencv.opencv_core.CvMat,int,org.bytedeco.javacv.ProjectiveTransformer$Parameters,boolean)>($stack82, $stack81, $stack80, $stack79);

        $r18 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack85 = $r18.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $r19 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack83 = $r19.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvMat[] H>;

        $stack84 = $stack83[i];

        virtualinvoke $stack85.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData H1(org.bytedeco.opencv.opencv_core.CvMat)>($stack84);

        $r20 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack87 = $r20.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        virtualinvoke $stack87.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData H2(org.bytedeco.opencv.opencv_core.CvMat)>(null);

        $r21 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack89 = $r21.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        virtualinvoke $stack89.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData X(org.bytedeco.opencv.opencv_core.CvMat)>(null);

        $r22 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack93 = $r22.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack91 = data[i];

        $stack92 = $stack91.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage transImg>;

        virtualinvoke $stack93.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData transImg(org.bytedeco.opencv.opencv_core.IplImage)>($stack92);

        $r23 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack97 = $r23.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack95 = data[i];

        $stack96 = $stack95.<org.bytedeco.javacv.ImageTransformer$Data: org.bytedeco.opencv.opencv_core.IplImage dstImg>;

        virtualinvoke $stack97.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData dstImg(org.bytedeco.opencv.opencv_core.IplImage)>($stack96);

        $r24 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack101 = $r24.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack99 = data[i];

        $stack100 = $stack99.<org.bytedeco.javacv.ImageTransformer$Data: java.nio.DoubleBuffer dstDstDot>;

        virtualinvoke $stack101.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData dstDstDot(java.nio.DoubleBuffer)>($stack100);

        i = i + 1;

        goto label07;

     label10:
        $r25 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack19 = $r25.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        i#22 = virtualinvoke $stack19.<org.bytedeco.opencv.cvkernels$KernelData: long capacity()>();

        $r26 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack23 = $r26.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack21 = lengthof data;

        $stack22 = (long) $stack21;

        virtualinvoke $stack23.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.javacpp.Pointer capacity(long)>($stack22);

        $r27 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack25 = $r27.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $r28 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack26 = virtualinvoke $r28.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.opencv_core.CvScalar getFillColor()>();

        staticinvoke <org.bytedeco.javacv.cvkernels: void multiWarpColorTransform(org.bytedeco.opencv.cvkernels$KernelData,org.bytedeco.opencv.opencv_core.CvRect,org.bytedeco.opencv.opencv_core.CvScalar)>($stack25, roi, $stack26);

        $r29 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack27 = $r29.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        virtualinvoke $stack27.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.javacpp.Pointer capacity(long)>(i#22);

        i = 0;

     label11:
        $stack29 = lengthof data;

        if i >= $stack29 goto label12;

        $r30 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack31 = $r30.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack30 = (long) i;

        virtualinvoke $stack31.<org.bytedeco.opencv.cvkernels$KernelData: org.bytedeco.opencv.cvkernels$KernelData position(long)>($stack30);

        $stack34 = data[i];

        $r31 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack33 = $r31.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack35 = virtualinvoke $stack33.<org.bytedeco.opencv.cvkernels$KernelData: int dstCount()>();

        $stack34.<org.bytedeco.javacv.ImageTransformer$Data: int dstCount> = $stack35;

        $stack37 = data[i];

        $r32 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack36 = $r32.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack38 = virtualinvoke $stack36.<org.bytedeco.opencv.cvkernels$KernelData: int dstCountZero()>();

        $stack37.<org.bytedeco.javacv.ImageTransformer$Data: int dstCountZero> = $stack38;

        $stack40 = data[i];

        $r33 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack39 = $r33.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack41 = virtualinvoke $stack39.<org.bytedeco.opencv.cvkernels$KernelData: int dstCountOutlier()>();

        $stack40.<org.bytedeco.javacv.ImageTransformer$Data: int dstCountOutlier> = $stack41;

        $stack43 = data[i];

        $r34 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack42 = $r34.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.opencv.cvkernels$KernelData kernelData>;

        $stack44 = virtualinvoke $stack42.<org.bytedeco.opencv.cvkernels$KernelData: double srcDstDot()>();

        $stack43.<org.bytedeco.javacv.ImageTransformer$Data: double srcDstDot> = $stack44;

        i = i + 1;

        goto label11;

     label12:
        return;
    }

    public org.bytedeco.javacv.ProjectiveTransformer$Parameters createParameters()
    {
        ProjectiveTransformer this;
        org.bytedeco.javacv.ProjectiveTransformer$Parameters $u0;
        org.bytedeco.javacv.ProjectiveTransformer $r0;

        this := @this: ProjectiveTransformer;

        $u0 = new org.bytedeco.javacv.ProjectiveTransformer$Parameters;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        specialinvoke $u0.<org.bytedeco.javacv.ProjectiveTransformer$Parameters: void <init>(org.bytedeco.javacv.ProjectiveTransformer)>($r0);

        return $u0;
    }

    public volatile org.bytedeco.javacv.ImageTransformer$Parameters createParameters()
    {
        ProjectiveTransformer this;
        org.bytedeco.javacv.ProjectiveTransformer$Parameters $stack1;
        org.bytedeco.javacv.ProjectiveTransformer $r0;
        org.bytedeco.javacv.ImageTransformer$Parameters $r1;

        this := @this: ProjectiveTransformer;

        $r0 = (org.bytedeco.javacv.ProjectiveTransformer) this;

        $stack1 = virtualinvoke $r0.<org.bytedeco.javacv.ProjectiveTransformer: org.bytedeco.javacv.ProjectiveTransformer$Parameters createParameters()>();

        $r1 = (org.bytedeco.javacv.ImageTransformer$Parameters) $stack1;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $stack0;
        boolean $stack1, $stack4;
        java.lang.ThreadLocal $stack2, $stack3;

        $stack0 = class "Lorg/bytedeco/javacv/ProjectiveTransformer;";

        $stack1 = virtualinvoke $stack0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $stack1 != 0 goto label1;

        $stack4 = 1;

        goto label2;

     label1:
        $stack4 = 0;

     label2:
        <org.bytedeco.javacv.ProjectiveTransformer: boolean $assertionsDisabled> = $stack4;

        $stack2 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 3);

        <org.bytedeco.javacv.ProjectiveTransformer: java.lang.ThreadLocal H3x3> = $stack2;

        $stack3 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int,int,int)>(4, 1, 6, 2);

        <org.bytedeco.javacv.ProjectiveTransformer: java.lang.ThreadLocal pts4x1> = $stack3;

        return;
    }
}
