public class ProjectorDevice extends org.bytedeco.javacv.ProjectiveDevice
{
    private org.bytedeco.javacv.ProjectorDevice$Settings settings;
    private static java.lang.ThreadLocal B4x3;
    private static java.lang.ThreadLocal x23x1;
    private static java.lang.ThreadLocal x34x1;

    public void <init>(java.lang.String)
    {
        ProjectorDevice this;
        java.lang.String name;

        this := @this: ProjectorDevice;

        name := @parameter0: java.lang.String;

        specialinvoke this.<org.bytedeco.javacv.ProjectiveDevice: void <init>(java.lang.String)>(name);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        ProjectorDevice this;
        java.lang.String name, filename;
        int $stack3, $stack5;
        org.bytedeco.javacv.ProjectorDevice$Settings $stack4, $stack6;
        org.bytedeco.javacv.ProjectorDevice $r0, $r1, $r2, $r3;

        this := @this: ProjectorDevice;

        name := @parameter0: java.lang.String;

        filename := @parameter1: java.lang.String;

        specialinvoke this.<org.bytedeco.javacv.ProjectiveDevice: void <init>(java.lang.String,java.lang.String)>(name, filename);

        $r0 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack4 = $r0.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $r1 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack3 = $r1.<org.bytedeco.javacv.ProjectorDevice: int imageWidth>;

        interfaceinvoke $stack4.<org.bytedeco.javacv.ProjectorDevice$Settings: void setImageWidth(int)>($stack3);

        $r2 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack6 = $r2.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $r3 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack5 = $r3.<org.bytedeco.javacv.ProjectorDevice: int imageHeight>;

        interfaceinvoke $stack6.<org.bytedeco.javacv.ProjectorDevice$Settings: void setImageHeight(int)>($stack5);

        return;
    }

    public void <init>(java.lang.String, org.bytedeco.opencv.opencv_core.FileStorage) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        ProjectorDevice this;
        java.lang.String name;
        org.bytedeco.opencv.opencv_core.FileStorage fs;
        int $stack3, $stack5;
        org.bytedeco.javacv.ProjectorDevice$Settings $stack4, $stack6;
        org.bytedeco.javacv.ProjectorDevice $r0, $r1, $r2, $r3;

        this := @this: ProjectorDevice;

        name := @parameter0: java.lang.String;

        fs := @parameter1: org.bytedeco.opencv.opencv_core.FileStorage;

        specialinvoke this.<org.bytedeco.javacv.ProjectiveDevice: void <init>(java.lang.String,org.bytedeco.opencv.opencv_core.FileStorage)>(name, fs);

        $r0 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack4 = $r0.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $r1 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack3 = $r1.<org.bytedeco.javacv.ProjectorDevice: int imageWidth>;

        interfaceinvoke $stack4.<org.bytedeco.javacv.ProjectorDevice$Settings: void setImageWidth(int)>($stack3);

        $r2 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack6 = $r2.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $r3 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack5 = $r3.<org.bytedeco.javacv.ProjectorDevice: int imageHeight>;

        interfaceinvoke $stack6.<org.bytedeco.javacv.ProjectorDevice$Settings: void setImageHeight(int)>($stack5);

        return;
    }

    public void <init>(org.bytedeco.javacv.ProjectorDevice$Settings) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        ProjectorDevice this;
        org.bytedeco.javacv.ProjectorDevice$Settings settings;
        org.bytedeco.javacv.ProjectiveDevice$Settings $stack2;

        this := @this: ProjectorDevice;

        settings := @parameter0: org.bytedeco.javacv.ProjectorDevice$Settings;

        $stack2 = (org.bytedeco.javacv.ProjectiveDevice$Settings) settings;

        specialinvoke this.<org.bytedeco.javacv.ProjectiveDevice: void <init>(org.bytedeco.javacv.ProjectiveDevice$Settings)>($stack2);

        return;
    }

    public org.bytedeco.javacv.ProjectiveDevice$Settings getSettings()
    {
        ProjectorDevice this;
        org.bytedeco.javacv.ProjectorDevice$Settings $stack1;
        org.bytedeco.javacv.ProjectiveDevice$Settings $stack2;
        org.bytedeco.javacv.ProjectorDevice $r0;

        this := @this: ProjectorDevice;

        $r0 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack1 = $r0.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack2 = (org.bytedeco.javacv.ProjectiveDevice$Settings) $stack1;

        return $stack2;
    }

    public void setSettings(org.bytedeco.javacv.ProjectorDevice$Settings)
    {
        ProjectorDevice this;
        org.bytedeco.javacv.ProjectorDevice$Settings settings;
        org.bytedeco.javacv.ProjectiveDevice$Settings $stack2;
        org.bytedeco.javacv.ProjectorDevice $r0;

        this := @this: ProjectorDevice;

        settings := @parameter0: org.bytedeco.javacv.ProjectorDevice$Settings;

        $stack2 = (org.bytedeco.javacv.ProjectiveDevice$Settings) settings;

        $r0 = (org.bytedeco.javacv.ProjectorDevice) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProjectorDevice: void setSettings(org.bytedeco.javacv.ProjectiveDevice$Settings)>($stack2);

        return;
    }

    public void setSettings(org.bytedeco.javacv.ProjectiveDevice$Settings)
    {
        ProjectorDevice this;
        org.bytedeco.javacv.ProjectiveDevice$Settings settings;
        boolean $stack2, $stack3;
        org.bytedeco.javacv.ProjectorDevice$Settings $stack8, $stack11, $stack19, $stack5, $r1, $r3, $r5;
        java.lang.StringBuilder $stack9, $stack17, $u3;
        java.lang.Object[] $stack10;
        int $stack14, $stack21;
        java.lang.Integer $stack15;
        java.lang.String $stack16, $stack18, $stack20, $stack6;
        org.bytedeco.javacv.ProjectiveDevice$CalibratedSettings $stack27;
        org.bytedeco.javacv.ProjectiveDevice$CalibrationSettings $stack30;
        org.bytedeco.javacv.ProjectorDevice$CalibrationSettings $u0;
        org.bytedeco.javacv.ProjectorDevice$CalibratedSettings $u1;
        org.bytedeco.javacv.ProjectorDevice$SettingsImplementation $u2;
        org.bytedeco.javacv.ProjectorDevice $r0, $r2, $r4, $r6, $r7, $r8, $r9;

        this := @this: ProjectorDevice;

        settings := @parameter0: org.bytedeco.javacv.ProjectiveDevice$Settings;

        specialinvoke this.<org.bytedeco.javacv.ProjectiveDevice: void setSettings(org.bytedeco.javacv.ProjectiveDevice$Settings)>(settings);

        $stack2 = settings instanceof org.bytedeco.javacv.ProjectiveDevice$CalibrationSettings;

        if $stack2 == 0 goto label1;

        $u0 = new org.bytedeco.javacv.ProjectorDevice$CalibrationSettings;

        $stack30 = (org.bytedeco.javacv.ProjectiveDevice$CalibrationSettings) settings;

        specialinvoke $u0.<org.bytedeco.javacv.ProjectorDevice$CalibrationSettings: void <init>(org.bytedeco.javacv.ProjectiveDevice$CalibrationSettings)>($stack30);

        $r0 = (org.bytedeco.javacv.ProjectorDevice) this;

        $r1 = (org.bytedeco.javacv.ProjectorDevice$Settings) $u0;

        $r0.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings> = $r1;

        goto label3;

     label1:
        $stack3 = settings instanceof org.bytedeco.javacv.ProjectiveDevice$CalibratedSettings;

        if $stack3 == 0 goto label2;

        $u1 = new org.bytedeco.javacv.ProjectorDevice$CalibratedSettings;

        $stack27 = (org.bytedeco.javacv.ProjectiveDevice$CalibratedSettings) settings;

        specialinvoke $u1.<org.bytedeco.javacv.ProjectorDevice$CalibratedSettings: void <init>(org.bytedeco.javacv.ProjectiveDevice$CalibratedSettings)>($stack27);

        $r2 = (org.bytedeco.javacv.ProjectorDevice) this;

        $r3 = (org.bytedeco.javacv.ProjectorDevice$Settings) $u1;

        $r2.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings> = $r3;

        goto label3;

     label2:
        $u2 = new org.bytedeco.javacv.ProjectorDevice$SettingsImplementation;

        specialinvoke $u2.<org.bytedeco.javacv.ProjectorDevice$SettingsImplementation: void <init>(org.bytedeco.javacv.ProjectiveDevice$Settings)>(settings);

        $r4 = (org.bytedeco.javacv.ProjectorDevice) this;

        $r5 = (org.bytedeco.javacv.ProjectorDevice$Settings) $u2;

        $r4.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings> = $r5;

     label3:
        $r6 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack5 = $r6.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack6 = interfaceinvoke $stack5.<org.bytedeco.javacv.ProjectorDevice$Settings: java.lang.String getName()>();

        if $stack6 == null goto label4;

        $r7 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack19 = $r7.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack20 = interfaceinvoke $stack19.<org.bytedeco.javacv.ProjectorDevice$Settings: java.lang.String getName()>();

        $stack21 = virtualinvoke $stack20.<java.lang.String: int length()>();

        if $stack21 != 0 goto label5;

     label4:
        $r8 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack8 = $r8.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $u3 = new java.lang.StringBuilder;

        specialinvoke $u3.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Projector ");

        $stack10 = newarray (java.lang.Object)[1];

        $r9 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack11 = $r9.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack14 = interfaceinvoke $stack11.<org.bytedeco.javacv.ProjectorDevice$Settings: int getScreenNumber()>();

        $stack15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack14);

        $stack10[0] = $stack15;

        $stack16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%2d", $stack10);

        $stack17 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack8.<org.bytedeco.javacv.ProjectorDevice$Settings: void setName(java.lang.String)>($stack18);

     label5:
        return;
    }

    public org.bytedeco.javacv.CanvasFrame createCanvasFrame() throws org.bytedeco.javacv.CanvasFrame$Exception
    {
        ProjectorDevice this;
        org.bytedeco.javacv.ProjectorDevice$Settings $stack5, $stack8, $stack10, $stack12, $stack14, $stack21, $stack32, $stack35, $stack39, $stack44;
        int $stack6, $stack9, $stack11, $stack13, $stack15, $stack37, $stack47, $stack48, $stack49, $stack50, $stack51, $stack52;
        java.lang.Class $stack17, $stack25, $stack26, $stack28, $stack29;
        java.lang.Package $stack18;
        java.lang.String $stack19, $stack24, $stack34, $stack60;
        java.lang.StringBuilder $stack20, $stack23, $u1;
        boolean $stack22, $stack57;
        java.lang.Class[] $stack27;
        java.lang.reflect.Constructor $stack30;
        java.lang.Object[] $stack31;
        java.lang.Integer $stack38;
        double $stack41;
        java.lang.Double $stack42;
        java.lang.Object $stack43;
        long $stack45;
        org.bytedeco.javacv.CanvasFrame$Exception $stack59, $u2;
        java.lang.reflect.InvocationTargetException $stack76;
        java.lang.NoSuchMethodException $stack79;
        java.lang.IllegalArgumentException $stack80;
        java.lang.IllegalAccessException $stack81;
        java.lang.InstantiationException $stack82;
        java.lang.ClassNotFoundException $stack83;
        org.bytedeco.javacv.CanvasFrame c;
        java.lang.Throwable cause, $r9, $r10;
        java.awt.Dimension ex#16;
        java.awt.DisplayMode $u0;
        org.bytedeco.javacv.ProjectorDevice $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r14;

        this := @this: ProjectorDevice;

        $r0 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack5 = $r0.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack6 = interfaceinvoke $stack5.<org.bytedeco.javacv.ProjectorDevice$Settings: int getScreenNumber()>();

        if $stack6 >= 0 goto label01;

        return null;

     label01:
        $u0 = new java.awt.DisplayMode;

        $r1 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack8 = $r1.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack9 = interfaceinvoke $stack8.<org.bytedeco.javacv.ProjectorDevice$Settings: int getImageWidth()>();

        $r2 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack10 = $r2.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack11 = interfaceinvoke $stack10.<org.bytedeco.javacv.ProjectorDevice$Settings: int getImageHeight()>();

        $r3 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack12 = $r3.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack13 = interfaceinvoke $stack12.<org.bytedeco.javacv.ProjectorDevice$Settings: int getBitDepth()>();

        $r4 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack14 = $r4.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack15 = interfaceinvoke $stack14.<org.bytedeco.javacv.ProjectorDevice$Settings: int getRefreshRate()>();

        specialinvoke $u0.<java.awt.DisplayMode: void <init>(int,int,int,int)>($stack9, $stack11, $stack13, $stack15);

        c = null;

        cause = null;

     label02:
        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack17 = class "Lorg/bytedeco/javacv/CanvasFrame;";

        $stack18 = virtualinvoke $stack17.<java.lang.Class: java.lang.Package getPackage()>();

        $stack19 = virtualinvoke $stack18.<java.lang.Package: java.lang.String getName()>();

        $stack20 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $r5 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack21 = $r5.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack22 = interfaceinvoke $stack21.<org.bytedeco.javacv.ProjectorDevice$Settings: boolean isUseOpenGL()>();

        if $stack22 == 0 goto label03;

        $stack60 = ".GLCanvasFrame";

        goto label04;

     label03:
        $stack60 = ".CanvasFrame";

     label04:
        $stack23 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack60);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack25 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "Lorg/bytedeco/javacv/CanvasFrame;");

        $stack27 = newarray (java.lang.Class)[4];

        $stack27[0] = class "Ljava/lang/String;";

        $stack28 = <java.lang.Integer: java.lang.Class TYPE>;

        $stack27[1] = $stack28;

        $stack27[2] = class "Ljava/awt/DisplayMode;";

        $stack29 = <java.lang.Double: java.lang.Class TYPE>;

        $stack27[3] = $stack29;

        $stack30 = virtualinvoke $stack26.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($stack27);

        $stack31 = newarray (java.lang.Object)[4];

        $r6 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack32 = $r6.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack34 = interfaceinvoke $stack32.<org.bytedeco.javacv.ProjectorDevice$Settings: java.lang.String getName()>();

        $stack31[0] = $stack34;

        $r7 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack35 = $r7.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack37 = interfaceinvoke $stack35.<org.bytedeco.javacv.ProjectorDevice$Settings: int getScreenNumber()>();

        $stack38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack37);

        $stack31[1] = $stack38;

        $stack31[2] = $u0;

        $r8 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack39 = $r8.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack41 = interfaceinvoke $stack39.<org.bytedeco.javacv.ProjectorDevice$Settings: double getResponseGamma()>();

        $stack42 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($stack41);

        $stack31[3] = $stack42;

        $stack43 = virtualinvoke $stack30.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($stack31);

        c = (org.bytedeco.javacv.CanvasFrame) $stack43;

     label05:
        goto label12;

     label06:
        $stack83 := @caughtexception;

        cause = $stack83;

        goto label12;

     label07:
        $stack82 := @caughtexception;

        cause = $stack82;

        goto label12;

     label08:
        $stack81 := @caughtexception;

        cause = $stack81;

        goto label12;

     label09:
        $stack80 := @caughtexception;

        cause = $stack80;

        goto label12;

     label10:
        $stack79 := @caughtexception;

        cause = $stack79;

        goto label12;

     label11:
        $stack76 := @caughtexception;

        cause = virtualinvoke $stack76.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

     label12:
        if cause == null goto label14;

        $stack57 = cause instanceof org.bytedeco.javacv.CanvasFrame$Exception;

        if $stack57 == 0 goto label13;

        $stack59 = (org.bytedeco.javacv.CanvasFrame$Exception) cause;

        $r9 = (java.lang.Throwable) $stack59;

        throw $r9;

     label13:
        $u2 = new org.bytedeco.javacv.CanvasFrame$Exception;

        specialinvoke $u2.<org.bytedeco.javacv.CanvasFrame$Exception: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create CanvasFrame", cause);

        $r10 = (java.lang.Throwable) $u2;

        throw $r10;

     label14:
        $r11 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack44 = $r11.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice$Settings settings>;

        $stack45 = interfaceinvoke $stack44.<org.bytedeco.javacv.ProjectorDevice$Settings: long getLatency()>();

        virtualinvoke c.<org.bytedeco.javacv.CanvasFrame: void setLatency(long)>($stack45);

        ex#16 = virtualinvoke c.<org.bytedeco.javacv.CanvasFrame: java.awt.Dimension getCanvasSize()>();

        $stack48 = ex#16.<java.awt.Dimension: int width>;

        $r12 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack47 = $r12.<org.bytedeco.javacv.ProjectorDevice: int imageWidth>;

        if $stack48 != $stack47 goto label15;

        $stack52 = ex#16.<java.awt.Dimension: int height>;

        $r13 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack51 = $r13.<org.bytedeco.javacv.ProjectorDevice: int imageHeight>;

        if $stack52 == $stack51 goto label16;

     label15:
        $stack50 = ex#16.<java.awt.Dimension: int width>;

        $stack49 = ex#16.<java.awt.Dimension: int height>;

        $r14 = (org.bytedeco.javacv.ProjectorDevice) this;

        virtualinvoke $r14.<org.bytedeco.javacv.ProjectorDevice: void rescale(int,int)>($stack50, $stack49);

     label16:
        return c;

        catch java.lang.ClassNotFoundException from label02 to label05 with label06;
        catch java.lang.InstantiationException from label02 to label05 with label07;
        catch java.lang.IllegalAccessException from label02 to label05 with label08;
        catch java.lang.IllegalArgumentException from label02 to label05 with label09;
        catch java.lang.NoSuchMethodException from label02 to label05 with label10;
        catch java.lang.reflect.InvocationTargetException from label02 to label05 with label11;
    }

    public double getAttenuation(double, double, org.bytedeco.opencv.opencv_core.CvMat, double)
    {
        java.lang.ThreadLocal $stack19, $stack21, $stack23;
        java.lang.Object $stack20, $stack22, $stack24;
        org.bytedeco.opencv.opencv_core.CvMat B, x2, x3, n, $stack28, $stack29;
        ProjectorDevice this;
        double d, x, y, $stack32, $stack33, distance2, distance, $stack36, $stack37, $stack38, $stack39, $stack40, $stack41, $stack42, cosangle, attenuation;
        double[] $stack26;
        org.bytedeco.javacv.ProjectorDevice $r0, $r4, $r5;
        org.bytedeco.opencv.opencv_core.CvArr $r1, $r2, $r3, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        this := @this: ProjectorDevice;

        x := @parameter0: double;

        y := @parameter1: double;

        n := @parameter2: org.bytedeco.opencv.opencv_core.CvMat;

        d := @parameter3: double;

        $stack19 = <org.bytedeco.javacv.ProjectorDevice: java.lang.ThreadLocal B4x3>;

        $stack20 = virtualinvoke $stack19.<java.lang.ThreadLocal: java.lang.Object get()>();

        B = (org.bytedeco.opencv.opencv_core.CvMat) $stack20;

        $stack21 = <org.bytedeco.javacv.ProjectorDevice: java.lang.ThreadLocal x23x1>;

        $stack22 = virtualinvoke $stack21.<java.lang.ThreadLocal: java.lang.Object get()>();

        x2 = (org.bytedeco.opencv.opencv_core.CvMat) $stack22;

        $stack23 = <org.bytedeco.javacv.ProjectorDevice: java.lang.ThreadLocal x34x1>;

        $stack24 = virtualinvoke $stack23.<java.lang.ThreadLocal: java.lang.Object get()>();

        x3 = (org.bytedeco.opencv.opencv_core.CvMat) $stack24;

        $r0 = (org.bytedeco.javacv.ProjectorDevice) this;

        virtualinvoke $r0.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.opencv.opencv_core.CvMat getBackProjectionMatrix(org.bytedeco.opencv.opencv_core.CvMat,double,org.bytedeco.opencv.opencv_core.CvMat)>(n, d, B);

        $stack26 = newarray (double)[3];

        $stack26[0] = x;

        $stack26[1] = y;

        $stack26[2] = 1.0;

        virtualinvoke x2.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat put(double[])>($stack26);

        $r1 = (org.bytedeco.opencv.opencv_core.CvArr) B;

        $r2 = (org.bytedeco.opencv.opencv_core.CvArr) x2;

        $r3 = (org.bytedeco.opencv.opencv_core.CvArr) x3;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvMatMul(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r1, $r2, $r3);

        $r4 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack29 = $r4.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.opencv.opencv_core.CvMat R>;

        $r5 = (org.bytedeco.javacv.ProjectorDevice) this;

        $stack28 = $r5.<org.bytedeco.javacv.ProjectorDevice: org.bytedeco.opencv.opencv_core.CvMat T>;

        $r6 = (org.bytedeco.opencv.opencv_core.CvArr) $stack29;

        $r7 = (org.bytedeco.opencv.opencv_core.CvArr) $stack28;

        $r8 = (org.bytedeco.opencv.opencv_core.CvArr) x2;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvGEMM(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,int)>($r6, $r7, -1.0, null, 0.0, $r8, 1);

        virtualinvoke x3.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat rows(int)>(3);

        $stack32 = virtualinvoke x3.<org.bytedeco.opencv.opencv_core.CvMat: double get(int)>(3);

        $stack33 = 1.0 / $stack32;

        $r9 = (org.bytedeco.opencv.opencv_core.CvArr) x3;

        $r10 = (org.bytedeco.opencv.opencv_core.CvArr) x2;

        $r11 = (org.bytedeco.opencv.opencv_core.CvArr) x2;

        staticinvoke <org.bytedeco.opencv.global.opencv_core: void cvAddWeighted(org.bytedeco.opencv.opencv_core.CvArr,double,org.bytedeco.opencv.opencv_core.CvArr,double,double,org.bytedeco.opencv.opencv_core.CvArr)>($r9, $stack33, $r10, -1.0, 0.0, $r11);

        $r12 = (org.bytedeco.opencv.opencv_core.CvArr) x2;

        $r13 = (org.bytedeco.opencv.opencv_core.CvArr) x2;

        distance2 = staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvDotProduct(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r12, $r13);

        distance = staticinvoke <java.lang.Math: double sqrt(double)>(distance2);

        $stack36 = staticinvoke <java.lang.Math: double signum(double)>(d);

        $stack37 = neg $stack36;

        $r14 = (org.bytedeco.opencv.opencv_core.CvArr) x2;

        $r15 = (org.bytedeco.opencv.opencv_core.CvArr) n;

        $stack38 = staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvDotProduct(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r14, $r15);

        $stack39 = $stack37 * $stack38;

        $r16 = (org.bytedeco.opencv.opencv_core.CvArr) n;

        $r17 = (org.bytedeco.opencv.opencv_core.CvArr) n;

        $stack40 = staticinvoke <org.bytedeco.opencv.global.opencv_core: double cvDotProduct(org.bytedeco.opencv.opencv_core.CvArr,org.bytedeco.opencv.opencv_core.CvArr)>($r16, $r17);

        $stack41 = staticinvoke <java.lang.Math: double sqrt(double)>($stack40);

        $stack42 = distance * $stack41;

        cosangle = $stack39 / $stack42;

        attenuation = cosangle / distance2;

        virtualinvoke x3.<org.bytedeco.opencv.opencv_core.CvMat: org.bytedeco.opencv.opencv_core.CvMat rows(int)>(4);

        return attenuation;
    }

    public static org.bytedeco.javacv.ProjectorDevice[] read(java.lang.String) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        org.bytedeco.opencv.opencv_core.FileStorage $stack3;
        java.lang.String filename;
        org.bytedeco.javacv.ProjectorDevice[] devices;

        filename := @parameter0: java.lang.String;

        $stack3 = new org.bytedeco.opencv.opencv_core.FileStorage;

        specialinvoke $stack3.<org.bytedeco.opencv.opencv_core.FileStorage: void <init>(java.lang.String,int)>(filename, 0);

        devices = staticinvoke <org.bytedeco.javacv.ProjectorDevice: org.bytedeco.javacv.ProjectorDevice[] read(org.bytedeco.opencv.opencv_core.FileStorage)>($stack3);

        virtualinvoke $stack3.<org.bytedeco.opencv.opencv_core.FileStorage: void release()>();

        return devices;
    }

    public static org.bytedeco.javacv.ProjectorDevice[] read(org.bytedeco.opencv.opencv_core.FileStorage) throws org.bytedeco.javacv.ProjectiveDevice$Exception
    {
        org.bytedeco.opencv.opencv_core.FileStorage fs;
        org.bytedeco.opencv.opencv_core.FileNode node, n;
        org.bytedeco.opencv.opencv_core.FileNodeIterator seq;
        long $stack10;
        int count, i;
        org.bytedeco.javacv.ProjectorDevice[] devices;
        boolean $stack12;
        org.bytedeco.javacpp.BytePointer $stack13;
        java.lang.String name;
        org.bytedeco.javacv.ProjectorDevice $stack15;

        fs := @parameter0: org.bytedeco.opencv.opencv_core.FileStorage;

        node = virtualinvoke fs.<org.bytedeco.opencv.opencv_core.FileStorage: org.bytedeco.opencv.opencv_core.FileNode get(java.lang.String)>("Projectors");

        seq = virtualinvoke node.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.opencv.opencv_core.FileNodeIterator begin()>();

        $stack10 = virtualinvoke seq.<org.bytedeco.opencv.opencv_core.FileNodeIterator: long remaining()>();

        count = (int) $stack10;

        devices = newarray (org.bytedeco.javacv.ProjectorDevice)[count];

        i = 0;

     label1:
        if i >= count goto label4;

        n = virtualinvoke seq.<org.bytedeco.opencv.opencv_core.FileNodeIterator: org.bytedeco.opencv.opencv_core.FileNode multiply()>();

        $stack12 = virtualinvoke n.<org.bytedeco.opencv.opencv_core.FileNode: boolean empty()>();

        if $stack12 == 0 goto label2;

        goto label3;

     label2:
        $stack13 = virtualinvoke n.<org.bytedeco.opencv.opencv_core.FileNode: org.bytedeco.javacpp.BytePointer asBytePointer()>();

        name = virtualinvoke $stack13.<org.bytedeco.javacpp.BytePointer: java.lang.String getString()>();

        $stack15 = new org.bytedeco.javacv.ProjectorDevice;

        specialinvoke $stack15.<org.bytedeco.javacv.ProjectorDevice: void <init>(java.lang.String,org.bytedeco.opencv.opencv_core.FileStorage)>(name, fs);

        devices[i] = $stack15;

     label3:
        i = i + 1;

        virtualinvoke seq.<org.bytedeco.opencv.opencv_core.FileNodeIterator: org.bytedeco.opencv.opencv_core.FileNodeIterator increment()>();

        goto label1;

     label4:
        return devices;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $stack0, $stack1, $stack2;

        $stack0 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(4, 3);

        <org.bytedeco.javacv.ProjectorDevice: java.lang.ThreadLocal B4x3> = $stack0;

        $stack1 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(3, 1);

        <org.bytedeco.javacv.ProjectorDevice: java.lang.ThreadLocal x23x1> = $stack1;

        $stack2 = staticinvoke <org.bytedeco.opencv.opencv_core.CvMat: java.lang.ThreadLocal createThreadLocal(int,int)>(4, 1);

        <org.bytedeco.javacv.ProjectorDevice: java.lang.ThreadLocal x34x1> = $stack2;

        return;
    }
}
