public class ReactorDependencyXMLFilter extends org.apache.maven.model.transform.AbstractEventXMLFilter
{
    private boolean parsingDependency;
    private java.lang.String state;
    private java.lang.String dependencyWhitespace;
    private boolean hasVersion;
    private java.lang.String groupId;
    private java.lang.String artifactId;
    private final java.util.function.BiFunction reactorVersionMapper;

    public void <init>(java.util.function.BiFunction)
    {
        ReactorDependencyXMLFilter this;
        java.util.function.BiFunction reactorVersionMapper;
        org.apache.maven.model.transform.ReactorDependencyXMLFilter $r0;

        this := @this: ReactorDependencyXMLFilter;

        reactorVersionMapper := @parameter0: java.util.function.BiFunction;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void <init>()>();

        $r0 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r0.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.util.function.BiFunction reactorVersionMapper> = reactorVersionMapper;

        return;
    }

    public void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        boolean $stack5, $stack8, $stack9, $stack10, $stack17, $stack6;
        java.lang.String uri, localName, qName, $stack7, $stack16;
        org.xml.sax.Attributes atts;
        org.apache.maven.model.transform.ReactorDependencyXMLFilter $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: ReactorDependencyXMLFilter;

        uri := @parameter0: java.lang.String;

        localName := @parameter1: java.lang.String;

        qName := @parameter2: java.lang.String;

        atts := @parameter3: org.xml.sax.Attributes;

        $r0 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack5 = $r0.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean parsingDependency>;

        if $stack5 != 0 goto label1;

        $stack16 = "dependency";

        $stack17 = virtualinvoke $stack16.<java.lang.String: boolean equals(java.lang.Object)>(localName);

        if $stack17 == 0 goto label1;

        $r1 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r1.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean parsingDependency> = 1;

     label1:
        $r2 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack6 = $r2.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean parsingDependency>;

        if $stack6 == 0 goto label2;

        $r3 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r3.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String state> = localName;

        $r4 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack8 = $r4.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean hasVersion>;

        $stack7 = "version";

        $stack9 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(localName);

        $stack10 = $stack8 | $stack9;

        $r5 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r5.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean hasVersion> = $stack10;

     label2:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(uri, localName, qName, atts);

        return;
    }

    public void characters(char[], int, int) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        boolean $stack8, $stack11, $stack23, $stack24;
        char[] ch;
        int start, length, $stack10;
        java.lang.String eventState, $stack12, $stack13, $stack18, $stack19, $stack20, $stack21, $u0;
        byte l7;
        org.apache.maven.model.transform.ReactorDependencyXMLFilter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: ReactorDependencyXMLFilter;

        ch := @parameter0: char[];

        start := @parameter1: int;

        length := @parameter2: int;

        $r0 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack8 = $r0.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean parsingDependency>;

        if $stack8 == 0 goto label8;

        $r1 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        eventState = $r1.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String state>;

        $u0 = new java.lang.String;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>(ch, start, length);

        l7 = -1;

        $stack10 = virtualinvoke eventState.<java.lang.String: int hashCode()>();

        lookupswitch($stack10)
        {
            case -26291381: goto label1;
            case 240640653: goto label3;
            case 293428218: goto label2;
            default: goto label4;
        };

     label1:
        $stack24 = virtualinvoke eventState.<java.lang.String: boolean equals(java.lang.Object)>("dependency");

        if $stack24 == 0 goto label4;

        l7 = 0;

        goto label4;

     label2:
        $stack11 = virtualinvoke eventState.<java.lang.String: boolean equals(java.lang.Object)>("groupId");

        if $stack11 == 0 goto label4;

        l7 = 1;

        goto label4;

     label3:
        $stack23 = virtualinvoke eventState.<java.lang.String: boolean equals(java.lang.Object)>("artifactId");

        if $stack23 == 0 goto label4;

        l7 = 2;

     label4:
        tableswitch(l7)
        {
            case 0: goto label5;
            case 1: goto label6;
            case 2: goto label7;
            default: goto label8;
        };

     label5:
        $r2 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack20 = $r2.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String dependencyWhitespace>;

        $stack21 = staticinvoke <org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String nullSafeAppend(java.lang.String,java.lang.String)>($stack20, $u0);

        $r3 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r3.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String dependencyWhitespace> = $stack21;

        goto label8;

     label6:
        $r4 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack18 = $r4.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String groupId>;

        $stack19 = staticinvoke <org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String nullSafeAppend(java.lang.String,java.lang.String)>($stack18, $u0);

        $r5 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r5.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String groupId> = $stack19;

        goto label8;

     label7:
        $r6 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack12 = $r6.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String artifactId>;

        $stack13 = staticinvoke <org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String nullSafeAppend(java.lang.String,java.lang.String)>($stack12, $u0);

        $r7 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r7.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String artifactId> = $stack13;

        goto label8;

     label8:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void characters(char[],int,int)>(ch, start, length);

        return;
    }

    public void endElement(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        boolean $stack10, $stack12, $stack13;
        java.lang.String uri, localName, qName, version, $stack33, $stack38, $stack40, versionQName;
        int $stack11, $stack37, $stack42;
        org.apache.maven.model.transform.AbstractEventXMLFilter$Includer i;
        char[] $stack35, $stack39;
        java.lang.Throwable $stack59, $stack60;
        byte l5;
        org.apache.maven.model.transform.ReactorDependencyXMLFilter $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        this := @this: ReactorDependencyXMLFilter;

        uri := @parameter0: java.lang.String;

        localName := @parameter1: java.lang.String;

        qName := @parameter2: java.lang.String;

        $r0 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack10 = $r0.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean parsingDependency>;

        if $stack10 == 0 goto label13;

        l5 = -1;

        $stack11 = virtualinvoke localName.<java.lang.String: int hashCode()>();

        lookupswitch($stack11)
        {
            case -26291381: goto label01;
            default: goto label02;
        };

     label01:
        $stack12 = virtualinvoke localName.<java.lang.String: boolean equals(java.lang.Object)>("dependency");

        if $stack12 == 0 goto label02;

        l5 = 0;

     label02:
        lookupswitch(l5)
        {
            case 0: goto label03;
            default: goto label13;
        };

     label03:
        $r1 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack13 = $r1.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean hasVersion>;

        if $stack13 != 0 goto label12;

        $r2 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        version = specialinvoke $r2.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String getVersion()>();

        if version == null goto label12;

        i = specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: org.apache.maven.model.transform.AbstractEventXMLFilter$Includer include()>();

     label04:
        $r3 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack33 = $r3.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String dependencyWhitespace>;

        if $stack33 == null goto label05;

        $r4 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack38 = $r4.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String dependencyWhitespace>;

        $stack39 = virtualinvoke $stack38.<java.lang.String: char[] toCharArray()>();

        $r5 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack40 = $r5.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String dependencyWhitespace>;

        $stack42 = virtualinvoke $stack40.<java.lang.String: int length()>();

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void characters(char[],int,int)>($stack39, 0, $stack42);

     label05:
        versionQName = staticinvoke <org.apache.maven.model.transform.sax.SAXEventUtils: java.lang.String renameQName(java.lang.String,java.lang.String)>(qName, "version");

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>(uri, "version", versionQName, null);

        $stack35 = virtualinvoke version.<java.lang.String: char[] toCharArray()>();

        $stack37 = virtualinvoke version.<java.lang.String: int length()>();

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void characters(char[],int,int)>($stack35, 0, $stack37);

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endElement(java.lang.String,java.lang.String,java.lang.String)>(uri, "version", versionQName);

     label06:
        if i == null goto label12;

        interfaceinvoke i.<org.apache.maven.model.transform.AbstractEventXMLFilter$Includer: void close()>();

        goto label12;

     label07:
        $stack60 := @caughtexception;

        if i == null goto label11;

     label08:
        interfaceinvoke i.<org.apache.maven.model.transform.AbstractEventXMLFilter$Includer: void close()>();

     label09:
        goto label11;

     label10:
        $stack59 := @caughtexception;

        virtualinvoke $stack60.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($stack59);

     label11:
        throw $stack60;

     label12:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void executeEvents()>();

        $r6 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r6.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean parsingDependency> = 0;

        $r7 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r7.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean hasVersion> = 0;

        $r8 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r8.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String dependencyWhitespace> = null;

        $r9 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r9.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String groupId> = null;

        $r10 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r10.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String artifactId> = null;

        goto label13;

     label13:
        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endElement(java.lang.String,java.lang.String,java.lang.String)>(uri, localName, qName);

        $r11 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $r11.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String state> = "";

        return;

        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    private java.lang.String getVersion()
    {
        ReactorDependencyXMLFilter this;
        java.lang.String $stack1, $stack2, $stack5;
        java.util.function.BiFunction $stack3;
        java.lang.Object $stack4;
        org.apache.maven.model.transform.ReactorDependencyXMLFilter $r0, $r1, $r2;

        this := @this: ReactorDependencyXMLFilter;

        $r0 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack3 = $r0.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.util.function.BiFunction reactorVersionMapper>;

        $r1 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack2 = $r1.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String groupId>;

        $r2 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack1 = $r2.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String artifactId>;

        $stack4 = interfaceinvoke $stack3.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>($stack2, $stack1);

        $stack5 = (java.lang.String) $stack4;

        return $stack5;
    }

    protected boolean isParsing()
    {
        ReactorDependencyXMLFilter this;
        boolean $stack1;
        org.apache.maven.model.transform.ReactorDependencyXMLFilter $r0;

        this := @this: ReactorDependencyXMLFilter;

        $r0 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: boolean parsingDependency>;

        return $stack1;
    }

    protected java.lang.String getState()
    {
        ReactorDependencyXMLFilter this;
        java.lang.String $stack1;
        org.apache.maven.model.transform.ReactorDependencyXMLFilter $r0;

        this := @this: ReactorDependencyXMLFilter;

        $r0 = (org.apache.maven.model.transform.ReactorDependencyXMLFilter) this;

        $stack1 = $r0.<org.apache.maven.model.transform.ReactorDependencyXMLFilter: java.lang.String state>;

        return $stack1;
    }

    public volatile void comment(char[], int, int) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        char[] l1;
        int l2, l3;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: char[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void comment(char[],int,int)>(l1, l2, l3);

        return;
    }

    public volatile void endCDATA() throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;

        this := @this: ReactorDependencyXMLFilter;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endCDATA()>();

        return;
    }

    public volatile void startCDATA() throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;

        this := @this: ReactorDependencyXMLFilter;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startCDATA()>();

        return;
    }

    public volatile void endEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        java.lang.String l1;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: java.lang.String;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endEntity(java.lang.String)>(l1);

        return;
    }

    public volatile void startEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        java.lang.String l1;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: java.lang.String;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startEntity(java.lang.String)>(l1);

        return;
    }

    public volatile void endDTD() throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;

        this := @this: ReactorDependencyXMLFilter;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endDTD()>();

        return;
    }

    public volatile void startDTD(java.lang.String, java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        java.lang.String l1, l2, l3;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        l3 := @parameter2: java.lang.String;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startDTD(java.lang.String,java.lang.String,java.lang.String)>(l1, l2, l3);

        return;
    }

    public volatile void skippedEntity(java.lang.String) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        java.lang.String l1;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: java.lang.String;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void skippedEntity(java.lang.String)>(l1);

        return;
    }

    public volatile void processingInstruction(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        java.lang.String l1, l2;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void processingInstruction(java.lang.String,java.lang.String)>(l1, l2);

        return;
    }

    public volatile void ignorableWhitespace(char[], int, int) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        char[] l1;
        int l2, l3;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: char[];

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void ignorableWhitespace(char[],int,int)>(l1, l2, l3);

        return;
    }

    public volatile void endPrefixMapping(java.lang.String) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        java.lang.String l1;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: java.lang.String;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endPrefixMapping(java.lang.String)>(l1);

        return;
    }

    public volatile void startPrefixMapping(java.lang.String, java.lang.String) throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;
        java.lang.String l1, l2;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: java.lang.String;

        l2 := @parameter1: java.lang.String;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startPrefixMapping(java.lang.String,java.lang.String)>(l1, l2);

        return;
    }

    public volatile void endDocument() throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;

        this := @this: ReactorDependencyXMLFilter;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void endDocument()>();

        return;
    }

    public volatile void startDocument() throws org.xml.sax.SAXException
    {
        ReactorDependencyXMLFilter this;

        this := @this: ReactorDependencyXMLFilter;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void startDocument()>();

        return;
    }

    public volatile void setDocumentLocator(org.xml.sax.Locator)
    {
        ReactorDependencyXMLFilter this;
        org.xml.sax.Locator l1;

        this := @this: ReactorDependencyXMLFilter;

        l1 := @parameter0: org.xml.sax.Locator;

        specialinvoke this.<org.apache.maven.model.transform.AbstractEventXMLFilter: void setDocumentLocator(org.xml.sax.Locator)>(l1);

        return;
    }
}
