public class RelativePathXMLFilterTest extends org.apache.maven.model.transform.AbstractXMLFilterTests
{

    public void <init>()
    {
        RelativePathXMLFilterTest this;

        this := @this: RelativePathXMLFilterTest;

        specialinvoke this.<org.apache.maven.model.transform.AbstractXMLFilterTests: void <init>()>();

        return;
    }

    protected org.apache.maven.model.transform.RelativePathXMLFilter getFilter()
    {
        org.apache.maven.model.transform.RelativePathXMLFilter $stack1;
        RelativePathXMLFilterTest this;

        this := @this: RelativePathXMLFilterTest;

        $stack1 = new org.apache.maven.model.transform.RelativePathXMLFilter;

        specialinvoke $stack1.<org.apache.maven.model.transform.RelativePathXMLFilter: void <init>()>();

        return $stack1;
    }

    public void testRelativePath() throws java.lang.Exception
    {
        RelativePathXMLFilterTest this;
        java.lang.String actual;
        org.xmlunit.assertj.XmlAssert $stack5;
        org.xmlunit.assertj.CompareAssert $stack6;
        org.apache.maven.model.transform.RelativePathXMLFilterTest $r0;

        this := @this: RelativePathXMLFilterTest;

        $r0 = (org.apache.maven.model.transform.RelativePathXMLFilterTest) this;

        actual = virtualinvoke $r0.<org.apache.maven.model.transform.RelativePathXMLFilterTest: java.lang.String transform(java.lang.String)>("<project>\n  <parent>\n    <groupId>GROUPID</groupId>\n    <artifactId>PARENT</artifactId>\n    <version>VERSION</version>\n    <relativePath>../pom.xml</relativePath>\n  </parent>\n  <artifactId>PROJECT</artifactId>\n</project>");

        $stack5 = staticinvoke <org.xmlunit.assertj.XmlAssert: org.xmlunit.assertj.XmlAssert assertThat(java.lang.Object)>(actual);

        $stack6 = virtualinvoke $stack5.<org.xmlunit.assertj.XmlAssert: org.xmlunit.assertj.CompareAssert and(java.lang.Object)>("<project>\n  <parent>\n    <groupId>GROUPID</groupId>\n    <artifactId>PARENT</artifactId>\n    <version>VERSION</version>\n  </parent>\n  <artifactId>PROJECT</artifactId>\n</project>");

        virtualinvoke $stack6.<org.xmlunit.assertj.CompareAssert: org.xmlunit.assertj.CompareAssert areIdentical()>();

        return;
    }

    public void testRelativePathNS() throws java.lang.Exception
    {
        RelativePathXMLFilterTest this;
        java.lang.String actual;
        org.xmlunit.assertj.XmlAssert $stack5;
        org.xmlunit.assertj.CompareAssert $stack6;
        org.apache.maven.model.transform.RelativePathXMLFilterTest $r0;

        this := @this: RelativePathXMLFilterTest;

        $r0 = (org.apache.maven.model.transform.RelativePathXMLFilterTest) this;

        actual = virtualinvoke $r0.<org.apache.maven.model.transform.RelativePathXMLFilterTest: java.lang.String transform(java.lang.String)>("<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <parent>\n    <groupId>GROUPID</groupId>\n    <artifactId>PARENT</artifactId>\n    <version>VERSION</version>\n    <relativePath>../pom.xml</relativePath>\n  </parent>\n  <artifactId>PROJECT</artifactId>\n</project>");

        $stack5 = staticinvoke <org.xmlunit.assertj.XmlAssert: org.xmlunit.assertj.XmlAssert assertThat(java.lang.Object)>(actual);

        $stack6 = virtualinvoke $stack5.<org.xmlunit.assertj.XmlAssert: org.xmlunit.assertj.CompareAssert and(java.lang.Object)>("<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <parent>\n    <groupId>GROUPID</groupId>\n    <artifactId>PARENT</artifactId>\n    <version>VERSION</version>\n  </parent>\n  <artifactId>PROJECT</artifactId>\n</project>");

        virtualinvoke $stack6.<org.xmlunit.assertj.CompareAssert: org.xmlunit.assertj.CompareAssert areIdentical()>();

        return;
    }

    public void testRelativePathPasNS() throws java.lang.Exception
    {
        RelativePathXMLFilterTest this;
        java.lang.String actual;
        org.xmlunit.assertj.XmlAssert $stack5;
        org.xmlunit.assertj.CompareAssert $stack6;
        org.apache.maven.model.transform.RelativePathXMLFilterTest $r0;

        this := @this: RelativePathXMLFilterTest;

        $r0 = (org.apache.maven.model.transform.RelativePathXMLFilterTest) this;

        actual = virtualinvoke $r0.<org.apache.maven.model.transform.RelativePathXMLFilterTest: java.lang.String transform(java.lang.String)>("<p:project xmlns:p=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <p:parent>\n    <p:groupId>GROUPID</p:groupId>\n    <p:artifactId>PARENT</p:artifactId>\n    <p:version>VERSION</p:version>\n    <p:relativePath>../pom.xml</p:relativePath>\n  </p:parent>\n  <p:artifactId>PROJECT</p:artifactId>\n</p:project>");

        $stack5 = staticinvoke <org.xmlunit.assertj.XmlAssert: org.xmlunit.assertj.XmlAssert assertThat(java.lang.Object)>(actual);

        $stack6 = virtualinvoke $stack5.<org.xmlunit.assertj.XmlAssert: org.xmlunit.assertj.CompareAssert and(java.lang.Object)>("<p:project xmlns:p=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <p:parent>\n    <p:groupId>GROUPID</p:groupId>\n    <p:artifactId>PARENT</p:artifactId>\n    <p:version>VERSION</p:version>\n  </p:parent>\n  <p:artifactId>PROJECT</p:artifactId>\n</p:project>");

        virtualinvoke $stack6.<org.xmlunit.assertj.CompareAssert: org.xmlunit.assertj.CompareAssert areIdentical()>();

        return;
    }

    protected volatile org.apache.maven.model.transform.sax.AbstractSAXFilter getFilter() throws javax.xml.transform.TransformerException, org.xml.sax.SAXException, javax.xml.parsers.ParserConfigurationException
    {
        RelativePathXMLFilterTest this;
        org.apache.maven.model.transform.RelativePathXMLFilter $stack1;
        org.apache.maven.model.transform.RelativePathXMLFilterTest $r0;
        org.apache.maven.model.transform.sax.AbstractSAXFilter $r1;

        this := @this: RelativePathXMLFilterTest;

        $r0 = (org.apache.maven.model.transform.RelativePathXMLFilterTest) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.transform.RelativePathXMLFilterTest: org.apache.maven.model.transform.RelativePathXMLFilter getFilter()>();

        $r1 = (org.apache.maven.model.transform.sax.AbstractSAXFilter) $stack1;

        return $r1;
    }
}
