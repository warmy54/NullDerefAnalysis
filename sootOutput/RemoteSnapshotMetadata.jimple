final class RemoteSnapshotMetadata extends org.apache.maven.repository.internal.MavenSnapshotMetadata
{
    public static final java.lang.String DEFAULT_SNAPSHOT_TIMESTAMP_FORMAT;
    public static final java.util.TimeZone DEFAULT_SNAPSHOT_TIME_ZONE;
    private final java.util.Map versions;

    void <init>(org.eclipse.aether.artifact.Artifact, boolean, java.util.Date)
    {
        RemoteSnapshotMetadata this;
        org.eclipse.aether.artifact.Artifact artifact;
        boolean legacyFormat;
        org.apache.maven.artifact.repository.metadata.Metadata $stack4;
        java.util.Date timestamp;
        java.util.LinkedHashMap $u0;
        org.apache.maven.repository.internal.RemoteSnapshotMetadata $r0;

        this := @this: RemoteSnapshotMetadata;

        artifact := @parameter0: org.eclipse.aether.artifact.Artifact;

        legacyFormat := @parameter1: boolean;

        timestamp := @parameter2: java.util.Date;

        $stack4 = staticinvoke <org.apache.maven.repository.internal.RemoteSnapshotMetadata: org.apache.maven.artifact.repository.metadata.Metadata createRepositoryMetadata(org.eclipse.aether.artifact.Artifact,boolean)>(artifact, legacyFormat);

        specialinvoke this.<org.apache.maven.repository.internal.MavenSnapshotMetadata: void <init>(org.apache.maven.artifact.repository.metadata.Metadata,java.io.File,boolean,java.util.Date)>($stack4, null, legacyFormat, timestamp);

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $r0 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $r0.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Map versions> = $u0;

        return;
    }

    private void <init>(org.apache.maven.artifact.repository.metadata.Metadata, java.io.File, boolean, java.util.Date)
    {
        RemoteSnapshotMetadata this;
        org.apache.maven.artifact.repository.metadata.Metadata metadata;
        java.io.File file;
        boolean legacyFormat;
        java.util.Date timestamp;
        java.util.LinkedHashMap $u0;
        org.apache.maven.repository.internal.RemoteSnapshotMetadata $r0;

        this := @this: RemoteSnapshotMetadata;

        metadata := @parameter0: org.apache.maven.artifact.repository.metadata.Metadata;

        file := @parameter1: java.io.File;

        legacyFormat := @parameter2: boolean;

        timestamp := @parameter3: java.util.Date;

        specialinvoke this.<org.apache.maven.repository.internal.MavenSnapshotMetadata: void <init>(org.apache.maven.artifact.repository.metadata.Metadata,java.io.File,boolean,java.util.Date)>(metadata, file, legacyFormat, timestamp);

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $r0 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $r0.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Map versions> = $u0;

        return;
    }

    public org.apache.maven.repository.internal.MavenMetadata setFile(java.io.File)
    {
        RemoteSnapshotMetadata this;
        java.io.File file;
        java.util.Date $stack3;
        boolean $stack4;
        org.apache.maven.artifact.repository.metadata.Metadata $stack5;
        org.apache.maven.repository.internal.RemoteSnapshotMetadata $u0, $r0, $r1, $r2;
        org.apache.maven.repository.internal.MavenMetadata $r3;

        this := @this: RemoteSnapshotMetadata;

        file := @parameter0: java.io.File;

        $u0 = new org.apache.maven.repository.internal.RemoteSnapshotMetadata;

        $r0 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack5 = $r0.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: org.apache.maven.artifact.repository.metadata.Metadata metadata>;

        $r1 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack4 = $r1.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: boolean legacyFormat>;

        $r2 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack3 = $r2.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Date timestamp>;

        specialinvoke $u0.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: void <init>(org.apache.maven.artifact.repository.metadata.Metadata,java.io.File,boolean,java.util.Date)>($stack5, file, $stack4, $stack3);

        $r3 = (org.apache.maven.repository.internal.MavenMetadata) $u0;

        return $r3;
    }

    public java.lang.String getExpandedVersion(org.eclipse.aether.artifact.Artifact)
    {
        RemoteSnapshotMetadata this;
        org.eclipse.aether.artifact.Artifact artifact;
        java.lang.String $stack3, $stack4, key, $stack9;
        java.util.Map $stack6;
        java.lang.Object $stack7;
        org.apache.maven.artifact.repository.metadata.SnapshotVersion $stack8;
        org.apache.maven.repository.internal.RemoteSnapshotMetadata $r0, $r1;

        this := @this: RemoteSnapshotMetadata;

        artifact := @parameter0: org.eclipse.aether.artifact.Artifact;

        $stack3 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>();

        $stack4 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getExtension()>();

        $r0 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        key = virtualinvoke $r0.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.lang.String getKey(java.lang.String,java.lang.String)>($stack3, $stack4);

        $r1 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack6 = $r1.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Map versions>;

        $stack7 = interfaceinvoke $stack6.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack8 = (org.apache.maven.artifact.repository.metadata.SnapshotVersion) $stack7;

        $stack9 = virtualinvoke $stack8.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: java.lang.String getVersion()>();

        return $stack9;
    }

    protected void merge(org.apache.maven.artifact.repository.metadata.Metadata)
    {
        RemoteSnapshotMetadata this;
        org.apache.maven.artifact.repository.metadata.Metadata $stack8, $stack10, $stack13, recessive, $stack22, $stack93;
        org.apache.maven.artifact.repository.metadata.Versioning $stack9, $stack11, $stack14, $stack23, utcDateFormatter#14, $u3;
        java.util.Collection $stack16, $stack19, $stack26;
        boolean $stack21, $stack29, $stack36, $stack42, $stack18;
        java.util.Map $stack25, $stack35, $stack38, $stack46;
        java.util.List $stack27;
        java.lang.Object $stack31, $stack40;
        java.lang.String $stack32, $stack33, $stack44, $stack45, $stack47, $stack48, $stack49, $stack53, $stack62, $stack65, $stack89, lastUpdated, version, qualifier;
        java.lang.StringBuilder $stack54, $stack55, $stack57, $stack66, $stack67, $u4, $u5;
        int $stack56, $stack61, $stack63, $stack64, $stack86, $stack87;
        java.util.TimeZone $stack84;
        java.util.Date $stack88, $stack91;
        org.apache.maven.artifact.repository.metadata.Snapshot snapshot, $u2;
        java.util.Iterator utcDateFormatter#5, versioning#15;
        org.eclipse.aether.artifact.Artifact versioning#10;
        org.apache.maven.artifact.repository.metadata.SnapshotVersion version#16, $u6;
        java.text.SimpleDateFormat $u0;
        java.util.GregorianCalendar $u1;
        java.util.ArrayList $u7;
        org.apache.maven.repository.internal.RemoteSnapshotMetadata $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        this := @this: RemoteSnapshotMetadata;

        recessive := @parameter0: org.apache.maven.artifact.repository.metadata.Metadata;

        $r0 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack8 = $r0.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: org.apache.maven.artifact.repository.metadata.Metadata metadata>;

        $stack9 = virtualinvoke $stack8.<org.apache.maven.artifact.repository.metadata.Metadata: org.apache.maven.artifact.repository.metadata.Versioning getVersioning()>();

        if $stack9 != null goto label1;

        $u0 = new java.text.SimpleDateFormat;

        specialinvoke $u0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMdd.HHmmss");

        $u1 = new java.util.GregorianCalendar;

        specialinvoke $u1.<java.util.GregorianCalendar: void <init>()>();

        virtualinvoke $u0.<java.text.DateFormat: void setCalendar(java.util.Calendar)>($u1);

        $stack84 = <org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.TimeZone DEFAULT_SNAPSHOT_TIME_ZONE>;

        virtualinvoke $u0.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>($stack84);

        $u2 = new org.apache.maven.artifact.repository.metadata.Snapshot;

        specialinvoke $u2.<org.apache.maven.artifact.repository.metadata.Snapshot: void <init>()>();

        snapshot = $u2;

        $stack86 = staticinvoke <org.apache.maven.repository.internal.RemoteSnapshotMetadata: int getBuildNumber(org.apache.maven.artifact.repository.metadata.Metadata)>(recessive);

        $stack87 = $stack86 + 1;

        virtualinvoke $u2.<org.apache.maven.artifact.repository.metadata.Snapshot: void setBuildNumber(int)>($stack87);

        $r1 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack88 = $r1.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Date timestamp>;

        $stack89 = virtualinvoke $u0.<java.text.DateFormat: java.lang.String format(java.util.Date)>($stack88);

        virtualinvoke $u2.<org.apache.maven.artifact.repository.metadata.Snapshot: void setTimestamp(java.lang.String)>($stack89);

        $u3 = new org.apache.maven.artifact.repository.metadata.Versioning;

        specialinvoke $u3.<org.apache.maven.artifact.repository.metadata.Versioning: void <init>()>();

        virtualinvoke $u3.<org.apache.maven.artifact.repository.metadata.Versioning: void setSnapshot(org.apache.maven.artifact.repository.metadata.Snapshot)>($u2);

        $r2 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack91 = $r2.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Date timestamp>;

        virtualinvoke $u3.<org.apache.maven.artifact.repository.metadata.Versioning: void setLastUpdatedTimestamp(java.util.Date)>($stack91);

        lastUpdated = virtualinvoke $u3.<org.apache.maven.artifact.repository.metadata.Versioning: java.lang.String getLastUpdated()>();

        $r3 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack93 = $r3.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: org.apache.maven.artifact.repository.metadata.Metadata metadata>;

        virtualinvoke $stack93.<org.apache.maven.artifact.repository.metadata.Metadata: void setVersioning(org.apache.maven.artifact.repository.metadata.Versioning)>($u3);

        goto label2;

     label1:
        $r4 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack10 = $r4.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: org.apache.maven.artifact.repository.metadata.Metadata metadata>;

        $stack11 = virtualinvoke $stack10.<org.apache.maven.artifact.repository.metadata.Metadata: org.apache.maven.artifact.repository.metadata.Versioning getVersioning()>();

        snapshot = virtualinvoke $stack11.<org.apache.maven.artifact.repository.metadata.Versioning: org.apache.maven.artifact.repository.metadata.Snapshot getSnapshot()>();

        $r5 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack13 = $r5.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: org.apache.maven.artifact.repository.metadata.Metadata metadata>;

        $stack14 = virtualinvoke $stack13.<org.apache.maven.artifact.repository.metadata.Metadata: org.apache.maven.artifact.repository.metadata.Versioning getVersioning()>();

        lastUpdated = virtualinvoke $stack14.<org.apache.maven.artifact.repository.metadata.Versioning: java.lang.String getLastUpdated()>();

     label2:
        $r6 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack16 = $r6.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Collection artifacts>;

        utcDateFormatter#5 = interfaceinvoke $stack16.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $stack18 = interfaceinvoke utcDateFormatter#5.<java.util.Iterator: boolean hasNext()>();

        if $stack18 == 0 goto label5;

        $stack40 = interfaceinvoke utcDateFormatter#5.<java.util.Iterator: java.lang.Object next()>();

        versioning#10 = (org.eclipse.aether.artifact.Artifact) $stack40;

        version = interfaceinvoke versioning#10.<org.eclipse.aether.artifact.Artifact: java.lang.String getVersion()>();

        $stack42 = virtualinvoke version.<java.lang.String: boolean endsWith(java.lang.String)>("SNAPSHOT");

        if $stack42 == 0 goto label4;

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack53 = virtualinvoke snapshot.<org.apache.maven.artifact.repository.metadata.Snapshot: java.lang.String getTimestamp()>();

        $stack54 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53);

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $stack56 = virtualinvoke snapshot.<org.apache.maven.artifact.repository.metadata.Snapshot: int getBuildNumber()>();

        $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack56);

        qualifier = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.String toString()>();

        $u5 = new java.lang.StringBuilder;

        specialinvoke $u5.<java.lang.StringBuilder: void <init>()>();

        $stack61 = virtualinvoke version.<java.lang.String: int length()>();

        $stack62 = "SNAPSHOT";

        $stack63 = virtualinvoke $stack62.<java.lang.String: int length()>();

        $stack64 = $stack61 - $stack63;

        $stack65 = virtualinvoke version.<java.lang.String: java.lang.String substring(int,int)>(0, $stack64);

        $stack66 = virtualinvoke $u5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack65);

        $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(qualifier);

        version = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $u6 = new org.apache.maven.artifact.repository.metadata.SnapshotVersion;

        specialinvoke $u6.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: void <init>()>();

        $stack44 = interfaceinvoke versioning#10.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>();

        virtualinvoke $u6.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: void setClassifier(java.lang.String)>($stack44);

        $stack45 = interfaceinvoke versioning#10.<org.eclipse.aether.artifact.Artifact: java.lang.String getExtension()>();

        virtualinvoke $u6.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: void setExtension(java.lang.String)>($stack45);

        virtualinvoke $u6.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: void setVersion(java.lang.String)>(version);

        virtualinvoke $u6.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: void setUpdated(java.lang.String)>(lastUpdated);

        $r7 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack46 = $r7.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Map versions>;

        $stack47 = virtualinvoke $u6.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: java.lang.String getClassifier()>();

        $stack48 = virtualinvoke $u6.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: java.lang.String getExtension()>();

        $r8 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack49 = virtualinvoke $r8.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.lang.String getKey(java.lang.String,java.lang.String)>($stack47, $stack48);

        interfaceinvoke $stack46.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack49, $u6);

        goto label3;

     label5:
        $r9 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack19 = $r9.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Collection artifacts>;

        interfaceinvoke $stack19.<java.util.Collection: void clear()>();

        utcDateFormatter#14 = virtualinvoke recessive.<org.apache.maven.artifact.repository.metadata.Metadata: org.apache.maven.artifact.repository.metadata.Versioning getVersioning()>();

        if utcDateFormatter#14 == null goto label8;

        $stack27 = virtualinvoke utcDateFormatter#14.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List getSnapshotVersions()>();

        versioning#15 = interfaceinvoke $stack27.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $stack29 = interfaceinvoke versioning#15.<java.util.Iterator: boolean hasNext()>();

        if $stack29 == 0 goto label8;

        $stack31 = interfaceinvoke versioning#15.<java.util.Iterator: java.lang.Object next()>();

        version#16 = (org.apache.maven.artifact.repository.metadata.SnapshotVersion) $stack31;

        $stack32 = virtualinvoke version#16.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: java.lang.String getClassifier()>();

        $stack33 = virtualinvoke version#16.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: java.lang.String getExtension()>();

        $r10 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        qualifier = virtualinvoke $r10.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.lang.String getKey(java.lang.String,java.lang.String)>($stack32, $stack33);

        $r11 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack35 = $r11.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Map versions>;

        $stack36 = interfaceinvoke $stack35.<java.util.Map: boolean containsKey(java.lang.Object)>(qualifier);

        if $stack36 != 0 goto label7;

        $r12 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack38 = $r12.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Map versions>;

        interfaceinvoke $stack38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(qualifier, version#16);

     label7:
        goto label6;

     label8:
        $r13 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack21 = $r13.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: boolean legacyFormat>;

        if $stack21 != 0 goto label9;

        $r14 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack22 = $r14.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: org.apache.maven.artifact.repository.metadata.Metadata metadata>;

        $stack23 = virtualinvoke $stack22.<org.apache.maven.artifact.repository.metadata.Metadata: org.apache.maven.artifact.repository.metadata.Versioning getVersioning()>();

        $u7 = new java.util.ArrayList;

        $r15 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack25 = $r15.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.Map versions>;

        $stack26 = interfaceinvoke $stack25.<java.util.Map: java.util.Collection values()>();

        specialinvoke $u7.<java.util.ArrayList: void <init>(java.util.Collection)>($stack26);

        virtualinvoke $stack23.<org.apache.maven.artifact.repository.metadata.Versioning: void setSnapshotVersions(java.util.List)>($u7);

     label9:
        return;
    }

    private static int getBuildNumber(org.apache.maven.artifact.repository.metadata.Metadata)
    {
        org.apache.maven.artifact.repository.metadata.Metadata metadata;
        org.apache.maven.artifact.repository.metadata.Versioning versioning;
        org.apache.maven.artifact.repository.metadata.Snapshot snapshot;
        int $stack7, number;

        metadata := @parameter0: org.apache.maven.artifact.repository.metadata.Metadata;

        number = 0;

        versioning = virtualinvoke metadata.<org.apache.maven.artifact.repository.metadata.Metadata: org.apache.maven.artifact.repository.metadata.Versioning getVersioning()>();

        if versioning == null goto label1;

        snapshot = virtualinvoke versioning.<org.apache.maven.artifact.repository.metadata.Versioning: org.apache.maven.artifact.repository.metadata.Snapshot getSnapshot()>();

        if snapshot == null goto label1;

        $stack7 = virtualinvoke snapshot.<org.apache.maven.artifact.repository.metadata.Snapshot: int getBuildNumber()>();

        if $stack7 <= 0 goto label1;

        number = virtualinvoke snapshot.<org.apache.maven.artifact.repository.metadata.Snapshot: int getBuildNumber()>();

     label1:
        return number;
    }

    public volatile org.eclipse.aether.metadata.Metadata setFile(java.io.File)
    {
        RemoteSnapshotMetadata this;
        java.io.File l1;
        org.apache.maven.repository.internal.MavenMetadata $stack2;
        org.apache.maven.repository.internal.RemoteSnapshotMetadata $r0;
        org.eclipse.aether.metadata.Metadata $r1;

        this := @this: RemoteSnapshotMetadata;

        l1 := @parameter0: java.io.File;

        $r0 = (org.apache.maven.repository.internal.RemoteSnapshotMetadata) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.internal.RemoteSnapshotMetadata: org.apache.maven.repository.internal.MavenMetadata setFile(java.io.File)>(l1);

        $r1 = (org.eclipse.aether.metadata.Metadata) $stack2;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.TimeZone $stack0;

        <RemoteSnapshotMetadata: java.lang.String DEFAULT_SNAPSHOT_TIMESTAMP_FORMAT> = "yyyyMMdd.HHmmss";

        $stack0 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("Etc/UTC");

        <org.apache.maven.repository.internal.RemoteSnapshotMetadata: java.util.TimeZone DEFAULT_SNAPSHOT_TIME_ZONE> = $stack0;

        return;
    }
}
