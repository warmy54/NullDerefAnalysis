public class Reporting extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable, org.apache.maven.model.InputLocationTracker
{
    private java.lang.String excludeDefaults;
    private java.lang.String outputDirectory;
    private java.util.List plugins;
    private java.util.Map locations;
    private org.apache.maven.model.InputLocation location;
    private org.apache.maven.model.InputLocation excludeDefaultsLocation;
    private org.apache.maven.model.InputLocation outputDirectoryLocation;
    private org.apache.maven.model.InputLocation pluginsLocation;
    java.util.Map reportPluginMap;

    public void <init>()
    {
        Reporting this;

        this := @this: Reporting;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void addPlugin(org.apache.maven.model.ReportPlugin)
    {
        Reporting this;
        java.util.List $stack2;
        org.apache.maven.model.ReportPlugin reportPlugin;
        org.apache.maven.model.Reporting $r0;

        this := @this: Reporting;

        reportPlugin := @parameter0: org.apache.maven.model.ReportPlugin;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(reportPlugin);

        return;
    }

    public org.apache.maven.model.Reporting clone()
    {
        Reporting this;
        java.lang.Object $stack4, $stack15;
        java.util.List $stack5, $stack11, $stack16;
        java.util.Map $stack6, $stack8;
        java.util.Iterator l2;
        boolean $stack13;
        org.apache.maven.model.ReportPlugin item, $stack17;
        java.lang.Exception $stack20;
        java.lang.Class $stack23;
        java.lang.String $stack24, $stack27;
        java.lang.StringBuilder $stack25, $stack26, $u2;
        java.lang.Throwable $stack28;
        java.lang.RuntimeException $stack29;
        org.apache.maven.model.Reporting copy, $r0, $r1;
        java.util.ArrayList $u0;
        java.util.LinkedHashMap $u1;
        java.lang.UnsupportedOperationException $u3;

        this := @this: Reporting;

     label1:
        $stack4 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        copy = (org.apache.maven.model.Reporting) $stack4;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack5 = $r0.<org.apache.maven.model.Reporting: java.util.List plugins>;

        if $stack5 == null goto label3;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.model.Reporting: java.util.List plugins> = $u0;

        $r1 = (org.apache.maven.model.Reporting) this;

        $stack11 = $r1.<org.apache.maven.model.Reporting: java.util.List plugins>;

        l2 = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack13 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label3;

        $stack15 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.model.ReportPlugin) $stack15;

        $stack16 = copy.<org.apache.maven.model.Reporting: java.util.List plugins>;

        $stack17 = virtualinvoke item.<org.apache.maven.model.ReportPlugin: org.apache.maven.model.ReportPlugin clone()>();

        interfaceinvoke $stack16.<java.util.List: boolean add(java.lang.Object)>($stack17);

        goto label2;

     label3:
        $stack6 = copy.<org.apache.maven.model.Reporting: java.util.Map locations>;

        if $stack6 == null goto label4;

        $u1 = new java.util.LinkedHashMap;

        $stack8 = copy.<org.apache.maven.model.Reporting: java.util.Map locations>;

        specialinvoke $u1.<java.util.LinkedHashMap: void <init>(java.util.Map)>($stack8);

        copy.<org.apache.maven.model.Reporting: java.util.Map locations> = $u1;

     label4:
        return copy;

     label5:
        $stack20 := @caughtexception;

        $u3 = new java.lang.UnsupportedOperationException;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack23 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack24 = virtualinvoke $stack23.<java.lang.Class: java.lang.String getName()>();

        $stack25 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support clone()");

        $stack27 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack27);

        $stack28 = virtualinvoke $u3.<java.lang.UnsupportedOperationException: java.lang.Throwable initCause(java.lang.Throwable)>($stack20);

        $stack29 = (java.lang.RuntimeException) $stack28;

        throw $stack29;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public java.lang.String getExcludeDefaults()
    {
        Reporting this;
        java.lang.String $stack1;
        org.apache.maven.model.Reporting $r0;

        this := @this: Reporting;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack1 = $r0.<org.apache.maven.model.Reporting: java.lang.String excludeDefaults>;

        return $stack1;
    }

    public org.apache.maven.model.InputLocation getLocation(java.lang.Object)
    {
        java.lang.Object key;
        boolean $stack4, $stack7, $stack14, $stack15, $stack16;
        Reporting this;
        org.apache.maven.model.InputLocation $stack5, $stack8, $stack9, $stack10, $stack11, $stack12;
        java.lang.String l2;
        int $stack6;
        byte l3;
        org.apache.maven.model.Reporting $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: Reporting;

        key := @parameter0: java.lang.Object;

        $stack4 = key instanceof java.lang.String;

        if $stack4 == 0 goto label11;

        l2 = (java.lang.String) key;

        l3 = -1;

        $stack6 = virtualinvoke l2.<java.lang.String: int hashCode()>();

        lookupswitch($stack6)
        {
            case -1653164436: goto label03;
            case -475629664: goto label04;
            case -241452468: goto label02;
            case 0: goto label01;
            default: goto label05;
        };

     label01:
        $stack7 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack7 == 0 goto label05;

        l3 = 0;

        goto label05;

     label02:
        $stack14 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("excludeDefaults");

        if $stack14 == 0 goto label05;

        l3 = 1;

        goto label05;

     label03:
        $stack16 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("outputDirectory");

        if $stack16 == 0 goto label05;

        l3 = 2;

        goto label05;

     label04:
        $stack15 = virtualinvoke l2.<java.lang.String: boolean equals(java.lang.Object)>("plugins");

        if $stack15 == 0 goto label05;

        l3 = 3;

     label05:
        tableswitch(l3)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            default: goto label10;
        };

     label06:
        $r0 = (org.apache.maven.model.Reporting) this;

        $stack11 = $r0.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation location>;

        return $stack11;

     label07:
        $r1 = (org.apache.maven.model.Reporting) this;

        $stack10 = $r1.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation excludeDefaultsLocation>;

        return $stack10;

     label08:
        $r2 = (org.apache.maven.model.Reporting) this;

        $stack9 = $r2.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation outputDirectoryLocation>;

        return $stack9;

     label09:
        $r3 = (org.apache.maven.model.Reporting) this;

        $stack8 = $r3.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation pluginsLocation>;

        return $stack8;

     label10:
        $r4 = (org.apache.maven.model.Reporting) this;

        $stack12 = specialinvoke $r4.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation getOtherLocation(java.lang.Object)>(key);

        return $stack12;

     label11:
        $r5 = (org.apache.maven.model.Reporting) this;

        $stack5 = specialinvoke $r5.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation getOtherLocation(java.lang.Object)>(key);

        return $stack5;
    }

    public void setLocation(java.lang.Object, org.apache.maven.model.InputLocation)
    {
        java.lang.Object key;
        boolean $stack5, $stack7, $stack9, $stack10, $stack11;
        Reporting this;
        org.apache.maven.model.InputLocation location;
        java.lang.String l3;
        int $stack6;
        byte l4;
        org.apache.maven.model.Reporting $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: Reporting;

        key := @parameter0: java.lang.Object;

        location := @parameter1: org.apache.maven.model.InputLocation;

        $stack5 = key instanceof java.lang.String;

        if $stack5 == 0 goto label11;

        l3 = (java.lang.String) key;

        l4 = -1;

        $stack6 = virtualinvoke l3.<java.lang.String: int hashCode()>();

        lookupswitch($stack6)
        {
            case -1653164436: goto label03;
            case -475629664: goto label04;
            case -241452468: goto label02;
            case 0: goto label01;
            default: goto label05;
        };

     label01:
        $stack7 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack7 == 0 goto label05;

        l4 = 0;

        goto label05;

     label02:
        $stack9 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("excludeDefaults");

        if $stack9 == 0 goto label05;

        l4 = 1;

        goto label05;

     label03:
        $stack11 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("outputDirectory");

        if $stack11 == 0 goto label05;

        l4 = 2;

        goto label05;

     label04:
        $stack10 = virtualinvoke l3.<java.lang.String: boolean equals(java.lang.Object)>("plugins");

        if $stack10 == 0 goto label05;

        l4 = 3;

     label05:
        tableswitch(l4)
        {
            case 0: goto label06;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            default: goto label10;
        };

     label06:
        $r0 = (org.apache.maven.model.Reporting) this;

        $r0.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation location> = location;

        return;

     label07:
        $r1 = (org.apache.maven.model.Reporting) this;

        $r1.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation excludeDefaultsLocation> = location;

        return;

     label08:
        $r2 = (org.apache.maven.model.Reporting) this;

        $r2.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation outputDirectoryLocation> = location;

        return;

     label09:
        $r3 = (org.apache.maven.model.Reporting) this;

        $r3.<org.apache.maven.model.Reporting: org.apache.maven.model.InputLocation pluginsLocation> = location;

        return;

     label10:
        $r4 = (org.apache.maven.model.Reporting) this;

        virtualinvoke $r4.<org.apache.maven.model.Reporting: void setOtherLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(key, location);

        return;

     label11:
        $r5 = (org.apache.maven.model.Reporting) this;

        virtualinvoke $r5.<org.apache.maven.model.Reporting: void setOtherLocation(java.lang.Object,org.apache.maven.model.InputLocation)>(key, location);

        return;
    }

    public void setOtherLocation(java.lang.Object, org.apache.maven.model.InputLocation)
    {
        org.apache.maven.model.InputLocation location;
        Reporting this;
        java.util.Map $stack3, $stack4;
        java.lang.Object key;
        java.util.LinkedHashMap $u0;
        org.apache.maven.model.Reporting $r0, $r1, $r2;

        this := @this: Reporting;

        key := @parameter0: java.lang.Object;

        location := @parameter1: org.apache.maven.model.InputLocation;

        if location == null goto label2;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack3 = $r0.<org.apache.maven.model.Reporting: java.util.Map locations>;

        if $stack3 != null goto label1;

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $r1 = (org.apache.maven.model.Reporting) this;

        $r1.<org.apache.maven.model.Reporting: java.util.Map locations> = $u0;

     label1:
        $r2 = (org.apache.maven.model.Reporting) this;

        $stack4 = $r2.<org.apache.maven.model.Reporting: java.util.Map locations>;

        interfaceinvoke $stack4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, location);

     label2:
        return;
    }

    private org.apache.maven.model.InputLocation getOtherLocation(java.lang.Object)
    {
        Reporting this;
        java.util.Map $stack2, $stack3;
        java.lang.Object key, $stack4;
        org.apache.maven.model.InputLocation $stack5;
        org.apache.maven.model.Reporting $r0, $r1;

        this := @this: Reporting;

        key := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack2 = $r0.<org.apache.maven.model.Reporting: java.util.Map locations>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.model.Reporting) this;

        $stack3 = $r1.<org.apache.maven.model.Reporting: java.util.Map locations>;

        $stack4 = interfaceinvoke $stack3.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        $stack5 = (org.apache.maven.model.InputLocation) $stack4;

        goto label2;

     label1:
        $stack5 = null;

     label2:
        return $stack5;
    }

    public java.lang.String getOutputDirectory()
    {
        Reporting this;
        java.lang.String $stack1;
        org.apache.maven.model.Reporting $r0;

        this := @this: Reporting;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack1 = $r0.<org.apache.maven.model.Reporting: java.lang.String outputDirectory>;

        return $stack1;
    }

    public java.util.List getPlugins()
    {
        Reporting this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.model.Reporting $r0, $r1, $r2;

        this := @this: Reporting;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack1 = $r0.<org.apache.maven.model.Reporting: java.util.List plugins>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.model.Reporting) this;

        $r1.<org.apache.maven.model.Reporting: java.util.List plugins> = $u0;

     label1:
        $r2 = (org.apache.maven.model.Reporting) this;

        $stack2 = $r2.<org.apache.maven.model.Reporting: java.util.List plugins>;

        return $stack2;
    }

    public void removePlugin(org.apache.maven.model.ReportPlugin)
    {
        Reporting this;
        java.util.List $stack2;
        org.apache.maven.model.ReportPlugin reportPlugin;
        org.apache.maven.model.Reporting $r0;

        this := @this: Reporting;

        reportPlugin := @parameter0: org.apache.maven.model.ReportPlugin;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(reportPlugin);

        return;
    }

    public void setExcludeDefaults(java.lang.String)
    {
        Reporting this;
        java.lang.String excludeDefaults;
        org.apache.maven.model.Reporting $r0;

        this := @this: Reporting;

        excludeDefaults := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.Reporting) this;

        $r0.<org.apache.maven.model.Reporting: java.lang.String excludeDefaults> = excludeDefaults;

        return;
    }

    public void setOutputDirectory(java.lang.String)
    {
        Reporting this;
        java.lang.String outputDirectory;
        org.apache.maven.model.Reporting $r0;

        this := @this: Reporting;

        outputDirectory := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.Reporting) this;

        $r0.<org.apache.maven.model.Reporting: java.lang.String outputDirectory> = outputDirectory;

        return;
    }

    public void setPlugins(java.util.List)
    {
        Reporting this;
        java.util.List plugins;
        org.apache.maven.model.Reporting $r0;

        this := @this: Reporting;

        plugins := @parameter0: java.util.List;

        $r0 = (org.apache.maven.model.Reporting) this;

        $r0.<org.apache.maven.model.Reporting: java.util.List plugins> = plugins;

        return;
    }

    public boolean isExcludeDefaults()
    {
        Reporting this;
        java.lang.String $stack1, $stack2;
        boolean $stack3;
        org.apache.maven.model.Reporting $r0, $r1;

        this := @this: Reporting;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack1 = $r0.<org.apache.maven.model.Reporting: java.lang.String excludeDefaults>;

        if $stack1 == null goto label1;

        $r1 = (org.apache.maven.model.Reporting) this;

        $stack2 = $r1.<org.apache.maven.model.Reporting: java.lang.String excludeDefaults>;

        $stack3 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($stack2);

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    public void setExcludeDefaults(boolean)
    {
        Reporting this;
        boolean excludeDefaults;
        java.lang.String $stack2;
        org.apache.maven.model.Reporting $r0;

        this := @this: Reporting;

        excludeDefaults := @parameter0: boolean;

        $stack2 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>(excludeDefaults);

        $r0 = (org.apache.maven.model.Reporting) this;

        $r0.<org.apache.maven.model.Reporting: java.lang.String excludeDefaults> = $stack2;

        return;
    }

    public synchronized void flushReportPluginMap()
    {
        Reporting this;
        org.apache.maven.model.Reporting $r0;

        this := @this: Reporting;

        $r0 = (org.apache.maven.model.Reporting) this;

        $r0.<org.apache.maven.model.Reporting: java.util.Map reportPluginMap> = null;

        return;
    }

    public synchronized java.util.Map getReportPluginsAsMap()
    {
        Reporting this;
        java.util.Map $stack3, $stack12, $stack4;
        java.util.List $stack6, $stack8;
        java.util.Iterator it;
        boolean $stack10;
        java.lang.Object $stack11;
        org.apache.maven.model.ReportPlugin reportPlugin;
        java.lang.String $stack13;
        java.util.LinkedHashMap $u0;
        org.apache.maven.model.Reporting $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: Reporting;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack3 = $r0.<org.apache.maven.model.Reporting: java.util.Map reportPluginMap>;

        if $stack3 != null goto label2;

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $r1 = (org.apache.maven.model.Reporting) this;

        $r1.<org.apache.maven.model.Reporting: java.util.Map reportPluginMap> = $u0;

        $r2 = (org.apache.maven.model.Reporting) this;

        $stack6 = virtualinvoke $r2.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        if $stack6 == null goto label2;

        $r3 = (org.apache.maven.model.Reporting) this;

        $stack8 = virtualinvoke $r3.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        it = interfaceinvoke $stack8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label2;

        $stack11 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();

        reportPlugin = (org.apache.maven.model.ReportPlugin) $stack11;

        $r4 = (org.apache.maven.model.Reporting) this;

        $stack12 = $r4.<org.apache.maven.model.Reporting: java.util.Map reportPluginMap>;

        $stack13 = virtualinvoke reportPlugin.<org.apache.maven.model.ReportPlugin: java.lang.String getKey()>();

        interfaceinvoke $stack12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack13, reportPlugin);

        goto label1;

     label2:
        $r5 = (org.apache.maven.model.Reporting) this;

        $stack4 = $r5.<org.apache.maven.model.Reporting: java.util.Map reportPluginMap>;

        return $stack4;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        Reporting this;
        org.apache.maven.model.Reporting $stack1, $r0;

        this := @this: Reporting;

        $r0 = (org.apache.maven.model.Reporting) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.model.Reporting: org.apache.maven.model.Reporting clone()>();

        return $stack1;
    }
}
