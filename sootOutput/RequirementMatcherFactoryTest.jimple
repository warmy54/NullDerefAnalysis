public class RequirementMatcherFactoryTest extends java.lang.Object
{

    public void <init>()
    {
        RequirementMatcherFactoryTest this;

        this := @this: RequirementMatcherFactoryTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testCreateExactMatcher()
    {
        org.apache.maven.toolchain.RequirementMatcher matcher;
        boolean $stack3, $stack4, $stack5, $stack6;
        RequirementMatcherFactoryTest this;

        this := @this: RequirementMatcherFactoryTest;

        matcher = staticinvoke <org.apache.maven.toolchain.RequirementMatcherFactory: org.apache.maven.toolchain.RequirementMatcher createExactMatcher(java.lang.String)>("foo");

        $stack3 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("bar");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack3);

        $stack4 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("foobar");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack4);

        $stack5 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("foob");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack5);

        $stack6 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("foo");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack6);

        return;
    }

    public void testCreateVersionMatcher()
    {
        boolean $stack3, $stack4, $stack5, $stack6, $stack7, $stack8, $stack9;
        java.lang.String $stack11, $stack14;
        RequirementMatcherFactoryTest this;
        org.apache.maven.toolchain.RequirementMatcher matcher;

        this := @this: RequirementMatcherFactoryTest;

        matcher = staticinvoke <org.apache.maven.toolchain.RequirementMatcherFactory: org.apache.maven.toolchain.RequirementMatcher createVersionMatcher(java.lang.String)>("1.5.2");

        $stack3 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("1.5");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack3);

        $stack4 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("1.5.2");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack4);

        $stack5 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("[1.4,1.5)");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack5);

        $stack6 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("[1.5,1.5.2)");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack6);

        $stack7 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("(1.5.2,1.6)");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack7);

        $stack8 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("(1.4,1.5.2]");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack8);

        $stack9 = interfaceinvoke matcher.<org.apache.maven.toolchain.RequirementMatcher: boolean matches(java.lang.String)>("(1.5,)");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack9);

        $stack11 = virtualinvoke matcher.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.5.2", $stack11);

        matcher = staticinvoke <org.apache.maven.toolchain.RequirementMatcherFactory: org.apache.maven.toolchain.RequirementMatcher createVersionMatcher(java.lang.String)>("1.5");

        $stack14 = virtualinvoke matcher.<java.lang.Object: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("1.5", $stack14);

        return;
    }
}
