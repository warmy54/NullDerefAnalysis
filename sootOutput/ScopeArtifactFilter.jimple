public class ScopeArtifactFilter extends org.apache.maven.artifact.resolver.filter.AbstractScopeArtifactFilter
{
    private final java.lang.String scope;

    public void <init>(java.lang.String)
    {
        ScopeArtifactFilter this;
        java.lang.String scope;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter $r0, $r1;

        this := @this: ScopeArtifactFilter;

        scope := @parameter0: java.lang.String;

        specialinvoke this.<org.apache.maven.artifact.resolver.filter.AbstractScopeArtifactFilter: void <init>()>();

        $r0 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter) this;

        $r0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: java.lang.String scope> = scope;

        $r1 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter) this;

        virtualinvoke $r1.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: void addScopeInternal(java.lang.String)>(scope);

        return;
    }

    public java.lang.String getScope()
    {
        ScopeArtifactFilter this;
        java.lang.String $stack1;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter $r0;

        this := @this: ScopeArtifactFilter;

        $r0 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter) this;

        $stack1 = $r0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: java.lang.String scope>;

        return $stack1;
    }

    public int hashCode()
    {
        ScopeArtifactFilter this;
        java.lang.String $stack2, $stack4;
        int $stack3, $stack5, hash#3;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter $r0, $r1;

        this := @this: ScopeArtifactFilter;

        $stack3 = 17 * 31;

        $r0 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter) this;

        $stack2 = $r0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: java.lang.String scope>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter) this;

        $stack4 = $r1.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: java.lang.String scope>;

        $stack5 = virtualinvoke $stack4.<java.lang.String: int hashCode()>();

        goto label2;

     label1:
        $stack5 = 0;

     label2:
        hash#3 = $stack3 + $stack5;

        return hash#3;
    }

    public boolean equals(java.lang.Object)
    {
        ScopeArtifactFilter this;
        java.lang.Object obj;
        boolean $stack3, $stack6;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter other, $r0;
        java.lang.String $stack4, $stack5;

        this := @this: ScopeArtifactFilter;

        obj := @parameter0: java.lang.Object;

        if this != obj goto label1;

        return 1;

     label1:
        $stack3 = obj instanceof org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;

        if $stack3 != 0 goto label2;

        return 0;

     label2:
        other = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter) obj;

        $r0 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter) this;

        $stack5 = $r0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: java.lang.String scope>;

        $stack4 = other.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: java.lang.String scope>;

        $stack6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($stack5, $stack4);

        return $stack6;
    }

    public volatile boolean include(org.apache.maven.artifact.Artifact)
    {
        ScopeArtifactFilter this;
        org.apache.maven.artifact.Artifact l1;
        boolean $stack2;

        this := @this: ScopeArtifactFilter;

        l1 := @parameter0: org.apache.maven.artifact.Artifact;

        $stack2 = specialinvoke this.<org.apache.maven.artifact.resolver.filter.AbstractScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>(l1);

        return $stack2;
    }
}
