public class ScopeArtifactFilterTest extends java.lang.Object
{

    public void <init>()
    {
        ScopeArtifactFilterTest this;

        this := @this: ScopeArtifactFilterTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    private org.apache.maven.artifact.Artifact newArtifact(java.lang.String)
    {
        java.lang.String scope;
        ScopeArtifactFilterTest this;
        org.apache.maven.artifact.DefaultArtifact $u0;
        org.apache.maven.artifact.Artifact $r0;

        this := @this: ScopeArtifactFilterTest;

        scope := @parameter0: java.lang.String;

        $u0 = new org.apache.maven.artifact.DefaultArtifact;

        specialinvoke $u0.<org.apache.maven.artifact.DefaultArtifact: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.apache.maven.artifact.handler.ArtifactHandler)>("g", "a", "1.0", scope, "jar", "", null);

        $r0 = (org.apache.maven.artifact.Artifact) $u0;

        return $r0;
    }

    public void testInclude_Compile()
    {
        ScopeArtifactFilterTest this;
        org.apache.maven.artifact.Artifact $stack3, $stack5, $stack7, $stack9, $stack11;
        boolean $stack4, $stack6, $stack8, $stack10, $stack12;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter $u0;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest $r0, $r1, $r2, $r3, $r4;

        this := @this: ScopeArtifactFilterTest;

        $u0 = new org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;

        specialinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: void <init>(java.lang.String)>("compile");

        $r0 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("compile");

        $stack4 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack3);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack4);

        $r1 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack5 = specialinvoke $r1.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("system");

        $stack6 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack5);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack6);

        $r2 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack7 = specialinvoke $r2.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("provided");

        $stack8 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack7);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack8);

        $r3 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack9 = specialinvoke $r3.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("runtime");

        $stack10 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack9);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack10);

        $r4 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack11 = specialinvoke $r4.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("test");

        $stack12 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack11);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack12);

        return;
    }

    public void testInclude_CompilePlusRuntime()
    {
        ScopeArtifactFilterTest this;
        org.apache.maven.artifact.Artifact $stack3, $stack5, $stack7, $stack9, $stack11;
        boolean $stack4, $stack6, $stack8, $stack10, $stack12;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter $u0;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest $r0, $r1, $r2, $r3, $r4;

        this := @this: ScopeArtifactFilterTest;

        $u0 = new org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;

        specialinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: void <init>(java.lang.String)>("compile+runtime");

        $r0 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("compile");

        $stack4 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack3);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack4);

        $r1 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack5 = specialinvoke $r1.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("system");

        $stack6 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack5);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack6);

        $r2 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack7 = specialinvoke $r2.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("provided");

        $stack8 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack7);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack8);

        $r3 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack9 = specialinvoke $r3.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("runtime");

        $stack10 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack9);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack10);

        $r4 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack11 = specialinvoke $r4.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("test");

        $stack12 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack11);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack12);

        return;
    }

    public void testInclude_Runtime()
    {
        ScopeArtifactFilterTest this;
        org.apache.maven.artifact.Artifact $stack3, $stack5, $stack7, $stack9, $stack11;
        boolean $stack4, $stack6, $stack8, $stack10, $stack12;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter $u0;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest $r0, $r1, $r2, $r3, $r4;

        this := @this: ScopeArtifactFilterTest;

        $u0 = new org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;

        specialinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: void <init>(java.lang.String)>("runtime");

        $r0 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("compile");

        $stack4 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack3);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack4);

        $r1 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack5 = specialinvoke $r1.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("system");

        $stack6 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack5);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack6);

        $r2 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack7 = specialinvoke $r2.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("provided");

        $stack8 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack7);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack8);

        $r3 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack9 = specialinvoke $r3.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("runtime");

        $stack10 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack9);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack10);

        $r4 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack11 = specialinvoke $r4.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("test");

        $stack12 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack11);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack12);

        return;
    }

    public void testInclude_RuntimePlusSystem()
    {
        ScopeArtifactFilterTest this;
        org.apache.maven.artifact.Artifact $stack3, $stack5, $stack7, $stack9, $stack11;
        boolean $stack4, $stack6, $stack8, $stack10, $stack12;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter $u0;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest $r0, $r1, $r2, $r3, $r4;

        this := @this: ScopeArtifactFilterTest;

        $u0 = new org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;

        specialinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: void <init>(java.lang.String)>("runtime+system");

        $r0 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("compile");

        $stack4 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack3);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack4);

        $r1 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack5 = specialinvoke $r1.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("system");

        $stack6 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack5);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack6);

        $r2 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack7 = specialinvoke $r2.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("provided");

        $stack8 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack7);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack8);

        $r3 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack9 = specialinvoke $r3.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("runtime");

        $stack10 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack9);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack10);

        $r4 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack11 = specialinvoke $r4.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("test");

        $stack12 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack11);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack12);

        return;
    }

    public void testInclude_Test()
    {
        ScopeArtifactFilterTest this;
        org.apache.maven.artifact.Artifact $stack3, $stack5, $stack7, $stack9, $stack11;
        boolean $stack4, $stack6, $stack8, $stack10, $stack12;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter $u0;
        org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest $r0, $r1, $r2, $r3, $r4;

        this := @this: ScopeArtifactFilterTest;

        $u0 = new org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter;

        specialinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: void <init>(java.lang.String)>("test");

        $r0 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack3 = specialinvoke $r0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("compile");

        $stack4 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack3);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack4);

        $r1 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack5 = specialinvoke $r1.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("system");

        $stack6 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack5);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack6);

        $r2 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack7 = specialinvoke $r2.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("provided");

        $stack8 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack7);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack8);

        $r3 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack9 = specialinvoke $r3.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("runtime");

        $stack10 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack9);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack10);

        $r4 = (org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest) this;

        $stack11 = specialinvoke $r4.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilterTest: org.apache.maven.artifact.Artifact newArtifact(java.lang.String)>("test");

        $stack12 = virtualinvoke $u0.<org.apache.maven.artifact.resolver.filter.ScopeArtifactFilter: boolean include(org.apache.maven.artifact.Artifact)>($stack11);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack12);

        return;
    }
}
