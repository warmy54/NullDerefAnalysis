class SequenceDriver$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.util.Iterator val$iterator;
    final java.util.ArrayList val$oPaths;
    final java.util.concurrent.atomic.AtomicInteger val$count;
    final org.ooc.frontend.drivers.SequenceDriver this$0;

    void <init>(org.ooc.frontend.drivers.SequenceDriver, java.util.Iterator, java.util.ArrayList, java.util.concurrent.atomic.AtomicInteger)
    {
        SequenceDriver$1 this;
        org.ooc.frontend.drivers.SequenceDriver this$0;
        java.util.Iterator l2;
        java.util.ArrayList l3;
        java.util.concurrent.atomic.AtomicInteger l4;
        org.ooc.frontend.drivers.SequenceDriver$1 $r0, $r1, $r2, $r3;

        this := @this: SequenceDriver$1;

        this$0 := @parameter0: org.ooc.frontend.drivers.SequenceDriver;

        l2 := @parameter1: java.util.Iterator;

        l3 := @parameter2: java.util.ArrayList;

        l4 := @parameter3: java.util.concurrent.atomic.AtomicInteger;

        $r0 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $r0.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0> = this$0;

        $r1 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $r1.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.Iterator val$iterator> = l2;

        $r2 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $r2.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.ArrayList val$oPaths> = l3;

        $r3 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $r3.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.concurrent.atomic.AtomicInteger val$count> = l4;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        SequenceDriver$1 this;
        org.ooc.frontend.drivers.SequenceDriver $stack12, $stack23, $stack25, $stack41, $stack53, $stack58, $stack63, $stack69, $stack72, $stack75, $stack79, $stack85, $stack89, $stack101, $stack108;
        org.ooc.frontend.BuildParams $stack13, $stack26, $stack42, $stack54, $stack59, $stack64, $stack70, $stack73, $stack80, $stack86, $stack102, $stack109;
        org.ooc.frontend.compilers.AbstractCompiler $stack14, compiler;
        java.util.Iterator $stack16, $stack18, $stack19, $stack21, libs#11, define#18, $stack44;
        boolean $stack17, $stack43, $stack57, $stack62, $stack68, $stack81, $stack87, $stack78;
        java.lang.Object $stack20, $stack99, $stack112, $stack115, $stack117;
        java.io.File $stack27, define#16, $u0, $u1, $u2;
        java.lang.String $stack28, $stack50, $stack74, $stack93, $stack96, $stack103, $stack113, path#6, e#7, cPath#8, define#12, lib;
        java.util.ArrayList $stack32, $stack33;
        long $stack37, $stack39, $stack90, $stack91, libs#25, e#28;
        byte $stack40;
        java.io.PrintStream $stack49, $stack88, $stack92, $stack95;
        java.util.List $stack55, $stack60;
        org.ooc.frontend.PathList $stack65;
        java.util.Collection $stack66, libs#17;
        java.lang.String[] $stack71, $stack110;
        java.lang.Throwable $stack119, $stack125, $stack127;
        java.lang.Exception $stack121, $stack123;
        java.util.NoSuchElementException $stack129;
        org.ooc.frontend.model.Module currentModule#3;
        int lib#26;
        java.util.concurrent.atomic.AtomicInteger $stack45;
        org.ooc.frontend.drivers.SequenceDriver$1 $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;

        this := @this: SequenceDriver$1;

        $r0 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack12 = $r0.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack13 = $stack12.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack14 = $stack13.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        compiler = interfaceinvoke $stack14.<org.ooc.frontend.compilers.AbstractCompiler: org.ooc.frontend.compilers.AbstractCompiler clone()>();

     label01:
        $r1 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack16 = $r1.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.Iterator val$iterator>;

        $stack17 = interfaceinvoke $stack16.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label42;

        $r2 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack18 = $r2.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.Iterator val$iterator>;

        entermonitor $stack18;

     label02:
        $r3 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack19 = $r3.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.Iterator val$iterator>;

        $stack20 = interfaceinvoke $stack19.<java.util.Iterator: java.lang.Object next()>();

        currentModule#3 = (org.ooc.frontend.model.Module) $stack20;

        $r4 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack21 = $r4.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.Iterator val$iterator>;

        interfaceinvoke $stack21.<java.util.Iterator: void remove()>();

     label03:
        goto label06;

     label04:
        $stack129 := @caughtexception;

        exitmonitor $stack18;

     label05:
        goto label42;

     label06:
        exitmonitor $stack18;

     label07:
        goto label10;

     label08:
        $stack127 := @caughtexception;

        exitmonitor $stack18;

     label09:
        throw $stack127;

     label10:
        $r5 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack23 = $r5.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        virtualinvoke $stack23.<org.ooc.frontend.drivers.SequenceDriver: void initCompiler(org.ooc.frontend.compilers.AbstractCompiler)>(compiler);

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void setCompileOnly()>();

        $u0 = new java.io.File;

        $r6 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack25 = $r6.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack26 = $stack25.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack27 = $stack26.<org.ooc.frontend.BuildParams: java.io.File outPath>;

        $stack28 = virtualinvoke currentModule#3.<org.ooc.frontend.model.Module: java.lang.String getPath(java.lang.String)>("");

        specialinvoke $u0.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack27, $stack28);

        path#6 = virtualinvoke $u0.<java.io.File: java.lang.String getPath()>();

        e#7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(path#6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.o");

        cPath#8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(path#6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.c");

        $r7 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack32 = $r7.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.ArrayList val$oPaths>;

        entermonitor $stack32;

     label11:
        $r8 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack33 = $r8.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.ArrayList val$oPaths>;

        virtualinvoke $stack33.<java.util.ArrayList: boolean add(java.lang.Object)>(e#7);

        exitmonitor $stack32;

     label12:
        goto label15;

     label13:
        $stack125 := @caughtexception;

        exitmonitor $stack32;

     label14:
        throw $stack125;

     label15:
        $u1 = new java.io.File;

        specialinvoke $u1.<java.io.File: void <init>(java.lang.String)>(cPath#8);

        $stack37 = virtualinvoke $u1.<java.io.File: long lastModified()>();

        $u2 = new java.io.File;

        specialinvoke $u2.<java.io.File: void <init>(java.lang.String)>(e#7);

        $stack39 = virtualinvoke $u2.<java.io.File: long lastModified()>();

        $stack40 = $stack37 cmp $stack39;

        if $stack40 <= 0 goto label35;

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void addObjectFile(java.lang.String)>(cPath#8);

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void setOutputPath(java.lang.String)>(e#7);

        $r9 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack53 = $r9.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack54 = $stack53.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack55 = $stack54.<org.ooc.frontend.BuildParams: java.util.List defines>;

        libs#11 = interfaceinvoke $stack55.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $stack57 = interfaceinvoke libs#11.<java.util.Iterator: boolean hasNext()>();

        if $stack57 == 0 goto label17;

        $stack117 = interfaceinvoke libs#11.<java.util.Iterator: java.lang.Object next()>();

        define#12 = (java.lang.String) $stack117;

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void defineSymbol(java.lang.String)>(define#12);

        goto label16;

     label17:
        $r10 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack58 = $r10.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack59 = $stack58.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack60 = $stack59.<org.ooc.frontend.BuildParams: java.util.List compilerArgs>;

        libs#11 = interfaceinvoke $stack60.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $stack62 = interfaceinvoke libs#11.<java.util.Iterator: boolean hasNext()>();

        if $stack62 == 0 goto label19;

        $stack115 = interfaceinvoke libs#11.<java.util.Iterator: java.lang.Object next()>();

        define#12 = (java.lang.String) $stack115;

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void addObjectFile(java.lang.String)>(define#12);

        goto label18;

     label19:
        $r11 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack63 = $r11.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack64 = $stack63.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack65 = $stack64.<org.ooc.frontend.BuildParams: org.ooc.frontend.PathList incPath>;

        $stack66 = virtualinvoke $stack65.<org.ooc.frontend.PathList: java.util.Collection getPaths()>();

        libs#11 = interfaceinvoke $stack66.<java.util.Collection: java.util.Iterator iterator()>();

     label20:
        $stack68 = interfaceinvoke libs#11.<java.util.Iterator: boolean hasNext()>();

        if $stack68 == 0 goto label21;

        $stack112 = interfaceinvoke libs#11.<java.util.Iterator: java.lang.Object next()>();

        define#16 = (java.io.File) $stack112;

        $stack113 = virtualinvoke define#16.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void addIncludePath(java.lang.String)>($stack113);

        goto label20;

     label21:
        $r12 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack69 = $r12.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack70 = $stack69.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack71 = $stack70.<org.ooc.frontend.BuildParams: java.lang.String[] fatArchitectures>;

        if $stack71 == null goto label22;

        $r13 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack108 = $r13.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack109 = $stack108.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack110 = $stack109.<org.ooc.frontend.BuildParams: java.lang.String[] fatArchitectures>;

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void setFatArchitectures(java.lang.String[])>($stack110);

     label22:
        $r14 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack72 = $r14.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack73 = $stack72.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack74 = $stack73.<org.ooc.frontend.BuildParams: java.lang.String osxSDKAndDeploymentTarget>;

        if $stack74 == null goto label23;

        $r15 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack101 = $r15.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack102 = $stack101.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack103 = $stack102.<org.ooc.frontend.BuildParams: java.lang.String osxSDKAndDeploymentTarget>;

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void setOSXSDKAndDeploymentTarget(java.lang.String)>($stack103);

     label23:
        $r16 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack75 = $r16.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        libs#17 = virtualinvoke $stack75.<org.ooc.frontend.drivers.SequenceDriver: java.util.Collection getFlagsFromUse(org.ooc.frontend.model.Module,boolean)>(currentModule#3, 0);

        define#18 = interfaceinvoke libs#17.<java.util.Collection: java.util.Iterator iterator()>();

     label24:
        $stack78 = interfaceinvoke define#18.<java.util.Iterator: boolean hasNext()>();

        if $stack78 == 0 goto label25;

        $stack99 = interfaceinvoke define#18.<java.util.Iterator: java.lang.Object next()>();

        lib = (java.lang.String) $stack99;

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void addObjectFile(java.lang.String)>(lib);

        goto label24;

     label25:
        goto label27;

     label26:
        $stack123 := @caughtexception;

        virtualinvoke $stack123.<java.lang.Exception: void printStackTrace()>();

     label27:
        $r17 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack79 = $r17.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack80 = $stack79.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack81 = $stack80.<org.ooc.frontend.BuildParams: boolean verbose>;

        if $stack81 == 0 goto label28;

        $stack95 = <java.lang.System: java.io.PrintStream out>;

        $stack96 = interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: java.lang.String getCommandLine()>();

        virtualinvoke $stack95.<java.io.PrintStream: void println(java.lang.String)>($stack96);

     label28:
        libs#25 = staticinvoke <java.lang.System: long nanoTime()>();

        lib#26 = -1;

     label29:
        lib#26 = interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: int launch()>();

     label30:
        goto label32;

     label31:
        $stack121 := @caughtexception;

        virtualinvoke $stack121.<java.lang.Exception: void printStackTrace()>();

     label32:
        e#28 = staticinvoke <java.lang.System: long nanoTime()>();

        $r18 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack85 = $r18.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack86 = $stack85.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack87 = $stack86.<org.ooc.frontend.BuildParams: boolean timing>;

        if $stack87 == 0 goto label33;

        $stack92 = <java.lang.System: java.io.PrintStream out>;

        $stack90 = e#28 - libs#25;

        $stack91 = $stack90 / 1000000L;

        $stack93 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>($stack91) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("  (\u0001)");

        virtualinvoke $stack92.<java.io.PrintStream: void println(java.lang.String)>($stack93);

     label33:
        if lib#26 == 0 goto label34;

        $stack88 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $stack88.<java.io.PrintStream: void println(java.lang.String)>("C compiler failed, aborting compilation process");

        $r19 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack89 = $r19.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack89.<org.ooc.frontend.drivers.SequenceDriver: int finalCode> = lib#26;

     label34:
        goto label36;

     label35:
        $r20 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack41 = $r20.<org.ooc.frontend.drivers.SequenceDriver$1: org.ooc.frontend.drivers.SequenceDriver this$0>;

        $stack42 = $stack41.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack43 = $stack42.<org.ooc.frontend.BuildParams: boolean veryVerbose>;

        if $stack43 == 0 goto label36;

        $stack49 = <java.lang.System: java.io.PrintStream out>;

        $stack50 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(cPath#8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Skipping \u0001, just the same.");

        virtualinvoke $stack49.<java.io.PrintStream: void println(java.lang.String)>($stack50);

     label36:
        $r21 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack44 = $r21.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.Iterator val$iterator>;

        entermonitor $stack44;

     label37:
        $r22 = (org.ooc.frontend.drivers.SequenceDriver$1) this;

        $stack45 = $r22.<org.ooc.frontend.drivers.SequenceDriver$1: java.util.concurrent.atomic.AtomicInteger val$count>;

        virtualinvoke $stack45.<java.util.concurrent.atomic.AtomicInteger: int decrementAndGet()>();

        exitmonitor $stack44;

     label38:
        goto label41;

     label39:
        $stack119 := @caughtexception;

        exitmonitor $stack44;

     label40:
        throw $stack119;

     label41:
        goto label01;

     label42:
        return;

        catch java.util.NoSuchElementException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Exception from label23 to label25 with label26;
        catch java.lang.Exception from label29 to label30 with label31;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label39 to label40 with label39;
    }
}
