public class SequenceDriver extends org.ooc.frontend.drivers.Driver
{
    int finalCode;

    public void <init>(org.ooc.frontend.BuildParams)
    {
        SequenceDriver this;
        org.ooc.frontend.BuildParams params;

        this := @this: SequenceDriver;

        params := @parameter0: org.ooc.frontend.BuildParams;

        specialinvoke this.<org.ooc.frontend.drivers.Driver: void <init>(org.ooc.frontend.BuildParams)>(params);

        return;
    }

    public int compile(org.ooc.frontend.model.Module, java.lang.String) throws java.lang.Error, java.io.IOException, java.lang.InterruptedException
    {
        SequenceDriver this;
        org.ooc.frontend.model.Module module, code#47;
        org.ooc.frontend.BuildParams $stack17, $stack18, $stack33, $stack35, $stack40, $stack48, $stack66, $stack73, $stack75, $stack79, $stack83, $stack87, $stack91, $stack96, $stack98, $stack100, $stack105, $stack110, $stack114, $stack116, $stack131, $stack137, $stack139, $stack141, $stack143, $stack147, $stack150, $stack157, $stack160, $stack163, $stack164, $stack173, $stack174, $stack179, $stack184, $stack188, $stack192, $stack196, $stack199, $stack200, $stack209, $stack29, $stack107;
        boolean $stack19, $stack34, $stack47, $stack49, $stack55, $stack82, $stack86, $stack90, $stack95, $stack106, $stack115, $stack117, $stack140, $stack149, $stack78, $stack104, $stack108;
        java.util.HashSet toCompile, oPath#45, $u0, $u1, $u2, $u9, $u10;
        long tt0, $stack121, $stack122, $stack123, $stack126, $stack127, oPath#41, tt2;
        java.util.Iterator iterator, i#10, oPath#25, lib#46, code#49;
        int $stack27, $stack31, $stack32, $stack204, $stack210, i, $stack30, code;
        java.lang.String $stack36, $stack41, $stack68, $stack69, $stack70, $stack76, $stack99, outName, $stack124, $stack129, $stack134, $stack148, $stack152, $stack153, $stack154, $stack165, $stack181, $stack201, $stack212, oPath, lib, $stack151, tt2#50;
        java.io.PrintStream $stack56, $stack119, $stack120, $stack128, $stack133, $stack211;
        java.lang.Object $stack60, $stack64, $stack159, $stack178, $stack183, $stack187, $stack191, $stack195;
        java.lang.StringBuilder $stack61, $u12;
        java.io.File $stack67, $stack145, oPath#23, $u7, $u11;
        org.ooc.frontend.compilers.AbstractCompiler $stack74, $stack101, $stack111, $stack132, $stack138, $stack144, $stack158, $stack161, $stack166, $stack176, $stack180, $stack185, $stack189, $stack193, $stack197, $stack202;
        java.util.List $stack80, $stack84, $stack88;
        org.ooc.frontend.PathList $stack92;
        java.util.Collection $stack93, i#24;
        java.lang.String[] $stack97, $stack175;
        org.ooc.frontend.Target $stack146;
        java.lang.Process code#52;
        java.util.ArrayList $u3, $u8;
        java.util.concurrent.atomic.AtomicInteger $u4;
        org.ooc.frontend.drivers.SequenceDriver$1 $u5;
        java.lang.Thread $u6;
        java.lang.ProcessBuilder $u13;
        org.ooc.frontend.drivers.SequenceDriver $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52;
        java.lang.Runnable $r8;

        this := @this: SequenceDriver;

        module := @parameter0: org.ooc.frontend.model.Module;

        outName := @parameter1: java.lang.String;

        $r0 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack17 = $r0.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $u0 = new java.util.HashSet;

        specialinvoke $u0.<java.util.HashSet: void <init>()>();

        $r1 = (org.ooc.frontend.drivers.SequenceDriver) this;

        virtualinvoke $r1.<org.ooc.frontend.drivers.SequenceDriver: void copyLocalHeaders(org.ooc.frontend.model.Module,org.ooc.frontend.BuildParams,java.util.HashSet)>(module, $stack17, $u0);

        $r2 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack18 = $r2.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack19 = $stack18.<org.ooc.frontend.BuildParams: boolean verbose>;

        if $stack19 == 0 goto label01;

        $stack211 = <java.lang.System: java.io.PrintStream out>;

        $r3 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack209 = $r3.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack210 = $stack209.<org.ooc.frontend.BuildParams: int sequenceThreads>;

        $stack212 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>($stack210) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Sequence driver, using \u0001 threads.");

        virtualinvoke $stack211.<java.io.PrintStream: void println(java.lang.String)>($stack212);

     label01:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

        $u2 = new java.util.HashSet;

        specialinvoke $u2.<java.util.HashSet: void <init>()>();

        $r4 = (org.ooc.frontend.drivers.SequenceDriver) this;

        toCompile = virtualinvoke $r4.<org.ooc.frontend.drivers.SequenceDriver: java.util.HashSet collectDeps(org.ooc.frontend.model.Module,java.util.HashSet,java.util.HashSet)>(module, $u1, $u2);

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        tt0 = staticinvoke <java.lang.System: long nanoTime()>();

        iterator = virtualinvoke toCompile.<java.util.HashSet: java.util.Iterator iterator()>();

        $u4 = new java.util.concurrent.atomic.AtomicInteger;

        $stack27 = virtualinvoke toCompile.<java.util.HashSet: int size()>();

        specialinvoke $u4.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>($stack27);

        $r5 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $r5.<org.ooc.frontend.drivers.SequenceDriver: int finalCode> = 0;

        $u5 = new org.ooc.frontend.drivers.SequenceDriver$1;

        $r6 = (org.ooc.frontend.drivers.SequenceDriver) this;

        specialinvoke $u5.<org.ooc.frontend.drivers.SequenceDriver$1: void <init>(org.ooc.frontend.drivers.SequenceDriver,java.util.Iterator,java.util.ArrayList,java.util.concurrent.atomic.AtomicInteger)>($r6, iterator, $u3, $u4);

        i = 0;

     label02:
        $r7 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack29 = $r7.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack30 = $stack29.<org.ooc.frontend.BuildParams: int sequenceThreads>;

        if i >= $stack30 goto label03;

        $u6 = new java.lang.Thread;

        $r8 = (java.lang.Runnable) $u5;

        specialinvoke $u6.<java.lang.Thread: void <init>(java.lang.Runnable)>($r8);

        virtualinvoke $u6.<java.lang.Thread: void start()>();

        i = i + 1;

        goto label02;

     label03:
        $stack31 = virtualinvoke $u4.<java.util.concurrent.atomic.AtomicInteger: int get()>();

        if $stack31 <= 0 goto label04;

        staticinvoke <java.lang.Thread: void sleep(long)>(100L);

        goto label03;

     label04:
        $r9 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack32 = $r9.<org.ooc.frontend.drivers.SequenceDriver: int finalCode>;

        if $stack32 == 0 goto label05;

        $r10 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack204 = $r10.<org.ooc.frontend.drivers.SequenceDriver: int finalCode>;

        return $stack204;

     label05:
        $r11 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack33 = $r11.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack34 = $stack33.<org.ooc.frontend.BuildParams: boolean link>;

        if $stack34 == 0 goto label28;

        $r12 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack73 = $r12.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack74 = $stack73.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        $r13 = (org.ooc.frontend.drivers.SequenceDriver) this;

        virtualinvoke $r13.<org.ooc.frontend.drivers.SequenceDriver: void initCompiler(org.ooc.frontend.compilers.AbstractCompiler)>($stack74);

        $r14 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack75 = $r14.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack76 = $stack75.<org.ooc.frontend.BuildParams: java.lang.String linker>;

        if $stack76 == null goto label06;

        $r15 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack199 = $r15.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack202 = $stack199.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        $r16 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack200 = $r16.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack201 = $stack200.<org.ooc.frontend.BuildParams: java.lang.String linker>;

        interfaceinvoke $stack202.<org.ooc.frontend.compilers.AbstractCompiler: void setExecutable(java.lang.String)>($stack201);

     label06:
        i#10 = virtualinvoke $u3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label07:
        $stack78 = interfaceinvoke i#10.<java.util.Iterator: boolean hasNext()>();

        if $stack78 == 0 goto label08;

        $stack195 = interfaceinvoke i#10.<java.util.Iterator: java.lang.Object next()>();

        oPath = (java.lang.String) $stack195;

        $r17 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack196 = $r17.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack197 = $stack196.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        interfaceinvoke $stack197.<org.ooc.frontend.compilers.AbstractCompiler: void addObjectFile(java.lang.String)>(oPath);

        goto label07;

     label08:
        $r18 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack79 = $r18.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack80 = $stack79.<org.ooc.frontend.BuildParams: java.util.List defines>;

        i#10 = interfaceinvoke $stack80.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $stack82 = interfaceinvoke i#10.<java.util.Iterator: boolean hasNext()>();

        if $stack82 == 0 goto label10;

        $stack191 = interfaceinvoke i#10.<java.util.Iterator: java.lang.Object next()>();

        oPath = (java.lang.String) $stack191;

        $r19 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack192 = $r19.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack193 = $stack192.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        interfaceinvoke $stack193.<org.ooc.frontend.compilers.AbstractCompiler: void defineSymbol(java.lang.String)>(oPath);

        goto label09;

     label10:
        $r20 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack83 = $r20.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack84 = $stack83.<org.ooc.frontend.BuildParams: java.util.List dynamicLibs>;

        i#10 = interfaceinvoke $stack84.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $stack86 = interfaceinvoke i#10.<java.util.Iterator: boolean hasNext()>();

        if $stack86 == 0 goto label12;

        $stack187 = interfaceinvoke i#10.<java.util.Iterator: java.lang.Object next()>();

        oPath = (java.lang.String) $stack187;

        $r21 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack188 = $r21.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack189 = $stack188.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        interfaceinvoke $stack189.<org.ooc.frontend.compilers.AbstractCompiler: void addDynamicLibrary(java.lang.String)>(oPath);

        goto label11;

     label12:
        $r22 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack87 = $r22.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack88 = $stack87.<org.ooc.frontend.BuildParams: java.util.List additionals>;

        i#10 = interfaceinvoke $stack88.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $stack90 = interfaceinvoke i#10.<java.util.Iterator: boolean hasNext()>();

        if $stack90 == 0 goto label14;

        $stack183 = interfaceinvoke i#10.<java.util.Iterator: java.lang.Object next()>();

        oPath = (java.lang.String) $stack183;

        $r23 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack184 = $r23.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack185 = $stack184.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        interfaceinvoke $stack185.<org.ooc.frontend.compilers.AbstractCompiler: void addObjectFile(java.lang.String)>(oPath);

        goto label13;

     label14:
        $r24 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack91 = $r24.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack92 = $stack91.<org.ooc.frontend.BuildParams: org.ooc.frontend.PathList libPath>;

        $stack93 = virtualinvoke $stack92.<org.ooc.frontend.PathList: java.util.Collection getPaths()>();

        i#10 = interfaceinvoke $stack93.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $stack95 = interfaceinvoke i#10.<java.util.Iterator: boolean hasNext()>();

        if $stack95 == 0 goto label16;

        $stack178 = interfaceinvoke i#10.<java.util.Iterator: java.lang.Object next()>();

        oPath#23 = (java.io.File) $stack178;

        $r25 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack179 = $r25.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack180 = $stack179.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        $stack181 = virtualinvoke oPath#23.<java.io.File: java.lang.String getAbsolutePath()>();

        interfaceinvoke $stack180.<org.ooc.frontend.compilers.AbstractCompiler: void addLibraryPath(java.lang.String)>($stack181);

        goto label15;

     label16:
        $r26 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack96 = $r26.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack97 = $stack96.<org.ooc.frontend.BuildParams: java.lang.String[] fatArchitectures>;

        if $stack97 == null goto label17;

        $r27 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack173 = $r27.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack176 = $stack173.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        $r28 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack174 = $r28.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack175 = $stack174.<org.ooc.frontend.BuildParams: java.lang.String[] fatArchitectures>;

        interfaceinvoke $stack176.<org.ooc.frontend.compilers.AbstractCompiler: void setFatArchitectures(java.lang.String[])>($stack175);

     label17:
        $r29 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack98 = $r29.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack99 = $stack98.<org.ooc.frontend.BuildParams: java.lang.String osxSDKAndDeploymentTarget>;

        if $stack99 == null goto label18;

        $r30 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack163 = $r30.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack166 = $stack163.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        $r31 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack164 = $r31.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack165 = $stack164.<org.ooc.frontend.BuildParams: java.lang.String osxSDKAndDeploymentTarget>;

        interfaceinvoke $stack166.<org.ooc.frontend.compilers.AbstractCompiler: void setOSXSDKAndDeploymentTarget(java.lang.String)>($stack165);

     label18:
        $r32 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack100 = $r32.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack101 = $stack100.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        interfaceinvoke $stack101.<org.ooc.frontend.compilers.AbstractCompiler: void setOutputPath(java.lang.String)>(outName);

        $r33 = (org.ooc.frontend.drivers.SequenceDriver) this;

        i#24 = virtualinvoke $r33.<org.ooc.frontend.drivers.SequenceDriver: java.util.Collection getFlagsFromUse(org.ooc.frontend.model.Module,boolean)>(module, 1);

        oPath#25 = interfaceinvoke i#24.<java.util.Collection: java.util.Iterator iterator()>();

     label19:
        $stack104 = interfaceinvoke oPath#25.<java.util.Iterator: boolean hasNext()>();

        if $stack104 == 0 goto label20;

        $stack159 = interfaceinvoke oPath#25.<java.util.Iterator: java.lang.Object next()>();

        lib = (java.lang.String) $stack159;

        $r34 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack160 = $r34.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack161 = $stack160.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        interfaceinvoke $stack161.<org.ooc.frontend.compilers.AbstractCompiler: void addObjectFile(java.lang.String)>(lib);

        goto label19;

     label20:
        $r35 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack105 = $r35.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack106 = $stack105.<org.ooc.frontend.BuildParams: boolean enableGC>;

        if $stack106 == 0 goto label24;

        $r36 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack137 = $r36.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack138 = $stack137.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        interfaceinvoke $stack138.<org.ooc.frontend.compilers.AbstractCompiler: void addDynamicLibrary(java.lang.String)>("pthread");

        $r37 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack139 = $r37.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack140 = $stack139.<org.ooc.frontend.BuildParams: boolean dynGC>;

        if $stack140 == 0 goto label21;

        $r38 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack157 = $r38.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack158 = $stack157.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        interfaceinvoke $stack158.<org.ooc.frontend.compilers.AbstractCompiler: void addDynamicLibrary(java.lang.String)>("gc");

        goto label24;

     label21:
        $r39 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack141 = $r39.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack144 = $stack141.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        $u7 = new java.io.File;

        $r40 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack143 = $r40.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack145 = $stack143.<org.ooc.frontend.BuildParams: java.io.File distLocation>;

        $stack146 = staticinvoke <org.ooc.frontend.Target: org.ooc.frontend.Target guessHost()>();

        $r41 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack147 = $r41.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack148 = $stack147.<org.ooc.frontend.BuildParams: java.lang.String arch>;

        $stack149 = virtualinvoke $stack148.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $stack149 == 0 goto label22;

        $stack151 = staticinvoke <org.ooc.frontend.Target: java.lang.String getArch()>();

        goto label23;

     label22:
        $r42 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack150 = $r42.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack151 = $stack150.<org.ooc.frontend.BuildParams: java.lang.String arch>;

     label23:
        $stack152 = virtualinvoke $stack146.<org.ooc.frontend.Target: java.lang.String toString(java.lang.String)>($stack151);

        $stack153 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack152) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("libs/\u0001/libgc.a");

        specialinvoke $u7.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack145, $stack153);

        $stack154 = virtualinvoke $u7.<java.io.File: java.lang.String getPath()>();

        interfaceinvoke $stack144.<org.ooc.frontend.compilers.AbstractCompiler: void addObjectFile(java.lang.String)>($stack154);

     label24:
        $r43 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack107 = $r43.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack108 = $stack107.<org.ooc.frontend.BuildParams: boolean verbose>;

        if $stack108 == 0 goto label25;

        $stack133 = <java.lang.System: java.io.PrintStream out>;

        $r44 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack131 = $r44.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack132 = $stack131.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        $stack134 = interfaceinvoke $stack132.<org.ooc.frontend.compilers.AbstractCompiler: java.lang.String getCommandLine()>();

        virtualinvoke $stack133.<java.io.PrintStream: void println(java.lang.String)>($stack134);

     label25:
        oPath#41 = staticinvoke <java.lang.System: long nanoTime()>();

        $r45 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack110 = $r45.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack111 = $stack110.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        code = interfaceinvoke $stack111.<org.ooc.frontend.compilers.AbstractCompiler: int launch()>();

        tt2 = staticinvoke <java.lang.System: long nanoTime()>();

        $r46 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack114 = $r46.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack115 = $stack114.<org.ooc.frontend.BuildParams: boolean timing>;

        if $stack115 == 0 goto label26;

        $stack128 = <java.lang.System: java.io.PrintStream out>;

        $stack126 = tt2 - oPath#41;

        $stack127 = $stack126 / 1000000L;

        $stack129 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>($stack127) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("  (linking \u0001ms)");

        virtualinvoke $stack128.<java.io.PrintStream: void println(java.lang.String)>($stack129);

     label26:
        $r47 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack116 = $r47.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack117 = $stack116.<org.ooc.frontend.BuildParams: boolean timing>;

        if $stack117 == 0 goto label27;

        $stack120 = <java.lang.System: java.io.PrintStream out>;

        $stack121 = staticinvoke <java.lang.System: long nanoTime()>();

        $stack122 = $stack121 - tt0;

        $stack123 = $stack122 / 1000000L;

        $stack124 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>($stack123) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("(total \u0001ms)");

        virtualinvoke $stack120.<java.io.PrintStream: void println(java.lang.String)>($stack124);

     label27:
        if code == 0 goto label28;

        $stack119 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $stack119.<java.io.PrintStream: void println(java.lang.String)>("C compiler failed, aborting compilation process");

        return code;

     label28:
        $r48 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack35 = $r48.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack36 = $stack35.<org.ooc.frontend.BuildParams: java.lang.String outlib>;

        if $stack36 == null goto label34;

        $u8 = new java.util.ArrayList;

        specialinvoke $u8.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>("ar");

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>("rcs");

        $r49 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack40 = $r49.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack41 = $stack40.<org.ooc.frontend.BuildParams: java.lang.String outlib>;

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>($stack41);

        $u9 = new java.util.HashSet;

        specialinvoke $u9.<java.util.HashSet: void <init>()>();

        $u10 = new java.util.HashSet;

        specialinvoke $u10.<java.util.HashSet: void <init>()>();

        $r50 = (org.ooc.frontend.drivers.SequenceDriver) this;

        oPath#45 = virtualinvoke $r50.<org.ooc.frontend.drivers.SequenceDriver: java.util.HashSet collectDeps(org.ooc.frontend.model.Module,java.util.HashSet,java.util.HashSet)>(module, $u9, $u10);

        lib#46 = virtualinvoke oPath#45.<java.util.HashSet: java.util.Iterator iterator()>();

     label29:
        $stack47 = interfaceinvoke lib#46.<java.util.Iterator: boolean hasNext()>();

        if $stack47 == 0 goto label30;

        $stack64 = interfaceinvoke lib#46.<java.util.Iterator: java.lang.Object next()>();

        code#47 = (org.ooc.frontend.model.Module) $stack64;

        $u11 = new java.io.File;

        $r51 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack66 = $r51.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack67 = $stack66.<org.ooc.frontend.BuildParams: java.io.File outPath>;

        $stack68 = virtualinvoke code#47.<org.ooc.frontend.model.Module: java.lang.String getPath(java.lang.String)>("");

        specialinvoke $u11.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack67, $stack68);

        $stack69 = virtualinvoke $u11.<java.io.File: java.lang.String getPath()>();

        $stack70 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack69) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.o");

        interfaceinvoke $u8.<java.util.List: boolean add(java.lang.Object)>($stack70);

        goto label29;

     label30:
        $r52 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack48 = $r52.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack49 = $stack48.<org.ooc.frontend.BuildParams: boolean verbose>;

        if $stack49 == 0 goto label33;

        $u12 = new java.lang.StringBuilder;

        specialinvoke $u12.<java.lang.StringBuilder: void <init>()>();

        code#49 = interfaceinvoke $u8.<java.util.List: java.util.Iterator iterator()>();

     label31:
        $stack55 = interfaceinvoke code#49.<java.util.Iterator: boolean hasNext()>();

        if $stack55 == 0 goto label32;

        $stack60 = interfaceinvoke code#49.<java.util.Iterator: java.lang.Object next()>();

        tt2#50 = (java.lang.String) $stack60;

        $stack61 = virtualinvoke $u12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tt2#50);

        virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label31;

     label32:
        $stack56 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $stack56.<java.io.PrintStream: void println(java.lang.Object)>($u12);

     label33:
        $u13 = new java.lang.ProcessBuilder;

        specialinvoke $u13.<java.lang.ProcessBuilder: void <init>(java.util.List)>($u8);

        code#52 = virtualinvoke $u13.<java.lang.ProcessBuilder: java.lang.Process start()>();

        staticinvoke <org.ooc.utils.ProcessUtils: void redirectIO(java.lang.Process)>(code#52);

     label34:
        return 0;
    }

    void initCompiler(org.ooc.frontend.compilers.AbstractCompiler)
    {
        org.ooc.frontend.compilers.AbstractCompiler compiler;
        SequenceDriver this;
        org.ooc.frontend.BuildParams $stack4, $stack7, $stack10, $stack13;
        boolean $stack5, $stack16;
        java.io.File $stack8, $stack11, $u0;
        java.lang.String $stack9, $stack12, compilerArg;
        java.util.List $stack14;
        java.util.Iterator l2;
        java.lang.Object $stack17;
        org.ooc.frontend.drivers.SequenceDriver $r0, $r1, $r2, $r3;

        this := @this: SequenceDriver;

        compiler := @parameter0: org.ooc.frontend.compilers.AbstractCompiler;

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void reset()>();

        $r0 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack4 = $r0.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack5 = $stack4.<org.ooc.frontend.BuildParams: boolean debug>;

        if $stack5 == 0 goto label1;

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void setDebugEnabled()>();

     label1:
        $u0 = new java.io.File;

        $r1 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack7 = $r1.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack8 = $stack7.<org.ooc.frontend.BuildParams: java.io.File distLocation>;

        specialinvoke $u0.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack8, "libs/headers/");

        $stack9 = virtualinvoke $u0.<java.io.File: java.lang.String getPath()>();

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void addIncludePath(java.lang.String)>($stack9);

        $r2 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack10 = $r2.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack11 = $stack10.<org.ooc.frontend.BuildParams: java.io.File outPath>;

        $stack12 = virtualinvoke $stack11.<java.io.File: java.lang.String getPath()>();

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void addIncludePath(java.lang.String)>($stack12);

        $r3 = (org.ooc.frontend.drivers.SequenceDriver) this;

        $stack13 = $r3.<org.ooc.frontend.drivers.SequenceDriver: org.ooc.frontend.BuildParams params>;

        $stack14 = $stack13.<org.ooc.frontend.BuildParams: java.util.List compilerArgs>;

        l2 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $stack16 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label3;

        $stack17 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        compilerArg = (java.lang.String) $stack17;

        interfaceinvoke compiler.<org.ooc.frontend.compilers.AbstractCompiler: void addObjectFile(java.lang.String)>(compilerArg);

        goto label2;

     label3:
        return;
    }

    private java.util.HashSet collectDeps(org.ooc.frontend.model.Module, java.util.HashSet, java.util.HashSet)
    {
        java.util.HashSet toCompile, done;
        org.ooc.frontend.model.Module module, $stack13, $stack16;
        java.lang.String $stack7, $stack14;
        org.ooc.frontend.model.NodeList $stack9;
        java.util.Iterator l4;
        java.lang.Object $stack12;
        org.ooc.frontend.model.Import import1;
        boolean $stack15, $stack11;
        SequenceDriver this;
        org.ooc.frontend.drivers.SequenceDriver $r0;

        this := @this: SequenceDriver;

        module := @parameter0: org.ooc.frontend.model.Module;

        toCompile := @parameter1: java.util.HashSet;

        done := @parameter2: java.util.HashSet;

        virtualinvoke toCompile.<java.util.HashSet: boolean add(java.lang.Object)>(module);

        $stack7 = virtualinvoke module.<org.ooc.frontend.model.Module: java.lang.String getPath()>();

        virtualinvoke done.<java.util.HashSet: boolean add(java.lang.Object)>($stack7);

        $stack9 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getAllImports()>();

        l4 = virtualinvoke $stack9.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label1:
        $stack11 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label3;

        $stack12 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        import1 = (org.ooc.frontend.model.Import) $stack12;

        $stack13 = virtualinvoke import1.<org.ooc.frontend.model.Import: org.ooc.frontend.model.Module getModule()>();

        $stack14 = virtualinvoke $stack13.<org.ooc.frontend.model.Module: java.lang.String getPath()>();

        $stack15 = virtualinvoke done.<java.util.HashSet: boolean contains(java.lang.Object)>($stack14);

        if $stack15 == 0 goto label2;

        goto label1;

     label2:
        $stack16 = virtualinvoke import1.<org.ooc.frontend.model.Import: org.ooc.frontend.model.Module getModule()>();

        $r0 = (org.ooc.frontend.drivers.SequenceDriver) this;

        virtualinvoke $r0.<org.ooc.frontend.drivers.SequenceDriver: java.util.HashSet collectDeps(org.ooc.frontend.model.Module,java.util.HashSet,java.util.HashSet)>($stack16, toCompile, done);

        goto label1;

     label3:
        return toCompile;
    }
}
