public class Settings extends org.apache.maven.settings.TrackableBase implements java.io.Serializable, java.lang.Cloneable
{
    private java.lang.String localRepository;
    private boolean interactiveMode;
    private boolean usePluginRegistry;
    private boolean offline;
    private java.util.List proxies;
    private java.util.List servers;
    private java.util.List mirrors;
    private java.util.List profiles;
    private java.util.List activeProfiles;
    private java.util.List pluginGroups;
    private java.lang.String modelEncoding;
    private org.apache.maven.settings.Proxy activeProxy;
    private java.util.Map profileMap;

    public void <init>()
    {
        Settings this;
        org.apache.maven.settings.Settings $r0, $r1, $r2, $r3;

        this := @this: Settings;

        specialinvoke this.<org.apache.maven.settings.TrackableBase: void <init>()>();

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: boolean interactiveMode> = 1;

        $r1 = (org.apache.maven.settings.Settings) this;

        $r1.<org.apache.maven.settings.Settings: boolean usePluginRegistry> = 0;

        $r2 = (org.apache.maven.settings.Settings) this;

        $r2.<org.apache.maven.settings.Settings: boolean offline> = 0;

        $r3 = (org.apache.maven.settings.Settings) this;

        $r3.<org.apache.maven.settings.Settings: java.lang.String modelEncoding> = "UTF-8";

        return;
    }

    public void addActiveProfile(java.lang.String)
    {
        Settings this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getActiveProfiles()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(string);

        return;
    }

    public void addMirror(org.apache.maven.settings.Mirror)
    {
        Settings this;
        java.util.List $stack2;
        org.apache.maven.settings.Mirror mirror;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        mirror := @parameter0: org.apache.maven.settings.Mirror;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getMirrors()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(mirror);

        return;
    }

    public void addPluginGroup(java.lang.String)
    {
        Settings this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getPluginGroups()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(string);

        return;
    }

    public void addProfile(org.apache.maven.settings.Profile)
    {
        Settings this;
        java.util.List $stack2;
        org.apache.maven.settings.Profile profile;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        profile := @parameter0: org.apache.maven.settings.Profile;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getProfiles()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(profile);

        return;
    }

    public void addProxy(org.apache.maven.settings.Proxy)
    {
        Settings this;
        java.util.List $stack2;
        org.apache.maven.settings.Proxy proxy;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        proxy := @parameter0: org.apache.maven.settings.Proxy;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getProxies()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(proxy);

        return;
    }

    public void addServer(org.apache.maven.settings.Server)
    {
        Settings this;
        java.util.List $stack2;
        org.apache.maven.settings.Server server;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        server := @parameter0: org.apache.maven.settings.Server;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getServers()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(server);

        return;
    }

    public org.apache.maven.settings.Settings clone()
    {
        Settings this;
        org.apache.maven.settings.TrackableBase $stack4;
        java.util.List $stack5, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack13, $stack17, $stack18, $stack22, $stack27, $stack32, $stack37, $stack42, $stack47, $stack52, $stack57;
        boolean $stack24, $stack34, $stack44, $stack54;
        java.lang.Object $stack26, $stack36, $stack46, $stack56;
        org.apache.maven.settings.Profile $stack28, item#9;
        org.apache.maven.settings.Mirror $stack38, item#7;
        org.apache.maven.settings.Server $stack48, item#5;
        org.apache.maven.settings.Proxy $stack58, item;
        java.lang.Exception $stack61;
        java.lang.Class $stack64;
        java.lang.String $stack65, $stack68;
        java.lang.StringBuilder $stack66, $stack67, $u6;
        java.lang.Throwable $stack69;
        java.lang.RuntimeException $stack70;
        org.apache.maven.settings.Settings copy, $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.util.Iterator l2;
        java.util.ArrayList $u0, $u1, $u2, $u3, $u4, $u5;
        java.lang.UnsupportedOperationException $u7;

        this := @this: Settings;

     label01:
        $stack4 = specialinvoke this.<org.apache.maven.settings.TrackableBase: org.apache.maven.settings.TrackableBase clone()>();

        copy = (org.apache.maven.settings.Settings) $stack4;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack5 = $r0.<org.apache.maven.settings.Settings: java.util.List proxies>;

        if $stack5 == null goto label03;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.settings.Settings: java.util.List proxies> = $u0;

        $r1 = (org.apache.maven.settings.Settings) this;

        $stack52 = $r1.<org.apache.maven.settings.Settings: java.util.List proxies>;

        l2 = interfaceinvoke $stack52.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $stack54 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack54 == 0 goto label03;

        $stack56 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.settings.Proxy) $stack56;

        $stack57 = copy.<org.apache.maven.settings.Settings: java.util.List proxies>;

        $stack58 = virtualinvoke item.<org.apache.maven.settings.Proxy: org.apache.maven.settings.Proxy clone()>();

        interfaceinvoke $stack57.<java.util.List: boolean add(java.lang.Object)>($stack58);

        goto label02;

     label03:
        $r2 = (org.apache.maven.settings.Settings) this;

        $stack6 = $r2.<org.apache.maven.settings.Settings: java.util.List servers>;

        if $stack6 == null goto label05;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.settings.Settings: java.util.List servers> = $u1;

        $r3 = (org.apache.maven.settings.Settings) this;

        $stack42 = $r3.<org.apache.maven.settings.Settings: java.util.List servers>;

        l2 = interfaceinvoke $stack42.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $stack44 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack44 == 0 goto label05;

        $stack46 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item#5 = (org.apache.maven.settings.Server) $stack46;

        $stack47 = copy.<org.apache.maven.settings.Settings: java.util.List servers>;

        $stack48 = virtualinvoke item#5.<org.apache.maven.settings.Server: org.apache.maven.settings.Server clone()>();

        interfaceinvoke $stack47.<java.util.List: boolean add(java.lang.Object)>($stack48);

        goto label04;

     label05:
        $r4 = (org.apache.maven.settings.Settings) this;

        $stack7 = $r4.<org.apache.maven.settings.Settings: java.util.List mirrors>;

        if $stack7 == null goto label07;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.settings.Settings: java.util.List mirrors> = $u2;

        $r5 = (org.apache.maven.settings.Settings) this;

        $stack32 = $r5.<org.apache.maven.settings.Settings: java.util.List mirrors>;

        l2 = interfaceinvoke $stack32.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack34 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack34 == 0 goto label07;

        $stack36 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item#7 = (org.apache.maven.settings.Mirror) $stack36;

        $stack37 = copy.<org.apache.maven.settings.Settings: java.util.List mirrors>;

        $stack38 = virtualinvoke item#7.<org.apache.maven.settings.Mirror: org.apache.maven.settings.Mirror clone()>();

        interfaceinvoke $stack37.<java.util.List: boolean add(java.lang.Object)>($stack38);

        goto label06;

     label07:
        $r6 = (org.apache.maven.settings.Settings) this;

        $stack8 = $r6.<org.apache.maven.settings.Settings: java.util.List profiles>;

        if $stack8 == null goto label09;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.settings.Settings: java.util.List profiles> = $u3;

        $r7 = (org.apache.maven.settings.Settings) this;

        $stack22 = $r7.<org.apache.maven.settings.Settings: java.util.List profiles>;

        l2 = interfaceinvoke $stack22.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack24 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack24 == 0 goto label09;

        $stack26 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item#9 = (org.apache.maven.settings.Profile) $stack26;

        $stack27 = copy.<org.apache.maven.settings.Settings: java.util.List profiles>;

        $stack28 = virtualinvoke item#9.<org.apache.maven.settings.Profile: org.apache.maven.settings.Profile clone()>();

        interfaceinvoke $stack27.<java.util.List: boolean add(java.lang.Object)>($stack28);

        goto label08;

     label09:
        $r8 = (org.apache.maven.settings.Settings) this;

        $stack9 = $r8.<org.apache.maven.settings.Settings: java.util.List activeProfiles>;

        if $stack9 == null goto label10;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.settings.Settings: java.util.List activeProfiles> = $u4;

        $stack18 = copy.<org.apache.maven.settings.Settings: java.util.List activeProfiles>;

        $r9 = (org.apache.maven.settings.Settings) this;

        $stack17 = $r9.<org.apache.maven.settings.Settings: java.util.List activeProfiles>;

        interfaceinvoke $stack18.<java.util.List: boolean addAll(java.util.Collection)>($stack17);

     label10:
        $r10 = (org.apache.maven.settings.Settings) this;

        $stack10 = $r10.<org.apache.maven.settings.Settings: java.util.List pluginGroups>;

        if $stack10 == null goto label11;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.settings.Settings: java.util.List pluginGroups> = $u5;

        $stack13 = copy.<org.apache.maven.settings.Settings: java.util.List pluginGroups>;

        $r11 = (org.apache.maven.settings.Settings) this;

        $stack12 = $r11.<org.apache.maven.settings.Settings: java.util.List pluginGroups>;

        interfaceinvoke $stack13.<java.util.List: boolean addAll(java.util.Collection)>($stack12);

     label11:
        return copy;

     label12:
        $stack61 := @caughtexception;

        $u7 = new java.lang.UnsupportedOperationException;

        $u6 = new java.lang.StringBuilder;

        specialinvoke $u6.<java.lang.StringBuilder: void <init>()>();

        $stack64 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack65 = virtualinvoke $stack64.<java.lang.Class: java.lang.String getName()>();

        $stack66 = virtualinvoke $u6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack65);

        $stack67 = virtualinvoke $stack66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support clone()");

        $stack68 = virtualinvoke $stack67.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack68);

        $stack69 = virtualinvoke $u7.<java.lang.UnsupportedOperationException: java.lang.Throwable initCause(java.lang.Throwable)>($stack61);

        $stack70 = (java.lang.RuntimeException) $stack69;

        throw $stack70;

        catch java.lang.Exception from label01 to label11 with label12;
    }

    public java.util.List getActiveProfiles()
    {
        Settings this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.settings.Settings $r0, $r1, $r2;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: java.util.List activeProfiles>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.settings.Settings) this;

        $r1.<org.apache.maven.settings.Settings: java.util.List activeProfiles> = $u0;

     label1:
        $r2 = (org.apache.maven.settings.Settings) this;

        $stack2 = $r2.<org.apache.maven.settings.Settings: java.util.List activeProfiles>;

        return $stack2;
    }

    public java.lang.String getLocalRepository()
    {
        Settings this;
        java.lang.String $stack1;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: java.lang.String localRepository>;

        return $stack1;
    }

    public java.util.List getMirrors()
    {
        Settings this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.settings.Settings $r0, $r1, $r2;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: java.util.List mirrors>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.settings.Settings) this;

        $r1.<org.apache.maven.settings.Settings: java.util.List mirrors> = $u0;

     label1:
        $r2 = (org.apache.maven.settings.Settings) this;

        $stack2 = $r2.<org.apache.maven.settings.Settings: java.util.List mirrors>;

        return $stack2;
    }

    public java.lang.String getModelEncoding()
    {
        Settings this;
        java.lang.String $stack1;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: java.lang.String modelEncoding>;

        return $stack1;
    }

    public java.util.List getPluginGroups()
    {
        Settings this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.settings.Settings $r0, $r1, $r2;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: java.util.List pluginGroups>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.settings.Settings) this;

        $r1.<org.apache.maven.settings.Settings: java.util.List pluginGroups> = $u0;

     label1:
        $r2 = (org.apache.maven.settings.Settings) this;

        $stack2 = $r2.<org.apache.maven.settings.Settings: java.util.List pluginGroups>;

        return $stack2;
    }

    public java.util.List getProfiles()
    {
        Settings this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.settings.Settings $r0, $r1, $r2;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: java.util.List profiles>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.settings.Settings) this;

        $r1.<org.apache.maven.settings.Settings: java.util.List profiles> = $u0;

     label1:
        $r2 = (org.apache.maven.settings.Settings) this;

        $stack2 = $r2.<org.apache.maven.settings.Settings: java.util.List profiles>;

        return $stack2;
    }

    public java.util.List getProxies()
    {
        Settings this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.settings.Settings $r0, $r1, $r2;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: java.util.List proxies>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.settings.Settings) this;

        $r1.<org.apache.maven.settings.Settings: java.util.List proxies> = $u0;

     label1:
        $r2 = (org.apache.maven.settings.Settings) this;

        $stack2 = $r2.<org.apache.maven.settings.Settings: java.util.List proxies>;

        return $stack2;
    }

    public java.util.List getServers()
    {
        Settings this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.settings.Settings $r0, $r1, $r2;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: java.util.List servers>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.settings.Settings) this;

        $r1.<org.apache.maven.settings.Settings: java.util.List servers> = $u0;

     label1:
        $r2 = (org.apache.maven.settings.Settings) this;

        $stack2 = $r2.<org.apache.maven.settings.Settings: java.util.List servers>;

        return $stack2;
    }

    public boolean isInteractiveMode()
    {
        Settings this;
        boolean $stack1;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: boolean interactiveMode>;

        return $stack1;
    }

    public boolean isOffline()
    {
        Settings this;
        boolean $stack1;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: boolean offline>;

        return $stack1;
    }

    public boolean isUsePluginRegistry()
    {
        Settings this;
        boolean $stack1;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = $r0.<org.apache.maven.settings.Settings: boolean usePluginRegistry>;

        return $stack1;
    }

    public void removeActiveProfile(java.lang.String)
    {
        Settings this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getActiveProfiles()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(string);

        return;
    }

    public void removeMirror(org.apache.maven.settings.Mirror)
    {
        Settings this;
        java.util.List $stack2;
        org.apache.maven.settings.Mirror mirror;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        mirror := @parameter0: org.apache.maven.settings.Mirror;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getMirrors()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(mirror);

        return;
    }

    public void removePluginGroup(java.lang.String)
    {
        Settings this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getPluginGroups()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(string);

        return;
    }

    public void removeProfile(org.apache.maven.settings.Profile)
    {
        Settings this;
        java.util.List $stack2;
        org.apache.maven.settings.Profile profile;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        profile := @parameter0: org.apache.maven.settings.Profile;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getProfiles()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(profile);

        return;
    }

    public void removeProxy(org.apache.maven.settings.Proxy)
    {
        Settings this;
        java.util.List $stack2;
        org.apache.maven.settings.Proxy proxy;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        proxy := @parameter0: org.apache.maven.settings.Proxy;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getProxies()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(proxy);

        return;
    }

    public void removeServer(org.apache.maven.settings.Server)
    {
        Settings this;
        java.util.List $stack2;
        org.apache.maven.settings.Server server;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        server := @parameter0: org.apache.maven.settings.Server;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getServers()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(server);

        return;
    }

    public void setActiveProfiles(java.util.List)
    {
        Settings this;
        java.util.List activeProfiles;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        activeProfiles := @parameter0: java.util.List;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: java.util.List activeProfiles> = activeProfiles;

        return;
    }

    public void setInteractiveMode(boolean)
    {
        Settings this;
        boolean interactiveMode;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        interactiveMode := @parameter0: boolean;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: boolean interactiveMode> = interactiveMode;

        return;
    }

    public void setLocalRepository(java.lang.String)
    {
        Settings this;
        java.lang.String localRepository;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        localRepository := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: java.lang.String localRepository> = localRepository;

        return;
    }

    public void setMirrors(java.util.List)
    {
        Settings this;
        java.util.List mirrors;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        mirrors := @parameter0: java.util.List;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: java.util.List mirrors> = mirrors;

        return;
    }

    public void setModelEncoding(java.lang.String)
    {
        Settings this;
        java.lang.String modelEncoding;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        modelEncoding := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: java.lang.String modelEncoding> = modelEncoding;

        return;
    }

    public void setOffline(boolean)
    {
        Settings this;
        boolean offline;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        offline := @parameter0: boolean;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: boolean offline> = offline;

        return;
    }

    public void setPluginGroups(java.util.List)
    {
        Settings this;
        java.util.List pluginGroups;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        pluginGroups := @parameter0: java.util.List;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: java.util.List pluginGroups> = pluginGroups;

        return;
    }

    public void setProfiles(java.util.List)
    {
        Settings this;
        java.util.List profiles;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        profiles := @parameter0: java.util.List;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: java.util.List profiles> = profiles;

        return;
    }

    public void setProxies(java.util.List)
    {
        Settings this;
        java.util.List proxies;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        proxies := @parameter0: java.util.List;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: java.util.List proxies> = proxies;

        return;
    }

    public void setServers(java.util.List)
    {
        Settings this;
        java.util.List servers;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        servers := @parameter0: java.util.List;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: java.util.List servers> = servers;

        return;
    }

    public void setUsePluginRegistry(boolean)
    {
        Settings this;
        boolean usePluginRegistry;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        usePluginRegistry := @parameter0: boolean;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: boolean usePluginRegistry> = usePluginRegistry;

        return;
    }

    public java.lang.Boolean getInteractiveMode()
    {
        Settings this;
        boolean $stack1;
        java.lang.Boolean $stack2;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.settings.Settings: boolean isInteractiveMode()>();

        $stack2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack1);

        return $stack2;
    }

    public void flushActiveProxy()
    {
        Settings this;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: org.apache.maven.settings.Proxy activeProxy> = null;

        return;
    }

    public synchronized org.apache.maven.settings.Proxy getActiveProxy()
    {
        Settings this;
        org.apache.maven.settings.Proxy $stack4, proxy, $stack5;
        java.util.List proxies;
        boolean $stack8, $stack10, $stack12;
        java.util.Iterator l2;
        java.lang.Object $stack11;
        org.apache.maven.settings.Settings $r0, $r1, $r2, $r3;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack4 = $r0.<org.apache.maven.settings.Settings: org.apache.maven.settings.Proxy activeProxy>;

        if $stack4 != null goto label3;

        $r1 = (org.apache.maven.settings.Settings) this;

        proxies = virtualinvoke $r1.<org.apache.maven.settings.Settings: java.util.List getProxies()>();

        if proxies == null goto label3;

        $stack8 = interfaceinvoke proxies.<java.util.List: boolean isEmpty()>();

        if $stack8 != 0 goto label3;

        l2 = interfaceinvoke proxies.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label3;

        $stack11 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        proxy = (org.apache.maven.settings.Proxy) $stack11;

        $stack12 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: boolean isActive()>();

        if $stack12 == 0 goto label2;

        $r2 = (org.apache.maven.settings.Settings) this;

        $r2.<org.apache.maven.settings.Settings: org.apache.maven.settings.Proxy activeProxy> = proxy;

        goto label3;

     label2:
        goto label1;

     label3:
        $r3 = (org.apache.maven.settings.Settings) this;

        $stack5 = $r3.<org.apache.maven.settings.Settings: org.apache.maven.settings.Proxy activeProxy>;

        return $stack5;
    }

    public org.apache.maven.settings.Server getServer(java.lang.String)
    {
        Settings this;
        java.util.List servers;
        java.lang.String serverId, $stack11;
        java.util.Iterator l4;
        boolean $stack9, $stack12;
        java.lang.Object $stack10;
        org.apache.maven.settings.Server server, match;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        serverId := @parameter0: java.lang.String;

        match = null;

        $r0 = (org.apache.maven.settings.Settings) this;

        servers = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getServers()>();

        if servers == null goto label3;

        if serverId == null goto label3;

        l4 = interfaceinvoke servers.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack10 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        server = (org.apache.maven.settings.Server) $stack10;

        $stack11 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getId()>();

        $stack12 = virtualinvoke serverId.<java.lang.String: boolean equals(java.lang.Object)>($stack11);

        if $stack12 == 0 goto label2;

        match = server;

        goto label3;

     label2:
        goto label1;

     label3:
        return match;
    }

    public org.apache.maven.settings.Mirror getMirrorOf(java.lang.String)
    {
        Settings this;
        java.util.List mirrors;
        java.lang.String repositoryId, $stack11;
        java.util.Iterator l4;
        boolean $stack9, $stack12;
        java.lang.Object $stack10;
        org.apache.maven.settings.Mirror mirror, match;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        repositoryId := @parameter0: java.lang.String;

        match = null;

        $r0 = (org.apache.maven.settings.Settings) this;

        mirrors = virtualinvoke $r0.<org.apache.maven.settings.Settings: java.util.List getMirrors()>();

        if mirrors == null goto label3;

        if repositoryId == null goto label3;

        l4 = interfaceinvoke mirrors.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack10 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        mirror = (org.apache.maven.settings.Mirror) $stack10;

        $stack11 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getMirrorOf()>();

        $stack12 = virtualinvoke repositoryId.<java.lang.String: boolean equals(java.lang.Object)>($stack11);

        if $stack12 == 0 goto label2;

        match = mirror;

        goto label3;

     label2:
        goto label1;

     label3:
        return match;
    }

    public void flushProfileMap()
    {
        Settings this;
        org.apache.maven.settings.Settings $r0;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $r0.<org.apache.maven.settings.Settings: java.util.Map profileMap> = null;

        return;
    }

    public java.util.Map getProfilesAsMap()
    {
        Settings this;
        java.util.Map $stack3, $stack12, $stack4;
        java.util.List $stack6, $stack8;
        java.util.Iterator l1;
        boolean $stack10;
        java.lang.Object $stack11;
        org.apache.maven.settings.Profile profile;
        java.lang.String $stack13;
        java.util.LinkedHashMap $u0;
        org.apache.maven.settings.Settings $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack3 = $r0.<org.apache.maven.settings.Settings: java.util.Map profileMap>;

        if $stack3 != null goto label2;

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $r1 = (org.apache.maven.settings.Settings) this;

        $r1.<org.apache.maven.settings.Settings: java.util.Map profileMap> = $u0;

        $r2 = (org.apache.maven.settings.Settings) this;

        $stack6 = virtualinvoke $r2.<org.apache.maven.settings.Settings: java.util.List getProfiles()>();

        if $stack6 == null goto label2;

        $r3 = (org.apache.maven.settings.Settings) this;

        $stack8 = virtualinvoke $r3.<org.apache.maven.settings.Settings: java.util.List getProfiles()>();

        l1 = interfaceinvoke $stack8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l1.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label2;

        $stack11 = interfaceinvoke l1.<java.util.Iterator: java.lang.Object next()>();

        profile = (org.apache.maven.settings.Profile) $stack11;

        $r4 = (org.apache.maven.settings.Settings) this;

        $stack12 = $r4.<org.apache.maven.settings.Settings: java.util.Map profileMap>;

        $stack13 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.lang.String getId()>();

        interfaceinvoke $stack12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack13, profile);

        goto label1;

     label2:
        $r5 = (org.apache.maven.settings.Settings) this;

        $stack4 = $r5.<org.apache.maven.settings.Settings: java.util.Map profileMap>;

        return $stack4;
    }

    public volatile org.apache.maven.settings.TrackableBase clone()
    {
        Settings this;
        org.apache.maven.settings.Settings $stack1, $r0;
        org.apache.maven.settings.TrackableBase $r1;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.settings.Settings: org.apache.maven.settings.Settings clone()>();

        $r1 = (org.apache.maven.settings.TrackableBase) $stack1;

        return $r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        Settings this;
        org.apache.maven.settings.Settings $stack1, $r0;

        this := @this: Settings;

        $r0 = (org.apache.maven.settings.Settings) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.settings.Settings: org.apache.maven.settings.Settings clone()>();

        return $stack1;
    }
}
