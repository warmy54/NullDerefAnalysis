public class SettingsXpp3Reader extends java.lang.Object
{
    private boolean addDefaultEntities;
    public final org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer contentTransformer;

    public void <init>()
    {
        SettingsXpp3Reader this;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$1 $u0;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer $r1;

        this := @this: SettingsXpp3Reader;

        $u0 = new org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$1;

        specialinvoke $u0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$1: void <init>()>();

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer) $u0;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void <init>(org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer)>($r1);

        return;
    }

    public void <init>(org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer)
    {
        SettingsXpp3Reader this;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer contentTransformer;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1;

        this := @this: SettingsXpp3Reader;

        contentTransformer := @parameter0: org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean addDefaultEntities> = 1;

        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer contentTransformer> = contentTransformer;

        return;
    }

    private boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser, java.lang.String, java.lang.String, java.util.Set) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String $stack5, tagName, $stack13, $stack14, alias;
        boolean $stack6, $stack7, $stack15;
        java.util.Set parsed;
        java.lang.StringBuilder $stack10, $stack11, $stack12, $u0;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        tagName := @parameter1: java.lang.String;

        alias := @parameter2: java.lang.String;

        parsed := @parameter3: java.util.Set;

        $stack5 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>(tagName);

        if $stack6 != 0 goto label1;

        $stack14 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>(alias);

        if $stack15 != 0 goto label1;

        return 0;

     label1:
        $stack7 = interfaceinvoke parsed.<java.util.Set: boolean add(java.lang.Object)>(tagName);

        if $stack7 != 0 goto label2;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicated tag: \'");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tagName);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack13, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        return 1;
    }

    private void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser, java.lang.String, java.lang.String, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException, java.io.IOException
    {
        boolean strict;
        java.lang.StringBuilder $stack7, $stack8, $stack9, $stack10, $stack11, $u0;
        java.lang.String attribute, tagName, $stack12;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        attribute := @parameter1: java.lang.String;

        tagName := @parameter2: java.lang.String;

        strict := @parameter3: boolean;

        if strict == 0 goto label1;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown attribute \'");

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' for tag \'");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(tagName);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack12, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        return;
    }

    private void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException, java.io.IOException
    {
        boolean strict;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        int eventType, unrecognizedTagCount;
        java.lang.StringBuilder $stack9, $stack11, $stack12, $u0;
        java.lang.String $stack10, $stack13;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        if strict == 0 goto label1;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unrecognised tag: \'");

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack13, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        unrecognizedTagCount = 1;

     label2:
        if unrecognizedTagCount <= 0 goto label5;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

        if eventType != 2 goto label3;

        unrecognizedTagCount = unrecognizedTagCount + 1;

        goto label4;

     label3:
        if eventType != 3 goto label4;

        unrecognizedTagCount = unrecognizedTagCount + -1;

     label4:
        goto label2;

     label5:
        return;
    }

    public boolean getAddDefaultEntities()
    {
        SettingsXpp3Reader this;
        boolean $stack1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0;

        this := @this: SettingsXpp3Reader;

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack1 = $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean addDefaultEntities>;

        return $stack1;
    }

    private boolean getBooleanValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        SettingsXpp3Reader this;
        java.lang.String s, attribute;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        boolean $stack4;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>(s, attribute, parser, null);

        return $stack4;
    }

    private boolean getBooleanValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, java.lang.String) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, defaultValue, attribute;
        java.lang.Boolean $stack5, $stack9;
        boolean $stack6, $stack10;
        int $stack7;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        defaultValue := @parameter3: java.lang.String;

        if s == null goto label1;

        $stack7 = virtualinvoke s.<java.lang.String: int length()>();

        if $stack7 == 0 goto label1;

        $stack9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(s);

        $stack10 = virtualinvoke $stack9.<java.lang.Boolean: boolean booleanValue()>();

        return $stack10;

     label1:
        if defaultValue == null goto label2;

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(defaultValue);

        $stack6 = virtualinvoke $stack5.<java.lang.Boolean: boolean booleanValue()>();

        return $stack6;

     label2:
        return 0;
    }

    private byte getByteValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Byte $stack6;
        byte $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Byte: byte byteValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a byte");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private char getCharacterValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute;
        char $stack4;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        if s == null goto label1;

        $stack4 = virtualinvoke s.<java.lang.String: char charAt(int)>(0);

        return $stack4;

     label1:
        return 0;
    }

    private java.util.Date getDateValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        SettingsXpp3Reader this;
        java.lang.String s, attribute;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.util.Date $stack4;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack4 = specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.util.Date getDateValue(java.lang.String,java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser)>(s, attribute, null, parser);

        return $stack4;
    }

    private java.util.Date getDateValue(java.lang.String, java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, dateFormat, $stack7, $stack17, $stack20, attribute, effectiveDateFormat;
        boolean $stack8;
        java.util.Locale $stack10;
        java.util.Date $stack11, $u0;
        long $stack13;
        java.text.ParseException $stack15;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.NumberFormatException $stack18;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1, $u3;
        java.text.SimpleDateFormat $u2;
        java.lang.Throwable $r0, $r1;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        dateFormat := @parameter2: java.lang.String;

        parser := @parameter3: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        if s == null goto label8;

        effectiveDateFormat = dateFormat;

        if dateFormat != null goto label1;

        effectiveDateFormat = "yyyy-MM-dd\'T\'HH:mm:ss.SSS";

     label1:
        $stack7 = "long";

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>(effectiveDateFormat);

        if $stack8 == 0 goto label5;

     label2:
        $u0 = new java.util.Date;

        $stack13 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(s);

        specialinvoke $u0.<java.util.Date: void <init>(long)>($stack13);

     label3:
        return $u0;

     label4:
        $stack18 := @caughtexception;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $stack20 = virtualinvoke $stack18.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack20, parser, $stack18);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label5:
        $u2 = new java.text.SimpleDateFormat;

        $stack10 = <java.util.Locale: java.util.Locale US>;

        specialinvoke $u2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(effectiveDateFormat, $stack10);

        $stack11 = virtualinvoke $u2.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(s);

     label6:
        return $stack11;

     label7:
        $stack15 := @caughtexception;

        $u3 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $stack17 = virtualinvoke $stack15.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $u3.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack17, parser, $stack15);

        $r1 = (java.lang.Throwable) $u3;

        throw $r1;

     label8:
        return null;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
        catch java.text.ParseException from label5 to label6 with label7;
    }

    private double getDoubleValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Double $stack6;
        double $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Double: double doubleValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a floating point number");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0.0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private float getFloatValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Float $stack6;
        float $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Float: float floatValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a floating point number");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0.0F;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private int getIntegerValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Integer $stack6;
        int $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Integer: int intValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be an integer");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private long getLongValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Long $stack6;
        long $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Long: long longValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a long integer");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private java.lang.String getRequiredAttributeValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack11;
        boolean strict;
        java.lang.StringBuilder $stack8, $stack9, $stack10, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s != null goto label1;

        if strict == 0 goto label1;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing required value for attribute \'");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack11, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label1:
        return s;
    }

    private short getShortValue(java.lang.String, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        java.lang.String s, attribute, $stack15;
        java.lang.Short $stack6;
        short $stack7;
        java.lang.NumberFormatException $stack8;
        boolean strict;
        java.lang.StringBuilder $stack12, $stack13, $stack14, $u0;
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        attribute := @parameter1: java.lang.String;

        parser := @parameter2: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter3: boolean;

        if s == null goto label4;

     label1:
        $stack6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(java.lang.String)>(s);

        $stack7 = virtualinvoke $stack6.<java.lang.Short: short shortValue()>();

     label2:
        return $stack7;

     label3:
        $stack8 := @caughtexception;

        if strict == 0 goto label4;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack12 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse element \'");

        $stack13 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(attribute);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', must be a short integer");

        $stack15 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack15, parser, $stack8);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label4:
        return 0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private java.lang.String getTrimmedValue(java.lang.String)
    {
        SettingsXpp3Reader this;
        java.lang.String s;

        this := @this: SettingsXpp3Reader;

        s := @parameter0: java.lang.String;

        if s == null goto label1;

        s = virtualinvoke s.<java.lang.String: java.lang.String trim()>();

     label1:
        return s;
    }

    private java.lang.String interpolatedTrimmed(java.lang.String, java.lang.String)
    {
        SettingsXpp3Reader this;
        java.lang.String value, context, $stack4, $stack5;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer $stack3;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1;

        this := @this: SettingsXpp3Reader;

        value := @parameter0: java.lang.String;

        context := @parameter1: java.lang.String;

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack3 = $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer contentTransformer>;

        $stack4 = interfaceinvoke $stack3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader$ContentTransformer: java.lang.String transform(java.lang.String,java.lang.String)>(value, context);

        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack5 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String getTrimmedValue(java.lang.String)>($stack4);

        return $stack5;
    }

    private int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.StringBuilder $stack7, $stack10, $u0;
        java.lang.String[] $stack8;
        java.lang.String $stack9, $stack11;
        SettingsXpp3Reader this;
        int eventType;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1;
        java.lang.Throwable $r0;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

        if eventType != 4 goto label1;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

     label1:
        if eventType == 2 goto label2;

        if eventType == 3 goto label2;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected START_TAG or END_TAG not ");

        $stack8 = <org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String[] TYPES>;

        $stack9 = $stack8[eventType];

        $stack10 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack11, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        return eventType;
    }

    public org.apache.maven.settings.Settings read(java.io.Reader, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        SettingsXpp3Reader this;
        boolean $stack4, strict;
        java.io.Reader reader;
        org.apache.maven.settings.Settings $stack6;
        org.codehaus.plexus.util.xml.pull.EntityReplacementMap $stack8;
        org.codehaus.plexus.util.xml.pull.MXParser $stack5, $u0, $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r2;
        org.codehaus.plexus.util.xml.pull.XmlPullParser $r1, $r3;

        this := @this: SettingsXpp3Reader;

        reader := @parameter0: java.io.Reader;

        strict := @parameter1: boolean;

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack4 = $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean addDefaultEntities>;

        if $stack4 == 0 goto label1;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXParser;

        $stack5 = $u0;

        $stack8 = <org.codehaus.plexus.util.xml.pull.EntityReplacementMap: org.codehaus.plexus.util.xml.pull.EntityReplacementMap defaultEntityReplacementMap>;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXParser: void <init>(org.codehaus.plexus.util.xml.pull.EntityReplacementMap)>($stack8);

        goto label2;

     label1:
        $u1 = new org.codehaus.plexus.util.xml.pull.MXParser;

        $stack5 = $u1;

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.MXParser: void <init>()>();

     label2:
        $r1 = (org.codehaus.plexus.util.xml.pull.XmlPullParser) $stack5;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlPullParser: void setInput(java.io.Reader)>(reader);

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlPullParser) $stack5;

        $stack6 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Settings read(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>($r3, strict);

        return $stack6;
    }

    public org.apache.maven.settings.Settings read(java.io.Reader) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        SettingsXpp3Reader this;
        java.io.Reader reader;
        org.apache.maven.settings.Settings $stack2;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0;

        this := @this: SettingsXpp3Reader;

        reader := @parameter0: java.io.Reader;

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Settings read(java.io.Reader,boolean)>(reader, 1);

        return $stack2;
    }

    public org.apache.maven.settings.Settings read(java.io.InputStream, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        SettingsXpp3Reader this;
        java.io.InputStream in;
        org.codehaus.plexus.util.xml.XmlStreamReader $stack3;
        boolean strict;
        org.apache.maven.settings.Settings $stack4;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0;
        java.io.Reader $r1;

        this := @this: SettingsXpp3Reader;

        in := @parameter0: java.io.InputStream;

        strict := @parameter1: boolean;

        $stack3 = staticinvoke <org.codehaus.plexus.util.ReaderFactory: org.codehaus.plexus.util.xml.XmlStreamReader newXmlReader(java.io.InputStream)>(in);

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $r1 = (java.io.Reader) $stack3;

        $stack4 = virtualinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Settings read(java.io.Reader,boolean)>($r1, strict);

        return $stack4;
    }

    public org.apache.maven.settings.Settings read(java.io.InputStream) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        SettingsXpp3Reader this;
        java.io.InputStream in;
        org.codehaus.plexus.util.xml.XmlStreamReader $stack2;
        org.apache.maven.settings.Settings $stack3;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0;
        java.io.Reader $r1;

        this := @this: SettingsXpp3Reader;

        in := @parameter0: java.io.InputStream;

        $stack2 = staticinvoke <org.codehaus.plexus.util.ReaderFactory: org.codehaus.plexus.util.xml.XmlStreamReader newXmlReader(java.io.InputStream)>(in);

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $r1 = (java.io.Reader) $stack2;

        $stack3 = virtualinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Settings read(java.io.Reader)>($r1);

        return $stack3;
    }

    private org.apache.maven.settings.Activation parseActivation(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack22, $stack23, $stack24, $stack25, name;
        int $stack10, $stack31, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack26;
        SettingsXpp3Reader this;
        org.apache.maven.settings.ActivationFile $stack19;
        org.apache.maven.settings.ActivationProperty $stack20;
        org.apache.maven.settings.ActivationOS $stack21;
        org.apache.maven.settings.Activation $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.Activation;

        specialinvoke $u0.<org.apache.maven.settings.Activation: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack31 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack31 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label13;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "activeByDefault", null, $u1);

        if $stack13 == 0 goto label08;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "activeByDefault");

        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack26 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack25, "activeByDefault", parser, "false");

        virtualinvoke $u0.<org.apache.maven.settings.Activation: void setActiveByDefault(boolean)>($stack26);

        goto label05;

     label08:
        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "jdk", null, $u1);

        if $stack14 == 0 goto label09;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack23 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "jdk");

        virtualinvoke $u0.<org.apache.maven.settings.Activation: void setJdk(java.lang.String)>($stack23);

        goto label05;

     label09:
        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "os", null, $u1);

        if $stack15 == 0 goto label10;

        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack21 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.ActivationOS parseActivationOS(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.settings.Activation: void setOs(org.apache.maven.settings.ActivationOS)>($stack21);

        goto label05;

     label10:
        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "property", null, $u1);

        if $stack16 == 0 goto label11;

        $r10 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack20 = specialinvoke $r10.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.ActivationProperty parseActivationProperty(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.settings.Activation: void setProperty(org.apache.maven.settings.ActivationProperty)>($stack20);

        goto label05;

     label11:
        $r11 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "file", null, $u1);

        if $stack17 == 0 goto label12;

        $r12 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack19 = specialinvoke $r12.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.ActivationFile parseActivationFile(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.settings.Activation: void setFile(org.apache.maven.settings.ActivationFile)>($stack19);

        goto label05;

     label12:
        $r13 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r13.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label13:
        return $u0;
    }

    private org.apache.maven.settings.ActivationFile parseActivationFile(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack16, $stack17, $stack18, $stack19, name;
        int $stack10, $stack24, i, $stack12;
        boolean strict, $stack13, $stack14;
        SettingsXpp3Reader this;
        org.apache.maven.settings.ActivationFile $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.ActivationFile;

        specialinvoke $u0.<org.apache.maven.settings.ActivationFile: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack24 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack24 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label10;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "missing", null, $u1);

        if $stack13 == 0 goto label08;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack19 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "missing");

        virtualinvoke $u0.<org.apache.maven.settings.ActivationFile: void setMissing(java.lang.String)>($stack19);

        goto label05;

     label08:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "exists", null, $u1);

        if $stack14 == 0 goto label09;

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack17 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack16, "exists");

        virtualinvoke $u0.<org.apache.maven.settings.ActivationFile: void setExists(java.lang.String)>($stack17);

        goto label05;

     label09:
        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.settings.ActivationOS parseActivationOS(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, name;
        int $stack10, $stack30, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16;
        SettingsXpp3Reader this;
        org.apache.maven.settings.ActivationOS $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.ActivationOS;

        specialinvoke $u0.<org.apache.maven.settings.ActivationOS: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack30 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack30 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack13 == 0 goto label08;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "name");

        virtualinvoke $u0.<org.apache.maven.settings.ActivationOS: void setName(java.lang.String)>($stack25);

        goto label05;

     label08:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "family", null, $u1);

        if $stack14 == 0 goto label09;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack23 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "family");

        virtualinvoke $u0.<org.apache.maven.settings.ActivationOS: void setFamily(java.lang.String)>($stack23);

        goto label05;

     label09:
        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "arch", null, $u1);

        if $stack15 == 0 goto label10;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "arch");

        virtualinvoke $u0.<org.apache.maven.settings.ActivationOS: void setArch(java.lang.String)>($stack21);

        goto label05;

     label10:
        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "version", null, $u1);

        if $stack16 == 0 goto label11;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack19 = specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "version");

        virtualinvoke $u0.<org.apache.maven.settings.ActivationOS: void setVersion(java.lang.String)>($stack19);

        goto label05;

     label11:
        $r10 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.settings.ActivationProperty parseActivationProperty(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack16, $stack17, $stack18, $stack19, name;
        int $stack10, $stack24, i, $stack12;
        boolean strict, $stack13, $stack14;
        SettingsXpp3Reader this;
        org.apache.maven.settings.ActivationProperty $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.ActivationProperty;

        specialinvoke $u0.<org.apache.maven.settings.ActivationProperty: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack24 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack24 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label10;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack13 == 0 goto label08;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack19 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "name");

        virtualinvoke $u0.<org.apache.maven.settings.ActivationProperty: void setName(java.lang.String)>($stack19);

        goto label05;

     label08:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "value", null, $u1);

        if $stack14 == 0 goto label09;

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack17 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack16, "value");

        virtualinvoke $u0.<org.apache.maven.settings.ActivationProperty: void setValue(java.lang.String)>($stack17);

        goto label05;

     label09:
        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label10:
        return $u0;
    }

    private org.apache.maven.settings.IdentifiableBase parseIdentifiableBase(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack15, $stack16, name;
        int $stack10, $stack21, i, $stack12;
        boolean strict, $stack13;
        SettingsXpp3Reader this;
        org.apache.maven.settings.IdentifiableBase $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.IdentifiableBase;

        specialinvoke $u0.<org.apache.maven.settings.IdentifiableBase: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label1:
        if i < 0 goto label4;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack21 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack21 < 0 goto label2;

        goto label3;

     label2:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label3:
        i = i + -1;

        goto label1;

     label4:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label5:
        if strict == 0 goto label6;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label7;

     label6:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label7:
        if $stack12 != 2 goto label9;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack13 == 0 goto label8;

        $stack15 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack15, "id");

        virtualinvoke $u0.<org.apache.maven.settings.IdentifiableBase: void setId(java.lang.String)>($stack16);

        goto label5;

     label8:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label5;

     label9:
        return $u0;
    }

    private org.apache.maven.settings.Mirror parseMirror(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack21, $stack22, $stack23, $stack24, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, name;
        int $stack10, $stack40, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack25;
        SettingsXpp3Reader this;
        org.apache.maven.settings.Mirror $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.Mirror;

        specialinvoke $u0.<org.apache.maven.settings.Mirror: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack40 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack40 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label15;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "mirrorOf", null, $u1);

        if $stack13 == 0 goto label08;

        $stack34 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack35 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack34, "mirrorOf");

        virtualinvoke $u0.<org.apache.maven.settings.Mirror: void setMirrorOf(java.lang.String)>($stack35);

        goto label05;

     label08:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack14 == 0 goto label09;

        $stack32 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack33 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack32, "name");

        virtualinvoke $u0.<org.apache.maven.settings.Mirror: void setName(java.lang.String)>($stack33);

        goto label05;

     label09:
        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack15 == 0 goto label10;

        $stack30 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack31 = specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack30, "url");

        virtualinvoke $u0.<org.apache.maven.settings.Mirror: void setUrl(java.lang.String)>($stack31);

        goto label05;

     label10:
        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "layout", null, $u1);

        if $stack16 == 0 goto label11;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack29 = specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack28, "layout");

        virtualinvoke $u0.<org.apache.maven.settings.Mirror: void setLayout(java.lang.String)>($stack29);

        goto label05;

     label11:
        $r10 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "mirrorOfLayouts", null, $u1);

        if $stack17 == 0 goto label12;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack27 = specialinvoke $r11.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "mirrorOfLayouts");

        virtualinvoke $u0.<org.apache.maven.settings.Mirror: void setMirrorOfLayouts(java.lang.String)>($stack27);

        goto label05;

     label12:
        $r12 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "blocked", null, $u1);

        if $stack18 == 0 goto label13;

        $stack23 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack24 = specialinvoke $r13.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack23, "blocked");

        $r14 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack25 = specialinvoke $r14.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack24, "blocked", parser, "false");

        virtualinvoke $u0.<org.apache.maven.settings.Mirror: void setBlocked(boolean)>($stack25);

        goto label05;

     label13:
        $r15 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack19 = specialinvoke $r15.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack19 == 0 goto label14;

        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack22 = specialinvoke $r16.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack21, "id");

        virtualinvoke $u0.<org.apache.maven.settings.Mirror: void setId(java.lang.String)>($stack22);

        goto label05;

     label14:
        $r17 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r17.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label15:
        return $u0;
    }

    private org.apache.maven.settings.Profile parseProfile(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack19, $stack20, $stack23, $stack24, $stack32, $stack33, $stack41, name, value;
        int $stack10, $stack39, $stack50, i, $stack12, $stack31, $stack22;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack25, $stack34;
        SettingsXpp3Reader this;
        org.apache.maven.settings.Repository $stack28, $stack37;
        org.apache.maven.settings.Activation $stack45;
        org.apache.maven.settings.Profile $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.Profile;

        specialinvoke $u0.<org.apache.maven.settings.Profile: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack50 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack50 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label20;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "activation", null, $u1);

        if $stack13 == 0 goto label08;

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack45 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Activation parseActivation(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.settings.Profile: void setActivation(org.apache.maven.settings.Activation)>($stack45);

        goto label05;

     label08:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "properties", null, $u1);

        if $stack14 == 0 goto label10;

     label09:
        $stack39 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack39 != 2 goto label05;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        value = virtualinvoke $stack41.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $u0.<org.apache.maven.settings.Profile: void addProperty(java.lang.String,java.lang.String)>(name, value);

        goto label09;

     label10:
        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "repositories", null, $u1);

        if $stack15 == 0 goto label14;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.settings.Profile: void setRepositories(java.util.List)>($u2);

     label11:
        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack31 != 2 goto label13;

        $stack32 = "repository";

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack34 = virtualinvoke $stack32.<java.lang.String: boolean equals(java.lang.Object)>($stack33);

        if $stack34 == 0 goto label12;

        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack37 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack37);

        goto label11;

     label12:
        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label11;

     label13:
        goto label05;

     label14:
        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginRepositories", null, $u1);

        if $stack16 == 0 goto label18;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.settings.Profile: void setPluginRepositories(java.util.List)>($u3);

     label15:
        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack22 != 2 goto label17;

        $stack23 = "pluginRepository";

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack25 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>($stack24);

        if $stack25 == 0 goto label16;

        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack28 = specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack28);

        goto label15;

     label16:
        $r10 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label15;

     label17:
        goto label05;

     label18:
        $r11 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack17 == 0 goto label19;

        $stack19 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack20 = specialinvoke $r12.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack19, "id");

        virtualinvoke $u0.<org.apache.maven.settings.Profile: void setId(java.lang.String)>($stack20);

        goto label05;

     label19:
        $r13 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r13.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label20:
        return $u0;
    }

    private org.apache.maven.settings.Proxy parseProxy(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, $stack28, $stack29, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, $stack37, $stack38, name;
        int $stack10, $stack30, $stack44, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack39;
        SettingsXpp3Reader this;
        org.apache.maven.settings.Proxy $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.Proxy;

        specialinvoke $u0.<org.apache.maven.settings.Proxy: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack44 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack44 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label16;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "active", null, $u1);

        if $stack13 == 0 goto label08;

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack38 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack37, "active");

        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack39 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack38, "active", parser, "true");

        virtualinvoke $u0.<org.apache.maven.settings.Proxy: void setActive(boolean)>($stack39);

        goto label05;

     label08:
        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "protocol", null, $u1);

        if $stack14 == 0 goto label09;

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack36 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack35, "protocol");

        virtualinvoke $u0.<org.apache.maven.settings.Proxy: void setProtocol(java.lang.String)>($stack36);

        goto label05;

     label09:
        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "username", null, $u1);

        if $stack15 == 0 goto label10;

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack34 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack33, "username");

        virtualinvoke $u0.<org.apache.maven.settings.Proxy: void setUsername(java.lang.String)>($stack34);

        goto label05;

     label10:
        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "password", null, $u1);

        if $stack16 == 0 goto label11;

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r10 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack32 = specialinvoke $r10.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "password");

        virtualinvoke $u0.<org.apache.maven.settings.Proxy: void setPassword(java.lang.String)>($stack32);

        goto label05;

     label11:
        $r11 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack17 = specialinvoke $r11.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "port", null, $u1);

        if $stack17 == 0 goto label12;

        $stack28 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r12 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack29 = specialinvoke $r12.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack28, "port");

        $r13 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack30 = specialinvoke $r13.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int getIntegerValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>($stack29, "port", parser, strict);

        virtualinvoke $u0.<org.apache.maven.settings.Proxy: void setPort(int)>($stack30);

        goto label05;

     label12:
        $r14 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack18 = specialinvoke $r14.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "host", null, $u1);

        if $stack18 == 0 goto label13;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r15 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack27 = specialinvoke $r15.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "host");

        virtualinvoke $u0.<org.apache.maven.settings.Proxy: void setHost(java.lang.String)>($stack27);

        goto label05;

     label13:
        $r16 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack19 = specialinvoke $r16.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "nonProxyHosts", null, $u1);

        if $stack19 == 0 goto label14;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r17 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack25 = specialinvoke $r17.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "nonProxyHosts");

        virtualinvoke $u0.<org.apache.maven.settings.Proxy: void setNonProxyHosts(java.lang.String)>($stack25);

        goto label05;

     label14:
        $r18 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack20 = specialinvoke $r18.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack20 == 0 goto label15;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r19 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack23 = specialinvoke $r19.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "id");

        virtualinvoke $u0.<org.apache.maven.settings.Proxy: void setId(java.lang.String)>($stack23);

        goto label05;

     label15:
        $r20 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r20.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label16:
        return $u0;
    }

    private org.apache.maven.settings.Repository parseRepository(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, $stack26, $stack27, name;
        int $stack10, $stack34, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18;
        SettingsXpp3Reader this;
        org.apache.maven.settings.RepositoryPolicy $stack28, $stack29;
        org.apache.maven.settings.Repository $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.Repository;

        specialinvoke $u0.<org.apache.maven.settings.Repository: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack34 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack34 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label14;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "releases", null, $u1);

        if $stack13 == 0 goto label08;

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack29 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.settings.Repository: void setReleases(org.apache.maven.settings.RepositoryPolicy)>($stack29);

        goto label05;

     label08:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "snapshots", null, $u1);

        if $stack14 == 0 goto label09;

        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack28 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        virtualinvoke $u0.<org.apache.maven.settings.Repository: void setSnapshots(org.apache.maven.settings.RepositoryPolicy)>($stack28);

        goto label05;

     label09:
        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack15 == 0 goto label10;

        $stack26 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack27 = specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack26, "id");

        virtualinvoke $u0.<org.apache.maven.settings.Repository: void setId(java.lang.String)>($stack27);

        goto label05;

     label10:
        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack16 == 0 goto label11;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack25 = specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "name");

        virtualinvoke $u0.<org.apache.maven.settings.Repository: void setName(java.lang.String)>($stack25);

        goto label05;

     label11:
        $r10 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack17 == 0 goto label12;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack23 = specialinvoke $r11.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "url");

        virtualinvoke $u0.<org.apache.maven.settings.Repository: void setUrl(java.lang.String)>($stack23);

        goto label05;

     label12:
        $r12 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "layout", null, $u1);

        if $stack18 == 0 goto label13;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack21 = specialinvoke $r13.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "layout");

        virtualinvoke $u0.<org.apache.maven.settings.Repository: void setLayout(java.lang.String)>($stack21);

        goto label05;

     label13:
        $r14 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r14.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label14:
        return $u0;
    }

    private org.apache.maven.settings.RepositoryBase parseRepositoryBase(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack18, $stack19, $stack20, $stack21, $stack22, $stack23, $stack24, $stack25, name;
        int $stack10, $stack30, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16;
        SettingsXpp3Reader this;
        org.apache.maven.settings.RepositoryBase $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.RepositoryBase;

        specialinvoke $u0.<org.apache.maven.settings.RepositoryBase: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack30 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack30 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label12;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack13 == 0 goto label08;

        $stack24 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack25 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack24, "id");

        virtualinvoke $u0.<org.apache.maven.settings.RepositoryBase: void setId(java.lang.String)>($stack25);

        goto label05;

     label08:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "name", null, $u1);

        if $stack14 == 0 goto label09;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack23 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "name");

        virtualinvoke $u0.<org.apache.maven.settings.RepositoryBase: void setName(java.lang.String)>($stack23);

        goto label05;

     label09:
        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "url", null, $u1);

        if $stack15 == 0 goto label10;

        $stack20 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack21 = specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack20, "url");

        virtualinvoke $u0.<org.apache.maven.settings.RepositoryBase: void setUrl(java.lang.String)>($stack21);

        goto label05;

     label10:
        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "layout", null, $u1);

        if $stack16 == 0 goto label11;

        $stack18 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack19 = specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack18, "layout");

        virtualinvoke $u0.<org.apache.maven.settings.RepositoryBase: void setLayout(java.lang.String)>($stack19);

        goto label05;

     label11:
        $r10 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r10.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label12:
        return $u0;
    }

    private org.apache.maven.settings.RepositoryPolicy parseRepositoryPolicy(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, name;
        int $stack10, $stack28, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack23;
        SettingsXpp3Reader this;
        org.apache.maven.settings.RepositoryPolicy $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.RepositoryPolicy;

        specialinvoke $u0.<org.apache.maven.settings.RepositoryPolicy: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack28 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack28 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label11;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "enabled", null, $u1);

        if $stack13 == 0 goto label08;

        $stack21 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack22 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack21, "enabled");

        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack23 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack22, "enabled", parser, "true");

        virtualinvoke $u0.<org.apache.maven.settings.RepositoryPolicy: void setEnabled(boolean)>($stack23);

        goto label05;

     label08:
        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "updatePolicy", null, $u1);

        if $stack14 == 0 goto label09;

        $stack19 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack20 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack19, "updatePolicy");

        virtualinvoke $u0.<org.apache.maven.settings.RepositoryPolicy: void setUpdatePolicy(java.lang.String)>($stack20);

        goto label05;

     label09:
        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "checksumPolicy", null, $u1);

        if $stack15 == 0 goto label10;

        $stack17 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack18 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack17, "checksumPolicy");

        virtualinvoke $u0.<org.apache.maven.settings.RepositoryPolicy: void setChecksumPolicy(java.lang.String)>($stack18);

        goto label05;

     label10:
        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label11:
        return $u0;
    }

    private org.apache.maven.settings.Server parseServer(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack22, $stack23, $stack25, $stack26, $stack27, $stack28, $stack29, $stack30, $stack31, $stack32, $stack33, $stack34, $stack35, $stack36, name;
        int $stack10, $stack41, i, $stack12;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20;
        SettingsXpp3Reader this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack24;
        org.apache.maven.settings.Server $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.Server;

        specialinvoke $u0.<org.apache.maven.settings.Server: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label04;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack41 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack41 < 0 goto label02;

        goto label03;

     label02:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label03:
        i = i + -1;

        goto label01;

     label04:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label05:
        if strict == 0 goto label06;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label07;

     label06:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label07:
        if $stack12 != 2 goto label16;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "username", null, $u1);

        if $stack13 == 0 goto label08;

        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack36 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack35, "username");

        virtualinvoke $u0.<org.apache.maven.settings.Server: void setUsername(java.lang.String)>($stack36);

        goto label05;

     label08:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "password", null, $u1);

        if $stack14 == 0 goto label09;

        $stack33 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack34 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack33, "password");

        virtualinvoke $u0.<org.apache.maven.settings.Server: void setPassword(java.lang.String)>($stack34);

        goto label05;

     label09:
        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "privateKey", null, $u1);

        if $stack15 == 0 goto label10;

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack32 = specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "privateKey");

        virtualinvoke $u0.<org.apache.maven.settings.Server: void setPrivateKey(java.lang.String)>($stack32);

        goto label05;

     label10:
        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "passphrase", null, $u1);

        if $stack16 == 0 goto label11;

        $stack29 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack30 = specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack29, "passphrase");

        virtualinvoke $u0.<org.apache.maven.settings.Server: void setPassphrase(java.lang.String)>($stack30);

        goto label05;

     label11:
        $r10 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack17 = specialinvoke $r10.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "filePermissions", null, $u1);

        if $stack17 == 0 goto label12;

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack28 = specialinvoke $r11.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack27, "filePermissions");

        virtualinvoke $u0.<org.apache.maven.settings.Server: void setFilePermissions(java.lang.String)>($stack28);

        goto label05;

     label12:
        $r12 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack18 = specialinvoke $r12.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "directoryPermissions", null, $u1);

        if $stack18 == 0 goto label13;

        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r13 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack26 = specialinvoke $r13.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack25, "directoryPermissions");

        virtualinvoke $u0.<org.apache.maven.settings.Server: void setDirectoryPermissions(java.lang.String)>($stack26);

        goto label05;

     label13:
        $r14 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack19 = specialinvoke $r14.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "configuration", null, $u1);

        if $stack19 == 0 goto label14;

        $stack24 = staticinvoke <org.codehaus.plexus.util.xml.Xpp3DomBuilder: org.codehaus.plexus.util.xml.Xpp3Dom build(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, 1);

        virtualinvoke $u0.<org.apache.maven.settings.Server: void setConfiguration(java.lang.Object)>($stack24);

        goto label05;

     label14:
        $r15 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack20 = specialinvoke $r15.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "id", null, $u1);

        if $stack20 == 0 goto label15;

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r16 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack23 = specialinvoke $r16.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack22, "id");

        virtualinvoke $u0.<org.apache.maven.settings.Server: void setId(java.lang.String)>($stack23);

        goto label05;

     label15:
        $r17 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r17.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label05;

     label16:
        return $u0;
    }

    private org.apache.maven.settings.Settings parseSettings(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, $stack26, $stack27, $stack31, $stack32, $stack36, $stack37, $stack41, $stack42, $stack46, $stack47, $stack55, $stack56, $stack64, $stack65, $stack73, $stack74, $stack80, $stack81, $stack83, $stack84, $stack86, $stack87, $stack89, $stack90, $stack96, name;
        int $stack10, $stack95, i, $stack12, $stack72, $stack63, $stack54, $stack45, $stack35, $stack25;
        boolean strict, $stack13, $stack14, $stack15, $stack16, $stack17, $stack18, $stack19, $stack20, $stack21, $stack22, $stack28, $stack38, $stack48, $stack57, $stack66, $stack75, $stack82, $stack85, $stack88, $stack97;
        SettingsXpp3Reader this;
        org.apache.maven.settings.Profile $stack51;
        org.apache.maven.settings.Mirror $stack60;
        org.apache.maven.settings.Server $stack69;
        org.apache.maven.settings.Proxy $stack78;
        org.apache.maven.settings.Settings $u0;
        java.util.HashSet $u1;
        java.util.ArrayList $u2, $u3, $u4, $u5, $u6, $u7;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.Settings;

        specialinvoke $u0.<org.apache.maven.settings.Settings: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label01:
        if i < 0 goto label05;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack95 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack95 < 0 goto label02;

        goto label04;

     label02:
        $stack96 = "xmlns";

        $stack97 = virtualinvoke $stack96.<java.lang.String: boolean equals(java.lang.Object)>(name);

        if $stack97 == 0 goto label03;

        goto label04;

     label03:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label04:
        i = i + -1;

        goto label01;

     label05:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label06:
        if strict == 0 goto label07;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label08;

     label07:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label08:
        if $stack12 != 2 goto label37;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack13 = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "localRepository", null, $u1);

        if $stack13 == 0 goto label09;

        $stack89 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack90 = specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack89, "localRepository");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setLocalRepository(java.lang.String)>($stack90);

        goto label06;

     label09:
        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack14 = specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "interactiveMode", null, $u1);

        if $stack14 == 0 goto label10;

        $stack86 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack87 = specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack86, "interactiveMode");

        $r6 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack88 = specialinvoke $r6.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack87, "interactiveMode", parser, "true");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setInteractiveMode(boolean)>($stack88);

        goto label06;

     label10:
        $r7 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack15 = specialinvoke $r7.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "usePluginRegistry", null, $u1);

        if $stack15 == 0 goto label11;

        $stack83 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r8 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack84 = specialinvoke $r8.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack83, "usePluginRegistry");

        $r9 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack85 = specialinvoke $r9.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack84, "usePluginRegistry", parser, "false");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setUsePluginRegistry(boolean)>($stack85);

        goto label06;

     label11:
        $r10 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack16 = specialinvoke $r10.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "offline", null, $u1);

        if $stack16 == 0 goto label12;

        $stack80 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r11 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack81 = specialinvoke $r11.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack80, "offline");

        $r12 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack82 = specialinvoke $r12.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean getBooleanValue(java.lang.String,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String)>($stack81, "offline", parser, "false");

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setOffline(boolean)>($stack82);

        goto label06;

     label12:
        $r13 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack17 = specialinvoke $r13.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "proxies", null, $u1);

        if $stack17 == 0 goto label16;

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setProxies(java.util.List)>($u2);

     label13:
        $stack72 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack72 != 2 goto label15;

        $stack73 = "proxy";

        $stack74 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack75 = virtualinvoke $stack73.<java.lang.String: boolean equals(java.lang.Object)>($stack74);

        if $stack75 == 0 goto label14;

        $r14 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack78 = specialinvoke $r14.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Proxy parseProxy(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack78);

        goto label13;

     label14:
        $r15 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r15.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label13;

     label15:
        goto label06;

     label16:
        $r16 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack18 = specialinvoke $r16.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "servers", null, $u1);

        if $stack18 == 0 goto label20;

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setServers(java.util.List)>($u3);

     label17:
        $stack63 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack63 != 2 goto label19;

        $stack64 = "server";

        $stack65 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack66 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>($stack65);

        if $stack66 == 0 goto label18;

        $r17 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack69 = specialinvoke $r17.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Server parseServer(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($stack69);

        goto label17;

     label18:
        $r18 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r18.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label17;

     label19:
        goto label06;

     label20:
        $r19 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack19 = specialinvoke $r19.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "mirrors", null, $u1);

        if $stack19 == 0 goto label24;

        $u4 = new java.util.ArrayList;

        specialinvoke $u4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setMirrors(java.util.List)>($u4);

     label21:
        $stack54 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack54 != 2 goto label23;

        $stack55 = "mirror";

        $stack56 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack57 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>($stack56);

        if $stack57 == 0 goto label22;

        $r20 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack60 = specialinvoke $r20.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Mirror parseMirror(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u4.<java.util.List: boolean add(java.lang.Object)>($stack60);

        goto label21;

     label22:
        $r21 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r21.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label21;

     label23:
        goto label06;

     label24:
        $r22 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack20 = specialinvoke $r22.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "profiles", null, $u1);

        if $stack20 == 0 goto label28;

        $u5 = new java.util.ArrayList;

        specialinvoke $u5.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setProfiles(java.util.List)>($u5);

     label25:
        $stack45 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack45 != 2 goto label27;

        $stack46 = "profile";

        $stack47 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack48 = virtualinvoke $stack46.<java.lang.String: boolean equals(java.lang.Object)>($stack47);

        if $stack48 == 0 goto label26;

        $r23 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack51 = specialinvoke $r23.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Profile parseProfile(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        interfaceinvoke $u5.<java.util.List: boolean add(java.lang.Object)>($stack51);

        goto label25;

     label26:
        $r24 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r24.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label25;

     label27:
        goto label06;

     label28:
        $r25 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack21 = specialinvoke $r25.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "activeProfiles", null, $u1);

        if $stack21 == 0 goto label32;

        $u6 = new java.util.ArrayList;

        specialinvoke $u6.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setActiveProfiles(java.util.List)>($u6);

     label29:
        $stack35 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack35 != 2 goto label31;

        $stack36 = "activeProfile";

        $stack37 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack38 = virtualinvoke $stack36.<java.lang.String: boolean equals(java.lang.Object)>($stack37);

        if $stack38 == 0 goto label30;

        $stack41 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r26 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack42 = specialinvoke $r26.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack41, "activeProfiles");

        interfaceinvoke $u6.<java.util.List: boolean add(java.lang.Object)>($stack42);

        goto label29;

     label30:
        $r27 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r27.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label29;

     label31:
        goto label06;

     label32:
        $r28 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack22 = specialinvoke $r28.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean checkFieldWithDuplicate(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,java.util.Set)>(parser, "pluginGroups", null, $u1);

        if $stack22 == 0 goto label36;

        $u7 = new java.util.ArrayList;

        specialinvoke $u7.<java.util.ArrayList: void <init>()>();

        virtualinvoke $u0.<org.apache.maven.settings.Settings: void setPluginGroups(java.util.List)>($u7);

     label33:
        $stack25 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        if $stack25 != 2 goto label35;

        $stack26 = "pluginGroup";

        $stack27 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack28 = virtualinvoke $stack26.<java.lang.String: boolean equals(java.lang.Object)>($stack27);

        if $stack28 == 0 goto label34;

        $stack31 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String nextText()>();

        $r29 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack32 = specialinvoke $r29.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: java.lang.String interpolatedTrimmed(java.lang.String,java.lang.String)>($stack31, "pluginGroups");

        interfaceinvoke $u7.<java.util.List: boolean add(java.lang.Object)>($stack32);

        goto label33;

     label34:
        $r30 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r30.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label33;

     label35:
        goto label06;

     label36:
        $r31 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r31.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label06;

     label37:
        return $u0;
    }

    private org.apache.maven.settings.TrackableBase parseTrackableBase(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        java.lang.String tagName, name;
        int $stack10, $stack18, i, $stack12;
        boolean strict;
        SettingsXpp3Reader this;
        org.apache.maven.settings.TrackableBase $u0;
        java.util.HashSet $u1;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0, $r1, $r2;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        tagName = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $u0 = new org.apache.maven.settings.TrackableBase;

        specialinvoke $u0.<org.apache.maven.settings.TrackableBase: void <init>()>();

        $stack10 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getAttributeCount()>();

        i = $stack10 - 1;

     label1:
        if i < 0 goto label4;

        name = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeName(int)>(i);

        interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getAttributeValue(int)>(i);

        $stack18 = virtualinvoke name.<java.lang.String: int indexOf(int)>(58);

        if $stack18 < 0 goto label2;

        goto label3;

     label2:
        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownAttribute(org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.String,java.lang.String,boolean)>(parser, name, tagName, strict);

     label3:
        i = i + -1;

        goto label1;

     label4:
        $u1 = new java.util.HashSet;

        specialinvoke $u1.<java.util.HashSet: void <init>()>();

     label5:
        if strict == 0 goto label6;

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int nextTag()>();

        goto label7;

     label6:
        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $stack12 = specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: int nextTag(org.codehaus.plexus.util.xml.pull.XmlPullParser)>(parser);

     label7:
        if $stack12 != 2 goto label8;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: void checkUnknownElement(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        goto label5;

     label8:
        return $u0;
    }

    private org.apache.maven.settings.Settings read(org.codehaus.plexus.util.xml.pull.XmlPullParser, boolean) throws java.io.IOException, org.codehaus.plexus.util.xml.pull.XmlPullParserException
    {
        org.codehaus.plexus.util.xml.pull.XmlPullParser parser;
        boolean strict, $stack17, parsed;
        SettingsXpp3Reader this;
        java.lang.String $stack12, $stack15, $stack16, $stack22, $stack25;
        java.lang.StringBuilder $stack21, $stack23, $stack24, $u0;
        org.apache.maven.settings.Settings settings;
        int eventType;
        org.codehaus.plexus.util.xml.pull.XmlPullParserException $u1, $u2, $u3;
        java.lang.Throwable $r0, $r1, $r3;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r2;

        this := @this: SettingsXpp3Reader;

        parser := @parameter0: org.codehaus.plexus.util.xml.pull.XmlPullParser;

        strict := @parameter1: boolean;

        settings = null;

        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int getEventType()>();

        parsed = 0;

     label1:
        if eventType == 1 goto label5;

        if eventType != 2 goto label4;

        if strict == 0 goto label2;

        $stack15 = "settings";

        $stack16 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16);

        if $stack17 != 0 goto label2;

        $u1 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack21 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected root element \'settings\' but found \'");

        $stack22 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getName()>();

        $stack23 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22);

        $stack24 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack25 = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>($stack25, parser, null);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label2:
        if parsed == 0 goto label3;

        $u2 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        specialinvoke $u2.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>("Duplicated tag: \'settings\'", parser, null);

        $r1 = (java.lang.Throwable) $u2;

        throw $r1;

     label3:
        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        settings = specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: org.apache.maven.settings.Settings parseSettings(org.codehaus.plexus.util.xml.pull.XmlPullParser,boolean)>(parser, strict);

        $stack12 = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: java.lang.String getInputEncoding()>();

        virtualinvoke settings.<org.apache.maven.settings.Settings: void setModelEncoding(java.lang.String)>($stack12);

        parsed = 1;

     label4:
        eventType = interfaceinvoke parser.<org.codehaus.plexus.util.xml.pull.XmlPullParser: int next()>();

        goto label1;

     label5:
        if parsed == 0 goto label6;

        return settings;

     label6:
        $u3 = new org.codehaus.plexus.util.xml.pull.XmlPullParserException;

        specialinvoke $u3.<org.codehaus.plexus.util.xml.pull.XmlPullParserException: void <init>(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlPullParser,java.lang.Throwable)>("Expected root element \'settings\' but found no element at all: invalid XML document", parser, null);

        $r3 = (java.lang.Throwable) $u3;

        throw $r3;
    }

    public void setAddDefaultEntities(boolean)
    {
        SettingsXpp3Reader this;
        boolean addDefaultEntities;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Reader $r0;

        this := @this: SettingsXpp3Reader;

        addDefaultEntities := @parameter0: boolean;

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Reader) this;

        $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Reader: boolean addDefaultEntities> = addDefaultEntities;

        return;
    }
}
