public class SettingsXpp3Writer extends java.lang.Object
{
    private static final java.lang.String NAMESPACE;
    private java.lang.String fileComment;

    public void <init>()
    {
        SettingsXpp3Writer this;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Writer $r0;

        this := @this: SettingsXpp3Writer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String fileComment> = null;

        return;
    }

    public void setFileComment(java.lang.String)
    {
        SettingsXpp3Writer this;
        java.lang.String fileComment;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Writer $r0;

        this := @this: SettingsXpp3Writer;

        fileComment := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String fileComment> = fileComment;

        return;
    }

    public void write(java.io.Writer, org.apache.maven.settings.Settings) throws java.io.IOException
    {
        java.io.Writer writer;
        org.apache.maven.settings.Settings settings;
        java.lang.String $stack5;
        SettingsXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Writer $r4;

        this := @this: SettingsXpp3Writer;

        writer := @parameter0: java.io.Writer;

        settings := @parameter1: org.apache.maven.settings.Settings;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.Writer)>(writer);

        $stack5 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack5, null);

        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeSettings(org.apache.maven.settings.Settings,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(settings, "settings", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    public void write(java.io.OutputStream, org.apache.maven.settings.Settings) throws java.io.IOException
    {
        java.io.OutputStream stream;
        org.apache.maven.settings.Settings settings;
        java.lang.String $stack5, $stack6;
        SettingsXpp3Writer this;
        org.codehaus.plexus.util.xml.pull.MXSerializer $u0;
        org.codehaus.plexus.util.xml.pull.XmlSerializer $r0, $r1, $r2, $r3, $r5, $r6;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Writer $r4;

        this := @this: SettingsXpp3Writer;

        stream := @parameter0: java.io.OutputStream;

        settings := @parameter1: org.apache.maven.settings.Settings;

        $u0 = new org.codehaus.plexus.util.xml.pull.MXSerializer;

        specialinvoke $u0.<org.codehaus.plexus.util.xml.pull.MXSerializer: void <init>()>();

        $r0 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r0.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-indentation", "  ");

        $r1 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r1.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setProperty(java.lang.String,java.lang.Object)>("http://xmlpull.org/v1/doc/properties.html#serializer-line-separator", "\n");

        $stack5 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.lang.String getModelEncoding()>();

        $r2 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r2.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>(stream, $stack5);

        $stack6 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.lang.String getModelEncoding()>();

        $r3 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r3.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>($stack6, null);

        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        $r5 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeSettings(org.apache.maven.settings.Settings,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(settings, "settings", $r5);

        $r6 = (org.codehaus.plexus.util.xml.pull.XmlSerializer) $u0;

        interfaceinvoke $r6.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void endDocument()>();

        return;
    }

    private void writeActivation(org.apache.maven.settings.Activation, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack28, $stack31;
        java.lang.String tagName, $stack4, $stack7, $stack11, $stack20, $stack22, $stack24, $stack27, $stack30, $stack32;
        org.apache.maven.settings.Activation activation;
        boolean $stack6, $stack29;
        org.apache.maven.settings.ActivationOS $stack8, $stack18;
        org.apache.maven.settings.ActivationProperty $stack9, $stack16;
        org.apache.maven.settings.ActivationFile $stack10, $stack13;
        SettingsXpp3Writer this;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Writer $r0, $r1, $r2;

        this := @this: SettingsXpp3Writer;

        activation := @parameter0: org.apache.maven.settings.Activation;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activation.<org.apache.maven.settings.Activation: boolean isActiveByDefault()>();

        if $stack6 == 0 goto label1;

        $stack27 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "activeByDefault");

        $stack29 = virtualinvoke activation.<org.apache.maven.settings.Activation: boolean isActiveByDefault()>();

        $stack30 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack29);

        $stack31 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack30);

        $stack32 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack31.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack32, "activeByDefault");

     label1:
        $stack7 = virtualinvoke activation.<org.apache.maven.settings.Activation: java.lang.String getJdk()>();

        if $stack7 == null goto label2;

        $stack20 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "jdk");

        $stack22 = virtualinvoke activation.<org.apache.maven.settings.Activation: java.lang.String getJdk()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "jdk");

     label2:
        $stack8 = virtualinvoke activation.<org.apache.maven.settings.Activation: org.apache.maven.settings.ActivationOS getOs()>();

        if $stack8 == null goto label3;

        $stack18 = virtualinvoke activation.<org.apache.maven.settings.Activation: org.apache.maven.settings.ActivationOS getOs()>();

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeActivationOS(org.apache.maven.settings.ActivationOS,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack18, "os", serializer);

     label3:
        $stack9 = virtualinvoke activation.<org.apache.maven.settings.Activation: org.apache.maven.settings.ActivationProperty getProperty()>();

        if $stack9 == null goto label4;

        $stack16 = virtualinvoke activation.<org.apache.maven.settings.Activation: org.apache.maven.settings.ActivationProperty getProperty()>();

        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeActivationProperty(org.apache.maven.settings.ActivationProperty,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack16, "property", serializer);

     label4:
        $stack10 = virtualinvoke activation.<org.apache.maven.settings.Activation: org.apache.maven.settings.ActivationFile getFile()>();

        if $stack10 == null goto label5;

        $stack13 = virtualinvoke activation.<org.apache.maven.settings.Activation: org.apache.maven.settings.ActivationFile getFile()>();

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeActivationFile(org.apache.maven.settings.ActivationFile,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack13, "file", serializer);

     label5:
        $stack11 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack11, tagName);

        return;
    }

    private void writeActivationFile(org.apache.maven.settings.ActivationFile, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.settings.ActivationFile activationFile;
        SettingsXpp3Writer this;

        this := @this: SettingsXpp3Writer;

        activationFile := @parameter0: org.apache.maven.settings.ActivationFile;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationFile.<org.apache.maven.settings.ActivationFile: java.lang.String getMissing()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "missing");

        $stack20 = virtualinvoke activationFile.<org.apache.maven.settings.ActivationFile: java.lang.String getMissing()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "missing");

     label1:
        $stack7 = virtualinvoke activationFile.<org.apache.maven.settings.ActivationFile: java.lang.String getExists()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "exists");

        $stack12 = virtualinvoke activationFile.<org.apache.maven.settings.ActivationFile: java.lang.String getExists()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "exists");

     label2:
        $stack8 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeActivationOS(org.apache.maven.settings.ActivationOS, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack13, $stack15, $stack21, $stack23, $stack28, $stack30, $stack35, $stack37;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack12, $stack14, $stack16, $stack20, $stack22, $stack24, $stack27, $stack29, $stack31, $stack34, $stack36, $stack38;
        org.apache.maven.settings.ActivationOS activationOS;
        SettingsXpp3Writer this;

        this := @this: SettingsXpp3Writer;

        activationOS := @parameter0: org.apache.maven.settings.ActivationOS;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationOS.<org.apache.maven.settings.ActivationOS: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack34 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "name");

        $stack36 = virtualinvoke activationOS.<org.apache.maven.settings.ActivationOS: java.lang.String getName()>();

        $stack37 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack36);

        $stack38 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack38, "name");

     label1:
        $stack7 = virtualinvoke activationOS.<org.apache.maven.settings.ActivationOS: java.lang.String getFamily()>();

        if $stack7 == null goto label2;

        $stack27 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack28 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack27, "family");

        $stack29 = virtualinvoke activationOS.<org.apache.maven.settings.ActivationOS: java.lang.String getFamily()>();

        $stack30 = interfaceinvoke $stack28.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "family");

     label2:
        $stack8 = virtualinvoke activationOS.<org.apache.maven.settings.ActivationOS: java.lang.String getArch()>();

        if $stack8 == null goto label3;

        $stack20 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "arch");

        $stack22 = virtualinvoke activationOS.<org.apache.maven.settings.ActivationOS: java.lang.String getArch()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "arch");

     label3:
        $stack9 = virtualinvoke activationOS.<org.apache.maven.settings.ActivationOS: java.lang.String getVersion()>();

        if $stack9 == null goto label4;

        $stack12 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack13 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack12, "version");

        $stack14 = virtualinvoke activationOS.<org.apache.maven.settings.ActivationOS: java.lang.String getVersion()>();

        $stack15 = interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack14);

        $stack16 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack15.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack16, "version");

     label4:
        $stack10 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeActivationProperty(org.apache.maven.settings.ActivationProperty, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack11, $stack13, $stack19, $stack21;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack10, $stack12, $stack14, $stack18, $stack20, $stack22;
        org.apache.maven.settings.ActivationProperty activationProperty;
        SettingsXpp3Writer this;

        this := @this: SettingsXpp3Writer;

        activationProperty := @parameter0: org.apache.maven.settings.ActivationProperty;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke activationProperty.<org.apache.maven.settings.ActivationProperty: java.lang.String getName()>();

        if $stack6 == null goto label1;

        $stack18 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "name");

        $stack20 = virtualinvoke activationProperty.<org.apache.maven.settings.ActivationProperty: java.lang.String getName()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "name");

     label1:
        $stack7 = virtualinvoke activationProperty.<org.apache.maven.settings.ActivationProperty: java.lang.String getValue()>();

        if $stack7 == null goto label2;

        $stack10 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack11 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack10, "value");

        $stack12 = virtualinvoke activationProperty.<org.apache.maven.settings.ActivationProperty: java.lang.String getValue()>();

        $stack13 = interfaceinvoke $stack11.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack12);

        $stack14 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack13.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, "value");

     label2:
        $stack8 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack8, tagName);

        return;
    }

    private void writeIdentifiableBase(org.apache.maven.settings.IdentifiableBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack14, $stack16;
        java.lang.String tagName, $stack4, $stack6, $stack9, $stack13, $stack15, $stack17, $stack7;
        org.apache.maven.settings.IdentifiableBase identifiableBase;
        boolean $stack10;
        SettingsXpp3Writer this;

        this := @this: SettingsXpp3Writer;

        identifiableBase := @parameter0: org.apache.maven.settings.IdentifiableBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke identifiableBase.<org.apache.maven.settings.IdentifiableBase: java.lang.String getId()>();

        if $stack6 == null goto label1;

        $stack9 = virtualinvoke identifiableBase.<org.apache.maven.settings.IdentifiableBase: java.lang.String getId()>();

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack10 != 0 goto label1;

        $stack13 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack14 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack13, "id");

        $stack15 = virtualinvoke identifiableBase.<org.apache.maven.settings.IdentifiableBase: java.lang.String getId()>();

        $stack16 = interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack15);

        $stack17 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack16.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack17, "id");

     label1:
        $stack7 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack7, tagName);

        return;
    }

    private void writeMirror(org.apache.maven.settings.Mirror, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack20, $stack22, $stack26, $stack29, $stack37, $stack39, $stack46, $stack48, $stack52, $stack54, $stack59, $stack61, $stack66, $stack68;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack12, $stack15, $stack19, $stack21, $stack23, $stack25, $stack28, $stack30, $stack33, $stack36, $stack38, $stack40, $stack42, $stack45, $stack47, $stack49, $stack51, $stack53, $stack55, $stack58, $stack60, $stack62, $stack65, $stack67, $stack69, $stack10, $stack13;
        org.apache.maven.settings.Mirror mirror;
        boolean $stack16, $stack27, $stack34, $stack43, $stack11;
        SettingsXpp3Writer this;

        this := @this: SettingsXpp3Writer;

        mirror := @parameter0: org.apache.maven.settings.Mirror;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getMirrorOf()>();

        if $stack6 == null goto label1;

        $stack65 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack66 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack65, "mirrorOf");

        $stack67 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getMirrorOf()>();

        $stack68 = interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack67);

        $stack69 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack68.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack69, "mirrorOf");

     label1:
        $stack7 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getName()>();

        if $stack7 == null goto label2;

        $stack58 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack59 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack58, "name");

        $stack60 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getName()>();

        $stack61 = interfaceinvoke $stack59.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack60);

        $stack62 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack61.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack62, "name");

     label2:
        $stack8 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getUrl()>();

        if $stack8 == null goto label3;

        $stack51 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack52 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack51, "url");

        $stack53 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getUrl()>();

        $stack54 = interfaceinvoke $stack52.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack53);

        $stack55 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack54.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack55, "url");

     label3:
        $stack9 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getLayout()>();

        if $stack9 == null goto label4;

        $stack42 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getLayout()>();

        $stack43 = virtualinvoke $stack42.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack43 != 0 goto label4;

        $stack45 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack46 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack45, "layout");

        $stack47 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getLayout()>();

        $stack48 = interfaceinvoke $stack46.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack47);

        $stack49 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack48.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack49, "layout");

     label4:
        $stack10 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getMirrorOfLayouts()>();

        if $stack10 == null goto label5;

        $stack33 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getMirrorOfLayouts()>();

        $stack34 = virtualinvoke $stack33.<java.lang.String: boolean equals(java.lang.Object)>("default,legacy");

        if $stack34 != 0 goto label5;

        $stack36 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack37 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "mirrorOfLayouts");

        $stack38 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getMirrorOfLayouts()>();

        $stack39 = interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack38);

        $stack40 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "mirrorOfLayouts");

     label5:
        $stack11 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: boolean isBlocked()>();

        if $stack11 == 0 goto label6;

        $stack25 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack26 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack25, "blocked");

        $stack27 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: boolean isBlocked()>();

        $stack28 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack27);

        $stack29 = interfaceinvoke $stack26.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "blocked");

     label6:
        $stack12 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        if $stack12 == null goto label7;

        $stack15 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack16 != 0 goto label7;

        $stack19 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "id");

        $stack21 = virtualinvoke mirror.<org.apache.maven.settings.Mirror: java.lang.String getId()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "id");

     label7:
        $stack13 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack13, tagName);

        return;
    }

    private void writeProfile(org.apache.maven.settings.Profile, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack65, $stack66;
        java.lang.String tagName, $stack7, $stack16, $stack20, $stack22, $stack24, $stack29, $stack34, $stack41, $stack46, $stack53, $stack59, value, $stack64, $stack67, key, $stack13, $stack14;
        org.apache.maven.settings.Profile profile;
        org.apache.maven.settings.Activation $stack9, $stack70;
        java.util.Properties $stack10, $stack50, $stack55, $stack62;
        boolean $stack17, $stack33, $stack45, $stack58;
        java.util.List $stack26, $stack31, $stack38, $stack43, $stack11, $stack12;
        int $stack27, $stack39, $stack51;
        java.lang.Object $stack36, $stack48, $stack61, $stack63;
        SettingsXpp3Writer this;
        java.util.Set $stack56;
        java.util.Iterator iter;
        org.apache.maven.settings.Repository key#8;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Writer $r0, $r1, $r2;

        this := @this: SettingsXpp3Writer;

        profile := @parameter0: org.apache.maven.settings.Profile;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack7 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        $stack9 = virtualinvoke profile.<org.apache.maven.settings.Profile: org.apache.maven.settings.Activation getActivation()>();

        if $stack9 == null goto label01;

        $stack70 = virtualinvoke profile.<org.apache.maven.settings.Profile: org.apache.maven.settings.Activation getActivation()>();

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeActivation(org.apache.maven.settings.Activation,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack70, "activation", serializer);

     label01:
        $stack10 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.Properties getProperties()>();

        if $stack10 == null goto label04;

        $stack50 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.Properties getProperties()>();

        $stack51 = virtualinvoke $stack50.<java.util.Properties: int size()>();

        if $stack51 <= 0 goto label04;

        $stack53 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack53, "properties");

        $stack55 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.Properties getProperties()>();

        $stack56 = virtualinvoke $stack55.<java.util.Properties: java.util.Set keySet()>();

        iter = interfaceinvoke $stack56.<java.util.Set: java.util.Iterator iterator()>();

     label02:
        $stack58 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack58 == 0 goto label03;

        $stack61 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key = (java.lang.String) $stack61;

        $stack62 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.Properties getProperties()>();

        $stack63 = virtualinvoke $stack62.<java.util.Properties: java.lang.Object get(java.lang.Object)>(key);

        value = (java.lang.String) $stack63;

        $stack64 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack65 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack64, key);

        $stack66 = interfaceinvoke $stack65.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(value);

        $stack67 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack67, key);

        goto label02;

     label03:
        $stack59 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack59, "properties");

     label04:
        $stack11 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.List getRepositories()>();

        if $stack11 == null goto label07;

        $stack38 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.List getRepositories()>();

        $stack39 = interfaceinvoke $stack38.<java.util.List: int size()>();

        if $stack39 <= 0 goto label07;

        $stack41 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack41, "repositories");

        $stack43 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.List getRepositories()>();

        iter = interfaceinvoke $stack43.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $stack45 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack45 == 0 goto label06;

        $stack48 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key#8 = (org.apache.maven.settings.Repository) $stack48;

        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeRepository(org.apache.maven.settings.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(key#8, "repository", serializer);

        goto label05;

     label06:
        $stack46 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack46, "repositories");

     label07:
        $stack12 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.List getPluginRepositories()>();

        if $stack12 == null goto label10;

        $stack26 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.List getPluginRepositories()>();

        $stack27 = interfaceinvoke $stack26.<java.util.List: int size()>();

        if $stack27 <= 0 goto label10;

        $stack29 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack29, "pluginRepositories");

        $stack31 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.util.List getPluginRepositories()>();

        iter = interfaceinvoke $stack31.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack33 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack33 == 0 goto label09;

        $stack36 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        key#8 = (org.apache.maven.settings.Repository) $stack36;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeRepository(org.apache.maven.settings.Repository,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(key#8, "pluginRepository", serializer);

        goto label08;

     label09:
        $stack34 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack34, "pluginRepositories");

     label10:
        $stack13 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.lang.String getId()>();

        if $stack13 == null goto label11;

        $stack16 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.lang.String getId()>();

        $stack17 = virtualinvoke $stack16.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack17 != 0 goto label11;

        $stack20 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "id");

        $stack22 = virtualinvoke profile.<org.apache.maven.settings.Profile: java.lang.String getId()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "id");

     label11:
        $stack14 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, tagName);

        return;
    }

    private void writeProxy(org.apache.maven.settings.Proxy, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack27, $stack29, $stack34, $stack36, $stack41, $stack44, $stack49, $stack51, $stack57, $stack59, $stack67, $stack69, $stack73, $stack76;
        java.lang.String tagName, $stack4, $stack7, $stack9, $stack11, $stack12, $stack13, $stack16, $stack20, $stack22, $stack24, $stack26, $stack28, $stack30, $stack33, $stack35, $stack37, $stack40, $stack43, $stack45, $stack48, $stack50, $stack52, $stack56, $stack58, $stack60, $stack63, $stack66, $stack68, $stack70, $stack72, $stack75, $stack77, $stack8, $stack14;
        org.apache.maven.settings.Proxy proxy;
        boolean $stack6, $stack17, $stack64, $stack74;
        int $stack10, $stack42;
        SettingsXpp3Writer this;

        this := @this: SettingsXpp3Writer;

        proxy := @parameter0: org.apache.maven.settings.Proxy;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: boolean isActive()>();

        if $stack6 == 1 goto label1;

        $stack72 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack73 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack72, "active");

        $stack74 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: boolean isActive()>();

        $stack75 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack74);

        $stack76 = interfaceinvoke $stack73.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack75);

        $stack77 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack76.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack77, "active");

     label1:
        $stack7 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getProtocol()>();

        if $stack7 == null goto label2;

        $stack63 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getProtocol()>();

        $stack64 = virtualinvoke $stack63.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $stack64 != 0 goto label2;

        $stack66 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack67 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack66, "protocol");

        $stack68 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getProtocol()>();

        $stack69 = interfaceinvoke $stack67.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack68);

        $stack70 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack69.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack70, "protocol");

     label2:
        $stack8 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getUsername()>();

        if $stack8 == null goto label3;

        $stack56 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack57 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack56, "username");

        $stack58 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getUsername()>();

        $stack59 = interfaceinvoke $stack57.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack58);

        $stack60 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack59.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack60, "username");

     label3:
        $stack9 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getPassword()>();

        if $stack9 == null goto label4;

        $stack48 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack49 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack48, "password");

        $stack50 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getPassword()>();

        $stack51 = interfaceinvoke $stack49.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack50);

        $stack52 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack51.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack52, "password");

     label4:
        $stack10 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: int getPort()>();

        if $stack10 == 8080 goto label5;

        $stack40 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack41 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack40, "port");

        $stack42 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: int getPort()>();

        $stack43 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack42);

        $stack44 = interfaceinvoke $stack41.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack43);

        $stack45 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack44.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack45, "port");

     label5:
        $stack11 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getHost()>();

        if $stack11 == null goto label6;

        $stack33 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack34 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack33, "host");

        $stack35 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getHost()>();

        $stack36 = interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack35);

        $stack37 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack36.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack37, "host");

     label6:
        $stack12 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getNonProxyHosts()>();

        if $stack12 == null goto label7;

        $stack26 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "nonProxyHosts");

        $stack28 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getNonProxyHosts()>();

        $stack29 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack28);

        $stack30 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack29.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack30, "nonProxyHosts");

     label7:
        $stack13 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getId()>();

        if $stack13 == null goto label8;

        $stack16 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getId()>();

        $stack17 = virtualinvoke $stack16.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack17 != 0 goto label8;

        $stack20 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "id");

        $stack22 = virtualinvoke proxy.<org.apache.maven.settings.Proxy: java.lang.String getId()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "id");

     label8:
        $stack14 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, tagName);

        return;
    }

    private void writeRepository(org.apache.maven.settings.Repository, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack19, $stack21, $stack25, $stack27, $stack32, $stack34, $stack39, $stack41;
        java.lang.String tagName, $stack4, $stack8, $stack9, $stack10, $stack11, $stack14, $stack18, $stack20, $stack22, $stack24, $stack26, $stack28, $stack31, $stack33, $stack35, $stack38, $stack40, $stack42, $stack12;
        org.apache.maven.settings.Repository repository;
        org.apache.maven.settings.RepositoryPolicy $stack6, $stack7, $stack45, $stack47;
        boolean $stack15;
        SettingsXpp3Writer this;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Writer $r0, $r1;

        this := @this: SettingsXpp3Writer;

        repository := @parameter0: org.apache.maven.settings.Repository;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repository.<org.apache.maven.settings.Repository: org.apache.maven.settings.RepositoryPolicy getReleases()>();

        if $stack6 == null goto label1;

        $stack47 = virtualinvoke repository.<org.apache.maven.settings.Repository: org.apache.maven.settings.RepositoryPolicy getReleases()>();

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeRepositoryPolicy(org.apache.maven.settings.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack47, "releases", serializer);

     label1:
        $stack7 = virtualinvoke repository.<org.apache.maven.settings.Repository: org.apache.maven.settings.RepositoryPolicy getSnapshots()>();

        if $stack7 == null goto label2;

        $stack45 = virtualinvoke repository.<org.apache.maven.settings.Repository: org.apache.maven.settings.RepositoryPolicy getSnapshots()>();

        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeRepositoryPolicy(org.apache.maven.settings.RepositoryPolicy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack45, "snapshots", serializer);

     label2:
        $stack8 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getId()>();

        if $stack8 == null goto label3;

        $stack38 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack39 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack38, "id");

        $stack40 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getId()>();

        $stack41 = interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack40);

        $stack42 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack41.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack42, "id");

     label3:
        $stack9 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getName()>();

        if $stack9 == null goto label4;

        $stack31 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack32 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack31, "name");

        $stack33 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getName()>();

        $stack34 = interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack33);

        $stack35 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack34.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack35, "name");

     label4:
        $stack10 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getUrl()>();

        if $stack10 == null goto label5;

        $stack24 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack25 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack24, "url");

        $stack26 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getUrl()>();

        $stack27 = interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack26);

        $stack28 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack28, "url");

     label5:
        $stack11 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getLayout()>();

        if $stack11 == null goto label6;

        $stack14 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getLayout()>();

        $stack15 = virtualinvoke $stack14.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack15 != 0 goto label6;

        $stack18 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack19 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack18, "layout");

        $stack20 = virtualinvoke repository.<org.apache.maven.settings.Repository: java.lang.String getLayout()>();

        $stack21 = interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack20);

        $stack22 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack22, "layout");

     label6:
        $stack12 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack12, tagName);

        return;
    }

    private void writeRepositoryBase(org.apache.maven.settings.RepositoryBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack17, $stack19, $stack23, $stack25, $stack30, $stack32, $stack37, $stack39;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack12, $stack16, $stack18, $stack20, $stack22, $stack24, $stack26, $stack29, $stack31, $stack33, $stack36, $stack38, $stack40, $stack10;
        org.apache.maven.settings.RepositoryBase repositoryBase;
        boolean $stack13;
        SettingsXpp3Writer this;

        this := @this: SettingsXpp3Writer;

        repositoryBase := @parameter0: org.apache.maven.settings.RepositoryBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repositoryBase.<org.apache.maven.settings.RepositoryBase: java.lang.String getId()>();

        if $stack6 == null goto label1;

        $stack36 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack37 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack36, "id");

        $stack38 = virtualinvoke repositoryBase.<org.apache.maven.settings.RepositoryBase: java.lang.String getId()>();

        $stack39 = interfaceinvoke $stack37.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack38);

        $stack40 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack39.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack40, "id");

     label1:
        $stack7 = virtualinvoke repositoryBase.<org.apache.maven.settings.RepositoryBase: java.lang.String getName()>();

        if $stack7 == null goto label2;

        $stack29 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack30 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack29, "name");

        $stack31 = virtualinvoke repositoryBase.<org.apache.maven.settings.RepositoryBase: java.lang.String getName()>();

        $stack32 = interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack31);

        $stack33 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack32.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack33, "name");

     label2:
        $stack8 = virtualinvoke repositoryBase.<org.apache.maven.settings.RepositoryBase: java.lang.String getUrl()>();

        if $stack8 == null goto label3;

        $stack22 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack23 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack22, "url");

        $stack24 = virtualinvoke repositoryBase.<org.apache.maven.settings.RepositoryBase: java.lang.String getUrl()>();

        $stack25 = interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack24);

        $stack26 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack25.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack26, "url");

     label3:
        $stack9 = virtualinvoke repositoryBase.<org.apache.maven.settings.RepositoryBase: java.lang.String getLayout()>();

        if $stack9 == null goto label4;

        $stack12 = virtualinvoke repositoryBase.<org.apache.maven.settings.RepositoryBase: java.lang.String getLayout()>();

        $stack13 = virtualinvoke $stack12.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack13 != 0 goto label4;

        $stack16 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack17 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack16, "layout");

        $stack18 = virtualinvoke repositoryBase.<org.apache.maven.settings.RepositoryBase: java.lang.String getLayout()>();

        $stack19 = interfaceinvoke $stack17.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack18);

        $stack20 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack19.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, "layout");

     label4:
        $stack10 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack10, tagName);

        return;
    }

    private void writeRepositoryPolicy(org.apache.maven.settings.RepositoryPolicy, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack12, $stack14, $stack20, $stack22, $stack27, $stack30;
        java.lang.String tagName, $stack4, $stack7, $stack8, $stack9, $stack11, $stack13, $stack15, $stack19, $stack21, $stack23, $stack26, $stack29, $stack31;
        org.apache.maven.settings.RepositoryPolicy repositoryPolicy;
        boolean $stack6, $stack28;
        SettingsXpp3Writer this;

        this := @this: SettingsXpp3Writer;

        repositoryPolicy := @parameter0: org.apache.maven.settings.RepositoryPolicy;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke repositoryPolicy.<org.apache.maven.settings.RepositoryPolicy: boolean isEnabled()>();

        if $stack6 == 1 goto label1;

        $stack26 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack27 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "enabled");

        $stack28 = virtualinvoke repositoryPolicy.<org.apache.maven.settings.RepositoryPolicy: boolean isEnabled()>();

        $stack29 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack28);

        $stack30 = interfaceinvoke $stack27.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack29);

        $stack31 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack30.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "enabled");

     label1:
        $stack7 = virtualinvoke repositoryPolicy.<org.apache.maven.settings.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        if $stack7 == null goto label2;

        $stack19 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack20 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack19, "updatePolicy");

        $stack21 = virtualinvoke repositoryPolicy.<org.apache.maven.settings.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $stack22 = interfaceinvoke $stack20.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack21);

        $stack23 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack22.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack23, "updatePolicy");

     label2:
        $stack8 = virtualinvoke repositoryPolicy.<org.apache.maven.settings.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        if $stack8 == null goto label3;

        $stack11 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack12 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack11, "checksumPolicy");

        $stack13 = virtualinvoke repositoryPolicy.<org.apache.maven.settings.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        $stack14 = interfaceinvoke $stack12.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack13);

        $stack15 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack14.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack15, "checksumPolicy");

     label3:
        $stack9 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack9, tagName);

        return;
    }

    private void writeServer(org.apache.maven.settings.Server, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack21, $stack23, $stack31, $stack33, $stack38, $stack40, $stack45, $stack47, $stack52, $stack54, $stack59, $stack61, $stack66, $stack68;
        java.lang.String tagName, $stack4, $stack6, $stack7, $stack8, $stack9, $stack10, $stack11, $stack13, $stack16, $stack20, $stack22, $stack24, $stack27, $stack30, $stack32, $stack34, $stack37, $stack39, $stack41, $stack44, $stack46, $stack48, $stack51, $stack53, $stack55, $stack58, $stack60, $stack62, $stack65, $stack67, $stack69, $stack14;
        org.apache.maven.settings.Server server;
        java.lang.Object $stack12, $stack26;
        boolean $stack17;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack28;
        SettingsXpp3Writer this;

        this := @this: SettingsXpp3Writer;

        server := @parameter0: org.apache.maven.settings.Server;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getUsername()>();

        if $stack6 == null goto label1;

        $stack65 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack66 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack65, "username");

        $stack67 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getUsername()>();

        $stack68 = interfaceinvoke $stack66.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack67);

        $stack69 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack68.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack69, "username");

     label1:
        $stack7 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getPassword()>();

        if $stack7 == null goto label2;

        $stack58 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack59 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack58, "password");

        $stack60 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getPassword()>();

        $stack61 = interfaceinvoke $stack59.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack60);

        $stack62 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack61.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack62, "password");

     label2:
        $stack8 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getPrivateKey()>();

        if $stack8 == null goto label3;

        $stack51 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack52 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack51, "privateKey");

        $stack53 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getPrivateKey()>();

        $stack54 = interfaceinvoke $stack52.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack53);

        $stack55 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack54.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack55, "privateKey");

     label3:
        $stack9 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getPassphrase()>();

        if $stack9 == null goto label4;

        $stack44 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack45 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack44, "passphrase");

        $stack46 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getPassphrase()>();

        $stack47 = interfaceinvoke $stack45.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack46);

        $stack48 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack47.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack48, "passphrase");

     label4:
        $stack10 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getFilePermissions()>();

        if $stack10 == null goto label5;

        $stack37 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack38 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack37, "filePermissions");

        $stack39 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getFilePermissions()>();

        $stack40 = interfaceinvoke $stack38.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack39);

        $stack41 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack40.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack41, "filePermissions");

     label5:
        $stack11 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getDirectoryPermissions()>();

        if $stack11 == null goto label6;

        $stack30 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack31 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack30, "directoryPermissions");

        $stack32 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getDirectoryPermissions()>();

        $stack33 = interfaceinvoke $stack31.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack32);

        $stack34 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack33.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack34, "directoryPermissions");

     label6:
        $stack12 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.Object getConfiguration()>();

        if $stack12 == null goto label7;

        $stack26 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.Object getConfiguration()>();

        $stack28 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack26;

        $stack27 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        virtualinvoke $stack28.<org.codehaus.plexus.util.xml.Xpp3Dom: void writeToSerializer(java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>($stack27, serializer);

     label7:
        $stack13 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getId()>();

        if $stack13 == null goto label8;

        $stack16 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getId()>();

        $stack17 = virtualinvoke $stack16.<java.lang.String: boolean equals(java.lang.Object)>("default");

        if $stack17 != 0 goto label8;

        $stack20 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack21 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack20, "id");

        $stack22 = virtualinvoke server.<org.apache.maven.settings.Server: java.lang.String getId()>();

        $stack23 = interfaceinvoke $stack21.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack22);

        $stack24 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack23.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack24, "id");

     label8:
        $stack14 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack14, tagName);

        return;
    }

    private void writeSettings(org.apache.maven.settings.Settings, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        SettingsXpp3Writer this;
        java.lang.String $stack6, tagName, $stack7, $stack10, $stack26, $stack31, $stack34, $stack37, $stack43, $stack48, $stack51, $stack54, $stack60, $stack65, $stack72, $stack77, $stack84, $stack89, $stack96, $stack101, $stack105, $stack108, $stack110, $stack113, $stack116, $stack118, $stack121, $stack124, $stack126, $stack129, $stack131, $stack133, $stack137, o#26, $stack20;
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer, $stack35, $stack36, $stack52, $stack53, $stack106, $stack109, $stack114, $stack117, $stack122, $stack125, $stack130, $stack132;
        org.apache.maven.settings.Settings settings;
        boolean $stack11, $stack12, $stack13, $stack30, $stack47, $stack64, $stack76, $stack88, $stack100, $stack107, $stack115, $stack123;
        java.util.List $stack14, $stack22, $stack28, $stack40, $stack45, $stack57, $stack62, $stack69, $stack74, $stack81, $stack86, $stack93, $stack98, $stack15, $stack16, $stack17, $stack18, $stack19;
        int $stack23, $stack41, $stack58, $stack70, $stack82, $stack94;
        java.lang.Object $stack33, $stack50, $stack67, $stack79, $stack91, $stack103;
        java.util.Iterator iter;
        org.apache.maven.settings.Proxy o;
        org.apache.maven.settings.Server o#8;
        org.apache.maven.settings.Mirror o#14;
        org.apache.maven.settings.Profile o#20;
        org.apache.maven.settings.io.xpp3.SettingsXpp3Writer $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: SettingsXpp3Writer;

        settings := @parameter0: org.apache.maven.settings.Settings;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $r0 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        $stack6 = $r0.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String fileComment>;

        if $stack6 == null goto label01;

        $r1 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        $stack137 = $r1.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String fileComment>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void comment(java.lang.String)>($stack137);

     label01:
        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("", "http://maven.apache.org/SETTINGS/1.2.0");

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: void setPrefix(java.lang.String,java.lang.String)>("xsi", "http://www.w3.org/2001/XMLSchema-instance");

        $stack7 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack7, tagName);

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "xsi:schemaLocation", "http://maven.apache.org/SETTINGS/1.2.0 http://maven.apache.org/xsd/settings-1.2.0.xsd");

        $stack10 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.lang.String getLocalRepository()>();

        if $stack10 == null goto label02;

        $stack129 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack130 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack129, "localRepository");

        $stack131 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.lang.String getLocalRepository()>();

        $stack132 = interfaceinvoke $stack130.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack131);

        $stack133 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack132.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack133, "localRepository");

     label02:
        $stack11 = virtualinvoke settings.<org.apache.maven.settings.Settings: boolean isInteractiveMode()>();

        if $stack11 == 1 goto label03;

        $stack121 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack122 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack121, "interactiveMode");

        $stack123 = virtualinvoke settings.<org.apache.maven.settings.Settings: boolean isInteractiveMode()>();

        $stack124 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack123);

        $stack125 = interfaceinvoke $stack122.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack124);

        $stack126 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack125.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack126, "interactiveMode");

     label03:
        $stack12 = virtualinvoke settings.<org.apache.maven.settings.Settings: boolean isUsePluginRegistry()>();

        if $stack12 == 0 goto label04;

        $stack113 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack114 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack113, "usePluginRegistry");

        $stack115 = virtualinvoke settings.<org.apache.maven.settings.Settings: boolean isUsePluginRegistry()>();

        $stack116 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack115);

        $stack117 = interfaceinvoke $stack114.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack116);

        $stack118 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack117.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack118, "usePluginRegistry");

     label04:
        $stack13 = virtualinvoke settings.<org.apache.maven.settings.Settings: boolean isOffline()>();

        if $stack13 == 0 goto label05;

        $stack105 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack106 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack105, "offline");

        $stack107 = virtualinvoke settings.<org.apache.maven.settings.Settings: boolean isOffline()>();

        $stack108 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($stack107);

        $stack109 = interfaceinvoke $stack106.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>($stack108);

        $stack110 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack109.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack110, "offline");

     label05:
        $stack14 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getProxies()>();

        if $stack14 == null goto label08;

        $stack93 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getProxies()>();

        $stack94 = interfaceinvoke $stack93.<java.util.List: int size()>();

        if $stack94 <= 0 goto label08;

        $stack96 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack96, "proxies");

        $stack98 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getProxies()>();

        iter = interfaceinvoke $stack98.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack100 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack100 == 0 goto label07;

        $stack103 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o = (org.apache.maven.settings.Proxy) $stack103;

        $r2 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r2.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeProxy(org.apache.maven.settings.Proxy,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o, "proxy", serializer);

        goto label06;

     label07:
        $stack101 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack101, "proxies");

     label08:
        $stack15 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getServers()>();

        if $stack15 == null goto label11;

        $stack81 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getServers()>();

        $stack82 = interfaceinvoke $stack81.<java.util.List: int size()>();

        if $stack82 <= 0 goto label11;

        $stack84 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack84, "servers");

        $stack86 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getServers()>();

        iter = interfaceinvoke $stack86.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $stack88 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack88 == 0 goto label10;

        $stack91 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#8 = (org.apache.maven.settings.Server) $stack91;

        $r3 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r3.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeServer(org.apache.maven.settings.Server,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#8, "server", serializer);

        goto label09;

     label10:
        $stack89 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack89, "servers");

     label11:
        $stack16 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getMirrors()>();

        if $stack16 == null goto label14;

        $stack69 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getMirrors()>();

        $stack70 = interfaceinvoke $stack69.<java.util.List: int size()>();

        if $stack70 <= 0 goto label14;

        $stack72 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack72, "mirrors");

        $stack74 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getMirrors()>();

        iter = interfaceinvoke $stack74.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $stack76 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack76 == 0 goto label13;

        $stack79 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#14 = (org.apache.maven.settings.Mirror) $stack79;

        $r4 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r4.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeMirror(org.apache.maven.settings.Mirror,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#14, "mirror", serializer);

        goto label12;

     label13:
        $stack77 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack77, "mirrors");

     label14:
        $stack17 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getProfiles()>();

        if $stack17 == null goto label17;

        $stack57 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getProfiles()>();

        $stack58 = interfaceinvoke $stack57.<java.util.List: int size()>();

        if $stack58 <= 0 goto label17;

        $stack60 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack60, "profiles");

        $stack62 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getProfiles()>();

        iter = interfaceinvoke $stack62.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $stack64 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack64 == 0 goto label16;

        $stack67 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#20 = (org.apache.maven.settings.Profile) $stack67;

        $r5 = (org.apache.maven.settings.io.xpp3.SettingsXpp3Writer) this;

        specialinvoke $r5.<org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: void writeProfile(org.apache.maven.settings.Profile,java.lang.String,org.codehaus.plexus.util.xml.pull.XmlSerializer)>(o#20, "profile", serializer);

        goto label15;

     label16:
        $stack65 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack65, "profiles");

     label17:
        $stack18 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getActiveProfiles()>();

        if $stack18 == null goto label20;

        $stack40 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getActiveProfiles()>();

        $stack41 = interfaceinvoke $stack40.<java.util.List: int size()>();

        if $stack41 <= 0 goto label20;

        $stack43 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack43, "activeProfiles");

        $stack45 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getActiveProfiles()>();

        iter = interfaceinvoke $stack45.<java.util.List: java.util.Iterator iterator()>();

     label18:
        $stack47 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack47 == 0 goto label19;

        $stack50 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#26 = (java.lang.String) $stack50;

        $stack51 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack52 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack51, "activeProfile");

        $stack53 = interfaceinvoke $stack52.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(o#26);

        $stack54 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack53.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack54, "activeProfile");

        goto label18;

     label19:
        $stack48 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack48, "activeProfiles");

     label20:
        $stack19 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getPluginGroups()>();

        if $stack19 == null goto label23;

        $stack22 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getPluginGroups()>();

        $stack23 = interfaceinvoke $stack22.<java.util.List: int size()>();

        if $stack23 <= 0 goto label23;

        $stack26 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack26, "pluginGroups");

        $stack28 = virtualinvoke settings.<org.apache.maven.settings.Settings: java.util.List getPluginGroups()>();

        iter = interfaceinvoke $stack28.<java.util.List: java.util.Iterator iterator()>();

     label21:
        $stack30 = interfaceinvoke iter.<java.util.Iterator: boolean hasNext()>();

        if $stack30 == 0 goto label22;

        $stack33 = interfaceinvoke iter.<java.util.Iterator: java.lang.Object next()>();

        o#26 = (java.lang.String) $stack33;

        $stack34 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        $stack35 = interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack34, "pluginGroup");

        $stack36 = interfaceinvoke $stack35.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer text(java.lang.String)>(o#26);

        $stack37 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke $stack36.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack37, "pluginGroup");

        goto label21;

     label22:
        $stack31 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack31, "pluginGroups");

     label23:
        $stack20 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack20, tagName);

        return;
    }

    private void writeTrackableBase(org.apache.maven.settings.TrackableBase, java.lang.String, org.codehaus.plexus.util.xml.pull.XmlSerializer) throws java.io.IOException
    {
        org.codehaus.plexus.util.xml.pull.XmlSerializer serializer;
        java.lang.String tagName, $stack4, $stack6;
        SettingsXpp3Writer this;
        org.apache.maven.settings.TrackableBase trackableBase;

        this := @this: SettingsXpp3Writer;

        trackableBase := @parameter0: org.apache.maven.settings.TrackableBase;

        tagName := @parameter1: java.lang.String;

        serializer := @parameter2: org.codehaus.plexus.util.xml.pull.XmlSerializer;

        $stack4 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer startTag(java.lang.String,java.lang.String)>($stack4, tagName);

        $stack6 = <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE>;

        interfaceinvoke serializer.<org.codehaus.plexus.util.xml.pull.XmlSerializer: org.codehaus.plexus.util.xml.pull.XmlSerializer endTag(java.lang.String,java.lang.String)>($stack6, tagName);

        return;
    }

    static void <clinit>()
    {
        <org.apache.maven.settings.io.xpp3.SettingsXpp3Writer: java.lang.String NAMESPACE> = null;

        return;
    }
}
