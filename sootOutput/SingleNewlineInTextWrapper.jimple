public final class SingleNewlineInTextWrapper extends java.lang.Object implements sortpom.wrapper.content.Wrapper
{
    public static final sortpom.wrapper.content.SingleNewlineInTextWrapper INSTANCE;

    private void <init>()
    {
        SingleNewlineInTextWrapper this;

        this := @this: SingleNewlineInTextWrapper;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public org.jdom.Text getContent()
    {
        java.lang.UnsupportedOperationException $stack1;
        SingleNewlineInTextWrapper this;

        this := @this: SingleNewlineInTextWrapper;

        $stack1 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack1;
    }

    public boolean isBefore(sortpom.wrapper.content.Wrapper)
    {
        java.lang.UnsupportedOperationException $stack2;
        SingleNewlineInTextWrapper this;
        sortpom.wrapper.content.Wrapper wrapper;

        this := @this: SingleNewlineInTextWrapper;

        wrapper := @parameter0: sortpom.wrapper.content.Wrapper;

        $stack2 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack2;
    }

    public boolean isContentElement()
    {
        java.lang.UnsupportedOperationException $stack1;
        SingleNewlineInTextWrapper this;

        this := @this: SingleNewlineInTextWrapper;

        $stack1 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack1;
    }

    public boolean isSortable()
    {
        java.lang.UnsupportedOperationException $stack1;
        SingleNewlineInTextWrapper this;

        this := @this: SingleNewlineInTextWrapper;

        $stack1 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack1;
    }

    public java.lang.String toString()
    {
        SingleNewlineInTextWrapper this;

        this := @this: SingleNewlineInTextWrapper;

        return "SingleNewlineInTextWrapper";
    }

    public volatile org.jdom.Content getContent()
    {
        SingleNewlineInTextWrapper this;
        org.jdom.Text $stack1;
        sortpom.wrapper.content.SingleNewlineInTextWrapper $r0;
        org.jdom.Content $r1;

        this := @this: SingleNewlineInTextWrapper;

        $r0 = (sortpom.wrapper.content.SingleNewlineInTextWrapper) this;

        $stack1 = virtualinvoke $r0.<sortpom.wrapper.content.SingleNewlineInTextWrapper: org.jdom.Text getContent()>();

        $r1 = (org.jdom.Content) $stack1;

        return $r1;
    }

    static void <clinit>()
    {
        sortpom.wrapper.content.SingleNewlineInTextWrapper $stack0;

        $stack0 = new sortpom.wrapper.content.SingleNewlineInTextWrapper;

        specialinvoke $stack0.<sortpom.wrapper.content.SingleNewlineInTextWrapper: void <init>()>();

        <sortpom.wrapper.content.SingleNewlineInTextWrapper: sortpom.wrapper.content.SingleNewlineInTextWrapper INSTANCE> = $stack0;

        return;
    }
}
