public class SingleThreadedBuilder extends java.lang.Object implements org.apache.maven.lifecycle.internal.builder.Builder
{
    private final org.apache.maven.lifecycle.internal.LifecycleModuleBuilder lifecycleModuleBuilder;

    public void <init>(org.apache.maven.lifecycle.internal.LifecycleModuleBuilder)
    {
        SingleThreadedBuilder this;
        org.apache.maven.lifecycle.internal.LifecycleModuleBuilder lifecycleModuleBuilder;
        org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder $r0;

        this := @this: SingleThreadedBuilder;

        lifecycleModuleBuilder := @parameter0: org.apache.maven.lifecycle.internal.LifecycleModuleBuilder;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder) this;

        $r0.<org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder: org.apache.maven.lifecycle.internal.LifecycleModuleBuilder lifecycleModuleBuilder> = lifecycleModuleBuilder;

        return;
    }

    public void build(org.apache.maven.execution.MavenSession, org.apache.maven.lifecycle.internal.ReactorContext, org.apache.maven.lifecycle.internal.ProjectBuildList, java.util.List, org.apache.maven.lifecycle.internal.ReactorBuildStatus)
    {
        java.util.List taskSegments;
        java.util.Iterator l6, l8;
        boolean $stack12, $stack16, $stack21;
        java.lang.Object $stack13, $stack18;
        org.apache.maven.lifecycle.internal.TaskSegment taskSegment;
        org.apache.maven.lifecycle.internal.ProjectBuildList projectBuilds, $stack14;
        org.apache.maven.lifecycle.internal.ProjectSegment projectBuild;
        SingleThreadedBuilder this;
        org.apache.maven.execution.MavenSession session;
        org.apache.maven.lifecycle.internal.ReactorContext reactorContext;
        org.apache.maven.lifecycle.internal.LifecycleModuleBuilder $stack19;
        org.apache.maven.project.MavenProject $stack20;
        org.apache.maven.lifecycle.internal.ReactorBuildStatus reactorBuildStatus;
        java.lang.Exception $stack23;
        org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder $r0;

        this := @this: SingleThreadedBuilder;

        session := @parameter0: org.apache.maven.execution.MavenSession;

        reactorContext := @parameter1: org.apache.maven.lifecycle.internal.ReactorContext;

        projectBuilds := @parameter2: org.apache.maven.lifecycle.internal.ProjectBuildList;

        taskSegments := @parameter3: java.util.List;

        reactorBuildStatus := @parameter4: org.apache.maven.lifecycle.internal.ReactorBuildStatus;

        l6 = interfaceinvoke taskSegments.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack12 = interfaceinvoke l6.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label9;

        $stack13 = interfaceinvoke l6.<java.util.Iterator: java.lang.Object next()>();

        taskSegment = (org.apache.maven.lifecycle.internal.TaskSegment) $stack13;

        $stack14 = virtualinvoke projectBuilds.<org.apache.maven.lifecycle.internal.ProjectBuildList: org.apache.maven.lifecycle.internal.ProjectBuildList getByTaskSegment(org.apache.maven.lifecycle.internal.TaskSegment)>(taskSegment);

        l8 = virtualinvoke $stack14.<org.apache.maven.lifecycle.internal.ProjectBuildList: java.util.Iterator iterator()>();

     label2:
        $stack16 = interfaceinvoke l8.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label8;

        $stack18 = interfaceinvoke l8.<java.util.Iterator: java.lang.Object next()>();

        projectBuild = (org.apache.maven.lifecycle.internal.ProjectSegment) $stack18;

     label3:
        $r0 = (org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder) this;

        $stack19 = $r0.<org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder: org.apache.maven.lifecycle.internal.LifecycleModuleBuilder lifecycleModuleBuilder>;

        $stack20 = virtualinvoke projectBuild.<org.apache.maven.lifecycle.internal.ProjectSegment: org.apache.maven.project.MavenProject getProject()>();

        virtualinvoke $stack19.<org.apache.maven.lifecycle.internal.LifecycleModuleBuilder: void buildProject(org.apache.maven.execution.MavenSession,org.apache.maven.lifecycle.internal.ReactorContext,org.apache.maven.project.MavenProject,org.apache.maven.lifecycle.internal.TaskSegment)>(session, reactorContext, $stack20, taskSegment);

        $stack21 = virtualinvoke reactorBuildStatus.<org.apache.maven.lifecycle.internal.ReactorBuildStatus: boolean isHalted()>();

        if $stack21 == 0 goto label5;

     label4:
        goto label8;

     label5:
        goto label7;

     label6:
        $stack23 := @caughtexception;

        goto label8;

     label7:
        goto label2;

     label8:
        goto label1;

     label9:
        return;

        catch java.lang.Exception from label3 to label4 with label6;
    }
}
