public class Slf4jLoggerManager extends java.lang.Object implements org.codehaus.plexus.logging.LoggerManager
{
    private org.slf4j.ILoggerFactory loggerFactory;

    public void <init>()
    {
        Slf4jLoggerManager this;
        org.slf4j.ILoggerFactory $stack1;
        org.apache.maven.cli.logging.Slf4jLoggerManager $r0;

        this := @this: Slf4jLoggerManager;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.ILoggerFactory getILoggerFactory()>();

        $r0 = (org.apache.maven.cli.logging.Slf4jLoggerManager) this;

        $r0.<org.apache.maven.cli.logging.Slf4jLoggerManager: org.slf4j.ILoggerFactory loggerFactory> = $stack1;

        return;
    }

    public org.codehaus.plexus.logging.Logger getLoggerForComponent(java.lang.String)
    {
        Slf4jLoggerManager this;
        java.lang.String role;
        org.slf4j.ILoggerFactory $stack3;
        org.slf4j.Logger $stack4;
        org.apache.maven.cli.logging.Slf4jLogger $u0;
        org.apache.maven.cli.logging.Slf4jLoggerManager $r0;
        org.codehaus.plexus.logging.Logger $r1;

        this := @this: Slf4jLoggerManager;

        role := @parameter0: java.lang.String;

        $u0 = new org.apache.maven.cli.logging.Slf4jLogger;

        $r0 = (org.apache.maven.cli.logging.Slf4jLoggerManager) this;

        $stack3 = $r0.<org.apache.maven.cli.logging.Slf4jLoggerManager: org.slf4j.ILoggerFactory loggerFactory>;

        $stack4 = interfaceinvoke $stack3.<org.slf4j.ILoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>(role);

        specialinvoke $u0.<org.apache.maven.cli.logging.Slf4jLogger: void <init>(org.slf4j.Logger)>($stack4);

        $r1 = (org.codehaus.plexus.logging.Logger) $u0;

        return $r1;
    }

    public org.codehaus.plexus.logging.Logger getLoggerForComponent(java.lang.String, java.lang.String)
    {
        java.lang.String hint, role, $stack9;
        Slf4jLoggerManager this;
        org.slf4j.ILoggerFactory $stack5;
        java.lang.StringBuilder $stack6, $stack7, $stack8, $u0;
        org.slf4j.Logger $stack10;
        java.lang.Object $stack3;
        org.apache.maven.cli.logging.Slf4jLogger $u1;
        org.apache.maven.cli.logging.Slf4jLoggerManager $r0, $r1;
        org.codehaus.plexus.logging.Logger $r2;

        this := @this: Slf4jLoggerManager;

        role := @parameter0: java.lang.String;

        hint := @parameter1: java.lang.String;

        if null != hint goto label1;

        $r0 = (org.apache.maven.cli.logging.Slf4jLoggerManager) this;

        $stack3 = virtualinvoke $r0.<org.apache.maven.cli.logging.Slf4jLoggerManager: org.codehaus.plexus.logging.Logger getLoggerForComponent(java.lang.String)>(role);

        goto label2;

     label1:
        $u1 = new org.apache.maven.cli.logging.Slf4jLogger;

        $stack3 = $u1;

        $r1 = (org.apache.maven.cli.logging.Slf4jLoggerManager) this;

        $stack5 = $r1.<org.apache.maven.cli.logging.Slf4jLoggerManager: org.slf4j.ILoggerFactory loggerFactory>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack6 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(role);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(hint);

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack10 = interfaceinvoke $stack5.<org.slf4j.ILoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>($stack9);

        specialinvoke $u1.<org.apache.maven.cli.logging.Slf4jLogger: void <init>(org.slf4j.Logger)>($stack10);

     label2:
        $r2 = (org.codehaus.plexus.logging.Logger) $stack3;

        return $r2;
    }

    public void returnComponentLogger(java.lang.String)
    {
        Slf4jLoggerManager this;
        java.lang.String role;

        this := @this: Slf4jLoggerManager;

        role := @parameter0: java.lang.String;

        return;
    }

    public void returnComponentLogger(java.lang.String, java.lang.String)
    {
        Slf4jLoggerManager this;
        java.lang.String role, hint;

        this := @this: Slf4jLoggerManager;

        role := @parameter0: java.lang.String;

        hint := @parameter1: java.lang.String;

        return;
    }

    public int getThreshold()
    {
        Slf4jLoggerManager this;

        this := @this: Slf4jLoggerManager;

        return 0;
    }

    public void setThreshold(int)
    {
        Slf4jLoggerManager this;
        int threshold;

        this := @this: Slf4jLoggerManager;

        threshold := @parameter0: int;

        return;
    }

    public void setThresholds(int)
    {
        Slf4jLoggerManager this;
        int threshold;

        this := @this: Slf4jLoggerManager;

        threshold := @parameter0: int;

        return;
    }

    public int getActiveLoggerCount()
    {
        Slf4jLoggerManager this;

        this := @this: Slf4jLoggerManager;

        return 0;
    }
}
