class SortModulesTest extends java.lang.Object
{

    void <init>()
    {
        SortModulesTest this;

        this := @this: SortModulesTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    final void sortingOfPomFileWithSubmodulesShouldWork() throws java.lang.Exception
    {
        sortpom.util.SortPomImplUtil $stack1, $stack2, $stack3, $stack4, $stack5, $stack6;
        SortModulesTest this;

        this := @this: SortModulesTest;

        $stack1 = staticinvoke <sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil create()>();

        $stack2 = virtualinvoke $stack1.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortProperties()>();

        $stack3 = virtualinvoke $stack2.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortPlugins(java.lang.String)>("groupId,artifactId");

        $stack4 = virtualinvoke $stack3.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortModules()>();

        $stack5 = virtualinvoke $stack4.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortDependencies(java.lang.String)>("groupId,artifactId");

        $stack6 = virtualinvoke $stack5.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil lineSeparator(java.lang.String)>("\n");

        virtualinvoke $stack6.<sortpom.util.SortPomImplUtil: void testFiles(java.lang.String,java.lang.String)>("/SortModules_input.xml", "/SortModules_expected.xml");

        return;
    }

    final void sortingOfPomFileWithSubmodulesAndExtraElementsShouldWork() throws java.lang.Exception
    {
        sortpom.util.SortPomImplUtil $stack1, $stack2, $stack3, $stack4, $stack5, $stack6, $stack7;
        SortModulesTest this;

        this := @this: SortModulesTest;

        $stack1 = staticinvoke <sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil create()>();

        $stack2 = virtualinvoke $stack1.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil customSortOrderFile(java.lang.String)>("sortOrderFiles/extra_dummy_tags.xml");

        $stack3 = virtualinvoke $stack2.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortProperties()>();

        $stack4 = virtualinvoke $stack3.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortPlugins(java.lang.String)>("groupId,artifactId");

        $stack5 = virtualinvoke $stack4.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortModules()>();

        $stack6 = virtualinvoke $stack5.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortDependencies(java.lang.String)>("groupId,artifactId");

        $stack7 = virtualinvoke $stack6.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil lineSeparator(java.lang.String)>("\n");

        virtualinvoke $stack7.<sortpom.util.SortPomImplUtil: void testFiles(java.lang.String,java.lang.String)>("/SortModules_input_extra_elements.xml", "/SortModules_expected_extra_elements.xml");

        return;
    }

    final void sortingOfPomFileWithSubmodulesNotEnabled() throws java.lang.Exception
    {
        sortpom.util.SortPomImplUtil $stack1, $stack2, $stack3, $stack4, $stack5;
        SortModulesTest this;

        this := @this: SortModulesTest;

        $stack1 = staticinvoke <sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil create()>();

        $stack2 = virtualinvoke $stack1.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortProperties()>();

        $stack3 = virtualinvoke $stack2.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortPlugins(java.lang.String)>("groupId,artifactId");

        $stack4 = virtualinvoke $stack3.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil sortDependencies(java.lang.String)>("groupId,artifactId");

        $stack5 = virtualinvoke $stack4.<sortpom.util.SortPomImplUtil: sortpom.util.SortPomImplUtil lineSeparator(java.lang.String)>("\n");

        virtualinvoke $stack5.<sortpom.util.SortPomImplUtil: void testFiles(java.lang.String,java.lang.String)>("/SortModules_input.xml", "/SortModules_expected_notsorted.xml");

        return;
    }
}
