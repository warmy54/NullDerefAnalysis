class SortMojoParametersTest extends java.lang.Object
{
    private final java.io.File pomFile;
    private sortpom.SortPomImpl sortPomImpl;
    private sortpom.SortPomService sortPomService;
    private sortpom.util.FileUtil fileUtil;
    private sortpom.SortMojo sortMojo;
    private sortpom.wrapper.ElementWrapperCreator elementWrapperCreator;
    private sortpom.wrapper.TextWrapperCreator textWrapperCreator;
    private sortpom.XmlOutputGenerator xmlOutputGenerator;
    private sortpom.util.WriterFactory writerFactory;
    private sortpom.processinstruction.XmlProcessingInstructionParser xmlProcessingInstructionParser;

    void <init>()
    {
        SortMojoParametersTest this;
        java.lang.Object $stack1;
        java.io.File $stack2;
        sortpom.sort.SortMojoParametersTest $r0;

        this := @this: SortMojoParametersTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/io/File;");

        $stack2 = (java.io.File) $stack1;

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $r0.<sortpom.sort.SortMojoParametersTest: java.io.File pomFile> = $stack2;

        return;
    }

    void setup() throws java.lang.SecurityException, java.lang.IllegalArgumentException
    {
        SortMojoParametersTest this;
        sortpom.SortMojo $stack5, $stack7, $stack9, $u0;
        java.lang.Object $stack10, $stack14, $stack18, $stack20, $stack22, $stack23, $stack26, $stack29, $stack33;
        sortpom.SortPomImpl $stack11, $stack13;
        sortpom.SortPomService $stack15, $stack17;
        sortpom.util.FileUtil $stack19;
        sortpom.XmlOutputGenerator $stack21, $stack32;
        sortpom.wrapper.WrapperFactoryImpl wrapperFactoryImpl;
        sortpom.processinstruction.XmlProcessingInstructionParser $stack24;
        sortpom.wrapper.ElementWrapperCreator $stack27;
        sortpom.wrapper.TextWrapperCreator $stack30;
        sortpom.util.WriterFactory $stack34;
        refutils.ReflectionHelper $u1, $u2, $u3, $u4, $u5, $u6, $u7, $u8;
        sortpom.sort.SortMojoParametersTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;

        this := @this: SortMojoParametersTest;

        $u0 = new sortpom.SortMojo;

        specialinvoke $u0.<sortpom.SortMojo: void <init>()>();

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $r0.<sortpom.sort.SortMojoParametersTest: sortpom.SortMojo sortMojo> = $u0;

        $u1 = new refutils.ReflectionHelper;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack5 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.SortMojo sortMojo>;

        specialinvoke $u1.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack5);

        virtualinvoke $u1.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>("lineSeparator", "\n");

        $u2 = new refutils.ReflectionHelper;

        $r2 = (sortpom.sort.SortMojoParametersTest) this;

        $stack7 = $r2.<sortpom.sort.SortMojoParametersTest: sortpom.SortMojo sortMojo>;

        specialinvoke $u2.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack7);

        virtualinvoke $u2.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>("encoding", "UTF-8");

        $u3 = new refutils.ReflectionHelper;

        $r3 = (sortpom.sort.SortMojoParametersTest) this;

        $stack9 = $r3.<sortpom.sort.SortMojoParametersTest: sortpom.SortMojo sortMojo>;

        specialinvoke $u3.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack9);

        $stack10 = virtualinvoke $u3.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/SortPomImpl;");

        $stack11 = (sortpom.SortPomImpl) $stack10;

        $r4 = (sortpom.sort.SortMojoParametersTest) this;

        $r4.<sortpom.sort.SortMojoParametersTest: sortpom.SortPomImpl sortPomImpl> = $stack11;

        $u4 = new refutils.ReflectionHelper;

        $r5 = (sortpom.sort.SortMojoParametersTest) this;

        $stack13 = $r5.<sortpom.sort.SortMojoParametersTest: sortpom.SortPomImpl sortPomImpl>;

        specialinvoke $u4.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack13);

        $stack14 = virtualinvoke $u4.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/SortPomService;");

        $stack15 = (sortpom.SortPomService) $stack14;

        $r6 = (sortpom.sort.SortMojoParametersTest) this;

        $r6.<sortpom.sort.SortMojoParametersTest: sortpom.SortPomService sortPomService> = $stack15;

        $u5 = new refutils.ReflectionHelper;

        $r7 = (sortpom.sort.SortMojoParametersTest) this;

        $stack17 = $r7.<sortpom.sort.SortMojoParametersTest: sortpom.SortPomService sortPomService>;

        specialinvoke $u5.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack17);

        $stack18 = virtualinvoke $u5.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/util/FileUtil;");

        $stack19 = (sortpom.util.FileUtil) $stack18;

        $r8 = (sortpom.sort.SortMojoParametersTest) this;

        $r8.<sortpom.sort.SortMojoParametersTest: sortpom.util.FileUtil fileUtil> = $stack19;

        $stack20 = virtualinvoke $u5.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/XmlOutputGenerator;");

        $stack21 = (sortpom.XmlOutputGenerator) $stack20;

        $r9 = (sortpom.sort.SortMojoParametersTest) this;

        $r9.<sortpom.sort.SortMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator> = $stack21;

        $stack22 = virtualinvoke $u5.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/wrapper/WrapperFactoryImpl;");

        wrapperFactoryImpl = (sortpom.wrapper.WrapperFactoryImpl) $stack22;

        $stack23 = virtualinvoke $u5.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/processinstruction/XmlProcessingInstructionParser;");

        $stack24 = (sortpom.processinstruction.XmlProcessingInstructionParser) $stack23;

        $r10 = (sortpom.sort.SortMojoParametersTest) this;

        $r10.<sortpom.sort.SortMojoParametersTest: sortpom.processinstruction.XmlProcessingInstructionParser xmlProcessingInstructionParser> = $stack24;

        $u6 = new refutils.ReflectionHelper;

        specialinvoke $u6.<refutils.ReflectionHelper: void <init>(java.lang.Object)>(wrapperFactoryImpl);

        $stack26 = virtualinvoke $u6.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/wrapper/ElementWrapperCreator;");

        $stack27 = (sortpom.wrapper.ElementWrapperCreator) $stack26;

        $r11 = (sortpom.sort.SortMojoParametersTest) this;

        $r11.<sortpom.sort.SortMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator> = $stack27;

        $u7 = new refutils.ReflectionHelper;

        specialinvoke $u7.<refutils.ReflectionHelper: void <init>(java.lang.Object)>(wrapperFactoryImpl);

        $stack29 = virtualinvoke $u7.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/wrapper/TextWrapperCreator;");

        $stack30 = (sortpom.wrapper.TextWrapperCreator) $stack29;

        $r12 = (sortpom.sort.SortMojoParametersTest) this;

        $r12.<sortpom.sort.SortMojoParametersTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator> = $stack30;

        $u8 = new refutils.ReflectionHelper;

        $r13 = (sortpom.sort.SortMojoParametersTest) this;

        $stack32 = $r13.<sortpom.sort.SortMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        specialinvoke $u8.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack32);

        $stack33 = virtualinvoke $u8.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/util/WriterFactory;");

        $stack34 = (sortpom.util.WriterFactory) $stack33;

        $r14 = (sortpom.sort.SortMojoParametersTest) this;

        $r14.<sortpom.sort.SortMojoParametersTest: sortpom.util.WriterFactory writerFactory> = $stack34;

        return;
    }

    void pomFileParameter()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.SortPomImpl $stack2;
        sortpom.util.FileUtil $stack3;
        java.io.File $stack4;
        sortpom.sort.SortMojoParametersTest $r0, $r1, $r2, $r3;

        this := @this: SortMojoParametersTest;

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack4 = $r0.<sortpom.sort.SortMojoParametersTest: java.io.File pomFile>;

        $stack1 = newarray (java.lang.Object)[2];

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.SortPomImpl sortPomImpl>;

        $stack1[0] = $stack2;

        $r2 = (sortpom.sort.SortMojoParametersTest) this;

        $stack3 = $r2.<sortpom.sort.SortMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[1] = $stack3;

        $r3 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r3.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("pomFile", $stack4, $stack1);

        return;
    }

    void createBackupFileParameter()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.SortPomService $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.SortPomService sortPomService>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("createBackupFile", $stack1);

        return;
    }

    void keepTimestampParameter()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.util.FileUtil $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("keepTimestamp", $stack1);

        return;
    }

    void backupFileExtensionParameter()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.SortPomService $stack2;
        sortpom.util.FileUtil $stack3;
        sortpom.sort.SortMojoParametersTest $r0, $r1, $r2;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[2];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.SortPomService sortPomService>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack3 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[1] = $stack3;

        $r2 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r2.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("backupFileExtension", ".gurka", $stack1);

        return;
    }

    void encodingParameter()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.util.FileUtil $stack2;
        sortpom.SortPomService $stack3;
        sortpom.XmlOutputGenerator $stack4;
        sortpom.sort.SortMojoParametersTest $r0, $r1, $r2, $r3;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[3];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack3 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.SortPomService sortPomService>;

        $stack1[1] = $stack3;

        $r2 = (sortpom.sort.SortMojoParametersTest) this;

        $stack4 = $r2.<sortpom.sort.SortMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        $stack1[2] = $stack4;

        $r3 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r3.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("encoding", "GURKA-2000", $stack1);

        return;
    }

    void lineSeparatorParameter()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.util.WriterFactory $stack4;
        java.lang.Object lineSeparatorUtil;
        java.lang.String $stack6;
        org.hamcrest.Matcher $stack7, $stack8;
        refutils.ReflectionHelper $u0;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r0.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("lineSeparator", "\r", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack4 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.util.WriterFactory writerFactory>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        lineSeparatorUtil = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("lineSeparatorUtil");

        $stack6 = virtualinvoke lineSeparatorUtil.<java.lang.Object: java.lang.String toString()>();

        $stack7 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>("\r");

        $stack8 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack7);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack6, $stack8);

        return;
    }

    void parameterNrOfIndentSpaceShouldEndUpInXmlProcessor()
    {
        SortMojoParametersTest this;
        java.lang.Integer $stack3;
        java.lang.Object[] $stack4;
        sortpom.XmlOutputGenerator $stack6;
        java.lang.Object indentCharacters;
        org.hamcrest.Matcher $stack8, $stack9;
        refutils.ReflectionHelper $u0;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $stack4 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r0.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("nrOfIndentSpace", $stack3, $stack4);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack6 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack6);

        indentCharacters = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("indentCharacters");

        $stack8 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>("      ");

        $stack9 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack8);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(indentCharacters, $stack9);

        return;
    }

    void expandEmptyElementsParameter()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.XmlOutputGenerator $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("expandEmptyElements", $stack1);

        return;
    }

    void spaceBeforeCloseEmptyElementParameter()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.util.WriterFactory $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.util.WriterFactory writerFactory>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("spaceBeforeCloseEmptyElement", $stack1);

        return;
    }

    void predefinedSortOrderParameter()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.util.FileUtil $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("predefinedSortOrder", "tomatoSort", $stack1);

        return;
    }

    void parameterSortOrderFileShouldEndUpInFileUtil()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.util.FileUtil $stack4;
        java.lang.Object actual;
        org.hamcrest.Matcher $stack6, $stack7;
        refutils.ReflectionHelper $u0;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r0.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("sortOrderFile", "sortOrderFile.gurka", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack4 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        actual = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("customSortOrderFile");

        $stack6 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>("sortOrderFile.gurka");

        $stack7 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack6);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(actual, $stack7);

        return;
    }

    void parameterSortDependenciesShouldEndUpInElementWrapperCreator()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.wrapper.ElementWrapperCreator $stack4;
        java.lang.Object sortDependencies;
        java.lang.String $stack6;
        org.hamcrest.Matcher $stack7;
        refutils.ReflectionHelper $u0;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r0.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("sortDependencies", "groupId,scope", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack4 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        sortDependencies = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("sortDependencies");

        $stack6 = virtualinvoke sortDependencies.<java.lang.Object: java.lang.String toString()>();

        $stack7 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>("DependencySortOrder{childElementNames=[groupId, scope]}");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack6, $stack7);

        return;
    }

    void parameterSortDependencyExclusionsShouldEndUpInElementWrapperCreator()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.wrapper.ElementWrapperCreator $stack4;
        java.lang.Object sortDependencyExclusions;
        java.lang.String $stack6;
        org.hamcrest.Matcher $stack7;
        refutils.ReflectionHelper $u0;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r0.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("sortDependencyExclusions", "groupId,scope", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack4 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        sortDependencyExclusions = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("sortDependencyExclusions");

        $stack6 = virtualinvoke sortDependencyExclusions.<java.lang.Object: java.lang.String toString()>();

        $stack7 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>("DependencySortOrder{childElementNames=[groupId, scope]}");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack6, $stack7);

        return;
    }

    void parameterSortPluginsShouldEndUpInWrapperFactoryImpl()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.wrapper.ElementWrapperCreator $stack4;
        java.lang.Object sortPlugins;
        java.lang.String $stack6;
        org.hamcrest.Matcher $stack7;
        refutils.ReflectionHelper $u0;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r0.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("sortPlugins", "alfa,beta", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack4 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        sortPlugins = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("sortPlugins");

        $stack6 = virtualinvoke sortPlugins.<java.lang.Object: java.lang.String toString()>();

        $stack7 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>("DependencySortOrder{childElementNames=[alfa, beta]}");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack6, $stack7);

        return;
    }

    void parameterSortModulesShouldEndUpInWrapperFactoryImpl()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.wrapper.ElementWrapperCreator $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("sortModules", $stack1);

        return;
    }

    void parameterSortExecutionsShouldEndUpInWrapperFactoryImpl()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.wrapper.ElementWrapperCreator $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("sortExecutions", $stack1);

        return;
    }

    void parameterSortPropertiesShouldEndUpInWrapperFactoryImpl()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.wrapper.ElementWrapperCreator $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("sortProperties", $stack1);

        return;
    }

    void parameterKeepBlankLineShouldEndUpInXmlProcessor()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.wrapper.TextWrapperCreator $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("keepBlankLines", $stack1);

        return;
    }

    void parameterIndentBlankLineShouldEndUpInXmlProcessor()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.XmlOutputGenerator $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("indentBlankLines", $stack1);

        return;
    }

    void parameterIndentSchemaLocationShouldEndUpInXmlProcessor()
    {
        SortMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.XmlOutputGenerator $stack2;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack2 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        specialinvoke $r1.<sortpom.sort.SortMojoParametersTest: void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("indentSchemaLocation", $stack1);

        return;
    }

    void xmlProcessingInstructionParserShouldGetLogger() throws org.apache.maven.plugin.MojoFailureException
    {
        SortMojoParametersTest this;
        sortpom.SortMojo $stack3;
        sortpom.processinstruction.XmlProcessingInstructionParser $stack5;
        java.lang.Object $stack6, $stack9;
        sortpom.logger.SortPomLogger logger, expectedLogger;
        sortpom.SortPomService $stack8;
        org.hamcrest.Matcher $stack10, $stack11, $stack12;
        refutils.ReflectionHelper $u0, $u1;
        sortpom.sort.SortMojoParametersTest $r0, $r1, $r2;

        this := @this: SortMojoParametersTest;

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack3 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.SortMojo sortMojo>;

        virtualinvoke $stack3.<sortpom.SortMojo: void setup()>();

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack5 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.processinstruction.XmlProcessingInstructionParser xmlProcessingInstructionParser>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack5);

        $stack6 = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/logger/SortPomLogger;");

        logger = (sortpom.logger.SortPomLogger) $stack6;

        $u1 = new refutils.ReflectionHelper;

        $r2 = (sortpom.sort.SortMojoParametersTest) this;

        $stack8 = $r2.<sortpom.sort.SortMojoParametersTest: sortpom.SortPomService sortPomService>;

        specialinvoke $u1.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack8);

        $stack9 = virtualinvoke $u1.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/logger/SortPomLogger;");

        expectedLogger = (sortpom.logger.SortPomLogger) $stack9;

        $stack10 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher nullValue()>();

        $stack11 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher not(org.hamcrest.Matcher)>($stack10);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(logger, $stack11);

        $stack12 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher sameInstance(java.lang.Object)>(expectedLogger);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(logger, $stack12);

        return;
    }

    private transient void assertParameterMoveFromMojoToRestOfApplication(java.lang.String, java.lang.Object, java.lang.Object[])
    {
        SortMojoParametersTest this;
        sortpom.SortMojo $stack10, $stack11;
        java.lang.String parameterName;
        java.lang.Object parameterValue, someInstanceThatContainParameter, actual;
        java.lang.Object[] whereParameterCanBeFound;
        int l5, l6;
        org.hamcrest.Matcher $stack14, $stack15;
        java.lang.Throwable $stack18;
        refutils.ReflectionHelper $u0, $u2;
        java.lang.RuntimeException $u1;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        parameterName := @parameter0: java.lang.String;

        parameterValue := @parameter1: java.lang.Object;

        whereParameterCanBeFound := @parameter2: java.lang.Object[];

        $u0 = new refutils.ReflectionHelper;

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack10 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.SortMojo sortMojo>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack10);

        virtualinvoke $u0.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>(parameterName, parameterValue);

     label1:
        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack11 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.SortMojo sortMojo>;

        virtualinvoke $stack11.<sortpom.SortMojo: void setup()>();

     label2:
        goto label4;

     label3:
        $stack18 := @caughtexception;

        $u1 = new java.lang.RuntimeException;

        specialinvoke $u1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($stack18);

        throw $u1;

     label4:
        l5 = lengthof whereParameterCanBeFound;

        l6 = 0;

     label5:
        if l6 >= l5 goto label6;

        someInstanceThatContainParameter = whereParameterCanBeFound[l6];

        $u2 = new refutils.ReflectionHelper;

        specialinvoke $u2.<refutils.ReflectionHelper: void <init>(java.lang.Object)>(someInstanceThatContainParameter);

        actual = virtualinvoke $u2.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>(parameterName);

        $stack14 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>(parameterValue);

        $stack15 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack14);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(actual, $stack15);

        l6 = l6 + 1;

        goto label5;

     label6:
        return;

        catch org.apache.maven.plugin.MojoFailureException from label1 to label2 with label3;
    }

    private transient void assertParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String, java.lang.Object[])
    {
        SortMojoParametersTest this;
        sortpom.SortMojo $stack9, $stack11;
        java.lang.String parameterName;
        java.lang.Boolean $stack10, $stack14, $stack16, $stack17;
        java.lang.Object[] whereParameterCanBeFound;
        int l4, l5;
        java.lang.Object someInstanceThatContainParameter, $stack13;
        boolean actual;
        org.hamcrest.Matcher $stack18, $stack19;
        java.lang.Throwable $stack22;
        refutils.ReflectionHelper $u0, $u2;
        java.lang.RuntimeException $u1;
        sortpom.sort.SortMojoParametersTest $r0, $r1;

        this := @this: SortMojoParametersTest;

        parameterName := @parameter0: java.lang.String;

        whereParameterCanBeFound := @parameter1: java.lang.Object[];

        $u0 = new refutils.ReflectionHelper;

        $r0 = (sortpom.sort.SortMojoParametersTest) this;

        $stack9 = $r0.<sortpom.sort.SortMojoParametersTest: sortpom.SortMojo sortMojo>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack9);

        $stack10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $u0.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>(parameterName, $stack10);

     label1:
        $r1 = (sortpom.sort.SortMojoParametersTest) this;

        $stack11 = $r1.<sortpom.sort.SortMojoParametersTest: sortpom.SortMojo sortMojo>;

        virtualinvoke $stack11.<sortpom.SortMojo: void setup()>();

     label2:
        goto label4;

     label3:
        $stack22 := @caughtexception;

        $u1 = new java.lang.RuntimeException;

        specialinvoke $u1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($stack22);

        throw $u1;

     label4:
        l4 = lengthof whereParameterCanBeFound;

        l5 = 0;

     label5:
        if l5 >= l4 goto label6;

        someInstanceThatContainParameter = whereParameterCanBeFound[l5];

        $u2 = new refutils.ReflectionHelper;

        specialinvoke $u2.<refutils.ReflectionHelper: void <init>(java.lang.Object)>(someInstanceThatContainParameter);

        $stack13 = virtualinvoke $u2.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>(parameterName);

        $stack14 = (java.lang.Boolean) $stack13;

        actual = virtualinvoke $stack14.<java.lang.Boolean: boolean booleanValue()>();

        $stack16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(actual);

        $stack17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack18 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher equalTo(java.lang.Object)>($stack17);

        $stack19 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack18);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack16, $stack19);

        l5 = l5 + 1;

        goto label5;

     label6:
        return;

        catch org.apache.maven.plugin.MojoFailureException from label1 to label2 with label3;
    }
}
