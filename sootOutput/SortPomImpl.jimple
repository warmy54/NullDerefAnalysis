public class SortPomImpl extends java.lang.Object
{
    private static final java.lang.String TEXT_FILE_NOT_SORTED;
    private final sortpom.SortPomService sortPomService;
    private sortpom.logger.SortPomLogger log;
    private java.io.File pomFile;
    private sortpom.parameter.VerifyFailType verifyFailType;
    private sortpom.parameter.VerifyFailOnType verifyFailOn;

    public void <init>()
    {
        SortPomImpl this;
        sortpom.SortPomService $u0;
        sortpom.SortPomImpl $r0;

        this := @this: SortPomImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new sortpom.SortPomService;

        specialinvoke $u0.<sortpom.SortPomService: void <init>()>();

        $r0 = (sortpom.SortPomImpl) this;

        $r0.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService> = $u0;

        return;
    }

    public void setup(sortpom.logger.SortPomLogger, sortpom.parameter.PluginParameters)
    {
        SortPomImpl this;
        sortpom.logger.SortPomLogger log;
        sortpom.parameter.PluginParameters pluginParameters;
        java.io.File $stack3;
        sortpom.parameter.VerifyFailType $stack4;
        sortpom.parameter.VerifyFailOnType $stack5;
        sortpom.SortPomService $stack6;
        sortpom.SortPomImpl $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: SortPomImpl;

        log := @parameter0: sortpom.logger.SortPomLogger;

        pluginParameters := @parameter1: sortpom.parameter.PluginParameters;

        $r0 = (sortpom.SortPomImpl) this;

        $r0.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log> = log;

        $stack3 = pluginParameters.<sortpom.parameter.PluginParameters: java.io.File pomFile>;

        $r1 = (sortpom.SortPomImpl) this;

        $r1.<sortpom.SortPomImpl: java.io.File pomFile> = $stack3;

        $stack4 = pluginParameters.<sortpom.parameter.PluginParameters: sortpom.parameter.VerifyFailType verifyFailType>;

        $r2 = (sortpom.SortPomImpl) this;

        $r2.<sortpom.SortPomImpl: sortpom.parameter.VerifyFailType verifyFailType> = $stack4;

        $stack5 = pluginParameters.<sortpom.parameter.PluginParameters: sortpom.parameter.VerifyFailOnType verifyFailOn>;

        $r3 = (sortpom.SortPomImpl) this;

        $r3.<sortpom.SortPomImpl: sortpom.parameter.VerifyFailOnType verifyFailOn> = $stack5;

        $r4 = (sortpom.SortPomImpl) this;

        $stack6 = $r4.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack6.<sortpom.SortPomService: void setup(sortpom.logger.SortPomLogger,sortpom.parameter.PluginParameters)>(log, pluginParameters);

        $r5 = (sortpom.SortPomImpl) this;

        specialinvoke $r5.<sortpom.SortPomImpl: void warnAboutDeprecatedArguments(sortpom.parameter.PluginParameters)>(pluginParameters);

        return;
    }

    private void warnAboutDeprecatedArguments(sortpom.parameter.PluginParameters)
    {
        sortpom.parameter.PluginParameters pluginParameters;
        sortpom.parameter.DependencySortOrder $stack2, $stack4, $stack6, $stack8, $stack10, $stack12;
        boolean $stack3, $stack5, $stack7, $stack9, $stack11, $stack13;
        SortPomImpl this;
        sortpom.exception.FailureException $u0, $u1, $u2, $u3, $u4, $u5;
        java.lang.Throwable $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: SortPomImpl;

        pluginParameters := @parameter0: sortpom.parameter.PluginParameters;

        $stack2 = pluginParameters.<sortpom.parameter.PluginParameters: sortpom.parameter.DependencySortOrder sortDependencies>;

        $stack3 = virtualinvoke $stack2.<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueTrue()>();

        if $stack3 == 0 goto label1;

        $u0 = new sortpom.exception.FailureException;

        specialinvoke $u0.<sortpom.exception.FailureException: void <init>(java.lang.String)>("The \'true\' value in sortDependencies is not supported anymore, please use value \'groupId,artifactId\' instead.");

        $r0 = (java.lang.Throwable) $u0;

        throw $r0;

     label1:
        $stack4 = pluginParameters.<sortpom.parameter.PluginParameters: sortpom.parameter.DependencySortOrder sortDependencies>;

        $stack5 = virtualinvoke $stack4.<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueFalse()>();

        if $stack5 == 0 goto label2;

        $u1 = new sortpom.exception.FailureException;

        specialinvoke $u1.<sortpom.exception.FailureException: void <init>(java.lang.String)>("The \'false\' value in sortDependencies is not supported anymore, please use empty value \'\' or omit sortDependencies instead.");

        $r1 = (java.lang.Throwable) $u1;

        throw $r1;

     label2:
        $stack6 = pluginParameters.<sortpom.parameter.PluginParameters: sortpom.parameter.DependencySortOrder sortDependencyExclusions>;

        $stack7 = virtualinvoke $stack6.<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueTrue()>();

        if $stack7 == 0 goto label3;

        $u2 = new sortpom.exception.FailureException;

        specialinvoke $u2.<sortpom.exception.FailureException: void <init>(java.lang.String)>("The \'true\' value in sortDependencyExclusions is not supported, please use value \'groupId,artifactId\' instead.");

        $r2 = (java.lang.Throwable) $u2;

        throw $r2;

     label3:
        $stack8 = pluginParameters.<sortpom.parameter.PluginParameters: sortpom.parameter.DependencySortOrder sortDependencyExclusions>;

        $stack9 = virtualinvoke $stack8.<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueFalse()>();

        if $stack9 == 0 goto label4;

        $u3 = new sortpom.exception.FailureException;

        specialinvoke $u3.<sortpom.exception.FailureException: void <init>(java.lang.String)>("The \'false\' value in sortDependencyExclusions is not supported, please use empty value \'\' or omit sortDependencyExclusions instead.");

        $r3 = (java.lang.Throwable) $u3;

        throw $r3;

     label4:
        $stack10 = pluginParameters.<sortpom.parameter.PluginParameters: sortpom.parameter.DependencySortOrder sortPlugins>;

        $stack11 = virtualinvoke $stack10.<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueTrue()>();

        if $stack11 == 0 goto label5;

        $u4 = new sortpom.exception.FailureException;

        specialinvoke $u4.<sortpom.exception.FailureException: void <init>(java.lang.String)>("The \'true\' value in sortPlugins is not supported anymore, please use value \'groupId,artifactId\' instead.");

        $r4 = (java.lang.Throwable) $u4;

        throw $r4;

     label5:
        $stack12 = pluginParameters.<sortpom.parameter.PluginParameters: sortpom.parameter.DependencySortOrder sortPlugins>;

        $stack13 = virtualinvoke $stack12.<sortpom.parameter.DependencySortOrder: boolean isDeprecatedValueFalse()>();

        if $stack13 == 0 goto label6;

        $u5 = new sortpom.exception.FailureException;

        specialinvoke $u5.<sortpom.exception.FailureException: void <init>(java.lang.String)>("The \'false\' value in sortPlugins is not supported anymore, please use empty value \'\' or omit sortPlugins instead.");

        $r5 = (java.lang.Throwable) $u5;

        throw $r5;

     label6:
        return;
    }

    public void sortPom()
    {
        SortPomImpl this;
        sortpom.logger.SortPomLogger $stack2, $stack16, $stack22;
        java.lang.StringBuilder $stack3, $stack6, $stack17, $stack20, $u0, $u1;
        java.io.File $stack4, $stack18;
        java.lang.String $stack5, $stack7, $stack19, $stack21;
        sortpom.SortPomService $stack8, $stack9, $stack10, $stack13, $stack14;
        sortpom.util.XmlOrderedResult $stack11;
        boolean $stack12;
        sortpom.SortPomImpl $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        this := @this: SortPomImpl;

        $r0 = (sortpom.SortPomImpl) this;

        $stack2 = $r0.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack3 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sorting file ");

        $r1 = (sortpom.SortPomImpl) this;

        $stack4 = $r1.<sortpom.SortPomImpl: java.io.File pomFile>;

        $stack5 = virtualinvoke $stack4.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack6 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack2.<sortpom.logger.SortPomLogger: void info(java.lang.String)>($stack7);

        $r2 = (sortpom.SortPomImpl) this;

        $stack8 = $r2.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack8.<sortpom.SortPomService: void sortOriginalXml()>();

        $r3 = (sortpom.SortPomImpl) this;

        $stack9 = $r3.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack9.<sortpom.SortPomService: void generateSortedXml()>();

        $r4 = (sortpom.SortPomImpl) this;

        $stack10 = $r4.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        $stack11 = virtualinvoke $stack10.<sortpom.SortPomService: sortpom.util.XmlOrderedResult isOriginalXmlStringSorted()>();

        $stack12 = virtualinvoke $stack11.<sortpom.util.XmlOrderedResult: boolean isOrdered()>();

        if $stack12 == 0 goto label1;

        $r5 = (sortpom.SortPomImpl) this;

        $stack22 = $r5.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        interfaceinvoke $stack22.<sortpom.logger.SortPomLogger: void info(java.lang.String)>("Pom file is already sorted, exiting");

        return;

     label1:
        $r6 = (sortpom.SortPomImpl) this;

        $stack13 = $r6.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack13.<sortpom.SortPomService: void createBackupFile()>();

        $r7 = (sortpom.SortPomImpl) this;

        $stack14 = $r7.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack14.<sortpom.SortPomService: void saveGeneratedXml()>();

        $r8 = (sortpom.SortPomImpl) this;

        $stack16 = $r8.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved sorted pom file to ");

        $r9 = (sortpom.SortPomImpl) this;

        $stack18 = $r9.<sortpom.SortPomImpl: java.io.File pomFile>;

        $stack19 = virtualinvoke $stack18.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack20 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack16.<sortpom.logger.SortPomLogger: void info(java.lang.String)>($stack21);

        return;
    }

    public void verifyPom()
    {
        SortPomImpl this;
        sortpom.util.XmlOrderedResult xmlOrderedResult;
        sortpom.SortPomImpl $r0, $r1;

        this := @this: SortPomImpl;

        $r0 = (sortpom.SortPomImpl) this;

        xmlOrderedResult = specialinvoke $r0.<sortpom.SortPomImpl: sortpom.util.XmlOrderedResult getVerificationResult()>();

        $r1 = (sortpom.SortPomImpl) this;

        specialinvoke $r1.<sortpom.SortPomImpl: void performVerfificationResult(sortpom.util.XmlOrderedResult)>(xmlOrderedResult);

        return;
    }

    private sortpom.util.XmlOrderedResult getVerificationResult()
    {
        SortPomImpl this;
        sortpom.logger.SortPomLogger $stack3;
        java.lang.StringBuilder $stack4, $stack7, $u0;
        java.io.File $stack5;
        java.lang.String $stack6, $stack8;
        sortpom.SortPomService $stack9, $stack12, $stack13, $stack15;
        sortpom.parameter.VerifyFailOnType $stack10, $stack11;
        sortpom.util.XmlOrderedResult xmlOrderedResult;
        sortpom.SortPomImpl $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: SortPomImpl;

        $r0 = (sortpom.SortPomImpl) this;

        $stack3 = $r0.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Verifying file ");

        $r1 = (sortpom.SortPomImpl) this;

        $stack5 = $r1.<sortpom.SortPomImpl: java.io.File pomFile>;

        $stack6 = virtualinvoke $stack5.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack7 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack6);

        $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack3.<sortpom.logger.SortPomLogger: void info(java.lang.String)>($stack8);

        $r2 = (sortpom.SortPomImpl) this;

        $stack9 = $r2.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack9.<sortpom.SortPomService: void sortOriginalXml()>();

        $r3 = (sortpom.SortPomImpl) this;

        $stack11 = $r3.<sortpom.SortPomImpl: sortpom.parameter.VerifyFailOnType verifyFailOn>;

        $stack10 = <sortpom.parameter.VerifyFailOnType: sortpom.parameter.VerifyFailOnType XMLELEMENTS>;

        if $stack11 != $stack10 goto label1;

        $r4 = (sortpom.SortPomImpl) this;

        $stack15 = $r4.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        xmlOrderedResult = virtualinvoke $stack15.<sortpom.SortPomService: sortpom.util.XmlOrderedResult isOriginalXmlElementsSorted()>();

        goto label2;

     label1:
        $r5 = (sortpom.SortPomImpl) this;

        $stack12 = $r5.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack12.<sortpom.SortPomService: void generateSortedXml()>();

        $r6 = (sortpom.SortPomImpl) this;

        $stack13 = $r6.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        xmlOrderedResult = virtualinvoke $stack13.<sortpom.SortPomService: sortpom.util.XmlOrderedResult isOriginalXmlStringSorted()>();

     label2:
        return xmlOrderedResult;
    }

    private void performVerfificationResult(sortpom.util.XmlOrderedResult)
    {
        sortpom.util.XmlOrderedResult xmlOrderedResult;
        boolean $stack2;
        SortPomImpl this;
        sortpom.parameter.VerifyFailType $stack3;
        int[] $stack4;
        int $stack5, $stack6;
        sortpom.logger.SortPomLogger $stack7, $stack12, $stack24, $stack29, $stack35, $stack45, $stack51, $stack56;
        java.lang.String $stack8, $stack15, $stack16, $stack22, $stack23, $stack25, $stack32, $stack33, $stack38, $stack40, $stack48, $stack50, $stack52, $stack59, $stack60;
        sortpom.SortPomService $stack9, $stack26, $stack41, $stack42, $stack43, $stack53;
        java.lang.Object[] $stack10, $stack18, $stack27, $stack54;
        java.io.File $stack11, $stack19, $stack28, $stack37, $stack47, $stack55;
        java.lang.StringBuilder $stack36, $stack39, $stack46, $stack49, $u0, $u1;
        sortpom.exception.FailureException $u2;
        sortpom.SortPomImpl $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        java.lang.Throwable $r21;

        this := @this: SortPomImpl;

        xmlOrderedResult := @parameter0: sortpom.util.XmlOrderedResult;

        $stack2 = virtualinvoke xmlOrderedResult.<sortpom.util.XmlOrderedResult: boolean isOrdered()>();

        if $stack2 != 0 goto label4;

        $stack4 = <sortpom.SortPomImpl$1: int[] $SwitchMap$sortpom$parameter$VerifyFailType>;

        $r0 = (sortpom.SortPomImpl) this;

        $stack3 = $r0.<sortpom.SortPomImpl: sortpom.parameter.VerifyFailType verifyFailType>;

        $stack5 = virtualinvoke $stack3.<sortpom.parameter.VerifyFailType: int ordinal()>();

        $stack6 = $stack4[$stack5];

        tableswitch($stack6)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r1 = (sortpom.SortPomImpl) this;

        $stack51 = $r1.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $stack52 = virtualinvoke xmlOrderedResult.<sortpom.util.XmlOrderedResult: java.lang.String getErrorMessage()>();

        interfaceinvoke $stack51.<sortpom.logger.SortPomLogger: void warn(java.lang.String)>($stack52);

        $r2 = (sortpom.SortPomImpl) this;

        $stack53 = $r2.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack53.<sortpom.SortPomService: void saveViolationFile(sortpom.util.XmlOrderedResult)>(xmlOrderedResult);

        $r3 = (sortpom.SortPomImpl) this;

        $stack56 = $r3.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $stack54 = newarray (java.lang.Object)[1];

        $r4 = (sortpom.SortPomImpl) this;

        $stack55 = $r4.<sortpom.SortPomImpl: java.io.File pomFile>;

        $stack59 = virtualinvoke $stack55.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack54[0] = $stack59;

        $stack60 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The file %s is not sorted", $stack54);

        interfaceinvoke $stack56.<sortpom.logger.SortPomLogger: void warn(java.lang.String)>($stack60);

        goto label4;

     label2:
        $r5 = (sortpom.SortPomImpl) this;

        $stack24 = $r5.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $stack25 = virtualinvoke xmlOrderedResult.<sortpom.util.XmlOrderedResult: java.lang.String getErrorMessage()>();

        interfaceinvoke $stack24.<sortpom.logger.SortPomLogger: void info(java.lang.String)>($stack25);

        $r6 = (sortpom.SortPomImpl) this;

        $stack26 = $r6.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack26.<sortpom.SortPomService: void saveViolationFile(sortpom.util.XmlOrderedResult)>(xmlOrderedResult);

        $r7 = (sortpom.SortPomImpl) this;

        $stack29 = $r7.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $stack27 = newarray (java.lang.Object)[1];

        $r8 = (sortpom.SortPomImpl) this;

        $stack28 = $r8.<sortpom.SortPomImpl: java.io.File pomFile>;

        $stack32 = virtualinvoke $stack28.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack27[0] = $stack32;

        $stack33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The file %s is not sorted", $stack27);

        interfaceinvoke $stack29.<sortpom.logger.SortPomLogger: void info(java.lang.String)>($stack33);

        $r9 = (sortpom.SortPomImpl) this;

        $stack35 = $r9.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack36 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sorting file ");

        $r10 = (sortpom.SortPomImpl) this;

        $stack37 = $r10.<sortpom.SortPomImpl: java.io.File pomFile>;

        $stack38 = virtualinvoke $stack37.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack39 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack38);

        $stack40 = virtualinvoke $stack39.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack35.<sortpom.logger.SortPomLogger: void info(java.lang.String)>($stack40);

        $r11 = (sortpom.SortPomImpl) this;

        $stack41 = $r11.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack41.<sortpom.SortPomService: void generateSortedXml()>();

        $r12 = (sortpom.SortPomImpl) this;

        $stack42 = $r12.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack42.<sortpom.SortPomService: void createBackupFile()>();

        $r13 = (sortpom.SortPomImpl) this;

        $stack43 = $r13.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack43.<sortpom.SortPomService: void saveGeneratedXml()>();

        $r14 = (sortpom.SortPomImpl) this;

        $stack45 = $r14.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack46 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Saved sorted pom file to ");

        $r15 = (sortpom.SortPomImpl) this;

        $stack47 = $r15.<sortpom.SortPomImpl: java.io.File pomFile>;

        $stack48 = virtualinvoke $stack47.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack49 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48);

        $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $stack45.<sortpom.logger.SortPomLogger: void info(java.lang.String)>($stack50);

        goto label4;

     label3:
        $r16 = (sortpom.SortPomImpl) this;

        $stack7 = $r16.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $stack8 = virtualinvoke xmlOrderedResult.<sortpom.util.XmlOrderedResult: java.lang.String getErrorMessage()>();

        interfaceinvoke $stack7.<sortpom.logger.SortPomLogger: void error(java.lang.String)>($stack8);

        $r17 = (sortpom.SortPomImpl) this;

        $stack9 = $r17.<sortpom.SortPomImpl: sortpom.SortPomService sortPomService>;

        virtualinvoke $stack9.<sortpom.SortPomService: void saveViolationFile(sortpom.util.XmlOrderedResult)>(xmlOrderedResult);

        $r18 = (sortpom.SortPomImpl) this;

        $stack12 = $r18.<sortpom.SortPomImpl: sortpom.logger.SortPomLogger log>;

        $stack10 = newarray (java.lang.Object)[1];

        $r19 = (sortpom.SortPomImpl) this;

        $stack11 = $r19.<sortpom.SortPomImpl: java.io.File pomFile>;

        $stack15 = virtualinvoke $stack11.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack10[0] = $stack15;

        $stack16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The file %s is not sorted", $stack10);

        interfaceinvoke $stack12.<sortpom.logger.SortPomLogger: void error(java.lang.String)>($stack16);

        $u2 = new sortpom.exception.FailureException;

        $stack18 = newarray (java.lang.Object)[1];

        $r20 = (sortpom.SortPomImpl) this;

        $stack19 = $r20.<sortpom.SortPomImpl: java.io.File pomFile>;

        $stack22 = virtualinvoke $stack19.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack18[0] = $stack22;

        $stack23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The file %s is not sorted", $stack18);

        specialinvoke $u2.<sortpom.exception.FailureException: void <init>(java.lang.String)>($stack23);

        $r21 = (java.lang.Throwable) $u2;

        throw $r21;

     label4:
        return;
    }

    public static void <clinit>()
    {
        <SortPomImpl: java.lang.String TEXT_FILE_NOT_SORTED> = "The file %s is not sorted";

        return;
    }
}
