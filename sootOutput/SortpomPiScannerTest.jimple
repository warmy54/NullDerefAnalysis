class SortpomPiScannerTest extends java.lang.Object
{
    private sortpom.processinstruction.SortpomPiScanner sortpomPiScanner;
    private final sortpom.logger.SortPomLogger logger;

    void <init>()
    {
        SortpomPiScannerTest this;
        java.lang.Object $stack1;
        sortpom.logger.SortPomLogger $stack2;
        sortpom.processinstruction.SortpomPiScannerTest $r0;

        this := @this: SortpomPiScannerTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Lsortpom/logger/SortPomLogger;");

        $stack2 = (sortpom.logger.SortPomLogger) $stack1;

        $r0 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $r0.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger> = $stack2;

        return;
    }

    void setUp()
    {
        SortpomPiScannerTest this;
        sortpom.logger.SortPomLogger $stack2;
        sortpom.processinstruction.SortpomPiScanner $u0;
        sortpom.processinstruction.SortpomPiScannerTest $r0, $r1;

        this := @this: SortpomPiScannerTest;

        $u0 = new sortpom.processinstruction.SortpomPiScanner;

        $r0 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack2 = $r0.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        specialinvoke $u0.<sortpom.processinstruction.SortpomPiScanner: void <init>(sortpom.logger.SortPomLogger)>($stack2);

        $r1 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $r1.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner> = $u0;

        return;
    }

    void scanNoInstructionsShouldWork()
    {
        SortpomPiScannerTest this;
        sortpom.processinstruction.SortpomPiScanner $stack2, $stack3;
        boolean $stack4;
        java.lang.Boolean $stack5, $stack6;
        org.hamcrest.Matcher $stack7;
        java.lang.Object[] $stack8;
        sortpom.logger.SortPomLogger $stack9;
        sortpom.processinstruction.SortpomPiScannerTest $r0, $r1, $r2;

        this := @this: SortpomPiScannerTest;

        $r0 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack2 = $r0.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        virtualinvoke $stack2.<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <artifactId>sortpom</artifactId>\n  <description name=\"pelle\" id=\"id\" other=\"\u00f6vrigt\">H\u00e4r anv\u00e4nder vi \u00e5\u00e4\u00f6</description>\n  <groupId>sortpom</groupId>\n  <modelVersion>4.0.0</modelVersion>\n  <name>SortPom</name>\n  <!-- Egenskaper f\u00f6r projektet -->\n  <properties>\n    <compileSource>1.6</compileSource>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <reporting />\n  <version>1.0.0-SNAPSHOT</version>\n</project>");

        $r1 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack3 = $r1.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack4 = virtualinvoke $stack3.<sortpom.processinstruction.SortpomPiScanner: boolean isScanError()>();

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack4);

        $stack6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack6);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack5, $stack7);

        $stack8 = newarray (java.lang.Object)[1];

        $r2 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack9 = $r2.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack8[0] = $stack9;

        staticinvoke <org.mockito.Mockito: void verifyNoMoreInteractions(java.lang.Object[])>($stack8);

        return;
    }

    void correctIgnoreShouldNotReportError()
    {
        SortpomPiScannerTest this;
        sortpom.processinstruction.SortpomPiScanner $stack2, $stack3;
        boolean $stack4;
        java.lang.Boolean $stack5, $stack6;
        org.hamcrest.Matcher $stack7;
        java.lang.Object[] $stack8;
        sortpom.logger.SortPomLogger $stack9;
        sortpom.processinstruction.SortpomPiScannerTest $r0, $r1, $r2;

        this := @this: SortpomPiScannerTest;

        $r0 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack2 = $r0.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        virtualinvoke $stack2.<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <artifactId>sortpom</artifactId>\n  <description name=\"pelle\" id=\"id\" other=\"\u00f6vrigt\">H\u00e4r anv\u00e4nder vi \u00e5\u00e4\u00f6</description>\n  <groupId>sortpom</groupId>\n  <modelVersion>4.0.0</modelVersion>\n  <name>SortPom</name>\n  <!-- Egenskaper f\u00f6r projektet -->\n  <properties>\n    <?sortpom ignore?><compileSource>1.6</compileSource>\n    <?sortpom resume?><project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <reporting />\n  <version>1.0.0-SNAPSHOT</version>\n</project>");

        $r1 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack3 = $r1.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack4 = virtualinvoke $stack3.<sortpom.processinstruction.SortpomPiScanner: boolean isScanError()>();

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack4);

        $stack6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $stack7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack6);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack5, $stack7);

        $stack8 = newarray (java.lang.Object)[1];

        $r2 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack9 = $r2.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack8[0] = $stack9;

        staticinvoke <org.mockito.Mockito: void verifyNoMoreInteractions(java.lang.Object[])>($stack8);

        return;
    }

    void unterminatedIgnoreShouldReportError()
    {
        SortpomPiScannerTest this;
        sortpom.processinstruction.SortpomPiScanner $stack2, $stack3, $stack8;
        boolean $stack4;
        java.lang.Boolean $stack5, $stack6;
        org.hamcrest.Matcher $stack7, $stack10;
        java.lang.String $stack9;
        sortpom.logger.SortPomLogger $stack11, $stack13, $stack15;
        java.lang.Object $stack12;
        java.lang.Object[] $stack14;
        sortpom.processinstruction.SortpomPiScannerTest $r0, $r1, $r2, $r3, $r4;

        this := @this: SortpomPiScannerTest;

        $r0 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack2 = $r0.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        virtualinvoke $stack2.<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <artifactId>sortpom</artifactId>\n  <description name=\"pelle\" id=\"id\" other=\"\u00f6vrigt\">H\u00e4r anv\u00e4nder vi \u00e5\u00e4\u00f6</description>\n  <groupId>sortpom</groupId>\n  <modelVersion>4.0.0</modelVersion>\n  <name>SortPom</name>\n  <!-- Egenskaper f\u00f6r projektet -->\n  <properties>\n    <?sortpom ignore?><compileSource>1.6</compileSource>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <reporting />\n  <version>1.0.0-SNAPSHOT</version>\n</project>");

        $r1 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack3 = $r1.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack4 = virtualinvoke $stack3.<sortpom.processinstruction.SortpomPiScanner: boolean isScanError()>();

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack4);

        $stack6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack6);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack5, $stack7);

        $r2 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack8 = $r2.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack9 = virtualinvoke $stack8.<sortpom.processinstruction.SortpomPiScanner: java.lang.String getFirstError()>();

        $stack10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("Xml processing instructions for sortpom was not properly terminated. Every <?sortpom IGNORE?> must be followed with <?sortpom RESUME?>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack9, $stack10);

        $r3 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack11 = $r3.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack12 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($stack11);

        $stack13 = (sortpom.logger.SortPomLogger) $stack12;

        interfaceinvoke $stack13.<sortpom.logger.SortPomLogger: void error(java.lang.String)>("Xml processing instructions for sortpom was not properly terminated. Every <?sortpom IGNORE?> must be followed with <?sortpom RESUME?>");

        $stack14 = newarray (java.lang.Object)[1];

        $r4 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack15 = $r4.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack14[0] = $stack15;

        staticinvoke <org.mockito.Mockito: void verifyNoMoreInteractions(java.lang.Object[])>($stack14);

        return;
    }

    void unknownInstructionShouldReportError()
    {
        SortpomPiScannerTest this;
        sortpom.processinstruction.SortpomPiScanner $stack2, $stack3, $stack8;
        boolean $stack4;
        java.lang.Boolean $stack5, $stack6;
        org.hamcrest.Matcher $stack7, $stack10;
        java.lang.String $stack9;
        sortpom.logger.SortPomLogger $stack11, $stack13, $stack15;
        java.lang.Object $stack12;
        java.lang.Object[] $stack14;
        sortpom.processinstruction.SortpomPiScannerTest $r0, $r1, $r2, $r3, $r4;

        this := @this: SortpomPiScannerTest;

        $r0 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack2 = $r0.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        virtualinvoke $stack2.<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <artifactId>sortpom</artifactId>\n  <description name=\"pelle\" id=\"id\" other=\"\u00f6vrigt\">H\u00e4r anv\u00e4nder vi \u00e5\u00e4\u00f6</description>\n  <groupId>sortpom</groupId>\n  <modelVersion>4.0.0</modelVersion>\n  <name>SortPom</name>\n  <!-- Egenskaper f\u00f6r projektet -->\n  <properties>\n    <?sortpom gurka?><compileSource>1.6</compileSource>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <reporting />\n  <version>1.0.0-SNAPSHOT</version>\n</project>");

        $r1 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack3 = $r1.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack4 = virtualinvoke $stack3.<sortpom.processinstruction.SortpomPiScanner: boolean isScanError()>();

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack4);

        $stack6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack6);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack5, $stack7);

        $r2 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack8 = $r2.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack9 = virtualinvoke $stack8.<sortpom.processinstruction.SortpomPiScanner: java.lang.String getFirstError()>();

        $stack10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("Xml contained unknown sortpom instruction \'gurka\'. Please use <?sortpom IGNORE?> or <?sortpom RESUME?>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack9, $stack10);

        $r3 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack11 = $r3.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack12 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($stack11);

        $stack13 = (sortpom.logger.SortPomLogger) $stack12;

        interfaceinvoke $stack13.<sortpom.logger.SortPomLogger: void error(java.lang.String)>("Xml contained unknown sortpom instruction \'gurka\'. Please use <?sortpom IGNORE?> or <?sortpom RESUME?>");

        $stack14 = newarray (java.lang.Object)[1];

        $r4 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack15 = $r4.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack14[0] = $stack15;

        staticinvoke <org.mockito.Mockito: void verifyNoMoreInteractions(java.lang.Object[])>($stack14);

        return;
    }

    void unexpectedResumeShouldReportError()
    {
        SortpomPiScannerTest this;
        sortpom.processinstruction.SortpomPiScanner $stack2, $stack3, $stack8;
        boolean $stack4;
        java.lang.Boolean $stack5, $stack6;
        org.hamcrest.Matcher $stack7, $stack10;
        java.lang.String $stack9;
        sortpom.logger.SortPomLogger $stack11, $stack13, $stack15;
        java.lang.Object $stack12;
        java.lang.Object[] $stack14;
        sortpom.processinstruction.SortpomPiScannerTest $r0, $r1, $r2, $r3, $r4;

        this := @this: SortpomPiScannerTest;

        $r0 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack2 = $r0.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        virtualinvoke $stack2.<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <artifactId>sortpom</artifactId>\n  <description name=\"pelle\" id=\"id\" other=\"\u00f6vrigt\">H\u00e4r anv\u00e4nder vi \u00e5\u00e4\u00f6</description>\n  <groupId>sortpom</groupId>\n  <modelVersion>4.0.0</modelVersion>\n  <name>SortPom</name>\n  <!-- Egenskaper f\u00f6r projektet -->\n  <properties>\n    <?sortpom resume?><compileSource>1.6</compileSource>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n  <reporting />\n  <version>1.0.0-SNAPSHOT</version>\n</project>");

        $r1 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack3 = $r1.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack4 = virtualinvoke $stack3.<sortpom.processinstruction.SortpomPiScanner: boolean isScanError()>();

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack4);

        $stack6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack6);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack5, $stack7);

        $r2 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack8 = $r2.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack9 = virtualinvoke $stack8.<sortpom.processinstruction.SortpomPiScanner: java.lang.String getFirstError()>();

        $stack10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("Xml contained unexpected sortpom instruction \'resume\'. Please use expected instruction <?sortpom IGNORE?>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack9, $stack10);

        $r3 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack11 = $r3.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack12 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($stack11);

        $stack13 = (sortpom.logger.SortPomLogger) $stack12;

        interfaceinvoke $stack13.<sortpom.logger.SortPomLogger: void error(java.lang.String)>("Xml contained unexpected sortpom instruction \'resume\'. Please use expected instruction <?sortpom IGNORE?>");

        $stack14 = newarray (java.lang.Object)[1];

        $r4 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack15 = $r4.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack14[0] = $stack15;

        staticinvoke <org.mockito.Mockito: void verifyNoMoreInteractions(java.lang.Object[])>($stack14);

        return;
    }

    void multipleErrorsShouldBeReportedInLogger()
    {
        SortpomPiScannerTest this;
        sortpom.processinstruction.SortpomPiScanner $stack2, $stack3, $stack8;
        boolean $stack4;
        java.lang.Boolean $stack5, $stack6;
        org.hamcrest.Matcher $stack7, $stack10;
        java.lang.String $stack9;
        sortpom.logger.SortPomLogger $stack11, $stack13, $stack14, $stack16, $stack17, $stack19, $stack20, $stack22, $stack24;
        java.lang.Object $stack12, $stack15, $stack18, $stack21;
        java.lang.Object[] $stack23;
        sortpom.processinstruction.SortpomPiScannerTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: SortpomPiScannerTest;

        $r0 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack2 = $r0.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        virtualinvoke $stack2.<sortpom.processinstruction.SortpomPiScanner: void scan(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <artifactId>sortpom</artifactId>\n  <description name=\"pelle\" id=\"id\" other=\"\u00f6vrigt\">H\u00e4r anv\u00e4nder vi \u00e5\u00e4\u00f6</description>\n  <groupId>sortpom</groupId>\n  <modelVersion>4.0.0</modelVersion>\n  <name>SortPom</name>\n  <!-- Egenskaper f\u00f6r projektet -->\n  <properties>\n    <?sortpom resume?><compileSource>1.6</compileSource>\n    <?sortpom ignore?>    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <?sortpom resume?>  </properties>\n    <?sortpom token=\'0\'?>    <?sortpom gurka?>  <reporting />\n    <?sortpom ignore?>  <version>1.0.0-SNAPSHOT</version>\n</project>");

        $r1 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack3 = $r1.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack4 = virtualinvoke $stack3.<sortpom.processinstruction.SortpomPiScanner: boolean isScanError()>();

        $stack5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($stack4);

        $stack6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack7 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>($stack6);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack5, $stack7);

        $r2 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack8 = $r2.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.processinstruction.SortpomPiScanner sortpomPiScanner>;

        $stack9 = virtualinvoke $stack8.<sortpom.processinstruction.SortpomPiScanner: java.lang.String getFirstError()>();

        $stack10 = staticinvoke <org.hamcrest.Matchers: org.hamcrest.Matcher is(java.lang.Object)>("Xml contained unexpected sortpom instruction \'resume\'. Please use expected instruction <?sortpom IGNORE?>");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack9, $stack10);

        $r3 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack11 = $r3.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack12 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($stack11);

        $stack13 = (sortpom.logger.SortPomLogger) $stack12;

        interfaceinvoke $stack13.<sortpom.logger.SortPomLogger: void error(java.lang.String)>("Xml contained unexpected sortpom instruction \'resume\'. Please use expected instruction <?sortpom IGNORE?>");

        $r4 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack14 = $r4.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack15 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($stack14);

        $stack16 = (sortpom.logger.SortPomLogger) $stack15;

        interfaceinvoke $stack16.<sortpom.logger.SortPomLogger: void error(java.lang.String)>("Xml contained unknown sortpom instruction \'token=\'0\'\'. Please use <?sortpom IGNORE?> or <?sortpom RESUME?>");

        $r5 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack17 = $r5.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack18 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($stack17);

        $stack19 = (sortpom.logger.SortPomLogger) $stack18;

        interfaceinvoke $stack19.<sortpom.logger.SortPomLogger: void error(java.lang.String)>("Xml contained unknown sortpom instruction \'gurka\'. Please use <?sortpom IGNORE?> or <?sortpom RESUME?>");

        $r6 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack20 = $r6.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack21 = staticinvoke <org.mockito.Mockito: java.lang.Object verify(java.lang.Object)>($stack20);

        $stack22 = (sortpom.logger.SortPomLogger) $stack21;

        interfaceinvoke $stack22.<sortpom.logger.SortPomLogger: void error(java.lang.String)>("Xml processing instructions for sortpom was not properly terminated. Every <?sortpom IGNORE?> must be followed with <?sortpom RESUME?>");

        $stack23 = newarray (java.lang.Object)[1];

        $r7 = (sortpom.processinstruction.SortpomPiScannerTest) this;

        $stack24 = $r7.<sortpom.processinstruction.SortpomPiScannerTest: sortpom.logger.SortPomLogger logger>;

        $stack23[0] = $stack24;

        staticinvoke <org.mockito.Mockito: void verifyNoMoreInteractions(java.lang.Object[])>($stack23);

        return;
    }
}
