public class SourceReader extends java.lang.Object
{
    protected java.util.ArrayList newlineIndices;
    protected java.lang.String fileName;
    protected char[] content;
    protected int index;
    protected int mark;

    public static org.ubi.SourceReader getReaderFromPath(java.lang.String) throws java.io.IOException
    {
        java.io.File $stack1;
        java.lang.String path;
        org.ubi.SourceReader $stack2;

        path := @parameter0: java.lang.String;

        $stack1 = new java.io.File;

        specialinvoke $stack1.<java.io.File: void <init>(java.lang.String)>(path);

        $stack2 = staticinvoke <org.ubi.SourceReader: org.ubi.SourceReader getReaderFromFile(java.io.File)>($stack1);

        return $stack2;
    }

    public static org.ubi.SourceReader getReaderFromFile(java.io.File) throws java.io.IOException
    {
        org.ubi.SourceReader $stack1;
        java.io.File file;
        java.lang.String $stack2, $stack3;

        file := @parameter0: java.io.File;

        $stack1 = new org.ubi.SourceReader;

        $stack2 = virtualinvoke file.<java.io.File: java.lang.String getPath()>();

        $stack3 = staticinvoke <org.ubi.SourceReader: java.lang.String readToString(java.io.File)>(file);

        specialinvoke $stack1.<org.ubi.SourceReader: void <init>(java.lang.String,java.lang.String)>($stack2, $stack3);

        return $stack1;
    }

    public static org.ubi.SourceReader getReaderFromText(java.lang.String, java.lang.String)
    {
        org.ubi.SourceReader $stack2;
        java.lang.String path, content;

        path := @parameter0: java.lang.String;

        content := @parameter1: java.lang.String;

        $stack2 = new org.ubi.SourceReader;

        specialinvoke $stack2.<org.ubi.SourceReader: void <init>(java.lang.String,java.lang.String)>(path, content);

        return $stack2;
    }

    public static java.lang.String readToString(java.io.File) throws java.io.IOException
    {
        char[] buffer;
        java.io.FileReader $stack5;
        java.io.File file;
        java.lang.StringBuilder $stack6;
        long $stack7;
        int $stack8, $stack9;
        java.lang.String $stack10;

        file := @parameter0: java.io.File;

        buffer = newarray (char)[8192];

        $stack5 = new java.io.FileReader;

        specialinvoke $stack5.<java.io.FileReader: void <init>(java.io.File)>(file);

        $stack6 = new java.lang.StringBuilder;

        $stack7 = virtualinvoke file.<java.io.File: long length()>();

        $stack8 = (int) $stack7;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>(int)>($stack8);

     label1:
        $stack9 = virtualinvoke $stack5.<java.io.FileReader: int read(char[])>(buffer);

        if $stack9 == -1 goto label2;

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(buffer, 0, $stack9);

        goto label1;

     label2:
        virtualinvoke $stack5.<java.io.FileReader: void close()>();

        $stack10 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;
    }

    protected void <init>(java.lang.String, java.lang.String)
    {
        SourceReader this;
        java.lang.String filePath, content;
        char[] $stack3;
        java.util.ArrayList $u0;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4;

        this := @this: SourceReader;

        filePath := @parameter0: java.lang.String;

        content := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.ubi.SourceReader) this;

        $r0.<org.ubi.SourceReader: java.lang.String fileName> = filePath;

        $stack3 = virtualinvoke content.<java.lang.String: char[] toCharArray()>();

        $r1 = (org.ubi.SourceReader) this;

        $r1.<org.ubi.SourceReader: char[] content> = $stack3;

        $r2 = (org.ubi.SourceReader) this;

        $r2.<org.ubi.SourceReader: int index> = 0;

        $r3 = (org.ubi.SourceReader) this;

        $r3.<org.ubi.SourceReader: int mark> = 0;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r4 = (org.ubi.SourceReader) this;

        $r4.<org.ubi.SourceReader: java.util.ArrayList newlineIndices> = $u0;

        return;
    }

    public char read() throws java.io.EOFException
    {
        SourceReader this;
        int $stack2, $stack4, $stack5, $stack6, $stack7, $stack12, $stack18, $stack19, $stack22, $stack23, $stack27, $stack28;
        char[] $stack3, $stack8;
        char character;
        java.util.ArrayList $stack9, $stack13, $stack16, $stack17;
        boolean $stack10;
        java.lang.Object $stack20;
        java.lang.Integer $stack21, $u1;
        java.lang.String $stack29;
        java.io.EOFException $u0;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = $r0.<org.ubi.SourceReader: int index>;

        $stack5 = $stack2 + 1;

        $r1 = (org.ubi.SourceReader) this;

        $stack3 = $r1.<org.ubi.SourceReader: char[] content>;

        $stack4 = lengthof $stack3;

        if $stack5 <= $stack4 goto label1;

        $u0 = new java.io.EOFException;

        $r2 = (org.ubi.SourceReader) this;

        $stack27 = $r2.<org.ubi.SourceReader: int index>;

        $r3 = (org.ubi.SourceReader) this;

        $stack28 = virtualinvoke $r3.<org.ubi.SourceReader: int getLineNumber()>();

        $stack29 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>($stack27, $stack28) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Parsing ended. Parsed\u0001 chars, \u0001 lines total.");

        specialinvoke $u0.<java.io.EOFException: void <init>(java.lang.String)>($stack29);

        throw $u0;

     label1:
        $r4 = (org.ubi.SourceReader) this;

        $stack8 = $r4.<org.ubi.SourceReader: char[] content>;

        $r5 = (org.ubi.SourceReader) this;

        $stack6 = $r5.<org.ubi.SourceReader: int index>;

        $stack7 = $stack6 + 1;

        $r6 = (org.ubi.SourceReader) this;

        $r6.<org.ubi.SourceReader: int index> = $stack7;

        character = $stack8[$stack6];

        if character != 10 goto label3;

        $r7 = (org.ubi.SourceReader) this;

        $stack9 = $r7.<org.ubi.SourceReader: java.util.ArrayList newlineIndices>;

        $stack10 = virtualinvoke $stack9.<java.util.ArrayList: boolean isEmpty()>();

        if $stack10 != 0 goto label2;

        $r8 = (org.ubi.SourceReader) this;

        $stack17 = $r8.<org.ubi.SourceReader: java.util.ArrayList newlineIndices>;

        $r9 = (org.ubi.SourceReader) this;

        $stack16 = $r9.<org.ubi.SourceReader: java.util.ArrayList newlineIndices>;

        $stack18 = virtualinvoke $stack16.<java.util.ArrayList: int size()>();

        $stack19 = $stack18 - 1;

        $stack20 = virtualinvoke $stack17.<java.util.ArrayList: java.lang.Object get(int)>($stack19);

        $stack21 = (java.lang.Integer) $stack20;

        $stack22 = virtualinvoke $stack21.<java.lang.Integer: int intValue()>();

        $r10 = (org.ubi.SourceReader) this;

        $stack23 = $r10.<org.ubi.SourceReader: int index>;

        if $stack22 >= $stack23 goto label3;

     label2:
        $r11 = (org.ubi.SourceReader) this;

        $stack13 = $r11.<org.ubi.SourceReader: java.util.ArrayList newlineIndices>;

        $u1 = new java.lang.Integer;

        $r12 = (org.ubi.SourceReader) this;

        $stack12 = $r12.<org.ubi.SourceReader: int index>;

        specialinvoke $u1.<java.lang.Integer: void <init>(int)>($stack12);

        virtualinvoke $stack13.<java.util.ArrayList: boolean add(java.lang.Object)>($u1);

     label3:
        return character;
    }

    public char peek()
    {
        SourceReader this;
        int $stack1;
        char[] $stack2;
        char $stack3;
        org.ubi.SourceReader $r0, $r1;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = $r0.<org.ubi.SourceReader: char[] content>;

        $r1 = (org.ubi.SourceReader) this;

        $stack1 = $r1.<org.ubi.SourceReader: int index>;

        $stack3 = $stack2[$stack1];

        return $stack3;
    }

    public int mark()
    {
        SourceReader this;
        int $stack1, $stack2;
        org.ubi.SourceReader $r0, $r1, $r2;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack1 = $r0.<org.ubi.SourceReader: int index>;

        $r1 = (org.ubi.SourceReader) this;

        $r1.<org.ubi.SourceReader: int mark> = $stack1;

        $r2 = (org.ubi.SourceReader) this;

        $stack2 = $r2.<org.ubi.SourceReader: int mark>;

        return $stack2;
    }

    public void reset()
    {
        SourceReader this;
        int $stack1;
        org.ubi.SourceReader $r0, $r1;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack1 = $r0.<org.ubi.SourceReader: int mark>;

        $r1 = (org.ubi.SourceReader) this;

        $r1.<org.ubi.SourceReader: int index> = $stack1;

        return;
    }

    public void reset(int)
    {
        SourceReader this;
        int index;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        index := @parameter0: int;

        $r0 = (org.ubi.SourceReader) this;

        $r0.<org.ubi.SourceReader: int index> = index;

        return;
    }

    public void rewind(int)
    {
        SourceReader this;
        int offset, $stack2, $stack3;
        org.ubi.SourceReader $r0, $r1;

        this := @this: SourceReader;

        offset := @parameter0: int;

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = $r0.<org.ubi.SourceReader: int index>;

        $stack3 = $stack2 - offset;

        $r1 = (org.ubi.SourceReader) this;

        $r1.<org.ubi.SourceReader: int index> = $stack3;

        return;
    }

    public void skip(int) throws java.io.EOFException
    {
        int offset, $stack6, i;
        SourceReader this;
        org.ubi.SourceReader $r0, $r1;

        this := @this: SourceReader;

        offset := @parameter0: int;

        if offset >= 0 goto label1;

        $stack6 = neg offset;

        $r0 = (org.ubi.SourceReader) this;

        virtualinvoke $r0.<org.ubi.SourceReader: void rewind(int)>($stack6);

        goto label3;

     label1:
        i = 0;

     label2:
        if i >= offset goto label3;

        $r1 = (org.ubi.SourceReader) this;

        virtualinvoke $r1.<org.ubi.SourceReader: char read()>();

        i = i + 1;

        goto label2;

     label3:
        return;
    }

    public int getLineNumber()
    {
        SourceReader this;
        java.util.ArrayList $stack2, $stack5;
        int $stack3, $stack4, $stack8, $stack9, lineNumber;
        java.lang.Object $stack6;
        java.lang.Integer $stack7;
        org.ubi.SourceReader $r0, $r1, $r2;

        this := @this: SourceReader;

        lineNumber = 0;

     label1:
        $r0 = (org.ubi.SourceReader) this;

        $stack2 = $r0.<org.ubi.SourceReader: java.util.ArrayList newlineIndices>;

        $stack3 = virtualinvoke $stack2.<java.util.ArrayList: int size()>();

        if lineNumber >= $stack3 goto label2;

        $r1 = (org.ubi.SourceReader) this;

        $stack5 = $r1.<org.ubi.SourceReader: java.util.ArrayList newlineIndices>;

        $stack6 = virtualinvoke $stack5.<java.util.ArrayList: java.lang.Object get(int)>(lineNumber);

        $stack7 = (java.lang.Integer) $stack6;

        $stack8 = virtualinvoke $stack7.<java.lang.Integer: int intValue()>();

        $r2 = (org.ubi.SourceReader) this;

        $stack9 = $r2.<org.ubi.SourceReader: int index>;

        if $stack8 > $stack9 goto label2;

        lineNumber = lineNumber + 1;

        goto label1;

     label2:
        $stack4 = lineNumber + 1;

        return $stack4;
    }

    public int getLinePos()
    {
        SourceReader this;
        int lineNumber, $stack3, $stack5, $stack6, $stack9, $stack10, $stack11, $stack12, $stack13;
        java.util.ArrayList $stack4;
        java.lang.Object $stack7;
        java.lang.Integer $stack8;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        lineNumber = virtualinvoke $r0.<org.ubi.SourceReader: int getLineNumber()>();

        if lineNumber != 1 goto label1;

        $r1 = (org.ubi.SourceReader) this;

        $stack12 = $r1.<org.ubi.SourceReader: int index>;

        $stack13 = $stack12 + 1;

        return $stack13;

     label1:
        $r2 = (org.ubi.SourceReader) this;

        $stack3 = $r2.<org.ubi.SourceReader: int index>;

        $r3 = (org.ubi.SourceReader) this;

        $stack4 = $r3.<org.ubi.SourceReader: java.util.ArrayList newlineIndices>;

        $r4 = (org.ubi.SourceReader) this;

        $stack5 = virtualinvoke $r4.<org.ubi.SourceReader: int getLineNumber()>();

        $stack6 = $stack5 - 2;

        $stack7 = virtualinvoke $stack4.<java.util.ArrayList: java.lang.Object get(int)>($stack6);

        $stack8 = (java.lang.Integer) $stack7;

        $stack9 = virtualinvoke $stack8.<java.lang.Integer: int intValue()>();

        $stack10 = $stack3 - $stack9;

        $stack11 = $stack10 + 1;

        return $stack11;
    }

    public boolean hasNext()
    {
        SourceReader this;
        char[] $stack1;
        int $stack2, $stack3;
        boolean $stack4;
        org.ubi.SourceReader $r0, $r1;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack3 = $r0.<org.ubi.SourceReader: int index>;

        $r1 = (org.ubi.SourceReader) this;

        $stack1 = $r1.<org.ubi.SourceReader: char[] content>;

        $stack2 = lengthof $stack1;

        if $stack3 >= $stack2 goto label1;

        $stack4 = 1;

        goto label2;

     label1:
        $stack4 = 0;

     label2:
        return $stack4;
    }

    public java.lang.String getFileName()
    {
        SourceReader this;
        java.lang.String $stack1;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack1 = $r0.<org.ubi.SourceReader: java.lang.String fileName>;

        return $stack1;
    }

    public org.ubi.FileLocation getLocation()
    {
        SourceReader this;
        java.lang.String $stack2;
        int $stack3, $stack4, $stack5;
        org.ubi.FileLocation $u0;
        org.ubi.SourceReader $r0, $r1, $r2, $r3;

        this := @this: SourceReader;

        $u0 = new org.ubi.FileLocation;

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = $r0.<org.ubi.SourceReader: java.lang.String fileName>;

        $r1 = (org.ubi.SourceReader) this;

        $stack3 = virtualinvoke $r1.<org.ubi.SourceReader: int getLineNumber()>();

        $r2 = (org.ubi.SourceReader) this;

        $stack4 = virtualinvoke $r2.<org.ubi.SourceReader: int getLinePos()>();

        $r3 = (org.ubi.SourceReader) this;

        $stack5 = $r3.<org.ubi.SourceReader: int index>;

        specialinvoke $u0.<org.ubi.FileLocation: void <init>(java.lang.String,int,int,int)>($stack2, $stack3, $stack4, $stack5);

        return $u0;
    }

    public org.ubi.FileLocation getLocation(org.ubi.Locatable)
    {
        SourceReader this;
        org.ubi.Locatable loc;
        int $stack2, $stack3;
        org.ubi.FileLocation $stack4;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        loc := @parameter0: org.ubi.Locatable;

        $stack2 = interfaceinvoke loc.<org.ubi.Locatable: int getStart()>();

        $stack3 = interfaceinvoke loc.<org.ubi.Locatable: int getLength()>();

        $r0 = (org.ubi.SourceReader) this;

        $stack4 = virtualinvoke $r0.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(int,int)>($stack2, $stack3);

        return $stack4;
    }

    public org.ubi.FileLocation getLocation(int, int)
    {
        SourceReader this;
        int mark, start, length;
        java.io.EOFException $stack7;
        org.ubi.FileLocation loc#2;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4;

        this := @this: SourceReader;

        start := @parameter0: int;

        length := @parameter1: int;

        $r0 = (org.ubi.SourceReader) this;

        mark = virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

        $r1 = (org.ubi.SourceReader) this;

        virtualinvoke $r1.<org.ubi.SourceReader: void reset(int)>(0);

     label1:
        $r2 = (org.ubi.SourceReader) this;

        virtualinvoke $r2.<org.ubi.SourceReader: void skip(int)>(start);

     label2:
        goto label4;

     label3:
        $stack7 := @caughtexception;

     label4:
        $r3 = (org.ubi.SourceReader) this;

        loc#2 = virtualinvoke $r3.<org.ubi.SourceReader: org.ubi.FileLocation getLocation()>();

        loc#2.<org.ubi.FileLocation: int length> = length;

        $r4 = (org.ubi.SourceReader) this;

        virtualinvoke $r4.<org.ubi.SourceReader: void reset(int)>(mark);

        return loc#2;

        catch java.io.EOFException from label1 to label2 with label3;
    }

    public boolean backMatches(char, boolean)
    {
        SourceReader this;
        int $stack3, $stack4, $stack5;
        char[] $stack6;
        char character, $stack7;
        boolean trueIfStartpos, $stack8;
        org.ubi.SourceReader $r0, $r1, $r2;

        this := @this: SourceReader;

        character := @parameter0: char;

        trueIfStartpos := @parameter1: boolean;

        $r0 = (org.ubi.SourceReader) this;

        $stack3 = $r0.<org.ubi.SourceReader: int index>;

        if $stack3 > 0 goto label1;

        return trueIfStartpos;

     label1:
        $r1 = (org.ubi.SourceReader) this;

        $stack6 = $r1.<org.ubi.SourceReader: char[] content>;

        $r2 = (org.ubi.SourceReader) this;

        $stack4 = $r2.<org.ubi.SourceReader: int index>;

        $stack5 = $stack4 - 1;

        $stack7 = $stack6[$stack5];

        if $stack7 != character goto label2;

        $stack8 = 1;

        goto label3;

     label2:
        $stack8 = 0;

     label3:
        return $stack8;
    }

    public int matches(java.util.List, boolean) throws java.io.EOFException
    {
        java.util.List candidates;
        java.util.Iterator l5;
        boolean $stack8, keepEnd, $stack11;
        java.lang.Object $stack9;
        java.lang.String candidate;
        SourceReader this;
        org.ubi.SourceReader$CaseSensibility $stack10;
        int match, count;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        candidates := @parameter0: java.util.List;

        keepEnd := @parameter1: boolean;

        match = -1;

        count = 0;

        l5 = interfaceinvoke candidates.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack8 = interfaceinvoke l5.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label3;

        $stack9 = interfaceinvoke l5.<java.util.Iterator: java.lang.Object next()>();

        candidate = (java.lang.String) $stack9;

        $stack10 = <org.ubi.SourceReader$CaseSensibility: org.ubi.SourceReader$CaseSensibility SENSITIVE>;

        $r0 = (org.ubi.SourceReader) this;

        $stack11 = virtualinvoke $r0.<org.ubi.SourceReader: boolean matches(java.lang.String,boolean,org.ubi.SourceReader$CaseSensibility)>(candidate, keepEnd, $stack10);

        if $stack11 == 0 goto label2;

        match = count;

        goto label3;

     label2:
        count = count + 1;

        goto label1;

     label3:
        return match;
    }

    public boolean matchesSpaced(java.lang.String, boolean) throws java.io.EOFException
    {
        SourceReader this;
        int mark;
        java.lang.String candidate;
        boolean $stack6, result, keepEnd, $stack8, $stack9;
        org.ubi.SourceReader $r0, $r1, $r2, $r3;

        this := @this: SourceReader;

        candidate := @parameter0: java.lang.String;

        keepEnd := @parameter1: boolean;

        $r0 = (org.ubi.SourceReader) this;

        mark = virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

        $r1 = (org.ubi.SourceReader) this;

        $stack6 = virtualinvoke $r1.<org.ubi.SourceReader: boolean matches(java.lang.String,boolean)>(candidate, 1);

        if $stack6 == 0 goto label1;

        $r2 = (org.ubi.SourceReader) this;

        $stack8 = virtualinvoke $r2.<org.ubi.SourceReader: boolean hasWhitespace(boolean)>(0);

        if $stack8 == 0 goto label1;

        $stack9 = 1;

        goto label2;

     label1:
        $stack9 = 0;

     label2:
        result = $stack9;

        if keepEnd != 0 goto label3;

        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void reset(int)>(mark);

     label3:
        return result;
    }

    public boolean matchesNonident(java.lang.String, boolean) throws java.io.EOFException
    {
        SourceReader this;
        int mark;
        java.lang.String candidate;
        char c;
        boolean keepEnd, $stack10, result, $stack12, $stack11;
        org.ubi.SourceReader $r0, $r1, $r2, $r3;

        this := @this: SourceReader;

        candidate := @parameter0: java.lang.String;

        keepEnd := @parameter1: boolean;

        $r0 = (org.ubi.SourceReader) this;

        mark = virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

        $r1 = (org.ubi.SourceReader) this;

        result = virtualinvoke $r1.<org.ubi.SourceReader: boolean matches(java.lang.String,boolean)>(candidate, 1);

        $r2 = (org.ubi.SourceReader) this;

        c = virtualinvoke $r2.<org.ubi.SourceReader: char peek()>();

        $stack12 = result;

        if c == 95 goto label1;

        $stack10 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c);

        if $stack10 != 0 goto label1;

        $stack11 = 1;

        goto label2;

     label1:
        $stack11 = 0;

     label2:
        result = $stack12 & $stack11;

        if keepEnd != 0 goto label3;

        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void reset(int)>(mark);

     label3:
        return result;
    }

    public boolean matches(java.lang.String, boolean) throws java.io.EOFException
    {
        SourceReader this;
        java.lang.String candidate;
        boolean keepEnd, $stack4;
        org.ubi.SourceReader$CaseSensibility $stack3;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        candidate := @parameter0: java.lang.String;

        keepEnd := @parameter1: boolean;

        $stack3 = <org.ubi.SourceReader$CaseSensibility: org.ubi.SourceReader$CaseSensibility SENSITIVE>;

        $r0 = (org.ubi.SourceReader) this;

        $stack4 = virtualinvoke $r0.<org.ubi.SourceReader: boolean matches(java.lang.String,boolean,org.ubi.SourceReader$CaseSensibility)>(candidate, keepEnd, $stack3);

        return $stack4;
    }

    public boolean matches(java.lang.String, boolean, org.ubi.SourceReader$CaseSensibility) throws java.io.EOFException
    {
        SourceReader this;
        java.lang.String candidate;
        int $stack9, i;
        boolean keepEnd, result;
        char c, c2, $stack18, $stack19;
        org.ubi.SourceReader$CaseSensibility caseMode, $stack16;
        org.ubi.SourceReader $r0, $r1, $r2;

        this := @this: SourceReader;

        candidate := @parameter0: java.lang.String;

        keepEnd := @parameter1: boolean;

        caseMode := @parameter2: org.ubi.SourceReader$CaseSensibility;

        $r0 = (org.ubi.SourceReader) this;

        virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

        i = 0;

        result = 1;

     label1:
        $stack9 = virtualinvoke candidate.<java.lang.String: int length()>();

        if i >= $stack9 goto label4;

        $r1 = (org.ubi.SourceReader) this;

        c = virtualinvoke $r1.<org.ubi.SourceReader: char read()>();

        c2 = virtualinvoke candidate.<java.lang.String: char charAt(int)>(i);

        if c2 == c goto label3;

        $stack16 = <org.ubi.SourceReader$CaseSensibility: org.ubi.SourceReader$CaseSensibility SENSITIVE>;

        if caseMode == $stack16 goto label2;

        $stack18 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c2);

        $stack19 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c);

        if $stack18 == $stack19 goto label3;

     label2:
        result = 0;

        goto label4;

     label3:
        i = i + 1;

        goto label1;

     label4:
        if result == 0 goto label5;

        if keepEnd != 0 goto label6;

     label5:
        $r2 = (org.ubi.SourceReader) this;

        virtualinvoke $r2.<org.ubi.SourceReader: void reset()>();

     label6:
        return result;
    }

    public boolean skipName() throws java.io.EOFException
    {
        SourceReader this;
        boolean $stack2, $stack5, $stack9, $stack3;
        char chr;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = virtualinvoke $r0.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack2 == 0 goto label1;

        $r1 = (org.ubi.SourceReader) this;

        chr = virtualinvoke $r1.<org.ubi.SourceReader: char read()>();

        $stack9 = staticinvoke <java.lang.Character: boolean isLetter(char)>(chr);

        if $stack9 != 0 goto label1;

        if chr == 95 goto label1;

        $r2 = (org.ubi.SourceReader) this;

        virtualinvoke $r2.<org.ubi.SourceReader: void rewind(int)>(1);

        return 0;

     label1:
        $r3 = (org.ubi.SourceReader) this;

        $stack3 = virtualinvoke $r3.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack3 == 0 goto label3;

        $r4 = (org.ubi.SourceReader) this;

        chr = virtualinvoke $r4.<org.ubi.SourceReader: char read()>();

        $stack5 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(chr);

        if $stack5 != 0 goto label2;

        if chr == 95 goto label2;

        if chr == 33 goto label2;

        $r5 = (org.ubi.SourceReader) this;

        virtualinvoke $r5.<org.ubi.SourceReader: void rewind(int)>(1);

        goto label3;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public java.lang.String readName() throws java.io.EOFException
    {
        SourceReader this;
        boolean $stack5, $stack10, $stack17, $stack6;
        java.lang.String $stack7;
        char chr;
        java.lang.StringBuilder $u0;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: SourceReader;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.ubi.SourceReader) this;

        virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

        $r1 = (org.ubi.SourceReader) this;

        $stack5 = virtualinvoke $r1.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack5 == 0 goto label3;

        $r2 = (org.ubi.SourceReader) this;

        chr = virtualinvoke $r2.<org.ubi.SourceReader: char read()>();

        $stack17 = staticinvoke <java.lang.Character: boolean isLetter(char)>(chr);

        if $stack17 != 0 goto label1;

        if chr != 95 goto label2;

     label1:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(chr);

        goto label3;

     label2:
        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void rewind(int)>(1);

        return "";

     label3:
        $r4 = (org.ubi.SourceReader) this;

        $stack6 = virtualinvoke $r4.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack6 == 0 goto label7;

        $r5 = (org.ubi.SourceReader) this;

        virtualinvoke $r5.<org.ubi.SourceReader: int mark()>();

        $r6 = (org.ubi.SourceReader) this;

        chr = virtualinvoke $r6.<org.ubi.SourceReader: char read()>();

        $stack10 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(chr);

        if $stack10 != 0 goto label4;

        if chr == 95 goto label4;

        if chr != 33 goto label5;

     label4:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(chr);

        goto label6;

     label5:
        $r7 = (org.ubi.SourceReader) this;

        virtualinvoke $r7.<org.ubi.SourceReader: void rewind(int)>(1);

        goto label7;

     label6:
        goto label3;

     label7:
        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    public java.lang.String readLine() throws java.io.EOFException
    {
        SourceReader this;
        java.lang.String $stack1;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack1 = virtualinvoke $r0.<org.ubi.SourceReader: java.lang.String readUntil(char,boolean)>(10, 1);

        return $stack1;
    }

    public void readSingleComment() throws java.io.EOFException
    {
        SourceReader this;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        virtualinvoke $r0.<org.ubi.SourceReader: java.lang.String readLine()>();

        return;
    }

    public void readMultiComment() throws java.io.EOFException
    {
        SourceReader this;
        org.ubi.SourceReader$CaseSensibility $stack1;
        boolean $stack2;
        org.ubi.SourceReader $r0, $r1;

        this := @this: SourceReader;

     label1:
        $stack1 = <org.ubi.SourceReader$CaseSensibility: org.ubi.SourceReader$CaseSensibility SENSITIVE>;

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = virtualinvoke $r0.<org.ubi.SourceReader: boolean matches(java.lang.String,boolean,org.ubi.SourceReader$CaseSensibility)>("*/", 1, $stack1);

        if $stack2 != 0 goto label2;

        $r1 = (org.ubi.SourceReader) this;

        virtualinvoke $r1.<org.ubi.SourceReader: char read()>();

        goto label1;

     label2:
        return;
    }

    public java.lang.String readMany(java.lang.String, java.lang.String, boolean) throws java.io.EOFException
    {
        SourceReader this;
        int myMark, $stack13, $stack14;
        boolean $stack9, keepEnd;
        java.lang.String $stack10, candidates, ignored;
        char c;
        java.lang.StringBuilder $u0;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4;

        this := @this: SourceReader;

        candidates := @parameter0: java.lang.String;

        ignored := @parameter1: java.lang.String;

        keepEnd := @parameter2: boolean;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.ubi.SourceReader) this;

        myMark = virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

     label1:
        $r1 = (org.ubi.SourceReader) this;

        $stack9 = virtualinvoke $r1.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack9 == 0 goto label5;

        $r2 = (org.ubi.SourceReader) this;

        c = virtualinvoke $r2.<org.ubi.SourceReader: char read()>();

        $stack13 = virtualinvoke candidates.<java.lang.String: int indexOf(int)>(c);

        if $stack13 == -1 goto label2;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c);

        goto label4;

     label2:
        $stack14 = virtualinvoke ignored.<java.lang.String: int indexOf(int)>(c);

        if $stack14 == -1 goto label3;

        goto label4;

     label3:
        if keepEnd == 0 goto label5;

        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void rewind(int)>(1);

        goto label5;

     label4:
        goto label1;

     label5:
        if keepEnd != 0 goto label6;

        $r4 = (org.ubi.SourceReader) this;

        virtualinvoke $r4.<org.ubi.SourceReader: void reset(int)>(myMark);

     label6:
        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;
    }

    public char readCharLiteral() throws java.io.EOFException, org.ubi.SyntaxError
    {
        SourceReader this;
        org.ubi.FileLocation $stack8, $stack15, $stack19;
        java.lang.String $stack9, $stack10, $stack16, $stack17;
        char c, c2;
        org.ubi.SyntaxError $u0, $u1, $u2;
        org.ubi.SourceReader $r0, $r1, $r2, $r4, $r5, $r7, $r8;
        java.lang.Throwable $r3, $r6, $r9;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

        $r1 = (org.ubi.SourceReader) this;

        c = virtualinvoke $r1.<org.ubi.SourceReader: char read()>();

        lookupswitch(c)
        {
            case 39: goto label01;
            case 92: goto label02;
            default: goto label13;
        };

     label01:
        $u0 = new org.ubi.SyntaxError;

        $r2 = (org.ubi.SourceReader) this;

        $stack19 = virtualinvoke $r2.<org.ubi.SourceReader: org.ubi.FileLocation getLocation()>();

        specialinvoke $u0.<org.ubi.SyntaxError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack19, "Empty char literal !");

        $r3 = (java.lang.Throwable) $u0;

        throw $r3;

     label02:
        $r4 = (org.ubi.SourceReader) this;

        c2 = virtualinvoke $r4.<org.ubi.SourceReader: char read()>();

        lookupswitch(c2)
        {
            case 39: goto label11;
            case 48: goto label04;
            case 92: goto label03;
            case 98: goto label08;
            case 102: goto label09;
            case 110: goto label05;
            case 114: goto label10;
            case 116: goto label06;
            case 118: goto label07;
            default: goto label12;
        };

     label03:
        c = 92;

        goto label13;

     label04:
        c = 0;

        goto label13;

     label05:
        c = 10;

        goto label13;

     label06:
        c = 9;

        goto label13;

     label07:
        c = 11;

        goto label13;

     label08:
        c = 8;

        goto label13;

     label09:
        c = 12;

        goto label13;

     label10:
        c = 13;

        goto label13;

     label11:
        c = 39;

        goto label13;

     label12:
        $u1 = new org.ubi.SyntaxError;

        $r5 = (org.ubi.SourceReader) this;

        $stack15 = virtualinvoke $r5.<org.ubi.SourceReader: org.ubi.FileLocation getLocation()>();

        $stack16 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(char)>(c);

        $stack17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid escape sequence : \u0001");

        specialinvoke $u1.<org.ubi.SyntaxError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack15, $stack17);

        $r6 = (java.lang.Throwable) $u1;

        throw $r6;

     label13:
        $r7 = (org.ubi.SourceReader) this;

        c2 = virtualinvoke $r7.<org.ubi.SourceReader: char read()>();

        if c2 == 39 goto label14;

        $u2 = new org.ubi.SyntaxError;

        $r8 = (org.ubi.SourceReader) this;

        $stack8 = virtualinvoke $r8.<org.ubi.SourceReader: org.ubi.FileLocation getLocation()>();

        $stack9 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(char)>(c2);

        $stack10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Char literal too long. Expected \', found \u0001");

        specialinvoke $u2.<org.ubi.SyntaxError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack8, $stack10);

        $r9 = (java.lang.Throwable) $u2;

        throw $r9;

     label14:
        return c;
    }

    public static char parseCharLiteral(java.lang.String) throws org.ubi.SyntaxError
    {
        java.lang.String input, $stack12, $stack13;
        char c2, c;
        int supposedLength, $stack6;
        org.ubi.SyntaxError $u0, $u1, $u2;
        java.lang.Throwable $r0, $r1, $r2;

        input := @parameter0: java.lang.String;

        c = virtualinvoke input.<java.lang.String: char charAt(int)>(0);

        supposedLength = 1;

        lookupswitch(c)
        {
            case 39: goto label01;
            case 92: goto label02;
            default: goto label13;
        };

     label01:
        $u0 = new org.ubi.SyntaxError;

        specialinvoke $u0.<org.ubi.SyntaxError: void <init>(org.ubi.FileLocation,java.lang.String)>(null, "Empty char literal !");

        $r0 = (java.lang.Throwable) $u0;

        throw $r0;

     label02:
        supposedLength = 1 + 1;

        c2 = virtualinvoke input.<java.lang.String: char charAt(int)>(1);

        lookupswitch(c2)
        {
            case 39: goto label11;
            case 48: goto label04;
            case 92: goto label03;
            case 98: goto label08;
            case 102: goto label09;
            case 110: goto label05;
            case 114: goto label10;
            case 116: goto label06;
            case 118: goto label07;
            default: goto label12;
        };

     label03:
        c = 92;

        goto label13;

     label04:
        c = 0;

        goto label13;

     label05:
        c = 10;

        goto label13;

     label06:
        c = 9;

        goto label13;

     label07:
        c = 11;

        goto label13;

     label08:
        c = 8;

        goto label13;

     label09:
        c = 12;

        goto label13;

     label10:
        c = 13;

        goto label13;

     label11:
        c = 39;

        goto label13;

     label12:
        $u1 = new org.ubi.SyntaxError;

        $stack12 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(char)>(c);

        $stack13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid escape sequence : \u0001");

        specialinvoke $u1.<org.ubi.SyntaxError: void <init>(org.ubi.FileLocation,java.lang.String)>(null, $stack13);

        $r1 = (java.lang.Throwable) $u1;

        throw $r1;

     label13:
        $stack6 = virtualinvoke input.<java.lang.String: int length()>();

        if $stack6 <= supposedLength goto label14;

        $u2 = new org.ubi.SyntaxError;

        specialinvoke $u2.<org.ubi.SyntaxError: void <init>(org.ubi.FileLocation,java.lang.String)>(null, "Char literal too long.");

        $r2 = (java.lang.Throwable) $u2;

        throw $r2;

     label14:
        return c;
    }

    public static java.lang.String parseStringLiteral(java.lang.String)
    {
        java.lang.StringBuilder $stack5;
        java.lang.String string, $stack7;
        int $stack8, $stack10, index, $stack6;
        char c, c2;

        string := @parameter0: java.lang.String;

        index = 0;

        $stack5 = new java.lang.StringBuilder;

        specialinvoke $stack5.<java.lang.StringBuilder: void <init>()>();

     label01:
        $stack6 = virtualinvoke string.<java.lang.String: int length()>();

        if index >= $stack6 goto label12;

        $stack8 = index;

        index = index + 1;

        c = virtualinvoke string.<java.lang.String: char charAt(int)>($stack8);

        lookupswitch(c)
        {
            case 92: goto label02;
            default: goto label11;
        };

     label02:
        $stack10 = index;

        index = index + 1;

        c2 = virtualinvoke string.<java.lang.String: char charAt(int)>($stack10);

        lookupswitch(c2)
        {
            case 48: goto label04;
            case 92: goto label03;
            case 98: goto label07;
            case 102: goto label08;
            case 110: goto label05;
            case 114: goto label09;
            case 116: goto label06;
            default: goto label10;
        };

     label03:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        goto label01;

     label04:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        goto label01;

     label05:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label01;

     label06:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        goto label01;

     label07:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8);

        goto label01;

     label08:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(12);

        goto label01;

     label09:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        goto label01;

     label10:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

        goto label01;

     label11:
        virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c);

        goto label01;

     label12:
        $stack7 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    public java.lang.String readStringLiteral() throws java.io.EOFException
    {
        SourceReader this;
        java.lang.String $stack1;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack1 = virtualinvoke $r0.<org.ubi.SourceReader: java.lang.String readStringLiteral(char)>(34);

        return $stack1;
    }

    public java.lang.String readStringLiteral(char) throws java.io.EOFException
    {
        SourceReader this;
        char c, c2, delimiter;
        java.lang.String $stack21;
        java.lang.StringBuilder $u0;
        org.ubi.SourceReader $r0, $r1, $r2;

        this := @this: SourceReader;

        delimiter := @parameter0: char;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

     label01:
        $r0 = (org.ubi.SourceReader) this;

        virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

        $r1 = (org.ubi.SourceReader) this;

        c = virtualinvoke $r1.<org.ubi.SourceReader: char read()>();

        lookupswitch(c)
        {
            case 92: goto label02;
            default: goto label11;
        };

     label02:
        $r2 = (org.ubi.SourceReader) this;

        c2 = virtualinvoke $r2.<org.ubi.SourceReader: char read()>();

        lookupswitch(c2)
        {
            case 48: goto label04;
            case 92: goto label03;
            case 98: goto label07;
            case 102: goto label08;
            case 110: goto label05;
            case 114: goto label09;
            case 116: goto label06;
            default: goto label10;
        };

     label03:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);

        goto label01;

     label04:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        goto label01;

     label05:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        goto label01;

     label06:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        goto label01;

     label07:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(8);

        goto label01;

     label08:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(12);

        goto label01;

     label09:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13);

        goto label01;

     label10:
        if c2 != delimiter goto label01;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(delimiter);

        goto label01;

     label11:
        if c != delimiter goto label12;

        goto label13;

     label12:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c);

        goto label01;

     label13:
        $stack21 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack21;
    }

    public boolean hasWhitespace(boolean) throws java.io.EOFException
    {
        SourceReader this;
        int myMark;
        boolean $stack6, skip, $stack9, has;
        char c;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4;

        this := @this: SourceReader;

        skip := @parameter0: boolean;

        has = 0;

        $r0 = (org.ubi.SourceReader) this;

        myMark = virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

     label1:
        $r1 = (org.ubi.SourceReader) this;

        $stack6 = virtualinvoke $r1.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack6 == 0 goto label4;

        $r2 = (org.ubi.SourceReader) this;

        c = virtualinvoke $r2.<org.ubi.SourceReader: char read()>();

        $stack9 = staticinvoke <java.lang.Character: boolean isWhitespace(int)>(c);

        if $stack9 == 0 goto label2;

        has = 1;

        goto label3;

     label2:
        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void rewind(int)>(1);

        goto label4;

     label3:
        goto label1;

     label4:
        if skip != 0 goto label5;

        $r4 = (org.ubi.SourceReader) this;

        virtualinvoke $r4.<org.ubi.SourceReader: void reset(int)>(myMark);

     label5:
        return has;
    }

    public boolean skipWhitespace() throws java.io.EOFException
    {
        SourceReader this;
        boolean $stack3, $stack6;
        int myMark;
        char c;
        org.ubi.SourceReader $r0, $r1, $r2, $r3;

        this := @this: SourceReader;

     label1:
        $r0 = (org.ubi.SourceReader) this;

        $stack3 = virtualinvoke $r0.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack3 == 0 goto label3;

        $r1 = (org.ubi.SourceReader) this;

        myMark = virtualinvoke $r1.<org.ubi.SourceReader: int mark()>();

        $r2 = (org.ubi.SourceReader) this;

        c = virtualinvoke $r2.<org.ubi.SourceReader: char read()>();

        $stack6 = staticinvoke <java.lang.Character: boolean isWhitespace(int)>(c);

        if $stack6 != 0 goto label2;

        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void reset(int)>(myMark);

        goto label3;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public boolean skipChars(java.lang.String) throws java.io.EOFException
    {
        SourceReader this;
        boolean $stack4;
        int myMark, $stack7;
        char c;
        java.lang.String chars;
        org.ubi.SourceReader $r0, $r1, $r2, $r3;

        this := @this: SourceReader;

        chars := @parameter0: java.lang.String;

     label1:
        $r0 = (org.ubi.SourceReader) this;

        $stack4 = virtualinvoke $r0.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack4 == 0 goto label3;

        $r1 = (org.ubi.SourceReader) this;

        myMark = virtualinvoke $r1.<org.ubi.SourceReader: int mark()>();

        $r2 = (org.ubi.SourceReader) this;

        c = virtualinvoke $r2.<org.ubi.SourceReader: char read()>();

        $stack7 = virtualinvoke chars.<java.lang.String: int indexOf(int)>(c);

        if $stack7 != -1 goto label2;

        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void reset(int)>(myMark);

        goto label3;

     label2:
        goto label1;

     label3:
        return 1;
    }

    public void skipLine() throws java.io.EOFException
    {
        SourceReader this;
        char $stack1;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

     label1:
        $r0 = (org.ubi.SourceReader) this;

        $stack1 = virtualinvoke $r0.<org.ubi.SourceReader: char read()>();

        if $stack1 == 10 goto label2;

        goto label1;

     label2:
        return;
    }

    public java.lang.String readUntil(char) throws java.io.EOFException
    {
        SourceReader this;
        char chr;
        java.lang.String $stack2;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        chr := @parameter0: char;

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = virtualinvoke $r0.<org.ubi.SourceReader: java.lang.String readUntil(char,boolean)>(chr, 0);

        return $stack2;
    }

    public java.lang.String readUntil(char, boolean) throws java.io.EOFException
    {
        SourceReader this;
        boolean $stack6, keepEnd;
        char chr, $stack12, chrRead;
        int $stack10, $stack11;
        java.lang.String $stack7;
        java.lang.StringBuilder $u0;
        org.ubi.SourceReader $r0, $r1, $r2, $r3;

        this := @this: SourceReader;

        chr := @parameter0: char;

        keepEnd := @parameter1: boolean;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        chrRead = 0;

     label1:
        $r0 = (org.ubi.SourceReader) this;

        $stack6 = virtualinvoke $r0.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack6 == 0 goto label2;

        $r1 = (org.ubi.SourceReader) this;

        $stack12 = virtualinvoke $r1.<org.ubi.SourceReader: char read()>();

        chrRead = $stack12;

        if $stack12 == chr goto label2;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack12);

        goto label1;

     label2:
        if keepEnd != 0 goto label3;

        $r2 = (org.ubi.SourceReader) this;

        $stack10 = $r2.<org.ubi.SourceReader: int index>;

        $stack11 = $stack10 - 1;

        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void reset(int)>($stack11);

        goto label4;

     label3:
        if chrRead == 0 goto label4;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(chr);

     label4:
        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack7;
    }

    public java.lang.String readUntil(java.lang.String[]) throws java.io.EOFException
    {
        SourceReader this;
        java.lang.String[] matches;
        java.lang.String $stack2;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        matches := @parameter0: java.lang.String[];

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = virtualinvoke $r0.<org.ubi.SourceReader: java.lang.String readUntil(java.lang.String[],boolean)>(matches, 0);

        return $stack2;
    }

    public java.lang.String readUntil(java.lang.String[], boolean) throws java.io.EOFException
    {
        SourceReader this;
        boolean $stack9, keepEnd, $stack15;
        java.lang.String $stack10, match, $stack18;
        java.lang.String[] matches;
        int l5, l6;
        char $stack11;
        org.ubi.SourceReader$CaseSensibility $stack14;
        java.io.EOFException $stack21;
        java.lang.StringBuilder $u0;
        org.ubi.SourceReader $r0, $r1, $r2;

        this := @this: SourceReader;

        matches := @parameter0: java.lang.String[];

        keepEnd := @parameter1: boolean;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r0 = (org.ubi.SourceReader) this;

        $stack9 = virtualinvoke $r0.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack9 == 0 goto label7;

        l5 = lengthof matches;

        l6 = 0;

     label2:
        if l6 >= l5 goto label6;

        match = matches[l6];

        $stack14 = <org.ubi.SourceReader$CaseSensibility: org.ubi.SourceReader$CaseSensibility SENSITIVE>;

        $r1 = (org.ubi.SourceReader) this;

        $stack15 = virtualinvoke $r1.<org.ubi.SourceReader: boolean matches(java.lang.String,boolean,org.ubi.SourceReader$CaseSensibility)>(match, keepEnd, $stack14);

        if $stack15 == 0 goto label5;

        if keepEnd == 0 goto label3;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(match);

     label3:
        $stack18 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        return $stack18;

     label5:
        l6 = l6 + 1;

        goto label2;

     label6:
        $r2 = (org.ubi.SourceReader) this;

        $stack11 = virtualinvoke $r2.<org.ubi.SourceReader: char read()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack11);

        goto label1;

     label7:
        goto label9;

     label8:
        $stack21 := @caughtexception;

     label9:
        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;

        catch java.io.EOFException from label1 to label4 with label8;
        catch java.io.EOFException from label5 to label7 with label8;
    }

    public java.lang.String readUntilEOF()
    {
        SourceReader this;
        boolean $stack4;
        java.lang.String $stack5;
        char $stack6;
        java.io.EOFException $stack9;
        java.lang.StringBuilder $u0;
        org.ubi.SourceReader $r0, $r1;

        this := @this: SourceReader;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r0 = (org.ubi.SourceReader) this;

        $stack4 = virtualinvoke $r0.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack4 == 0 goto label2;

        $r1 = (org.ubi.SourceReader) this;

        $stack6 = virtualinvoke $r1.<org.ubi.SourceReader: char read()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($stack6);

        goto label1;

     label2:
        goto label4;

     label3:
        $stack9 := @caughtexception;

     label4:
        $stack5 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack5;

        catch java.io.EOFException from label1 to label2 with label3;
    }

    public java.lang.String readBlock(char, char) throws org.ubi.SyntaxError, java.io.EOFException
    {
        SourceReader this;
        char startChr, endChr;
        java.lang.String $stack3;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        startChr := @parameter0: char;

        endChr := @parameter1: char;

        $r0 = (org.ubi.SourceReader) this;

        $stack3 = virtualinvoke $r0.<org.ubi.SourceReader: java.lang.String readBlock(char,char,char)>(startChr, endChr, 0);

        return $stack3;
    }

    public java.lang.String readBlock(char, char, char) throws org.ubi.SyntaxError, java.io.EOFException
    {
        SourceReader this;
        char $stack11, startChr, escapeChar, endChr, chr;
        java.lang.String $stack20, $stack27, $stack28, $stack29, $stack30;
        org.ubi.FileLocation $stack26;
        java.io.EOFException $stack31;
        int count;
        org.ubi.SyntaxError $u0;
        java.lang.StringBuilder $u1;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4, $r6, $r7;
        java.lang.Throwable $r5;

        this := @this: SourceReader;

        startChr := @parameter0: char;

        endChr := @parameter1: char;

        escapeChar := @parameter2: char;

        $r0 = (org.ubi.SourceReader) this;

        virtualinvoke $r0.<org.ubi.SourceReader: boolean skipWhitespace()>();

        $r1 = (org.ubi.SourceReader) this;

        virtualinvoke $r1.<org.ubi.SourceReader: int mark()>();

        $r2 = (org.ubi.SourceReader) this;

        $stack11 = virtualinvoke $r2.<org.ubi.SourceReader: char read()>();

        if $stack11 == startChr goto label1;

        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void reset()>();

        $u0 = new org.ubi.SyntaxError;

        $r4 = (org.ubi.SourceReader) this;

        $stack26 = virtualinvoke $r4.<org.ubi.SourceReader: org.ubi.FileLocation getLocation()>();

        $stack27 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(char)>(startChr);

        $stack28 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(char)>(endChr);

        $stack29 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(char)>($stack11);

        $stack30 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($stack27, $stack28, $stack29) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to read block delimited by \u0001\u0001, but \u0001 found instead.");

        specialinvoke $u0.<org.ubi.SyntaxError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack26, $stack30);

        $r5 = (java.lang.Throwable) $u0;

        throw $r5;

     label1:
        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        count = 1;

     label2:
        $r6 = (org.ubi.SourceReader) this;

        chr = virtualinvoke $r6.<org.ubi.SourceReader: char read()>();

        if chr != escapeChar goto label3;

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(chr);

        $r7 = (org.ubi.SourceReader) this;

        chr = virtualinvoke $r7.<org.ubi.SourceReader: char read()>();

     label3:
        if chr != endChr goto label4;

        count = count + -1;

        if count > 0 goto label5;

        goto label6;

     label4:
        if chr != startChr goto label5;

        count = count + 1;

     label5:
        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(chr);

        goto label2;

     label6:
        goto label8;

     label7:
        $stack31 := @caughtexception;

     label8:
        $stack20 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack20;

        catch java.io.EOFException from label2 to label6 with label7;
    }

    public java.lang.String readBlock(java.lang.String, java.lang.String, char) throws org.ubi.SyntaxError, java.io.EOFException
    {
        SourceReader this;
        java.lang.String start, end, $stack23, $stack27, $stack28, $stack29, $stack30;
        boolean $stack10, $stack13, $stack12;
        char escapeChar, c, chr;
        org.ubi.FileLocation $stack26;
        java.io.EOFException $stack31;
        int count;
        org.ubi.SyntaxError $u0;
        java.lang.StringBuilder $u1;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10;
        java.lang.Throwable $r6;

        this := @this: SourceReader;

        start := @parameter0: java.lang.String;

        end := @parameter1: java.lang.String;

        escapeChar := @parameter2: char;

        $r0 = (org.ubi.SourceReader) this;

        virtualinvoke $r0.<org.ubi.SourceReader: boolean skipWhitespace()>();

        $r1 = (org.ubi.SourceReader) this;

        virtualinvoke $r1.<org.ubi.SourceReader: int mark()>();

        $r2 = (org.ubi.SourceReader) this;

        $stack10 = virtualinvoke $r2.<org.ubi.SourceReader: boolean matches(java.lang.String,boolean)>(start, 1);

        if $stack10 != 0 goto label1;

        $r3 = (org.ubi.SourceReader) this;

        c = virtualinvoke $r3.<org.ubi.SourceReader: char read()>();

        $r4 = (org.ubi.SourceReader) this;

        virtualinvoke $r4.<org.ubi.SourceReader: void reset()>();

        $u0 = new org.ubi.SyntaxError;

        $r5 = (org.ubi.SourceReader) this;

        $stack26 = virtualinvoke $r5.<org.ubi.SourceReader: org.ubi.FileLocation getLocation()>();

        $stack27 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(java.lang.String)>(start);

        $stack28 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(java.lang.String)>(end);

        $stack29 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(char)>(c);

        $stack30 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($stack27, $stack28, $stack29) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to read block delimited by \u0001\u0001, but \u0001 found instead.");

        specialinvoke $u0.<org.ubi.SyntaxError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack26, $stack30);

        $r6 = (java.lang.Throwable) $u0;

        throw $r6;

     label1:
        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        count = 1;

     label2:
        $r7 = (org.ubi.SourceReader) this;

        $stack12 = virtualinvoke $r7.<org.ubi.SourceReader: boolean matches(java.lang.String,boolean)>(end, 1);

        if $stack12 == 0 goto label3;

        count = count + -1;

        if count > 0 goto label2;

        goto label6;

     label3:
        $r8 = (org.ubi.SourceReader) this;

        $stack13 = virtualinvoke $r8.<org.ubi.SourceReader: boolean matches(java.lang.String,boolean)>(start, 1);

        if $stack13 == 0 goto label4;

        count = count + 1;

        goto label2;

     label4:
        $r9 = (org.ubi.SourceReader) this;

        chr = virtualinvoke $r9.<org.ubi.SourceReader: char read()>();

        if chr != escapeChar goto label5;

        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(chr);

        $r10 = (org.ubi.SourceReader) this;

        chr = virtualinvoke $r10.<org.ubi.SourceReader: char read()>();

     label5:
        virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(chr);

        goto label2;

     label6:
        goto label8;

     label7:
        $stack31 := @caughtexception;

     label8:
        $stack23 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack23;

        catch java.io.EOFException from label2 to label6 with label7;
    }

    public void err(java.lang.String) throws org.ubi.SyntaxError
    {
        SourceReader this;
        org.ubi.FileLocation $stack3;
        java.lang.String msg;
        org.ubi.SyntaxError $u0;
        org.ubi.SourceReader $r0;
        java.lang.Throwable $r1;

        this := @this: SourceReader;

        msg := @parameter0: java.lang.String;

        $u0 = new org.ubi.SyntaxError;

        $r0 = (org.ubi.SourceReader) this;

        $stack3 = virtualinvoke $r0.<org.ubi.SourceReader: org.ubi.FileLocation getLocation()>();

        specialinvoke $u0.<org.ubi.SyntaxError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack3, msg);

        $r1 = (java.lang.Throwable) $u0;

        throw $r1;
    }

    public static java.lang.String spelled(char)
    {
        char character;
        java.lang.String $stack1;

        character := @parameter0: char;

        lookupswitch(character)
        {
            case 0: goto label07;
            case 9: goto label02;
            case 10: goto label06;
            case 11: goto label04;
            case 12: goto label03;
            case 13: goto label05;
            case 34: goto label01;
            case 39: goto label08;
            case 92: goto label09;
            default: goto label10;
        };

     label01:
        return "\\\"";

     label02:
        return "\\t";

     label03:
        return "\\f";

     label04:
        return "\\v";

     label05:
        return "\\r";

     label06:
        return "\\n";

     label07:
        return "\\0";

     label08:
        return "\\\'";

     label09:
        return "\\\\";

     label10:
        $stack1 = staticinvoke <java.lang.Character: java.lang.String toString(char)>(character);

        return $stack1;
    }

    public static void spelled(char, java.lang.Appendable) throws java.io.IOException
    {
        char character;
        java.lang.Appendable output;

        character := @parameter0: char;

        output := @parameter1: java.lang.Appendable;

        lookupswitch(character)
        {
            case 0: goto label08;
            case 8: goto label04;
            case 9: goto label02;
            case 10: goto label07;
            case 11: goto label05;
            case 12: goto label03;
            case 13: goto label06;
            case 34: goto label01;
            case 39: goto label09;
            case 92: goto label10;
            default: goto label11;
        };

     label01:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\"");

        return;

     label02:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\t");

        return;

     label03:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\f");

        return;

     label04:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\b");

        return;

     label05:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\v");

        return;

     label06:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\r");

        return;

     label07:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\n");

        return;

     label08:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\0");

        return;

     label09:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\\'");

        return;

     label10:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\");

        return;

     label11:
        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(char)>(character);

        return;
    }

    public static java.lang.String spelled(java.lang.String)
    {
        java.lang.StringBuilder $stack3;
        java.lang.String str, $stack4;
        java.io.IOException $stack5;
        java.lang.Error $stack6;

        str := @parameter0: java.lang.String;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

     label1:
        staticinvoke <org.ubi.SourceReader: void spelled(java.lang.String,java.lang.Appendable)>(str, $stack3);

     label2:
        goto label4;

     label3:
        $stack5 := @caughtexception;

        $stack6 = new java.lang.Error;

        specialinvoke $stack6.<java.lang.Error: void <init>(java.lang.Throwable)>($stack5);

        throw $stack6;

     label4:
        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void spelled(java.lang.String, java.lang.Appendable) throws java.io.IOException
    {
        java.lang.String str;
        java.lang.Appendable output;

        str := @parameter0: java.lang.String;

        output := @parameter1: java.lang.Appendable;

        staticinvoke <org.ubi.SourceReader: void spelled(java.lang.String,java.lang.Appendable,boolean)>(str, output, 0);

        return;
    }

    public static void spelled(java.lang.String, java.lang.Appendable, boolean) throws java.io.IOException
    {
        java.lang.String str;
        int length, i;
        char c;
        boolean doBackslashes;
        java.lang.Appendable output;

        str := @parameter0: java.lang.String;

        output := @parameter1: java.lang.Appendable;

        doBackslashes := @parameter2: boolean;

        length = virtualinvoke str.<java.lang.String: int length()>();

        i = 0;

     label1:
        if i >= length goto label4;

        c = virtualinvoke str.<java.lang.String: char charAt(int)>(i);

        if doBackslashes == 0 goto label2;

        if c != 92 goto label2;

        interfaceinvoke output.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>("\\\\");

        goto label3;

     label2:
        staticinvoke <org.ubi.SourceReader: void spelled(char,java.lang.Appendable)>(c, output);

     label3:
        i = i + 1;

        goto label1;

     label4:
        return;
    }

    public char[] getContent()
    {
        SourceReader this;
        char[] $stack1;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack1 = $r0.<org.ubi.SourceReader: char[] content>;

        return $stack1;
    }

    public boolean startToken(org.ubi.Token)
    {
        org.ubi.Token token;
        SourceReader this;
        int $stack2;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        token := @parameter0: org.ubi.Token;

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = $r0.<org.ubi.SourceReader: int index>;

        token.<org.ubi.Token: int start> = $stack2;

        return 1;
    }

    public boolean endToken(org.ubi.Token)
    {
        org.ubi.Token token;
        SourceReader this;
        int $stack2, $stack3, $stack4;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        token := @parameter0: org.ubi.Token;

        $r0 = (org.ubi.SourceReader) this;

        $stack3 = $r0.<org.ubi.SourceReader: int index>;

        $stack2 = token.<org.ubi.Token: int start>;

        $stack4 = $stack3 - $stack2;

        token.<org.ubi.Token: int length> = $stack4;

        return 1;
    }

    public java.lang.String getLine(int) throws java.io.IOException
    {
        SourceReader this;
        int mark, $stack6, lineNumber, $stack14, i;
        java.util.ArrayList $stack5, $stack11;
        java.lang.Object $stack12;
        java.lang.Integer $stack13;
        java.lang.String i#2;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: SourceReader;

        lineNumber := @parameter0: int;

        $r0 = (org.ubi.SourceReader) this;

        mark = virtualinvoke $r0.<org.ubi.SourceReader: int mark()>();

        $r1 = (org.ubi.SourceReader) this;

        $stack5 = $r1.<org.ubi.SourceReader: java.util.ArrayList newlineIndices>;

        $stack6 = virtualinvoke $stack5.<java.util.ArrayList: int size()>();

        if $stack6 <= lineNumber goto label1;

        $r2 = (org.ubi.SourceReader) this;

        $stack11 = $r2.<org.ubi.SourceReader: java.util.ArrayList newlineIndices>;

        $stack12 = virtualinvoke $stack11.<java.util.ArrayList: java.lang.Object get(int)>(lineNumber);

        $stack13 = (java.lang.Integer) $stack12;

        $stack14 = virtualinvoke $stack13.<java.lang.Integer: int intValue()>();

        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void reset(int)>($stack14);

        goto label3;

     label1:
        $r4 = (org.ubi.SourceReader) this;

        virtualinvoke $r4.<org.ubi.SourceReader: void reset(int)>(0);

        i = 1;

     label2:
        if i >= lineNumber goto label3;

        $r5 = (org.ubi.SourceReader) this;

        virtualinvoke $r5.<org.ubi.SourceReader: java.lang.String readLine()>();

        i = i + 1;

        goto label2;

     label3:
        $r6 = (org.ubi.SourceReader) this;

        i#2 = virtualinvoke $r6.<org.ubi.SourceReader: java.lang.String readLine()>();

        $r7 = (org.ubi.SourceReader) this;

        virtualinvoke $r7.<org.ubi.SourceReader: void reset(int)>(mark);

        return i#2;
    }

    public java.lang.String getSlice(int, int)
    {
        SourceReader this;
        int start, length;
        char[] $stack4;
        java.lang.String $u0;
        org.ubi.SourceReader $r0;

        this := @this: SourceReader;

        start := @parameter0: int;

        length := @parameter1: int;

        $u0 = new java.lang.String;

        $r0 = (org.ubi.SourceReader) this;

        $stack4 = $r0.<org.ubi.SourceReader: char[] content>;

        specialinvoke $u0.<java.lang.String: void <init>(char[],int,int)>($stack4, start, length);

        return $u0;
    }

    public boolean readExponent() throws java.io.IOException
    {
        SourceReader this;
        char $stack2, $stack4, $stack8, $stack12, $stack5;
        int expMark;
        boolean $stack6;
        org.ubi.SourceReader $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: SourceReader;

        $r0 = (org.ubi.SourceReader) this;

        $stack2 = virtualinvoke $r0.<org.ubi.SourceReader: char peek()>();

        if $stack2 == 101 goto label1;

        $r1 = (org.ubi.SourceReader) this;

        $stack12 = virtualinvoke $r1.<org.ubi.SourceReader: char peek()>();

        if $stack12 != 69 goto label5;

     label1:
        $r2 = (org.ubi.SourceReader) this;

        expMark = virtualinvoke $r2.<org.ubi.SourceReader: int mark()>();

        $r3 = (org.ubi.SourceReader) this;

        virtualinvoke $r3.<org.ubi.SourceReader: void skip(int)>(1);

        $r4 = (org.ubi.SourceReader) this;

        $stack4 = virtualinvoke $r4.<org.ubi.SourceReader: char peek()>();

        if $stack4 == 43 goto label2;

        $r5 = (org.ubi.SourceReader) this;

        $stack8 = virtualinvoke $r5.<org.ubi.SourceReader: char peek()>();

        if $stack8 != 45 goto label3;

     label2:
        $r6 = (org.ubi.SourceReader) this;

        virtualinvoke $r6.<org.ubi.SourceReader: void skip(int)>(1);

     label3:
        $r7 = (org.ubi.SourceReader) this;

        $stack5 = virtualinvoke $r7.<org.ubi.SourceReader: char peek()>();

        $stack6 = staticinvoke <java.lang.Character: boolean isDigit(char)>($stack5);

        if $stack6 == 0 goto label4;

        $r8 = (org.ubi.SourceReader) this;

        virtualinvoke $r8.<org.ubi.SourceReader: void skip(int)>(1);

        $r9 = (org.ubi.SourceReader) this;

        virtualinvoke $r9.<org.ubi.SourceReader: java.lang.String readMany(java.lang.String,java.lang.String,boolean)>("0123456789", "_", 1);

        return 1;

     label4:
        $r10 = (org.ubi.SourceReader) this;

        virtualinvoke $r10.<org.ubi.SourceReader: void reset(int)>(expMark);

     label5:
        return 0;
    }
}
