public class StringLiteral extends org.ooc.frontend.model.Literal
{
    protected java.lang.String value;
    public static org.ooc.frontend.model.Type type;

    public void <init>(java.lang.String, org.ooc.frontend.model.tokens.Token)
    {
        StringLiteral this;
        org.ooc.frontend.model.tokens.Token startToken;
        java.lang.String value;
        org.ooc.frontend.model.StringLiteral $r0;

        this := @this: StringLiteral;

        value := @parameter0: java.lang.String;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Literal: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.StringLiteral) this;

        $r0.<org.ooc.frontend.model.StringLiteral: java.lang.String value> = value;

        return;
    }

    public org.ooc.frontend.model.Type getType()
    {
        org.ooc.frontend.model.Type $stack1;
        StringLiteral this;

        this := @this: StringLiteral;

        $stack1 = <org.ooc.frontend.model.StringLiteral: org.ooc.frontend.model.Type type>;

        return $stack1;
    }

    public java.lang.String getValue()
    {
        StringLiteral this;
        java.lang.String $stack1;
        org.ooc.frontend.model.StringLiteral $r0;

        this := @this: StringLiteral;

        $r0 = (org.ooc.frontend.model.StringLiteral) this;

        $stack1 = $r0.<org.ooc.frontend.model.StringLiteral: java.lang.String value>;

        return $stack1;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        StringLiteral this;
        org.ooc.frontend.model.StringLiteral $r0;

        this := @this: StringLiteral;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.StringLiteral) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.StringLiteral)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        StringLiteral this;

        this := @this: StringLiteral;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.Type $stack2;
        StringLiteral this;

        this := @this: StringLiteral;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $stack2 = <org.ooc.frontend.model.StringLiteral: org.ooc.frontend.model.Type type>;

        virtualinvoke $stack2.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        StringLiteral this;
        org.ooc.frontend.model.Node oldie, kiddo;

        this := @this: StringLiteral;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        return 0;
    }

    public java.lang.String toString()
    {
        StringLiteral this;
        java.lang.String $stack1, $stack2;
        org.ooc.frontend.model.StringLiteral $r0;

        this := @this: StringLiteral;

        $r0 = (org.ooc.frontend.model.StringLiteral) this;

        $stack1 = $r0.<org.ooc.frontend.model.StringLiteral: java.lang.String value>;

        $stack2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\"\u0001\"");

        return $stack2;
    }

    static void <clinit>()
    {
        org.ooc.frontend.model.Type $stack0;
        org.ooc.frontend.model.tokens.Token $stack1;

        $stack0 = new org.ooc.frontend.model.Type;

        $stack1 = <org.ooc.frontend.model.tokens.Token: org.ooc.frontend.model.tokens.Token defaultToken>;

        specialinvoke $stack0.<org.ooc.frontend.model.Type: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>("String", $stack1);

        <org.ooc.frontend.model.StringLiteral: org.ooc.frontend.model.Type type> = $stack0;

        return;
    }
}
