final class StringSearchModelInterpolator$InterpolateObjectAction$ListField extends org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$CacheField
{

    void <init>(java.lang.reflect.Field)
    {
        StringSearchModelInterpolator$InterpolateObjectAction$ListField this;
        java.lang.reflect.Field field;

        this := @this: StringSearchModelInterpolator$InterpolateObjectAction$ListField;

        field := @parameter0: java.lang.reflect.Field;

        specialinvoke this.<org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$CacheField: void <init>(java.lang.reflect.Field)>(field);

        return;
    }

    void doInterpolate(java.lang.Object, org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction) throws java.lang.IllegalAccessException
    {
        StringSearchModelInterpolator$InterpolateObjectAction$ListField this;
        java.lang.Object target, $stack10, value;
        java.lang.reflect.Field $stack9;
        java.util.List c;
        int size, i;
        java.lang.Class $stack16, $stack17;
        boolean $stack18, $stack23;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction ctx;
        java.util.LinkedList $stack19;
        java.lang.String $stack21, interpolated;
        java.lang.UnsupportedOperationException $stack25;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$ListField $r0;

        this := @this: StringSearchModelInterpolator$InterpolateObjectAction$ListField;

        target := @parameter0: java.lang.Object;

        ctx := @parameter1: org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction;

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$ListField) this;

        $stack9 = $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$ListField: java.lang.reflect.Field field>;

        $stack10 = virtualinvoke $stack9.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(target);

        c = (java.util.List) $stack10;

        if c != null goto label01;

        return;

     label01:
        i = 0;

        size = interfaceinvoke c.<java.util.List: int size()>();

     label02:
        if i >= size goto label10;

        value = interfaceinvoke c.<java.util.List: java.lang.Object get(int)>(i);

        if value == null goto label09;

        $stack16 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>();

        if class "Ljava/lang/String;" != $stack16 goto label07;

        $stack21 = (java.lang.String) value;

        interpolated = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction: java.lang.String access$300(org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction,java.lang.String)>(ctx, $stack21);

        $stack23 = virtualinvoke interpolated.<java.lang.String: boolean equals(java.lang.Object)>(value);

        if $stack23 != 0 goto label06;

     label03:
        interfaceinvoke c.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i, interpolated);

     label04:
        goto label06;

     label05:
        $stack25 := @caughtexception;

        return;

     label06:
        goto label09;

     label07:
        $stack17 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>();

        $stack18 = virtualinvoke $stack17.<java.lang.Class: boolean isArray()>();

        if $stack18 == 0 goto label08;

        staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction: void access$400(java.lang.Object,org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction)>(value, ctx);

        goto label09;

     label08:
        $stack19 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction: java.util.LinkedList access$500(org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction)>(ctx);

        virtualinvoke $stack19.<java.util.LinkedList: boolean add(java.lang.Object)>(value);

     label09:
        i = i + 1;

        goto label02;

     label10:
        return;

        catch java.lang.UnsupportedOperationException from label03 to label04 with label05;
    }
}
