final class StringSearchModelInterpolator$InterpolateObjectAction$MapField extends org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$CacheField
{

    void <init>(java.lang.reflect.Field)
    {
        StringSearchModelInterpolator$InterpolateObjectAction$MapField this;
        java.lang.reflect.Field field;

        this := @this: StringSearchModelInterpolator$InterpolateObjectAction$MapField;

        field := @parameter0: java.lang.reflect.Field;

        specialinvoke this.<org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$CacheField: void <init>(java.lang.reflect.Field)>(field);

        return;
    }

    void doInterpolate(java.lang.Object, org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction) throws java.lang.IllegalAccessException
    {
        StringSearchModelInterpolator$InterpolateObjectAction$MapField this;
        java.lang.Object target, $stack10, $stack15, value;
        java.lang.reflect.Field $stack9;
        java.util.Map m;
        boolean $stack11, $stack20, $stack26, $stack14;
        java.util.Set $stack12;
        java.util.Iterator l4;
        java.util.Map$Entry entry;
        java.lang.Class $stack18, $stack19;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction ctx;
        java.util.LinkedList $stack21;
        java.lang.String $stack24, interpolated;
        java.lang.UnsupportedOperationException $stack28;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$MapField $r0;

        this := @this: StringSearchModelInterpolator$InterpolateObjectAction$MapField;

        target := @parameter0: java.lang.Object;

        ctx := @parameter1: org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction;

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$MapField) this;

        $stack9 = $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction$MapField: java.lang.reflect.Field field>;

        $stack10 = virtualinvoke $stack9.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(target);

        m = (java.util.Map) $stack10;

        if m == null goto label01;

        $stack11 = interfaceinvoke m.<java.util.Map: boolean isEmpty()>();

        if $stack11 == 0 goto label02;

     label01:
        return;

     label02:
        $stack12 = interfaceinvoke m.<java.util.Map: java.util.Set entrySet()>();

        l4 = interfaceinvoke $stack12.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $stack14 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack14 == 0 goto label12;

        $stack15 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $stack15;

        value = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        if value != null goto label04;

        goto label03;

     label04:
        $stack18 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>();

        if class "Ljava/lang/String;" != $stack18 goto label09;

        $stack24 = (java.lang.String) value;

        interpolated = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction: java.lang.String access$300(org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction,java.lang.String)>(ctx, $stack24);

        if interpolated == null goto label08;

        $stack26 = virtualinvoke interpolated.<java.lang.String: boolean equals(java.lang.Object)>(value);

        if $stack26 != 0 goto label08;

     label05:
        interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(interpolated);

     label06:
        goto label08;

     label07:
        $stack28 := @caughtexception;

     label08:
        goto label11;

     label09:
        $stack19 = virtualinvoke value.<java.lang.Object: java.lang.Class getClass()>();

        $stack20 = virtualinvoke $stack19.<java.lang.Class: boolean isArray()>();

        if $stack20 == 0 goto label10;

        staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction: void access$400(java.lang.Object,org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction)>(value, ctx);

        goto label11;

     label10:
        $stack21 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction: java.util.LinkedList access$500(org.apache.maven.model.interpolation.StringSearchModelInterpolator$InterpolateObjectAction)>(ctx);

        virtualinvoke $stack21.<java.util.LinkedList: boolean add(java.lang.Object)>(value);

     label11:
        goto label03;

     label12:
        return;

        catch java.lang.UnsupportedOperationException from label05 to label06 with label07;
    }
}
