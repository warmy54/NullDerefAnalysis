public class StringSearchModelInterpolatorTest extends org.apache.maven.model.interpolation.AbstractModelInterpolatorTest
{

    public void <init>()
    {
        StringSearchModelInterpolatorTest this;

        this := @this: StringSearchModelInterpolatorTest;

        specialinvoke this.<org.apache.maven.model.interpolation.AbstractModelInterpolatorTest: void <init>()>();

        return;
    }

    protected org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()
    {
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator $u0;
        org.apache.maven.model.interpolation.ModelInterpolator $r0;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.interpolation.StringSearchModelInterpolator;

        specialinvoke $u0.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void <init>()>();

        $r0 = (org.apache.maven.model.interpolation.ModelInterpolator) $u0;

        return $r0;
    }

    public void testInterpolateStringArray()
    {
        java.lang.String[] $stack11;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack12;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.lang.String $stack16, $stack17;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        org.apache.maven.model.building.SimpleProblemCollector $u2;
        java.io.File $u3;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        $stack11 = newarray (java.lang.String)[2];

        $stack11[0] = "${key}";

        $stack11[1] = "${key2}";

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack12 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack12;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u2 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u2.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u3 = new java.io.File;

        specialinvoke $u3.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u2;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($stack11, $u0, $u3, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u2);

        $stack16 = $stack11[0];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value", $stack16);

        $stack17 = $stack11[1];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $stack17);

        return;
    }

    private org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)
    {
        java.util.Properties p;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.building.DefaultModelBuildingRequest $u0;
        org.apache.maven.model.building.ModelBuildingRequest $r0, $r1;

        this := @this: StringSearchModelInterpolatorTest;

        p := @parameter0: java.util.Properties;

        $u0 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        specialinvoke $u0.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>()>();

        $r0 = (org.apache.maven.model.building.ModelBuildingRequest) $u0;

        interfaceinvoke $r0.<org.apache.maven.model.building.ModelBuildingRequest: org.apache.maven.model.building.ModelBuildingRequest setSystemProperties(java.util.Properties)>(p);

        $r1 = (org.apache.maven.model.building.ModelBuildingRequest) $u0;

        return $r1;
    }

    public void testInterpolateObjectWithStringArrayField()
    {
        java.lang.String[] $stack12, $stack19, $stack22;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack14;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.lang.String $stack20, $stack23;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithStringArrayField $u2;
        org.apache.maven.model.building.SimpleProblemCollector $u3;
        java.io.File $u4;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        $stack12 = newarray (java.lang.String)[2];

        $stack12[0] = "${key}";

        $stack12[1] = "${key2}";

        $u2 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithStringArrayField;

        specialinvoke $u2.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithStringArrayField: void <init>(java.lang.String[])>($stack12);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack14 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack14;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u3 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u3.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u4 = new java.io.File;

        specialinvoke $u4.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u3;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u2, $u0, $u4, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u3);

        $stack19 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithStringArrayField: java.lang.String[] access$000(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithStringArrayField)>($u2);

        $stack20 = $stack19[0];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value", $stack20);

        $stack22 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithStringArrayField: java.lang.String[] access$000(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithStringArrayField)>($u2);

        $stack23 = $stack22[1];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $stack23);

        return;
    }

    public void testInterpolateObjectWithStringListField()
    {
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack16;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.List $stack21, $stack24;
        java.lang.Object $stack22, $stack25;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField $u3;
        org.apache.maven.model.building.SimpleProblemCollector $u4;
        java.io.File $u5;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>("${key}");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>("${key2}");

        $u3 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField;

        specialinvoke $u3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: void <init>(java.util.List)>($u2);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack16 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack16;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u4 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u5 = new java.io.File;

        specialinvoke $u5.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u4;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u3, $u0, $u5, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u4);

        $stack21 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: java.util.List access$100(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField)>($u3);

        $stack22 = interfaceinvoke $stack21.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value", $stack22);

        $stack24 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: java.util.List access$100(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField)>($u3);

        $stack25 = interfaceinvoke $stack24.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $stack25);

        return;
    }

    public void testInterpolateObjectWithStringListFieldAndOneLiteralValue()
    {
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack16;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.List $stack21, $stack24;
        java.lang.Object $stack22, $stack25;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField $u3;
        org.apache.maven.model.building.SimpleProblemCollector $u4;
        java.io.File $u5;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>("key");

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>("${key2}");

        $u3 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField;

        specialinvoke $u3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: void <init>(java.util.List)>($u2);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack16 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack16;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u4 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u5 = new java.io.File;

        specialinvoke $u5.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u4;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u3, $u0, $u5, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u4);

        $stack21 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: java.util.List access$100(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField)>($u3);

        $stack22 = interfaceinvoke $stack21.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("key", $stack22);

        $stack24 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: java.util.List access$100(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField)>($u3);

        $stack25 = interfaceinvoke $stack24.<java.util.List: java.lang.Object get(int)>(1);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $stack25);

        return;
    }

    public void testInterpolateObjectWithUnmodifiableStringListField()
    {
        java.util.List $stack12, values, $stack20;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack15;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.lang.Object $stack21;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField $u2;
        org.apache.maven.model.building.SimpleProblemCollector $u3;
        java.io.File $u4;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        $stack12 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>("${key}");

        values = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($stack12);

        $u2 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField;

        specialinvoke $u2.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: void <init>(java.util.List)>(values);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack15 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack15;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u3 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u3.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u4 = new java.io.File;

        specialinvoke $u4.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u3;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u2, $u0, $u4, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u3);

        $stack20 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: java.util.List access$100(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField)>($u2);

        $stack21 = interfaceinvoke $stack20.<java.util.List: java.lang.Object get(int)>(0);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("${key}", $stack21);

        return;
    }

    public void testInterpolateObjectWithStringArrayListField()
    {
        java.lang.String[] $stack15, $stack17, $stack27, $stack32, $stack37, $stack42;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack20;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.List $stack25, $stack30, $stack35, $stack40;
        java.lang.Object $stack26, $stack31, $stack36, $stack41;
        java.lang.String $stack28, $stack33, $stack38, $stack43;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        java.util.ArrayList $u2;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField $u3;
        org.apache.maven.model.building.SimpleProblemCollector $u4;
        java.io.File $u5;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key3", "value3");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key4", "value4");

        $u2 = new java.util.ArrayList;

        specialinvoke $u2.<java.util.ArrayList: void <init>()>();

        $stack15 = newarray (java.lang.String)[2];

        $stack15[0] = "${key}";

        $stack15[1] = "${key2}";

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack15);

        $stack17 = newarray (java.lang.String)[2];

        $stack17[0] = "${key3}";

        $stack17[1] = "${key4}";

        interfaceinvoke $u2.<java.util.List: boolean add(java.lang.Object)>($stack17);

        $u3 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField;

        specialinvoke $u3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: void <init>(java.util.List)>($u2);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack20 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack20;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u4 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u5 = new java.io.File;

        specialinvoke $u5.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u4;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u3, $u0, $u5, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u4);

        $stack25 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: java.util.List access$100(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField)>($u3);

        $stack26 = interfaceinvoke $stack25.<java.util.List: java.lang.Object get(int)>(0);

        $stack27 = (java.lang.String[]) $stack26;

        $stack28 = $stack27[0];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value", $stack28);

        $stack30 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: java.util.List access$100(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField)>($u3);

        $stack31 = interfaceinvoke $stack30.<java.util.List: java.lang.Object get(int)>(0);

        $stack32 = (java.lang.String[]) $stack31;

        $stack33 = $stack32[1];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $stack33);

        $stack35 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: java.util.List access$100(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField)>($u3);

        $stack36 = interfaceinvoke $stack35.<java.util.List: java.lang.Object get(int)>(1);

        $stack37 = (java.lang.String[]) $stack36;

        $stack38 = $stack37[0];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value3", $stack38);

        $stack40 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField: java.util.List access$100(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithListField)>($u3);

        $stack41 = interfaceinvoke $stack40.<java.util.List: java.lang.Object get(int)>(1);

        $stack42 = (java.lang.String[]) $stack41;

        $stack43 = $stack42[1];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value4", $stack43);

        return;
    }

    public void testInterpolateObjectWithStringToStringMapField()
    {
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack16;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.Map $stack21, $stack24;
        java.lang.Object $stack22, $stack25;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        java.util.HashMap $u2;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField $u3;
        org.apache.maven.model.building.SimpleProblemCollector $u4;
        java.io.File $u5;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>()>();

        interfaceinvoke $u2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key", "${key}");

        interfaceinvoke $u2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key2", "${key2}");

        $u3 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField;

        specialinvoke $u3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: void <init>(java.util.Map)>($u2);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack16 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack16;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u4 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u5 = new java.io.File;

        specialinvoke $u5.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u4;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u3, $u0, $u5, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u4);

        $stack21 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u3);

        $stack22 = interfaceinvoke $stack21.<java.util.Map: java.lang.Object get(java.lang.Object)>("key");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value", $stack22);

        $stack24 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u3);

        $stack25 = interfaceinvoke $stack24.<java.util.Map: java.lang.Object get(java.lang.Object)>("key2");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $stack25);

        return;
    }

    public void testInterpolateObjectWithStringToStringMapFieldAndOneLiteralValue()
    {
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack16;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.Map $stack21, $stack24;
        java.lang.Object $stack22, $stack25;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        java.util.HashMap $u2;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField $u3;
        org.apache.maven.model.building.SimpleProblemCollector $u4;
        java.io.File $u5;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>()>();

        interfaceinvoke $u2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key", "val");

        interfaceinvoke $u2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key2", "${key2}");

        $u3 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField;

        specialinvoke $u3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: void <init>(java.util.Map)>($u2);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack16 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack16;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u4 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u5 = new java.io.File;

        specialinvoke $u5.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u4;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u3, $u0, $u5, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u4);

        $stack21 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u3);

        $stack22 = interfaceinvoke $stack21.<java.util.Map: java.lang.Object get(java.lang.Object)>("key");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("val", $stack22);

        $stack24 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u3);

        $stack25 = interfaceinvoke $stack24.<java.util.Map: java.lang.Object get(java.lang.Object)>("key2");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $stack25);

        return;
    }

    public void testInterpolateObjectWithUnmodifiableStringToStringMapField()
    {
        java.util.Map $stack12, values, $stack20;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack15;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.lang.Object $stack21;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField $u2;
        org.apache.maven.model.building.SimpleProblemCollector $u3;
        java.io.File $u4;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        $stack12 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("key", "${key}");

        values = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($stack12);

        $u2 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField;

        specialinvoke $u2.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: void <init>(java.util.Map)>(values);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack15 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack15;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u3 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u3.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u4 = new java.io.File;

        specialinvoke $u4.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u3;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u2, $u0, $u4, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u3);

        $stack20 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u2);

        $stack21 = interfaceinvoke $stack20.<java.util.Map: java.lang.Object get(java.lang.Object)>("key");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("${key}", $stack21);

        return;
    }

    public void testInterpolateObjectWithStringToStringArrayMapField()
    {
        java.lang.String[] $stack15, $stack17, $stack27, $stack32, $stack37, $stack42;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack20;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.Map $stack25, $stack30, $stack35, $stack40;
        java.lang.Object $stack26, $stack31, $stack36, $stack41;
        java.lang.String $stack28, $stack33, $stack38, $stack43;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        java.util.HashMap $u2;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField $u3;
        org.apache.maven.model.building.SimpleProblemCollector $u4;
        java.io.File $u5;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key3", "value3");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key4", "value4");

        $u2 = new java.util.HashMap;

        specialinvoke $u2.<java.util.HashMap: void <init>()>();

        $stack15 = newarray (java.lang.String)[2];

        $stack15[0] = "${key}";

        $stack15[1] = "${key2}";

        interfaceinvoke $u2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key", $stack15);

        $stack17 = newarray (java.lang.String)[2];

        $stack17[0] = "${key3}";

        $stack17[1] = "${key4}";

        interfaceinvoke $u2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key2", $stack17);

        $u3 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField;

        specialinvoke $u3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: void <init>(java.util.Map)>($u2);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack20 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack20;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u1);

        $u4 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u5 = new java.io.File;

        specialinvoke $u5.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u4;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u3, $u0, $u5, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u4);

        $stack25 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u3);

        $stack26 = interfaceinvoke $stack25.<java.util.Map: java.lang.Object get(java.lang.Object)>("key");

        $stack27 = (java.lang.String[]) $stack26;

        $stack28 = $stack27[0];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value", $stack28);

        $stack30 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u3);

        $stack31 = interfaceinvoke $stack30.<java.util.Map: java.lang.Object get(java.lang.Object)>("key");

        $stack32 = (java.lang.String[]) $stack31;

        $stack33 = $stack32[1];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value2", $stack33);

        $stack35 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u3);

        $stack36 = interfaceinvoke $stack35.<java.util.Map: java.lang.Object get(java.lang.Object)>("key2");

        $stack37 = (java.lang.String[]) $stack36;

        $stack38 = $stack37[0];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value3", $stack38);

        $stack40 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u3);

        $stack41 = interfaceinvoke $stack40.<java.util.Map: java.lang.Object get(java.lang.Object)>("key2");

        $stack42 = (java.lang.String[]) $stack41;

        $stack43 = $stack42[1];

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("value4", $stack43);

        return;
    }

    public void testInterpolateObjectWithPomFile() throws java.lang.Exception
    {
        java.lang.String $stack11, $stack18, $stack21, $stack28, $stack29, $stack40, $stack42, $stack44, $stack47, $stack51, $stack53, $stack56, $stack59;
        java.io.File baseDir, $u1, $u7;
        java.lang.StringBuilder $stack17, $stack19, $stack20, $stack43, $stack45, $stack46, $stack52, $stack54, $stack55, $stack57, $stack58, $u4, $u8, $u9;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack24;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        org.hamcrest.Matcher $stack30, $stack35, $stack48, $stack60, $stack62, $r4;
        java.util.Map $stack31, $stack36;
        int $stack32;
        java.lang.Integer $stack33, $stack34;
        java.lang.Object $stack37;
        org.hamcrest.Matcher[] $stack38;
        org.hamcrest.core.AnyOf $stack61;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u2;
        java.util.HashMap $u3;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField $u5;
        org.apache.maven.model.building.SimpleProblemCollector $u6;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.io.File;

        $stack11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        specialinvoke $u1.<java.io.File: void <init>(java.lang.String,java.lang.String)>($stack11, "pom.xml");

        virtualinvoke $u0.<org.apache.maven.model.Model: void setPomFile(java.io.File)>($u1);

        baseDir = virtualinvoke $u0.<org.apache.maven.model.Model: java.io.File getProjectDirectory()>();

        $u2 = new java.util.Properties;

        specialinvoke $u2.<java.util.Properties: void <init>()>();

        $u3 = new java.util.HashMap;

        specialinvoke $u3.<java.util.HashMap: void <init>()>();

        $u4 = new java.lang.StringBuilder;

        specialinvoke $u4.<java.lang.StringBuilder: void <init>()>();

        $stack17 = virtualinvoke $u4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("${project.basedir}");

        $stack18 = <java.io.File: java.lang.String separator>;

        $stack19 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18);

        $stack20 = virtualinvoke $stack19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target");

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $u3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("key", $stack21);

        $u5 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField;

        specialinvoke $u5.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: void <init>(java.util.Map)>($u3);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack24 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack24;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u2);

        $u6 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u6.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u7 = new java.io.File;

        specialinvoke $u7.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u6;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u5, $u0, $u7, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u6);

        $stack28 = virtualinvoke baseDir.<java.io.File: java.lang.String getAbsolutePath()>();

        $stack29 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        $stack30 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($stack29);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack28, $stack30);

        $stack31 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u5);

        $stack32 = interfaceinvoke $stack31.<java.util.Map: int size()>();

        $stack33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack32);

        $stack34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $stack35 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($stack34);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack33, $stack35);

        $stack36 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField: java.util.Map access$200(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMapField)>($u5);

        $stack37 = interfaceinvoke $stack36.<java.util.Map: java.lang.Object get(java.lang.Object)>("key");

        $stack40 = (java.lang.String) $stack37;

        $stack38 = newarray (org.hamcrest.Matcher)[2];

        $u8 = new java.lang.StringBuilder;

        specialinvoke $u8.<java.lang.StringBuilder: void <init>()>();

        $stack42 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        $stack43 = virtualinvoke $u8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack42);

        $stack44 = <java.io.File: java.lang.String separator>;

        $stack45 = virtualinvoke $stack43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack44);

        $stack46 = virtualinvoke $stack45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target");

        $stack47 = virtualinvoke $stack46.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack48 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($stack47);

        $stack38[0] = $stack48;

        $u9 = new java.lang.StringBuilder;

        specialinvoke $u9.<java.lang.StringBuilder: void <init>()>();

        $stack51 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        $stack52 = virtualinvoke $u9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack51);

        $stack53 = <java.io.File: java.lang.String separator>;

        $stack54 = virtualinvoke $stack52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack53);

        $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $stack56 = <java.io.File: java.lang.String separator>;

        $stack57 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack56);

        $stack58 = virtualinvoke $stack57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("target");

        $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>();

        $stack60 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($stack59);

        $stack38[1] = $stack60;

        $stack61 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.core.AnyOf anyOf(org.hamcrest.Matcher[])>($stack38);

        $r4 = (org.hamcrest.Matcher) $stack61;

        $stack62 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($r4);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack40, $stack62);

        return;
    }

    public void testNotInterpolateObjectWithFile() throws java.lang.Exception
    {
        java.lang.String $stack13;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack16;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.Map cache;
        java.lang.Object objCacheItem, fileCacheItem;
        java.lang.Object[] $stack23, $stack28;
        int $stack24, $stack29;
        java.lang.Integer $stack25, $stack26, $stack30, $stack31;
        org.hamcrest.Matcher $stack27, $stack32;
        org.apache.maven.model.Model $u0;
        java.io.File $u1, $u5;
        java.util.Properties $u2;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithNotInterpolatedFile $u3;
        org.apache.maven.model.building.SimpleProblemCollector $u4;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.io.File;

        $stack13 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        specialinvoke $u1.<java.io.File: void <init>(java.lang.String)>($stack13);

        $u2 = new java.util.Properties;

        specialinvoke $u2.<java.util.Properties: void <init>()>();

        $u3 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithNotInterpolatedFile;

        specialinvoke $u3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithNotInterpolatedFile: void <init>(java.io.File)>($u1);

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack16 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack16;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u2);

        $u4 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u4.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u5 = new java.io.File;

        specialinvoke $u5.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u4;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u3, $u0, $u5, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u4);

        cache = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: java.util.Map getCachedEntries()>();

        objCacheItem = interfaceinvoke cache.<java.util.Map: java.lang.Object get(java.lang.Object)>(class "Ljava/lang/Object;");

        fileCacheItem = interfaceinvoke cache.<java.util.Map: java.lang.Object get(java.lang.Object)>(class "Ljava/io/File;");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(objCacheItem);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(fileCacheItem);

        $stack23 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: java.lang.Object[] readFieldsArray(java.lang.Object)>(objCacheItem);

        $stack24 = lengthof $stack23;

        $stack25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack24);

        $stack26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $stack27 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($stack26);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack25, $stack27);

        $stack28 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: java.lang.Object[] readFieldsArray(java.lang.Object)>(fileCacheItem);

        $stack29 = lengthof $stack28;

        $stack30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack29);

        $stack31 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $stack32 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($stack31);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack30, $stack32);

        return;
    }

    private static java.lang.Object[] readFieldsArray(java.lang.Object) throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException
    {
        java.lang.Object o, $stack4;
        java.lang.Class $stack2;
        java.lang.reflect.Field field;
        java.lang.Object[] $stack5;

        o := @parameter0: java.lang.Object;

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(o);

        $stack2 = virtualinvoke o.<java.lang.Object: java.lang.Class getClass()>();

        field = virtualinvoke $stack2.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("fields");

        virtualinvoke field.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $stack4 = virtualinvoke field.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(o);

        $stack5 = (java.lang.Object[]) $stack4;

        return $stack5;
    }

    private static java.util.Map getCachedEntries() throws java.lang.NoSuchFieldException, java.lang.IllegalAccessException
    {
        java.lang.Class $stack1;
        java.lang.reflect.Field field;
        java.lang.Object $stack3;
        java.util.Map $stack4;

        $stack1 = class "Lorg/apache/maven/model/interpolation/StringSearchModelInterpolator;";

        field = virtualinvoke $stack1.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("CACHED_ENTRIES");

        virtualinvoke field.<java.lang.reflect.Field: void setAccessible(boolean)>(1);

        $stack3 = virtualinvoke field.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);

        $stack4 = (java.util.Map) $stack3;

        return $stack4;
    }

    public void testNotInterpolateFile() throws java.lang.Exception
    {
        java.lang.String $stack11;
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack13;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.Map cache;
        java.lang.Object fileCacheItem;
        java.lang.Object[] $stack19;
        int $stack20;
        java.lang.Integer $stack21, $stack22;
        org.hamcrest.Matcher $stack23;
        org.apache.maven.model.Model $u0;
        java.io.File $u1, $u4;
        java.util.Properties $u2;
        org.apache.maven.model.building.SimpleProblemCollector $u3;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r3;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.io.File;

        $stack11 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

        specialinvoke $u1.<java.io.File: void <init>(java.lang.String)>($stack11);

        $u2 = new java.util.Properties;

        specialinvoke $u2.<java.util.Properties: void <init>()>();

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack13 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack13;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>($u2);

        $u3 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u3.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u4 = new java.io.File;

        specialinvoke $u4.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u3;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u1, $u0, $u4, config, $r2);

        $r3 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r3.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u3);

        cache = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: java.util.Map getCachedEntries()>();

        fileCacheItem = interfaceinvoke cache.<java.util.Map: java.lang.Object get(java.lang.Object)>(class "Ljava/io/File;");

        staticinvoke <org.junit.jupiter.api.Assertions: void assertNotNull(java.lang.Object)>(fileCacheItem);

        $stack19 = staticinvoke <org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: java.lang.Object[] readFieldsArray(java.lang.Object)>(fileCacheItem);

        $stack20 = lengthof $stack19;

        $stack21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack20);

        $stack22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $stack23 = staticinvoke <org.hamcrest.CoreMatchers: org.hamcrest.Matcher is(java.lang.Object)>($stack22);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack21, $stack23);

        return;
    }

    public void testConcurrentInterpolation() throws java.lang.Exception
    {
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.ModelInterpolator $stack17;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        boolean $stack21;
        java.lang.Object $stack22, $stack23;
        int i;
        java.util.concurrent.Callable future;
        java.util.Iterator i#4;
        java.util.concurrent.Future future#5;
        org.apache.maven.model.building.SimpleProblemCollector task#6;
        org.apache.maven.model.Model $u0;
        java.util.Properties $u1;
        java.util.concurrent.CountDownLatch $u2;
        java.util.ArrayList $u3;
        java.util.concurrent.FutureTask $u4;
        java.lang.Thread $u5;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1, $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new org.apache.maven.model.Model;

        specialinvoke $u0.<org.apache.maven.model.Model: void <init>()>();

        $u1 = new java.util.Properties;

        specialinvoke $u1.<java.util.Properties: void <init>()>();

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key", "value");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key2", "value2");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key3", "value3");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key4", "value4");

        virtualinvoke $u1.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("key5", "value5");

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        $stack17 = virtualinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.ModelInterpolator createInterpolator()>();

        interpolator = (org.apache.maven.model.interpolation.StringSearchModelInterpolator) $stack17;

        $u2 = new java.util.concurrent.CountDownLatch;

        specialinvoke $u2.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        $u3 = new java.util.ArrayList;

        specialinvoke $u3.<java.util.ArrayList: void <init>()>();

        i = 0;

     label1:
        if i >= 100 goto label2;

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        future = staticinvoke <StringSearchModelInterpolatorTest$lambda_testConcurrentInterpolation_0__309: java.util.concurrent.Callable bootstrap$(org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest,java.util.Properties,java.util.concurrent.CountDownLatch,org.apache.maven.model.interpolation.StringSearchModelInterpolator,org.apache.maven.model.Model)>($r1, $u1, $u2, interpolator, $u0);

        $u4 = new java.util.concurrent.FutureTask;

        specialinvoke $u4.<java.util.concurrent.FutureTask: void <init>(java.util.concurrent.Callable)>(future);

        interfaceinvoke $u3.<java.util.List: boolean add(java.lang.Object)>($u4);

        $u5 = new java.lang.Thread;

        specialinvoke $u5.<java.lang.Thread: void <init>(java.lang.Runnable)>($u4);

        virtualinvoke $u5.<java.lang.Thread: void start()>();

        i = i + 1;

        goto label1;

     label2:
        virtualinvoke $u2.<java.util.concurrent.CountDownLatch: void countDown()>();

        i#4 = interfaceinvoke $u3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack21 = interfaceinvoke i#4.<java.util.Iterator: boolean hasNext()>();

        if $stack21 == 0 goto label4;

        $stack22 = interfaceinvoke i#4.<java.util.Iterator: java.lang.Object next()>();

        future#5 = (java.util.concurrent.Future) $stack22;

        $stack23 = interfaceinvoke future#5.<java.util.concurrent.Future: java.lang.Object get()>();

        task#6 = (org.apache.maven.model.building.SimpleProblemCollector) $stack23;

        $r2 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r2.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>(task#6);

        goto label3;

     label4:
        return;
    }

    private org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMixedProtection getValueList()
    {
        java.util.ArrayList $stack4, $stack9, $stack14;
        java.lang.String[] $stack5, $stack7, $stack10, $stack12, $stack15, $stack17;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMixedProtection $stack19;
        StringSearchModelInterpolatorTest this;

        this := @this: StringSearchModelInterpolatorTest;

        $stack4 = new java.util.ArrayList;

        specialinvoke $stack4.<java.util.ArrayList: void <init>()>();

        $stack5 = newarray (java.lang.String)[2];

        $stack5[0] = "${key}";

        $stack5[1] = "${key2}";

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($stack5);

        $stack7 = newarray (java.lang.String)[2];

        $stack7[0] = "${key3}";

        $stack7[1] = "${key4}";

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($stack7);

        $stack9 = new java.util.ArrayList;

        specialinvoke $stack9.<java.util.ArrayList: void <init>()>();

        $stack10 = newarray (java.lang.String)[2];

        $stack10[0] = "${key}";

        $stack10[1] = "${key2}";

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($stack10);

        $stack12 = newarray (java.lang.String)[2];

        $stack12[0] = "${key3}";

        $stack12[1] = "${key4}";

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($stack12);

        $stack14 = new java.util.ArrayList;

        specialinvoke $stack14.<java.util.ArrayList: void <init>()>();

        $stack15 = newarray (java.lang.String)[2];

        $stack15[0] = "${key}";

        $stack15[1] = "${key2}";

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($stack15);

        $stack17 = newarray (java.lang.String)[2];

        $stack17[0] = "${key3}";

        $stack17[1] = "${key4}";

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($stack17);

        $stack19 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMixedProtection;

        specialinvoke $stack19.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMixedProtection: void <init>(java.util.List,java.util.List,java.util.List,java.lang.String,org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$1)>($stack4, $stack9, $stack14, "${key5}", null);

        return $stack19;
    }

    public void testFinalFieldsExcludedFromInterpolation()
    {
        StringSearchModelInterpolatorTest this;
        java.util.Properties $u0;
        org.apache.maven.model.building.DefaultModelBuildingRequest $u1;
        org.apache.maven.model.building.SimpleProblemCollector $u2;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator $u3;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ClassWithFinalField $u4;
        org.apache.maven.model.Model $u5;
        org.apache.maven.model.building.ModelBuildingRequest $r0;
        org.apache.maven.model.building.ModelProblemCollector $r1;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        virtualinvoke $u0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("expression", "value");

        $u1 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        specialinvoke $u1.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setUserProperties(java.util.Properties)>($u0);

        $u2 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u2.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u3 = new org.apache.maven.model.interpolation.StringSearchModelInterpolator;

        specialinvoke $u3.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void <init>()>();

        $u4 = new org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ClassWithFinalField;

        specialinvoke $u4.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ClassWithFinalField: void <init>()>();

        $u5 = new org.apache.maven.model.Model;

        specialinvoke $u5.<org.apache.maven.model.Model: void <init>()>();

        $r0 = (org.apache.maven.model.building.ModelBuildingRequest) $u1;

        $r1 = (org.apache.maven.model.building.ModelProblemCollector) $u2;

        virtualinvoke $u3.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u4, $u5, null, $r0, $r1);

        $r2 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r2.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u2);

        return;
    }

    public void locationTrackerShouldBeExcludedFromInterpolation()
    {
        StringSearchModelInterpolatorTest this;
        java.lang.String $stack18, $stack20;
        java.util.Properties $u0;
        org.apache.maven.model.building.DefaultModelBuildingRequest $u1;
        org.apache.maven.model.InputSource $u2;
        org.apache.maven.model.Model $u3;
        org.apache.maven.model.InputLocation $u4;
        org.apache.maven.model.building.SimpleProblemCollector $u5;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator $u6;
        org.apache.maven.model.building.ModelBuildingRequest $r0;
        org.apache.maven.model.building.ModelProblemCollector $r1;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r2;

        this := @this: StringSearchModelInterpolatorTest;

        $u0 = new java.util.Properties;

        specialinvoke $u0.<java.util.Properties: void <init>()>();

        virtualinvoke $u0.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("expression", "value");

        $u1 = new org.apache.maven.model.building.DefaultModelBuildingRequest;

        specialinvoke $u1.<org.apache.maven.model.building.DefaultModelBuildingRequest: void <init>()>();

        virtualinvoke $u1.<org.apache.maven.model.building.DefaultModelBuildingRequest: org.apache.maven.model.building.DefaultModelBuildingRequest setUserProperties(java.util.Properties)>($u0);

        $u2 = new org.apache.maven.model.InputSource;

        specialinvoke $u2.<org.apache.maven.model.InputSource: void <init>()>();

        virtualinvoke $u2.<org.apache.maven.model.InputSource: void setLocation(java.lang.String)>("${expression}");

        virtualinvoke $u2.<org.apache.maven.model.InputSource: void setModelId(java.lang.String)>("${expression}");

        $u3 = new org.apache.maven.model.Model;

        specialinvoke $u3.<org.apache.maven.model.Model: void <init>()>();

        $u4 = new org.apache.maven.model.InputLocation;

        specialinvoke $u4.<org.apache.maven.model.InputLocation: void <init>(int,int,org.apache.maven.model.InputSource)>(1, 1, $u2);

        virtualinvoke $u3.<org.apache.maven.model.Model: void setLocation(java.lang.Object,org.apache.maven.model.InputLocation)>("", $u4);

        $u5 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u5.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u6 = new org.apache.maven.model.interpolation.StringSearchModelInterpolator;

        specialinvoke $u6.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void <init>()>();

        $r0 = (org.apache.maven.model.building.ModelBuildingRequest) $u1;

        $r1 = (org.apache.maven.model.building.ModelProblemCollector) $u5;

        virtualinvoke $u6.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>($u3, $u3, null, $r0, $r1);

        $r2 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        virtualinvoke $r2.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: void assertProblemFree(org.apache.maven.model.building.SimpleProblemCollector)>($u5);

        $stack18 = virtualinvoke $u2.<org.apache.maven.model.InputSource: java.lang.String getLocation()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("${expression}", $stack18);

        $stack20 = virtualinvoke $u2.<org.apache.maven.model.InputSource: java.lang.String getModelId()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(java.lang.Object,java.lang.Object)>("${expression}", $stack20);

        return;
    }

    private org.apache.maven.model.building.SimpleProblemCollector lambda$testConcurrentInterpolation$0(java.util.Properties, java.util.concurrent.CountDownLatch, org.apache.maven.model.interpolation.StringSearchModelInterpolator, org.apache.maven.model.Model) throws java.lang.Exception
    {
        StringSearchModelInterpolatorTest this;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMixedProtection obj;
        java.util.Properties p;
        org.apache.maven.model.building.ModelBuildingRequest config;
        java.util.concurrent.CountDownLatch countDownLatch;
        org.apache.maven.model.interpolation.StringSearchModelInterpolator interpolator;
        org.apache.maven.model.Model model;
        org.apache.maven.model.building.SimpleProblemCollector $u0;
        java.io.File $u1;
        org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest $r0, $r1;
        org.apache.maven.model.building.ModelProblemCollector $r2;

        this := @this: StringSearchModelInterpolatorTest;

        p := @parameter0: java.util.Properties;

        countDownLatch := @parameter1: java.util.concurrent.CountDownLatch;

        interpolator := @parameter2: org.apache.maven.model.interpolation.StringSearchModelInterpolator;

        model := @parameter3: org.apache.maven.model.Model;

        $r0 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        obj = specialinvoke $r0.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest$ObjectWithMixedProtection getValueList()>();

        $r1 = (org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest) this;

        config = specialinvoke $r1.<org.apache.maven.model.interpolation.StringSearchModelInterpolatorTest: org.apache.maven.model.building.ModelBuildingRequest createModelBuildingRequest(java.util.Properties)>(p);

        virtualinvoke countDownLatch.<java.util.concurrent.CountDownLatch: void await()>();

        $u0 = new org.apache.maven.model.building.SimpleProblemCollector;

        specialinvoke $u0.<org.apache.maven.model.building.SimpleProblemCollector: void <init>()>();

        $u1 = new java.io.File;

        specialinvoke $u1.<java.io.File: void <init>(java.lang.String)>(".");

        $r2 = (org.apache.maven.model.building.ModelProblemCollector) $u0;

        virtualinvoke interpolator.<org.apache.maven.model.interpolation.StringSearchModelInterpolator: void interpolateObject(java.lang.Object,org.apache.maven.model.Model,java.io.File,org.apache.maven.model.building.ModelBuildingRequest,org.apache.maven.model.building.ModelProblemCollector)>(obj, model, $u1, config, $r2);

        return $u0;
    }
}
