final class StringVisitorModelInterpolator$ModelVisitor extends java.lang.Object
{
    private final org.apache.maven.model.interpolation.StringVisitorModelInterpolator$InnerInterpolator interpolator;

    void <init>(org.apache.maven.model.interpolation.StringVisitorModelInterpolator$InnerInterpolator)
    {
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$InnerInterpolator interpolator;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        interpolator := @parameter0: org.apache.maven.model.interpolation.StringVisitorModelInterpolator$InnerInterpolator;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: org.apache.maven.model.interpolation.StringVisitorModelInterpolator$InnerInterpolator interpolator> = interpolator;

        return;
    }

    void visit(org.apache.maven.model.Model)
    {
        org.apache.maven.model.Model model;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String orgModelVersion, intModelVersion, orgGroupId, intGroupId, orgArtifactId, intArtifactId, orgVersion, intVersion, orgPackaging, intPackaging, orgName, intName, orgDescription, intDescription, orgUrl, intUrl, orgChildProjectUrlInheritAppendPath, intChildProjectUrlInheritAppendPath, orgInceptionYear, intInceptionYear;
        org.apache.maven.model.Parent $stack26;
        org.apache.maven.model.Organization $stack45;
        java.util.List $stack46, $stack49, $stack52, $stack55, $stack63;
        boolean $stack51, $stack54, $stack57, $stack65, $stack48;
        org.apache.maven.model.Prerequisites $stack58;
        org.apache.maven.model.Scm $stack59;
        org.apache.maven.model.IssueManagement $stack60;
        org.apache.maven.model.CiManagement $stack61;
        org.apache.maven.model.Build $stack62;
        java.lang.Object $stack66, $stack68, $stack70, $stack72, $stack74;
        java.util.Iterator l22;
        org.apache.maven.model.License license;
        org.apache.maven.model.Developer license#8;
        org.apache.maven.model.Contributor license#10;
        org.apache.maven.model.MailingList license#12;
        org.apache.maven.model.Profile license#14;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;
        org.apache.maven.model.ModelBase $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        model := @parameter0: org.apache.maven.model.Model;

        if model == null goto label20;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        $r1 = (org.apache.maven.model.ModelBase) model;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.ModelBase)>($r1);

        orgModelVersion = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getModelVersion()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intModelVersion = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgModelVersion);

        if orgModelVersion == intModelVersion goto label01;

        virtualinvoke model.<org.apache.maven.model.Model: void setModelVersion(java.lang.String)>(intModelVersion);

     label01:
        $stack26 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Parent getParent()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Parent)>($stack26);

        orgGroupId = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getGroupId()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intGroupId = specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgGroupId);

        if orgGroupId == intGroupId goto label02;

        virtualinvoke model.<org.apache.maven.model.Model: void setGroupId(java.lang.String)>(intGroupId);

     label02:
        orgArtifactId = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getArtifactId()>();

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intArtifactId = specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgArtifactId);

        if orgArtifactId == intArtifactId goto label03;

        virtualinvoke model.<org.apache.maven.model.Model: void setArtifactId(java.lang.String)>(intArtifactId);

     label03:
        orgVersion = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getVersion()>();

        $r6 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intVersion = specialinvoke $r6.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgVersion);

        if orgVersion == intVersion goto label04;

        virtualinvoke model.<org.apache.maven.model.Model: void setVersion(java.lang.String)>(intVersion);

     label04:
        orgPackaging = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getPackaging()>();

        $r7 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intPackaging = specialinvoke $r7.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgPackaging);

        if orgPackaging == intPackaging goto label05;

        virtualinvoke model.<org.apache.maven.model.Model: void setPackaging(java.lang.String)>(intPackaging);

     label05:
        orgName = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getName()>();

        $r8 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intName = specialinvoke $r8.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgName);

        if orgName == intName goto label06;

        virtualinvoke model.<org.apache.maven.model.Model: void setName(java.lang.String)>(intName);

     label06:
        orgDescription = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getDescription()>();

        $r9 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intDescription = specialinvoke $r9.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgDescription);

        if orgDescription == intDescription goto label07;

        virtualinvoke model.<org.apache.maven.model.Model: void setDescription(java.lang.String)>(intDescription);

     label07:
        orgUrl = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getUrl()>();

        $r10 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intUrl = specialinvoke $r10.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgUrl);

        if orgUrl == intUrl goto label08;

        virtualinvoke model.<org.apache.maven.model.Model: void setUrl(java.lang.String)>(intUrl);

     label08:
        orgChildProjectUrlInheritAppendPath = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getChildProjectUrlInheritAppendPath()>();

        $r11 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intChildProjectUrlInheritAppendPath = specialinvoke $r11.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgChildProjectUrlInheritAppendPath);

        if orgChildProjectUrlInheritAppendPath == intChildProjectUrlInheritAppendPath goto label09;

        virtualinvoke model.<org.apache.maven.model.Model: void setChildProjectUrlInheritAppendPath(java.lang.String)>(intChildProjectUrlInheritAppendPath);

     label09:
        orgInceptionYear = virtualinvoke model.<org.apache.maven.model.Model: java.lang.String getInceptionYear()>();

        $r12 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intInceptionYear = specialinvoke $r12.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgInceptionYear);

        if orgInceptionYear == intInceptionYear goto label10;

        virtualinvoke model.<org.apache.maven.model.Model: void setInceptionYear(java.lang.String)>(intInceptionYear);

     label10:
        $stack45 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Organization getOrganization()>();

        $r13 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r13.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Organization)>($stack45);

        $stack46 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getLicenses()>();

        l22 = interfaceinvoke $stack46.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $stack48 = interfaceinvoke l22.<java.util.Iterator: boolean hasNext()>();

        if $stack48 == 0 goto label12;

        $stack74 = interfaceinvoke l22.<java.util.Iterator: java.lang.Object next()>();

        license = (org.apache.maven.model.License) $stack74;

        $r14 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r14.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.License)>(license);

        goto label11;

     label12:
        $stack49 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getDevelopers()>();

        l22 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $stack51 = interfaceinvoke l22.<java.util.Iterator: boolean hasNext()>();

        if $stack51 == 0 goto label14;

        $stack72 = interfaceinvoke l22.<java.util.Iterator: java.lang.Object next()>();

        license#8 = (org.apache.maven.model.Developer) $stack72;

        $r15 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r15.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Developer)>(license#8);

        goto label13;

     label14:
        $stack52 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getContributors()>();

        l22 = interfaceinvoke $stack52.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $stack54 = interfaceinvoke l22.<java.util.Iterator: boolean hasNext()>();

        if $stack54 == 0 goto label16;

        $stack70 = interfaceinvoke l22.<java.util.Iterator: java.lang.Object next()>();

        license#10 = (org.apache.maven.model.Contributor) $stack70;

        $r16 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r16.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Contributor)>(license#10);

        goto label15;

     label16:
        $stack55 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getMailingLists()>();

        l22 = interfaceinvoke $stack55.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $stack57 = interfaceinvoke l22.<java.util.Iterator: boolean hasNext()>();

        if $stack57 == 0 goto label18;

        $stack68 = interfaceinvoke l22.<java.util.Iterator: java.lang.Object next()>();

        license#12 = (org.apache.maven.model.MailingList) $stack68;

        $r17 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r17.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.MailingList)>(license#12);

        goto label17;

     label18:
        $stack58 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Prerequisites getPrerequisites()>();

        $r18 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r18.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Prerequisites)>($stack58);

        $stack59 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Scm getScm()>();

        $r19 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r19.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Scm)>($stack59);

        $stack60 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.IssueManagement getIssueManagement()>();

        $r20 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r20.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.IssueManagement)>($stack60);

        $stack61 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.CiManagement getCiManagement()>();

        $r21 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r21.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.CiManagement)>($stack61);

        $stack62 = virtualinvoke model.<org.apache.maven.model.Model: org.apache.maven.model.Build getBuild()>();

        $r22 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r22.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Build)>($stack62);

        $stack63 = virtualinvoke model.<org.apache.maven.model.Model: java.util.List getProfiles()>();

        l22 = interfaceinvoke $stack63.<java.util.List: java.util.Iterator iterator()>();

     label19:
        $stack65 = interfaceinvoke l22.<java.util.Iterator: boolean hasNext()>();

        if $stack65 == 0 goto label20;

        $stack66 = interfaceinvoke l22.<java.util.Iterator: java.lang.Object next()>();

        license#14 = (org.apache.maven.model.Profile) $stack66;

        $r23 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r23.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Profile)>(license#14);

        goto label19;

     label20:
        return;
    }

    private void visit(org.apache.maven.model.Parent)
    {
        org.apache.maven.model.Parent parent;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        parent := @parameter0: org.apache.maven.model.Parent;

        if parent == null goto label4;

        org = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getGroupId()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke parent.<org.apache.maven.model.Parent: void setGroupId(java.lang.String)>(val);

     label1:
        org = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getArtifactId()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke parent.<org.apache.maven.model.Parent: void setArtifactId(java.lang.String)>(val);

     label2:
        org = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getVersion()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke parent.<org.apache.maven.model.Parent: void setVersion(java.lang.String)>(val);

     label3:
        org = virtualinvoke parent.<org.apache.maven.model.Parent: java.lang.String getRelativePath()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke parent.<org.apache.maven.model.Parent: void setRelativePath(java.lang.String)>(val);

     label4:
        return;
    }

    private void visit(org.apache.maven.model.Organization)
    {
        org.apache.maven.model.Organization organization;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        organization := @parameter0: org.apache.maven.model.Organization;

        if organization == null goto label2;

        org = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getName()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke organization.<org.apache.maven.model.Organization: void setName(java.lang.String)>(val);

     label1:
        org = virtualinvoke organization.<org.apache.maven.model.Organization: java.lang.String getUrl()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke organization.<org.apache.maven.model.Organization: void setUrl(java.lang.String)>(val);

     label2:
        return;
    }

    private void visit(org.apache.maven.model.License)
    {
        org.apache.maven.model.License license;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        license := @parameter0: org.apache.maven.model.License;

        if license == null goto label4;

        org = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getName()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke license.<org.apache.maven.model.License: void setName(java.lang.String)>(val);

     label1:
        org = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getUrl()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke license.<org.apache.maven.model.License: void setUrl(java.lang.String)>(val);

     label2:
        org = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getDistribution()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke license.<org.apache.maven.model.License: void setDistribution(java.lang.String)>(val);

     label3:
        org = virtualinvoke license.<org.apache.maven.model.License: java.lang.String getComments()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke license.<org.apache.maven.model.License: void setComments(java.lang.String)>(val);

     label4:
        return;
    }

    private void visit(org.apache.maven.model.Developer)
    {
        org.apache.maven.model.Developer developer;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r2;
        org.apache.maven.model.Contributor $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        developer := @parameter0: org.apache.maven.model.Developer;

        if developer == null goto label1;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        $r1 = (org.apache.maven.model.Contributor) developer;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Contributor)>($r1);

        org = virtualinvoke developer.<org.apache.maven.model.Developer: java.lang.String getId()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke developer.<org.apache.maven.model.Developer: void setId(java.lang.String)>(val);

     label1:
        return;
    }

    private void visit(org.apache.maven.model.Contributor)
    {
        org.apache.maven.model.Contributor contributor;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.util.List $stack14;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        contributor := @parameter0: org.apache.maven.model.Contributor;

        if contributor == null goto label6;

        org = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getName()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke contributor.<org.apache.maven.model.Contributor: void setName(java.lang.String)>(val);

     label1:
        org = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getEmail()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke contributor.<org.apache.maven.model.Contributor: void setEmail(java.lang.String)>(val);

     label2:
        org = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getUrl()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke contributor.<org.apache.maven.model.Contributor: void setUrl(java.lang.String)>(val);

     label3:
        org = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganization()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke contributor.<org.apache.maven.model.Contributor: void setOrganization(java.lang.String)>(val);

     label4:
        org = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.lang.String getOrganizationUrl()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label5;

        virtualinvoke contributor.<org.apache.maven.model.Contributor: void setOrganizationUrl(java.lang.String)>(val);

     label5:
        $stack14 = virtualinvoke contributor.<org.apache.maven.model.Contributor: java.util.List getRoles()>();

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(java.util.List)>($stack14);

     label6:
        return;
    }

    private void visit(org.apache.maven.model.MailingList)
    {
        org.apache.maven.model.MailingList mailingList;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        mailingList := @parameter0: org.apache.maven.model.MailingList;

        if mailingList == null goto label5;

        org = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getName()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke mailingList.<org.apache.maven.model.MailingList: void setName(java.lang.String)>(val);

     label1:
        org = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getSubscribe()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke mailingList.<org.apache.maven.model.MailingList: void setSubscribe(java.lang.String)>(val);

     label2:
        org = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getUnsubscribe()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke mailingList.<org.apache.maven.model.MailingList: void setUnsubscribe(java.lang.String)>(val);

     label3:
        org = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getPost()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke mailingList.<org.apache.maven.model.MailingList: void setPost(java.lang.String)>(val);

     label4:
        org = virtualinvoke mailingList.<org.apache.maven.model.MailingList: java.lang.String getArchive()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label5;

        virtualinvoke mailingList.<org.apache.maven.model.MailingList: void setArchive(java.lang.String)>(val);

     label5:
        return;
    }

    private void visit(org.apache.maven.model.Prerequisites)
    {
        org.apache.maven.model.Prerequisites prerequisites;
        java.lang.String org, val;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        prerequisites := @parameter0: org.apache.maven.model.Prerequisites;

        if prerequisites == null goto label1;

        org = virtualinvoke prerequisites.<org.apache.maven.model.Prerequisites: java.lang.String getMaven()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke prerequisites.<org.apache.maven.model.Prerequisites: void setMaven(java.lang.String)>(val);

     label1:
        return;
    }

    private void visit(org.apache.maven.model.Scm)
    {
        org.apache.maven.model.Scm scm;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        scm := @parameter0: org.apache.maven.model.Scm;

        if scm == null goto label7;

        org = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getConnection()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke scm.<org.apache.maven.model.Scm: void setConnection(java.lang.String)>(val);

     label1:
        org = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getDeveloperConnection()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke scm.<org.apache.maven.model.Scm: void setDeveloperConnection(java.lang.String)>(val);

     label2:
        org = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getTag()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke scm.<org.apache.maven.model.Scm: void setTag(java.lang.String)>(val);

     label3:
        org = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getUrl()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke scm.<org.apache.maven.model.Scm: void setUrl(java.lang.String)>(val);

     label4:
        org = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmConnectionInheritAppendPath()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label5;

        virtualinvoke scm.<org.apache.maven.model.Scm: void setChildScmConnectionInheritAppendPath(java.lang.String)>(val);

     label5:
        org = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmDeveloperConnectionInheritAppendPath()>();

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label6;

        virtualinvoke scm.<org.apache.maven.model.Scm: void setChildScmDeveloperConnectionInheritAppendPath(java.lang.String)>(val);

     label6:
        org = virtualinvoke scm.<org.apache.maven.model.Scm: java.lang.String getChildScmUrlInheritAppendPath()>();

        $r6 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r6.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label7;

        virtualinvoke scm.<org.apache.maven.model.Scm: void setChildScmUrlInheritAppendPath(java.lang.String)>(val);

     label7:
        return;
    }

    private void visit(org.apache.maven.model.IssueManagement)
    {
        org.apache.maven.model.IssueManagement issueManagement;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        issueManagement := @parameter0: org.apache.maven.model.IssueManagement;

        if issueManagement == null goto label2;

        org = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getSystem()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: void setSystem(java.lang.String)>(val);

     label1:
        org = virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: java.lang.String getUrl()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke issueManagement.<org.apache.maven.model.IssueManagement: void setUrl(java.lang.String)>(val);

     label2:
        return;
    }

    private void visit(org.apache.maven.model.CiManagement)
    {
        org.apache.maven.model.CiManagement ciManagement;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.util.List $stack10;
        java.util.Iterator l4;
        java.lang.Object $stack13;
        org.apache.maven.model.Notifier notifier;
        java.lang.String org, val;
        boolean $stack12;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        ciManagement := @parameter0: org.apache.maven.model.CiManagement;

        if ciManagement == null goto label4;

        org = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getSystem()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: void setSystem(java.lang.String)>(val);

     label1:
        org = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.lang.String getUrl()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: void setUrl(java.lang.String)>(val);

     label2:
        $stack10 = virtualinvoke ciManagement.<org.apache.maven.model.CiManagement: java.util.List getNotifiers()>();

        l4 = interfaceinvoke $stack10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack12 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label4;

        $stack13 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        notifier = (org.apache.maven.model.Notifier) $stack13;

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Notifier)>(notifier);

        goto label3;

     label4:
        return;
    }

    private void visit(org.apache.maven.model.Notifier)
    {
        org.apache.maven.model.Notifier notifier;
        java.lang.String org, val;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.util.Properties $stack6;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        notifier := @parameter0: org.apache.maven.model.Notifier;

        if notifier == null goto label2;

        org = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.lang.String getType()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke notifier.<org.apache.maven.model.Notifier: void setType(java.lang.String)>(val);

     label1:
        $stack6 = virtualinvoke notifier.<org.apache.maven.model.Notifier: java.util.Properties getConfiguration()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(java.util.Properties)>($stack6);

     label2:
        return;
    }

    private void visit(org.apache.maven.model.BuildBase)
    {
        org.apache.maven.model.BuildBase build;
        java.util.List $stack6, $stack12, $stack15, $stack22;
        boolean $stack8, $stack17, $stack14;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.PluginManagement $stack9;
        java.lang.Object $stack30, $stack32, $stack35;
        java.util.Iterator l4;
        org.apache.maven.model.Plugin plugin;
        java.lang.String org, val;
        org.apache.maven.model.Resource plugin#10;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        build := @parameter0: org.apache.maven.model.BuildBase;

        if build == null goto label10;

        $stack6 = virtualinvoke build.<org.apache.maven.model.BuildBase: java.util.List getPlugins()>();

        l4 = interfaceinvoke $stack6.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $stack8 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label02;

        $stack35 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack35;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Plugin)>(plugin);

        goto label01;

     label02:
        $stack9 = virtualinvoke build.<org.apache.maven.model.BuildBase: org.apache.maven.model.PluginManagement getPluginManagement()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.PluginManagement)>($stack9);

        org = virtualinvoke build.<org.apache.maven.model.BuildBase: java.lang.String getDefaultGoal()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label03;

        virtualinvoke build.<org.apache.maven.model.BuildBase: void setDefaultGoal(java.lang.String)>(val);

     label03:
        $stack12 = virtualinvoke build.<org.apache.maven.model.BuildBase: java.util.List getResources()>();

        l4 = interfaceinvoke $stack12.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $stack14 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack14 == 0 goto label05;

        $stack32 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        plugin#10 = (org.apache.maven.model.Resource) $stack32;

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Resource)>(plugin#10);

        goto label04;

     label05:
        $stack15 = virtualinvoke build.<org.apache.maven.model.BuildBase: java.util.List getTestResources()>();

        l4 = interfaceinvoke $stack15.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $stack17 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label07;

        $stack30 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        plugin#10 = (org.apache.maven.model.Resource) $stack30;

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Resource)>(plugin#10);

        goto label06;

     label07:
        org = virtualinvoke build.<org.apache.maven.model.BuildBase: java.lang.String getDirectory()>();

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label08;

        virtualinvoke build.<org.apache.maven.model.BuildBase: void setDirectory(java.lang.String)>(val);

     label08:
        org = virtualinvoke build.<org.apache.maven.model.BuildBase: java.lang.String getFinalName()>();

        $r6 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r6.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label09;

        virtualinvoke build.<org.apache.maven.model.BuildBase: void setFinalName(java.lang.String)>(val);

     label09:
        $stack22 = virtualinvoke build.<org.apache.maven.model.BuildBase: java.util.List getFilters()>();

        $r7 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r7.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(java.util.List)>($stack22);

     label10:
        return;
    }

    private void visit(org.apache.maven.model.PluginManagement)
    {
        org.apache.maven.model.PluginManagement pluginManagement;
        java.util.List $stack4;
        java.util.Iterator l2;
        boolean $stack6;
        java.lang.Object $stack7;
        org.apache.maven.model.Plugin plugin;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        pluginManagement := @parameter0: org.apache.maven.model.PluginManagement;

        if pluginManagement == null goto label2;

        $stack4 = virtualinvoke pluginManagement.<org.apache.maven.model.PluginManagement: java.util.List getPlugins()>();

        l2 = interfaceinvoke $stack4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label2;

        $stack7 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.Plugin) $stack7;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Plugin)>(plugin);

        goto label1;

     label2:
        return;
    }

    private void visit(org.apache.maven.model.Build)
    {
        org.apache.maven.model.Build build;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.util.List $stack16;
        java.util.Iterator l4;
        java.lang.Object $stack19;
        org.apache.maven.model.Extension extension;
        java.lang.String org, val;
        boolean $stack18;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r2, $r3, $r4, $r5, $r6, $r7;
        org.apache.maven.model.BuildBase $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        build := @parameter0: org.apache.maven.model.Build;

        if build == null goto label7;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        $r1 = (org.apache.maven.model.BuildBase) build;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.BuildBase)>($r1);

        org = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getSourceDirectory()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke build.<org.apache.maven.model.Build: void setSourceDirectory(java.lang.String)>(val);

     label1:
        org = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getScriptSourceDirectory()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke build.<org.apache.maven.model.Build: void setScriptSourceDirectory(java.lang.String)>(val);

     label2:
        org = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestSourceDirectory()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke build.<org.apache.maven.model.Build: void setTestSourceDirectory(java.lang.String)>(val);

     label3:
        org = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getOutputDirectory()>();

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke build.<org.apache.maven.model.Build: void setOutputDirectory(java.lang.String)>(val);

     label4:
        org = virtualinvoke build.<org.apache.maven.model.Build: java.lang.String getTestOutputDirectory()>();

        $r6 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r6.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label5;

        virtualinvoke build.<org.apache.maven.model.Build: void setTestOutputDirectory(java.lang.String)>(val);

     label5:
        $stack16 = virtualinvoke build.<org.apache.maven.model.Build: java.util.List getExtensions()>();

        l4 = interfaceinvoke $stack16.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $stack18 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack18 == 0 goto label7;

        $stack19 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        extension = (org.apache.maven.model.Extension) $stack19;

        $r7 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r7.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Extension)>(extension);

        goto label6;

     label7:
        return;
    }

    private void visit(org.apache.maven.model.Resource)
    {
        org.apache.maven.model.Resource resource;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.util.List $stack4, $stack5;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        resource := @parameter0: org.apache.maven.model.Resource;

        if resource == null goto label3;

        $stack4 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getIncludes()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(java.util.List)>($stack4);

        $stack5 = virtualinvoke resource.<org.apache.maven.model.Resource: java.util.List getExcludes()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(java.util.List)>($stack5);

        org = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getDirectory()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke resource.<org.apache.maven.model.Resource: void setDirectory(java.lang.String)>(val);

     label1:
        org = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getTargetPath()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke resource.<org.apache.maven.model.Resource: void setTargetPath(java.lang.String)>(val);

     label2:
        org = virtualinvoke resource.<org.apache.maven.model.Resource: java.lang.String getFiltering()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke resource.<org.apache.maven.model.Resource: void setFiltering(java.lang.String)>(val);

     label3:
        return;
    }

    private void visit(org.apache.maven.model.Plugin)
    {
        org.apache.maven.model.Plugin plugin;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.Object $stack8, $stack24, $stack26;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack9;
        java.util.List $stack18, $stack21;
        boolean $stack23, $stack20;
        java.lang.String org, val;
        java.util.Iterator l4;
        org.apache.maven.model.PluginExecution execution;
        org.apache.maven.model.Dependency execution#18;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        plugin := @parameter0: org.apache.maven.model.Plugin;

        if plugin == null goto label9;

        org = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getInherited()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke plugin.<org.apache.maven.model.Plugin: void setInherited(java.lang.String)>(val);

     label1:
        $stack8 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.Object getConfiguration()>();

        $stack9 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack8;

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack9);

        org = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getGroupId()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke plugin.<org.apache.maven.model.Plugin: void setGroupId(java.lang.String)>(val);

     label2:
        org = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getArtifactId()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke plugin.<org.apache.maven.model.Plugin: void setArtifactId(java.lang.String)>(val);

     label3:
        org = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getVersion()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke plugin.<org.apache.maven.model.Plugin: void setVersion(java.lang.String)>(val);

     label4:
        org = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.lang.String getExtensions()>();

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label5;

        virtualinvoke plugin.<org.apache.maven.model.Plugin: void setExtensions(java.lang.String)>(val);

     label5:
        $stack18 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getExecutions()>();

        l4 = interfaceinvoke $stack18.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $stack20 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack20 == 0 goto label7;

        $stack26 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        execution = (org.apache.maven.model.PluginExecution) $stack26;

        $r6 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r6.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.PluginExecution)>(execution);

        goto label6;

     label7:
        $stack21 = virtualinvoke plugin.<org.apache.maven.model.Plugin: java.util.List getDependencies()>();

        l4 = interfaceinvoke $stack21.<java.util.List: java.util.Iterator iterator()>();

     label8:
        $stack23 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack23 == 0 goto label9;

        $stack24 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        execution#18 = (org.apache.maven.model.Dependency) $stack24;

        $r7 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r7.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Dependency)>(execution#18);

        goto label8;

     label9:
        return;
    }

    private void visit(org.apache.maven.model.PluginExecution)
    {
        org.apache.maven.model.PluginExecution execution;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.Object $stack6;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack7;
        java.util.List $stack12;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        execution := @parameter0: org.apache.maven.model.PluginExecution;

        if execution == null goto label4;

        org = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.lang.String getInherited()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke execution.<org.apache.maven.model.PluginExecution: void setInherited(java.lang.String)>(val);

     label1:
        $stack6 = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.lang.Object getConfiguration()>();

        $stack7 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack6;

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack7);

        org = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.lang.String getId()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke execution.<org.apache.maven.model.PluginExecution: void setId(java.lang.String)>(val);

     label2:
        org = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.lang.String getPhase()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke execution.<org.apache.maven.model.PluginExecution: void setPhase(java.lang.String)>(val);

     label3:
        $stack12 = virtualinvoke execution.<org.apache.maven.model.PluginExecution: java.util.List getGoals()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(java.util.List)>($stack12);

     label4:
        return;
    }

    private void visit(org.codehaus.plexus.util.xml.Xpp3Dom)
    {
        org.codehaus.plexus.util.xml.Xpp3Dom dom, $stack12;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String attr, org, val;
        java.lang.String[] i;
        int l, l6, i#12;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        dom := @parameter0: org.codehaus.plexus.util.xml.Xpp3Dom;

        if dom == null goto label6;

        org = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getValue()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: void setValue(java.lang.String)>(val);

     label1:
        i = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String[] getAttributeNames()>();

        l = lengthof i;

        l6 = 0;

     label2:
        if l6 >= l goto label4;

        attr = i[l6];

        org = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getAttribute(java.lang.String)>(attr);

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: void setAttribute(java.lang.String,java.lang.String)>(attr, val);

     label3:
        l6 = l6 + 1;

        goto label2;

     label4:
        i#12 = 0;

        l = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: int getChildCount()>();

     label5:
        if i#12 >= l goto label6;

        $stack12 = virtualinvoke dom.<org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom getChild(int)>(i#12);

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack12);

        i#12 = i#12 + 1;

        goto label5;

     label6:
        return;
    }

    private void visit(org.apache.maven.model.Extension)
    {
        org.apache.maven.model.Extension extension;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        extension := @parameter0: org.apache.maven.model.Extension;

        if extension == null goto label3;

        org = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getGroupId()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke extension.<org.apache.maven.model.Extension: void setGroupId(java.lang.String)>(val);

     label1:
        org = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getArtifactId()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke extension.<org.apache.maven.model.Extension: void setArtifactId(java.lang.String)>(val);

     label2:
        org = virtualinvoke extension.<org.apache.maven.model.Extension: java.lang.String getVersion()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke extension.<org.apache.maven.model.Extension: void setVersion(java.lang.String)>(val);

     label3:
        return;
    }

    private void visit(org.apache.maven.model.Profile)
    {
        org.apache.maven.model.Profile profile;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.Activation $stack6;
        org.apache.maven.model.BuildBase $stack7;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r2, $r3, $r4;
        org.apache.maven.model.ModelBase $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        profile := @parameter0: org.apache.maven.model.Profile;

        if profile == null goto label2;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        $r1 = (org.apache.maven.model.ModelBase) profile;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.ModelBase)>($r1);

        org = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke profile.<org.apache.maven.model.Profile: void setId(java.lang.String)>(val);

     label1:
        $stack6 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Activation)>($stack6);

        $stack7 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.BuildBase getBuild()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.BuildBase)>($stack7);

     label2:
        return;
    }

    private void visit(org.apache.maven.model.Activation)
    {
        org.apache.maven.model.Activation activation;
        java.lang.String org, val;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.ActivationOS $stack6;
        org.apache.maven.model.ActivationProperty $stack7;
        org.apache.maven.model.ActivationFile $stack8;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        activation := @parameter0: org.apache.maven.model.Activation;

        if activation == null goto label2;

        org = virtualinvoke activation.<org.apache.maven.model.Activation: java.lang.String getJdk()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke activation.<org.apache.maven.model.Activation: void setJdk(java.lang.String)>(val);

     label1:
        $stack6 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationOS getOs()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.ActivationOS)>($stack6);

        $stack7 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationProperty getProperty()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.ActivationProperty)>($stack7);

        $stack8 = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationFile getFile()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.ActivationFile)>($stack8);

     label2:
        return;
    }

    private void visit(org.apache.maven.model.ActivationOS)
    {
        org.apache.maven.model.ActivationOS activationOS;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        activationOS := @parameter0: org.apache.maven.model.ActivationOS;

        if activationOS == null goto label4;

        org = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getName()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: void setName(java.lang.String)>(val);

     label1:
        org = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getFamily()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: void setFamily(java.lang.String)>(val);

     label2:
        org = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getArch()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: void setArch(java.lang.String)>(val);

     label3:
        org = virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: java.lang.String getVersion()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke activationOS.<org.apache.maven.model.ActivationOS: void setVersion(java.lang.String)>(val);

     label4:
        return;
    }

    private void visit(org.apache.maven.model.ActivationProperty)
    {
        org.apache.maven.model.ActivationProperty activationProperty;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        activationProperty := @parameter0: org.apache.maven.model.ActivationProperty;

        if activationProperty == null goto label2;

        org = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getName()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: void setName(java.lang.String)>(val);

     label1:
        org = virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: java.lang.String getValue()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke activationProperty.<org.apache.maven.model.ActivationProperty: void setValue(java.lang.String)>(val);

     label2:
        return;
    }

    private void visit(org.apache.maven.model.ActivationFile)
    {
        org.apache.maven.model.ActivationFile activationFile;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        activationFile := @parameter0: org.apache.maven.model.ActivationFile;

        if activationFile == null goto label2;

        org = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getMissing()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: void setMissing(java.lang.String)>(val);

     label1:
        org = virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: java.lang.String getExists()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke activationFile.<org.apache.maven.model.ActivationFile: void setExists(java.lang.String)>(val);

     label2:
        return;
    }

    private void visit(org.apache.maven.model.ModelBase)
    {
        org.apache.maven.model.ModelBase modelBase;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.util.List $stack4, $stack8, $stack11, $stack14;
        org.apache.maven.model.DistributionManagement $stack5;
        java.util.Properties $stack6;
        org.apache.maven.model.DependencyManagement $stack7;
        boolean $stack10, $stack13, $stack16;
        org.apache.maven.model.Reporting $stack17;
        java.lang.Object $stack18, $stack20, $stack22;
        java.util.Iterator l2;
        org.apache.maven.model.Dependency dependency;
        org.apache.maven.model.Repository dependency#4;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        modelBase := @parameter0: org.apache.maven.model.ModelBase;

        if modelBase == null goto label7;

        $stack4 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getModules()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(java.util.List)>($stack4);

        $stack5 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DistributionManagement getDistributionManagement()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.DistributionManagement)>($stack5);

        $stack6 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.Properties getProperties()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(java.util.Properties)>($stack6);

        $stack7 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.DependencyManagement getDependencyManagement()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.DependencyManagement)>($stack7);

        $stack8 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getDependencies()>();

        l2 = interfaceinvoke $stack8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack10 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack10 == 0 goto label2;

        $stack22 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        dependency = (org.apache.maven.model.Dependency) $stack22;

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Dependency)>(dependency);

        goto label1;

     label2:
        $stack11 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getRepositories()>();

        l2 = interfaceinvoke $stack11.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack13 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label4;

        $stack20 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        dependency#4 = (org.apache.maven.model.Repository) $stack20;

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Repository)>(dependency#4);

        goto label3;

     label4:
        $stack14 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: java.util.List getPluginRepositories()>();

        l2 = interfaceinvoke $stack14.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $stack16 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack16 == 0 goto label6;

        $stack18 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        dependency#4 = (org.apache.maven.model.Repository) $stack18;

        $r6 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r6.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Repository)>(dependency#4);

        goto label5;

     label6:
        $stack17 = virtualinvoke modelBase.<org.apache.maven.model.ModelBase: org.apache.maven.model.Reporting getReporting()>();

        $r7 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r7.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Reporting)>($stack17);

     label7:
        return;
    }

    private void visit(org.apache.maven.model.DistributionManagement)
    {
        org.apache.maven.model.DistributionManagement distributionManagement;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.DeploymentRepository $stack4, $stack5;
        org.apache.maven.model.Site $stack6;
        java.lang.String org, val;
        org.apache.maven.model.Relocation $stack9;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r2, $r4, $r5, $r6;
        org.apache.maven.model.Repository $r1, $r3;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        distributionManagement := @parameter0: org.apache.maven.model.DistributionManagement;

        if distributionManagement == null goto label2;

        $stack4 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getRepository()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        $r1 = (org.apache.maven.model.Repository) $stack4;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Repository)>($r1);

        $stack5 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.DeploymentRepository getSnapshotRepository()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        $r3 = (org.apache.maven.model.Repository) $stack5;

        specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Repository)>($r3);

        $stack6 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Site getSite()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Site)>($stack6);

        org = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: java.lang.String getDownloadUrl()>();

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: void setDownloadUrl(java.lang.String)>(val);

     label1:
        $stack9 = virtualinvoke distributionManagement.<org.apache.maven.model.DistributionManagement: org.apache.maven.model.Relocation getRelocation()>();

        $r6 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r6.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Relocation)>($stack9);

     label2:
        return;
    }

    private void visit(org.apache.maven.model.Site)
    {
        org.apache.maven.model.Site site;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        site := @parameter0: org.apache.maven.model.Site;

        if site == null goto label4;

        org = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getId()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke site.<org.apache.maven.model.Site: void setId(java.lang.String)>(val);

     label1:
        org = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getName()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke site.<org.apache.maven.model.Site: void setName(java.lang.String)>(val);

     label2:
        org = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getUrl()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke site.<org.apache.maven.model.Site: void setUrl(java.lang.String)>(val);

     label3:
        org = virtualinvoke site.<org.apache.maven.model.Site: java.lang.String getChildSiteUrlInheritAppendPath()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke site.<org.apache.maven.model.Site: void setChildSiteUrlInheritAppendPath(java.lang.String)>(val);

     label4:
        return;
    }

    private void visit(org.apache.maven.model.Relocation)
    {
        org.apache.maven.model.Relocation relocation;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        relocation := @parameter0: org.apache.maven.model.Relocation;

        if relocation == null goto label4;

        org = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getGroupId()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke relocation.<org.apache.maven.model.Relocation: void setGroupId(java.lang.String)>(val);

     label1:
        org = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getArtifactId()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke relocation.<org.apache.maven.model.Relocation: void setArtifactId(java.lang.String)>(val);

     label2:
        org = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getVersion()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke relocation.<org.apache.maven.model.Relocation: void setVersion(java.lang.String)>(val);

     label3:
        org = virtualinvoke relocation.<org.apache.maven.model.Relocation: java.lang.String getMessage()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke relocation.<org.apache.maven.model.Relocation: void setMessage(java.lang.String)>(val);

     label4:
        return;
    }

    private void visit(org.apache.maven.model.DependencyManagement)
    {
        org.apache.maven.model.DependencyManagement dependencyManagement;
        java.util.List $stack4;
        java.util.Iterator l2;
        boolean $stack6;
        java.lang.Object $stack7;
        org.apache.maven.model.Dependency dependency;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        dependencyManagement := @parameter0: org.apache.maven.model.DependencyManagement;

        if dependencyManagement == null goto label2;

        $stack4 = virtualinvoke dependencyManagement.<org.apache.maven.model.DependencyManagement: java.util.List getDependencies()>();

        l2 = interfaceinvoke $stack4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $stack6 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack6 == 0 goto label2;

        $stack7 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        dependency = (org.apache.maven.model.Dependency) $stack7;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Dependency)>(dependency);

        goto label1;

     label2:
        return;
    }

    private void visit(org.apache.maven.model.Repository)
    {
        org.apache.maven.model.Repository repository;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.RepositoryPolicy $stack2, $stack3;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r2, $r3;
        org.apache.maven.model.RepositoryBase $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        repository := @parameter0: org.apache.maven.model.Repository;

        if repository == null goto label1;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        $r1 = (org.apache.maven.model.RepositoryBase) repository;

        specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.RepositoryBase)>($r1);

        $stack2 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getReleases()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.RepositoryPolicy)>($stack2);

        $stack3 = virtualinvoke repository.<org.apache.maven.model.Repository: org.apache.maven.model.RepositoryPolicy getSnapshots()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.RepositoryPolicy)>($stack3);

     label1:
        return;
    }

    private void visit(org.apache.maven.model.RepositoryBase)
    {
        org.apache.maven.model.RepositoryBase repositoryBase;
        java.lang.String orgId, intId, orgName, intName, orgUrl, intUrl, orgLayout, intLayout;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        repositoryBase := @parameter0: org.apache.maven.model.RepositoryBase;

        if repositoryBase == null goto label4;

        orgId = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getId()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intId = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgId);

        if orgId == intId goto label1;

        virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: void setId(java.lang.String)>(intId);

     label1:
        orgName = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getName()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intName = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgName);

        if orgName == intName goto label2;

        virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: void setName(java.lang.String)>(intName);

     label2:
        orgUrl = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getUrl()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intUrl = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgUrl);

        if orgUrl == intUrl goto label3;

        virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: void setUrl(java.lang.String)>(intUrl);

     label3:
        orgLayout = virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: java.lang.String getLayout()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intLayout = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgLayout);

        if orgLayout == intLayout goto label4;

        virtualinvoke repositoryBase.<org.apache.maven.model.RepositoryBase: void setLayout(java.lang.String)>(intLayout);

     label4:
        return;
    }

    private void visit(org.apache.maven.model.RepositoryPolicy)
    {
        org.apache.maven.model.RepositoryPolicy repositoryPolicy;
        java.lang.String orgEnabled, intEnabled, orgUpdatePolicy, intUpdatePolicy, orgChecksumPolicy, intChecksumPolicy;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        repositoryPolicy := @parameter0: org.apache.maven.model.RepositoryPolicy;

        if repositoryPolicy == null goto label3;

        orgEnabled = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getEnabled()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intEnabled = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgEnabled);

        if orgEnabled == intEnabled goto label1;

        virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: void setEnabled(java.lang.String)>(intEnabled);

     label1:
        orgUpdatePolicy = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getUpdatePolicy()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intUpdatePolicy = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgUpdatePolicy);

        if orgUpdatePolicy == intUpdatePolicy goto label2;

        virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: void setUpdatePolicy(java.lang.String)>(intUpdatePolicy);

     label2:
        orgChecksumPolicy = virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: java.lang.String getChecksumPolicy()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        intChecksumPolicy = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(orgChecksumPolicy);

        if orgChecksumPolicy == intChecksumPolicy goto label3;

        virtualinvoke repositoryPolicy.<org.apache.maven.model.RepositoryPolicy: void setChecksumPolicy(java.lang.String)>(intChecksumPolicy);

     label3:
        return;
    }

    private void visit(org.apache.maven.model.Dependency)
    {
        org.apache.maven.model.Dependency dependency;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.util.List $stack20;
        java.util.Iterator l4;
        java.lang.Object $stack25;
        org.apache.maven.model.Exclusion exclusion;
        java.lang.String org, val;
        boolean $stack22;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        dependency := @parameter0: org.apache.maven.model.Dependency;

        if dependency == null goto label10;

        org = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getGroupId()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label01;

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void setGroupId(java.lang.String)>(val);

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void clearManagementKey()>();

     label01:
        org = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getArtifactId()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label02;

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void setArtifactId(java.lang.String)>(val);

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void clearManagementKey()>();

     label02:
        org = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getVersion()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label03;

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void setVersion(java.lang.String)>(val);

     label03:
        org = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getType()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label04;

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void setType(java.lang.String)>(val);

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void clearManagementKey()>();

     label04:
        org = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getClassifier()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label05;

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void setClassifier(java.lang.String)>(val);

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void clearManagementKey()>();

     label05:
        org = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getScope()>();

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label06;

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void setScope(java.lang.String)>(val);

     label06:
        org = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getSystemPath()>();

        $r6 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r6.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label07;

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void setSystemPath(java.lang.String)>(val);

     label07:
        $stack20 = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.util.List getExclusions()>();

        l4 = interfaceinvoke $stack20.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $stack22 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack22 == 0 goto label09;

        $stack25 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        exclusion = (org.apache.maven.model.Exclusion) $stack25;

        $r7 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r7.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.Exclusion)>(exclusion);

        goto label08;

     label09:
        org = virtualinvoke dependency.<org.apache.maven.model.Dependency: java.lang.String getOptional()>();

        $r8 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r8.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label10;

        virtualinvoke dependency.<org.apache.maven.model.Dependency: void setOptional(java.lang.String)>(val);

     label10:
        return;
    }

    private void visit(org.apache.maven.model.Exclusion)
    {
        org.apache.maven.model.Exclusion exclusion;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        exclusion := @parameter0: org.apache.maven.model.Exclusion;

        if exclusion == null goto label2;

        org = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getGroupId()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke exclusion.<org.apache.maven.model.Exclusion: void setGroupId(java.lang.String)>(val);

     label1:
        org = virtualinvoke exclusion.<org.apache.maven.model.Exclusion: java.lang.String getArtifactId()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke exclusion.<org.apache.maven.model.Exclusion: void setArtifactId(java.lang.String)>(val);

     label2:
        return;
    }

    private void visit(org.apache.maven.model.Reporting)
    {
        org.apache.maven.model.Reporting reporting;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.util.List $stack10;
        java.util.Iterator l4;
        java.lang.Object $stack13;
        org.apache.maven.model.ReportPlugin plugin;
        java.lang.String org, val;
        boolean $stack12;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        reporting := @parameter0: org.apache.maven.model.Reporting;

        if reporting == null goto label4;

        org = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getExcludeDefaults()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke reporting.<org.apache.maven.model.Reporting: void setExcludeDefaults(java.lang.String)>(val);

     label1:
        org = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.lang.String getOutputDirectory()>();

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke reporting.<org.apache.maven.model.Reporting: void setOutputDirectory(java.lang.String)>(val);

     label2:
        $stack10 = virtualinvoke reporting.<org.apache.maven.model.Reporting: java.util.List getPlugins()>();

        l4 = interfaceinvoke $stack10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $stack12 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack12 == 0 goto label4;

        $stack13 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        plugin = (org.apache.maven.model.ReportPlugin) $stack13;

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.ReportPlugin)>(plugin);

        goto label3;

     label4:
        return;
    }

    private void visit(org.apache.maven.model.ReportPlugin)
    {
        org.apache.maven.model.ReportPlugin plugin;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.Object $stack8, $stack19;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack9;
        java.util.List $stack16;
        java.util.Iterator l4;
        org.apache.maven.model.ReportSet reportSet;
        java.lang.String org, val;
        boolean $stack18;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        plugin := @parameter0: org.apache.maven.model.ReportPlugin;

        if plugin == null goto label6;

        org = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.String getInherited()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: void setInherited(java.lang.String)>(val);

     label1:
        $stack8 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.Object getConfiguration()>();

        $stack9 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack8;

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack9);

        org = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.String getGroupId()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: void setGroupId(java.lang.String)>(val);

     label2:
        org = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.String getArtifactId()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label3;

        virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: void setArtifactId(java.lang.String)>(val);

     label3:
        org = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.lang.String getVersion()>();

        $r4 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r4.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label4;

        virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: void setVersion(java.lang.String)>(val);

     label4:
        $stack16 = virtualinvoke plugin.<org.apache.maven.model.ReportPlugin: java.util.List getReportSets()>();

        l4 = interfaceinvoke $stack16.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $stack18 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $stack18 == 0 goto label6;

        $stack19 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        reportSet = (org.apache.maven.model.ReportSet) $stack19;

        $r5 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r5.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.apache.maven.model.ReportSet)>(reportSet);

        goto label5;

     label6:
        return;
    }

    private void visit(org.apache.maven.model.ReportSet)
    {
        org.apache.maven.model.ReportSet reportSet;
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.Object $stack6;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack7;
        java.util.List $stack10;
        java.lang.String org, val;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0, $r1, $r2, $r3;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        reportSet := @parameter0: org.apache.maven.model.ReportSet;

        if reportSet == null goto label3;

        org = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getInherited()>();

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label1;

        virtualinvoke reportSet.<org.apache.maven.model.ReportSet: void setInherited(java.lang.String)>(val);

     label1:
        $stack6 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.Object getConfiguration()>();

        $stack7 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack6;

        $r1 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r1.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack7);

        org = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.lang.String getId()>();

        $r2 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        val = specialinvoke $r2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(org);

        if org == val goto label2;

        virtualinvoke reportSet.<org.apache.maven.model.ReportSet: void setId(java.lang.String)>(val);

     label2:
        $stack10 = virtualinvoke reportSet.<org.apache.maven.model.ReportSet: java.util.List getReports()>();

        $r3 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        specialinvoke $r3.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: void visit(java.util.List)>($stack10);

     label3:
        return;
    }

    private void visit(java.util.Properties)
    {
        java.util.Properties properties;
        java.util.Set $stack7;
        java.util.Iterator l2;
        boolean $stack9, $stack12;
        java.lang.Object $stack10, v;
        java.util.Map$Entry entry;
        java.lang.String value, inter;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        properties := @parameter0: java.util.Properties;

        if properties == null goto label3;

        $stack7 = virtualinvoke properties.<java.util.Properties: java.util.Set entrySet()>();

        l2 = interfaceinvoke $stack7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $stack9 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack9 == 0 goto label3;

        $stack10 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        entry = (java.util.Map$Entry) $stack10;

        v = interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object getValue()>();

        $stack12 = v instanceof java.lang.String;

        if $stack12 == 0 goto label2;

        value = (java.lang.String) v;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        inter = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(value);

        if value == inter goto label2;

        if inter == null goto label2;

        interfaceinvoke entry.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(inter);

     label2:
        goto label1;

     label3:
        return;
    }

    private void visit(java.util.List)
    {
        java.util.List list;
        java.util.ListIterator it;
        boolean $stack6;
        java.lang.Object $stack7;
        java.lang.String value, inter;
        StringVisitorModelInterpolator$ModelVisitor this;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        list := @parameter0: java.util.List;

        if list == null goto label3;

        it = interfaceinvoke list.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $stack6 = interfaceinvoke it.<java.util.ListIterator: boolean hasNext()>();

        if $stack6 == 0 goto label3;

        $stack7 = interfaceinvoke it.<java.util.ListIterator: java.lang.Object next()>();

        value = (java.lang.String) $stack7;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        inter = specialinvoke $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: java.lang.String interpolate(java.lang.String)>(value);

        if value == inter goto label2;

        interfaceinvoke it.<java.util.ListIterator: void set(java.lang.Object)>(inter);

     label2:
        goto label1;

     label3:
        return;
    }

    private java.lang.String interpolate(java.lang.String)
    {
        StringVisitorModelInterpolator$ModelVisitor this;
        java.lang.String value, $stack3;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$InnerInterpolator $stack2;
        org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor $r0;

        this := @this: StringVisitorModelInterpolator$ModelVisitor;

        value := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor) this;

        $stack2 = $r0.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$ModelVisitor: org.apache.maven.model.interpolation.StringVisitorModelInterpolator$InnerInterpolator interpolator>;

        $stack3 = interfaceinvoke $stack2.<org.apache.maven.model.interpolation.StringVisitorModelInterpolator$InnerInterpolator: java.lang.String interpolate(java.lang.String)>(value);

        return $stack3;
    }
}
