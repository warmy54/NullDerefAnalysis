public class Sub extends org.ooc.frontend.model.BinaryOperation
{

    public void <init>(org.ooc.frontend.model.Expression, org.ooc.frontend.model.Expression, org.ooc.frontend.model.tokens.Token)
    {
        Sub this;
        org.ooc.frontend.model.Expression left, right;
        org.ooc.frontend.model.tokens.Token token;

        this := @this: Sub;

        left := @parameter0: org.ooc.frontend.model.Expression;

        right := @parameter1: org.ooc.frontend.model.Expression;

        token := @parameter2: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.BinaryOperation: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>(left, right, token);

        return;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        Sub this;
        org.ooc.frontend.model.Sub $r0;

        this := @this: Sub;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Sub) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.Sub)>($r0);

        return;
    }

    public org.ooc.frontend.model.OpDecl$OpType getOpType()
    {
        org.ooc.frontend.model.OpDecl$OpType $stack1;
        Sub this;

        this := @this: Sub;

        $stack1 = <org.ooc.frontend.model.OpDecl$OpType: org.ooc.frontend.model.OpDecl$OpType SUB>;

        return $stack1;
    }

    public int getPriority()
    {
        Sub this;

        this := @this: Sub;

        return 20;
    }
}
