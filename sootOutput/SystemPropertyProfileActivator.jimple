public class SystemPropertyProfileActivator extends org.apache.maven.profiles.activation.DetectedProfileActivator implements org.codehaus.plexus.personality.plexus.lifecycle.phase.Contextualizable
{
    private java.util.Properties properties;

    public void <init>()
    {
        SystemPropertyProfileActivator this;

        this := @this: SystemPropertyProfileActivator;

        specialinvoke this.<org.apache.maven.profiles.activation.DetectedProfileActivator: void <init>()>();

        return;
    }

    public void contextualize(org.codehaus.plexus.context.Context) throws org.codehaus.plexus.context.ContextException
    {
        SystemPropertyProfileActivator this;
        org.codehaus.plexus.context.Context context;
        java.lang.Object $stack2;
        java.util.Properties $stack3;
        org.apache.maven.profiles.activation.SystemPropertyProfileActivator $r0;

        this := @this: SystemPropertyProfileActivator;

        context := @parameter0: org.codehaus.plexus.context.Context;

        $stack2 = interfaceinvoke context.<org.codehaus.plexus.context.Context: java.lang.Object get(java.lang.Object)>("SystemProperties");

        $stack3 = (java.util.Properties) $stack2;

        $r0 = (org.apache.maven.profiles.activation.SystemPropertyProfileActivator) this;

        $r0.<org.apache.maven.profiles.activation.SystemPropertyProfileActivator: java.util.Properties properties> = $stack3;

        return;
    }

    protected boolean canDetectActivation(org.apache.maven.model.Profile)
    {
        org.apache.maven.model.Profile profile;
        org.apache.maven.model.Activation $stack2, $stack3;
        org.apache.maven.model.ActivationProperty $stack4;
        SystemPropertyProfileActivator this;
        boolean $stack5;

        this := @this: SystemPropertyProfileActivator;

        profile := @parameter0: org.apache.maven.model.Profile;

        $stack2 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        if $stack2 == null goto label1;

        $stack3 = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        $stack4 = virtualinvoke $stack3.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationProperty getProperty()>();

        if $stack4 == null goto label1;

        $stack5 = 1;

        goto label2;

     label1:
        $stack5 = 0;

     label2:
        return $stack5;
    }

    public boolean isActive(org.apache.maven.model.Profile) throws org.apache.maven.profiles.activation.ProfileActivationException
    {
        org.apache.maven.model.Profile profile;
        org.apache.maven.model.Activation activation;
        org.apache.maven.model.ActivationProperty property;
        boolean $stack13, $stack17, $stack20, result, reverseName, reverseValue, $stack22, $stack19;
        SystemPropertyProfileActivator this;
        java.util.Properties $stack14;
        java.lang.String sysValue, $stack35, $stack38, name, propValue;
        java.lang.StringBuilder $stack34, $stack36, $stack37, $u0;
        org.apache.maven.profiles.activation.ProfileActivationException $u1;
        java.lang.Throwable $r0;
        org.apache.maven.profiles.activation.SystemPropertyProfileActivator $r1;

        this := @this: SystemPropertyProfileActivator;

        profile := @parameter0: org.apache.maven.model.Profile;

        activation = virtualinvoke profile.<org.apache.maven.model.Profile: org.apache.maven.model.Activation getActivation()>();

        property = virtualinvoke activation.<org.apache.maven.model.Activation: org.apache.maven.model.ActivationProperty getProperty()>();

        if property == null goto label11;

        name = virtualinvoke property.<org.apache.maven.model.ActivationProperty: java.lang.String getName()>();

        reverseName = 0;

        if name != null goto label01;

        $u1 = new org.apache.maven.profiles.activation.ProfileActivationException;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack34 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The property name is required to activate the profile \'");

        $stack35 = virtualinvoke profile.<org.apache.maven.model.Profile: java.lang.String getId()>();

        $stack36 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35);

        $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $stack38 = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u1.<org.apache.maven.profiles.activation.ProfileActivationException: void <init>(java.lang.String)>($stack38);

        $r0 = (java.lang.Throwable) $u1;

        throw $r0;

     label01:
        $stack13 = virtualinvoke name.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $stack13 == 0 goto label02;

        reverseName = 1;

        name = virtualinvoke name.<java.lang.String: java.lang.String substring(int)>(1);

     label02:
        $r1 = (org.apache.maven.profiles.activation.SystemPropertyProfileActivator) this;

        $stack14 = $r1.<org.apache.maven.profiles.activation.SystemPropertyProfileActivator: java.util.Properties properties>;

        sysValue = virtualinvoke $stack14.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(name);

        propValue = virtualinvoke property.<org.apache.maven.model.ActivationProperty: java.lang.String getValue()>();

        $stack17 = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(propValue);

        if $stack17 == 0 goto label07;

        reverseValue = 0;

        $stack20 = virtualinvoke propValue.<java.lang.String: boolean startsWith(java.lang.String)>("!");

        if $stack20 == 0 goto label03;

        reverseValue = 1;

        propValue = virtualinvoke propValue.<java.lang.String: java.lang.String substring(int)>(1);

     label03:
        result = virtualinvoke propValue.<java.lang.String: boolean equals(java.lang.Object)>(sysValue);

        if reverseValue == 0 goto label06;

        if result != 0 goto label04;

        $stack22 = 1;

        goto label05;

     label04:
        $stack22 = 0;

     label05:
        return $stack22;

     label06:
        return result;

     label07:
        reverseValue = staticinvoke <org.codehaus.plexus.util.StringUtils: boolean isNotEmpty(java.lang.String)>(sysValue);

        if reverseName == 0 goto label10;

        if reverseValue != 0 goto label08;

        $stack19 = 1;

        goto label09;

     label08:
        $stack19 = 0;

     label09:
        return $stack19;

     label10:
        return reverseValue;

     label11:
        return 0;
    }
}
