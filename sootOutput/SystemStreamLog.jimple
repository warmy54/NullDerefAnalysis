public class SystemStreamLog extends java.lang.Object implements org.apache.maven.plugin.logging.Log
{

    public void <init>()
    {
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void debug(java.lang.CharSequence)
    {
        SystemStreamLog this;
        java.lang.CharSequence content;
        org.apache.maven.plugin.logging.SystemStreamLog $r0;

        this := @this: SystemStreamLog;

        content := @parameter0: java.lang.CharSequence;

        $r0 = (org.apache.maven.plugin.logging.SystemStreamLog) this;

        specialinvoke $r0.<org.apache.maven.plugin.logging.SystemStreamLog: void print(java.lang.String,java.lang.CharSequence)>("debug", content);

        return;
    }

    public void debug(java.lang.CharSequence, java.lang.Throwable)
    {
        SystemStreamLog this;
        java.lang.CharSequence content;
        java.lang.Throwable error;
        org.apache.maven.plugin.logging.SystemStreamLog $r0;

        this := @this: SystemStreamLog;

        content := @parameter0: java.lang.CharSequence;

        error := @parameter1: java.lang.Throwable;

        $r0 = (org.apache.maven.plugin.logging.SystemStreamLog) this;

        specialinvoke $r0.<org.apache.maven.plugin.logging.SystemStreamLog: void print(java.lang.String,java.lang.CharSequence,java.lang.Throwable)>("debug", content, error);

        return;
    }

    public void debug(java.lang.Throwable)
    {
        SystemStreamLog this;
        java.lang.Throwable error;
        org.apache.maven.plugin.logging.SystemStreamLog $r0;

        this := @this: SystemStreamLog;

        error := @parameter0: java.lang.Throwable;

        $r0 = (org.apache.maven.plugin.logging.SystemStreamLog) this;

        specialinvoke $r0.<org.apache.maven.plugin.logging.SystemStreamLog: void print(java.lang.String,java.lang.Throwable)>("debug", error);

        return;
    }

    public void info(java.lang.CharSequence)
    {
        SystemStreamLog this;
        java.lang.CharSequence content;
        org.apache.maven.plugin.logging.SystemStreamLog $r0;

        this := @this: SystemStreamLog;

        content := @parameter0: java.lang.CharSequence;

        $r0 = (org.apache.maven.plugin.logging.SystemStreamLog) this;

        specialinvoke $r0.<org.apache.maven.plugin.logging.SystemStreamLog: void print(java.lang.String,java.lang.CharSequence)>("info", content);

        return;
    }

    public void info(java.lang.CharSequence, java.lang.Throwable)
    {
        SystemStreamLog this;
        java.lang.CharSequence content;
        java.lang.Throwable error;
        org.apache.maven.plugin.logging.SystemStreamLog $r0;

        this := @this: SystemStreamLog;

        content := @parameter0: java.lang.CharSequence;

        error := @parameter1: java.lang.Throwable;

        $r0 = (org.apache.maven.plugin.logging.SystemStreamLog) this;

        specialinvoke $r0.<org.apache.maven.plugin.logging.SystemStreamLog: void print(java.lang.String,java.lang.CharSequence,java.lang.Throwable)>("info", content, error);

        return;
    }

    public void info(java.lang.Throwable)
    {
        SystemStreamLog this;
        java.lang.Throwable error;
        org.apache.maven.plugin.logging.SystemStreamLog $r0;

        this := @this: SystemStreamLog;

        error := @parameter0: java.lang.Throwable;

        $r0 = (org.apache.maven.plugin.logging.SystemStreamLog) this;

        specialinvoke $r0.<org.apache.maven.plugin.logging.SystemStreamLog: void print(java.lang.String,java.lang.Throwable)>("info", error);

        return;
    }

    public void warn(java.lang.CharSequence)
    {
        SystemStreamLog this;
        java.lang.CharSequence content;
        org.apache.maven.plugin.logging.SystemStreamLog $r0;

        this := @this: SystemStreamLog;

        content := @parameter0: java.lang.CharSequence;

        $r0 = (org.apache.maven.plugin.logging.SystemStreamLog) this;

        specialinvoke $r0.<org.apache.maven.plugin.logging.SystemStreamLog: void print(java.lang.String,java.lang.CharSequence)>("warn", content);

        return;
    }

    public void warn(java.lang.CharSequence, java.lang.Throwable)
    {
        SystemStreamLog this;
        java.lang.CharSequence content;
        java.lang.Throwable error;
        org.apache.maven.plugin.logging.SystemStreamLog $r0;

        this := @this: SystemStreamLog;

        content := @parameter0: java.lang.CharSequence;

        error := @parameter1: java.lang.Throwable;

        $r0 = (org.apache.maven.plugin.logging.SystemStreamLog) this;

        specialinvoke $r0.<org.apache.maven.plugin.logging.SystemStreamLog: void print(java.lang.String,java.lang.CharSequence,java.lang.Throwable)>("warn", content, error);

        return;
    }

    public void warn(java.lang.Throwable)
    {
        SystemStreamLog this;
        java.lang.Throwable error;
        org.apache.maven.plugin.logging.SystemStreamLog $r0;

        this := @this: SystemStreamLog;

        error := @parameter0: java.lang.Throwable;

        $r0 = (org.apache.maven.plugin.logging.SystemStreamLog) this;

        specialinvoke $r0.<org.apache.maven.plugin.logging.SystemStreamLog: void print(java.lang.String,java.lang.Throwable)>("warn", error);

        return;
    }

    public void error(java.lang.CharSequence)
    {
        java.lang.StringBuilder $stack2, $stack4, $stack6;
        java.io.PrintStream $stack3;
        java.lang.CharSequence content;
        java.lang.String $stack5, $stack7;
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        content := @parameter0: java.lang.CharSequence;

        $stack3 = <java.lang.System: java.io.PrintStream err>;

        $stack2 = new java.lang.StringBuilder;

        specialinvoke $stack2.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[error] ");

        $stack5 = interfaceinvoke content.<java.lang.CharSequence: java.lang.String toString()>();

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack3.<java.io.PrintStream: void println(java.lang.String)>($stack7);

        return;
    }

    public void error(java.lang.CharSequence, java.lang.Throwable)
    {
        java.io.StringWriter $stack5;
        java.io.PrintWriter $stack6;
        java.lang.Throwable error;
        java.lang.StringBuilder $stack7, $stack9, $stack11, $stack13, $stack15, $stack17;
        java.io.PrintStream $stack8;
        java.lang.CharSequence content;
        java.lang.String $stack10, $stack12, $stack14, $stack16, $stack18;
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        content := @parameter0: java.lang.CharSequence;

        error := @parameter1: java.lang.Throwable;

        $stack5 = new java.io.StringWriter;

        specialinvoke $stack5.<java.io.StringWriter: void <init>()>();

        $stack6 = new java.io.PrintWriter;

        specialinvoke $stack6.<java.io.PrintWriter: void <init>(java.io.Writer)>($stack5);

        virtualinvoke error.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($stack6);

        $stack8 = <java.lang.System: java.io.PrintStream err>;

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[error] ");

        $stack10 = interfaceinvoke content.<java.lang.CharSequence: java.lang.String toString()>();

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack10);

        $stack12 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        $stack15 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack5.<java.io.StringWriter: java.lang.String toString()>();

        $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16);

        $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack8.<java.io.PrintStream: void println(java.lang.String)>($stack18);

        return;
    }

    public void error(java.lang.Throwable)
    {
        java.io.StringWriter $stack4;
        java.io.PrintWriter $stack5;
        java.lang.Throwable error;
        java.lang.StringBuilder $stack6, $stack8, $stack10;
        java.io.PrintStream $stack7;
        java.lang.String $stack9, $stack11;
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        error := @parameter0: java.lang.Throwable;

        $stack4 = new java.io.StringWriter;

        specialinvoke $stack4.<java.io.StringWriter: void <init>()>();

        $stack5 = new java.io.PrintWriter;

        specialinvoke $stack5.<java.io.PrintWriter: void <init>(java.io.Writer)>($stack4);

        virtualinvoke error.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($stack5);

        $stack7 = <java.lang.System: java.io.PrintStream err>;

        $stack6 = new java.lang.StringBuilder;

        specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[error] ");

        $stack9 = virtualinvoke $stack4.<java.io.StringWriter: java.lang.String toString()>();

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack9);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack7.<java.io.PrintStream: void println(java.lang.String)>($stack11);

        return;
    }

    public boolean isDebugEnabled()
    {
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        return 0;
    }

    public boolean isInfoEnabled()
    {
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        return 1;
    }

    public boolean isWarnEnabled()
    {
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        return 1;
    }

    public boolean isErrorEnabled()
    {
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        return 1;
    }

    private void print(java.lang.String, java.lang.CharSequence)
    {
        java.lang.StringBuilder $stack3, $stack5, $stack6, $stack7, $stack9;
        java.io.PrintStream $stack4;
        java.lang.String prefix, $stack8, $stack10;
        java.lang.CharSequence content;
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        prefix := @parameter0: java.lang.String;

        content := @parameter1: java.lang.CharSequence;

        $stack4 = <java.lang.System: java.io.PrintStream out>;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>()>();

        $stack5 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $stack8 = interfaceinvoke content.<java.lang.CharSequence: java.lang.String toString()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack4.<java.io.PrintStream: void println(java.lang.String)>($stack10);

        return;
    }

    private void print(java.lang.String, java.lang.Throwable)
    {
        java.io.StringWriter $stack5;
        java.io.PrintWriter $stack6;
        java.lang.Throwable error;
        java.lang.StringBuilder $stack7, $stack9, $stack10, $stack11, $stack13;
        java.io.PrintStream $stack8;
        java.lang.String prefix, $stack12, $stack14;
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        prefix := @parameter0: java.lang.String;

        error := @parameter1: java.lang.Throwable;

        $stack5 = new java.io.StringWriter;

        specialinvoke $stack5.<java.io.StringWriter: void <init>()>();

        $stack6 = new java.io.PrintWriter;

        specialinvoke $stack6.<java.io.PrintWriter: void <init>(java.io.Writer)>($stack5);

        virtualinvoke error.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($stack6);

        $stack8 = <java.lang.System: java.io.PrintStream out>;

        $stack7 = new java.lang.StringBuilder;

        specialinvoke $stack7.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $stack12 = virtualinvoke $stack5.<java.io.StringWriter: java.lang.String toString()>();

        $stack13 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack12);

        $stack14 = virtualinvoke $stack13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack8.<java.io.PrintStream: void println(java.lang.String)>($stack14);

        return;
    }

    private void print(java.lang.String, java.lang.CharSequence, java.lang.Throwable)
    {
        java.io.StringWriter $stack6;
        java.io.PrintWriter $stack7;
        java.lang.Throwable error;
        java.lang.StringBuilder $stack8, $stack10, $stack11, $stack12, $stack14, $stack16, $stack18, $stack20;
        java.io.PrintStream $stack9;
        java.lang.String prefix, $stack13, $stack15, $stack17, $stack19, $stack21;
        java.lang.CharSequence content;
        SystemStreamLog this;

        this := @this: SystemStreamLog;

        prefix := @parameter0: java.lang.String;

        content := @parameter1: java.lang.CharSequence;

        error := @parameter2: java.lang.Throwable;

        $stack6 = new java.io.StringWriter;

        specialinvoke $stack6.<java.io.StringWriter: void <init>()>();

        $stack7 = new java.io.PrintWriter;

        specialinvoke $stack7.<java.io.PrintWriter: void <init>(java.io.Writer)>($stack6);

        virtualinvoke error.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($stack7);

        $stack9 = <java.lang.System: java.io.PrintStream out>;

        $stack8 = new java.lang.StringBuilder;

        specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>();

        $stack10 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(prefix);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $stack13 = interfaceinvoke content.<java.lang.CharSequence: java.lang.String toString()>();

        $stack14 = virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack13);

        $stack15 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        $stack16 = virtualinvoke $stack14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack15);

        $stack17 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $stack19 = virtualinvoke $stack6.<java.io.StringWriter: java.lang.String toString()>();

        $stack20 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack19);

        $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $stack9.<java.io.PrintStream: void println(java.lang.String)>($stack21);

        return;
    }
}
