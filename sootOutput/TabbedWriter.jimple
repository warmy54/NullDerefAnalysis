public class TabbedWriter extends java.lang.Object implements java.lang.Appendable
{
    protected java.lang.Appendable appendable;
    protected int tabLevel;
    protected java.lang.String tab;

    public void <init>(java.lang.Appendable)
    {
        TabbedWriter this;
        java.lang.Appendable appendable;
        org.ooc.backend.TabbedWriter $r0, $r1;

        this := @this: TabbedWriter;

        appendable := @parameter0: java.lang.Appendable;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $r0.<org.ooc.backend.TabbedWriter: java.lang.String tab> = "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t";

        $r1 = (org.ooc.backend.TabbedWriter) this;

        $r1.<org.ooc.backend.TabbedWriter: java.lang.Appendable appendable> = appendable;

        return;
    }

    public void close() throws java.io.IOException
    {
        TabbedWriter this;
        java.lang.Appendable $stack1, $stack3;
        boolean $stack2;
        java.io.Writer $stack4;
        org.ooc.backend.TabbedWriter $r0, $r1;

        this := @this: TabbedWriter;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack1 = $r0.<org.ooc.backend.TabbedWriter: java.lang.Appendable appendable>;

        $stack2 = $stack1 instanceof java.io.Writer;

        if $stack2 == 0 goto label1;

        $r1 = (org.ooc.backend.TabbedWriter) this;

        $stack3 = $r1.<org.ooc.backend.TabbedWriter: java.lang.Appendable appendable>;

        $stack4 = (java.io.Writer) $stack3;

        virtualinvoke $stack4.<java.io.Writer: void close()>();

     label1:
        return;
    }

    public org.ooc.backend.TabbedWriter append(char) throws java.io.IOException
    {
        TabbedWriter this;
        char c;
        java.lang.Appendable $stack2;
        org.ooc.backend.TabbedWriter $r0, $r1;

        this := @this: TabbedWriter;

        c := @parameter0: char;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack2 = $r0.<org.ooc.backend.TabbedWriter: java.lang.Appendable appendable>;

        interfaceinvoke $stack2.<java.lang.Appendable: java.lang.Appendable append(char)>(c);

        $r1 = (org.ooc.backend.TabbedWriter) this;

        return $r1;
    }

    public org.ooc.backend.TabbedWriter append(java.lang.String) throws java.io.IOException
    {
        TabbedWriter this;
        java.lang.String s;
        java.lang.Appendable $stack2;
        org.ooc.backend.TabbedWriter $r0, $r1;

        this := @this: TabbedWriter;

        s := @parameter0: java.lang.String;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack2 = $r0.<org.ooc.backend.TabbedWriter: java.lang.Appendable appendable>;

        interfaceinvoke $stack2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(s);

        $r1 = (org.ooc.backend.TabbedWriter) this;

        return $r1;
    }

    public org.ooc.backend.TabbedWriter writeTabs() throws java.io.IOException
    {
        TabbedWriter this;
        int $stack1;
        java.lang.String $stack2;
        java.lang.Appendable $stack3;
        org.ooc.backend.TabbedWriter $r0, $r1, $r2, $r3;

        this := @this: TabbedWriter;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack3 = $r0.<org.ooc.backend.TabbedWriter: java.lang.Appendable appendable>;

        $r1 = (org.ooc.backend.TabbedWriter) this;

        $stack2 = $r1.<org.ooc.backend.TabbedWriter: java.lang.String tab>;

        $r2 = (org.ooc.backend.TabbedWriter) this;

        $stack1 = $r2.<org.ooc.backend.TabbedWriter: int tabLevel>;

        interfaceinvoke $stack3.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>($stack2, 0, $stack1);

        $r3 = (org.ooc.backend.TabbedWriter) this;

        return $r3;
    }

    public org.ooc.backend.TabbedWriter newUntabbedLine() throws java.io.IOException
    {
        TabbedWriter this;
        java.lang.Appendable $stack1;
        org.ooc.backend.TabbedWriter $r0, $r1;

        this := @this: TabbedWriter;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack1 = $r0.<org.ooc.backend.TabbedWriter: java.lang.Appendable appendable>;

        interfaceinvoke $stack1.<java.lang.Appendable: java.lang.Appendable append(char)>(10);

        $r1 = (org.ooc.backend.TabbedWriter) this;

        return $r1;
    }

    public org.ooc.backend.TabbedWriter nl() throws java.io.IOException
    {
        TabbedWriter this;
        org.ooc.backend.TabbedWriter $stack1, $stack2, $r0;

        this := @this: TabbedWriter;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack1 = virtualinvoke $r0.<org.ooc.backend.TabbedWriter: org.ooc.backend.TabbedWriter newUntabbedLine()>();

        $stack2 = virtualinvoke $stack1.<org.ooc.backend.TabbedWriter: org.ooc.backend.TabbedWriter writeTabs()>();

        return $stack2;
    }

    public org.ooc.backend.TabbedWriter newLine() throws java.io.IOException
    {
        TabbedWriter this;
        org.ooc.backend.TabbedWriter $stack1, $stack2, $r0;

        this := @this: TabbedWriter;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack1 = virtualinvoke $r0.<org.ooc.backend.TabbedWriter: org.ooc.backend.TabbedWriter newUntabbedLine()>();

        $stack2 = virtualinvoke $stack1.<org.ooc.backend.TabbedWriter: org.ooc.backend.TabbedWriter writeTabs()>();

        return $stack2;
    }

    public org.ooc.backend.TabbedWriter tab()
    {
        TabbedWriter this;
        int $stack1, $stack2;
        org.ooc.backend.TabbedWriter $r0, $r1, $r2;

        this := @this: TabbedWriter;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack1 = $r0.<org.ooc.backend.TabbedWriter: int tabLevel>;

        $stack2 = $stack1 + 1;

        $r1 = (org.ooc.backend.TabbedWriter) this;

        $r1.<org.ooc.backend.TabbedWriter: int tabLevel> = $stack2;

        $r2 = (org.ooc.backend.TabbedWriter) this;

        return $r2;
    }

    public org.ooc.backend.TabbedWriter untab()
    {
        TabbedWriter this;
        int $stack1, $stack2;
        org.ooc.backend.TabbedWriter $r0, $r1, $r2;

        this := @this: TabbedWriter;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack1 = $r0.<org.ooc.backend.TabbedWriter: int tabLevel>;

        $stack2 = $stack1 - 1;

        $r1 = (org.ooc.backend.TabbedWriter) this;

        $r1.<org.ooc.backend.TabbedWriter: int tabLevel> = $stack2;

        $r2 = (org.ooc.backend.TabbedWriter) this;

        return $r2;
    }

    public org.ooc.backend.TabbedWriter append(java.lang.CharSequence) throws java.io.IOException
    {
        TabbedWriter this;
        java.lang.CharSequence csq;
        java.lang.Appendable $stack2;
        org.ooc.backend.TabbedWriter $r0, $r1;

        this := @this: TabbedWriter;

        csq := @parameter0: java.lang.CharSequence;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack2 = $r0.<org.ooc.backend.TabbedWriter: java.lang.Appendable appendable>;

        interfaceinvoke $stack2.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>(csq);

        $r1 = (org.ooc.backend.TabbedWriter) this;

        return $r1;
    }

    public org.ooc.backend.TabbedWriter append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        TabbedWriter this;
        java.lang.CharSequence csq;
        int start, end;
        java.lang.Appendable $stack4;
        org.ooc.backend.TabbedWriter $r0, $r1;

        this := @this: TabbedWriter;

        csq := @parameter0: java.lang.CharSequence;

        start := @parameter1: int;

        end := @parameter2: int;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack4 = $r0.<org.ooc.backend.TabbedWriter: java.lang.Appendable appendable>;

        interfaceinvoke $stack4.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>(csq, start, end);

        $r1 = (org.ooc.backend.TabbedWriter) this;

        return $r1;
    }

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        TabbedWriter this;
        char l1;
        org.ooc.backend.TabbedWriter $stack2, $r0;
        java.lang.Appendable $r1;

        this := @this: TabbedWriter;

        l1 := @parameter0: char;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack2 = virtualinvoke $r0.<org.ooc.backend.TabbedWriter: org.ooc.backend.TabbedWriter append(char)>(l1);

        $r1 = (java.lang.Appendable) $stack2;

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        TabbedWriter this;
        java.lang.CharSequence l1;
        int l2, l3;
        org.ooc.backend.TabbedWriter $stack4, $r0;
        java.lang.Appendable $r1;

        this := @this: TabbedWriter;

        l1 := @parameter0: java.lang.CharSequence;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack4 = virtualinvoke $r0.<org.ooc.backend.TabbedWriter: org.ooc.backend.TabbedWriter append(java.lang.CharSequence,int,int)>(l1, l2, l3);

        $r1 = (java.lang.Appendable) $stack4;

        return $r1;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        TabbedWriter this;
        java.lang.CharSequence l1;
        org.ooc.backend.TabbedWriter $stack2, $r0;
        java.lang.Appendable $r1;

        this := @this: TabbedWriter;

        l1 := @parameter0: java.lang.CharSequence;

        $r0 = (org.ooc.backend.TabbedWriter) this;

        $stack2 = virtualinvoke $r0.<org.ooc.backend.TabbedWriter: org.ooc.backend.TabbedWriter append(java.lang.CharSequence)>(l1);

        $r1 = (java.lang.Appendable) $stack2;

        return $r1;
    }
}
