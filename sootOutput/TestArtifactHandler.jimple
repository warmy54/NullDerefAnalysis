class TestArtifactHandler extends java.lang.Object implements org.apache.maven.artifact.handler.ArtifactHandler
{
    private java.lang.String type;
    private java.lang.String extension;

    public void <init>(java.lang.String)
    {
        TestArtifactHandler this;
        java.lang.String type;
        org.apache.maven.repository.TestArtifactHandler $r0;

        this := @this: TestArtifactHandler;

        type := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.repository.TestArtifactHandler) this;

        specialinvoke $r0.<org.apache.maven.repository.TestArtifactHandler: void <init>(java.lang.String,java.lang.String)>(type, type);

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        TestArtifactHandler this;
        java.lang.String type, extension;
        org.apache.maven.repository.TestArtifactHandler $r0, $r1;

        this := @this: TestArtifactHandler;

        type := @parameter0: java.lang.String;

        extension := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.repository.TestArtifactHandler) this;

        $r0.<org.apache.maven.repository.TestArtifactHandler: java.lang.String type> = type;

        $r1 = (org.apache.maven.repository.TestArtifactHandler) this;

        $r1.<org.apache.maven.repository.TestArtifactHandler: java.lang.String extension> = extension;

        return;
    }

    public java.lang.String getClassifier()
    {
        TestArtifactHandler this;

        this := @this: TestArtifactHandler;

        return null;
    }

    public java.lang.String getDirectory()
    {
        TestArtifactHandler this;
        java.lang.String $stack2, $stack5;
        java.lang.StringBuilder $stack3, $stack4, $u0;
        org.apache.maven.repository.TestArtifactHandler $r0;

        this := @this: TestArtifactHandler;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.apache.maven.repository.TestArtifactHandler) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.repository.TestArtifactHandler: java.lang.String getPackaging()>();

        $stack3 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack2);

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s");

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack5;
    }

    public java.lang.String getExtension()
    {
        TestArtifactHandler this;
        java.lang.String $stack1;
        org.apache.maven.repository.TestArtifactHandler $r0;

        this := @this: TestArtifactHandler;

        $r0 = (org.apache.maven.repository.TestArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.repository.TestArtifactHandler: java.lang.String extension>;

        return $stack1;
    }

    public java.lang.String getLanguage()
    {
        TestArtifactHandler this;

        this := @this: TestArtifactHandler;

        return "java";
    }

    public java.lang.String getPackaging()
    {
        TestArtifactHandler this;
        java.lang.String $stack1;
        org.apache.maven.repository.TestArtifactHandler $r0;

        this := @this: TestArtifactHandler;

        $r0 = (org.apache.maven.repository.TestArtifactHandler) this;

        $stack1 = $r0.<org.apache.maven.repository.TestArtifactHandler: java.lang.String type>;

        return $stack1;
    }

    public boolean isAddedToClasspath()
    {
        TestArtifactHandler this;

        this := @this: TestArtifactHandler;

        return 1;
    }

    public boolean isIncludesDependencies()
    {
        TestArtifactHandler this;

        this := @this: TestArtifactHandler;

        return 0;
    }
}
