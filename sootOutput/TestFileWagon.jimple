public class TestFileWagon extends org.apache.maven.wagon.providers.file.FileWagon
{
    private org.apache.maven.artifact.resolver.TestTransferListener testTransferListener;
    private boolean insideGet;

    public void <init>()
    {
        TestFileWagon this;

        this := @this: TestFileWagon;

        specialinvoke this.<org.apache.maven.wagon.providers.file.FileWagon: void <init>()>();

        return;
    }

    protected void getTransfer(org.apache.maven.wagon.resource.Resource, java.io.File, java.io.InputStream, boolean, int) throws org.apache.maven.wagon.TransferFailedException
    {
        TestFileWagon this;
        java.lang.StringBuilder $stack7, $stack9, $u0;
        org.apache.maven.wagon.resource.Resource resource;
        java.lang.String $stack8, $stack10;
        java.io.File destination;
        java.io.InputStream input;
        boolean closeInput;
        int maxSize;
        org.apache.maven.artifact.resolver.TestFileWagon $r0;

        this := @this: TestFileWagon;

        resource := @parameter0: org.apache.maven.wagon.resource.Resource;

        destination := @parameter1: java.io.File;

        input := @parameter2: java.io.InputStream;

        closeInput := @parameter3: boolean;

        maxSize := @parameter4: int;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack7 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getTransfer ");

        $stack8 = virtualinvoke resource.<org.apache.maven.wagon.resource.Resource: java.lang.String getName()>();

        $stack9 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = (org.apache.maven.artifact.resolver.TestFileWagon) this;

        specialinvoke $r0.<org.apache.maven.artifact.resolver.TestFileWagon: void addTransfer(java.lang.String)>($stack10);

        specialinvoke this.<org.apache.maven.wagon.providers.file.FileWagon: void getTransfer(org.apache.maven.wagon.resource.Resource,java.io.File,java.io.InputStream,boolean,int)>(resource, destination, input, closeInput, maxSize);

        return;
    }

    public void get(java.lang.String, java.io.File) throws org.apache.maven.wagon.TransferFailedException, org.apache.maven.wagon.ResourceDoesNotExistException, org.apache.maven.wagon.authorization.AuthorizationException
    {
        TestFileWagon this;
        java.lang.StringBuilder $stack4, $stack5, $u0;
        java.lang.String resourceName, $stack6;
        java.io.File destination;
        org.apache.maven.artifact.resolver.TestFileWagon $r0, $r1, $r2;

        this := @this: TestFileWagon;

        resourceName := @parameter0: java.lang.String;

        destination := @parameter1: java.io.File;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("get ");

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0 = (org.apache.maven.artifact.resolver.TestFileWagon) this;

        specialinvoke $r0.<org.apache.maven.artifact.resolver.TestFileWagon: void addTransfer(java.lang.String)>($stack6);

        $r1 = (org.apache.maven.artifact.resolver.TestFileWagon) this;

        $r1.<org.apache.maven.artifact.resolver.TestFileWagon: boolean insideGet> = 1;

        specialinvoke this.<org.apache.maven.wagon.providers.file.FileWagon: void get(java.lang.String,java.io.File)>(resourceName, destination);

        $r2 = (org.apache.maven.artifact.resolver.TestFileWagon) this;

        $r2.<org.apache.maven.artifact.resolver.TestFileWagon: boolean insideGet> = 0;

        return;
    }

    private void addTransfer(java.lang.String)
    {
        TestFileWagon this;
        org.apache.maven.artifact.resolver.TestTransferListener $stack2, $stack3;
        java.lang.String resourceName;
        org.apache.maven.artifact.resolver.TestFileWagon $r0, $r1;

        this := @this: TestFileWagon;

        resourceName := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.resolver.TestFileWagon) this;

        $stack2 = $r0.<org.apache.maven.artifact.resolver.TestFileWagon: org.apache.maven.artifact.resolver.TestTransferListener testTransferListener>;

        if $stack2 == null goto label1;

        $r1 = (org.apache.maven.artifact.resolver.TestFileWagon) this;

        $stack3 = $r1.<org.apache.maven.artifact.resolver.TestFileWagon: org.apache.maven.artifact.resolver.TestTransferListener testTransferListener>;

        virtualinvoke $stack3.<org.apache.maven.artifact.resolver.TestTransferListener: void addTransfer(java.lang.String)>(resourceName);

     label1:
        return;
    }

    public boolean getIfNewer(java.lang.String, java.io.File, long) throws org.apache.maven.wagon.TransferFailedException, org.apache.maven.wagon.ResourceDoesNotExistException, org.apache.maven.wagon.authorization.AuthorizationException
    {
        TestFileWagon this;
        boolean $stack5, $stack6;
        java.lang.String resourceName, $stack10;
        java.io.File destination;
        long timestamp;
        java.lang.StringBuilder $stack8, $stack9, $u0;
        org.apache.maven.artifact.resolver.TestFileWagon $r0, $r1;

        this := @this: TestFileWagon;

        resourceName := @parameter0: java.lang.String;

        destination := @parameter1: java.io.File;

        timestamp := @parameter2: long;

        $r0 = (org.apache.maven.artifact.resolver.TestFileWagon) this;

        $stack5 = $r0.<org.apache.maven.artifact.resolver.TestFileWagon: boolean insideGet>;

        if $stack5 != 0 goto label1;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack8 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getIfNewer ");

        $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(resourceName);

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = (org.apache.maven.artifact.resolver.TestFileWagon) this;

        specialinvoke $r1.<org.apache.maven.artifact.resolver.TestFileWagon: void addTransfer(java.lang.String)>($stack10);

     label1:
        $stack6 = specialinvoke this.<org.apache.maven.wagon.providers.file.FileWagon: boolean getIfNewer(java.lang.String,java.io.File,long)>(resourceName, destination, timestamp);

        return $stack6;
    }

    public void addTransferListener(org.apache.maven.wagon.events.TransferListener)
    {
        org.apache.maven.wagon.events.TransferListener listener;
        boolean $stack2;
        TestFileWagon this;
        org.apache.maven.artifact.resolver.TestTransferListener $stack3;
        org.apache.maven.artifact.resolver.TestFileWagon $r0;

        this := @this: TestFileWagon;

        listener := @parameter0: org.apache.maven.wagon.events.TransferListener;

        $stack2 = listener instanceof org.apache.maven.artifact.resolver.TestTransferListener;

        if $stack2 == 0 goto label1;

        $stack3 = (org.apache.maven.artifact.resolver.TestTransferListener) listener;

        $r0 = (org.apache.maven.artifact.resolver.TestFileWagon) this;

        $r0.<org.apache.maven.artifact.resolver.TestFileWagon: org.apache.maven.artifact.resolver.TestTransferListener testTransferListener> = $stack3;

     label1:
        specialinvoke this.<org.apache.maven.wagon.providers.file.FileWagon: void addTransferListener(org.apache.maven.wagon.events.TransferListener)>(listener);

        return;
    }
}
