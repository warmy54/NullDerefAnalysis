public class TestRepositoryConnector extends java.lang.Object implements org.eclipse.aether.spi.connector.RepositoryConnector
{
    private org.eclipse.aether.repository.RemoteRepository repository;
    private java.io.File basedir;

    public void <init>(org.eclipse.aether.repository.RemoteRepository)
    {
        TestRepositoryConnector this;
        org.eclipse.aether.repository.RemoteRepository repository;
        java.lang.String $stack4;
        java.io.File $stack5;
        java.net.MalformedURLException $stack6;
        java.net.URL $u0;
        java.lang.IllegalStateException $u1;
        org.apache.maven.repository.TestRepositoryConnector $r0, $r1;

        this := @this: TestRepositoryConnector;

        repository := @parameter0: org.eclipse.aether.repository.RemoteRepository;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $r0.<org.apache.maven.repository.TestRepositoryConnector: org.eclipse.aether.repository.RemoteRepository repository> = repository;

     label1:
        $u0 = new java.net.URL;

        $stack4 = virtualinvoke repository.<org.eclipse.aether.repository.RemoteRepository: java.lang.String getUrl()>();

        specialinvoke $u0.<java.net.URL: void <init>(java.lang.String)>($stack4);

        $stack5 = staticinvoke <org.codehaus.plexus.util.FileUtils: java.io.File toFile(java.net.URL)>($u0);

        $r1 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $r1.<org.apache.maven.repository.TestRepositoryConnector: java.io.File basedir> = $stack5;

     label2:
        goto label4;

     label3:
        $stack6 := @caughtexception;

        $u1 = new java.lang.IllegalStateException;

        specialinvoke $u1.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>($stack6);

        throw $u1;

     label4:
        return;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public void close()
    {
        TestRepositoryConnector this;

        this := @this: TestRepositoryConnector;

        return;
    }

    public void get(java.util.Collection, java.util.Collection)
    {
        java.util.Collection artifactDownloads, metadataDownloads;
        boolean $stack8, $stack17, $stack27, $stack37;
        java.lang.Object $stack9, $stack19;
        TestRepositoryConnector this;
        java.io.File $stack11, $stack14, $stack21, $stack24, $u0, $u3;
        org.eclipse.aether.metadata.Metadata $stack12, $stack29, $stack33;
        java.lang.String $stack13, $stack23;
        org.eclipse.aether.artifact.Artifact $stack22, $stack39, $stack43;
        java.io.IOException $stack26, $stack36;
        org.eclipse.aether.repository.RemoteRepository $stack30, $stack34, $stack40, $stack44;
        java.util.Iterator l3;
        org.eclipse.aether.spi.connector.ArtifactDownload download;
        org.eclipse.aether.spi.connector.MetadataDownload download#6;
        org.eclipse.aether.transfer.ArtifactNotFoundException $u1;
        org.eclipse.aether.transfer.ArtifactTransferException $u2, $r3;
        org.eclipse.aether.transfer.MetadataNotFoundException $u4;
        org.eclipse.aether.transfer.MetadataTransferException $u5, $r8;
        org.apache.maven.repository.TestRepositoryConnector $r0, $r1, $r2, $r4, $r5, $r6, $r7, $r9;

        this := @this: TestRepositoryConnector;

        artifactDownloads := @parameter0: java.util.Collection;

        metadataDownloads := @parameter1: java.util.Collection;

        if artifactDownloads == null goto label07;

        l3 = interfaceinvoke artifactDownloads.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $stack17 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label07;

        $stack19 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        download = (org.eclipse.aether.spi.connector.ArtifactDownload) $stack19;

        $u0 = new java.io.File;

        $r0 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $stack21 = $r0.<org.apache.maven.repository.TestRepositoryConnector: java.io.File basedir>;

        $stack22 = virtualinvoke download.<org.eclipse.aether.spi.connector.ArtifactDownload: org.eclipse.aether.artifact.Artifact getArtifact()>();

        $r1 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $stack23 = specialinvoke $r1.<org.apache.maven.repository.TestRepositoryConnector: java.lang.String path(org.eclipse.aether.artifact.Artifact)>($stack22);

        specialinvoke $u0.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack21, $stack23);

     label02:
        $stack24 = virtualinvoke download.<org.eclipse.aether.spi.connector.ArtifactDownload: java.io.File getFile()>();

        staticinvoke <org.codehaus.plexus.util.FileUtils: void copyFile(java.io.File,java.io.File)>($u0, $stack24);

     label03:
        goto label06;

     label04:
        $stack36 := @caughtexception;

        $stack37 = virtualinvoke $u0.<java.io.File: boolean exists()>();

        if $stack37 != 0 goto label05;

        $u1 = new org.eclipse.aether.transfer.ArtifactNotFoundException;

        $stack43 = virtualinvoke download.<org.eclipse.aether.spi.connector.ArtifactDownload: org.eclipse.aether.artifact.Artifact getArtifact()>();

        $r2 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $stack44 = $r2.<org.apache.maven.repository.TestRepositoryConnector: org.eclipse.aether.repository.RemoteRepository repository>;

        specialinvoke $u1.<org.eclipse.aether.transfer.ArtifactNotFoundException: void <init>(org.eclipse.aether.artifact.Artifact,org.eclipse.aether.repository.RemoteRepository)>($stack43, $stack44);

        $r3 = (org.eclipse.aether.transfer.ArtifactTransferException) $u1;

        virtualinvoke download.<org.eclipse.aether.spi.connector.ArtifactDownload: org.eclipse.aether.spi.connector.ArtifactDownload setException(org.eclipse.aether.transfer.ArtifactTransferException)>($r3);

        goto label06;

     label05:
        $u2 = new org.eclipse.aether.transfer.ArtifactTransferException;

        $stack39 = virtualinvoke download.<org.eclipse.aether.spi.connector.ArtifactDownload: org.eclipse.aether.artifact.Artifact getArtifact()>();

        $r4 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $stack40 = $r4.<org.apache.maven.repository.TestRepositoryConnector: org.eclipse.aether.repository.RemoteRepository repository>;

        specialinvoke $u2.<org.eclipse.aether.transfer.ArtifactTransferException: void <init>(org.eclipse.aether.artifact.Artifact,org.eclipse.aether.repository.RemoteRepository,java.lang.Throwable)>($stack39, $stack40, $stack36);

        virtualinvoke download.<org.eclipse.aether.spi.connector.ArtifactDownload: org.eclipse.aether.spi.connector.ArtifactDownload setException(org.eclipse.aether.transfer.ArtifactTransferException)>($u2);

     label06:
        goto label01;

     label07:
        if metadataDownloads == null goto label14;

        l3 = interfaceinvoke metadataDownloads.<java.util.Collection: java.util.Iterator iterator()>();

     label08:
        $stack8 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>();

        if $stack8 == 0 goto label14;

        $stack9 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>();

        download#6 = (org.eclipse.aether.spi.connector.MetadataDownload) $stack9;

        $u3 = new java.io.File;

        $r5 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $stack11 = $r5.<org.apache.maven.repository.TestRepositoryConnector: java.io.File basedir>;

        $stack12 = virtualinvoke download#6.<org.eclipse.aether.spi.connector.MetadataDownload: org.eclipse.aether.metadata.Metadata getMetadata()>();

        $r6 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $stack13 = specialinvoke $r6.<org.apache.maven.repository.TestRepositoryConnector: java.lang.String path(org.eclipse.aether.metadata.Metadata)>($stack12);

        specialinvoke $u3.<java.io.File: void <init>(java.io.File,java.lang.String)>($stack11, $stack13);

     label09:
        $stack14 = virtualinvoke download#6.<org.eclipse.aether.spi.connector.MetadataDownload: java.io.File getFile()>();

        staticinvoke <org.codehaus.plexus.util.FileUtils: void copyFile(java.io.File,java.io.File)>($u3, $stack14);

     label10:
        goto label13;

     label11:
        $stack26 := @caughtexception;

        $stack27 = virtualinvoke $u3.<java.io.File: boolean exists()>();

        if $stack27 != 0 goto label12;

        $u4 = new org.eclipse.aether.transfer.MetadataNotFoundException;

        $stack33 = virtualinvoke download#6.<org.eclipse.aether.spi.connector.MetadataDownload: org.eclipse.aether.metadata.Metadata getMetadata()>();

        $r7 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $stack34 = $r7.<org.apache.maven.repository.TestRepositoryConnector: org.eclipse.aether.repository.RemoteRepository repository>;

        specialinvoke $u4.<org.eclipse.aether.transfer.MetadataNotFoundException: void <init>(org.eclipse.aether.metadata.Metadata,org.eclipse.aether.repository.RemoteRepository)>($stack33, $stack34);

        $r8 = (org.eclipse.aether.transfer.MetadataTransferException) $u4;

        virtualinvoke download#6.<org.eclipse.aether.spi.connector.MetadataDownload: org.eclipse.aether.spi.connector.MetadataDownload setException(org.eclipse.aether.transfer.MetadataTransferException)>($r8);

        goto label13;

     label12:
        $u5 = new org.eclipse.aether.transfer.MetadataTransferException;

        $stack29 = virtualinvoke download#6.<org.eclipse.aether.spi.connector.MetadataDownload: org.eclipse.aether.metadata.Metadata getMetadata()>();

        $r9 = (org.apache.maven.repository.TestRepositoryConnector) this;

        $stack30 = $r9.<org.apache.maven.repository.TestRepositoryConnector: org.eclipse.aether.repository.RemoteRepository repository>;

        specialinvoke $u5.<org.eclipse.aether.transfer.MetadataTransferException: void <init>(org.eclipse.aether.metadata.Metadata,org.eclipse.aether.repository.RemoteRepository,java.lang.Throwable)>($stack29, $stack30, $stack26);

        virtualinvoke download#6.<org.eclipse.aether.spi.connector.MetadataDownload: org.eclipse.aether.spi.connector.MetadataDownload setException(org.eclipse.aether.transfer.MetadataTransferException)>($u5);

     label13:
        goto label08;

     label14:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label09 to label10 with label11;
    }

    private java.lang.String path(org.eclipse.aether.artifact.Artifact)
    {
        java.lang.StringBuilder $stack3, $stack6, $stack9, $stack12, $stack15, $stack16, $stack21, $stack25;
        org.eclipse.aether.artifact.Artifact artifact;
        java.lang.String $stack4, $stack5, $stack8, $stack11, $stack14, $stack17, $stack19, $stack22, $stack24, $stack26;
        int $stack20;
        TestRepositoryConnector this;

        this := @this: TestRepositoryConnector;

        artifact := @parameter0: org.eclipse.aether.artifact.Artifact;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>(128);

        $stack4 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>();

        $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $stack6 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $stack8 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack9 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $stack11 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getBaseVersion()>();

        $stack12 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack11);

        virtualinvoke $stack12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $stack14 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack15 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14);

        $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $stack17 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getVersion()>();

        virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack17);

        $stack19 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>();

        $stack20 = virtualinvoke $stack19.<java.lang.String: int length()>();

        if $stack20 <= 0 goto label1;

        $stack25 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);

        $stack26 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>();

        virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack26);

     label1:
        $stack21 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $stack22 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getExtension()>();

        virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack22);

        $stack24 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack24;
    }

    private java.lang.String path(org.eclipse.aether.metadata.Metadata)
    {
        java.lang.StringBuilder $stack3, $stack6, $stack9;
        org.eclipse.aether.metadata.Metadata metadata;
        java.lang.String $stack4, $stack5, $stack8, $stack12;
        TestRepositoryConnector this;

        this := @this: TestRepositoryConnector;

        metadata := @parameter0: org.eclipse.aether.metadata.Metadata;

        $stack3 = new java.lang.StringBuilder;

        specialinvoke $stack3.<java.lang.StringBuilder: void <init>(int)>(128);

        $stack4 = interfaceinvoke metadata.<org.eclipse.aether.metadata.Metadata: java.lang.String getGroupId()>();

        $stack5 = virtualinvoke $stack4.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $stack6 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $stack8 = interfaceinvoke metadata.<org.eclipse.aether.metadata.Metadata: java.lang.String getArtifactId()>();

        $stack9 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maven-metadata.xml");

        $stack12 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack12;
    }

    public void put(java.util.Collection, java.util.Collection)
    {
        TestRepositoryConnector this;
        java.util.Collection artifactUploads, metadataUploads;

        this := @this: TestRepositoryConnector;

        artifactUploads := @parameter0: java.util.Collection;

        metadataUploads := @parameter1: java.util.Collection;

        return;
    }
}
