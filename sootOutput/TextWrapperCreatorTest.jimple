class TextWrapperCreatorTest extends java.lang.Object
{
    private final sortpom.wrapper.TextWrapperCreator textWrapperCreator;

    void <init>()
    {
        TextWrapperCreatorTest this;
        sortpom.wrapper.TextWrapperCreator $u0;
        sortpom.wrapper.TextWrapperCreatorTest $r0;

        this := @this: TextWrapperCreatorTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new sortpom.wrapper.TextWrapperCreator;

        specialinvoke $u0.<sortpom.wrapper.TextWrapperCreator: void <init>()>();

        $r0 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $r0.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator> = $u0;

        return;
    }

    void setup()
    {
        TextWrapperCreatorTest this;
        sortpom.wrapper.TextWrapperCreator $stack1;
        sortpom.parameter.PluginParameters$Builder $stack2, $stack3, $stack4;
        sortpom.parameter.PluginParameters $stack5;
        sortpom.wrapper.TextWrapperCreatorTest $r0;

        this := @this: TextWrapperCreatorTest;

        $r0 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack1 = $r0.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $stack2 = staticinvoke <sortpom.parameter.PluginParameters: sortpom.parameter.PluginParameters$Builder builder()>();

        $stack3 = virtualinvoke $stack2.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setEncoding(java.lang.String)>("UTF-8");

        $stack4 = virtualinvoke $stack3.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters$Builder setFormatting(java.lang.String,boolean,boolean,boolean)>("\n", 1, 1, 1);

        $stack5 = virtualinvoke $stack4.<sortpom.parameter.PluginParameters$Builder: sortpom.parameter.PluginParameters build()>();

        virtualinvoke $stack1.<sortpom.wrapper.TextWrapperCreator: void setup(sortpom.parameter.PluginParameters)>($stack5);

        return;
    }

    void testIsEmptyLine()
    {
        TextWrapperCreatorTest this;
        sortpom.wrapper.TextWrapperCreator $stack2, $stack5, $stack8, $stack11, $stack14, $stack17, $stack20, $stack23, $stack26, $stack29, $stack32, $stack35, $stack38;
        boolean $stack3, $stack6, $stack9, $stack12, $stack15, $stack18, $stack21, $stack24, $stack27, $stack30, $stack33, $stack36, $stack39;
        org.jdom.Text $u0, $u1, $u2, $u3, $u4, $u5, $u6, $u7, $u8, $u9, $u10, $u11, $u12;
        sortpom.wrapper.TextWrapperCreatorTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        this := @this: TextWrapperCreatorTest;

        $r0 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack2 = $r0.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u0 = new org.jdom.Text;

        specialinvoke $u0.<org.jdom.Text: void <init>(java.lang.String)>("\n      sortpom\n  ");

        $stack3 = virtualinvoke $stack2.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u0);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack3);

        $r1 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack5 = $r1.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u1 = new org.jdom.Text;

        specialinvoke $u1.<org.jdom.Text: void <init>(java.lang.String)>("sortpom");

        $stack6 = virtualinvoke $stack5.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u1);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack6);

        $r2 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack8 = $r2.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u2 = new org.jdom.Text;

        specialinvoke $u2.<org.jdom.Text: void <init>(java.lang.String)>("\n  ");

        $stack9 = virtualinvoke $stack8.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u2);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack9);

        $r3 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack11 = $r3.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u3 = new org.jdom.Text;

        specialinvoke $u3.<org.jdom.Text: void <init>(java.lang.String)>("  \n  ");

        $stack12 = virtualinvoke $stack11.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u3);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack12);

        $r4 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack14 = $r4.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u4 = new org.jdom.Text;

        specialinvoke $u4.<org.jdom.Text: void <init>(java.lang.String)>("  \n\n  ");

        $stack15 = virtualinvoke $stack14.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u4);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack15);

        $r5 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack17 = $r5.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u5 = new org.jdom.Text;

        specialinvoke $u5.<org.jdom.Text: void <init>(java.lang.String)>("\n\n");

        $stack18 = virtualinvoke $stack17.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u5);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack18);

        $r6 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack20 = $r6.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u6 = new org.jdom.Text;

        specialinvoke $u6.<org.jdom.Text: void <init>(java.lang.String)>("  \r  ");

        $stack21 = virtualinvoke $stack20.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u6);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack21);

        $r7 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack23 = $r7.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u7 = new org.jdom.Text;

        specialinvoke $u7.<org.jdom.Text: void <init>(java.lang.String)>("  \r\r  ");

        $stack24 = virtualinvoke $stack23.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u7);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack24);

        $r8 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack26 = $r8.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u8 = new org.jdom.Text;

        specialinvoke $u8.<org.jdom.Text: void <init>(java.lang.String)>("\r\r");

        $stack27 = virtualinvoke $stack26.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u8);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack27);

        $r9 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack29 = $r9.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u9 = new org.jdom.Text;

        specialinvoke $u9.<org.jdom.Text: void <init>(java.lang.String)>("  \r\n  ");

        $stack30 = virtualinvoke $stack29.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u9);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack30);

        $r10 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack32 = $r10.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u10 = new org.jdom.Text;

        specialinvoke $u10.<org.jdom.Text: void <init>(java.lang.String)>("  \r\n\r\n  ");

        $stack33 = virtualinvoke $stack32.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u10);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack33);

        $r11 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack35 = $r11.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u11 = new org.jdom.Text;

        specialinvoke $u11.<org.jdom.Text: void <init>(java.lang.String)>("\r\n\r\n");

        $stack36 = virtualinvoke $stack35.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u11);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean)>($stack36);

        $r12 = (sortpom.wrapper.TextWrapperCreatorTest) this;

        $stack38 = $r12.<sortpom.wrapper.TextWrapperCreatorTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $u12 = new org.jdom.Text;

        specialinvoke $u12.<org.jdom.Text: void <init>(java.lang.String)>("  ");

        $stack39 = virtualinvoke $stack38.<sortpom.wrapper.TextWrapperCreator: boolean isBlankLineOrLines(org.jdom.Text)>($u12);

        staticinvoke <org.junit.jupiter.api.Assertions: void assertFalse(boolean)>($stack39);

        return;
    }
}
