class ThreadOutputMuxer$ThreadBoundPrintStream extends java.io.PrintStream
{
    final org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer this$0;

    void <init>(org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer, java.io.PrintStream)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer l1;
        java.io.PrintStream systemOutStream;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        l1 := @parameter0: org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer;

        systemOutStream := @parameter1: java.io.PrintStream;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer this$0> = l1;

        specialinvoke this.<java.io.PrintStream: void <init>(java.io.OutputStream)>(systemOutStream);

        return;
    }

    private java.io.PrintStream getOutputStreamForCurrentThread()
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer $stack1;
        java.io.PrintStream $stack2;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        $stack1 = $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer this$0>;

        $stack2 = staticinvoke <org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer: java.io.PrintStream access$400(org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer)>($stack1);

        return $stack2;
    }

    public void println()
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        java.lang.Throwable $stack7;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void println()>();

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack7 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void print(char)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        char c;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        c := @parameter0: char;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(char)>(c);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void println(char)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        char x;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        x := @parameter0: char;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void println(char)>(x);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void print(double)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        double d;
        java.lang.Throwable $stack9;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        d := @parameter0: double;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(double)>(d);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack9 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack9;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void println(double)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        double x;
        java.lang.Throwable $stack9;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        x := @parameter0: double;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void println(double)>(x);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack9 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack9;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void print(float)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        float f;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        f := @parameter0: float;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(float)>(f);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void println(float)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        float x;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        x := @parameter0: float;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void println(float)>(x);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void print(int)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        int i;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        i := @parameter0: int;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(int)>(i);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void println(int)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        int x;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        x := @parameter0: int;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void println(int)>(x);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void print(long)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        long l;
        java.lang.Throwable $stack9;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        l := @parameter0: long;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(long)>(l);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack9 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack9;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void println(long)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        long x;
        java.lang.Throwable $stack9;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        x := @parameter0: long;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(long)>(x);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack9 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack9;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void print(boolean)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        boolean b;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        b := @parameter0: boolean;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(boolean)>(b);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void println(boolean)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        boolean x;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        x := @parameter0: boolean;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(boolean)>(x);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void print(char[])
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        char[] s;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        s := @parameter0: char[];

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(char[])>(s);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void println(char[])
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        char[] x;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        x := @parameter0: char[];

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(char[])>(x);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void print(java.lang.Object)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        java.lang.Object obj;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        obj := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(java.lang.Object)>(obj);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void println(java.lang.Object)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        java.lang.Object x;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        x := @parameter0: java.lang.Object;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void println(java.lang.Object)>(x);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void print(java.lang.String)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        java.lang.String s;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        s := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void print(java.lang.String)>(s);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void println(java.lang.String)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        java.lang.String x;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        x := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void println(java.lang.String)>(x);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void write(byte[], int, int)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        byte[] b;
        int off, len;
        java.lang.Throwable $stack10;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        b := @parameter0: byte[];

        off := @parameter1: int;

        len := @parameter2: int;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void write(byte[],int,int)>(b, off, len);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack10 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack10;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void close()
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream $stack1;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        $stack1 = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        virtualinvoke $stack1.<java.io.PrintStream: void close()>();

        return;
    }

    public void flush()
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream $stack1;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        $stack1 = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        virtualinvoke $stack1.<java.io.PrintStream: void flush()>();

        return;
    }

    public void write(int)
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        int b;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        b := @parameter0: int;

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void write(int)>(b);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void write(byte[]) throws java.io.IOException
    {
        ThreadOutputMuxer$ThreadBoundPrintStream this;
        java.io.PrintStream currentStream;
        byte[] b;
        java.lang.Throwable $stack8;
        org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream $r0;

        this := @this: ThreadOutputMuxer$ThreadBoundPrintStream;

        b := @parameter0: byte[];

        $r0 = (org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream) this;

        currentStream = specialinvoke $r0.<org.apache.maven.lifecycle.internal.builder.multithreaded.ThreadOutputMuxer$ThreadBoundPrintStream: java.io.PrintStream getOutputStreamForCurrentThread()>();

        entermonitor currentStream;

     label1:
        virtualinvoke currentStream.<java.io.PrintStream: void write(byte[])>(b);

        virtualinvoke currentStream.<java.lang.Object: void notifyAll()>();

        exitmonitor currentStream;

     label2:
        goto label5;

     label3:
        $stack8 := @caughtexception;

        exitmonitor currentStream;

     label4:
        throw $stack8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
