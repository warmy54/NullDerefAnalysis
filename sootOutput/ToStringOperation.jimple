class ToStringOperation extends java.lang.Object implements sortpom.wrapper.operation.HierarchyWrapperOperation
{
    private static final java.lang.String INDENT;
    private static final int INDENT_LENGTH;
    private final java.lang.StringBuilder builder;
    private final java.lang.String baseIndent;
    private boolean processFirstOtherContent;

    void <init>()
    {
        ToStringOperation this;
        java.lang.StringBuilder $u0;
        sortpom.wrapper.operation.ToStringOperation $r0, $r1;

        this := @this: ToStringOperation;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (sortpom.wrapper.operation.ToStringOperation) this;

        $r0.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder> = $u0;

        $r1 = (sortpom.wrapper.operation.ToStringOperation) this;

        $r1.<sortpom.wrapper.operation.ToStringOperation: java.lang.String baseIndent> = "  ";

        return;
    }

    private void <init>(java.lang.StringBuilder, java.lang.String)
    {
        ToStringOperation this;
        java.lang.StringBuilder builder, $stack4, $stack5, $u0;
        java.lang.String baseIndent, $stack6;
        sortpom.wrapper.operation.ToStringOperation $r0, $r1;

        this := @this: ToStringOperation;

        builder := @parameter0: java.lang.StringBuilder;

        baseIndent := @parameter1: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (sortpom.wrapper.operation.ToStringOperation) this;

        $r0.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder> = builder;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(baseIndent);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1 = (sortpom.wrapper.operation.ToStringOperation) this;

        $r1.<sortpom.wrapper.operation.ToStringOperation: java.lang.String baseIndent> = $stack6;

        return;
    }

    public void startOfProcess()
    {
        ToStringOperation this;
        int $stack2;
        java.lang.String $stack3, previousBaseIndent;
        java.lang.StringBuilder $stack5, $stack6;
        sortpom.wrapper.operation.ToStringOperation $r0, $r1, $r2;

        this := @this: ToStringOperation;

        $r0 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack3 = $r0.<sortpom.wrapper.operation.ToStringOperation: java.lang.String baseIndent>;

        $stack2 = <sortpom.wrapper.operation.ToStringOperation: int INDENT_LENGTH>;

        previousBaseIndent = virtualinvoke $stack3.<java.lang.String: java.lang.String substring(int)>($stack2);

        $r1 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack5 = $r1.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder>;

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(previousBaseIndent);

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HierarchyWrapper{\n");

        $r2 = (sortpom.wrapper.operation.ToStringOperation) this;

        $r2.<sortpom.wrapper.operation.ToStringOperation: boolean processFirstOtherContent> = 1;

        return;
    }

    public void processOtherContent(sortpom.wrapper.content.Wrapper)
    {
        ToStringOperation this;
        boolean $stack2;
        sortpom.wrapper.content.Wrapper content;
        java.lang.String $stack3, $stack5, $stack8;
        java.lang.StringBuilder $stack4, $stack6, $stack9, $stack10, $stack11;
        sortpom.wrapper.operation.ToStringOperation $r0, $r1, $r2, $r3, $r4, $r5;

        this := @this: ToStringOperation;

        content := @parameter0: sortpom.wrapper.content.Wrapper;

        $r0 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack2 = $r0.<sortpom.wrapper.operation.ToStringOperation: boolean processFirstOtherContent>;

        if $stack2 == 0 goto label1;

        $r1 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack9 = $r1.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder>;

        $r2 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack8 = $r2.<sortpom.wrapper.operation.ToStringOperation: java.lang.String baseIndent>;

        $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack8);

        $stack11 = virtualinvoke $stack10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("otherContentList=");

        virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r3 = (sortpom.wrapper.operation.ToStringOperation) this;

        $r3.<sortpom.wrapper.operation.ToStringOperation: boolean processFirstOtherContent> = 0;

     label1:
        $r4 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack4 = $r4.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder>;

        $r5 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack3 = $r5.<sortpom.wrapper.operation.ToStringOperation: java.lang.String baseIndent>;

        $stack5 = interfaceinvoke content.<sortpom.wrapper.content.Wrapper: java.lang.String toString(java.lang.String)>($stack3);

        $stack6 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        return;
    }

    public void processElement(sortpom.wrapper.content.Wrapper)
    {
        ToStringOperation this;
        java.lang.String $stack2;
        java.lang.StringBuilder $stack3, $stack4, $stack5, $stack6;
        sortpom.wrapper.content.Wrapper elementWrapper;
        sortpom.wrapper.operation.ToStringOperation $r0, $r1;

        this := @this: ToStringOperation;

        elementWrapper := @parameter0: sortpom.wrapper.content.Wrapper;

        $r0 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack3 = $r0.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder>;

        $r1 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack2 = $r1.<sortpom.wrapper.operation.ToStringOperation: java.lang.String baseIndent>;

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack2);

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("elementContent=");

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(elementWrapper);

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        return;
    }

    public void manipulateChildElements(java.util.List)
    {
        java.util.List children;
        boolean $stack2;
        ToStringOperation this;
        java.lang.String $stack3;
        java.lang.StringBuilder $stack4, $stack5, $stack6;
        sortpom.wrapper.operation.ToStringOperation $r0, $r1;

        this := @this: ToStringOperation;

        children := @parameter0: java.util.List;

        $stack2 = interfaceinvoke children.<java.util.List: boolean isEmpty()>();

        if $stack2 != 0 goto label1;

        $r0 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack4 = $r0.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder>;

        $r1 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack3 = $r1.<sortpom.wrapper.operation.ToStringOperation: java.lang.String baseIndent>;

        $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack3);

        $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("children=");

        virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label1:
        return;
    }

    public sortpom.wrapper.operation.HierarchyWrapperOperation createSubOperation()
    {
        ToStringOperation this;
        java.lang.String $stack2;
        java.lang.StringBuilder $stack3;
        sortpom.wrapper.operation.ToStringOperation $u0, $r0, $r1;
        sortpom.wrapper.operation.HierarchyWrapperOperation $r2;

        this := @this: ToStringOperation;

        $u0 = new sortpom.wrapper.operation.ToStringOperation;

        $r0 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack3 = $r0.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder>;

        $r1 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack2 = $r1.<sortpom.wrapper.operation.ToStringOperation: java.lang.String baseIndent>;

        specialinvoke $u0.<sortpom.wrapper.operation.ToStringOperation: void <init>(java.lang.StringBuilder,java.lang.String)>($stack3, $stack2);

        $r2 = (sortpom.wrapper.operation.HierarchyWrapperOperation) $u0;

        return $r2;
    }

    public void endOfProcess()
    {
        ToStringOperation this;
        java.lang.String $stack1;
        java.lang.StringBuilder $stack2, $stack3, $stack4;
        sortpom.wrapper.operation.ToStringOperation $r0, $r1;

        this := @this: ToStringOperation;

        $r0 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack2 = $r0.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder>;

        $r1 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack1 = $r1.<sortpom.wrapper.operation.ToStringOperation: java.lang.String baseIndent>;

        $stack3 = virtualinvoke $stack2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack1);

        $stack4 = virtualinvoke $stack3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        return;
    }

    public java.lang.String toString()
    {
        ToStringOperation this;
        java.lang.StringBuilder $stack1;
        java.lang.String $stack2;
        sortpom.wrapper.operation.ToStringOperation $r0;

        this := @this: ToStringOperation;

        $r0 = (sortpom.wrapper.operation.ToStringOperation) this;

        $stack1 = $r0.<sortpom.wrapper.operation.ToStringOperation: java.lang.StringBuilder builder>;

        $stack2 = virtualinvoke $stack1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack2;
    }

    static void <clinit>()
    {
        java.lang.String $stack0;
        int $stack1;

        <ToStringOperation: java.lang.String INDENT> = "  ";

        $stack0 = "  ";

        $stack1 = virtualinvoke $stack0.<java.lang.String: int length()>();

        <sortpom.wrapper.operation.ToStringOperation: int INDENT_LENGTH> = $stack1;

        return;
    }
}
