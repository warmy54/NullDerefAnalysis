public final class Token$TokenString extends java.lang.Object
{
    public static final java.lang.String[] strings;

    public void <init>()
    {
        Token$TokenString this;

        this := @this: Token$TokenString;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $stack0;

        $stack0 = newarray (java.lang.String)[97];

        $stack0[0] = "<notoken>";

        $stack0[1] = "class";

        $stack0[2] = "cover";

        $stack0[3] = "func";

        $stack0[4] = "abstract";

        $stack0[5] = "extends";

        $stack0[6] = "from";

        $stack0[7] = "this";

        $stack0[8] = "super";

        $stack0[9] = "new";

        $stack0[10] = "const";

        $stack0[11] = "final";

        $stack0[12] = "static";

        $stack0[13] = "include";

        $stack0[14] = "import";

        $stack0[15] = "use";

        $stack0[16] = "extern";

        $stack0[17] = "inline";

        $stack0[18] = "proto";

        $stack0[19] = "unmangled";

        $stack0[20] = "break";

        $stack0[21] = "continue";

        $stack0[22] = "fallthrough";

        $stack0[23] = "operator";

        $stack0[24] = "if";

        $stack0[25] = "else";

        $stack0[26] = "for";

        $stack0[27] = "while";

        $stack0[28] = "do";

        $stack0[29] = "switch";

        $stack0[30] = "case";

        $stack0[31] = "as";

        $stack0[32] = "in";

        $stack0[33] = "version";

        $stack0[34] = "return";

        $stack0[35] = "true";

        $stack0[36] = "false";

        $stack0[37] = "null";

        $stack0[38] = "oocdoc";

        $stack0[39] = "name";

        $stack0[40] = "\\";

        $stack0[41] = "\\\\";

        $stack0[42] = "@";

        $stack0[43] = "#";

        $stack0[44] = "~";

        $stack0[45] = ",";

        $stack0[46] = ".";

        $stack0[47] = "..";

        $stack0[48] = "...";

        $stack0[49] = "->";

        $stack0[50] = ":";

        $stack0[51] = "line separator";

        $stack0[52] = "+";

        $stack0[53] = "+=";

        $stack0[54] = "-";

        $stack0[55] = "-=";

        $stack0[56] = "*";

        $stack0[57] = "*=";

        $stack0[58] = "/";

        $stack0[59] = "/=";

        $stack0[60] = "%";

        $stack0[61] = "!";

        $stack0[62] = "!=";

        $stack0[63] = "?";

        $stack0[64] = ">";

        $stack0[65] = "<";

        $stack0[66] = ">=";

        $stack0[67] = "<=";

        $stack0[68] = "=";

        $stack0[69] = ":=";

        $stack0[70] = "==";

        $stack0[71] = "&&";

        $stack0[72] = "||";

        $stack0[73] = "&";

        $stack0[74] = "|";

        $stack0[75] = "CharLiteral";

        $stack0[76] = "StringLiteral";

        $stack0[77] = "Decimal";

        $stack0[78] = "Hexadecimal";

        $stack0[79] = "Octal";

        $stack0[80] = "Binary";

        $stack0[81] = "DecimalFloat";

        $stack0[82] = "(";

        $stack0[83] = ")";

        $stack0[84] = "{";

        $stack0[85] = "}";

        $stack0[86] = "[";

        $stack0[87] = "]";

        $stack0[88] = "unsigned";

        $stack0[89] = "signed";

        $stack0[90] = "long";

        $stack0[91] = "struct";

        $stack0[92] = "union";

        $stack0[93] = " &";

        $stack0[94] = "^";

        $stack0[95] = "=>";

        $stack0[96] = "into";

        <org.ooc.frontend.model.tokens.Token$TokenString: java.lang.String[] strings> = $stack0;

        return;
    }
}
