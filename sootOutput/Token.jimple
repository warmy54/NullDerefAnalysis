public final class Token extends java.lang.Object implements org.ubi.Locatable
{
    public static final org.ooc.frontend.model.tokens.Token defaultToken;
    public final int start;
    public final int length;
    public byte type;

    public void <init>(int, int, byte)
    {
        Token this;
        int start, length;
        byte type;
        org.ooc.frontend.model.tokens.Token $r0, $r1, $r2;

        this := @this: Token;

        start := @parameter0: int;

        length := @parameter1: int;

        type := @parameter2: byte;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.ooc.frontend.model.tokens.Token) this;

        $r0.<org.ooc.frontend.model.tokens.Token: int start> = start;

        $r1 = (org.ooc.frontend.model.tokens.Token) this;

        $r1.<org.ooc.frontend.model.tokens.Token: int length> = length;

        $r2 = (org.ooc.frontend.model.tokens.Token) this;

        $r2.<org.ooc.frontend.model.tokens.Token: byte type> = type;

        return;
    }

    public java.lang.String toString()
    {
        Token this;
        byte $stack1;
        java.lang.String[] $stack2;
        java.lang.String $stack3, $stack4;
        org.ooc.frontend.model.tokens.Token $r0;

        this := @this: Token;

        $stack2 = <org.ooc.frontend.model.tokens.Token$TokenString: java.lang.String[] strings>;

        $r0 = (org.ooc.frontend.model.tokens.Token) this;

        $stack1 = $r0.<org.ooc.frontend.model.tokens.Token: byte type>;

        $stack3 = $stack2[$stack1];

        $stack4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\'\u0001\'");

        return $stack4;
    }

    public java.lang.String get(org.ubi.SourceReader)
    {
        org.ubi.SourceReader sReader;
        Token this;
        int $stack2, $stack3;
        java.lang.String $stack4;
        org.ooc.frontend.model.tokens.Token $r0, $r1;

        this := @this: Token;

        sReader := @parameter0: org.ubi.SourceReader;

        $r0 = (org.ooc.frontend.model.tokens.Token) this;

        $stack3 = $r0.<org.ooc.frontend.model.tokens.Token: int start>;

        $r1 = (org.ooc.frontend.model.tokens.Token) this;

        $stack2 = $r1.<org.ooc.frontend.model.tokens.Token: int length>;

        $stack4 = virtualinvoke sReader.<org.ubi.SourceReader: java.lang.String getSlice(int,int)>($stack3, $stack2);

        return $stack4;
    }

    public int getLength()
    {
        Token this;
        int $stack1;
        org.ooc.frontend.model.tokens.Token $r0;

        this := @this: Token;

        $r0 = (org.ooc.frontend.model.tokens.Token) this;

        $stack1 = $r0.<org.ooc.frontend.model.tokens.Token: int length>;

        return $stack1;
    }

    public int getStart()
    {
        Token this;
        int $stack1;
        org.ooc.frontend.model.tokens.Token $r0;

        this := @this: Token;

        $r0 = (org.ooc.frontend.model.tokens.Token) this;

        $stack1 = $r0.<org.ooc.frontend.model.tokens.Token: int start>;

        return $stack1;
    }

    public org.ooc.frontend.model.tokens.Token cloneEnclosing(org.ooc.frontend.model.tokens.Token)
    {
        Token this;
        org.ooc.frontend.model.tokens.Token end, $u0, $r0, $r1, $r2;
        int $stack4, $stack5, $stack6, $stack8;
        byte $stack7;

        this := @this: Token;

        end := @parameter0: org.ooc.frontend.model.tokens.Token;

        $u0 = new org.ooc.frontend.model.tokens.Token;

        $r0 = (org.ooc.frontend.model.tokens.Token) this;

        $stack4 = $r0.<org.ooc.frontend.model.tokens.Token: int start>;

        $stack5 = virtualinvoke end.<org.ooc.frontend.model.tokens.Token: int getEnd()>();

        $r1 = (org.ooc.frontend.model.tokens.Token) this;

        $stack6 = $r1.<org.ooc.frontend.model.tokens.Token: int start>;

        $stack8 = $stack5 - $stack6;

        $r2 = (org.ooc.frontend.model.tokens.Token) this;

        $stack7 = $r2.<org.ooc.frontend.model.tokens.Token: byte type>;

        specialinvoke $u0.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>($stack4, $stack8, $stack7);

        return $u0;
    }

    public int getEnd()
    {
        Token this;
        int $stack1, $stack2, $stack3;
        org.ooc.frontend.model.tokens.Token $r0, $r1;

        this := @this: Token;

        $r0 = (org.ooc.frontend.model.tokens.Token) this;

        $stack2 = $r0.<org.ooc.frontend.model.tokens.Token: int start>;

        $r1 = (org.ooc.frontend.model.tokens.Token) this;

        $stack1 = $r1.<org.ooc.frontend.model.tokens.Token: int length>;

        $stack3 = $stack2 + $stack1;

        return $stack3;
    }

    public boolean isNameToken()
    {
        Token this;
        byte $stack1, $stack2, $stack3, $stack4;
        boolean $stack5;
        org.ooc.frontend.model.tokens.Token $r0, $r1, $r2, $r3;

        this := @this: Token;

        $r0 = (org.ooc.frontend.model.tokens.Token) this;

        $stack1 = $r0.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack1 == 39 goto label1;

        $r1 = (org.ooc.frontend.model.tokens.Token) this;

        $stack2 = $r1.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack2 == 1 goto label1;

        $r2 = (org.ooc.frontend.model.tokens.Token) this;

        $stack3 = $r2.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack3 == 32 goto label1;

        $r3 = (org.ooc.frontend.model.tokens.Token) this;

        $stack4 = $r3.<org.ooc.frontend.model.tokens.Token: byte type>;

        if $stack4 != 91 goto label2;

     label1:
        $stack5 = 1;

        goto label3;

     label2:
        $stack5 = 0;

     label3:
        return $stack5;
    }

    static void <clinit>()
    {
        org.ooc.frontend.model.tokens.Token $stack0;

        $stack0 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $stack0.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(0, 0, 0);

        <org.ooc.frontend.model.tokens.Token: org.ooc.frontend.model.tokens.Token defaultToken> = $stack0;

        return;
    }
}
