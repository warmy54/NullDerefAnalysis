public class Tokenizer extends java.lang.Object
{
    protected static org.ooc.frontend.model.Tokenizer$Name[] names;
    protected static org.ooc.frontend.model.Tokenizer$CharTuple[] chars;

    public void <init>()
    {
        Tokenizer this;

        this := @this: Tokenizer;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List parse(org.ubi.SourceReader) throws java.io.IOException
    {
        org.ubi.SourceReader reader;
        int $stack13, index, $stack41, $stack42, $stack45, $stack52, $stack59, $stack60, $stack74, $stack75, $stack82, $stack84, $stack85, $stack86, $stack87, $stack93, $stack95, $stack96, $stack97, $stack98, $stack104, $stack106, $stack107, $stack108, $stack109, $stack158, $stack159, $stack170, $stack171, $stack172, $stack173, $stack178, $stack179, $stack180, $stack181, c3, c2#66, candidate#86;
        boolean $stack16, $stack34, $stack35, $stack48, $stack57, $stack11, $stack20, c3#76;
        char c, $stack24, $stack27, $stack38, $stack56, $stack68, c2, c3#72;
        org.ubi.FileLocation $stack37, $stack90, $stack101, $stack112, $stack202, $stack206;
        java.lang.String $stack39, $stack40, $stack47, $stack203, c3#79, c2#83;
        byte $stack53, c2#82;
        java.lang.String[] $stack152, $stack155;
        java.lang.Throwable $stack200, $r0, $r2, $r3, $r4, $r5, $r6;
        java.io.EOFException $stack204;
        Tokenizer this;
        org.ooc.frontend.model.Tokenizer$CharTuple[] c2#64;
        org.ooc.frontend.model.Tokenizer$CharTuple candidate;
        org.ooc.frontend.model.tokens.Token token, $u1, $u2, $u3, $u5, $u6, $u8, $u9, $u10, $u11, $u12, $u13, $u14, $u15, $u16, $u17, $u18, $u19, $u20, $u22, $u24, $u26, $u27, $u28, $u29, $u30, $u32;
        org.ooc.frontend.model.Tokenizer$Name[] c3#84;
        org.ooc.frontend.model.Tokenizer$Name token#87;
        java.util.ArrayList $u0;
        org.ubi.CompilationFailedError $u4, $u7, $u21, $u23, $u25, $u31;
        org.ubi.SyntaxError $r1;

        this := @this: Tokenizer;

        reader := @parameter0: org.ubi.SourceReader;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

     label01:
        $stack11 = virtualinvoke reader.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack11 == 0 goto label53;

        virtualinvoke reader.<org.ubi.SourceReader: boolean skipChars(java.lang.String)>("\t ");

        $stack16 = virtualinvoke reader.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack16 != 0 goto label02;

        goto label53;

     label02:
        index = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        c = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if c == 59 goto label03;

        if c == 10 goto label03;

        if c != 13 goto label07;

     label03:
        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

     label04:
        $stack20 = virtualinvoke reader.<org.ubi.SourceReader: boolean hasNext()>();

        if $stack20 == 0 goto label06;

        $stack24 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if $stack24 == 10 goto label05;

        $stack27 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if $stack27 != 13 goto label06;

     label05:
        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        goto label04;

     label06:
        $u1 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u1.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 1, 51);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u1);

        goto label01;

     label07:
        if c != 92 goto label10;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c2 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if c2 != 92 goto label08;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        $u2 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u2.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 2, 41);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u2);

        goto label01;

     label08:
        if c2 != 10 goto label09;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        goto label01;

     label09:
        $u3 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u3.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 1, 40);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u3);

        goto label01;

     label10:
        c2#64 = <org.ooc.frontend.model.Tokenizer: org.ooc.frontend.model.Tokenizer$CharTuple[] chars>;

        c3 = lengthof c2#64;

        c2#66 = 0;

     label11:
        if c2#66 >= c3 goto label13;

        candidate = c2#64[c2#66];

        token = virtualinvoke candidate.<org.ooc.frontend.model.Tokenizer$CharTuple: org.ooc.frontend.model.tokens.Token handle(int,char,org.ubi.SourceReader)>(index, c, reader);

        if token == null goto label12;

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>(token);

        goto label01;

     label12:
        c2#66 = c2#66 + 1;

        goto label11;

     label13:
        if c != 34 goto label18;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

     label14:
        virtualinvoke reader.<org.ubi.SourceReader: java.lang.String readStringLiteral()>();

     label15:
        goto label17;

     label16:
        $stack204 := @caughtexception;

        $u4 = new org.ubi.CompilationFailedError;

        $stack206 = virtualinvoke reader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(int,int)>(index, 0);

        specialinvoke $u4.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack206, "Never-ending string literal (reached end of file)");

        $r0 = (java.lang.Throwable) $u4;

        throw $r0;

     label17:
        $u5 = new org.ooc.frontend.model.tokens.Token;

        $stack178 = index + 1;

        $stack179 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        $stack180 = $stack179 - index;

        $stack181 = $stack180 - 2;

        specialinvoke $u5.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>($stack178, $stack181, 76);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u5);

        goto label01;

     label18:
        if c != 39 goto label22;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

     label19:
        virtualinvoke reader.<org.ubi.SourceReader: char readCharLiteral()>();

        $u6 = new org.ooc.frontend.model.tokens.Token;

        $stack170 = index + 1;

        $stack171 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        $stack172 = $stack171 - index;

        $stack173 = $stack172 - 2;

        specialinvoke $u6.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>($stack170, $stack173, 75);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u6);

     label20:
        goto label01;

     label21:
        $stack200 := @caughtexception;

        $u7 = new org.ubi.CompilationFailedError;

        $stack202 = virtualinvoke reader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(int,int)>(index, 0);

        $r1 = (org.ubi.SyntaxError) $stack200;

        $stack203 = virtualinvoke $r1.<org.ubi.SyntaxError: java.lang.String getMessage()>();

        specialinvoke $u7.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack202, $stack203);

        $r2 = (java.lang.Throwable) $u7;

        throw $r2;

     label22:
        if c != 47 goto label28;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c2 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if c2 != 61 goto label23;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        $u8 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u8.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 2, 59);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u8);

        goto label01;

     label23:
        if c2 != 47 goto label24;

        virtualinvoke reader.<org.ubi.SourceReader: java.lang.String readLine()>();

        $u9 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u9.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 1, 51);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u9);

        goto label01;

     label24:
        if c2 != 42 goto label27;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c3#72 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if c3#72 != 42 goto label25;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        $stack155 = newarray (java.lang.String)[1];

        $stack155[0] = "*/";

        virtualinvoke reader.<org.ubi.SourceReader: java.lang.String readUntil(java.lang.String[],boolean)>($stack155, 1);

        $u10 = new org.ooc.frontend.model.tokens.Token;

        $stack158 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        $stack159 = $stack158 - index;

        specialinvoke $u10.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, $stack159, 38);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u10);

        goto label26;

     label25:
        $stack152 = newarray (java.lang.String)[1];

        $stack152[0] = "*/";

        virtualinvoke reader.<org.ubi.SourceReader: java.lang.String readUntil(java.lang.String[],boolean)>($stack152, 1);

     label26:
        goto label01;

     label27:
        $u11 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u11.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 1, 58);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u11);

        goto label01;

     label28:
        if c != 45 goto label31;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c2 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if c2 != 62 goto label29;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        $u12 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u12.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 2, 49);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u12);

        goto label01;

     label29:
        if c2 != 61 goto label30;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        $u13 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u13.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 2, 55);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u13);

        goto label01;

     label30:
        $u14 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u14.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 1, 54);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u14);

        goto label01;

     label31:
        if c != 61 goto label34;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c2 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if c2 != 62 goto label32;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        $u15 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u15.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 2, 95);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u15);

        goto label01;

     label32:
        if c2 != 61 goto label33;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        $u16 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u16.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 2, 70);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u16);

        goto label01;

     label33:
        $u17 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u17.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 1, 68);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u17);

        goto label01;

     label34:
        if c != 38 goto label38;

        virtualinvoke reader.<org.ubi.SourceReader: void rewind(int)>(1);

        c2 = virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c3#76 = 0;

        if c2 != 32 goto label35;

        c3#76 = 1;

     label35:
        c2 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if c2 != 38 goto label36;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        $u18 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u18.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 2, 71);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u18);

        goto label01;

     label36:
        if c3#76 == 0 goto label37;

        $u19 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u19.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 1, 93);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u19);

        goto label01;

     label37:
        $u20 = new org.ooc.frontend.model.tokens.Token;

        specialinvoke $u20.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, 1, 73);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u20);

        goto label01;

     label38:
        if c != 48 goto label44;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c2 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if c2 != 120 goto label40;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c3#79 = virtualinvoke reader.<org.ubi.SourceReader: java.lang.String readMany(java.lang.String,java.lang.String,boolean)>("0123456789abcdefABCDEF", "_", 1);

        $stack104 = virtualinvoke c3#79.<java.lang.String: int length()>();

        if $stack104 != 0 goto label39;

        $u21 = new org.ubi.CompilationFailedError;

        $stack112 = virtualinvoke reader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(int,int)>(index, 0);

        specialinvoke $u21.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack112, "Empty hexadecimal number literal");

        $r3 = (java.lang.Throwable) $u21;

        throw $r3;

     label39:
        $u22 = new org.ooc.frontend.model.tokens.Token;

        $stack106 = index + 2;

        $stack107 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        $stack108 = $stack107 - index;

        $stack109 = $stack108 - 2;

        specialinvoke $u22.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>($stack106, $stack109, 78);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u22);

        goto label01;

     label40:
        if c2 != 99 goto label42;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c3#79 = virtualinvoke reader.<org.ubi.SourceReader: java.lang.String readMany(java.lang.String,java.lang.String,boolean)>("01234567", "_", 1);

        $stack93 = virtualinvoke c3#79.<java.lang.String: int length()>();

        if $stack93 != 0 goto label41;

        $u23 = new org.ubi.CompilationFailedError;

        $stack101 = virtualinvoke reader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(int,int)>(index, 0);

        specialinvoke $u23.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack101, "Empty octal number literal");

        $r4 = (java.lang.Throwable) $u23;

        throw $r4;

     label41:
        $u24 = new org.ooc.frontend.model.tokens.Token;

        $stack95 = index + 2;

        $stack96 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        $stack97 = $stack96 - index;

        $stack98 = $stack97 - 2;

        specialinvoke $u24.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>($stack95, $stack98, 79);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u24);

        goto label01;

     label42:
        if c2 != 98 goto label44;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        c3#79 = virtualinvoke reader.<org.ubi.SourceReader: java.lang.String readMany(java.lang.String,java.lang.String,boolean)>("01", "_", 1);

        $stack82 = virtualinvoke c3#79.<java.lang.String: int length()>();

        if $stack82 != 0 goto label43;

        $u25 = new org.ubi.CompilationFailedError;

        $stack90 = virtualinvoke reader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(int,int)>(index, 0);

        specialinvoke $u25.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack90, "Empty binary number literal");

        $r5 = (java.lang.Throwable) $u25;

        throw $r5;

     label43:
        $u26 = new org.ooc.frontend.model.tokens.Token;

        $stack84 = index + 2;

        $stack85 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        $stack86 = $stack85 - index;

        $stack87 = $stack86 - 2;

        specialinvoke $u26.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>($stack84, $stack87, 80);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u26);

        goto label01;

     label44:
        $stack34 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c);

        if $stack34 == 0 goto label48;

        virtualinvoke reader.<org.ubi.SourceReader: java.lang.String readMany(java.lang.String,java.lang.String,boolean)>("0123456789", "_", 1);

        $stack56 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if $stack56 != 46 goto label46;

        virtualinvoke reader.<org.ubi.SourceReader: char read()>();

        $stack68 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        if $stack68 == 46 goto label45;

        virtualinvoke reader.<org.ubi.SourceReader: java.lang.String readMany(java.lang.String,java.lang.String,boolean)>("0123456789", "_", 1);

        virtualinvoke reader.<org.ubi.SourceReader: boolean readExponent()>();

        $u27 = new org.ooc.frontend.model.tokens.Token;

        $stack74 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        $stack75 = $stack74 - index;

        specialinvoke $u27.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, $stack75, 81);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u27);

        goto label01;

     label45:
        virtualinvoke reader.<org.ubi.SourceReader: void rewind(int)>(1);

     label46:
        c2#82 = 77;

        $stack57 = virtualinvoke reader.<org.ubi.SourceReader: boolean readExponent()>();

        if $stack57 == 0 goto label47;

        c2#82 = 81;

     label47:
        $u28 = new org.ooc.frontend.model.tokens.Token;

        $stack59 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        $stack60 = $stack59 - index;

        specialinvoke $u28.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, $stack60, c2#82);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u28);

        goto label01;

     label48:
        $stack35 = virtualinvoke reader.<org.ubi.SourceReader: boolean skipName()>();

        if $stack35 == 0 goto label52;

        $stack41 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        $stack42 = $stack41 - index;

        c2#83 = virtualinvoke reader.<org.ubi.SourceReader: java.lang.String getSlice(int,int)>(index, $stack42);

        c3#84 = <org.ooc.frontend.model.Tokenizer: org.ooc.frontend.model.Tokenizer$Name[] names>;

        c2#66 = lengthof c3#84;

        candidate#86 = 0;

     label49:
        if candidate#86 >= c2#66 goto label51;

        token#87 = c3#84[candidate#86];

        $stack47 = token#87.<org.ooc.frontend.model.Tokenizer$Name: java.lang.String name>;

        $stack48 = virtualinvoke $stack47.<java.lang.String: boolean equals(java.lang.Object)>(c2#83);

        if $stack48 == 0 goto label50;

        $u29 = new org.ooc.frontend.model.tokens.Token;

        $stack52 = virtualinvoke c2#83.<java.lang.String: int length()>();

        $stack53 = token#87.<org.ooc.frontend.model.Tokenizer$Name: byte tokenType>;

        specialinvoke $u29.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, $stack52, $stack53);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u29);

        goto label01;

     label50:
        candidate#86 = candidate#86 + 1;

        goto label49;

     label51:
        $u30 = new org.ooc.frontend.model.tokens.Token;

        $stack45 = virtualinvoke c2#83.<java.lang.String: int length()>();

        specialinvoke $u30.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>(index, $stack45, 39);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u30);

        goto label01;

     label52:
        $u31 = new org.ubi.CompilationFailedError;

        $stack37 = virtualinvoke reader.<org.ubi.SourceReader: org.ubi.FileLocation getLocation(int,int)>(index, 1);

        $stack38 = virtualinvoke reader.<org.ubi.SourceReader: char peek()>();

        $stack39 = staticinvoke <org.ubi.SourceReader: java.lang.String spelled(char)>($stack38);

        $stack40 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack39) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected input \'\u0001\'");

        specialinvoke $u31.<org.ubi.CompilationFailedError: void <init>(org.ubi.FileLocation,java.lang.String)>($stack37, $stack40);

        $r6 = (java.lang.Throwable) $u31;

        throw $r6;

     label53:
        $u32 = new org.ooc.frontend.model.tokens.Token;

        $stack13 = virtualinvoke reader.<org.ubi.SourceReader: int mark()>();

        specialinvoke $u32.<org.ooc.frontend.model.tokens.Token: void <init>(int,int,byte)>($stack13, 0, 51);

        interfaceinvoke $u0.<java.util.List: boolean add(java.lang.Object)>($u32);

        return $u0;

        catch java.io.EOFException from label14 to label15 with label16;
        catch org.ubi.SyntaxError from label19 to label20 with label21;
    }

    static void <clinit>()
    {
        org.ooc.frontend.model.Tokenizer$Name[] $stack0;
        org.ooc.frontend.model.Tokenizer$Name $stack1, $stack3, $stack5, $stack7, $stack9, $stack11, $stack13, $stack15, $stack17, $stack19, $stack21, $stack23, $stack25, $stack27, $stack29, $stack31, $stack33, $stack35, $stack37, $stack39, $stack41, $stack43, $stack45, $stack47, $stack49, $stack51, $stack53, $stack55, $stack57, $stack59, $stack61, $stack63, $stack65, $stack67, $stack69, $stack71, $stack73, $stack75, $stack77, $stack79;
        org.ooc.frontend.model.Tokenizer$CharTuple[] $stack81;
        org.ooc.frontend.model.Tokenizer$CharTuple $stack82, $stack84, $stack86, $stack88, $stack90, $stack92, $stack94, $stack96, $stack98, $stack100, $stack102, $stack104, $stack106, $stack108, $stack110, $stack112, $stack114, $stack116, $stack118, $stack120, $stack122;

        $stack0 = newarray (org.ooc.frontend.model.Tokenizer$Name)[40];

        $stack1 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack1.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("func", 3);

        $stack0[0] = $stack1;

        $stack3 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack3.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("class", 1);

        $stack0[1] = $stack3;

        $stack5 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack5.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("cover", 2);

        $stack0[2] = $stack5;

        $stack7 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack7.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("extern", 16);

        $stack0[3] = $stack7;

        $stack9 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack9.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("from", 6);

        $stack0[4] = $stack9;

        $stack11 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack11.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("if", 24);

        $stack0[5] = $stack11;

        $stack13 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack13.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("else", 25);

        $stack0[6] = $stack13;

        $stack15 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack15.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("for", 26);

        $stack0[7] = $stack15;

        $stack17 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack17.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("while", 27);

        $stack0[8] = $stack17;

        $stack19 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack19.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("true", 35);

        $stack0[9] = $stack19;

        $stack21 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack21.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("false", 36);

        $stack0[10] = $stack21;

        $stack23 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack23.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("null", 37);

        $stack0[11] = $stack23;

        $stack25 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack25.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("do", 28);

        $stack0[12] = $stack25;

        $stack27 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack27.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("match", 29);

        $stack0[13] = $stack27;

        $stack29 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack29.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("case", 30);

        $stack0[14] = $stack29;

        $stack31 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack31.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("return", 34);

        $stack0[15] = $stack31;

        $stack33 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack33.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("as", 31);

        $stack0[16] = $stack33;

        $stack35 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack35.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("const", 10);

        $stack0[17] = $stack35;

        $stack37 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack37.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("static", 12);

        $stack0[18] = $stack37;

        $stack39 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack39.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("abstract", 4);

        $stack0[19] = $stack39;

        $stack41 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack41.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("import", 14);

        $stack0[20] = $stack41;

        $stack43 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack43.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("final", 11);

        $stack0[21] = $stack43;

        $stack45 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack45.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("include", 13);

        $stack0[22] = $stack45;

        $stack47 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack47.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("use", 15);

        $stack0[23] = $stack47;

        $stack49 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack49.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("break", 20);

        $stack0[24] = $stack49;

        $stack51 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack51.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("continue", 21);

        $stack0[25] = $stack51;

        $stack53 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack53.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("fallthrough", 22);

        $stack0[26] = $stack53;

        $stack55 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack55.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("extends", 5);

        $stack0[27] = $stack55;

        $stack57 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack57.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("in", 32);

        $stack0[28] = $stack57;

        $stack59 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack59.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("version", 33);

        $stack0[29] = $stack59;

        $stack61 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack61.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("proto", 18);

        $stack0[30] = $stack61;

        $stack63 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack63.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("unmangled", 19);

        $stack0[31] = $stack63;

        $stack65 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack65.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("inline", 17);

        $stack0[32] = $stack65;

        $stack67 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack67.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("operator", 23);

        $stack0[33] = $stack67;

        $stack69 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack69.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("unsigned", 88);

        $stack0[34] = $stack69;

        $stack71 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack71.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("signed", 89);

        $stack0[35] = $stack71;

        $stack73 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack73.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("long", 90);

        $stack0[36] = $stack73;

        $stack75 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack75.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("union", 92);

        $stack0[37] = $stack75;

        $stack77 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack77.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("struct", 91);

        $stack0[38] = $stack77;

        $stack79 = new org.ooc.frontend.model.Tokenizer$Name;

        specialinvoke $stack79.<org.ooc.frontend.model.Tokenizer$Name: void <init>(java.lang.String,byte)>("into", 96);

        $stack0[39] = $stack79;

        <org.ooc.frontend.model.Tokenizer: org.ooc.frontend.model.Tokenizer$Name[] names> = $stack0;

        $stack81 = newarray (org.ooc.frontend.model.Tokenizer$CharTuple)[21];

        $stack82 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack82.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(40, 82);

        $stack81[0] = $stack82;

        $stack84 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack84.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(41, 83);

        $stack81[1] = $stack84;

        $stack86 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack86.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(123, 84);

        $stack81[2] = $stack86;

        $stack88 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack88.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(125, 85);

        $stack81[3] = $stack88;

        $stack90 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack90.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(91, 86);

        $stack81[4] = $stack90;

        $stack92 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack92.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(93, 87);

        $stack81[5] = $stack92;

        $stack94 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack94.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte,char,byte,char,byte)>(46, 46, 46, 47, 46, 48);

        $stack81[6] = $stack94;

        $stack96 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack96.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(44, 45);

        $stack81[7] = $stack96;

        $stack98 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack98.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(37, 60);

        $stack81[8] = $stack98;

        $stack100 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack100.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(126, 44);

        $stack81[9] = $stack100;

        $stack102 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack102.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte,char,byte)>(58, 50, 61, 69);

        $stack81[10] = $stack102;

        $stack104 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack104.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte,char,byte)>(33, 61, 61, 62);

        $stack81[11] = $stack104;

        $stack106 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack106.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte,char,byte)>(124, 74, 124, 72);

        $stack81[12] = $stack106;

        $stack108 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack108.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(63, 63);

        $stack81[13] = $stack108;

        $stack110 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack110.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(35, 43);

        $stack81[14] = $stack110;

        $stack112 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack112.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(64, 42);

        $stack81[15] = $stack112;

        $stack114 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack114.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte,char,byte)>(43, 52, 61, 53);

        $stack81[16] = $stack114;

        $stack116 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack116.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte,char,byte)>(42, 56, 61, 57);

        $stack81[17] = $stack116;

        $stack118 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack118.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(94, 94);

        $stack81[18] = $stack118;

        $stack120 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack120.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(60, 65);

        $stack81[19] = $stack120;

        $stack122 = new org.ooc.frontend.model.Tokenizer$CharTuple;

        specialinvoke $stack122.<org.ooc.frontend.model.Tokenizer$CharTuple: void <init>(char,byte)>(62, 64);

        $stack81[20] = $stack122;

        <org.ooc.frontend.model.Tokenizer: org.ooc.frontend.model.Tokenizer$CharTuple[] chars> = $stack81;

        return;
    }
}
