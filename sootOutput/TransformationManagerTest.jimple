public class TransformationManagerTest extends java.lang.Object
{
    org.apache.maven.repository.legacy.resolver.transform.ArtifactTransformationManager tm;

    public void <init>()
    {
        TransformationManagerTest this;

        this := @this: TransformationManagerTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void testTransformationManager()
    {
        TransformationManagerTest this;
        org.apache.maven.repository.legacy.resolver.transform.ArtifactTransformationManager $stack2;
        java.util.List tms;
        int $stack5;
        java.lang.Object $stack6, $stack10, $stack13, $stack17, $stack20, $stack24;
        boolean $stack8, $stack15, $stack22;
        java.lang.StringBuilder $stack9, $stack11, $stack16, $stack18, $stack23, $stack25, $u0, $u1, $u2;
        java.lang.String $stack12, $stack19, $stack26;
        org.apache.maven.artifact.transform.TransformationManagerTest $r0;

        this := @this: TransformationManagerTest;

        $r0 = (org.apache.maven.artifact.transform.TransformationManagerTest) this;

        $stack2 = $r0.<org.apache.maven.artifact.transform.TransformationManagerTest: org.apache.maven.repository.legacy.resolver.transform.ArtifactTransformationManager tm>;

        tms = interfaceinvoke $stack2.<org.apache.maven.repository.legacy.resolver.transform.ArtifactTransformationManager: java.util.List getArtifactTransformations()>();

        $stack5 = interfaceinvoke tms.<java.util.List: int size()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertEquals(int,int)>(3, $stack5);

        $stack6 = interfaceinvoke tms.<java.util.List: java.lang.Object get(int)>(0);

        $stack8 = $stack6 instanceof org.apache.maven.repository.legacy.resolver.transform.ReleaseArtifactTransformation;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $stack9 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("We expected the release transformation and got ");

        $stack10 = interfaceinvoke tms.<java.util.List: java.lang.Object get(int)>(0);

        $stack11 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack10);

        $stack12 = virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack8, $stack12);

        $stack13 = interfaceinvoke tms.<java.util.List: java.lang.Object get(int)>(1);

        $stack15 = $stack13 instanceof org.apache.maven.repository.legacy.resolver.transform.LatestArtifactTransformation;

        $u1 = new java.lang.StringBuilder;

        specialinvoke $u1.<java.lang.StringBuilder: void <init>()>();

        $stack16 = virtualinvoke $u1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("We expected the latest transformation and got ");

        $stack17 = interfaceinvoke tms.<java.util.List: java.lang.Object get(int)>(1);

        $stack18 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack17);

        $stack19 = virtualinvoke $stack18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack15, $stack19);

        $stack20 = interfaceinvoke tms.<java.util.List: java.lang.Object get(int)>(2);

        $stack22 = $stack20 instanceof org.apache.maven.repository.legacy.resolver.transform.SnapshotTransformation;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack23 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("We expected the snapshot transformation and got ");

        $stack24 = interfaceinvoke tms.<java.util.List: java.lang.Object get(int)>(2);

        $stack25 = virtualinvoke $stack23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack24);

        $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.junit.jupiter.api.Assertions: void assertTrue(boolean,java.lang.String)>($stack22, $stack26);

        return;
    }
}
