public class Type extends org.ooc.frontend.model.Node implements org.ooc.frontend.model.interfaces.MustBeResolved
{
    private boolean groundTypeChecked;
    protected java.lang.String name;
    protected java.lang.String namespace;
    protected int pointerLevel;
    protected int referenceLevel;
    private org.ooc.frontend.model.Declaration ref;
    private boolean isArray;
    private org.ooc.frontend.model.Expression arraySize;
    protected org.ooc.frontend.model.NodeList typeParams;
    private boolean isConst;
    private static org.ooc.frontend.model.Type voidType;

    public static org.ooc.frontend.model.Type getVoid()
    {
        org.ooc.frontend.model.Type $stack0, $stack1, $stack2;
        org.ooc.frontend.model.tokens.Token $stack3;

        $stack0 = <org.ooc.frontend.model.Type: org.ooc.frontend.model.Type voidType>;

        if $stack0 != null goto label1;

        $stack2 = new org.ooc.frontend.model.Type;

        $stack3 = <org.ooc.frontend.model.tokens.Token: org.ooc.frontend.model.tokens.Token defaultToken>;

        specialinvoke $stack2.<org.ooc.frontend.model.Type: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>("Void", $stack3);

        <org.ooc.frontend.model.Type: org.ooc.frontend.model.Type voidType> = $stack2;

     label1:
        $stack1 = <org.ooc.frontend.model.Type: org.ooc.frontend.model.Type voidType>;

        return $stack1;
    }

    public void <init>(java.lang.String, org.ooc.frontend.model.tokens.Token)
    {
        Type this;
        java.lang.String name;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        name := @parameter0: java.lang.String;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        $r0 = (org.ooc.frontend.model.Type) this;

        specialinvoke $r0.<org.ooc.frontend.model.Type: void <init>(java.lang.String,int,org.ooc.frontend.model.tokens.Token)>(name, 0, startToken);

        return;
    }

    public void <init>(java.lang.String, int, org.ooc.frontend.model.tokens.Token)
    {
        Type this;
        java.lang.String name;
        int pointerLevel;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        name := @parameter0: java.lang.String;

        pointerLevel := @parameter1: int;

        startToken := @parameter2: org.ooc.frontend.model.tokens.Token;

        $r0 = (org.ooc.frontend.model.Type) this;

        specialinvoke $r0.<org.ooc.frontend.model.Type: void <init>(java.lang.String,int,int,org.ooc.frontend.model.tokens.Token)>(name, pointerLevel, 0, startToken);

        return;
    }

    public void <init>(java.lang.String, int, int, org.ooc.frontend.model.tokens.Token)
    {
        Type this;
        org.ooc.frontend.model.tokens.Token startToken;
        java.lang.String name;
        int pointerLevel, referenceLevel;
        org.ooc.frontend.model.NodeList $u0;
        org.ooc.frontend.model.Type $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: Type;

        name := @parameter0: java.lang.String;

        pointerLevel := @parameter1: int;

        referenceLevel := @parameter2: int;

        startToken := @parameter3: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Node: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.Type) this;

        $r0.<org.ooc.frontend.model.Type: boolean groundTypeChecked> = 0;

        $r1 = (org.ooc.frontend.model.Type) this;

        $r1.<org.ooc.frontend.model.Type: boolean isArray> = 0;

        $r2 = (org.ooc.frontend.model.Type) this;

        $r2.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression arraySize> = null;

        $r3 = (org.ooc.frontend.model.Type) this;

        $r3.<org.ooc.frontend.model.Type: boolean isConst> = 0;

        $r4 = (org.ooc.frontend.model.Type) this;

        $r4.<org.ooc.frontend.model.Type: java.lang.String name> = name;

        $r5 = (org.ooc.frontend.model.Type) this;

        $r5.<org.ooc.frontend.model.Type: int pointerLevel> = pointerLevel;

        $r6 = (org.ooc.frontend.model.Type) this;

        $r6.<org.ooc.frontend.model.Type: int referenceLevel> = referenceLevel;

        $u0 = new org.ooc.frontend.model.NodeList;

        specialinvoke $u0.<org.ooc.frontend.model.NodeList: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r7 = (org.ooc.frontend.model.Type) this;

        $r7.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList typeParams> = $u0;

        $r8 = (org.ooc.frontend.model.Type) this;

        $r8.<org.ooc.frontend.model.Type: java.lang.String namespace> = null;

        return;
    }

    public java.lang.String getNamespace()
    {
        Type this;
        java.lang.String $stack1;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: java.lang.String namespace>;

        return $stack1;
    }

    public void setNamespace(java.lang.String)
    {
        Type this;
        java.lang.String namespace;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        namespace := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.Type) this;

        $r0.<org.ooc.frontend.model.Type: java.lang.String namespace> = namespace;

        return;
    }

    public org.ooc.frontend.model.NodeList getTypeParams()
    {
        Type this;
        org.ooc.frontend.model.NodeList $stack1;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList typeParams>;

        return $stack1;
    }

    public java.lang.String getName()
    {
        Type this;
        java.lang.String $stack1;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: java.lang.String name>;

        return $stack1;
    }

    public void setName(java.lang.String)
    {
        Type this;
        java.lang.String name;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        name := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.Type) this;

        $r0.<org.ooc.frontend.model.Type: java.lang.String name> = name;

        return;
    }

    public void setPointerLevel(int)
    {
        Type this;
        int pointerLevel;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        pointerLevel := @parameter0: int;

        $r0 = (org.ooc.frontend.model.Type) this;

        $r0.<org.ooc.frontend.model.Type: int pointerLevel> = pointerLevel;

        return;
    }

    public int getPointerLevel()
    {
        Type this;
        int $stack1;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: int pointerLevel>;

        return $stack1;
    }

    public void setReferenceLevel(int)
    {
        Type this;
        int referenceLevel;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        referenceLevel := @parameter0: int;

        $r0 = (org.ooc.frontend.model.Type) this;

        $r0.<org.ooc.frontend.model.Type: int referenceLevel> = referenceLevel;

        return;
    }

    public int getReferenceLevel()
    {
        Type this;
        int $stack1;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: int referenceLevel>;

        return $stack1;
    }

    public org.ooc.frontend.model.Declaration getRef()
    {
        Type this;
        org.ooc.frontend.model.Declaration $stack1;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        return $stack1;
    }

    public void setRef(org.ooc.frontend.model.Declaration)
    {
        Type this;
        org.ooc.frontend.model.Declaration ref;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        ref := @parameter0: org.ooc.frontend.model.Declaration;

        $r0 = (org.ooc.frontend.model.Type) this;

        $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref> = ref;

        return;
    }

    public boolean isConst()
    {
        Type this;
        boolean $stack1;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: boolean isConst>;

        return $stack1;
    }

    public void setConst(boolean)
    {
        Type this;
        boolean isConst;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        isConst := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.Type) this;

        $r0.<org.ooc.frontend.model.Type: boolean isConst> = isConst;

        return;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        Type this;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Type) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.Type)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        Type this;

        this := @this: Type;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        Type this;
        org.ooc.frontend.model.Expression $stack2, $stack4;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.NodeList $stack3;
        org.ooc.frontend.model.Type $r0, $r1, $r2;

        this := @this: Type;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack2 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression arraySize>;

        if $stack2 == null goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack4 = $r1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression arraySize>;

        virtualinvoke $stack4.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>(visitor);

     label1:
        $r2 = (org.ooc.frontend.model.Type) this;

        $stack3 = $r2.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList typeParams>;

        virtualinvoke $stack3.<org.ooc.frontend.model.NodeList: void accept(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public java.lang.String toString()
    {
        Type this;
        boolean $stack5, $stack12, $stack17, $stack21, $stack22, $stack23, $stack39, $stack24;
        java.lang.String $stack6, $stack7, $stack13, $stack28, $stack32, $stack34, $stack44, $stack45;
        int $stack10, i, $stack9;
        org.ooc.frontend.model.NodeList $stack11, $stack15;
        java.lang.Object $stack20;
        org.ooc.frontend.model.Access element;
        org.ooc.frontend.model.FunctionCall $stack27;
        org.ooc.frontend.model.VariableAccess $stack31;
        java.util.Iterator i#9;
        java.lang.StringBuilder $u0;
        org.ooc.frontend.model.Type $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: Type;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack5 = $r0.<org.ooc.frontend.model.Type: boolean isConst>;

        if $stack5 == 0 goto label01;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("const ");

     label01:
        $r1 = (org.ooc.frontend.model.Type) this;

        $stack6 = $r1.<org.ooc.frontend.model.Type: java.lang.String namespace>;

        if $stack6 == null goto label02;

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack44 = $r2.<org.ooc.frontend.model.Type: java.lang.String namespace>;

        $stack45 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack44) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 ");

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack45);

     label02:
        $r3 = (org.ooc.frontend.model.Type) this;

        $stack7 = $r3.<org.ooc.frontend.model.Type: java.lang.String name>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack7);

        i = 0;

     label03:
        $r4 = (org.ooc.frontend.model.Type) this;

        $stack9 = $r4.<org.ooc.frontend.model.Type: int pointerLevel>;

        if i >= $stack9 goto label06;

        $r5 = (org.ooc.frontend.model.Type) this;

        $stack39 = $r5.<org.ooc.frontend.model.Type: boolean isArray>;

        if $stack39 == 0 goto label04;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[]");

        goto label05;

     label04:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(42);

     label05:
        i = i + 1;

        goto label03;

     label06:
        i = 0;

     label07:
        $r6 = (org.ooc.frontend.model.Type) this;

        $stack10 = $r6.<org.ooc.frontend.model.Type: int referenceLevel>;

        if i >= $stack10 goto label08;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        i = i + 1;

        goto label07;

     label08:
        $r7 = (org.ooc.frontend.model.Type) this;

        $stack11 = $r7.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList typeParams>;

        $stack12 = virtualinvoke $stack11.<org.ooc.frontend.model.NodeList: boolean isEmpty()>();

        if $stack12 != 0 goto label15;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);

        $r8 = (org.ooc.frontend.model.Type) this;

        $stack15 = $r8.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList typeParams>;

        i#9 = virtualinvoke $stack15.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label09:
        $stack17 = interfaceinvoke i#9.<java.util.Iterator: boolean hasNext()>();

        if $stack17 == 0 goto label14;

        $stack20 = interfaceinvoke i#9.<java.util.Iterator: java.lang.Object next()>();

        element = (org.ooc.frontend.model.Access) $stack20;

        $stack21 = element instanceof org.ooc.frontend.model.TypeAccess;

        if $stack21 == 0 goto label10;

        $stack34 = virtualinvoke element.<org.ooc.frontend.model.Access: java.lang.String toString()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack34);

        goto label12;

     label10:
        $stack22 = element instanceof org.ooc.frontend.model.VariableAccess;

        if $stack22 == 0 goto label11;

        $stack31 = (org.ooc.frontend.model.VariableAccess) element;

        $stack32 = virtualinvoke $stack31.<org.ooc.frontend.model.VariableAccess: java.lang.String getName()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack32);

        goto label12;

     label11:
        $stack23 = element instanceof org.ooc.frontend.model.FunctionCall;

        if $stack23 == 0 goto label12;

        $stack27 = (org.ooc.frontend.model.FunctionCall) element;

        $stack28 = virtualinvoke $stack27.<org.ooc.frontend.model.FunctionCall: java.lang.String getName()>();

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack28);

     label12:
        $stack24 = interfaceinvoke i#9.<java.util.Iterator: boolean hasNext()>();

        if $stack24 == 0 goto label13;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label13:
        goto label09;

     label14:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);

     label15:
        $stack13 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack13;
    }

    public java.lang.String getMangledName()
    {
        Type this;
        int $stack3, $stack7, $stack8, $stack9, i;
        java.lang.String $stack5, $stack10, $stack15;
        java.lang.StringBuilder $u0;
        org.ooc.frontend.model.Type $r0, $r1, $r2, $r3, $r4;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack3 = $r0.<org.ooc.frontend.model.Type: int pointerLevel>;

        if $stack3 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack15 = $r1.<org.ooc.frontend.model.Type: java.lang.String name>;

        return $stack15;

     label1:
        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack5 = $r2.<org.ooc.frontend.model.Type: java.lang.String name>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack5);

        i = 0;

     label2:
        $r3 = (org.ooc.frontend.model.Type) this;

        $stack8 = $r3.<org.ooc.frontend.model.Type: int pointerLevel>;

        $r4 = (org.ooc.frontend.model.Type) this;

        $stack7 = $r4.<org.ooc.frontend.model.Type: int referenceLevel>;

        $stack9 = $stack8 + $stack7;

        if i >= $stack9 goto label3;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("__star");

        i = i + 1;

        goto label2;

     label3:
        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;
    }

    public boolean isVoid()
    {
        Type this;
        java.lang.String $stack1, $stack5;
        boolean $stack2, $stack3, $stack6, $stack4;
        org.ooc.frontend.model.Type $r0, $r1, $r2;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack2 = virtualinvoke $stack1.<java.lang.String: boolean equals(java.lang.Object)>("void");

        if $stack2 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack5 = $r1.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>("Void");

        if $stack6 == 0 goto label2;

     label1:
        $r2 = (org.ooc.frontend.model.Type) this;

        $stack3 = virtualinvoke $r2.<org.ooc.frontend.model.Type: boolean isFlat()>();

        if $stack3 == 0 goto label2;

        $stack4 = 1;

        goto label3;

     label2:
        $stack4 = 0;

     label3:
        return $stack4;
    }

    public boolean isFlat()
    {
        Type this;
        int $stack1, $stack2;
        org.ooc.frontend.model.Declaration $stack4;
        boolean $stack5, $stack3;
        org.ooc.frontend.model.Type $r0, $r1, $r2;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: int pointerLevel>;

        if $stack1 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack2 = $r1.<org.ooc.frontend.model.Type: int referenceLevel>;

        if $stack2 != 0 goto label1;

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack4 = $r2.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack5 = $stack4 instanceof org.ooc.frontend.model.ClassDecl;

        if $stack5 != 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        org.ooc.frontend.model.Node oldie, kiddo;
        Type this;
        org.ooc.frontend.model.Declaration $stack3, $stack4;
        org.ooc.frontend.model.Type $r0, $r1;

        this := @this: Type;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack3 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if oldie != $stack3 goto label1;

        $stack4 = (org.ooc.frontend.model.Declaration) kiddo;

        $r1 = (org.ooc.frontend.model.Type) this;

        $r1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref> = $stack4;

        return 1;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        boolean $stack4, $stack5, $stack8, $stack11;
        Type this;
        org.ooc.frontend.model.Type type, $r0, $r1;
        java.lang.String $stack6, $stack7;
        int $stack9, $stack10;

        this := @this: Type;

        obj := @parameter0: java.lang.Object;

        $stack4 = obj instanceof org.ooc.frontend.model.Type;

        if $stack4 == 0 goto label3;

        type = (org.ooc.frontend.model.Type) obj;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack7 = $r0.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack6 = type.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>($stack6);

        if $stack8 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack9 = $r1.<org.ooc.frontend.model.Type: int pointerLevel>;

        $stack10 = virtualinvoke type.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        if $stack9 != $stack10 goto label1;

        $stack11 = 1;

        goto label2;

     label1:
        $stack11 = 0;

     label2:
        return $stack11;

     label3:
        $stack5 = specialinvoke this.<java.lang.Object: boolean equals(java.lang.Object)>(obj);

        return $stack5;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        Type this;
        org.ooc.frontend.model.Declaration $stack6, $stack13, $stack14, $stack15, $stack16, $stack17, $stack24, $stack27, $stack18, $r4, $r10, $r20, $r25;
        java.lang.String $stack7, $stack9, $stack11, $stack36, $stack41, $stack42, $stack44, $stack45, $stack46, $stack47, $stack51, $stack56, $stack60, $stack61, $stack62, $stack64, $stack65, $stack67;
        org.ooc.frontend.model.NodeList stack, $stack30;
        org.ooc.frontend.model.Module $stack8, $stack66;
        org.ooc.frontend.model.TypeDecl $stack12, typeDecl, $stack68, ns#4;
        boolean $stack19, fatal, $stack21, $stack25, $stack29, $stack39, $stack52;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack20, $stack22, $stack23, $stack50, $stack57, $stack70;
        org.ooc.middle.hobgoblins.Resolver res;
        java.util.LinkedHashMap $stack28, $stack32;
        int $stack31, $stack33, ns#2;
        org.ooc.frontend.model.Type $stack35, $r0, $r1, $r2, $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22, $r23, $r24, $r26, $r27, $r29, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40;
        org.ooc.frontend.BuildParams $stack38;
        org.ooc.frontend.model.Node $stack55;
        org.ooc.frontend.model.NamespaceDecl ns;
        org.ooc.frontend.model.TypeParam ns#3;
        org.ooc.middle.OocCompilationError $u0, $u1, $u2, $u3, $u4, $u5;
        java.lang.Throwable $r7, $r14, $r17, $r28, $r30, $r36;

        this := @this: Type;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack6 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if $stack6 == null goto label01;

        $stack70 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack70;

     label01:
        $r1 = (org.ooc.frontend.model.Type) this;

        $stack7 = $r1.<org.ooc.frontend.model.Type: java.lang.String namespace>;

        if $stack7 != null goto label02;

        $stack66 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Module getModule()>();

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack67 = $r2.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack68 = virtualinvoke $stack66.<org.ooc.frontend.model.Module: org.ooc.frontend.model.TypeDecl getType(java.lang.String)>($stack67);

        $r3 = (org.ooc.frontend.model.Type) this;

        $r4 = (org.ooc.frontend.model.Declaration) $stack68;

        $r3.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref> = $r4;

        goto label04;

     label02:
        $stack8 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Module getModule()>();

        $r5 = (org.ooc.frontend.model.Type) this;

        $stack9 = $r5.<org.ooc.frontend.model.Type: java.lang.String namespace>;

        ns = virtualinvoke $stack8.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NamespaceDecl getNamespace(java.lang.String)>($stack9);

        if ns != null goto label03;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r6 = (org.ooc.frontend.model.Type) this;

        $stack64 = $r6.<org.ooc.frontend.model.Type: java.lang.String namespace>;

        $stack65 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack64) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001: This Namespace Does Not Exist.");

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>(this, stack, $stack65);

        $r7 = (java.lang.Throwable) $u0;

        throw $r7;

     label03:
        $r8 = (org.ooc.frontend.model.Type) this;

        $stack11 = $r8.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack12 = virtualinvoke ns.<org.ooc.frontend.model.NamespaceDecl: org.ooc.frontend.model.TypeDecl resolveType(java.lang.String)>($stack11);

        $r9 = (org.ooc.frontend.model.Type) this;

        $r10 = (org.ooc.frontend.model.Declaration) $stack12;

        $r9.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref> = $r10;

        $r11 = (org.ooc.frontend.model.Type) this;

        $stack13 = $r11.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if $stack13 != null goto label04;

        $u1 = new org.ooc.middle.OocCompilationError;

        $r12 = (org.ooc.frontend.model.Type) this;

        $stack61 = $r12.<org.ooc.frontend.model.Type: java.lang.String name>;

        $r13 = (org.ooc.frontend.model.Type) this;

        $stack60 = $r13.<org.ooc.frontend.model.Type: java.lang.String namespace>;

        $stack62 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack61, $stack60) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t resolve type \u0001 in namespace \u0001!");

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>(this, stack, $stack62);

        $r14 = (java.lang.Throwable) $u1;

        throw $r14;

     label04:
        $r15 = (org.ooc.frontend.model.Type) this;

        $stack14 = $r15.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if $stack14 != null goto label06;

        $r16 = (org.ooc.frontend.model.Type) this;

        $stack51 = $r16.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack52 = virtualinvoke $stack51.<java.lang.String: boolean equals(java.lang.Object)>("This");

        if $stack52 == 0 goto label06;

        ns#2 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/TypeDecl;");

        if ns#2 != -1 goto label05;

        $u2 = new org.ooc.middle.OocCompilationError;

        specialinvoke $u2.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>(this, stack, "Using \'This\' outside a type definition is meaningless.");

        $r17 = (java.lang.Throwable) $u2;

        throw $r17;

     label05:
        $stack55 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(ns#2);

        typeDecl = (org.ooc.frontend.model.TypeDecl) $stack55;

        $stack56 = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: java.lang.String getName()>();

        $r18 = (org.ooc.frontend.model.Type) this;

        $r18.<org.ooc.frontend.model.Type: java.lang.String name> = $stack56;

        $r19 = (org.ooc.frontend.model.Type) this;

        $r20 = (org.ooc.frontend.model.Declaration) typeDecl;

        $r19.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref> = $r20;

        $stack57 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack57;

     label06:
        $r21 = (org.ooc.frontend.model.Type) this;

        $stack15 = $r21.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if $stack15 != null goto label07;

        $r22 = (org.ooc.frontend.model.Type) this;

        $stack47 = $r22.<org.ooc.frontend.model.Type: java.lang.String name>;

        $r23 = (org.ooc.frontend.model.Type) this;

        ns#3 = virtualinvoke $r23.<org.ooc.frontend.model.Type: org.ooc.frontend.model.TypeParam getTypeParam(org.ooc.frontend.model.NodeList,java.lang.String)>(stack, $stack47);

        if ns#3 == null goto label07;

        $r24 = (org.ooc.frontend.model.Type) this;

        $r25 = (org.ooc.frontend.model.Declaration) ns#3;

        $r24.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref> = $r25;

        $stack50 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack50;

     label07:
        $r26 = (org.ooc.frontend.model.Type) this;

        $stack16 = $r26.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if $stack16 != null goto label09;

        if fatal == 0 goto label09;

        $stack38 = res.<org.ooc.middle.hobgoblins.Resolver: org.ooc.frontend.BuildParams params>;

        $stack39 = $stack38.<org.ooc.frontend.BuildParams: boolean veryVerbose>;

        if $stack39 == 0 goto label08;

        staticinvoke <java.lang.Thread: void dumpStack()>();

        $u3 = new org.ooc.middle.OocCompilationError;

        $r27 = (org.ooc.frontend.model.Type) this;

        $stack44 = virtualinvoke $r27.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack45 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: java.lang.String toString(boolean)>(1);

        $stack46 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>($stack44, $stack45) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t resolve type \u0001. btw, stack = \u0001");

        specialinvoke $u3.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>(this, stack, $stack46);

        $r28 = (java.lang.Throwable) $u3;

        throw $r28;

     label08:
        $u4 = new org.ooc.middle.OocCompilationError;

        $r29 = (org.ooc.frontend.model.Type) this;

        $stack41 = virtualinvoke $r29.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack42 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack41) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t resolve type \u0001");

        specialinvoke $u4.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>(this, stack, $stack42);

        $r30 = (java.lang.Throwable) $u4;

        throw $r30;

     label09:
        $r31 = (org.ooc.frontend.model.Type) this;

        $stack17 = $r31.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if $stack17 == null goto label10;

        $r32 = (org.ooc.frontend.model.Type) this;

        $stack24 = $r32.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack25 = $stack24 instanceof org.ooc.frontend.model.TypeDecl;

        if $stack25 == 0 goto label10;

        $r33 = (org.ooc.frontend.model.Type) this;

        $stack27 = $r33.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        ns#4 = (org.ooc.frontend.model.TypeDecl) $stack27;

        $stack28 = virtualinvoke ns#4.<org.ooc.frontend.model.TypeDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack29 = virtualinvoke $stack28.<java.util.LinkedHashMap: boolean isEmpty()>();

        if $stack29 != 0 goto label10;

        $r34 = (org.ooc.frontend.model.Type) this;

        $stack30 = virtualinvoke $r34.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack31 = virtualinvoke $stack30.<org.ooc.frontend.model.NodeList: int size()>();

        $stack32 = virtualinvoke ns#4.<org.ooc.frontend.model.TypeDecl: java.util.LinkedHashMap getTypeParams()>();

        $stack33 = virtualinvoke $stack32.<java.util.LinkedHashMap: int size()>();

        if $stack31 == $stack33 goto label10;

        $u5 = new org.ooc.middle.OocCompilationError;

        $stack35 = virtualinvoke ns#4.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getInstanceType()>();

        $r35 = (org.ooc.frontend.model.Type) this;

        $stack36 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type,org.ooc.frontend.model.Type)>($r35, $stack35) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Missing type parameters for \u0001. It should match \u0001");

        specialinvoke $u5.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>(this, stack, $stack36);

        $r36 = (java.lang.Throwable) $u5;

        throw $r36;

     label10:
        $r37 = (org.ooc.frontend.model.Type) this;

        $stack18 = $r37.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if $stack18 != null goto label11;

        $stack23 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack23;

     label11:
        $r38 = (org.ooc.frontend.model.Type) this;

        $stack19 = $r38.<org.ooc.frontend.model.Type: boolean groundTypeChecked>;

        if $stack19 != 0 goto label12;

        $r39 = (org.ooc.frontend.model.Type) this;

        virtualinvoke $r39.<org.ooc.frontend.model.Type: void checkGroundType(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        $r40 = (org.ooc.frontend.model.Type) this;

        $stack21 = $r40.<org.ooc.frontend.model.Type: boolean groundTypeChecked>;

        if $stack21 != 0 goto label12;

        $stack22 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack22;

     label12:
        $stack20 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack20;
    }

    public boolean isResolved()
    {
        Type this;
        org.ooc.frontend.model.Declaration $stack1;
        java.lang.String $stack2;
        int $stack3;
        boolean $stack4;
        org.ooc.frontend.model.Type $r0, $r1;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if $stack1 != null goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack2 = $r1.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>();

        if $stack3 != 0 goto label2;

     label1:
        $stack4 = 1;

        goto label3;

     label2:
        $stack4 = 0;

     label3:
        return $stack4;
    }

    public void setArray(boolean)
    {
        Type this;
        boolean isArray;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        isArray := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.Type) this;

        $r0.<org.ooc.frontend.model.Type: boolean isArray> = isArray;

        return;
    }

    public boolean isArray()
    {
        Type this;
        boolean $stack1;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: boolean isArray>;

        return $stack1;
    }

    public org.ooc.frontend.model.Type getGroundType()
    {
        Type this;
        org.ooc.frontend.model.Type $stack1, $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type getGroundType(org.ooc.middle.hobgoblins.Resolver)>(null);

        return $stack1;
    }

    public void checkGroundType(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        Type this;
        org.ooc.frontend.model.Declaration $stack7, fromRef;
        boolean $stack8, $stack11, fatal;
        org.ooc.frontend.model.NodeList stack;
        org.ooc.middle.hobgoblins.Resolver res;
        java.lang.String $stack19;
        org.ooc.frontend.model.CoverDecl coverDecl;
        org.ooc.frontend.model.Type fromType, $r0, $r1, $r2, $r3, $r5;
        org.ooc.middle.OocCompilationError $u0;
        java.lang.Throwable $r4;

        this := @this: Type;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack7 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack8 = $stack7 instanceof org.ooc.frontend.model.CoverDecl;

        if $stack8 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $r1.<org.ooc.frontend.model.Type: boolean groundTypeChecked> = 1;

        goto label5;

     label1:
        $r2 = (org.ooc.frontend.model.Type) this;

        fromRef = $r2.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        coverDecl = (org.ooc.frontend.model.CoverDecl) fromRef;

        fromType = virtualinvoke coverDecl.<org.ooc.frontend.model.CoverDecl: org.ooc.frontend.model.Type getFromType()>();

     label2:
        if fromType == null goto label5;

        if this != fromType goto label3;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r3 = (org.ooc.frontend.model.Type) this;

        $stack19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type)>($r3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Type defined in terms of itself: \u0001");

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>(this, stack, $stack19);

        $r4 = (java.lang.Throwable) $u0;

        throw $r4;

     label3:
        fromRef = virtualinvoke fromType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        if fromRef != null goto label4;

        virtualinvoke fromType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, 0);

     label4:
        $stack11 = fromRef instanceof org.ooc.frontend.model.CoverDecl;

        if $stack11 == 0 goto label5;

        coverDecl = (org.ooc.frontend.model.CoverDecl) fromRef;

        fromType = virtualinvoke coverDecl.<org.ooc.frontend.model.CoverDecl: org.ooc.frontend.model.Type getFromType()>();

        goto label2;

     label5:
        $r5 = (org.ooc.frontend.model.Type) this;

        $r5.<org.ooc.frontend.model.Type: boolean groundTypeChecked> = 1;

        return;
    }

    public org.ooc.frontend.model.Type getGroundType(org.ooc.middle.hobgoblins.Resolver)
    {
        Type this;
        org.ooc.frontend.model.Declaration $stack6, $stack8, $stack26;
        boolean $stack7, $stack13, $stack25;
        org.ooc.frontend.model.CoverDecl coverDecl;
        org.ooc.frontend.model.Type fromType, $stack14, rawType, $u0, $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $stack11, $stack12, $stack17;
        org.ooc.middle.hobgoblins.Resolver res;
        int $stack18, $stack19, $stack20, $stack21, $stack22, $stack24;
        org.ooc.frontend.model.tokens.Token $stack23;

        this := @this: Type;

        res := @parameter0: org.ooc.middle.hobgoblins.Resolver;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack6 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack7 = $stack6 instanceof org.ooc.frontend.model.CoverDecl;

        if $stack7 == 0 goto label3;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack8 = $r1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        coverDecl = (org.ooc.frontend.model.CoverDecl) $stack8;

        fromType = virtualinvoke coverDecl.<org.ooc.frontend.model.CoverDecl: org.ooc.frontend.model.Type getFromType()>();

        if fromType == null goto label3;

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack11 = $r2.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack12 = virtualinvoke fromType.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack13 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>($stack12);

        if $stack13 != 0 goto label3;

        $stack14 = virtualinvoke coverDecl.<org.ooc.frontend.model.CoverDecl: org.ooc.frontend.model.Type getFromType()>();

        rawType = virtualinvoke $stack14.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type getGroundType(org.ooc.middle.hobgoblins.Resolver)>(res);

        $u0 = new org.ooc.frontend.model.Type;

        $stack17 = rawType.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack18 = virtualinvoke rawType.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        $r3 = (org.ooc.frontend.model.Type) this;

        $stack19 = $r3.<org.ooc.frontend.model.Type: int pointerLevel>;

        $stack20 = $stack18 + $stack19;

        $stack21 = virtualinvoke rawType.<org.ooc.frontend.model.Type: int getReferenceLevel()>();

        $r4 = (org.ooc.frontend.model.Type) this;

        $stack22 = $r4.<org.ooc.frontend.model.Type: int referenceLevel>;

        $stack24 = $stack21 + $stack22;

        $r5 = (org.ooc.frontend.model.Type) this;

        $stack23 = $r5.<org.ooc.frontend.model.Type: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.Type: void <init>(java.lang.String,int,int,org.ooc.frontend.model.tokens.Token)>($stack17, $stack20, $stack24, $stack23);

        $r6 = (org.ooc.frontend.model.Type) this;

        $stack25 = $r6.<org.ooc.frontend.model.Type: boolean isArray>;

        virtualinvoke $u0.<org.ooc.frontend.model.Type: void setArray(boolean)>($stack25);

        if res != null goto label1;

        $r7 = (org.ooc.frontend.model.Type) this;

        $stack26 = $r7.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $u0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref> = $stack26;

        goto label2;

     label1:
        virtualinvoke $u0.<org.ooc.frontend.model.Type: void resolve(org.ooc.middle.hobgoblins.Resolver)>(res);

     label2:
        return $u0;

     label3:
        $r8 = (org.ooc.frontend.model.Type) this;

        return $r8;
    }

    public org.ooc.frontend.model.Type getFlatType(org.ooc.middle.hobgoblins.Resolver)
    {
        Type this;
        org.ooc.frontend.model.Declaration $stack5, $stack7;
        boolean $stack6;
        org.ooc.frontend.model.CoverDecl coverDecl;
        org.ooc.frontend.model.Type fromType, $u0, $r0, $r1, $r2, $r3, $r4;
        int $stack9, $stack11, $stack12, $stack14, $stack15;
        org.ooc.frontend.model.tokens.Token $stack13;
        java.lang.String $stack16;
        org.ooc.middle.hobgoblins.Resolver res;
        java.lang.Object returnType;

        this := @this: Type;

        res := @parameter0: org.ooc.middle.hobgoblins.Resolver;

        returnType = this;

     label1:
        $r0 = (org.ooc.frontend.model.Type) returnType;

        $stack5 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack6 = $stack5 instanceof org.ooc.frontend.model.CoverDecl;

        if $stack6 == 0 goto label4;

        $r1 = (org.ooc.frontend.model.Type) returnType;

        $stack7 = $r1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        coverDecl = (org.ooc.frontend.model.CoverDecl) $stack7;

        fromType = virtualinvoke coverDecl.<org.ooc.frontend.model.CoverDecl: org.ooc.frontend.model.Type getFromType()>();

        if fromType != null goto label2;

        goto label4;

     label2:
        $stack9 = fromType.<org.ooc.frontend.model.Type: int referenceLevel>;

        if $stack9 > 0 goto label3;

        goto label4;

     label3:
        $u0 = new org.ooc.frontend.model.Type;

        $stack16 = fromType.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack11 = fromType.<org.ooc.frontend.model.Type: int pointerLevel>;

        $stack15 = $stack11 - 1;

        $r2 = (org.ooc.frontend.model.Type) returnType;

        $stack12 = $r2.<org.ooc.frontend.model.Type: int referenceLevel>;

        $stack14 = $stack12 - 1;

        $stack13 = fromType.<org.ooc.frontend.model.Type: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.Type: void <init>(java.lang.String,int,int,org.ooc.frontend.model.tokens.Token)>($stack16, $stack15, $stack14, $stack13);

        returnType = $u0;

        $r3 = (org.ooc.frontend.model.Type) $u0;

        virtualinvoke $r3.<org.ooc.frontend.model.Type: void resolve(org.ooc.middle.hobgoblins.Resolver)>(res);

        goto label1;

     label4:
        $r4 = (org.ooc.frontend.model.Type) returnType;

        return $r4;
    }

    public boolean fitsIn(org.ooc.frontend.model.Type)
    {
        Type this;
        org.ooc.frontend.model.Type innerType, $r0, $r1;
        boolean $stack2;
        int $stack3, $stack4;

        this := @this: Type;

        innerType := @parameter0: org.ooc.frontend.model.Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack2 = virtualinvoke $r0.<org.ooc.frontend.model.Type: boolean equals(java.lang.Object)>(innerType);

        if $stack2 == 0 goto label1;

        return 1;

     label1:
        $r1 = (org.ooc.frontend.model.Type) this;

        $stack3 = virtualinvoke $r1.<org.ooc.frontend.model.Type: int getClassification()>();

        $stack4 = virtualinvoke innerType.<org.ooc.frontend.model.Type: int getClassification()>();

        if $stack3 != $stack4 goto label2;

        return 1;

     label2:
        return 0;
    }

    public int getClassification()
    {
        Type this;
        boolean $stack1, $stack3, $stack5, $stack8, $stack10, $stack12, $stack14, $stack16, $stack18, $stack20, $stack22, $stack24, $stack26, $stack28, $stack30, $stack32, $stack34, $stack36, $stack38, $stack40, $stack42, $stack44;
        java.lang.String $stack2, $stack4, $stack7, $stack9, $stack11, $stack13, $stack15, $stack17, $stack19, $stack21, $stack23, $stack25, $stack27, $stack29, $stack31, $stack33, $stack35, $stack37, $stack39, $stack41, $stack43;
        org.ooc.frontend.model.Type $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.Type: boolean isFlat()>();

        if $stack1 != 0 goto label1;

        return 1;

     label1:
        $r1 = (org.ooc.frontend.model.Type) this;

        $stack2 = $r1.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack3 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>("Int");

        if $stack3 != 0 goto label2;

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack4 = $r2.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>("UInt");

        if $stack5 != 0 goto label2;

        $r3 = (org.ooc.frontend.model.Type) this;

        $stack7 = $r3.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>("Short");

        if $stack8 != 0 goto label2;

        $r4 = (org.ooc.frontend.model.Type) this;

        $stack9 = $r4.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack10 = virtualinvoke $stack9.<java.lang.String: boolean equals(java.lang.Object)>("UShort");

        if $stack10 != 0 goto label2;

        $r5 = (org.ooc.frontend.model.Type) this;

        $stack11 = $r5.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>("Long");

        if $stack12 != 0 goto label2;

        $r6 = (org.ooc.frontend.model.Type) this;

        $stack13 = $r6.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean equals(java.lang.Object)>("ULong");

        if $stack14 != 0 goto label2;

        $r7 = (org.ooc.frontend.model.Type) this;

        $stack15 = $r7.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack16 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>("LLong");

        if $stack16 != 0 goto label2;

        $r8 = (org.ooc.frontend.model.Type) this;

        $stack17 = $r8.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack18 = virtualinvoke $stack17.<java.lang.String: boolean equals(java.lang.Object)>("ULLong");

        if $stack18 != 0 goto label2;

        $r9 = (org.ooc.frontend.model.Type) this;

        $stack19 = $r9.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack20 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>("Char");

        if $stack20 != 0 goto label2;

        $r10 = (org.ooc.frontend.model.Type) this;

        $stack21 = $r10.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack22 = virtualinvoke $stack21.<java.lang.String: boolean equals(java.lang.Object)>("UChar");

        if $stack22 != 0 goto label2;

        $r11 = (org.ooc.frontend.model.Type) this;

        $stack23 = $r11.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack24 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>("Int8");

        if $stack24 != 0 goto label2;

        $r12 = (org.ooc.frontend.model.Type) this;

        $stack25 = $r12.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack26 = virtualinvoke $stack25.<java.lang.String: boolean equals(java.lang.Object)>("Int16");

        if $stack26 != 0 goto label2;

        $r13 = (org.ooc.frontend.model.Type) this;

        $stack27 = $r13.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack28 = virtualinvoke $stack27.<java.lang.String: boolean equals(java.lang.Object)>("Int32");

        if $stack28 != 0 goto label2;

        $r14 = (org.ooc.frontend.model.Type) this;

        $stack29 = $r14.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack30 = virtualinvoke $stack29.<java.lang.String: boolean equals(java.lang.Object)>("Int64");

        if $stack30 != 0 goto label2;

        $r15 = (org.ooc.frontend.model.Type) this;

        $stack31 = $r15.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack32 = virtualinvoke $stack31.<java.lang.String: boolean equals(java.lang.Object)>("UInt8");

        if $stack32 != 0 goto label2;

        $r16 = (org.ooc.frontend.model.Type) this;

        $stack33 = $r16.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack34 = virtualinvoke $stack33.<java.lang.String: boolean equals(java.lang.Object)>("UInt16");

        if $stack34 != 0 goto label2;

        $r17 = (org.ooc.frontend.model.Type) this;

        $stack35 = $r17.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack36 = virtualinvoke $stack35.<java.lang.String: boolean equals(java.lang.Object)>("UInt32");

        if $stack36 != 0 goto label2;

        $r18 = (org.ooc.frontend.model.Type) this;

        $stack37 = $r18.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack38 = virtualinvoke $stack37.<java.lang.String: boolean equals(java.lang.Object)>("UInt64");

        if $stack38 != 0 goto label2;

        $r19 = (org.ooc.frontend.model.Type) this;

        $stack39 = $r19.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack40 = virtualinvoke $stack39.<java.lang.String: boolean equals(java.lang.Object)>("SizeT");

        if $stack40 != 0 goto label2;

        $r20 = (org.ooc.frontend.model.Type) this;

        $stack41 = $r20.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack42 = virtualinvoke $stack41.<java.lang.String: boolean equals(java.lang.Object)>("Float");

        if $stack42 != 0 goto label2;

        $r21 = (org.ooc.frontend.model.Type) this;

        $stack43 = $r21.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack44 = virtualinvoke $stack43.<java.lang.String: boolean equals(java.lang.Object)>("Double");

        if $stack44 == 0 goto label3;

     label2:
        return 2;

     label3:
        return 4;
    }

    public void resolve(org.ooc.middle.hobgoblins.Resolver)
    {
        Type this;
        org.ooc.middle.hobgoblins.Resolver res;
        java.lang.String $stack2;
        org.ooc.frontend.model.Module $stack3;
        org.ooc.frontend.model.TypeDecl $stack4;
        org.ooc.frontend.model.Type $r0, $r1;
        org.ooc.frontend.model.Declaration $r2;

        this := @this: Type;

        res := @parameter0: org.ooc.middle.hobgoblins.Resolver;

        $stack3 = res.<org.ooc.middle.hobgoblins.Resolver: org.ooc.frontend.model.Module module>;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack2 = $r0.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack4 = virtualinvoke $stack3.<org.ooc.frontend.model.Module: org.ooc.frontend.model.TypeDecl getType(java.lang.String)>($stack2);

        $r1 = (org.ooc.frontend.model.Type) this;

        $r2 = (org.ooc.frontend.model.Declaration) $stack4;

        $r1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref> = $r2;

        return;
    }

    public boolean isSuperOf(org.ooc.frontend.model.Type)
    {
        org.ooc.frontend.model.Type type, superType, $r0, $r1, $r2, $r3;
        Type this;
        boolean $stack4, $stack10, $stack18, $stack19;
        java.lang.String $stack5, $stack7, $stack16, $stack17;
        int $stack6, $stack8;
        org.ooc.frontend.model.Declaration $stack9, $stack11;
        org.ooc.frontend.model.TypeDecl typeDecl, $stack12, $stack14;

        this := @this: Type;

        type := @parameter0: org.ooc.frontend.model.Type;

        if type != null goto label1;

        return 0;

     label1:
        $r0 = (org.ooc.frontend.model.Type) this;

        $stack4 = virtualinvoke $r0.<org.ooc.frontend.model.Type: boolean equals(java.lang.Object)>(type);

        if $stack4 == 0 goto label2;

        return 0;

     label2:
        $r1 = (org.ooc.frontend.model.Type) this;

        $stack5 = $r1.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: int length()>();

        if $stack6 == 0 goto label3;

        $stack7 = type.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack8 = virtualinvoke $stack7.<java.lang.String: int length()>();

        if $stack8 != 0 goto label4;

     label3:
        return 0;

     label4:
        $stack9 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack10 = $stack9 instanceof org.ooc.frontend.model.TypeDecl;

        if $stack10 == 0 goto label6;

        $stack11 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        typeDecl = (org.ooc.frontend.model.TypeDecl) $stack11;

        $stack12 = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.TypeDecl getSuperRef()>();

        if $stack12 == null goto label6;

        $stack14 = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.TypeDecl getSuperRef()>();

        superType = virtualinvoke $stack14.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getType()>();

        $stack16 = virtualinvoke superType.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack17 = virtualinvoke $r2.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack18 = virtualinvoke $stack16.<java.lang.String: boolean equals(java.lang.Object)>($stack17);

        if $stack18 == 0 goto label5;

        return 1;

     label5:
        $r3 = (org.ooc.frontend.model.Type) this;

        $stack19 = virtualinvoke $r3.<org.ooc.frontend.model.Type: boolean isSuperOf(org.ooc.frontend.model.Type)>(superType);

        return $stack19;

     label6:
        return 0;
    }

    public java.lang.String getHierarchyRepr()
    {
        Type this;
        org.ooc.frontend.model.Declaration $stack4, $stack5, $stack7;
        boolean $stack6;
        org.ooc.frontend.model.TypeDecl typeDecl, $stack8, $stack9;
        java.lang.String repr;
        java.lang.Object t;
        org.ooc.frontend.model.Type $r0, $r1, $r2, $r3, $r4;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        repr = $r0.<org.ooc.frontend.model.Type: java.lang.String name>;

        t = this;

     label1:
        $r1 = (org.ooc.frontend.model.Type) t;

        $stack4 = $r1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        if $stack4 == null goto label4;

        $r2 = (org.ooc.frontend.model.Type) t;

        $stack5 = $r2.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack6 = $stack5 instanceof org.ooc.frontend.model.TypeDecl;

        if $stack6 != 0 goto label2;

        goto label4;

     label2:
        $r3 = (org.ooc.frontend.model.Type) t;

        $stack7 = $r3.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        typeDecl = (org.ooc.frontend.model.TypeDecl) $stack7;

        $stack8 = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.TypeDecl getSuperRef()>();

        if $stack8 != null goto label3;

        goto label4;

     label3:
        $stack9 = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.TypeDecl getSuperRef()>();

        t = virtualinvoke $stack9.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getType()>();

        $r4 = (org.ooc.frontend.model.Type) t;

        repr = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.ooc.frontend.model.Type)>(repr, $r4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");

        goto label1;

     label4:
        return repr;
    }

    public org.ooc.frontend.model.Type clone()
    {
        Type this;
        org.ooc.frontend.model.tokens.Token $stack3;
        int $stack4, $stack5;
        java.lang.String $stack6;
        org.ooc.frontend.model.Declaration $stack7;
        boolean $stack8, $stack10;
        org.ooc.frontend.model.Expression $stack9;
        org.ooc.frontend.model.NodeList $stack11, $stack12;
        org.ooc.frontend.model.Type $u0, $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        this := @this: Type;

        $u0 = new org.ooc.frontend.model.Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack6 = $r0.<org.ooc.frontend.model.Type: java.lang.String name>;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack5 = $r1.<org.ooc.frontend.model.Type: int pointerLevel>;

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack4 = $r2.<org.ooc.frontend.model.Type: int referenceLevel>;

        $r3 = (org.ooc.frontend.model.Type) this;

        $stack3 = $r3.<org.ooc.frontend.model.Type: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.Type: void <init>(java.lang.String,int,int,org.ooc.frontend.model.tokens.Token)>($stack6, $stack5, $stack4, $stack3);

        $r4 = (org.ooc.frontend.model.Type) this;

        $stack7 = $r4.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $u0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref> = $stack7;

        $r5 = (org.ooc.frontend.model.Type) this;

        $stack8 = $r5.<org.ooc.frontend.model.Type: boolean isArray>;

        $u0.<org.ooc.frontend.model.Type: boolean isArray> = $stack8;

        $r6 = (org.ooc.frontend.model.Type) this;

        $stack9 = $r6.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression arraySize>;

        $u0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression arraySize> = $stack9;

        $r7 = (org.ooc.frontend.model.Type) this;

        $stack10 = $r7.<org.ooc.frontend.model.Type: boolean isConst>;

        $u0.<org.ooc.frontend.model.Type: boolean isConst> = $stack10;

        $stack12 = $u0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList typeParams>;

        $r8 = (org.ooc.frontend.model.Type) this;

        $stack11 = $r8.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList typeParams>;

        virtualinvoke $stack12.<org.ooc.frontend.model.NodeList: void addAll(org.ooc.frontend.model.NodeList)>($stack11);

        return $u0;
    }

    public boolean isGeneric()
    {
        Type this;
        org.ooc.frontend.model.Declaration $stack1;
        boolean $stack2;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack2 = $stack1 instanceof org.ooc.frontend.model.TypeParam;

        return $stack2;
    }

    public boolean isGenericRecursive()
    {
        Type this;
        boolean $stack1, $stack3, $stack4;
        org.ooc.frontend.model.NodeList $stack2;
        org.ooc.frontend.model.Type $r0, $r1;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack1 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack2 = $r1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList typeParams>;

        $stack3 = virtualinvoke $stack2.<org.ooc.frontend.model.NodeList: boolean isEmpty()>();

        if $stack3 != 0 goto label2;

     label1:
        $stack4 = 1;

        goto label3;

     label2:
        $stack4 = 0;

     label3:
        return $stack4;
    }

    public org.ooc.frontend.model.Expression getArraySize()
    {
        Type this;
        org.ooc.frontend.model.Expression $stack1;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression arraySize>;

        return $stack1;
    }

    public void setArraySize(org.ooc.frontend.model.Expression)
    {
        Type this;
        org.ooc.frontend.model.Expression arraySize;
        org.ooc.frontend.model.Type $r0;

        this := @this: Type;

        arraySize := @parameter0: org.ooc.frontend.model.Expression;

        $r0 = (org.ooc.frontend.model.Type) this;

        $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression arraySize> = arraySize;

        return;
    }

    public boolean softEquals(org.ooc.frontend.model.Type, org.ooc.middle.hobgoblins.Resolver)
    {
        org.ooc.frontend.model.Type type, $stack14, subType, $r0, $r1, $r2, $r3;
        Type this;
        java.lang.String $stack6;
        boolean $stack7, $stack8, $stack10, $stack18;
        org.ooc.frontend.model.Declaration ref;
        int $stack11, $stack12;
        org.ooc.frontend.model.TypeDecl typeDecl;
        org.ooc.middle.hobgoblins.Resolver res;

        this := @this: Type;

        type := @parameter0: org.ooc.frontend.model.Type;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        if type != null goto label1;

        return 0;

     label1:
        $r0 = (org.ooc.frontend.model.Type) this;

        $stack6 = $r0.<org.ooc.frontend.model.Type: java.lang.String name>;

        $stack7 = virtualinvoke $stack6.<java.lang.String: boolean equals(java.lang.Object)>("uint8_t");

        if $stack7 == 0 goto label2;

        return 0;

     label2:
        $r1 = (org.ooc.frontend.model.Type) this;

        $stack8 = virtualinvoke $r1.<org.ooc.frontend.model.Type: boolean equals(java.lang.Object)>(type);

        if $stack8 == 0 goto label3;

        return 1;

     label3:
        ref = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack10 = ref instanceof org.ooc.frontend.model.TypeDecl;

        if $stack10 == 0 goto label4;

        typeDecl = (org.ooc.frontend.model.TypeDecl) ref;

        $stack14 = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getSuperType()>();

        if $stack14 == null goto label4;

        subType = virtualinvoke typeDecl.<org.ooc.frontend.model.TypeDecl: org.ooc.frontend.model.Type getSuperType()>();

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack18 = virtualinvoke $r2.<org.ooc.frontend.model.Type: boolean softEquals(org.ooc.frontend.model.Type,org.ooc.middle.hobgoblins.Resolver)>(subType, res);

        return $stack18;

     label4:
        $r3 = (org.ooc.frontend.model.Type) this;

        $stack11 = virtualinvoke $r3.<org.ooc.frontend.model.Type: int getClassification()>();

        if $stack11 != 2 goto label5;

        $stack12 = virtualinvoke type.<org.ooc.frontend.model.Type: int getClassification()>();

        if $stack12 != 2 goto label5;

        return 1;

     label5:
        return 0;
    }

    public boolean isPrefixed()
    {
        Type this;
        org.ooc.frontend.model.Declaration $stack1, $stack3, $stack6;
        boolean $stack2, $stack4, $stack8, $stack5;
        org.ooc.frontend.model.CoverDecl $stack7;
        org.ooc.frontend.model.Type $r0, $r1, $r2;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack2 = $stack1 instanceof org.ooc.frontend.model.ClassDecl;

        if $stack2 != 0 goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack3 = $r1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack4 = $stack3 instanceof org.ooc.frontend.model.CoverDecl;

        if $stack4 == 0 goto label2;

        $r2 = (org.ooc.frontend.model.Type) this;

        $stack6 = $r2.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack7 = (org.ooc.frontend.model.CoverDecl) $stack6;

        $stack8 = virtualinvoke $stack7.<org.ooc.frontend.model.CoverDecl: boolean isExtern()>();

        if $stack8 != 0 goto label2;

     label1:
        $stack5 = 1;

        goto label3;

     label2:
        $stack5 = 0;

     label3:
        return $stack5;
    }

    public java.lang.String getUnderName()
    {
        Type this;
        boolean $stack1;
        java.lang.String $stack2, $stack5;
        org.ooc.frontend.model.Declaration $stack3;
        org.ooc.frontend.model.TypeDecl $stack4;
        org.ooc.frontend.model.Type $r0, $r1, $r2;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.Type: boolean isPrefixed()>();

        if $stack1 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack3 = $r1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration ref>;

        $stack4 = (org.ooc.frontend.model.TypeDecl) $stack3;

        $stack5 = virtualinvoke $stack4.<org.ooc.frontend.model.TypeDecl: java.lang.String getUnderName()>();

        return $stack5;

     label1:
        $r2 = (org.ooc.frontend.model.Type) this;

        $stack2 = virtualinvoke $r2.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        return $stack2;
    }

    public org.ooc.frontend.model.Type dereference()
    {
        Type this;
        org.ooc.frontend.model.Type clone, $r0, $r1;
        int $stack3, $stack4;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        clone = virtualinvoke $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type clone()>();

        $r1 = (org.ooc.frontend.model.Type) this;

        $stack3 = virtualinvoke $r1.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        $stack4 = $stack3 - 1;

        virtualinvoke clone.<org.ooc.frontend.model.Type: void setPointerLevel(int)>($stack4);

        return clone;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        Type this;
        org.ooc.frontend.model.Type $stack1, $r0;

        this := @this: Type;

        $r0 = (org.ooc.frontend.model.Type) this;

        $stack1 = virtualinvoke $r0.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type clone()>();

        return $stack1;
    }

    static void <clinit>()
    {
        <org.ooc.frontend.model.Type: org.ooc.frontend.model.Type voidType> = null;

        return;
    }
}
