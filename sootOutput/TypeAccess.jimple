public class TypeAccess extends org.ooc.frontend.model.VariableAccess
{
    private org.ooc.frontend.model.Type type;

    public void <init>(org.ooc.frontend.model.Type, org.ooc.frontend.model.tokens.Token)
    {
        TypeAccess this;
        org.ooc.frontend.model.tokens.Token startToken;
        java.lang.String $stack3;
        org.ooc.frontend.model.Type type;
        org.ooc.frontend.model.TypeAccess $r0;

        this := @this: TypeAccess;

        type := @parameter0: org.ooc.frontend.model.Type;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        $stack3 = (java.lang.String) null;

        specialinvoke this.<org.ooc.frontend.model.VariableAccess: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack3, startToken);

        $r0 = (org.ooc.frontend.model.TypeAccess) this;

        $r0.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type> = type;

        return;
    }

    public java.lang.String getName()
    {
        TypeAccess this;
        org.ooc.frontend.model.Type $stack1;
        java.lang.String $stack2;
        org.ooc.frontend.model.TypeAccess $r0;

        this := @this: TypeAccess;

        $r0 = (org.ooc.frontend.model.TypeAccess) this;

        $stack1 = $r0.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        $stack2 = virtualinvoke $stack1.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        return $stack2;
    }

    public org.ooc.frontend.model.Type getType()
    {
        TypeAccess this;
        org.ooc.frontend.model.Type $stack1;
        org.ooc.frontend.model.TypeAccess $r0;

        this := @this: TypeAccess;

        $r0 = (org.ooc.frontend.model.TypeAccess) this;

        $stack1 = $r0.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        return $stack1;
    }

    public org.ooc.frontend.model.Declaration getRef()
    {
        TypeAccess this;
        org.ooc.frontend.model.Type $stack1;
        org.ooc.frontend.model.Declaration $stack2;
        org.ooc.frontend.model.TypeAccess $r0;

        this := @this: TypeAccess;

        $r0 = (org.ooc.frontend.model.TypeAccess) this;

        $stack1 = $r0.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        $stack2 = virtualinvoke $stack1.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        return $stack2;
    }

    public boolean hasChildren()
    {
        TypeAccess this;

        this := @this: TypeAccess;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        TypeAccess this;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.Type $stack2;
        org.ooc.frontend.model.TypeAccess $r0;

        this := @this: TypeAccess;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.TypeAccess) this;

        $stack2 = $r0.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        virtualinvoke $stack2.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        TypeAccess this;
        org.ooc.frontend.model.Type $stack5, $stack7, $stack9, $stack13, $stack15, $stack19, $stack22, $stack23, $stack26;
        boolean $stack6, fatal, $stack10, $stack17, $stack25;
        org.ooc.frontend.model.NodeList stack, $stack16;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack11, $stack27;
        java.lang.String $stack14, $stack20, $stack24;
        org.ooc.frontend.model.VariableDecl var;
        org.ooc.middle.OocCompilationError $u0;
        org.ooc.frontend.model.TypeAccess $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r8;
        org.ooc.frontend.model.Declaration $r7;
        org.ooc.frontend.model.Node $r9;
        java.lang.Throwable $r10;

        this := @this: TypeAccess;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        $r0 = (org.ooc.frontend.model.TypeAccess) this;

        $stack5 = $r0.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        $stack6 = virtualinvoke $stack5.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack6 == 0 goto label1;

        $stack27 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack27;

     label1:
        $r1 = (org.ooc.frontend.model.TypeAccess) this;

        $stack7 = $r1.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        virtualinvoke $stack7.<org.ooc.frontend.model.Type: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        $r2 = (org.ooc.frontend.model.TypeAccess) this;

        $stack9 = $r2.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        $stack10 = virtualinvoke $stack9.<org.ooc.frontend.model.Type: boolean isFlat()>();

        if $stack10 == 0 goto label2;

        $r3 = (org.ooc.frontend.model.TypeAccess) this;

        $stack15 = $r3.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        $stack16 = virtualinvoke $stack15.<org.ooc.frontend.model.Type: org.ooc.frontend.model.NodeList getTypeParams()>();

        $stack17 = virtualinvoke $stack16.<org.ooc.frontend.model.NodeList: boolean isEmpty()>();

        if $stack17 == 0 goto label2;

        $r4 = (org.ooc.frontend.model.TypeAccess) this;

        $stack19 = $r4.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        $stack20 = virtualinvoke $stack19.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $r5 = (org.ooc.frontend.model.TypeAccess) this;

        var = virtualinvoke $r5.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.VariableDecl getVariable(java.lang.String,org.ooc.frontend.model.NodeList,org.ooc.frontend.model.VariableAccess)>($stack20, stack, null);

        if var == null goto label2;

        $stack22 = virtualinvoke var.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        if $stack22 == null goto label2;

        $stack23 = virtualinvoke var.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        $stack24 = virtualinvoke $stack23.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack25 = virtualinvoke $stack24.<java.lang.String: boolean equals(java.lang.Object)>("Class");

        if $stack25 == 0 goto label2;

        $r6 = (org.ooc.frontend.model.TypeAccess) this;

        $stack26 = $r6.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        $r7 = (org.ooc.frontend.model.Declaration) var;

        virtualinvoke $stack26.<org.ooc.frontend.model.Type: void setRef(org.ooc.frontend.model.Declaration)>($r7);

     label2:
        if fatal == 0 goto label3;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r8 = (org.ooc.frontend.model.TypeAccess) this;

        $stack13 = $r8.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        $stack14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type)>($stack13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Can\'t resolve type access to \u0001");

        $r9 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r9, stack, $stack14);

        $r10 = (java.lang.Throwable) $u0;

        throw $r10;

     label3:
        $stack11 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack11;
    }

    public java.lang.String toString()
    {
        TypeAccess this;
        org.ooc.frontend.model.Type $stack1;
        java.lang.String $stack2;
        org.ooc.frontend.model.TypeAccess $r0;

        this := @this: TypeAccess;

        $r0 = (org.ooc.frontend.model.TypeAccess) this;

        $stack1 = $r0.<org.ooc.frontend.model.TypeAccess: org.ooc.frontend.model.Type type>;

        $stack2 = virtualinvoke $stack1.<org.ooc.frontend.model.Type: java.lang.String toString()>();

        return $stack2;
    }
}
