public class TypeParam extends org.ooc.frontend.model.TypeDecl
{
    private org.ooc.frontend.model.Type type;
    private org.ooc.frontend.model.Argument argument;
    private boolean isGhost;

    public void <init>(java.lang.String, org.ooc.frontend.model.tokens.Token)
    {
        TypeParam this;
        java.lang.String name;
        org.ooc.frontend.model.tokens.Token startToken, $stack4;
        org.ooc.frontend.model.Type $stack6, $u0;
        org.ooc.frontend.model.RegularArgument $u1;
        org.ooc.frontend.model.TypeParam $r0, $r1, $r2, $r3;
        org.ooc.frontend.model.Argument $r4;

        this := @this: TypeParam;

        name := @parameter0: java.lang.String;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.TypeDecl: void <init>(java.lang.String,org.ooc.frontend.model.Type,org.ooc.frontend.model.Module,org.ooc.frontend.model.tokens.Token)>(name, null, null, startToken);

        $r0 = (org.ooc.frontend.model.TypeParam) this;

        $r0.<org.ooc.frontend.model.TypeParam: boolean isGhost> = 0;

        $u0 = new org.ooc.frontend.model.Type;

        $stack4 = <org.ooc.frontend.model.tokens.Token: org.ooc.frontend.model.tokens.Token defaultToken>;

        specialinvoke $u0.<org.ooc.frontend.model.Type: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>("Class", $stack4);

        $r1 = (org.ooc.frontend.model.TypeParam) this;

        $r1.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Type type> = $u0;

        $u1 = new org.ooc.frontend.model.RegularArgument;

        $r2 = (org.ooc.frontend.model.TypeParam) this;

        $stack6 = $r2.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Type type>;

        specialinvoke $u1.<org.ooc.frontend.model.RegularArgument: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack6, name, startToken);

        $r3 = (org.ooc.frontend.model.TypeParam) this;

        $r4 = (org.ooc.frontend.model.Argument) $u1;

        $r3.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Argument argument> = $r4;

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        TypeParam this;
        org.ooc.frontend.model.Node oldie, kiddo;

        this := @this: TypeParam;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        return 0;
    }

    public org.ooc.frontend.model.Type getType()
    {
        TypeParam this;
        org.ooc.frontend.model.Type $stack1;
        org.ooc.frontend.model.TypeParam $r0;

        this := @this: TypeParam;

        $r0 = (org.ooc.frontend.model.TypeParam) this;

        $stack1 = $r0.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Type type>;

        return $stack1;
    }

    public org.ooc.frontend.model.Argument getArgument()
    {
        TypeParam this;
        org.ooc.frontend.model.Argument $stack1;
        org.ooc.frontend.model.TypeParam $r0;

        this := @this: TypeParam;

        $r0 = (org.ooc.frontend.model.TypeParam) this;

        $stack1 = $r0.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Argument argument>;

        return $stack1;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        TypeParam this;
        org.ooc.frontend.Visitor visitor;

        this := @this: TypeParam;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        return;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        TypeParam this;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.Type $stack2;
        org.ooc.frontend.model.TypeParam $r0;

        this := @this: TypeParam;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.TypeParam) this;

        $stack2 = $r0.<org.ooc.frontend.model.TypeParam: org.ooc.frontend.model.Type type>;

        virtualinvoke $stack2.<org.ooc.frontend.model.Type: void acceptChildren(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public boolean hasChildren()
    {
        TypeParam this;

        this := @this: TypeParam;

        return 1;
    }

    public boolean isGhost()
    {
        TypeParam this;
        boolean $stack1;
        org.ooc.frontend.model.TypeParam $r0;

        this := @this: TypeParam;

        $r0 = (org.ooc.frontend.model.TypeParam) this;

        $stack1 = $r0.<org.ooc.frontend.model.TypeParam: boolean isGhost>;

        return $stack1;
    }

    public void setGhost(boolean)
    {
        TypeParam this;
        boolean isGhost;
        org.ooc.frontend.model.TypeParam $r0;

        this := @this: TypeParam;

        isGhost := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.TypeParam) this;

        $r0.<org.ooc.frontend.model.TypeParam: boolean isGhost> = isGhost;

        return;
    }
}
