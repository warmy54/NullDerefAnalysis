public class TypeWriter extends java.lang.Object
{
    public static boolean doStruct;

    public void <init>()
    {
        TypeWriter this;

        this := @this: TypeWriter;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public static void write(org.ooc.frontend.model.Type, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.Type type;
        org.ooc.backend.cdirty.CGenerator cgen;

        type := @parameter0: org.ooc.frontend.model.Type;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void write(org.ooc.frontend.model.Type,org.ooc.backend.cdirty.CGenerator,boolean)>(type, cgen, 1);

        return;
    }

    public static void write(org.ooc.frontend.model.Type, org.ooc.backend.cdirty.CGenerator, boolean) throws java.io.IOException
    {
        org.ooc.frontend.model.Type typeParam;
        org.ooc.backend.cdirty.CGenerator cgen;
        boolean doPrefix;

        typeParam := @parameter0: org.ooc.frontend.model.Type;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        doPrefix := @parameter2: boolean;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void write(org.ooc.frontend.model.Type,org.ooc.backend.cdirty.CGenerator,boolean,boolean)>(typeParam, cgen, doPrefix, 1);

        return;
    }

    public static void write(org.ooc.frontend.model.Type, org.ooc.backend.cdirty.CGenerator, boolean, boolean) throws java.io.IOException
    {
        org.ooc.frontend.model.Type typeParam, $stack33, groundType, type;
        org.ooc.frontend.model.Declaration $stack6, $stack18, $stack27, $stack31, $stack35, $stack43, $stack56, $stack24;
        java.lang.String $stack7, $stack12, $stack29, $stack37, $stack41, $stack62, $stack64;
        boolean $stack8, $stack9, $stack10, doPrefix, doFinale, $stack19, $stack23, $stack44, $stack53, $stack59, $stack63, $stack25, $stack14;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack11, $stack15, $stack26, $stack34, $stack40, $stack46, $stack48, $stack51, $stack54;
        org.ooc.frontend.model.TypeDecl $stack28, $stack36;
        org.ooc.frontend.model.CoverDecl $stack32;
        org.ooc.frontend.model.FunctionDecl $stack57;
        org.ooc.frontend.BuildParams $stack58;
        org.ooc.frontend.model.Module $stack61;
        org.ooc.middle.OocCompilationError $u0;
        org.ooc.frontend.model.Node $r0;
        java.lang.Throwable $r1;

        typeParam := @parameter0: org.ooc.frontend.model.Type;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        doPrefix := @parameter2: boolean;

        doFinale := @parameter3: boolean;

        type = typeParam;

        $stack6 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        if $stack6 != null goto label02;

        $stack58 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.BuildParams params>;

        $stack59 = $stack58.<org.ooc.frontend.BuildParams: boolean veryVerbose>;

        if $stack59 == 0 goto label01;

        staticinvoke <java.lang.Thread: void dumpStack()>();

     label01:
        $u0 = new org.ooc.middle.OocCompilationError;

        $stack61 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.model.Module module>;

        $stack62 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack63 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        $stack64 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,boolean)>($stack62, $stack63) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unresolved type \'\u0001\' isGeneric? \u0001");

        $r0 = (org.ooc.frontend.model.Node) typeParam;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.Module,java.lang.String)>($r0, $stack61, $stack64);

        $r1 = (java.lang.Throwable) $u0;

        throw $r1;

     label02:
        $stack7 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack8 = virtualinvoke $stack7.<java.lang.String: boolean equals(java.lang.Object)>("Func");

        if $stack8 == 0 goto label03;

        $stack56 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack57 = (org.ooc.frontend.model.FunctionDecl) $stack56;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void writeFuncPointer(org.ooc.frontend.model.FunctionDecl,java.lang.String,org.ooc.backend.cdirty.CGenerator)>($stack57, "", cgen);

        return;

     label03:
        $stack9 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack9 == 0 goto label05;

        $stack51 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack51.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.TabbedWriter append(java.lang.String)>("uint8_t");

        $stack53 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: boolean isArray()>();

        if $stack53 != 0 goto label04;

        $stack54 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack54.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.TabbedWriter append(java.lang.String)>("* ");

     label04:
        return;

     label05:
        $stack10 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: boolean isConst()>();

        if $stack10 == 0 goto label06;

        $stack48 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack48.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("const ");

     label06:
        if doPrefix == 0 goto label10;

        $stack18 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack19 = $stack18 instanceof org.ooc.frontend.model.TypeDecl;

        if $stack19 == 0 goto label10;

        $stack23 = <org.ooc.backend.cdirty.TypeWriter: boolean doStruct>;

        if $stack23 == 0 goto label07;

        $stack43 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack44 = $stack43 instanceof org.ooc.frontend.model.ClassDecl;

        if $stack44 == 0 goto label07;

        $stack46 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack46.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("struct _");

     label07:
        $stack24 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack25 = $stack24 instanceof org.ooc.frontend.model.CoverDecl;

        if $stack25 == 0 goto label09;

        $stack31 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack32 = (org.ooc.frontend.model.CoverDecl) $stack31;

        $stack33 = virtualinvoke $stack32.<org.ooc.frontend.model.CoverDecl: org.ooc.frontend.model.Type getFromType()>();

        if $stack33 == null goto label08;

        groundType = virtualinvoke typeParam.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type getGroundType()>();

        type = groundType;

        $stack40 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack41 = virtualinvoke groundType.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        virtualinvoke $stack40.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack41);

        goto label11;

     label08:
        $stack34 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack35 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack36 = (org.ooc.frontend.model.TypeDecl) $stack35;

        $stack37 = virtualinvoke $stack36.<org.ooc.frontend.model.TypeDecl: java.lang.String getUnderName()>();

        virtualinvoke $stack34.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack37);

        goto label11;

     label09:
        $stack26 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack27 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack28 = (org.ooc.frontend.model.TypeDecl) $stack27;

        $stack29 = virtualinvoke $stack28.<org.ooc.frontend.model.TypeDecl: java.lang.String getUnderName()>();

        virtualinvoke $stack26.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack29);

        goto label11;

     label10:
        $stack11 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack12 = virtualinvoke typeParam.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        virtualinvoke $stack11.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack12);

     label11:
        $stack14 = virtualinvoke type.<org.ooc.frontend.model.Type: boolean isFlat()>();

        if $stack14 != 0 goto label12;

        $stack15 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack15.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(32);

     label12:
        if doFinale == 0 goto label13;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void writeFinale(org.ooc.frontend.model.Type,org.ooc.backend.cdirty.CGenerator)>(type, cgen);

     label13:
        return;
    }

    public static void writeFinale(org.ooc.frontend.model.Type, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.Type type;
        org.ooc.backend.cdirty.CGenerator cgen;

        type := @parameter0: org.ooc.frontend.model.Type;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void writePreFinale(org.ooc.frontend.model.Type,org.ooc.backend.cdirty.CGenerator)>(type, cgen);

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void writePostFinale(org.ooc.frontend.model.Type,org.ooc.backend.cdirty.CGenerator)>(type, cgen);

        return;
    }

    public static void writePreFinale(org.ooc.frontend.model.Type, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.Type type;
        org.ooc.frontend.model.Declaration $stack2;
        boolean $stack3, $stack4, $stack8, $stack15, $stack18, $stack5;
        org.ooc.frontend.model.Expression $stack6, $stack7;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.frontend.BuildParams $stack9, $stack13;
        org.ooc.frontend.compilers.AbstractCompiler $stack10, $stack14;
        org.ooc.backend.cdirty.AwesomeWriter $stack11, $stack20, $stack22;

        type := @parameter0: org.ooc.frontend.model.Type;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack2 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Declaration getRef()>();

        $stack3 = $stack2 instanceof org.ooc.frontend.model.ClassDecl;

        if $stack3 == 0 goto label1;

        $stack22 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack22.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("*");

     label1:
        $stack4 = virtualinvoke type.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack4 == 0 goto label2;

        $stack18 = virtualinvoke type.<org.ooc.frontend.model.Type: boolean isArray()>();

        if $stack18 != 0 goto label2;

        $stack20 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack20.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("*");

     label2:
        $stack5 = virtualinvoke type.<org.ooc.frontend.model.Type: boolean isArray()>();

        if $stack5 == 0 goto label4;

        $stack6 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression getArraySize()>();

        if $stack6 == null goto label4;

        $stack7 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression getArraySize()>();

        $stack8 = virtualinvoke $stack7.<org.ooc.frontend.model.Expression: boolean isConstant()>();

        if $stack8 != 0 goto label4;

        $stack9 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.BuildParams params>;

        $stack10 = $stack9.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        if $stack10 == null goto label3;

        $stack13 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.BuildParams params>;

        $stack14 = $stack13.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        $stack15 = interfaceinvoke $stack14.<org.ooc.frontend.compilers.AbstractCompiler: boolean supportsVLAs()>();

        if $stack15 != 0 goto label4;

     label3:
        $stack11 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack11.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("*");

     label4:
        return;
    }

    public static void writePostFinale(org.ooc.frontend.model.Type, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.Type type;
        org.ooc.backend.cdirty.CGenerator cgen;

        type := @parameter0: org.ooc.frontend.model.Type;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void writePostFinale(org.ooc.frontend.model.Type,org.ooc.backend.cdirty.CGenerator,org.ooc.frontend.model.ArrayLiteral)>(type, cgen, null);

        return;
    }

    public static void writePostFinale(org.ooc.frontend.model.Type, org.ooc.backend.cdirty.CGenerator, org.ooc.frontend.model.ArrayLiteral) throws java.io.IOException
    {
        org.ooc.frontend.model.ArrayLiteral arrLitParam, arrLit;
        org.ooc.frontend.model.Type type;
        int $stack6, $stack7, level, $stack19, $stack22, i;
        boolean $stack8, $stack32, $stack48;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack9, $stack13, $stack17, $stack49, $stack52, $stack33, $stack36, $stack15;
        org.ooc.frontend.model.NodeList $stack18, $stack25;
        java.lang.String $stack20;
        org.ooc.frontend.model.Node $stack26;
        org.ooc.frontend.model.Expression $stack27, $stack31, $stack51, $stack35;
        org.ooc.frontend.BuildParams $stack38, $stack46;
        org.ooc.frontend.compilers.AbstractCompiler $stack39, $stack47;
        org.ooc.frontend.Visitor $r0, $r1;

        type := @parameter0: org.ooc.frontend.model.Type;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        arrLitParam := @parameter2: org.ooc.frontend.model.ArrayLiteral;

        arrLit = arrLitParam;

        $stack6 = virtualinvoke type.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        $stack7 = virtualinvoke type.<org.ooc.frontend.model.Type: int getReferenceLevel()>();

        level = $stack6 + $stack7;

        i = 0;

     label1:
        if i >= level goto label8;

        $stack8 = virtualinvoke type.<org.ooc.frontend.model.Type: boolean isArray()>();

        if $stack8 == 0 goto label6;

        if i != 0 goto label4;

        $stack27 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression getArraySize()>();

        if $stack27 == null goto label4;

        $stack31 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression getArraySize()>();

        $stack32 = $stack31 instanceof org.ooc.frontend.model.Literal;

        if $stack32 != 0 goto label2;

        $stack38 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.BuildParams params>;

        $stack39 = $stack38.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        if $stack39 == null goto label2;

        $stack46 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.frontend.BuildParams params>;

        $stack47 = $stack46.<org.ooc.frontend.BuildParams: org.ooc.frontend.compilers.AbstractCompiler compiler>;

        $stack48 = interfaceinvoke $stack47.<org.ooc.frontend.compilers.AbstractCompiler: boolean supportsVLAs()>();

        if $stack48 == 0 goto label3;

     label2:
        $stack33 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack33.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(91);

        $stack35 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression getArraySize()>();

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack35.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r0);

        $stack36 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack36.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(93);

        goto label7;

     label3:
        $stack49 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack49.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(" = GC_malloc(");

        $stack51 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Expression getArraySize()>();

        $r1 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack51.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>($r1);

        $stack52 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack52.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(")");

        goto label7;

     label4:
        $stack13 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack13.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(91);

        if arrLit == null goto label5;

        $stack17 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack18 = virtualinvoke arrLit.<org.ooc.frontend.model.ArrayLiteral: org.ooc.frontend.model.NodeList getElements()>();

        $stack19 = virtualinvoke $stack18.<org.ooc.frontend.model.NodeList: int size()>();

        $stack20 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($stack19);

        virtualinvoke $stack17.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack20);

        $stack22 = i + 1;

        if $stack22 >= level goto label5;

        $stack25 = virtualinvoke arrLit.<org.ooc.frontend.model.ArrayLiteral: org.ooc.frontend.model.NodeList getElements()>();

        $stack26 = virtualinvoke $stack25.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node getFirst()>();

        arrLit = (org.ooc.frontend.model.ArrayLiteral) $stack26;

     label5:
        $stack15 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack15.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(93);

        goto label7;

     label6:
        $stack9 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack9.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("*");

     label7:
        i = i + 1;

        goto label1;

     label8:
        return;
    }

    public static void writeSpaced(org.ooc.frontend.model.Type, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.Type type;
        org.ooc.backend.cdirty.CGenerator cgen;

        type := @parameter0: org.ooc.frontend.model.Type;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void writeSpaced(org.ooc.frontend.model.Type,org.ooc.backend.cdirty.CGenerator,boolean)>(type, cgen, 1);

        return;
    }

    public static void writeSpaced(org.ooc.frontend.model.Type, org.ooc.backend.cdirty.CGenerator, boolean) throws java.io.IOException
    {
        org.ooc.frontend.model.Type type, $stack3;
        org.ooc.backend.cdirty.CGenerator cgen;
        boolean doPrefix, $stack4;
        org.ooc.backend.cdirty.AwesomeWriter $stack5;

        type := @parameter0: org.ooc.frontend.model.Type;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        doPrefix := @parameter2: boolean;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: void write(org.ooc.frontend.model.Type,org.ooc.backend.cdirty.CGenerator,boolean)>(type, cgen, doPrefix);

        $stack3 = virtualinvoke type.<org.ooc.frontend.model.Type: org.ooc.frontend.model.Type getGroundType()>();

        $stack4 = virtualinvoke $stack3.<org.ooc.frontend.model.Type: boolean isFlat()>();

        if $stack4 == 0 goto label1;

        $stack5 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack5.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(32);

     label1:
        return;
    }

    public static void writeFuncPointer(org.ooc.frontend.model.FunctionDecl, java.lang.String, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionDecl decl;
        org.ooc.backend.cdirty.CGenerator cgen;
        java.lang.String name;
        org.ooc.backend.cdirty.AwesomeWriter $stack4;

        decl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        name := @parameter1: java.lang.String;

        cgen := @parameter2: org.ooc.backend.cdirty.CGenerator;

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: org.ooc.backend.cdirty.AwesomeWriter writeFuncPointerStart(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(decl, cgen);

        $stack4 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack4.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(name);

        staticinvoke <org.ooc.backend.cdirty.TypeWriter: org.ooc.backend.cdirty.AwesomeWriter writeFuncPointerEnd(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.CGenerator)>(decl, cgen);

        return;
    }

    public static org.ooc.backend.cdirty.AwesomeWriter writeFuncPointerEnd(org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack2, $stack5;
        org.ooc.frontend.model.FunctionDecl decl;
        org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode $stack4;

        decl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack2 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack2.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(")");

        $stack4 = <org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode: org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode TYPES_ONLY>;

        staticinvoke <org.ooc.backend.cdirty.FunctionDeclWriter: void writeFuncArgs(org.ooc.frontend.model.FunctionDecl,org.ooc.backend.cdirty.FunctionDeclWriter$ArgsWriteMode,org.ooc.frontend.model.TypeDecl,org.ooc.backend.cdirty.CGenerator)>(decl, $stack4, null, cgen);

        $stack5 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        return $stack5;
    }

    public static org.ooc.backend.cdirty.AwesomeWriter writeFuncPointerStart(org.ooc.frontend.model.FunctionDecl, org.ooc.backend.cdirty.CGenerator) throws java.io.IOException
    {
        org.ooc.frontend.model.FunctionDecl decl;
        org.ooc.frontend.model.Type $stack2, $stack4;
        boolean $stack3;
        org.ooc.backend.cdirty.CGenerator cgen;
        org.ooc.backend.cdirty.AwesomeWriter $stack5, $stack6, $stack7;
        org.ooc.frontend.Visitor $r0;

        decl := @parameter0: org.ooc.frontend.model.FunctionDecl;

        cgen := @parameter1: org.ooc.backend.cdirty.CGenerator;

        $stack2 = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack3 = virtualinvoke $stack2.<org.ooc.frontend.model.Type: boolean isVoid()>();

        if $stack3 == 0 goto label1;

        $stack7 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack7.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("void");

        goto label2;

     label1:
        $stack4 = virtualinvoke decl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $r0 = (org.ooc.frontend.Visitor) cgen;

        virtualinvoke $stack4.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>($r0);

     label2:
        $stack5 = cgen.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack6 = virtualinvoke $stack5.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(" (*");

        return $stack6;
    }

    static void <clinit>()
    {
        <org.ooc.backend.cdirty.TypeWriter: boolean doStruct> = 0;

        return;
    }
}
