public class UrlSource extends java.lang.Object implements org.apache.maven.building.Source
{
    private final java.net.URL url;
    private final int hashCode;

    public void <init>(java.net.URL)
    {
        UrlSource this;
        java.net.URL url, $stack3;
        java.lang.Object $stack2;
        int $stack4;
        org.apache.maven.building.UrlSource $r0, $r1;

        this := @this: UrlSource;

        url := @parameter0: java.net.URL;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(url, "url cannot be null");

        $stack3 = (java.net.URL) $stack2;

        $r0 = (org.apache.maven.building.UrlSource) this;

        $r0.<org.apache.maven.building.UrlSource: java.net.URL url> = $stack3;

        $stack4 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>(url);

        $r1 = (org.apache.maven.building.UrlSource) this;

        $r1.<org.apache.maven.building.UrlSource: int hashCode> = $stack4;

        return;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        UrlSource this;
        java.net.URL $stack1;
        java.io.InputStream $stack2;
        org.apache.maven.building.UrlSource $r0;

        this := @this: UrlSource;

        $r0 = (org.apache.maven.building.UrlSource) this;

        $stack1 = $r0.<org.apache.maven.building.UrlSource: java.net.URL url>;

        $stack2 = virtualinvoke $stack1.<java.net.URL: java.io.InputStream openStream()>();

        return $stack2;
    }

    public java.lang.String getLocation()
    {
        UrlSource this;
        java.net.URL $stack1;
        java.lang.String $stack2;
        org.apache.maven.building.UrlSource $r0;

        this := @this: UrlSource;

        $r0 = (org.apache.maven.building.UrlSource) this;

        $stack1 = $r0.<org.apache.maven.building.UrlSource: java.net.URL url>;

        $stack2 = virtualinvoke $stack1.<java.net.URL: java.lang.String toString()>();

        return $stack2;
    }

    public java.net.URL getUrl()
    {
        UrlSource this;
        java.net.URL $stack1;
        org.apache.maven.building.UrlSource $r0;

        this := @this: UrlSource;

        $r0 = (org.apache.maven.building.UrlSource) this;

        $stack1 = $r0.<org.apache.maven.building.UrlSource: java.net.URL url>;

        return $stack1;
    }

    public java.lang.String toString()
    {
        UrlSource this;
        java.lang.String $stack1;
        org.apache.maven.building.UrlSource $r0;

        this := @this: UrlSource;

        $r0 = (org.apache.maven.building.UrlSource) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.building.UrlSource: java.lang.String getLocation()>();

        return $stack1;
    }

    public int hashCode()
    {
        UrlSource this;
        int $stack1;
        org.apache.maven.building.UrlSource $r0;

        this := @this: UrlSource;

        $r0 = (org.apache.maven.building.UrlSource) this;

        $stack1 = $r0.<org.apache.maven.building.UrlSource: int hashCode>;

        return $stack1;
    }

    public boolean equals(java.lang.Object)
    {
        UrlSource this;
        java.lang.Object obj;
        java.lang.Class $stack3, $stack4;
        boolean $stack5, $stack8;
        org.apache.maven.building.UrlSource other, $r0;
        java.net.URL $stack6, $stack7;

        this := @this: UrlSource;

        obj := @parameter0: java.lang.Object;

        if this != obj goto label1;

        return 1;

     label1:
        if obj != null goto label2;

        return 0;

     label2:
        $stack3 = class "Lorg/apache/maven/building/UrlSource;";

        $stack4 = virtualinvoke obj.<java.lang.Object: java.lang.Class getClass()>();

        $stack5 = virtualinvoke $stack3.<java.lang.Object: boolean equals(java.lang.Object)>($stack4);

        if $stack5 != 0 goto label3;

        return 0;

     label3:
        other = (org.apache.maven.building.UrlSource) obj;

        $r0 = (org.apache.maven.building.UrlSource) this;

        $stack7 = $r0.<org.apache.maven.building.UrlSource: java.net.URL url>;

        $stack6 = other.<org.apache.maven.building.UrlSource: java.net.URL url>;

        $stack8 = virtualinvoke $stack7.<java.net.URL: boolean equals(java.lang.Object)>($stack6);

        return $stack8;
    }
}
