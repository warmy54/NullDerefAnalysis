class UrlWrapper extends java.lang.Object
{
    private final java.lang.String spec;

    public void <init>(java.lang.String)
    {
        UrlWrapper this;
        java.lang.String spec;
        sortpom.util.UrlWrapper $r0;

        this := @this: UrlWrapper;

        spec := @parameter0: java.lang.String;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (sortpom.util.UrlWrapper) this;

        $r0.<sortpom.util.UrlWrapper: java.lang.String spec> = spec;

        return;
    }

    public boolean isUrl()
    {
        UrlWrapper this;
        java.lang.String $stack3;
        java.net.MalformedURLException $stack4;
        java.net.URL $u0;
        sortpom.util.UrlWrapper $r0;

        this := @this: UrlWrapper;

     label1:
        $u0 = new java.net.URL;

        $r0 = (sortpom.util.UrlWrapper) this;

        $stack3 = $r0.<sortpom.util.UrlWrapper: java.lang.String spec>;

        specialinvoke $u0.<java.net.URL: void <init>(java.lang.String)>($stack3);

     label2:
        return 1;

     label3:
        $stack4 := @caughtexception;

        return 0;

        catch java.net.MalformedURLException from label1 to label2 with label3;
    }

    public java.io.InputStream openStream() throws java.io.IOException
    {
        UrlWrapper this;
        java.lang.String $stack3;
        java.io.InputStream $stack4;
        java.net.URL $u0;
        sortpom.util.UrlWrapper $r0;

        this := @this: UrlWrapper;

        $u0 = new java.net.URL;

        $r0 = (sortpom.util.UrlWrapper) this;

        $stack3 = $r0.<sortpom.util.UrlWrapper: java.lang.String spec>;

        specialinvoke $u0.<java.net.URL: void <init>(java.lang.String)>($stack3);

        $stack4 = virtualinvoke $u0.<java.net.URL: java.io.InputStream openStream()>();

        return $stack4;
    }
}
