public class Use extends org.ooc.frontend.model.Node
{
    protected java.lang.String identifier;
    protected org.ooc.middle.UseDef useDef;

    public void <init>(org.ooc.middle.UseDef, org.ooc.frontend.model.tokens.Token)
    {
        Use this;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.middle.UseDef useDef;
        org.ooc.frontend.model.Use $r0;

        this := @this: Use;

        useDef := @parameter0: org.ooc.middle.UseDef;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Node: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.Use) this;

        $r0.<org.ooc.frontend.model.Use: org.ooc.middle.UseDef useDef> = useDef;

        return;
    }

    public java.lang.String getIdentifier()
    {
        Use this;
        java.lang.String $stack1;
        org.ooc.frontend.model.Use $r0;

        this := @this: Use;

        $r0 = (org.ooc.frontend.model.Use) this;

        $stack1 = $r0.<org.ooc.frontend.model.Use: java.lang.String identifier>;

        return $stack1;
    }

    public void setIdentifier(java.lang.String)
    {
        Use this;
        java.lang.String name;
        org.ooc.frontend.model.Use $r0;

        this := @this: Use;

        name := @parameter0: java.lang.String;

        $r0 = (org.ooc.frontend.model.Use) this;

        $r0.<org.ooc.frontend.model.Use: java.lang.String identifier> = name;

        return;
    }

    public org.ooc.middle.UseDef getUseDef()
    {
        Use this;
        org.ooc.middle.UseDef $stack1;
        org.ooc.frontend.model.Use $r0;

        this := @this: Use;

        $r0 = (org.ooc.frontend.model.Use) this;

        $stack1 = $r0.<org.ooc.frontend.model.Use: org.ooc.middle.UseDef useDef>;

        return $stack1;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        Use this;
        org.ooc.frontend.model.Node oldie, kiddo;

        this := @this: Use;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        return 0;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        Use this;
        org.ooc.frontend.model.Use $r0;

        this := @this: Use;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.Use) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.Use)>($r0);

        return;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        Use this;
        org.ooc.frontend.Visitor visitor;

        this := @this: Use;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        return;
    }

    public boolean hasChildren()
    {
        Use this;

        this := @this: Use;

        return 0;
    }

    public boolean isResolved()
    {
        Use this;
        org.ooc.middle.UseDef $stack1;
        boolean $stack2;
        org.ooc.frontend.model.Use $r0;

        this := @this: Use;

        $r0 = (org.ooc.frontend.model.Use) this;

        $stack1 = $r0.<org.ooc.frontend.model.Use: org.ooc.middle.UseDef useDef>;

        if $stack1 == null goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }
}
