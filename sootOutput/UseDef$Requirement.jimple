public class UseDef$Requirement extends java.lang.Object
{
    java.lang.String name;
    int[] version;
    org.ooc.middle.UseDef useDef;

    public void <init>(java.lang.String, int[])
    {
        UseDef$Requirement this;
        java.lang.String name;
        int[] version;
        org.ooc.middle.UseDef$Requirement $r0, $r1, $r2;

        this := @this: UseDef$Requirement;

        name := @parameter0: java.lang.String;

        version := @parameter1: int[];

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.ooc.middle.UseDef$Requirement) this;

        $r0.<org.ooc.middle.UseDef$Requirement: org.ooc.middle.UseDef useDef> = null;

        $r1 = (org.ooc.middle.UseDef$Requirement) this;

        $r1.<org.ooc.middle.UseDef$Requirement: java.lang.String name> = name;

        $r2 = (org.ooc.middle.UseDef$Requirement) this;

        $r2.<org.ooc.middle.UseDef$Requirement: int[] version> = version;

        return;
    }

    public java.lang.String toString()
    {
        UseDef$Requirement this;
        int[] $stack1;
        int $stack2;
        java.lang.String $stack3, $stack4;
        org.ooc.middle.UseDef$Requirement $r0, $r1;

        this := @this: UseDef$Requirement;

        $r0 = (org.ooc.middle.UseDef$Requirement) this;

        $stack3 = $r0.<org.ooc.middle.UseDef$Requirement: java.lang.String name>;

        $r1 = (org.ooc.middle.UseDef$Requirement) this;

        $stack1 = $r1.<org.ooc.middle.UseDef$Requirement: int[] version>;

        $stack2 = $stack1[0];

        $stack4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int)>($stack3, $stack2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 \u0001");

        return $stack4;
    }

    public java.lang.String getName()
    {
        UseDef$Requirement this;
        java.lang.String $stack1;
        org.ooc.middle.UseDef$Requirement $r0;

        this := @this: UseDef$Requirement;

        $r0 = (org.ooc.middle.UseDef$Requirement) this;

        $stack1 = $r0.<org.ooc.middle.UseDef$Requirement: java.lang.String name>;

        return $stack1;
    }

    public int[] getVersion()
    {
        UseDef$Requirement this;
        int[] $stack1;
        org.ooc.middle.UseDef$Requirement $r0;

        this := @this: UseDef$Requirement;

        $r0 = (org.ooc.middle.UseDef$Requirement) this;

        $stack1 = $r0.<org.ooc.middle.UseDef$Requirement: int[] version>;

        return $stack1;
    }

    public org.ooc.middle.UseDef getUseDef()
    {
        UseDef$Requirement this;
        org.ooc.middle.UseDef $stack1;
        org.ooc.middle.UseDef$Requirement $r0;

        this := @this: UseDef$Requirement;

        $r0 = (org.ooc.middle.UseDef$Requirement) this;

        $stack1 = $r0.<org.ooc.middle.UseDef$Requirement: org.ooc.middle.UseDef useDef>;

        return $stack1;
    }

    public void setDef(org.ooc.middle.UseDef)
    {
        UseDef$Requirement this;
        org.ooc.middle.UseDef def;
        org.ooc.middle.UseDef$Requirement $r0;

        this := @this: UseDef$Requirement;

        def := @parameter0: org.ooc.middle.UseDef;

        $r0 = (org.ooc.middle.UseDef$Requirement) this;

        $r0.<org.ooc.middle.UseDef$Requirement: org.ooc.middle.UseDef useDef> = def;

        return;
    }
}
