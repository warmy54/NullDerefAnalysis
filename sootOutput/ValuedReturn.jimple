public class ValuedReturn extends org.ooc.frontend.model.Return implements org.ooc.frontend.model.interfaces.MustBeResolved
{
    protected org.ooc.frontend.model.Expression expression;

    public void <init>(org.ooc.frontend.model.Expression, org.ooc.frontend.model.tokens.Token)
    {
        ValuedReturn this;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Expression expression;
        org.ooc.frontend.model.ValuedReturn $r0;

        this := @this: ValuedReturn;

        expression := @parameter0: org.ooc.frontend.model.Expression;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Return: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.ValuedReturn) this;

        $r0.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression> = expression;

        return;
    }

    public org.ooc.frontend.model.Expression getExpression()
    {
        ValuedReturn this;
        org.ooc.frontend.model.Expression $stack1;
        org.ooc.frontend.model.ValuedReturn $r0;

        this := @this: ValuedReturn;

        $r0 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack1 = $r0.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        return $stack1;
    }

    public void setExpression(org.ooc.frontend.model.Expression)
    {
        ValuedReturn this;
        org.ooc.frontend.model.Expression expression;
        org.ooc.frontend.model.ValuedReturn $r0;

        this := @this: ValuedReturn;

        expression := @parameter0: org.ooc.frontend.model.Expression;

        $r0 = (org.ooc.frontend.model.ValuedReturn) this;

        $r0.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression> = expression;

        return;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        ValuedReturn this;
        org.ooc.frontend.model.ValuedReturn $r0;

        this := @this: ValuedReturn;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.ValuedReturn) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.ValuedReturn)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        ValuedReturn this;

        this := @this: ValuedReturn;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        ValuedReturn this;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.Expression $stack2;
        org.ooc.frontend.model.ValuedReturn $r0;

        this := @this: ValuedReturn;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack2 = $r0.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        virtualinvoke $stack2.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>(visitor);

        return;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        ValuedReturn this;
        org.ooc.frontend.model.Node oldie, kiddo;
        boolean $stack3, $stack5;
        org.ooc.frontend.model.Expression $stack4, $stack6;
        org.ooc.frontend.model.ValuedReturn $r0, $r1;

        this := @this: ValuedReturn;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        $stack3 = specialinvoke this.<org.ooc.frontend.model.Return: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>(oldie, kiddo);

        if $stack3 == 0 goto label1;

        return 1;

     label1:
        $r0 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack4 = $r0.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        if oldie != $stack4 goto label2;

        $stack6 = (org.ooc.frontend.model.Expression) kiddo;

        $r1 = (org.ooc.frontend.model.ValuedReturn) this;

        $r1.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression> = $stack6;

        return 1;

     label2:
        $stack5 = specialinvoke this.<org.ooc.frontend.model.Return: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>(oldie, kiddo);

        return $stack5;
    }

    public boolean isResolved()
    {
        ValuedReturn this;

        this := @this: ValuedReturn;

        return 0;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        org.ooc.frontend.model.NodeList stack, $stack59;
        int funcIndex;
        ValuedReturn this;
        org.ooc.frontend.model.Expression $stack11, $stack16, $stack19, $stack21, $stack28, $stack32, $stack34, $stack37, $stack52, $r9, $r15, $r16, $r29;
        org.ooc.frontend.model.Type $stack12, $stack18, $stack22, $stack25, $stack27, $stack29, $stack33, $stack38;
        org.ooc.middle.hobgoblins.Resolver res;
        org.ooc.frontend.BuildParams $stack13;
        boolean $stack14, $stack23, $stack26, $stack30, $stack39, fatal;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack15, $stack68, $stack36;
        java.io.PrintStream $stack17;
        java.lang.String $stack20, $stack51;
        org.ooc.frontend.model.Node $stack24, $stack62, $stack63, $stack64, $r0, $r18, $r22, $r23;
        org.ooc.frontend.model.FunctionDecl fDecl;
        org.ooc.frontend.model.tokens.Token $stack35, $stack46, $stack48, $stack53, $stack57, $stack58, $stack66;
        org.ooc.frontend.model.Argument $stack45;
        org.ooc.frontend.model.Module $stack54;
        org.ooc.middle.OocCompilationError $u0;
        org.ooc.frontend.model.VariableAccess $u1, $u4;
        org.ooc.frontend.model.If $u2;
        org.ooc.frontend.model.VariableDecl $u3, $r7;
        org.ooc.frontend.model.Assignment $u5;
        org.ooc.frontend.model.Line $u6;
        org.ooc.frontend.model.Return $u7;
        org.ooc.frontend.model.Cast $u8;
        java.lang.Throwable $r1;
        org.ooc.frontend.model.ValuedReturn $r2, $r3, $r4, $r5, $r6, $r8, $r10, $r11, $r12, $r13, $r14, $r21, $r24, $r25, $r26, $r27, $r28;
        org.ooc.frontend.model.Statement $r17, $r19, $r20;

        this := @this: ValuedReturn;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        funcIndex = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/FunctionDecl;");

        if funcIndex != -1 goto label1;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r0 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r0, stack, "\'return\' outside a function: wtf?");

        $r1 = (java.lang.Throwable) $u0;

        throw $r1;

     label1:
        $r2 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack11 = $r2.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $stack12 = virtualinvoke $stack11.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack12 == null goto label2;

        $r3 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack21 = $r3.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $stack22 = virtualinvoke $stack21.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack23 = virtualinvoke $stack22.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack23 != 0 goto label4;

     label2:
        $stack13 = res.<org.ooc.middle.hobgoblins.Resolver: org.ooc.frontend.BuildParams params>;

        $stack14 = $stack13.<org.ooc.frontend.BuildParams: boolean veryVerbose>;

        if $stack14 == 0 goto label3;

        $stack17 = <java.lang.System: java.io.PrintStream out>;

        $r4 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack16 = $r4.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $stack18 = virtualinvoke $stack16.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $r5 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack19 = $r5.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $stack20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Type,org.ooc.frontend.model.Expression)>($stack18, $stack19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Expr type (\u0001) of \u0001 is unresolved, looping");

        virtualinvoke $stack17.<java.io.PrintStream: void println(java.lang.String)>($stack20);

     label3:
        $stack15 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack15;

     label4:
        $stack24 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(funcIndex);

        fDecl = (org.ooc.frontend.model.FunctionDecl) $stack24;

        $stack25 = virtualinvoke fDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack26 = virtualinvoke $stack25.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack26 == 0 goto label5;

        $u1 = new org.ooc.frontend.model.VariableAccess;

        $stack45 = virtualinvoke fDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Argument getReturnArg()>();

        $r6 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack46 = $r6.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.tokens.Token startToken>;

        $r7 = (org.ooc.frontend.model.VariableDecl) $stack45;

        specialinvoke $u1.<org.ooc.frontend.model.VariableAccess: void <init>(org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.tokens.Token)>($r7, $stack46);

        $u2 = new org.ooc.frontend.model.If;

        $r8 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack48 = $r8.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.tokens.Token startToken>;

        $r9 = (org.ooc.frontend.model.Expression) $u1;

        specialinvoke $u2.<org.ooc.frontend.model.If: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($r9, $stack48);

        $u3 = new org.ooc.frontend.model.VariableDecl;

        $r10 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack51 = virtualinvoke $r10.<org.ooc.frontend.model.ValuedReturn: java.lang.String generateTempName(java.lang.String,org.ooc.frontend.model.NodeList)>("returnVal", stack);

        $r11 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack52 = $r11.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $r12 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack53 = $r12.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.tokens.Token startToken>;

        $stack54 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Module getModule()>();

        specialinvoke $u3.<org.ooc.frontend.model.VariableDecl: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.Module)>(null, $stack51, $stack52, $stack53, $stack54);

        $u5 = new org.ooc.frontend.model.Assignment;

        $u4 = new org.ooc.frontend.model.VariableAccess;

        $r13 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack57 = $r13.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u4.<org.ooc.frontend.model.VariableAccess: void <init>(org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.tokens.Token)>($u3, $stack57);

        $r14 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack58 = $r14.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.tokens.Token startToken>;

        $r15 = (org.ooc.frontend.model.Expression) $u1;

        $r16 = (org.ooc.frontend.model.Expression) $u4;

        specialinvoke $u5.<org.ooc.frontend.model.Assignment: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($r15, $r16, $stack58);

        $stack59 = virtualinvoke $u2.<org.ooc.frontend.model.If: org.ooc.frontend.model.NodeList getBody()>();

        $u6 = new org.ooc.frontend.model.Line;

        $r17 = (org.ooc.frontend.model.Statement) $u5;

        specialinvoke $u6.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r17);

        $r18 = (org.ooc.frontend.model.Node) $u6;

        virtualinvoke $stack59.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r18);

        $stack62 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $r19 = (org.ooc.frontend.model.Statement) $u3;

        virtualinvoke $stack62.<org.ooc.frontend.model.Node: void addBeforeLine(org.ooc.frontend.model.NodeList,org.ooc.frontend.model.Statement)>(stack, $r19);

        $stack63 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $r20 = (org.ooc.frontend.model.Statement) $u2;

        virtualinvoke $stack63.<org.ooc.frontend.model.Node: void addBeforeLine(org.ooc.frontend.model.NodeList,org.ooc.frontend.model.Statement)>(stack, $r20);

        $stack64 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $u7 = new org.ooc.frontend.model.Return;

        $r21 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack66 = $r21.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u7.<org.ooc.frontend.model.Return: void <init>(org.ooc.frontend.model.tokens.Token)>($stack66);

        $r22 = (org.ooc.frontend.model.Node) this;

        $r23 = (org.ooc.frontend.model.Node) $u7;

        virtualinvoke $stack64.<org.ooc.frontend.model.Node: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r22, $r23);

        $stack68 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack68;

     label5:
        $stack27 = virtualinvoke fDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $r24 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack28 = $r24.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $stack29 = virtualinvoke $stack28.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack30 = virtualinvoke $stack27.<org.ooc.frontend.model.Type: boolean isSuperOf(org.ooc.frontend.model.Type)>($stack29);

        if $stack30 != 0 goto label6;

        $r25 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack37 = $r25.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $stack38 = virtualinvoke $stack37.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack39 = virtualinvoke $stack38.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack39 == 0 goto label7;

     label6:
        $u8 = new org.ooc.frontend.model.Cast;

        $r26 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack32 = $r26.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $stack33 = virtualinvoke fDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $r27 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack34 = $r27.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $stack35 = $stack34.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u8.<org.ooc.frontend.model.Cast: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>($stack32, $stack33, $stack35);

        $r28 = (org.ooc.frontend.model.ValuedReturn) this;

        $r29 = (org.ooc.frontend.model.Expression) $u8;

        $r28.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression> = $r29;

     label7:
        $stack36 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack36;
    }

    public java.lang.String toString()
    {
        ValuedReturn this;
        org.ooc.frontend.model.Expression $stack1;
        java.lang.String $stack2;
        org.ooc.frontend.model.ValuedReturn $r0;

        this := @this: ValuedReturn;

        $r0 = (org.ooc.frontend.model.ValuedReturn) this;

        $stack1 = $r0.<org.ooc.frontend.model.ValuedReturn: org.ooc.frontend.model.Expression expression>;

        $stack2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.Expression)>($stack1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("return \u0001");

        return $stack2;
    }
}
