public class VariableDecl extends org.ooc.frontend.model.Declaration implements org.ooc.frontend.model.interfaces.MustBeUnwrapped, org.ooc.frontend.model.PotentiallyStatic, org.ooc.frontend.model.interfaces.Versioned
{
    private org.ooc.frontend.model.VersionBlock version;
    protected boolean isConst;
    protected boolean isStatic;
    protected boolean isProto;
    protected boolean isGlobal;
    protected org.ooc.frontend.model.Type type;
    protected org.ooc.frontend.model.TypeDecl typeDecl;
    protected org.ooc.frontend.model.Expression expression;
    protected org.ooc.frontend.model.Assignment assign;

    public void <init>(org.ooc.frontend.model.Type, java.lang.String, org.ooc.frontend.model.tokens.Token, org.ooc.frontend.model.Module)
    {
        VariableDecl this;
        org.ooc.frontend.model.Type type;
        java.lang.String name;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Module module;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        type := @parameter0: org.ooc.frontend.model.Type;

        name := @parameter1: java.lang.String;

        startToken := @parameter2: org.ooc.frontend.model.tokens.Token;

        module := @parameter3: org.ooc.frontend.model.Module;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        specialinvoke $r0.<org.ooc.frontend.model.VariableDecl: void <init>(org.ooc.frontend.model.Type,java.lang.String,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.Module)>(type, name, null, startToken, module);

        return;
    }

    public void <init>(org.ooc.frontend.model.Type, java.lang.String, org.ooc.frontend.model.Expression, org.ooc.frontend.model.tokens.Token, org.ooc.frontend.model.Module)
    {
        VariableDecl this;
        java.lang.String name;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.Module module;
        org.ooc.frontend.model.Type type;
        org.ooc.frontend.model.Expression expression;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r2;

        this := @this: VariableDecl;

        type := @parameter0: org.ooc.frontend.model.Type;

        name := @parameter1: java.lang.String;

        expression := @parameter2: org.ooc.frontend.model.Expression;

        startToken := @parameter3: org.ooc.frontend.model.tokens.Token;

        module := @parameter4: org.ooc.frontend.model.Module;

        specialinvoke this.<org.ooc.frontend.model.Declaration: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token,org.ooc.frontend.model.Module)>(name, startToken, module);

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.VersionBlock version> = null;

        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        $r1.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type> = type;

        $r2 = (org.ooc.frontend.model.VariableDecl) this;

        $r2.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression> = expression;

        return;
    }

    public java.lang.String getFullName()
    {
        VariableDecl this;
        java.lang.String $stack4;
        java.io.IOException $stack5;
        java.lang.StringBuilder $u0;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        virtualinvoke $r0.<org.ooc.frontend.model.VariableDecl: void writeFullName(java.lang.Appendable)>($u0);

     label2:
        goto label4;

     label3:
        $stack5 := @caughtexception;

        virtualinvoke $stack5.<java.io.IOException: void printStackTrace()>();

     label4:
        $stack4 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack4;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean isArg()
    {
        VariableDecl this;

        this := @this: VariableDecl;

        return 0;
    }

    public void writeFullName(java.lang.Appendable) throws java.io.IOException
    {
        VariableDecl this;
        boolean $stack2, $stack3, $stack4, $stack15;
        java.lang.Appendable dst;
        java.lang.String $stack5, $stack8, $stack11, $stack16, $stack18, $stack20;
        org.ooc.frontend.model.Module $stack7, $stack10;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        this := @this: VariableDecl;

        dst := @parameter0: java.lang.Appendable;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack2 = virtualinvoke $r0.<org.ooc.frontend.model.VariableDecl: boolean isUnmangled()>();

        if $stack2 == 0 goto label1;

        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        $stack20 = virtualinvoke $r1.<org.ooc.frontend.model.VariableDecl: java.lang.String getUnmangledName()>();

        interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack20);

        goto label6;

     label1:
        $r2 = (org.ooc.frontend.model.VariableDecl) this;

        $stack3 = virtualinvoke $r2.<org.ooc.frontend.model.VariableDecl: boolean isExtern()>();

        if $stack3 == 0 goto label3;

        $r3 = (org.ooc.frontend.model.VariableDecl) this;

        $stack15 = virtualinvoke $r3.<org.ooc.frontend.model.VariableDecl: boolean isExternWithName()>();

        if $stack15 == 0 goto label2;

        $r4 = (org.ooc.frontend.model.VariableDecl) this;

        $stack18 = virtualinvoke $r4.<org.ooc.frontend.model.VariableDecl: java.lang.String getExternName()>();

        interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack18);

        goto label6;

     label2:
        $r5 = (org.ooc.frontend.model.VariableDecl) this;

        $stack16 = virtualinvoke $r5.<org.ooc.frontend.model.VariableDecl: java.lang.String getName()>();

        interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack16);

        goto label6;

     label3:
        $r6 = (org.ooc.frontend.model.VariableDecl) this;

        $stack4 = virtualinvoke $r6.<org.ooc.frontend.model.VariableDecl: boolean isGlobal()>();

        if $stack4 == 0 goto label5;

        $r7 = (org.ooc.frontend.model.VariableDecl) this;

        $stack7 = $r7.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Module module>;

        if $stack7 == null goto label4;

        $r8 = (org.ooc.frontend.model.VariableDecl) this;

        $stack10 = $r8.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Module module>;

        $stack11 = virtualinvoke $stack10.<org.ooc.frontend.model.Module: java.lang.String getMemberPrefix()>();

        interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack11);

     label4:
        $r9 = (org.ooc.frontend.model.VariableDecl) this;

        $stack8 = virtualinvoke $r9.<org.ooc.frontend.model.VariableDecl: java.lang.String getName()>();

        interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack8);

        goto label6;

     label5:
        $r10 = (org.ooc.frontend.model.VariableDecl) this;

        $stack5 = virtualinvoke $r10.<org.ooc.frontend.model.VariableDecl: java.lang.String getName()>();

        interfaceinvoke dst.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($stack5);

     label6:
        return;
    }

    public org.ooc.frontend.model.Type getType()
    {
        VariableDecl this;
        org.ooc.frontend.model.Type $stack1;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        return $stack1;
    }

    public void setType(org.ooc.frontend.model.Type)
    {
        VariableDecl this;
        org.ooc.frontend.model.Type type;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        type := @parameter0: org.ooc.frontend.model.Type;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type> = type;

        return;
    }

    public org.ooc.frontend.model.TypeDecl getTypeDecl()
    {
        VariableDecl this;
        org.ooc.frontend.model.TypeDecl $stack1;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        return $stack1;
    }

    public void setTypeDecl(org.ooc.frontend.model.TypeDecl)
    {
        VariableDecl this;
        org.ooc.frontend.model.TypeDecl typeDecl;
        org.ooc.frontend.model.Type $stack3, $stack5;
        boolean $stack4;
        org.ooc.frontend.model.FuncType funcType;
        org.ooc.frontend.model.FunctionDecl $stack6;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r2;

        this := @this: VariableDecl;

        typeDecl := @parameter0: org.ooc.frontend.model.TypeDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.TypeDecl typeDecl> = typeDecl;

        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        $stack3 = $r1.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        $stack4 = $stack3 instanceof org.ooc.frontend.model.FuncType;

        if $stack4 == 0 goto label1;

        $r2 = (org.ooc.frontend.model.VariableDecl) this;

        $stack5 = $r2.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        funcType = (org.ooc.frontend.model.FuncType) $stack5;

        $stack6 = virtualinvoke funcType.<org.ooc.frontend.model.FuncType: org.ooc.frontend.model.FunctionDecl getDecl()>();

        virtualinvoke $stack6.<org.ooc.frontend.model.FunctionDecl: void setTypeDecl(org.ooc.frontend.model.TypeDecl)>(typeDecl);

     label1:
        return;
    }

    public boolean isMember()
    {
        VariableDecl this;
        org.ooc.frontend.model.TypeDecl $stack1;
        boolean $stack2;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.TypeDecl typeDecl>;

        if $stack1 == null goto label1;

        $stack2 = 1;

        goto label2;

     label1:
        $stack2 = 0;

     label2:
        return $stack2;
    }

    public boolean isConst()
    {
        VariableDecl this;
        boolean $stack1;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: boolean isConst>;

        return $stack1;
    }

    public void setConst(boolean)
    {
        VariableDecl this;
        boolean isConst;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        isConst := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $r0.<org.ooc.frontend.model.VariableDecl: boolean isConst> = isConst;

        return;
    }

    public boolean isStatic()
    {
        VariableDecl this;
        boolean $stack1;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: boolean isStatic>;

        return $stack1;
    }

    public void setStatic(boolean)
    {
        VariableDecl this;
        boolean isStatic;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        isStatic := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $r0.<org.ooc.frontend.model.VariableDecl: boolean isStatic> = isStatic;

        return;
    }

    public boolean isProto()
    {
        VariableDecl this;
        boolean $stack1;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: boolean isProto>;

        return $stack1;
    }

    public void setProto(boolean)
    {
        VariableDecl this;
        boolean isProto;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        isProto := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $r0.<org.ooc.frontend.model.VariableDecl: boolean isProto> = isProto;

        return;
    }

    public boolean isGlobal()
    {
        VariableDecl this;
        boolean $stack1;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: boolean isGlobal>;

        return $stack1;
    }

    public void setGlobal(boolean)
    {
        VariableDecl this;
        boolean isGlobal;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        isGlobal := @parameter0: boolean;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $r0.<org.ooc.frontend.model.VariableDecl: boolean isGlobal> = isGlobal;

        return;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        VariableDecl this;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.VariableDecl)>($r0);

        return;
    }

    public boolean hasChildren()
    {
        VariableDecl this;

        this := @this: VariableDecl;

        return 1;
    }

    public void acceptChildren(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        VariableDecl this;
        org.ooc.frontend.model.Type $stack2, $stack5;
        org.ooc.frontend.model.Expression $stack3, $stack4;
        org.ooc.frontend.Visitor visitor;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r2, $r3;

        this := @this: VariableDecl;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack2 = virtualinvoke $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        if $stack2 == null goto label1;

        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        $stack5 = virtualinvoke $r1.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        virtualinvoke $stack5.<org.ooc.frontend.model.Type: void accept(org.ooc.frontend.Visitor)>(visitor);

     label1:
        $r2 = (org.ooc.frontend.model.VariableDecl) this;

        $stack3 = $r2.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        if $stack3 == null goto label2;

        $r3 = (org.ooc.frontend.model.VariableDecl) this;

        $stack4 = $r3.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        virtualinvoke $stack4.<org.ooc.frontend.model.Expression: void accept(org.ooc.frontend.Visitor)>(visitor);

     label2:
        return;
    }

    public boolean unwrap(org.ooc.frontend.model.NodeList)
    {
        VariableDecl this;
        org.ooc.frontend.model.NodeList stack;
        boolean $stack2;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack2 = virtualinvoke $r0.<org.ooc.frontend.model.VariableDecl: boolean unwrapToVarAcc(org.ooc.frontend.model.NodeList)>(stack);

        return $stack2;
    }

    public boolean unwrapToVarAcc(org.ooc.frontend.model.NodeList)
    {
        org.ooc.frontend.model.NodeList stack, $stack32, $stack35, list, brother#11;
        org.ooc.frontend.model.Node parent, grandpa, $stack26, $stack27, node, $r2, $r3, $r5, $r8, $r10, $r14, $r15, $r17, $r18, $r20, $r21;
        int $stack12, $stack13, declIndex, list#8, node#10;
        boolean $stack15, $stack16, $stack18, $stack19, $stack23, $stack24, $stack47, $stack53, $stack57;
        VariableDecl this;
        org.ooc.frontend.model.tokens.Token $stack21, $stack31;
        java.lang.String $stack22, $stack41, $stack42, $stack44, $stack45, $stack55, $stack56, $stack59;
        java.lang.Object $stack52;
        java.util.Iterator line;
        org.ooc.frontend.model.VariableAccess brother, $u0;
        org.ooc.frontend.model.Line line#9, $u5, $u6, $u7;
        org.ooc.middle.OocCompilationError $u1, $u2, $u3;
        org.ooc.frontend.model.Block $u4;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r4, $r7, $r12;
        java.lang.Throwable $r6, $r9, $r11;
        org.ooc.frontend.model.Statement $r13, $r16, $r19;

        this := @this: VariableDecl;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        parent = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek()>();

        $stack12 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int size()>();

        $stack13 = $stack12 - 2;

        grandpa = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>($stack13);

        $stack15 = parent instanceof org.ooc.frontend.model.Line;

        if $stack15 != 0 goto label01;

        $stack16 = grandpa instanceof org.ooc.frontend.model.Module;

        if $stack16 != 0 goto label01;

        $stack18 = grandpa instanceof org.ooc.frontend.model.FunctionDecl;

        if $stack18 != 0 goto label01;

        $stack19 = grandpa instanceof org.ooc.frontend.model.TypeDecl;

        if $stack19 == 0 goto label02;

     label01:
        return 0;

     label02:
        $u0 = new org.ooc.frontend.model.VariableAccess;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack22 = $r0.<org.ooc.frontend.model.VariableDecl: java.lang.String name>;

        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        $stack21 = $r1.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u0.<org.ooc.frontend.model.VariableAccess: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack22, $stack21);

        virtualinvoke $u0.<org.ooc.frontend.model.VariableAccess: void setRef(org.ooc.frontend.model.Declaration)>(this);

        $r2 = (org.ooc.frontend.model.Node) this;

        $r3 = (org.ooc.frontend.model.Node) $u0;

        $stack23 = virtualinvoke parent.<org.ooc.frontend.model.Node: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r2, $r3);

        if $stack23 != 0 goto label03;

        staticinvoke <java.lang.Thread: void dumpStack()>();

        $u1 = new org.ooc.middle.OocCompilationError;

        $r4 = (org.ooc.frontend.model.VariableDecl) this;

        $stack59 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.VariableAccess,org.ooc.frontend.model.Node)>($r4, $u0, parent) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t replace \n\u0001 with \n\u0001in \n\u0001");

        $r5 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u1.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r5, stack, $stack59);

        $r6 = (java.lang.Throwable) $u1;

        throw $r6;

     label03:
        $stack24 = parent instanceof org.ooc.frontend.model.NodeList;

        if $stack24 == 0 goto label06;

        list = (org.ooc.frontend.model.NodeList) parent;

        line = virtualinvoke list.<org.ooc.frontend.model.NodeList: java.util.Iterator iterator()>();

     label04:
        $stack47 = interfaceinvoke line.<java.util.Iterator: boolean hasNext()>();

        if $stack47 == 0 goto label06;

        $stack52 = interfaceinvoke line.<java.util.Iterator: java.lang.Object next()>();

        node = (org.ooc.frontend.model.Node) $stack52;

        $stack53 = node instanceof org.ooc.frontend.model.VariableAccess;

        if $stack53 == 0 goto label05;

        brother = (org.ooc.frontend.model.VariableAccess) node;

        $stack55 = virtualinvoke brother.<org.ooc.frontend.model.VariableAccess: java.lang.String getName()>();

        $r7 = (org.ooc.frontend.model.VariableDecl) this;

        $stack56 = $r7.<org.ooc.frontend.model.VariableDecl: java.lang.String name>;

        $stack57 = virtualinvoke $stack55.<java.lang.String: boolean equals(java.lang.Object)>($stack56);

        if $stack57 == 0 goto label05;

        virtualinvoke brother.<org.ooc.frontend.model.VariableAccess: void setRef(org.ooc.frontend.model.Declaration)>(this);

     label05:
        goto label04;

     label06:
        list#8 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/Line;");

        if list#8 != -1 goto label07;

        $u2 = new org.ooc.middle.OocCompilationError;

        $stack44 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: java.lang.String toString(boolean)>(1);

        $stack45 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack44) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Not in a line! How are we supposed to add one? Stack = \u0001");

        $r8 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u2.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r8, stack, $stack45);

        $r9 = (java.lang.Throwable) $u2;

        throw $r9;

     label07:
        $stack26 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(list#8);

        line#9 = (org.ooc.frontend.model.Line) $stack26;

        node#10 = list#8 - 1;

        if node#10 != -1 goto label08;

        $u3 = new org.ooc.middle.OocCompilationError;

        $stack41 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: java.lang.String toString(boolean)>(1);

        $stack42 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack41) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Didn\'t find a nodelist containing the line! How are we suppoed to add one? Stack = \u0001");

        $r10 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u3.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r10, stack, $stack42);

        $r11 = (java.lang.Throwable) $u3;

        throw $r11;

     label08:
        $stack27 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(node#10);

        brother#11 = (org.ooc.frontend.model.NodeList) $stack27;

        declIndex = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/VariableDecl;");

        if declIndex != -1 goto label09;

        $u4 = new org.ooc.frontend.model.Block;

        $r12 = (org.ooc.frontend.model.VariableDecl) this;

        $stack31 = $r12.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u4.<org.ooc.frontend.model.Block: void <init>(org.ooc.frontend.model.tokens.Token)>($stack31);

        $stack32 = virtualinvoke $u4.<org.ooc.frontend.model.Block: org.ooc.frontend.model.NodeList getBody()>();

        $u5 = new org.ooc.frontend.model.Line;

        $r13 = (org.ooc.frontend.model.Statement) this;

        specialinvoke $u5.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r13);

        $r14 = (org.ooc.frontend.model.Node) $u5;

        virtualinvoke $stack32.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r14);

        $stack35 = virtualinvoke $u4.<org.ooc.frontend.model.Block: org.ooc.frontend.model.NodeList getBody()>();

        $r15 = (org.ooc.frontend.model.Node) line#9;

        virtualinvoke $stack35.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r15);

        $u6 = new org.ooc.frontend.model.Line;

        $r16 = (org.ooc.frontend.model.Statement) $u4;

        specialinvoke $u6.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r16);

        $r17 = (org.ooc.frontend.model.Node) line#9;

        $r18 = (org.ooc.frontend.model.Node) $u6;

        virtualinvoke brother#11.<org.ooc.frontend.model.NodeList: boolean replace(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r17, $r18);

        goto label10;

     label09:
        $u7 = new org.ooc.frontend.model.Line;

        $r19 = (org.ooc.frontend.model.Statement) this;

        specialinvoke $u7.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r19);

        $r20 = (org.ooc.frontend.model.Node) line#9;

        $r21 = (org.ooc.frontend.model.Node) $u7;

        virtualinvoke brother#11.<org.ooc.frontend.model.NodeList: void addBefore(org.ooc.frontend.model.Node,org.ooc.frontend.model.Node)>($r20, $r21);

     label10:
        return 1;
    }

    public boolean replace(org.ooc.frontend.model.Node, org.ooc.frontend.model.Node)
    {
        org.ooc.frontend.model.Node oldie, kiddo;
        VariableDecl this;
        org.ooc.frontend.model.Expression $stack3, $stack6;
        org.ooc.frontend.model.Type $stack4, $stack5;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r2, $r3;

        this := @this: VariableDecl;

        oldie := @parameter0: org.ooc.frontend.model.Node;

        kiddo := @parameter1: org.ooc.frontend.model.Node;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack3 = $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        if oldie != $stack3 goto label1;

        $stack6 = (org.ooc.frontend.model.Expression) kiddo;

        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        $r1.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression> = $stack6;

        return 1;

     label1:
        $r2 = (org.ooc.frontend.model.VariableDecl) this;

        $stack4 = $r2.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        if oldie != $stack4 goto label2;

        $stack5 = (org.ooc.frontend.model.Type) kiddo;

        $r3 = (org.ooc.frontend.model.VariableDecl) this;

        $r3.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type> = $stack5;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String toString()
    {
        VariableDecl this;
        boolean $stack3;
        java.lang.String $stack4, $stack10;
        org.ooc.frontend.model.Expression $stack6, $stack12;
        org.ooc.frontend.model.Type $stack8;
        java.lang.StringBuilder $stack11, $u0;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r2, $r3, $r4;

        this := @this: VariableDecl;

        $u0 = new java.lang.StringBuilder;

        specialinvoke $u0.<java.lang.StringBuilder: void <init>()>();

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack3 = $r0.<org.ooc.frontend.model.VariableDecl: boolean isStatic>;

        if $stack3 == 0 goto label1;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("static ");

     label1:
        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        $stack4 = $r1.<org.ooc.frontend.model.VariableDecl: java.lang.String name>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack4);

        $r2 = (org.ooc.frontend.model.VariableDecl) this;

        $stack6 = $r2.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        if $stack6 == null goto label2;

        $stack11 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r3 = (org.ooc.frontend.model.VariableDecl) this;

        $stack12 = $r3.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        virtualinvoke $stack11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack12);

     label2:
        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $r4 = (org.ooc.frontend.model.VariableDecl) this;

        $stack8 = $r4.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        virtualinvoke $u0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($stack8);

        $stack10 = virtualinvoke $u0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $stack10;
    }

    public boolean shouldBeLowerCase()
    {
        VariableDecl this;
        java.lang.String $stack1, $stack4, $stack7;
        org.ooc.frontend.model.Type $stack2, $stack3;
        boolean $stack5, $stack6;
        int $stack8;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r2, $r3;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: java.lang.String externName>;

        if $stack1 == null goto label1;

        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        $stack7 = $r1.<org.ooc.frontend.model.VariableDecl: java.lang.String externName>;

        $stack8 = virtualinvoke $stack7.<java.lang.String: int length()>();

        if $stack8 <= 0 goto label2;

     label1:
        $r2 = (org.ooc.frontend.model.VariableDecl) this;

        $stack2 = $r2.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        if $stack2 == null goto label2;

        $r3 = (org.ooc.frontend.model.VariableDecl) this;

        $stack3 = $r3.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        $stack4 = virtualinvoke $stack3.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $stack5 = virtualinvoke $stack4.<java.lang.String: boolean equals(java.lang.Object)>("Class");

        if $stack5 != 0 goto label2;

        $stack6 = 1;

        goto label3;

     label2:
        $stack6 = 0;

     label3:
        return $stack6;
    }

    public void setExpression(org.ooc.frontend.model.Expression)
    {
        VariableDecl this;
        org.ooc.frontend.model.Expression expression;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        expression := @parameter0: org.ooc.frontend.model.Expression;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression> = expression;

        return;
    }

    public org.ooc.frontend.model.Expression getExpression()
    {
        VariableDecl this;
        org.ooc.frontend.model.Expression $stack1;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        return $stack1;
    }

    public boolean isResolved()
    {
        VariableDecl this;

        this := @this: VariableDecl;

        return 0;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        VariableDecl this;
        org.ooc.frontend.model.NodeList stack, $stack27, $stack41, $stack70;
        org.ooc.middle.hobgoblins.Resolver res;
        boolean fatal, $stack22, $stack24, $stack57, $stack74, $stack94, $stack105, $stack106, $stack111, $stack113, $stack135, $stack146, $stack13, $stack14;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response response, $stack11, $stack43, $stack104, $stack109, $stack127, $stack72, $stack18;
        org.ooc.frontend.model.Type $stack12, $stack56, $stack59, $stack110, $stack112, $stack114, $stack115, $stack143, $stack145, $stack149, $stack153, $stack159, $stack16, $stack65, $stack17;
        org.ooc.frontend.model.Expression $stack15, $stack20, $stack21, $stack35, $stack61, $stack73, $stack79, $stack91, $stack140, $stack142, $stack144, $stack148, $stack150, $stack152, $stack158, i#14, $r16, $r30, $r31, $r44, $r52, $r55;
        int $stack19, $stack31, $stack32, $stack33, $stack39, $stack60, $stack130, i;
        org.ooc.frontend.model.Node $stack23, $stack38, $stack40, $r6, $r20, $r53, $r67;
        org.ooc.frontend.model.Module $stack25, $stack36;
        org.ooc.frontend.model.FunctionDecl $stack26, fDecl;
        org.ooc.frontend.model.Assignment $stack30, $stack44, $u4, $u6;
        org.ooc.frontend.model.tokens.Token $stack77, $stack78, $stack118, $stack119, $stack151, $stack63, $stack67, $stack69;
        org.ooc.frontend.model.FunctionCall $stack92, fCall, $u7;
        java.lang.String $stack93, $stack133, $stack134, $stack138, $stack139, $stack156, $stack157, $stack66;
        java.lang.String[] $stack129, $stack132;
        org.ooc.frontend.model.Cast cast, $u1;
        java.lang.Object $stack121;
        org.ooc.frontend.model.Line cast#80, $u10;
        org.ooc.middle.OocCompilationError $u0, $u2;
        org.ooc.frontend.model.VariableAccess $u3, $u5, $u8;
        org.ooc.frontend.model.MemberAccess $u9;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r45, $r47, $r48, $r49, $r50, $r51, $r54, $r56, $r57, $r58, $r59, $r61, $r62, $r63, $r64, $r65, $r68;
        java.lang.Throwable $r7, $r21;
        org.ooc.frontend.model.Statement $r32, $r46, $r60, $r66;

        this := @this: VariableDecl;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

        response = specialinvoke this.<org.ooc.frontend.model.Declaration: org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList,org.ooc.middle.hobgoblins.Resolver,boolean)>(stack, res, fatal);

        $stack11 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        if response == $stack11 goto label01;

        return response;

     label01:
        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack12 = $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        if $stack12 != null goto label03;

        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        $stack152 = $r1.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        if $stack152 == null goto label02;

        $r2 = (org.ooc.frontend.model.VariableDecl) this;

        $stack158 = $r2.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        $stack159 = virtualinvoke $stack158.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $r3 = (org.ooc.frontend.model.VariableDecl) this;

        $r3.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type> = $stack159;

     label02:
        $r4 = (org.ooc.frontend.model.VariableDecl) this;

        $stack153 = $r4.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        if $stack153 != null goto label03;

        if fatal == 0 goto label03;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r5 = (org.ooc.frontend.model.VariableDecl) this;

        $stack156 = virtualinvoke $r5.<org.ooc.frontend.model.VariableDecl: java.lang.String getName()>();

        $stack157 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack156) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Couldn\'t infer type of variable \u0001");

        $r6 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r6, stack, $stack157);

        $r7 = (java.lang.Throwable) $u0;

        throw $r7;

     label03:
        $r8 = (org.ooc.frontend.model.VariableDecl) this;

        $stack13 = virtualinvoke $r8.<org.ooc.frontend.model.VariableDecl: boolean isArg()>();

        if $stack13 != 0 goto label04;

        $r9 = (org.ooc.frontend.model.VariableDecl) this;

        $stack140 = $r9.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        if $stack140 == null goto label04;

        $r10 = (org.ooc.frontend.model.VariableDecl) this;

        $stack142 = $r10.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        $stack143 = virtualinvoke $stack142.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        if $stack143 == null goto label04;

        $r11 = (org.ooc.frontend.model.VariableDecl) this;

        $stack144 = $r11.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        $stack145 = virtualinvoke $stack144.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.Type getType()>();

        $stack146 = virtualinvoke $stack145.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack146 == 0 goto label04;

        $u1 = new org.ooc.frontend.model.Cast;

        $r12 = (org.ooc.frontend.model.VariableDecl) this;

        $stack148 = $r12.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        $r13 = (org.ooc.frontend.model.VariableDecl) this;

        $stack149 = virtualinvoke $r13.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        $r14 = (org.ooc.frontend.model.VariableDecl) this;

        $stack150 = $r14.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        $stack151 = $stack150.<org.ooc.frontend.model.Expression: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u1.<org.ooc.frontend.model.Cast: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Type,org.ooc.frontend.model.tokens.Token)>($stack148, $stack149, $stack151);

        $r15 = (org.ooc.frontend.model.VariableDecl) this;

        $r16 = (org.ooc.frontend.model.Expression) $u1;

        virtualinvoke $r15.<org.ooc.frontend.model.VariableDecl: void setExpression(org.ooc.frontend.model.Expression)>($r16);

     label04:
        $r17 = (org.ooc.frontend.model.VariableDecl) this;

        $stack14 = virtualinvoke $r17.<org.ooc.frontend.model.VariableDecl: boolean isExternWithName()>();

        if $stack14 != 0 goto label07;

        i = 0;

     label05:
        $stack129 = <org.ooc.frontend.model.VariableDecl: java.lang.String[] RESERVED_NAMES>;

        $stack130 = lengthof $stack129;

        if i >= $stack130 goto label07;

        $stack132 = <org.ooc.frontend.model.VariableDecl: java.lang.String[] RESERVED_NAMES>;

        $stack134 = $stack132[i];

        $r18 = (org.ooc.frontend.model.VariableDecl) this;

        $stack133 = $r18.<org.ooc.frontend.model.VariableDecl: java.lang.String name>;

        $stack135 = virtualinvoke $stack134.<java.lang.String: boolean equals(java.lang.Object)>($stack133);

        if $stack135 == 0 goto label06;

        $u2 = new org.ooc.middle.OocCompilationError;

        $r19 = (org.ooc.frontend.model.VariableDecl) this;

        $stack138 = $r19.<org.ooc.frontend.model.VariableDecl: java.lang.String name>;

        $stack139 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack138) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\'\u0001\' is a reserved keyword in C99, you can\'t declare something with that name.");

        $r20 = (org.ooc.frontend.model.Node) this;

        specialinvoke $u2.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r20, stack, $stack139);

        $r21 = (java.lang.Throwable) $u2;

        throw $r21;

     label06:
        i = i + 1;

        goto label05;

     label07:
        $r22 = (org.ooc.frontend.model.VariableDecl) this;

        $stack15 = $r22.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        if $stack15 == null goto label15;

        $r23 = (org.ooc.frontend.model.VariableDecl) this;

        i#14 = $r23.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        cast = null;

     label08:
        $stack105 = i#14 instanceof org.ooc.frontend.model.Cast;

        if $stack105 == 0 goto label09;

        cast = (org.ooc.frontend.model.Cast) i#14;

        i#14 = cast.<org.ooc.frontend.model.Cast: org.ooc.frontend.model.Expression inner>;

        goto label08;

     label09:
        $stack106 = i#14 instanceof org.ooc.frontend.model.FunctionCall;

        if $stack106 == 0 goto label15;

        fCall = (org.ooc.frontend.model.FunctionCall) i#14;

        fDecl = virtualinvoke fCall.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.FunctionDecl getImpl()>();

        if fDecl == null goto label10;

        $stack110 = virtualinvoke fDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack111 = virtualinvoke $stack110.<org.ooc.frontend.model.Type: boolean isResolved()>();

        if $stack111 != 0 goto label11;

     label10:
        $stack109 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack109;

     label11:
        $stack112 = virtualinvoke fDecl.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.Type getReturnType()>();

        $stack113 = virtualinvoke $stack112.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack113 == 0 goto label15;

        $r24 = (org.ooc.frontend.model.VariableDecl) this;

        $stack114 = virtualinvoke $r24.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        if $stack114 != null goto label12;

        $stack127 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack127;

     label12:
        $r25 = (org.ooc.frontend.model.VariableDecl) this;

        $stack115 = virtualinvoke $r25.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type getType()>();

        $r26 = (org.ooc.frontend.model.VariableDecl) this;

        virtualinvoke $r26.<org.ooc.frontend.model.VariableDecl: void setType(org.ooc.frontend.model.Type)>($stack115);

        $u4 = new org.ooc.frontend.model.Assignment;

        $u3 = new org.ooc.frontend.model.VariableAccess;

        $r27 = (org.ooc.frontend.model.VariableDecl) this;

        $stack118 = $r27.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r28 = (org.ooc.frontend.model.VariableDecl) this;

        specialinvoke $u3.<org.ooc.frontend.model.VariableAccess: void <init>(org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.tokens.Token)>($r28, $stack118);

        if cast == null goto label13;

        $stack121 = cast;

        goto label14;

     label13:
        $stack121 = i#14;

     label14:
        $r29 = (org.ooc.frontend.model.VariableDecl) this;

        $stack119 = $r29.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r30 = (org.ooc.frontend.model.Expression) $u3;

        $r31 = (org.ooc.frontend.model.Expression) $stack121;

        specialinvoke $u4.<org.ooc.frontend.model.Assignment: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($r30, $r31, $stack119);

        $r32 = (org.ooc.frontend.model.Statement) $u4;

        virtualinvoke stack.<org.ooc.frontend.model.NodeList: void addAfterLine(org.ooc.frontend.model.NodeList,org.ooc.frontend.model.Statement)>(stack, $r32);

        $r33 = (org.ooc.frontend.model.VariableDecl) this;

        virtualinvoke $r33.<org.ooc.frontend.model.VariableDecl: void setExpression(org.ooc.frontend.model.Expression)>(null);

     label15:
        $r34 = (org.ooc.frontend.model.VariableDecl) this;

        $stack16 = $r34.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        if $stack16 == null goto label18;

        $r35 = (org.ooc.frontend.model.VariableDecl) this;

        $stack56 = $r35.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        $stack57 = virtualinvoke $stack56.<org.ooc.frontend.model.Type: boolean isGeneric()>();

        if $stack57 == 0 goto label18;

        $r36 = (org.ooc.frontend.model.VariableDecl) this;

        $stack59 = $r36.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        $stack60 = virtualinvoke $stack59.<org.ooc.frontend.model.Type: int getPointerLevel()>();

        if $stack60 != 0 goto label18;

        $r37 = (org.ooc.frontend.model.VariableDecl) this;

        $stack61 = $r37.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        if $stack61 == null goto label17;

        $r38 = (org.ooc.frontend.model.VariableDecl) this;

        $stack73 = $r38.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        $stack74 = $stack73 instanceof org.ooc.frontend.model.FunctionCall;

        if $stack74 == 0 goto label16;

        $r39 = (org.ooc.frontend.model.VariableDecl) this;

        $stack91 = $r39.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        $stack92 = (org.ooc.frontend.model.FunctionCall) $stack91;

        $stack93 = virtualinvoke $stack92.<org.ooc.frontend.model.FunctionCall: java.lang.String getName()>();

        $stack94 = virtualinvoke $stack93.<java.lang.String: boolean equals(java.lang.Object)>("gc_malloc");

        if $stack94 == 0 goto label16;

        $stack104 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack104;

     label16:
        $u6 = new org.ooc.frontend.model.Assignment;

        $u5 = new org.ooc.frontend.model.VariableAccess;

        $r40 = (org.ooc.frontend.model.VariableDecl) this;

        $stack77 = $r40.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r41 = (org.ooc.frontend.model.VariableDecl) this;

        specialinvoke $u5.<org.ooc.frontend.model.VariableAccess: void <init>(org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.tokens.Token)>($r41, $stack77);

        $r42 = (org.ooc.frontend.model.VariableDecl) this;

        $stack79 = $r42.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression>;

        $r43 = (org.ooc.frontend.model.VariableDecl) this;

        $stack78 = $r43.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r44 = (org.ooc.frontend.model.Expression) $u5;

        specialinvoke $u6.<org.ooc.frontend.model.Assignment: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($r44, $stack79, $stack78);

        $r45 = (org.ooc.frontend.model.VariableDecl) this;

        $r46 = (org.ooc.frontend.model.Statement) $u6;

        virtualinvoke $r45.<org.ooc.frontend.model.VariableDecl: void addAfterLine(org.ooc.frontend.model.NodeList,org.ooc.frontend.model.Statement)>(stack, $r46);

        $r47 = (org.ooc.frontend.model.VariableDecl) this;

        $r47.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression expression> = null;

     label17:
        $u7 = new org.ooc.frontend.model.FunctionCall;

        $r48 = (org.ooc.frontend.model.VariableDecl) this;

        $stack63 = $r48.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u7.<org.ooc.frontend.model.FunctionCall: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>("gc_malloc", $stack63);

        $u8 = new org.ooc.frontend.model.VariableAccess;

        $r49 = (org.ooc.frontend.model.VariableDecl) this;

        $stack65 = $r49.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        $stack66 = virtualinvoke $stack65.<org.ooc.frontend.model.Type: java.lang.String getName()>();

        $r50 = (org.ooc.frontend.model.VariableDecl) this;

        $stack67 = $r50.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        specialinvoke $u8.<org.ooc.frontend.model.VariableAccess: void <init>(java.lang.String,org.ooc.frontend.model.tokens.Token)>($stack66, $stack67);

        $u9 = new org.ooc.frontend.model.MemberAccess;

        $r51 = (org.ooc.frontend.model.VariableDecl) this;

        $stack69 = $r51.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r52 = (org.ooc.frontend.model.Expression) $u8;

        specialinvoke $u9.<org.ooc.frontend.model.MemberAccess: void <init>(org.ooc.frontend.model.Expression,java.lang.String,org.ooc.frontend.model.tokens.Token)>($r52, "size", $stack69);

        $stack70 = virtualinvoke $u7.<org.ooc.frontend.model.FunctionCall: org.ooc.frontend.model.NodeList getArguments()>();

        $r53 = (org.ooc.frontend.model.Node) $u9;

        virtualinvoke $stack70.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r53);

        $r54 = (org.ooc.frontend.model.VariableDecl) this;

        $r55 = (org.ooc.frontend.model.Expression) $u7;

        virtualinvoke $r54.<org.ooc.frontend.model.VariableDecl: void setExpression(org.ooc.frontend.model.Expression)>($r55);

        $stack72 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack72;

     label18:
        $r56 = (org.ooc.frontend.model.VariableDecl) this;

        $stack17 = $r56.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Type type>;

        if $stack17 == null goto label21;

        $stack19 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/VersionBlock;");

        if $stack19 == -1 goto label20;

        $stack31 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int size()>();

        $stack32 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/VersionBlock;");

        $stack33 = $stack31 - $stack32;

        if $stack33 != 3 goto label20;

        $r57 = (org.ooc.frontend.model.VariableDecl) this;

        $stack35 = virtualinvoke $r57.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression getExpression()>();

        if $stack35 == null goto label19;

        $r58 = (org.ooc.frontend.model.VariableDecl) this;

        $stack44 = virtualinvoke $r58.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Assignment newAssignment()>();

        $r59 = (org.ooc.frontend.model.VariableDecl) this;

        $r60 = (org.ooc.frontend.model.Statement) $stack44;

        virtualinvoke $r59.<org.ooc.frontend.model.VariableDecl: void addAfterLine(org.ooc.frontend.model.NodeList,org.ooc.frontend.model.Statement)>(stack, $r60);

        $r61 = (org.ooc.frontend.model.VariableDecl) this;

        virtualinvoke $r61.<org.ooc.frontend.model.VariableDecl: void setExpression(org.ooc.frontend.model.Expression)>(null);

     label19:
        $stack36 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Module getModule()>();

        $r62 = (org.ooc.frontend.model.VariableDecl) this;

        virtualinvoke $r62.<org.ooc.frontend.model.VariableDecl: void addToModule(org.ooc.frontend.model.Module)>($stack36);

        i = virtualinvoke stack.<org.ooc.frontend.model.NodeList: int find(java.lang.Class)>(class "Lorg/ooc/frontend/model/Line;");

        $stack38 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>(i);

        cast#80 = (org.ooc.frontend.model.Line) $stack38;

        $stack39 = i - 1;

        $stack40 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node get(int)>($stack39);

        $stack41 = (org.ooc.frontend.model.NodeList) $stack40;

        virtualinvoke $stack41.<org.ooc.frontend.model.NodeList: boolean remove(java.lang.Object)>(cast#80);

        $stack43 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response LOOP>;

        return $stack43;

     label20:
        $r63 = (org.ooc.frontend.model.VariableDecl) this;

        $stack20 = virtualinvoke $r63.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression getExpression()>();

        if $stack20 == null goto label21;

        $r64 = (org.ooc.frontend.model.VariableDecl) this;

        $stack21 = virtualinvoke $r64.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression getExpression()>();

        $stack22 = virtualinvoke $stack21.<org.ooc.frontend.model.Expression: boolean isConstant()>();

        if $stack22 != 0 goto label21;

        $stack23 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Node peek(int)>(3);

        $stack24 = $stack23 instanceof org.ooc.frontend.model.Module;

        if $stack24 == 0 goto label21;

        $stack25 = virtualinvoke stack.<org.ooc.frontend.model.NodeList: org.ooc.frontend.model.Module getModule()>();

        $stack26 = virtualinvoke $stack25.<org.ooc.frontend.model.Module: org.ooc.frontend.model.FunctionDecl getLoadFunc()>();

        $stack27 = virtualinvoke $stack26.<org.ooc.frontend.model.FunctionDecl: org.ooc.frontend.model.NodeList getBody()>();

        $u10 = new org.ooc.frontend.model.Line;

        $r65 = (org.ooc.frontend.model.VariableDecl) this;

        $stack30 = virtualinvoke $r65.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Assignment newAssignment()>();

        $r66 = (org.ooc.frontend.model.Statement) $stack30;

        specialinvoke $u10.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r66);

        $r67 = (org.ooc.frontend.model.Node) $u10;

        virtualinvoke $stack27.<org.ooc.frontend.model.NodeList: void add(int,org.ooc.frontend.model.Node)>(0, $r67);

        $r68 = (org.ooc.frontend.model.VariableDecl) this;

        virtualinvoke $r68.<org.ooc.frontend.model.VariableDecl: void setExpression(org.ooc.frontend.model.Expression)>(null);

     label21:
        $stack18 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack18;
    }

    private org.ooc.frontend.model.Assignment newAssignment()
    {
        VariableDecl this;
        org.ooc.frontend.model.tokens.Token $stack3, $stack5;
        org.ooc.frontend.model.Expression $stack4, $r4;
        org.ooc.frontend.model.VariableAccess $u0;
        org.ooc.frontend.model.Assignment $u1;
        org.ooc.frontend.model.VariableDecl $r0, $r1, $r2, $r3;

        this := @this: VariableDecl;

        $u1 = new org.ooc.frontend.model.Assignment;

        $u0 = new org.ooc.frontend.model.VariableAccess;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack3 = $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r1 = (org.ooc.frontend.model.VariableDecl) this;

        specialinvoke $u0.<org.ooc.frontend.model.VariableAccess: void <init>(org.ooc.frontend.model.VariableDecl,org.ooc.frontend.model.tokens.Token)>($r1, $stack3);

        $r2 = (org.ooc.frontend.model.VariableDecl) this;

        $stack4 = virtualinvoke $r2.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.Expression getExpression()>();

        $r3 = (org.ooc.frontend.model.VariableDecl) this;

        $stack5 = $r3.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.tokens.Token startToken>;

        $r4 = (org.ooc.frontend.model.Expression) $u0;

        specialinvoke $u1.<org.ooc.frontend.model.Assignment: void <init>(org.ooc.frontend.model.Expression,org.ooc.frontend.model.Expression,org.ooc.frontend.model.tokens.Token)>($r4, $stack4, $stack5);

        return $u1;
    }

    public void setVersion(org.ooc.frontend.model.VersionBlock)
    {
        VariableDecl this;
        org.ooc.frontend.model.VersionBlock version;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        version := @parameter0: org.ooc.frontend.model.VersionBlock;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.VersionBlock version> = version;

        return;
    }

    public org.ooc.frontend.model.VersionBlock getVersion()
    {
        VariableDecl this;
        org.ooc.frontend.model.VersionBlock $stack1;
        org.ooc.frontend.model.VariableDecl $r0;

        this := @this: VariableDecl;

        $r0 = (org.ooc.frontend.model.VariableDecl) this;

        $stack1 = $r0.<org.ooc.frontend.model.VariableDecl: org.ooc.frontend.model.VersionBlock version>;

        return $stack1;
    }

    public void addToModule(org.ooc.frontend.model.Module)
    {
        org.ooc.frontend.model.Module module;
        org.ooc.frontend.model.NodeList $stack2;
        VariableDecl this;
        org.ooc.frontend.model.Line $u0;
        org.ooc.frontend.model.Statement $r0;
        org.ooc.frontend.model.Node $r1;

        this := @this: VariableDecl;

        module := @parameter0: org.ooc.frontend.model.Module;

        $stack2 = virtualinvoke module.<org.ooc.frontend.model.Module: org.ooc.frontend.model.NodeList getBody()>();

        $u0 = new org.ooc.frontend.model.Line;

        $r0 = (org.ooc.frontend.model.Statement) this;

        specialinvoke $u0.<org.ooc.frontend.model.Line: void <init>(org.ooc.frontend.model.Statement)>($r0);

        $r1 = (org.ooc.frontend.model.Node) $u0;

        virtualinvoke $stack2.<org.ooc.frontend.model.NodeList: boolean add(org.ooc.frontend.model.Node)>($r1);

        return;
    }
}
