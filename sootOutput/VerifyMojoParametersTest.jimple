class VerifyMojoParametersTest extends java.lang.Object
{
    private final java.io.File pomFile;
    private sortpom.SortPomImpl sortPomImpl;
    private sortpom.SortPomService sortPomService;
    private sortpom.util.FileUtil fileUtil;
    private sortpom.VerifyMojo verifyMojo;
    private sortpom.wrapper.ElementWrapperCreator elementWrapperCreator;
    private sortpom.wrapper.TextWrapperCreator textWrapperCreator;
    private sortpom.XmlOutputGenerator xmlOutputGenerator;
    private sortpom.util.WriterFactory writerFactory;

    void <init>()
    {
        VerifyMojoParametersTest this;
        java.lang.Object $stack1;
        java.io.File $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0;

        this := @this: VerifyMojoParametersTest;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $stack1 = staticinvoke <org.mockito.Mockito: java.lang.Object mock(java.lang.Class)>(class "Ljava/io/File;");

        $stack2 = (java.io.File) $stack1;

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $r0.<sortpom.verify.VerifyMojoParametersTest: java.io.File pomFile> = $stack2;

        return;
    }

    void setup() throws java.lang.SecurityException, java.lang.IllegalArgumentException
    {
        VerifyMojoParametersTest this;
        sortpom.VerifyMojo $stack5, $stack7, $stack9, $stack11, $stack13, $u0;
        java.lang.Object $stack14, $stack18, $stack22, $stack24, $stack26, $stack28, $stack31, $stack35;
        sortpom.SortPomImpl $stack15, $stack17;
        sortpom.SortPomService $stack19, $stack21;
        sortpom.util.FileUtil $stack23;
        sortpom.XmlOutputGenerator $stack25, $stack34;
        sortpom.wrapper.WrapperFactoryImpl wrapperFactoryImpl;
        sortpom.wrapper.ElementWrapperCreator $stack29;
        sortpom.wrapper.TextWrapperCreator $stack32;
        sortpom.util.WriterFactory $stack36;
        refutils.ReflectionHelper $u1, $u2, $u3, $u4, $u5, $u6, $u7, $u8, $u9, $u10;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        this := @this: VerifyMojoParametersTest;

        $u0 = new sortpom.VerifyMojo;

        specialinvoke $u0.<sortpom.VerifyMojo: void <init>()>();

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo> = $u0;

        $u1 = new refutils.ReflectionHelper;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack5 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo>;

        specialinvoke $u1.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack5);

        virtualinvoke $u1.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>("lineSeparator", "\n");

        $u2 = new refutils.ReflectionHelper;

        $r2 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack7 = $r2.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo>;

        specialinvoke $u2.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack7);

        virtualinvoke $u2.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>("encoding", "UTF-8");

        $u3 = new refutils.ReflectionHelper;

        $r3 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack9 = $r3.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo>;

        specialinvoke $u3.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack9);

        virtualinvoke $u3.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>("verifyFail", "SORT");

        $u4 = new refutils.ReflectionHelper;

        $r4 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack11 = $r4.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo>;

        specialinvoke $u4.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack11);

        virtualinvoke $u4.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>("verifyFailOn", "xmlElements");

        $u5 = new refutils.ReflectionHelper;

        $r5 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack13 = $r5.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo>;

        specialinvoke $u5.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack13);

        $stack14 = virtualinvoke $u5.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/SortPomImpl;");

        $stack15 = (sortpom.SortPomImpl) $stack14;

        $r6 = (sortpom.verify.VerifyMojoParametersTest) this;

        $r6.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomImpl sortPomImpl> = $stack15;

        $u6 = new refutils.ReflectionHelper;

        $r7 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack17 = $r7.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomImpl sortPomImpl>;

        specialinvoke $u6.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack17);

        $stack18 = virtualinvoke $u6.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/SortPomService;");

        $stack19 = (sortpom.SortPomService) $stack18;

        $r8 = (sortpom.verify.VerifyMojoParametersTest) this;

        $r8.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomService sortPomService> = $stack19;

        $u7 = new refutils.ReflectionHelper;

        $r9 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack21 = $r9.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomService sortPomService>;

        specialinvoke $u7.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack21);

        $stack22 = virtualinvoke $u7.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/util/FileUtil;");

        $stack23 = (sortpom.util.FileUtil) $stack22;

        $r10 = (sortpom.verify.VerifyMojoParametersTest) this;

        $r10.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.FileUtil fileUtil> = $stack23;

        $stack24 = virtualinvoke $u7.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/XmlOutputGenerator;");

        $stack25 = (sortpom.XmlOutputGenerator) $stack24;

        $r11 = (sortpom.verify.VerifyMojoParametersTest) this;

        $r11.<sortpom.verify.VerifyMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator> = $stack25;

        $stack26 = virtualinvoke $u7.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/wrapper/WrapperFactoryImpl;");

        wrapperFactoryImpl = (sortpom.wrapper.WrapperFactoryImpl) $stack26;

        $u8 = new refutils.ReflectionHelper;

        specialinvoke $u8.<refutils.ReflectionHelper: void <init>(java.lang.Object)>(wrapperFactoryImpl);

        $stack28 = virtualinvoke $u8.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/wrapper/ElementWrapperCreator;");

        $stack29 = (sortpom.wrapper.ElementWrapperCreator) $stack28;

        $r12 = (sortpom.verify.VerifyMojoParametersTest) this;

        $r12.<sortpom.verify.VerifyMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator> = $stack29;

        $u9 = new refutils.ReflectionHelper;

        specialinvoke $u9.<refutils.ReflectionHelper: void <init>(java.lang.Object)>(wrapperFactoryImpl);

        $stack31 = virtualinvoke $u9.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/wrapper/TextWrapperCreator;");

        $stack32 = (sortpom.wrapper.TextWrapperCreator) $stack31;

        $r13 = (sortpom.verify.VerifyMojoParametersTest) this;

        $r13.<sortpom.verify.VerifyMojoParametersTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator> = $stack32;

        $u10 = new refutils.ReflectionHelper;

        $r14 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack34 = $r14.<sortpom.verify.VerifyMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        specialinvoke $u10.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack34);

        $stack35 = virtualinvoke $u10.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.Class)>(class "Lsortpom/util/WriterFactory;");

        $stack36 = (sortpom.util.WriterFactory) $stack35;

        $r15 = (sortpom.verify.VerifyMojoParametersTest) this;

        $r15.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.WriterFactory writerFactory> = $stack36;

        return;
    }

    void pomFileParameter()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.SortPomImpl $stack2;
        sortpom.util.FileUtil $stack3;
        java.io.File $stack4;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1, $r2, $r3;

        this := @this: VerifyMojoParametersTest;

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack4 = $r0.<sortpom.verify.VerifyMojoParametersTest: java.io.File pomFile>;

        $stack1 = newarray (java.lang.Object)[2];

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomImpl sortPomImpl>;

        $stack1[0] = $stack2;

        $r2 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack3 = $r2.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[1] = $stack3;

        $r3 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r3.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("pomFile", $stack4, $stack1);

        return;
    }

    void createBackupFileParameter()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.SortPomService $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomService sortPomService>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("createBackupFile", $stack1);

        return;
    }

    void keepTimestampParameter()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.util.FileUtil $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("keepTimestamp", $stack1);

        return;
    }

    void backupFileExtensionParameter()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.SortPomService $stack2;
        sortpom.util.FileUtil $stack3;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1, $r2;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[2];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomService sortPomService>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack3 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[1] = $stack3;

        $r2 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r2.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("backupFileExtension", ".gurka", $stack1);

        return;
    }

    void violationFilenameParameterShouldBeFound()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.SortPomService $stack2;
        sortpom.util.FileUtil $stack3;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1, $r2;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[2];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomService sortPomService>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack3 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[1] = $stack3;

        $r2 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r2.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("violationFilename", "violets.are", $stack1);

        return;
    }

    void encodingParameter()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.util.FileUtil $stack2;
        sortpom.SortPomService $stack3;
        sortpom.XmlOutputGenerator $stack4;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1, $r2, $r3;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[3];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack3 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomService sortPomService>;

        $stack1[1] = $stack3;

        $r2 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack4 = $r2.<sortpom.verify.VerifyMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        $stack1[2] = $stack4;

        $r3 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r3.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("encoding", "GURKA-2000", $stack1);

        return;
    }

    void lineSeparatorParameter()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.util.WriterFactory $stack4;
        java.lang.Object lineSeparatorUtil;
        java.lang.String $stack7;
        org.hamcrest.Matcher $stack8, $stack9;
        refutils.ReflectionHelper $u0;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r0.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("lineSeparator", "\r", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack4 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.WriterFactory writerFactory>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        lineSeparatorUtil = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("lineSeparatorUtil");

        $stack7 = virtualinvoke lineSeparatorUtil.<java.lang.Object: java.lang.String toString()>();

        $stack8 = staticinvoke <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>("\r");

        $stack9 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack8);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.String,java.lang.Object,org.hamcrest.Matcher)>("\r", $stack7, $stack9);

        return;
    }

    void parameterNrOfIndentSpaceShouldEndUpInXmlProcessor()
    {
        VerifyMojoParametersTest this;
        java.lang.Integer $stack2;
        java.lang.Object[] $stack3;
        sortpom.XmlOutputGenerator $stack5;
        java.lang.Object $stack6;
        org.hamcrest.Matcher $stack7, $stack8;
        refutils.ReflectionHelper $u0;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        $stack3 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r0.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("nrOfIndentSpace", $stack2, $stack3);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack5 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack5);

        $stack6 = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("indentCharacters");

        $stack7 = staticinvoke <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>("      ");

        $stack8 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack7);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack6, $stack8);

        return;
    }

    void expandEmptyElementsParameter()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.XmlOutputGenerator $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("expandEmptyElements", $stack1);

        return;
    }

    void spaceBeforeCloseEmptyElementParameter()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.util.WriterFactory $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.WriterFactory writerFactory>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("spaceBeforeCloseEmptyElement", $stack1);

        return;
    }

    void predefinedSortOrderParameter()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.util.FileUtil $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("predefinedSortOrder", "tomatoSort", $stack1);

        return;
    }

    void parameterSortOrderFileShouldEndUpInFileUtil()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.util.FileUtil $stack4;
        java.lang.Object actual;
        org.hamcrest.Matcher $stack6, $stack7;
        refutils.ReflectionHelper $u0;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r0.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("sortOrderFile", "sortOrderFile.gurka", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack4 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.util.FileUtil fileUtil>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        actual = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("customSortOrderFile");

        $stack6 = staticinvoke <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>("sortOrderFile.gurka");

        $stack7 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack6);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(actual, $stack7);

        return;
    }

    void parameterSortDependenciesShouldEndUpInElementWrapperCreator()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.wrapper.ElementWrapperCreator $stack4;
        java.lang.Object sortDependencies;
        java.lang.String $stack6;
        org.hamcrest.Matcher $stack7;
        refutils.ReflectionHelper $u0;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r0.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("sortDependencies", "groupId,scope", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack4 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        sortDependencies = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("sortDependencies");

        $stack6 = virtualinvoke sortDependencies.<java.lang.Object: java.lang.String toString()>();

        $stack7 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>("DependencySortOrder{childElementNames=[groupId, scope]}");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack6, $stack7);

        return;
    }

    void parameterSortPluginsShouldEndUpInWrapperFactoryImpl()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.wrapper.ElementWrapperCreator $stack4;
        java.lang.Object sortPlugins;
        java.lang.String $stack6;
        org.hamcrest.Matcher $stack7;
        refutils.ReflectionHelper $u0;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r0.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("sortPlugins", "alfa,beta", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack4 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        sortPlugins = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("sortPlugins");

        $stack6 = virtualinvoke sortPlugins.<java.lang.Object: java.lang.String toString()>();

        $stack7 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(java.lang.Object)>("DependencySortOrder{childElementNames=[alfa, beta]}");

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack6, $stack7);

        return;
    }

    void parameterSortModulesShouldEndUpInWrapperFactoryImpl()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.wrapper.ElementWrapperCreator $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("sortModules", $stack1);

        return;
    }

    void parameterSortExecutionsShouldEndUpInWrapperFactoryImpl()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.wrapper.ElementWrapperCreator $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("sortExecutions", $stack1);

        return;
    }

    void parameterSortPropertiesShouldEndUpInWrapperFactoryImpl()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.wrapper.ElementWrapperCreator $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.wrapper.ElementWrapperCreator elementWrapperCreator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("sortProperties", $stack1);

        return;
    }

    void parameterKeepBlankLineShouldEndUpInXmlProcessor()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.wrapper.TextWrapperCreator $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.wrapper.TextWrapperCreator textWrapperCreator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("keepBlankLines", $stack1);

        return;
    }

    void parameterIndentBlankLineShouldEndUpInXmlProcessor()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.XmlOutputGenerator $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("indentBlankLines", $stack1);

        return;
    }

    void parameterIndentSchemaLocationShouldEndUpInXmlProcessor()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack1;
        sortpom.XmlOutputGenerator $stack2;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack1 = newarray (java.lang.Object)[1];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack2 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.XmlOutputGenerator xmlOutputGenerator>;

        $stack1[0] = $stack2;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r1.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String,java.lang.Object[])>("indentSchemaLocation", $stack1);

        return;
    }

    void parameterVerifyFailShouldEndUpInXmlProcessor()
    {
        VerifyMojoParametersTest this;
        java.lang.Object[] $stack2;
        sortpom.SortPomImpl $stack4;
        java.lang.Object verifyFailType;
        sortpom.parameter.VerifyFailType $stack6;
        org.hamcrest.Matcher $stack7, $stack8;
        refutils.ReflectionHelper $u0;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        $stack2 = newarray (java.lang.Object)[0];

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        specialinvoke $r0.<sortpom.verify.VerifyMojoParametersTest: void testParameterMoveFromMojoToRestOfApplication(java.lang.String,java.lang.Object,java.lang.Object[])>("verifyFail", "STOP", $stack2);

        $u0 = new refutils.ReflectionHelper;

        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack4 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.SortPomImpl sortPomImpl>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack4);

        verifyFailType = virtualinvoke $u0.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>("verifyFailType");

        $stack6 = <sortpom.parameter.VerifyFailType: sortpom.parameter.VerifyFailType STOP>;

        $stack7 = staticinvoke <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>($stack6);

        $stack8 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack7);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(verifyFailType, $stack8);

        return;
    }

    private transient void testParameterMoveFromMojoToRestOfApplication(java.lang.String, java.lang.Object, java.lang.Object[])
    {
        VerifyMojoParametersTest this;
        sortpom.VerifyMojo $stack10, $stack11;
        java.lang.String parameterName;
        java.lang.Object parameterValue, someInstanceThatContainParameter, actual;
        java.lang.Object[] whereParameterCanBeFound;
        int l5, l6;
        org.hamcrest.Matcher $stack14, $stack15;
        java.lang.Throwable $stack18;
        refutils.ReflectionHelper $u0, $u2;
        java.lang.RuntimeException $u1;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        parameterName := @parameter0: java.lang.String;

        parameterValue := @parameter1: java.lang.Object;

        whereParameterCanBeFound := @parameter2: java.lang.Object[];

        $u0 = new refutils.ReflectionHelper;

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack10 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack10);

        virtualinvoke $u0.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>(parameterName, parameterValue);

     label1:
        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack11 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo>;

        virtualinvoke $stack11.<sortpom.VerifyMojo: void setup()>();

     label2:
        goto label4;

     label3:
        $stack18 := @caughtexception;

        $u1 = new java.lang.RuntimeException;

        specialinvoke $u1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($stack18);

        throw $u1;

     label4:
        l5 = lengthof whereParameterCanBeFound;

        l6 = 0;

     label5:
        if l6 >= l5 goto label6;

        someInstanceThatContainParameter = whereParameterCanBeFound[l6];

        $u2 = new refutils.ReflectionHelper;

        specialinvoke $u2.<refutils.ReflectionHelper: void <init>(java.lang.Object)>(someInstanceThatContainParameter);

        actual = virtualinvoke $u2.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>(parameterName);

        $stack14 = staticinvoke <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>(parameterValue);

        $stack15 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack14);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>(actual, $stack15);

        l6 = l6 + 1;

        goto label5;

     label6:
        return;

        catch org.apache.maven.plugin.MojoFailureException from label1 to label2 with label3;
    }

    private transient void testParameterMoveFromMojoToRestOfApplicationForBoolean(java.lang.String, java.lang.Object[])
    {
        VerifyMojoParametersTest this;
        sortpom.VerifyMojo $stack9, $stack11;
        java.lang.String parameterName;
        java.lang.Boolean $stack10, $stack14, $stack16, $stack17;
        java.lang.Object[] whereParameterCanBeFound;
        int l4, l5;
        java.lang.Object someInstanceThatContainParameter, $stack13;
        boolean actual;
        org.hamcrest.Matcher $stack18, $stack19;
        java.lang.Throwable $stack22;
        refutils.ReflectionHelper $u0, $u2;
        java.lang.RuntimeException $u1;
        sortpom.verify.VerifyMojoParametersTest $r0, $r1;

        this := @this: VerifyMojoParametersTest;

        parameterName := @parameter0: java.lang.String;

        whereParameterCanBeFound := @parameter1: java.lang.Object[];

        $u0 = new refutils.ReflectionHelper;

        $r0 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack9 = $r0.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo>;

        specialinvoke $u0.<refutils.ReflectionHelper: void <init>(java.lang.Object)>($stack9);

        $stack10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $u0.<refutils.ReflectionHelper: void setField(java.lang.String,java.lang.Object)>(parameterName, $stack10);

     label1:
        $r1 = (sortpom.verify.VerifyMojoParametersTest) this;

        $stack11 = $r1.<sortpom.verify.VerifyMojoParametersTest: sortpom.VerifyMojo verifyMojo>;

        virtualinvoke $stack11.<sortpom.VerifyMojo: void setup()>();

     label2:
        goto label4;

     label3:
        $stack22 := @caughtexception;

        $u1 = new java.lang.RuntimeException;

        specialinvoke $u1.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($stack22);

        throw $u1;

     label4:
        l4 = lengthof whereParameterCanBeFound;

        l5 = 0;

     label5:
        if l5 >= l4 goto label6;

        someInstanceThatContainParameter = whereParameterCanBeFound[l5];

        $u2 = new refutils.ReflectionHelper;

        specialinvoke $u2.<refutils.ReflectionHelper: void <init>(java.lang.Object)>(someInstanceThatContainParameter);

        $stack13 = virtualinvoke $u2.<refutils.ReflectionHelper: java.lang.Object getField(java.lang.String)>(parameterName);

        $stack14 = (java.lang.Boolean) $stack13;

        actual = virtualinvoke $stack14.<java.lang.Boolean: boolean booleanValue()>();

        $stack16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(actual);

        $stack17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $stack18 = staticinvoke <org.hamcrest.core.IsEqual: org.hamcrest.Matcher equalTo(java.lang.Object)>($stack17);

        $stack19 = staticinvoke <org.hamcrest.core.Is: org.hamcrest.Matcher is(org.hamcrest.Matcher)>($stack18);

        staticinvoke <org.hamcrest.MatcherAssert: void assertThat(java.lang.Object,org.hamcrest.Matcher)>($stack16, $stack19);

        l5 = l5 + 1;

        goto label5;

     label6:
        return;

        catch org.apache.maven.plugin.MojoFailureException from label1 to label2 with label3;
    }
}
