class VersionBlock$1 extends java.lang.Object implements org.ooc.frontend.model.VersionNodes$VersionNodeVisitor
{
    final org.ooc.frontend.model.NodeList val$stack;
    final org.ooc.frontend.model.VersionBlock this$0;

    void <init>(org.ooc.frontend.model.VersionBlock, org.ooc.frontend.model.NodeList)
    {
        VersionBlock$1 this;
        org.ooc.frontend.model.VersionBlock this$0;
        org.ooc.frontend.model.NodeList l2;
        org.ooc.frontend.model.VersionBlock$1 $r0, $r1;

        this := @this: VersionBlock$1;

        this$0 := @parameter0: org.ooc.frontend.model.VersionBlock;

        l2 := @parameter1: org.ooc.frontend.model.NodeList;

        $r0 = (org.ooc.frontend.model.VersionBlock$1) this;

        $r0.<org.ooc.frontend.model.VersionBlock$1: org.ooc.frontend.model.VersionBlock this$0> = this$0;

        $r1 = (org.ooc.frontend.model.VersionBlock$1) this;

        $r1.<org.ooc.frontend.model.VersionBlock$1: org.ooc.frontend.model.NodeList val$stack> = l2;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionOr) throws java.io.IOException
    {
        org.ooc.frontend.model.VersionNodes$VersionOr versionOr;
        VersionBlock$1 this;

        this := @this: VersionBlock$1;

        versionOr := @parameter0: org.ooc.frontend.model.VersionNodes$VersionOr;

        virtualinvoke versionOr.<org.ooc.frontend.model.VersionNodes$VersionOr: void acceptChildren(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionAnd) throws java.io.IOException
    {
        org.ooc.frontend.model.VersionNodes$VersionAnd versionAnd;
        VersionBlock$1 this;

        this := @this: VersionBlock$1;

        versionAnd := @parameter0: org.ooc.frontend.model.VersionNodes$VersionAnd;

        virtualinvoke versionAnd.<org.ooc.frontend.model.VersionNodes$VersionAnd: void acceptChildren(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionNegation) throws java.io.IOException
    {
        org.ooc.frontend.model.VersionNodes$VersionNegation versionNegation;
        VersionBlock$1 this;

        this := @this: VersionBlock$1;

        versionNegation := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNegation;

        virtualinvoke versionNegation.<org.ooc.frontend.model.VersionNodes$VersionNegation: void acceptChildren(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionName)
    {
        org.ooc.frontend.model.VersionNodes$VersionName versionName;
        boolean $stack3;
        java.lang.String $stack4, $stack6, match, $stack9, $stack13, $stack14;
        java.util.Map $stack5;
        java.lang.Object $stack7;
        VersionBlock$1 this;
        java.io.PrintStream $stack10;
        org.ooc.frontend.model.VersionBlock $stack11;
        org.ooc.frontend.model.NodeList $stack12;
        org.ooc.middle.OocCompilationError $u0;
        org.ooc.frontend.model.VersionBlock$1 $r0, $r1;
        org.ooc.frontend.model.Node $r2;

        this := @this: VersionBlock$1;

        versionName := @parameter0: org.ooc.frontend.model.VersionNodes$VersionName;

        $stack3 = versionName.<org.ooc.frontend.model.VersionNodes$VersionName: boolean solved>;

        if $stack3 == 0 goto label1;

        return;

     label1:
        $stack5 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        $stack4 = versionName.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name>;

        $stack6 = virtualinvoke $stack4.<java.lang.String: java.lang.String toLowerCase()>();

        $stack7 = interfaceinvoke $stack5.<java.util.Map: java.lang.Object get(java.lang.Object)>($stack6);

        match = (java.lang.String) $stack7;

        if match == null goto label2;

        versionName.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name> = match;

        versionName.<org.ooc.frontend.model.VersionNodes$VersionName: boolean solved> = 1;

        goto label3;

     label2:
        $stack10 = <java.lang.System: java.io.PrintStream out>;

        $u0 = new org.ooc.middle.OocCompilationError;

        $r0 = (org.ooc.frontend.model.VersionBlock$1) this;

        $stack11 = $r0.<org.ooc.frontend.model.VersionBlock$1: org.ooc.frontend.model.VersionBlock this$0>;

        $r1 = (org.ooc.frontend.model.VersionBlock$1) this;

        $stack12 = $r1.<org.ooc.frontend.model.VersionBlock$1: org.ooc.frontend.model.NodeList val$stack>;

        $stack9 = versionName.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name>;

        $stack13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>($stack9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unknown version id: \'\u0001\', compiling anyway (who knows?)");

        $r2 = (org.ooc.frontend.model.Node) $stack11;

        specialinvoke $u0.<org.ooc.middle.OocCompilationError: void <init>(org.ooc.frontend.model.Node,org.ooc.frontend.model.NodeList,java.lang.String)>($r2, $stack12, $stack13);

        $stack14 = virtualinvoke $u0.<org.ooc.middle.OocCompilationError: java.lang.String toString()>();

        virtualinvoke $stack10.<java.io.PrintStream: void println(java.lang.String)>($stack14);

     label3:
        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionParen) throws java.io.IOException
    {
        org.ooc.frontend.model.VersionNodes$VersionParen versionParen;
        VersionBlock$1 this;

        this := @this: VersionBlock$1;

        versionParen := @parameter0: org.ooc.frontend.model.VersionNodes$VersionParen;

        virtualinvoke versionParen.<org.ooc.frontend.model.VersionNodes$VersionParen: void acceptChildren(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        return;
    }
}
