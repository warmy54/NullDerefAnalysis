public class VersionBlock extends org.ooc.frontend.model.Block implements org.ooc.frontend.model.interfaces.MustBeResolved
{
    protected static java.util.Map map;
    private org.ooc.frontend.model.VersionNodes$VersionNode version;

    public void <init>(org.ooc.frontend.model.VersionNodes$VersionNode, org.ooc.frontend.model.tokens.Token)
    {
        VersionBlock this;
        org.ooc.frontend.model.tokens.Token startToken;
        org.ooc.frontend.model.VersionNodes$VersionNode version;
        org.ooc.frontend.model.VersionBlock $r0;

        this := @this: VersionBlock;

        version := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNode;

        startToken := @parameter1: org.ooc.frontend.model.tokens.Token;

        specialinvoke this.<org.ooc.frontend.model.Block: void <init>(org.ooc.frontend.model.tokens.Token)>(startToken);

        $r0 = (org.ooc.frontend.model.VersionBlock) this;

        $r0.<org.ooc.frontend.model.VersionBlock: org.ooc.frontend.model.VersionNodes$VersionNode version> = version;

        return;
    }

    public org.ooc.frontend.model.VersionNodes$VersionNode getVersion()
    {
        VersionBlock this;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack1;
        org.ooc.frontend.model.VersionBlock $r0;

        this := @this: VersionBlock;

        $r0 = (org.ooc.frontend.model.VersionBlock) this;

        $stack1 = $r0.<org.ooc.frontend.model.VersionBlock: org.ooc.frontend.model.VersionNodes$VersionNode version>;

        return $stack1;
    }

    public boolean isResolved()
    {
        VersionBlock this;

        this := @this: VersionBlock;

        return 0;
    }

    public org.ooc.frontend.model.interfaces.MustBeResolved$Response resolve(org.ooc.frontend.model.NodeList, org.ooc.middle.hobgoblins.Resolver, boolean)
    {
        VersionBlock this;
        org.ooc.frontend.model.NodeList stack;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack6;
        org.ooc.frontend.model.interfaces.MustBeResolved$Response $stack7;
        java.io.IOException $stack8;
        org.ooc.middle.hobgoblins.Resolver res;
        boolean fatal;
        org.ooc.frontend.model.VersionBlock$1 $u0;
        org.ubi.CompilationFailedError $u1;
        org.ooc.frontend.model.VersionBlock $r0, $r1;
        org.ooc.frontend.model.VersionNodes$VersionNodeVisitor $r2;
        java.lang.Throwable $r3;

        this := @this: VersionBlock;

        stack := @parameter0: org.ooc.frontend.model.NodeList;

        res := @parameter1: org.ooc.middle.hobgoblins.Resolver;

        fatal := @parameter2: boolean;

     label1:
        $r0 = (org.ooc.frontend.model.VersionBlock) this;

        $stack6 = $r0.<org.ooc.frontend.model.VersionBlock: org.ooc.frontend.model.VersionNodes$VersionNode version>;

        $u0 = new org.ooc.frontend.model.VersionBlock$1;

        $r1 = (org.ooc.frontend.model.VersionBlock) this;

        specialinvoke $u0.<org.ooc.frontend.model.VersionBlock$1: void <init>(org.ooc.frontend.model.VersionBlock,org.ooc.frontend.model.NodeList)>($r1, stack);

        $r2 = (org.ooc.frontend.model.VersionNodes$VersionNodeVisitor) $u0;

        virtualinvoke $stack6.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>($r2);

     label2:
        goto label4;

     label3:
        $stack8 := @caughtexception;

        $u1 = new org.ubi.CompilationFailedError;

        specialinvoke $u1.<org.ubi.CompilationFailedError: void <init>(java.lang.Throwable)>($stack8);

        $r3 = (java.lang.Throwable) $u1;

        throw $r3;

     label4:
        $stack7 = <org.ooc.frontend.model.interfaces.MustBeResolved$Response: org.ooc.frontend.model.interfaces.MustBeResolved$Response OK>;

        return $stack7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void accept(org.ooc.frontend.Visitor) throws java.io.IOException
    {
        org.ooc.frontend.Visitor visitor;
        VersionBlock this;
        org.ooc.frontend.model.VersionBlock $r0;

        this := @this: VersionBlock;

        visitor := @parameter0: org.ooc.frontend.Visitor;

        $r0 = (org.ooc.frontend.model.VersionBlock) this;

        interfaceinvoke visitor.<org.ooc.frontend.Visitor: void visit(org.ooc.frontend.model.VersionBlock)>($r0);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object o;
        boolean $stack3, $stack8, $stack9;
        org.ooc.frontend.model.VersionBlock vb, $r0;
        VersionBlock this;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack4, $stack6;
        java.lang.String $stack5, $stack7;

        this := @this: VersionBlock;

        o := @parameter0: java.lang.Object;

        $stack3 = o instanceof org.ooc.frontend.model.VersionBlock;

        if $stack3 != 0 goto label1;

        $stack9 = specialinvoke this.<java.lang.Object: boolean equals(java.lang.Object)>(o);

        return $stack9;

     label1:
        vb = (org.ooc.frontend.model.VersionBlock) o;

        $r0 = (org.ooc.frontend.model.VersionBlock) this;

        $stack4 = $r0.<org.ooc.frontend.model.VersionBlock: org.ooc.frontend.model.VersionNodes$VersionNode version>;

        $stack5 = virtualinvoke $stack4.<java.lang.Object: java.lang.String toString()>();

        $stack6 = vb.<org.ooc.frontend.model.VersionBlock: org.ooc.frontend.model.VersionNodes$VersionNode version>;

        $stack7 = virtualinvoke $stack6.<java.lang.Object: java.lang.String toString()>();

        $stack8 = virtualinvoke $stack5.<java.lang.String: boolean equals(java.lang.Object)>($stack7);

        return $stack8;
    }

    public boolean isSatisfied(org.ooc.frontend.Target)
    {
        VersionBlock this;
        org.ooc.frontend.Target target;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack2;
        boolean $stack3;
        org.ooc.frontend.model.VersionBlock $r0;

        this := @this: VersionBlock;

        target := @parameter0: org.ooc.frontend.Target;

        $r0 = (org.ooc.frontend.model.VersionBlock) this;

        $stack2 = $r0.<org.ooc.frontend.model.VersionBlock: org.ooc.frontend.model.VersionNodes$VersionNode version>;

        $stack3 = virtualinvoke $stack2.<org.ooc.frontend.model.VersionNodes$VersionNode: boolean isSatisfied(org.ooc.frontend.Target)>(target);

        return $stack3;
    }

    public java.lang.String toString()
    {
        VersionBlock this;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack1;
        java.lang.String $stack2;
        org.ooc.frontend.model.VersionBlock $r0;

        this := @this: VersionBlock;

        $r0 = (org.ooc.frontend.model.VersionBlock) this;

        $stack1 = $r0.<org.ooc.frontend.model.VersionBlock: org.ooc.frontend.model.VersionNodes$VersionNode version>;

        $stack2 = virtualinvoke $stack1.<java.lang.Object: java.lang.String toString()>();

        return $stack2;
    }

    static void <clinit>()
    {
        java.util.HashMap $stack0;
        java.util.Map $stack1, $stack3, $stack5, $stack7, $stack9, $stack11, $stack13, $stack15, $stack17, $stack19, $stack21, $stack23, $stack25, $stack27, $stack29;

        $stack0 = new java.util.HashMap;

        specialinvoke $stack0.<java.util.HashMap: void <init>()>();

        <org.ooc.frontend.model.VersionBlock: java.util.Map map> = $stack0;

        $stack1 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("windows", "__WIN32__) || defined(__WIN64__");

        $stack3 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("linux", "__linux__");

        $stack5 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("solaris", "__sun");

        $stack7 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("unix", "__unix__");

        $stack9 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("beos", "__BEOS__");

        $stack11 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("haiku", "__HAIKU__");

        $stack13 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("apple", "__APPLE__");

        $stack15 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gnuc", "__GNUC__");

        $stack17 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("i386", "__i386__");

        $stack19 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("x86", "__X86__");

        $stack21 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("x86_64", "__x86_64__");

        $stack23 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ppc", "__ppc__");

        $stack25 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ppc64", "__ppc64__");

        $stack27 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("64", "__x86_64__) || defined(__ppc64__");

        $stack29 = <org.ooc.frontend.model.VersionBlock: java.util.Map map>;

        interfaceinvoke $stack29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gc", "__OOC_USE_GC__");

        return;
    }
}
