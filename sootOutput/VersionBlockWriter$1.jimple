class VersionBlockWriter$1 extends java.lang.Object implements org.ooc.frontend.model.VersionNodes$VersionNodeVisitor
{
    final org.ooc.backend.cdirty.CGenerator val$cgen;

    void <init>(org.ooc.backend.cdirty.CGenerator)
    {
        VersionBlockWriter$1 this;
        org.ooc.backend.cdirty.CGenerator l1;
        org.ooc.backend.cdirty.VersionBlockWriter$1 $r0;

        this := @this: VersionBlockWriter$1;

        l1 := @parameter0: org.ooc.backend.cdirty.CGenerator;

        $r0 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $r0.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen> = l1;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionOr) throws java.io.IOException
    {
        VersionBlockWriter$1 this;
        org.ooc.backend.cdirty.CGenerator $stack2, $stack6, $stack10;
        org.ooc.backend.cdirty.AwesomeWriter $stack3, $stack7, $stack11;
        org.ooc.frontend.model.VersionNodes$VersionOr versionOr;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack5, $stack9;
        org.ooc.backend.cdirty.VersionBlockWriter$1 $r0, $r1, $r2;

        this := @this: VersionBlockWriter$1;

        versionOr := @parameter0: org.ooc.frontend.model.VersionNodes$VersionOr;

        $r0 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack2 = $r0.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack3 = $stack2.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack3.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("(");

        $stack5 = virtualinvoke versionOr.<org.ooc.frontend.model.VersionNodes$VersionOr: org.ooc.frontend.model.VersionNodes$VersionNode getLeft()>();

        virtualinvoke $stack5.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        $r1 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack6 = $r1.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack7 = $stack6.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack7.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(" || ");

        $stack9 = virtualinvoke versionOr.<org.ooc.frontend.model.VersionNodes$VersionOr: org.ooc.frontend.model.VersionNodes$VersionNode getRight()>();

        virtualinvoke $stack9.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        $r2 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack10 = $r2.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack11 = $stack10.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack11.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(")");

        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionAnd) throws java.io.IOException
    {
        VersionBlockWriter$1 this;
        org.ooc.backend.cdirty.CGenerator $stack2, $stack6, $stack10;
        org.ooc.backend.cdirty.AwesomeWriter $stack3, $stack7, $stack11;
        org.ooc.frontend.model.VersionNodes$VersionAnd versionAnd;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack5, $stack9;
        org.ooc.backend.cdirty.VersionBlockWriter$1 $r0, $r1, $r2;

        this := @this: VersionBlockWriter$1;

        versionAnd := @parameter0: org.ooc.frontend.model.VersionNodes$VersionAnd;

        $r0 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack2 = $r0.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack3 = $stack2.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack3.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("(");

        $stack5 = virtualinvoke versionAnd.<org.ooc.frontend.model.VersionNodes$VersionAnd: org.ooc.frontend.model.VersionNodes$VersionNode getLeft()>();

        virtualinvoke $stack5.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        $r1 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack6 = $r1.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack7 = $stack6.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack7.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(" && ");

        $stack9 = virtualinvoke versionAnd.<org.ooc.frontend.model.VersionNodes$VersionAnd: org.ooc.frontend.model.VersionNodes$VersionNode getRight()>();

        virtualinvoke $stack9.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        $r2 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack10 = $r2.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack11 = $stack10.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack11.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(")");

        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionNegation) throws java.io.IOException
    {
        VersionBlockWriter$1 this;
        org.ooc.backend.cdirty.CGenerator $stack2, $stack5, $stack9;
        org.ooc.backend.cdirty.AwesomeWriter $stack3, $stack6, $stack10;
        org.ooc.frontend.model.VersionNodes$VersionNegation versionNegation;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack8;
        org.ooc.backend.cdirty.VersionBlockWriter$1 $r0, $r1, $r2;

        this := @this: VersionBlockWriter$1;

        versionNegation := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNegation;

        $r0 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack2 = $r0.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack3 = $stack2.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack3.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("(");

        $r1 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack5 = $r1.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack6 = $stack5.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack6.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("!(");

        $stack8 = virtualinvoke versionNegation.<org.ooc.frontend.model.VersionNodes$VersionNegation: org.ooc.frontend.model.VersionNodes$VersionNode getInner()>();

        virtualinvoke $stack8.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        $r2 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack9 = $r2.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack10 = $stack9.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack10.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("))");

        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionName) throws java.io.IOException
    {
        VersionBlockWriter$1 this;
        org.ooc.backend.cdirty.CGenerator $stack2;
        org.ooc.backend.cdirty.AwesomeWriter $stack3, $stack4, $stack6;
        org.ooc.frontend.model.VersionNodes$VersionName versionName;
        java.lang.String $stack5;
        org.ooc.backend.cdirty.VersionBlockWriter$1 $r0;

        this := @this: VersionBlockWriter$1;

        versionName := @parameter0: org.ooc.frontend.model.VersionNodes$VersionName;

        $r0 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack2 = $r0.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack3 = $stack2.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        $stack4 = virtualinvoke $stack3.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>("defined(");

        $stack5 = virtualinvoke versionName.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String getName()>();

        $stack6 = virtualinvoke $stack4.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>($stack5);

        virtualinvoke $stack6.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(java.lang.String)>(")");

        return;
    }

    public void visit(org.ooc.frontend.model.VersionNodes$VersionParen) throws java.io.IOException
    {
        VersionBlockWriter$1 this;
        org.ooc.backend.cdirty.CGenerator $stack2, $stack6;
        org.ooc.backend.cdirty.AwesomeWriter $stack3, $stack7;
        org.ooc.frontend.model.VersionNodes$VersionParen versionParen;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack5;
        org.ooc.backend.cdirty.VersionBlockWriter$1 $r0, $r1;

        this := @this: VersionBlockWriter$1;

        versionParen := @parameter0: org.ooc.frontend.model.VersionNodes$VersionParen;

        $r0 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack2 = $r0.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack3 = $stack2.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack3.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(40);

        $stack5 = virtualinvoke versionParen.<org.ooc.frontend.model.VersionNodes$VersionParen: org.ooc.frontend.model.VersionNodes$VersionNode getInner()>();

        virtualinvoke $stack5.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(this);

        $r1 = (org.ooc.backend.cdirty.VersionBlockWriter$1) this;

        $stack6 = $r1.<org.ooc.backend.cdirty.VersionBlockWriter$1: org.ooc.backend.cdirty.CGenerator val$cgen>;

        $stack7 = $stack6.<org.ooc.backend.cdirty.CGenerator: org.ooc.backend.cdirty.AwesomeWriter current>;

        virtualinvoke $stack7.<org.ooc.backend.cdirty.AwesomeWriter: org.ooc.backend.cdirty.AwesomeWriter app(char)>(41);

        return;
    }
}
