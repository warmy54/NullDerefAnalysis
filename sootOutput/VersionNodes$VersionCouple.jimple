public abstract class VersionNodes$VersionCouple extends org.ooc.frontend.model.VersionNodes$VersionNode
{
    org.ooc.frontend.model.VersionNodes$VersionNode left;
    org.ooc.frontend.model.VersionNodes$VersionNode right;

    public void <init>(org.ooc.frontend.model.VersionNodes$VersionNode, org.ooc.frontend.model.VersionNodes$VersionNode)
    {
        VersionNodes$VersionCouple this;
        org.ooc.frontend.model.VersionNodes$VersionNode left, right;
        org.ooc.frontend.model.VersionNodes$VersionCouple $r0, $r1;

        this := @this: VersionNodes$VersionCouple;

        left := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNode;

        right := @parameter1: org.ooc.frontend.model.VersionNodes$VersionNode;

        specialinvoke this.<org.ooc.frontend.model.VersionNodes$VersionNode: void <init>()>();

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionCouple) this;

        $r0.<org.ooc.frontend.model.VersionNodes$VersionCouple: org.ooc.frontend.model.VersionNodes$VersionNode left> = left;

        $r1 = (org.ooc.frontend.model.VersionNodes$VersionCouple) this;

        $r1.<org.ooc.frontend.model.VersionNodes$VersionCouple: org.ooc.frontend.model.VersionNodes$VersionNode right> = right;

        return;
    }

    public org.ooc.frontend.model.VersionNodes$VersionNode getLeft()
    {
        VersionNodes$VersionCouple this;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack1;
        org.ooc.frontend.model.VersionNodes$VersionCouple $r0;

        this := @this: VersionNodes$VersionCouple;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionCouple) this;

        $stack1 = $r0.<org.ooc.frontend.model.VersionNodes$VersionCouple: org.ooc.frontend.model.VersionNodes$VersionNode left>;

        return $stack1;
    }

    public void setLeft(org.ooc.frontend.model.VersionNodes$VersionNode)
    {
        VersionNodes$VersionCouple this;
        org.ooc.frontend.model.VersionNodes$VersionNode left;
        org.ooc.frontend.model.VersionNodes$VersionCouple $r0;

        this := @this: VersionNodes$VersionCouple;

        left := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNode;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionCouple) this;

        $r0.<org.ooc.frontend.model.VersionNodes$VersionCouple: org.ooc.frontend.model.VersionNodes$VersionNode left> = left;

        return;
    }

    public org.ooc.frontend.model.VersionNodes$VersionNode getRight()
    {
        VersionNodes$VersionCouple this;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack1;
        org.ooc.frontend.model.VersionNodes$VersionCouple $r0;

        this := @this: VersionNodes$VersionCouple;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionCouple) this;

        $stack1 = $r0.<org.ooc.frontend.model.VersionNodes$VersionCouple: org.ooc.frontend.model.VersionNodes$VersionNode right>;

        return $stack1;
    }

    public void setRight(org.ooc.frontend.model.VersionNodes$VersionNode)
    {
        VersionNodes$VersionCouple this;
        org.ooc.frontend.model.VersionNodes$VersionNode right;
        org.ooc.frontend.model.VersionNodes$VersionCouple $r0;

        this := @this: VersionNodes$VersionCouple;

        right := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNode;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionCouple) this;

        $r0.<org.ooc.frontend.model.VersionNodes$VersionCouple: org.ooc.frontend.model.VersionNodes$VersionNode right> = right;

        return;
    }

    public void acceptChildren(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor) throws java.io.IOException
    {
        VersionNodes$VersionCouple this;
        org.ooc.frontend.model.VersionNodes$VersionNodeVisitor visitor;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack2, $stack3;
        org.ooc.frontend.model.VersionNodes$VersionCouple $r0, $r1;

        this := @this: VersionNodes$VersionCouple;

        visitor := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNodeVisitor;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionCouple) this;

        $stack2 = $r0.<org.ooc.frontend.model.VersionNodes$VersionCouple: org.ooc.frontend.model.VersionNodes$VersionNode left>;

        virtualinvoke $stack2.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(visitor);

        $r1 = (org.ooc.frontend.model.VersionNodes$VersionCouple) this;

        $stack3 = $r1.<org.ooc.frontend.model.VersionNodes$VersionCouple: org.ooc.frontend.model.VersionNodes$VersionNode right>;

        virtualinvoke $stack3.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(visitor);

        return;
    }
}
