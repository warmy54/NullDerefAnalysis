public class VersionNodes$VersionName extends org.ooc.frontend.model.VersionNodes$VersionNode
{
    java.lang.String name;
    boolean solved;

    public void <init>(java.lang.String)
    {
        VersionNodes$VersionName this;
        java.lang.String name;
        org.ooc.frontend.model.VersionNodes$VersionName $r0, $r1;

        this := @this: VersionNodes$VersionName;

        name := @parameter0: java.lang.String;

        specialinvoke this.<org.ooc.frontend.model.VersionNodes$VersionNode: void <init>()>();

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        $r0.<org.ooc.frontend.model.VersionNodes$VersionName: boolean solved> = 0;

        $r1 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        $r1.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name> = name;

        return;
    }

    public java.lang.String getName()
    {
        VersionNodes$VersionName this;
        java.lang.String $stack1;
        org.ooc.frontend.model.VersionNodes$VersionName $r0;

        this := @this: VersionNodes$VersionName;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        $stack1 = $r0.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name>;

        return $stack1;
    }

    public void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor) throws java.io.IOException
    {
        org.ooc.frontend.model.VersionNodes$VersionNodeVisitor visitor;
        VersionNodes$VersionName this;
        org.ooc.frontend.model.VersionNodes$VersionName $r0;

        this := @this: VersionNodes$VersionName;

        visitor := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNodeVisitor;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        interfaceinvoke visitor.<org.ooc.frontend.model.VersionNodes$VersionNodeVisitor: void visit(org.ooc.frontend.model.VersionNodes$VersionName)>($r0);

        return;
    }

    public void acceptChildren(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)
    {
        VersionNodes$VersionName this;
        org.ooc.frontend.model.VersionNodes$VersionNodeVisitor visitor;

        this := @this: VersionNodes$VersionName;

        visitor := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNodeVisitor;

        return;
    }

    public java.lang.String toString()
    {
        VersionNodes$VersionName this;
        java.lang.String $stack1;
        org.ooc.frontend.model.VersionNodes$VersionName $r0;

        this := @this: VersionNodes$VersionName;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        $stack1 = $r0.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name>;

        return $stack1;
    }

    public boolean isSatisfied(org.ooc.frontend.Target)
    {
        VersionNodes$VersionName this;
        java.lang.String $stack2, $stack3, $stack5, $stack6, $stack9, $stack10, $stack12, $stack13, $stack20, $stack21;
        boolean $stack4, $stack7, $stack11, $stack14, $stack22;
        org.ooc.frontend.Target target, $stack8, $stack15, $stack17, $stack26;
        org.ooc.frontend.model.VersionNodes$VersionName $r0, $r1, $r2, $r3, $r4;

        this := @this: VersionNodes$VersionName;

        target := @parameter0: org.ooc.frontend.Target;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        $stack2 = $r0.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name>;

        $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String toLowerCase()>();

        $stack4 = virtualinvoke $stack3.<java.lang.String: boolean contains(java.lang.CharSequence)>("win");

        if $stack4 == 0 goto label1;

        $stack26 = <org.ooc.frontend.Target: org.ooc.frontend.Target WIN>;

        if target != $stack26 goto label1;

        return 1;

     label1:
        $r1 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        $stack5 = $r1.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name>;

        $stack6 = virtualinvoke $stack5.<java.lang.String: java.lang.String toLowerCase()>();

        $stack7 = virtualinvoke $stack6.<java.lang.String: boolean contains(java.lang.CharSequence)>("linux");

        if $stack7 != 0 goto label2;

        $r2 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        $stack20 = $r2.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name>;

        $stack21 = virtualinvoke $stack20.<java.lang.String: java.lang.String toLowerCase()>();

        $stack22 = virtualinvoke $stack21.<java.lang.String: boolean contains(java.lang.CharSequence)>("unix");

        if $stack22 == 0 goto label3;

     label2:
        $stack8 = <org.ooc.frontend.Target: org.ooc.frontend.Target LINUX>;

        if target != $stack8 goto label3;

        return 1;

     label3:
        $r3 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        $stack9 = $r3.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name>;

        $stack10 = virtualinvoke $stack9.<java.lang.String: java.lang.String toLowerCase()>();

        $stack11 = virtualinvoke $stack10.<java.lang.String: boolean contains(java.lang.CharSequence)>("apple");

        if $stack11 == 0 goto label4;

        $stack17 = <org.ooc.frontend.Target: org.ooc.frontend.Target OSX>;

        if target != $stack17 goto label4;

        return 1;

     label4:
        $r4 = (org.ooc.frontend.model.VersionNodes$VersionName) this;

        $stack12 = $r4.<org.ooc.frontend.model.VersionNodes$VersionName: java.lang.String name>;

        $stack13 = virtualinvoke $stack12.<java.lang.String: java.lang.String toLowerCase()>();

        $stack14 = virtualinvoke $stack13.<java.lang.String: boolean contains(java.lang.CharSequence)>("sun");

        if $stack14 == 0 goto label5;

        $stack15 = <org.ooc.frontend.Target: org.ooc.frontend.Target SOLARIS>;

        if target != $stack15 goto label5;

        return 1;

     label5:
        return 0;
    }
}
