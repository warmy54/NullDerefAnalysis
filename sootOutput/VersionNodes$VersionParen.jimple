public class VersionNodes$VersionParen extends org.ooc.frontend.model.VersionNodes$VersionNode
{
    org.ooc.frontend.model.VersionNodes$VersionNode inner;

    public void <init>(org.ooc.frontend.model.VersionNodes$VersionNode)
    {
        VersionNodes$VersionParen this;
        org.ooc.frontend.model.VersionNodes$VersionNode inner;
        org.ooc.frontend.model.VersionNodes$VersionParen $r0;

        this := @this: VersionNodes$VersionParen;

        inner := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNode;

        specialinvoke this.<org.ooc.frontend.model.VersionNodes$VersionNode: void <init>()>();

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionParen) this;

        $r0.<org.ooc.frontend.model.VersionNodes$VersionParen: org.ooc.frontend.model.VersionNodes$VersionNode inner> = inner;

        return;
    }

    public org.ooc.frontend.model.VersionNodes$VersionNode getInner()
    {
        VersionNodes$VersionParen this;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack1;
        org.ooc.frontend.model.VersionNodes$VersionParen $r0;

        this := @this: VersionNodes$VersionParen;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionParen) this;

        $stack1 = $r0.<org.ooc.frontend.model.VersionNodes$VersionParen: org.ooc.frontend.model.VersionNodes$VersionNode inner>;

        return $stack1;
    }

    public void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor) throws java.io.IOException
    {
        org.ooc.frontend.model.VersionNodes$VersionNodeVisitor visitor;
        VersionNodes$VersionParen this;
        org.ooc.frontend.model.VersionNodes$VersionParen $r0;

        this := @this: VersionNodes$VersionParen;

        visitor := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNodeVisitor;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionParen) this;

        interfaceinvoke visitor.<org.ooc.frontend.model.VersionNodes$VersionNodeVisitor: void visit(org.ooc.frontend.model.VersionNodes$VersionParen)>($r0);

        return;
    }

    public void acceptChildren(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor) throws java.io.IOException
    {
        VersionNodes$VersionParen this;
        org.ooc.frontend.model.VersionNodes$VersionNodeVisitor visitor;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack2;
        org.ooc.frontend.model.VersionNodes$VersionParen $r0;

        this := @this: VersionNodes$VersionParen;

        visitor := @parameter0: org.ooc.frontend.model.VersionNodes$VersionNodeVisitor;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionParen) this;

        $stack2 = $r0.<org.ooc.frontend.model.VersionNodes$VersionParen: org.ooc.frontend.model.VersionNodes$VersionNode inner>;

        virtualinvoke $stack2.<org.ooc.frontend.model.VersionNodes$VersionNode: void accept(org.ooc.frontend.model.VersionNodes$VersionNodeVisitor)>(visitor);

        return;
    }

    public java.lang.String toString()
    {
        VersionNodes$VersionParen this;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack1;
        java.lang.String $stack2;
        org.ooc.frontend.model.VersionNodes$VersionParen $r0;

        this := @this: VersionNodes$VersionParen;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionParen) this;

        $stack1 = $r0.<org.ooc.frontend.model.VersionNodes$VersionParen: org.ooc.frontend.model.VersionNodes$VersionNode inner>;

        $stack2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.ooc.frontend.model.VersionNodes$VersionNode)>($stack1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("(\u0001)");

        return $stack2;
    }

    public boolean isSatisfied(org.ooc.frontend.Target)
    {
        VersionNodes$VersionParen this;
        org.ooc.frontend.Target target;
        org.ooc.frontend.model.VersionNodes$VersionNode $stack2;
        boolean $stack3;
        org.ooc.frontend.model.VersionNodes$VersionParen $r0;

        this := @this: VersionNodes$VersionParen;

        target := @parameter0: org.ooc.frontend.Target;

        $r0 = (org.ooc.frontend.model.VersionNodes$VersionParen) this;

        $stack2 = $r0.<org.ooc.frontend.model.VersionNodes$VersionParen: org.ooc.frontend.model.VersionNodes$VersionNode inner>;

        $stack3 = virtualinvoke $stack2.<org.ooc.frontend.model.VersionNodes$VersionNode: boolean isSatisfied(org.ooc.frontend.Target)>(target);

        return $stack3;
    }
}
