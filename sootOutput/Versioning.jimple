public class Versioning extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable
{
    private java.lang.String latest;
    private java.lang.String release;
    private org.apache.maven.artifact.repository.metadata.Snapshot snapshot;
    private java.util.List versions;
    private java.lang.String lastUpdated;
    private java.util.List snapshotVersions;

    public void <init>()
    {
        Versioning this;

        this := @this: Versioning;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    public void addSnapshotVersion(org.apache.maven.artifact.repository.metadata.SnapshotVersion)
    {
        Versioning this;
        java.util.List $stack2;
        org.apache.maven.artifact.repository.metadata.SnapshotVersion snapshotVersion;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        snapshotVersion := @parameter0: org.apache.maven.artifact.repository.metadata.SnapshotVersion;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List getSnapshotVersions()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(snapshotVersion);

        return;
    }

    public void addVersion(java.lang.String)
    {
        Versioning this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List getVersions()>();

        interfaceinvoke $stack2.<java.util.List: boolean add(java.lang.Object)>(string);

        return;
    }

    public org.apache.maven.artifact.repository.metadata.Versioning clone()
    {
        Versioning this;
        java.lang.Object $stack4, $stack13;
        org.apache.maven.artifact.repository.metadata.Snapshot $stack5, $stack23, $stack24;
        java.util.List $stack6, $stack7, $stack9, $stack14, $stack19, $stack20;
        java.util.Iterator l2;
        boolean $stack11;
        org.apache.maven.artifact.repository.metadata.SnapshotVersion item, $stack15;
        java.lang.Exception $stack26;
        java.lang.Class $stack29;
        java.lang.String $stack30, $stack33;
        java.lang.StringBuilder $stack31, $stack32, $u2;
        java.lang.Throwable $stack34;
        java.lang.RuntimeException $stack35;
        org.apache.maven.artifact.repository.metadata.Versioning copy, $r0, $r1, $r2, $r3, $r4, $r5;
        java.util.ArrayList $u0, $u1;
        java.lang.UnsupportedOperationException $u3;

        this := @this: Versioning;

     label1:
        $stack4 = specialinvoke this.<java.lang.Object: java.lang.Object clone()>();

        copy = (org.apache.maven.artifact.repository.metadata.Versioning) $stack4;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack5 = $r0.<org.apache.maven.artifact.repository.metadata.Versioning: org.apache.maven.artifact.repository.metadata.Snapshot snapshot>;

        if $stack5 == null goto label2;

        $r1 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack23 = $r1.<org.apache.maven.artifact.repository.metadata.Versioning: org.apache.maven.artifact.repository.metadata.Snapshot snapshot>;

        $stack24 = virtualinvoke $stack23.<org.apache.maven.artifact.repository.metadata.Snapshot: org.apache.maven.artifact.repository.metadata.Snapshot clone()>();

        copy.<org.apache.maven.artifact.repository.metadata.Versioning: org.apache.maven.artifact.repository.metadata.Snapshot snapshot> = $stack24;

     label2:
        $r2 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack6 = $r2.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List versions>;

        if $stack6 == null goto label3;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List versions> = $u0;

        $stack20 = copy.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List versions>;

        $r3 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack19 = $r3.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List versions>;

        interfaceinvoke $stack20.<java.util.List: boolean addAll(java.util.Collection)>($stack19);

     label3:
        $r4 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack7 = $r4.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List snapshotVersions>;

        if $stack7 == null goto label5;

        $u1 = new java.util.ArrayList;

        specialinvoke $u1.<java.util.ArrayList: void <init>()>();

        copy.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List snapshotVersions> = $u1;

        $r5 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack9 = $r5.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List snapshotVersions>;

        l2 = interfaceinvoke $stack9.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $stack11 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack11 == 0 goto label5;

        $stack13 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        item = (org.apache.maven.artifact.repository.metadata.SnapshotVersion) $stack13;

        $stack14 = copy.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List snapshotVersions>;

        $stack15 = virtualinvoke item.<org.apache.maven.artifact.repository.metadata.SnapshotVersion: org.apache.maven.artifact.repository.metadata.SnapshotVersion clone()>();

        interfaceinvoke $stack14.<java.util.List: boolean add(java.lang.Object)>($stack15);

        goto label4;

     label5:
        return copy;

     label6:
        $stack26 := @caughtexception;

        $u3 = new java.lang.UnsupportedOperationException;

        $u2 = new java.lang.StringBuilder;

        specialinvoke $u2.<java.lang.StringBuilder: void <init>()>();

        $stack29 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack30 = virtualinvoke $stack29.<java.lang.Class: java.lang.String getName()>();

        $stack31 = virtualinvoke $u2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack30);

        $stack32 = virtualinvoke $stack31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support clone()");

        $stack33 = virtualinvoke $stack32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $u3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($stack33);

        $stack34 = virtualinvoke $u3.<java.lang.UnsupportedOperationException: java.lang.Throwable initCause(java.lang.Throwable)>($stack26);

        $stack35 = (java.lang.RuntimeException) $stack34;

        throw $stack35;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    public java.lang.String getLastUpdated()
    {
        Versioning this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.lang.String lastUpdated>;

        return $stack1;
    }

    public java.lang.String getLatest()
    {
        Versioning this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.lang.String latest>;

        return $stack1;
    }

    public java.lang.String getRelease()
    {
        Versioning this;
        java.lang.String $stack1;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.lang.String release>;

        return $stack1;
    }

    public org.apache.maven.artifact.repository.metadata.Snapshot getSnapshot()
    {
        Versioning this;
        org.apache.maven.artifact.repository.metadata.Snapshot $stack1;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.metadata.Versioning: org.apache.maven.artifact.repository.metadata.Snapshot snapshot>;

        return $stack1;
    }

    public java.util.List getSnapshotVersions()
    {
        Versioning this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.artifact.repository.metadata.Versioning $r0, $r1, $r2;

        this := @this: Versioning;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List snapshotVersions>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $r1.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List snapshotVersions> = $u0;

     label1:
        $r2 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack2 = $r2.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List snapshotVersions>;

        return $stack2;
    }

    public java.util.List getVersions()
    {
        Versioning this;
        java.util.List $stack1, $stack2;
        java.util.ArrayList $u0;
        org.apache.maven.artifact.repository.metadata.Versioning $r0, $r1, $r2;

        this := @this: Versioning;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack1 = $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List versions>;

        if $stack1 != null goto label1;

        $u0 = new java.util.ArrayList;

        specialinvoke $u0.<java.util.ArrayList: void <init>()>();

        $r1 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $r1.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List versions> = $u0;

     label1:
        $r2 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack2 = $r2.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List versions>;

        return $stack2;
    }

    public void removeSnapshotVersion(org.apache.maven.artifact.repository.metadata.SnapshotVersion)
    {
        Versioning this;
        java.util.List $stack2;
        org.apache.maven.artifact.repository.metadata.SnapshotVersion snapshotVersion;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        snapshotVersion := @parameter0: org.apache.maven.artifact.repository.metadata.SnapshotVersion;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List getSnapshotVersions()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(snapshotVersion);

        return;
    }

    public void removeVersion(java.lang.String)
    {
        Versioning this;
        java.util.List $stack2;
        java.lang.String string;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        string := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack2 = virtualinvoke $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List getVersions()>();

        interfaceinvoke $stack2.<java.util.List: boolean remove(java.lang.Object)>(string);

        return;
    }

    public void setLastUpdated(java.lang.String)
    {
        Versioning this;
        java.lang.String lastUpdated;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        lastUpdated := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.lang.String lastUpdated> = lastUpdated;

        return;
    }

    public void setLatest(java.lang.String)
    {
        Versioning this;
        java.lang.String latest;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        latest := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.lang.String latest> = latest;

        return;
    }

    public void setRelease(java.lang.String)
    {
        Versioning this;
        java.lang.String release;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        release := @parameter0: java.lang.String;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.lang.String release> = release;

        return;
    }

    public void setSnapshot(org.apache.maven.artifact.repository.metadata.Snapshot)
    {
        Versioning this;
        org.apache.maven.artifact.repository.metadata.Snapshot snapshot;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        snapshot := @parameter0: org.apache.maven.artifact.repository.metadata.Snapshot;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $r0.<org.apache.maven.artifact.repository.metadata.Versioning: org.apache.maven.artifact.repository.metadata.Snapshot snapshot> = snapshot;

        return;
    }

    public void setSnapshotVersions(java.util.List)
    {
        Versioning this;
        java.util.List snapshotVersions;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        snapshotVersions := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List snapshotVersions> = snapshotVersions;

        return;
    }

    public void setVersions(java.util.List)
    {
        Versioning this;
        java.util.List versions;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        versions := @parameter0: java.util.List;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $r0.<org.apache.maven.artifact.repository.metadata.Versioning: java.util.List versions> = versions;

        return;
    }

    public void updateTimestamp()
    {
        Versioning this;
        java.util.Date $u0;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        $u0 = new java.util.Date;

        specialinvoke $u0.<java.util.Date: void <init>()>();

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        virtualinvoke $r0.<org.apache.maven.artifact.repository.metadata.Versioning: void setLastUpdatedTimestamp(java.util.Date)>($u0);

        return;
    }

    public void setLastUpdatedTimestamp(java.util.Date)
    {
        java.util.TimeZone timezone;
        Versioning this;
        java.util.Date date;
        java.lang.String $stack6;
        java.text.SimpleDateFormat $u0;
        org.apache.maven.artifact.repository.metadata.Versioning $r0;

        this := @this: Versioning;

        date := @parameter0: java.util.Date;

        timezone = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");

        $u0 = new java.text.SimpleDateFormat;

        specialinvoke $u0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyyMMddHHmmss");

        virtualinvoke $u0.<java.text.DateFormat: void setTimeZone(java.util.TimeZone)>(timezone);

        $stack6 = virtualinvoke $u0.<java.text.DateFormat: java.lang.String format(java.util.Date)>(date);

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        virtualinvoke $r0.<org.apache.maven.artifact.repository.metadata.Versioning: void setLastUpdated(java.lang.String)>($stack6);

        return;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        Versioning this;
        org.apache.maven.artifact.repository.metadata.Versioning $stack1, $r0;

        this := @this: Versioning;

        $r0 = (org.apache.maven.artifact.repository.metadata.Versioning) this;

        $stack1 = virtualinvoke $r0.<org.apache.maven.artifact.repository.metadata.Versioning: org.apache.maven.artifact.repository.metadata.Versioning clone()>();

        return $stack1;
    }
}
