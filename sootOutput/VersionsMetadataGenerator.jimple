class VersionsMetadataGenerator extends java.lang.Object implements org.eclipse.aether.impl.MetadataGenerator
{
    private java.util.Map versions;
    private java.util.Map processedVersions;
    private final java.util.Date timestamp;

    void <init>(org.eclipse.aether.RepositorySystemSession, org.eclipse.aether.installation.InstallRequest)
    {
        VersionsMetadataGenerator this;
        org.eclipse.aether.RepositorySystemSession session;
        org.eclipse.aether.installation.InstallRequest request;
        java.util.Collection $stack3;
        org.apache.maven.repository.internal.VersionsMetadataGenerator $r0;

        this := @this: VersionsMetadataGenerator;

        session := @parameter0: org.eclipse.aether.RepositorySystemSession;

        request := @parameter1: org.eclipse.aether.installation.InstallRequest;

        $stack3 = virtualinvoke request.<org.eclipse.aether.installation.InstallRequest: java.util.Collection getMetadata()>();

        $r0 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        specialinvoke $r0.<org.apache.maven.repository.internal.VersionsMetadataGenerator: void <init>(org.eclipse.aether.RepositorySystemSession,java.util.Collection)>(session, $stack3);

        return;
    }

    void <init>(org.eclipse.aether.RepositorySystemSession, org.eclipse.aether.deployment.DeployRequest)
    {
        VersionsMetadataGenerator this;
        org.eclipse.aether.RepositorySystemSession session;
        org.eclipse.aether.deployment.DeployRequest request;
        java.util.Collection $stack3;
        org.apache.maven.repository.internal.VersionsMetadataGenerator $r0;

        this := @this: VersionsMetadataGenerator;

        session := @parameter0: org.eclipse.aether.RepositorySystemSession;

        request := @parameter1: org.eclipse.aether.deployment.DeployRequest;

        $stack3 = virtualinvoke request.<org.eclipse.aether.deployment.DeployRequest: java.util.Collection getMetadata()>();

        $r0 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        specialinvoke $r0.<org.apache.maven.repository.internal.VersionsMetadataGenerator: void <init>(org.eclipse.aether.RepositorySystemSession,java.util.Collection)>(session, $stack3);

        return;
    }

    private void <init>(org.eclipse.aether.RepositorySystemSession, java.util.Collection)
    {
        VersionsMetadataGenerator this;
        org.eclipse.aether.RepositorySystemSession session;
        java.lang.String[] $stack9;
        java.lang.Object $stack10, $stack14, $stack18;
        java.util.Date $stack11, $u2;
        java.util.Collection metadatas;
        java.util.Iterator it;
        boolean $stack13, $stack15;
        org.eclipse.aether.metadata.Metadata metadata;
        org.apache.maven.repository.internal.VersionsMetadata versionsMetadata;
        java.util.Map $stack17;
        java.util.LinkedHashMap $u0, $u1;
        org.apache.maven.repository.internal.VersionsMetadataGenerator $r0, $r1, $r2, $r3;

        this := @this: VersionsMetadataGenerator;

        session := @parameter0: org.eclipse.aether.RepositorySystemSession;

        metadatas := @parameter1: java.util.Collection;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $r0 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        $r0.<org.apache.maven.repository.internal.VersionsMetadataGenerator: java.util.Map versions> = $u0;

        $u1 = new java.util.LinkedHashMap;

        specialinvoke $u1.<java.util.LinkedHashMap: void <init>()>();

        $r1 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        $r1.<org.apache.maven.repository.internal.VersionsMetadataGenerator: java.util.Map processedVersions> = $u1;

        $u2 = new java.util.Date;

        specialinvoke $u2.<java.util.Date: void <init>()>();

        $stack9 = newarray (java.lang.String)[1];

        $stack9[0] = "maven.startTime";

        $stack10 = staticinvoke <org.eclipse.aether.util.ConfigUtils: java.lang.Object getObject(org.eclipse.aether.RepositorySystemSession,java.lang.Object,java.lang.String[])>(session, $u2, $stack9);

        $stack11 = (java.util.Date) $stack10;

        $r2 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        $r2.<org.apache.maven.repository.internal.VersionsMetadataGenerator: java.util.Date timestamp> = $stack11;

        it = interfaceinvoke metadatas.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack13 = interfaceinvoke it.<java.util.Iterator: boolean hasNext()>();

        if $stack13 == 0 goto label3;

        $stack14 = interfaceinvoke it.<java.util.Iterator: java.lang.Object next()>();

        metadata = (org.eclipse.aether.metadata.Metadata) $stack14;

        $stack15 = metadata instanceof org.apache.maven.repository.internal.VersionsMetadata;

        if $stack15 == 0 goto label2;

        interfaceinvoke it.<java.util.Iterator: void remove()>();

        versionsMetadata = (org.apache.maven.repository.internal.VersionsMetadata) metadata;

        $r3 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        $stack17 = $r3.<org.apache.maven.repository.internal.VersionsMetadataGenerator: java.util.Map processedVersions>;

        $stack18 = virtualinvoke versionsMetadata.<org.apache.maven.repository.internal.VersionsMetadata: java.lang.Object getKey()>();

        interfaceinvoke $stack17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack18, versionsMetadata);

     label2:
        goto label1;

     label3:
        return;
    }

    public java.util.Collection prepare(java.util.Collection)
    {
        java.util.List $stack2;
        VersionsMetadataGenerator this;
        java.util.Collection artifacts;

        this := @this: VersionsMetadataGenerator;

        artifacts := @parameter0: java.util.Collection;

        $stack2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $stack2;
    }

    public org.eclipse.aether.artifact.Artifact transformArtifact(org.eclipse.aether.artifact.Artifact)
    {
        org.eclipse.aether.artifact.Artifact artifact;
        VersionsMetadataGenerator this;

        this := @this: VersionsMetadataGenerator;

        artifact := @parameter0: org.eclipse.aether.artifact.Artifact;

        return artifact;
    }

    public java.util.Collection finish(java.util.Collection)
    {
        java.util.Collection artifacts, $stack9;
        java.util.Iterator l2;
        boolean $stack7;
        VersionsMetadataGenerator this;
        java.util.Map $stack8, $stack12, $stack15, $stack19;
        java.lang.Object $stack10, key, $stack13, $stack16;
        org.eclipse.aether.artifact.Artifact artifact;
        java.util.Date $stack18;
        org.apache.maven.repository.internal.VersionsMetadata versionsMetadata, $u0;
        org.apache.maven.repository.internal.VersionsMetadataGenerator $r0, $r1, $r2, $r3, $r4;

        this := @this: VersionsMetadataGenerator;

        artifacts := @parameter0: java.util.Collection;

        l2 = interfaceinvoke artifacts.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $stack7 = interfaceinvoke l2.<java.util.Iterator: boolean hasNext()>();

        if $stack7 == 0 goto label3;

        $stack10 = interfaceinvoke l2.<java.util.Iterator: java.lang.Object next()>();

        artifact = (org.eclipse.aether.artifact.Artifact) $stack10;

        key = staticinvoke <org.apache.maven.repository.internal.VersionsMetadata: java.lang.Object getKey(org.eclipse.aether.artifact.Artifact)>(artifact);

        $r0 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        $stack12 = $r0.<org.apache.maven.repository.internal.VersionsMetadataGenerator: java.util.Map processedVersions>;

        $stack13 = interfaceinvoke $stack12.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        if $stack13 != null goto label2;

        $r1 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        $stack15 = $r1.<org.apache.maven.repository.internal.VersionsMetadataGenerator: java.util.Map versions>;

        $stack16 = interfaceinvoke $stack15.<java.util.Map: java.lang.Object get(java.lang.Object)>(key);

        versionsMetadata = (org.apache.maven.repository.internal.VersionsMetadata) $stack16;

        if versionsMetadata != null goto label2;

        $u0 = new org.apache.maven.repository.internal.VersionsMetadata;

        $r2 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        $stack18 = $r2.<org.apache.maven.repository.internal.VersionsMetadataGenerator: java.util.Date timestamp>;

        specialinvoke $u0.<org.apache.maven.repository.internal.VersionsMetadata: void <init>(org.eclipse.aether.artifact.Artifact,java.util.Date)>(artifact, $stack18);

        $r3 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        $stack19 = $r3.<org.apache.maven.repository.internal.VersionsMetadataGenerator: java.util.Map versions>;

        interfaceinvoke $stack19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(key, $u0);

     label2:
        goto label1;

     label3:
        $r4 = (org.apache.maven.repository.internal.VersionsMetadataGenerator) this;

        $stack8 = $r4.<org.apache.maven.repository.internal.VersionsMetadataGenerator: java.util.Map versions>;

        $stack9 = interfaceinvoke $stack8.<java.util.Map: java.util.Collection values()>();

        return $stack9;
    }
}
