class ViolationXmlProcessor extends java.lang.Object
{

    void <init>()
    {
        ViolationXmlProcessor this;

        this := @this: ViolationXmlProcessor;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

    org.jdom.Document createViolationXmlContent(java.io.File, java.lang.String)
    {
        java.lang.String violationMessage, $stack11;
        java.io.File pomFileLocation;
        ViolationXmlProcessor this;
        org.jdom.Element $u0, $u1, $u2;
        org.jdom.Document $u3;
        org.jdom.Content $r0, $r1;

        this := @this: ViolationXmlProcessor;

        pomFileLocation := @parameter0: java.io.File;

        violationMessage := @parameter1: java.lang.String;

        $u0 = new org.jdom.Element;

        specialinvoke $u0.<org.jdom.Element: void <init>(java.lang.String)>("violation");

        virtualinvoke $u0.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(violationMessage);

        $u1 = new org.jdom.Element;

        specialinvoke $u1.<org.jdom.Element: void <init>(java.lang.String)>("file");

        $r0 = (org.jdom.Content) $u0;

        virtualinvoke $u1.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r0);

        $stack11 = virtualinvoke pomFileLocation.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $u1.<org.jdom.Element: org.jdom.Element setAttribute(java.lang.String,java.lang.String)>("filename", $stack11);

        $u2 = new org.jdom.Element;

        specialinvoke $u2.<org.jdom.Element: void <init>(java.lang.String)>("sortpom");

        $r1 = (org.jdom.Content) $u1;

        virtualinvoke $u2.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($r1);

        $u3 = new org.jdom.Document;

        specialinvoke $u3.<org.jdom.Document: void <init>(org.jdom.Element)>($u2);

        return $u3;
    }
}
