class WagonExcluder extends java.lang.Object implements org.eclipse.aether.collection.DependencySelector
{
    private final boolean coreArtifact;

    void <init>()
    {
        WagonExcluder this;
        org.apache.maven.plugin.internal.WagonExcluder $r0;

        this := @this: WagonExcluder;

        $r0 = (org.apache.maven.plugin.internal.WagonExcluder) this;

        specialinvoke $r0.<org.apache.maven.plugin.internal.WagonExcluder: void <init>(boolean)>(0);

        return;
    }

    private void <init>(boolean)
    {
        WagonExcluder this;
        boolean coreArtifact;
        org.apache.maven.plugin.internal.WagonExcluder $r0;

        this := @this: WagonExcluder;

        coreArtifact := @parameter0: boolean;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.plugin.internal.WagonExcluder) this;

        $r0.<org.apache.maven.plugin.internal.WagonExcluder: boolean coreArtifact> = coreArtifact;

        return;
    }

    public boolean selectDependency(org.eclipse.aether.graph.Dependency)
    {
        WagonExcluder this;
        boolean $stack2, $stack4, $stack5;
        org.eclipse.aether.graph.Dependency dependency;
        org.eclipse.aether.artifact.Artifact $stack3;
        org.apache.maven.plugin.internal.WagonExcluder $r0, $r1;

        this := @this: WagonExcluder;

        dependency := @parameter0: org.eclipse.aether.graph.Dependency;

        $r0 = (org.apache.maven.plugin.internal.WagonExcluder) this;

        $stack2 = $r0.<org.apache.maven.plugin.internal.WagonExcluder: boolean coreArtifact>;

        if $stack2 == 0 goto label1;

        $stack3 = virtualinvoke dependency.<org.eclipse.aether.graph.Dependency: org.eclipse.aether.artifact.Artifact getArtifact()>();

        $r1 = (org.apache.maven.plugin.internal.WagonExcluder) this;

        $stack4 = specialinvoke $r1.<org.apache.maven.plugin.internal.WagonExcluder: boolean isWagonProvider(org.eclipse.aether.artifact.Artifact)>($stack3);

        if $stack4 != 0 goto label2;

     label1:
        $stack5 = 1;

        goto label3;

     label2:
        $stack5 = 0;

     label3:
        return $stack5;
    }

    public org.eclipse.aether.collection.DependencySelector deriveChildSelector(org.eclipse.aether.collection.DependencyCollectionContext)
    {
        WagonExcluder this;
        boolean $stack2, $stack5;
        org.eclipse.aether.collection.DependencyCollectionContext context;
        org.eclipse.aether.graph.Dependency $stack3;
        org.eclipse.aether.artifact.Artifact $stack4;
        org.apache.maven.plugin.internal.WagonExcluder $u0, $r0, $r1;
        org.eclipse.aether.collection.DependencySelector $r2;

        this := @this: WagonExcluder;

        context := @parameter0: org.eclipse.aether.collection.DependencyCollectionContext;

        $r0 = (org.apache.maven.plugin.internal.WagonExcluder) this;

        $stack2 = $r0.<org.apache.maven.plugin.internal.WagonExcluder: boolean coreArtifact>;

        if $stack2 != 0 goto label1;

        $stack3 = interfaceinvoke context.<org.eclipse.aether.collection.DependencyCollectionContext: org.eclipse.aether.graph.Dependency getDependency()>();

        $stack4 = virtualinvoke $stack3.<org.eclipse.aether.graph.Dependency: org.eclipse.aether.artifact.Artifact getArtifact()>();

        $r1 = (org.apache.maven.plugin.internal.WagonExcluder) this;

        $stack5 = specialinvoke $r1.<org.apache.maven.plugin.internal.WagonExcluder: boolean isLegacyCoreArtifact(org.eclipse.aether.artifact.Artifact)>($stack4);

        if $stack5 != 0 goto label2;

     label1:
        return this;

     label2:
        $u0 = new org.apache.maven.plugin.internal.WagonExcluder;

        specialinvoke $u0.<org.apache.maven.plugin.internal.WagonExcluder: void <init>(boolean)>(1);

        $r2 = (org.eclipse.aether.collection.DependencySelector) $u0;

        return $r2;
    }

    private boolean isLegacyCoreArtifact(org.eclipse.aether.artifact.Artifact)
    {
        org.eclipse.aether.artifact.Artifact artifact;
        java.lang.String version, $stack6, $stack8;
        boolean $stack4, $stack7, $stack9, $stack5;
        WagonExcluder this;

        this := @this: WagonExcluder;

        artifact := @parameter0: org.eclipse.aether.artifact.Artifact;

        version = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getVersion()>();

        if version == null goto label1;

        $stack4 = virtualinvoke version.<java.lang.String: boolean startsWith(java.lang.String)>("2.");

        if $stack4 == 0 goto label1;

        $stack6 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack7 = virtualinvoke $stack6.<java.lang.String: boolean startsWith(java.lang.String)>("maven-");

        if $stack7 == 0 goto label1;

        $stack8 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>();

        $stack9 = virtualinvoke $stack8.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.maven");

        if $stack9 == 0 goto label1;

        $stack5 = 1;

        goto label2;

     label1:
        $stack5 = 0;

     label2:
        return $stack5;
    }

    private boolean isWagonProvider(org.eclipse.aether.artifact.Artifact)
    {
        org.eclipse.aether.artifact.Artifact artifact;
        java.lang.String $stack2, $stack3, $stack5;
        boolean $stack4, $stack6;
        WagonExcluder this;

        this := @this: WagonExcluder;

        artifact := @parameter0: org.eclipse.aether.artifact.Artifact;

        $stack2 = "org.apache.maven.wagon";

        $stack3 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>();

        $stack4 = virtualinvoke $stack2.<java.lang.String: boolean equals(java.lang.Object)>($stack3);

        if $stack4 == 0 goto label1;

        $stack5 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>();

        $stack6 = virtualinvoke $stack5.<java.lang.String: boolean startsWith(java.lang.String)>("wagon-");

        return $stack6;

     label1:
        return 0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object obj;
        WagonExcluder this;
        java.lang.Class $stack3, $stack4;
        boolean $stack5, $stack6, $stack7, $stack8;
        org.apache.maven.plugin.internal.WagonExcluder that, $r0;

        this := @this: WagonExcluder;

        obj := @parameter0: java.lang.Object;

        if obj != this goto label1;

        return 1;

     label1:
        if obj == null goto label2;

        $stack3 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        $stack4 = virtualinvoke obj.<java.lang.Object: java.lang.Class getClass()>();

        $stack5 = virtualinvoke $stack3.<java.lang.Object: boolean equals(java.lang.Object)>($stack4);

        if $stack5 != 0 goto label3;

     label2:
        return 0;

     label3:
        that = (org.apache.maven.plugin.internal.WagonExcluder) obj;

        $r0 = (org.apache.maven.plugin.internal.WagonExcluder) this;

        $stack7 = $r0.<org.apache.maven.plugin.internal.WagonExcluder: boolean coreArtifact>;

        $stack6 = that.<org.apache.maven.plugin.internal.WagonExcluder: boolean coreArtifact>;

        if $stack7 != $stack6 goto label4;

        $stack8 = 1;

        goto label5;

     label4:
        $stack8 = 0;

     label5:
        return $stack8;
    }

    public int hashCode()
    {
        WagonExcluder this;
        java.lang.Class $stack2;
        boolean $stack4;
        int $stack5, hash;
        byte $stack6;
        org.apache.maven.plugin.internal.WagonExcluder $r0;

        this := @this: WagonExcluder;

        $stack2 = virtualinvoke this.<java.lang.Object: java.lang.Class getClass()>();

        hash = virtualinvoke $stack2.<java.lang.Object: int hashCode()>();

        $stack5 = hash * 31;

        $r0 = (org.apache.maven.plugin.internal.WagonExcluder) this;

        $stack4 = $r0.<org.apache.maven.plugin.internal.WagonExcluder: boolean coreArtifact>;

        if $stack4 == 0 goto label1;

        $stack6 = 1;

        goto label2;

     label1:
        $stack6 = 0;

     label2:
        hash = $stack5 + $stack6;

        return hash;
    }
}
