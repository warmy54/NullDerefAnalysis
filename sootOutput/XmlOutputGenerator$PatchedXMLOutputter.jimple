class XmlOutputGenerator$PatchedXMLOutputter extends org.jdom.output.XMLOutputter
{
    private final sortpom.util.XmlWriter writer;
    private final boolean indentBlankLines;
    private final boolean indentSchemaLocation;

    void <init>(sortpom.util.XmlWriter, boolean, boolean)
    {
        XmlOutputGenerator$PatchedXMLOutputter this;
        sortpom.util.XmlWriter writer;
        boolean indentBlankLines, indentSchemaLocation;
        org.jdom.output.Format $stack4;
        sortpom.XmlOutputGenerator$PatchedXMLOutputter $r0, $r1, $r2;

        this := @this: XmlOutputGenerator$PatchedXMLOutputter;

        writer := @parameter0: sortpom.util.XmlWriter;

        indentBlankLines := @parameter1: boolean;

        indentSchemaLocation := @parameter2: boolean;

        specialinvoke this.<org.jdom.output.XMLOutputter: void <init>()>();

        $r0 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        $r0.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: sortpom.util.XmlWriter writer> = writer;

        $r1 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        $r1.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: boolean indentBlankLines> = indentBlankLines;

        $r2 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        $r2.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: boolean indentSchemaLocation> = indentSchemaLocation;

        $stack4 = <org.jdom.output.XMLOutputter: org.jdom.output.Format preserveFormat>;

        virtualinvoke $stack4.<org.jdom.output.Format: org.jdom.output.Format setLineSeparator(java.lang.String)>("\n");

        return;
    }

    protected void printComment(java.io.Writer, org.jdom.Comment) throws java.io.IOException
    {
        org.jdom.Comment comment;
        boolean $stack3, $stack4;
        XmlOutputGenerator$PatchedXMLOutputter this;
        java.io.Writer stringWriter;
        sortpom.XmlOutputGenerator$PatchedXMLOutputter $r0, $r1;

        this := @this: XmlOutputGenerator$PatchedXMLOutputter;

        stringWriter := @parameter0: java.io.Writer;

        comment := @parameter1: org.jdom.Comment;

        $stack3 = comment instanceof sortpom.jdomcontent.NewlineText;

        if $stack3 == 0 goto label1;

        $r0 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        $stack4 = $r0.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: boolean indentBlankLines>;

        if $stack4 != 0 goto label2;

        $r1 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        specialinvoke $r1.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: void clearIndentationForCurrentLine(java.io.Writer)>(stringWriter);

        goto label2;

     label1:
        specialinvoke this.<org.jdom.output.XMLOutputter: void printComment(java.io.Writer,org.jdom.Comment)>(stringWriter, comment);

     label2:
        return;
    }

    private void clearIndentationForCurrentLine(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer stringWriter;
        XmlOutputGenerator$PatchedXMLOutputter this;
        sortpom.util.XmlWriter $stack2;
        sortpom.XmlOutputGenerator$PatchedXMLOutputter $r0;

        this := @this: XmlOutputGenerator$PatchedXMLOutputter;

        stringWriter := @parameter0: java.io.Writer;

        virtualinvoke stringWriter.<java.io.Writer: void flush()>();

        $r0 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        $stack2 = $r0.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: sortpom.util.XmlWriter writer>;

        virtualinvoke $stack2.<sortpom.util.XmlWriter: void clearLineBuffer()>();

        return;
    }

    protected void printAttributes(java.io.Writer, java.util.List, org.jdom.Element, org.jdom.output.XMLOutputter$NamespaceStack) throws java.io.IOException
    {
        XmlOutputGenerator$PatchedXMLOutputter this;
        boolean $stack6, $stack14, $stack18;
        java.io.Writer out;
        java.util.List attributes;
        org.jdom.Element parent;
        org.jdom.output.XMLOutputter$NamespaceStack namespaces;
        int $stack7;
        java.lang.Object attributeObject;
        org.jdom.Attribute $stack15;
        java.lang.String $stack16, $stack17, $stack20, $stack22, $stack24;
        org.jdom.output.Format $stack19, $stack21, $stack23;
        sortpom.XmlOutputGenerator$PatchedXMLOutputter $r0, $r1, $r2, $r3;

        this := @this: XmlOutputGenerator$PatchedXMLOutputter;

        out := @parameter0: java.io.Writer;

        attributes := @parameter1: java.util.List;

        parent := @parameter2: org.jdom.Element;

        namespaces := @parameter3: org.jdom.output.XMLOutputter$NamespaceStack;

        $r0 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        $stack6 = $r0.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: boolean indentSchemaLocation>;

        if $stack6 == 0 goto label1;

        $stack7 = interfaceinvoke attributes.<java.util.List: int size()>();

        if $stack7 != 1 goto label1;

        attributeObject = interfaceinvoke attributes.<java.util.List: java.lang.Object get(int)>(0);

        $stack14 = attributeObject instanceof org.jdom.Attribute;

        if $stack14 == 0 goto label1;

        $stack16 = "schemaLocation";

        $stack15 = (org.jdom.Attribute) attributeObject;

        $stack17 = virtualinvoke $stack15.<org.jdom.Attribute: java.lang.String getName()>();

        $stack18 = virtualinvoke $stack16.<java.lang.String: boolean equals(java.lang.Object)>($stack17);

        if $stack18 == 0 goto label1;

        $r1 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        $stack19 = $r1.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: org.jdom.output.Format currentFormat>;

        $stack20 = virtualinvoke $stack19.<org.jdom.output.Format: java.lang.String getLineSeparator()>();

        virtualinvoke out.<java.io.Writer: void write(java.lang.String)>($stack20);

        $r2 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        $stack21 = $r2.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: org.jdom.output.Format currentFormat>;

        $stack22 = virtualinvoke $stack21.<org.jdom.output.Format: java.lang.String getIndent()>();

        virtualinvoke out.<java.io.Writer: void write(java.lang.String)>($stack22);

        $r3 = (sortpom.XmlOutputGenerator$PatchedXMLOutputter) this;

        $stack23 = $r3.<sortpom.XmlOutputGenerator$PatchedXMLOutputter: org.jdom.output.Format currentFormat>;

        $stack24 = virtualinvoke $stack23.<org.jdom.output.Format: java.lang.String getIndent()>();

        virtualinvoke out.<java.io.Writer: void write(java.lang.String)>($stack24);

     label1:
        specialinvoke this.<org.jdom.output.XMLOutputter: void printAttributes(java.io.Writer,java.util.List,org.jdom.Element,org.jdom.output.XMLOutputter$NamespaceStack)>(out, attributes, parent, namespaces);

        return;
    }
}
