public abstract class XmlWriter extends java.io.Writer
{

    public void <init>()
    {
        XmlWriter this;

        this := @this: XmlWriter;

        specialinvoke this.<java.io.Writer: void <init>()>();

        return;
    }

    public void write(char[])
    {
        java.lang.UnsupportedOperationException $stack2;
        XmlWriter this;
        char[] cbuf;

        this := @this: XmlWriter;

        cbuf := @parameter0: char[];

        $stack2 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack2;
    }

    public void write(java.lang.String, int, int)
    {
        java.lang.UnsupportedOperationException $stack4;
        XmlWriter this;
        java.lang.String str;
        int off, len;

        this := @this: XmlWriter;

        str := @parameter0: java.lang.String;

        off := @parameter1: int;

        len := @parameter2: int;

        $stack4 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack4;
    }

    public void write(char[], int, int)
    {
        java.lang.UnsupportedOperationException $stack4;
        XmlWriter this;
        char[] cbuf;
        int off, len;

        this := @this: XmlWriter;

        cbuf := @parameter0: char[];

        off := @parameter1: int;

        len := @parameter2: int;

        $stack4 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack4;
    }

    public java.io.Writer append(java.lang.CharSequence)
    {
        java.lang.UnsupportedOperationException $stack2;
        XmlWriter this;
        java.lang.CharSequence csq;

        this := @this: XmlWriter;

        csq := @parameter0: java.lang.CharSequence;

        $stack2 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack2;
    }

    public java.io.Writer append(java.lang.CharSequence, int, int)
    {
        java.lang.UnsupportedOperationException $stack4;
        XmlWriter this;
        java.lang.CharSequence csq;
        int start, end;

        this := @this: XmlWriter;

        csq := @parameter0: java.lang.CharSequence;

        start := @parameter1: int;

        end := @parameter2: int;

        $stack4 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack4;
    }

    public java.io.Writer append(char)
    {
        java.lang.UnsupportedOperationException $stack2;
        XmlWriter this;
        char c;

        this := @this: XmlWriter;

        c := @parameter0: char;

        $stack2 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack2;
    }

    public abstract void clearLineBuffer();

    public abstract void write(java.lang.String);

    public abstract void write(int);

    public abstract void flush();

    public abstract void close();

    public volatile java.lang.Appendable append(char) throws java.io.IOException
    {
        XmlWriter this;
        char l1;
        java.io.Writer $stack2;
        sortpom.util.XmlWriter $r0;

        this := @this: XmlWriter;

        l1 := @parameter0: char;

        $r0 = (sortpom.util.XmlWriter) this;

        $stack2 = virtualinvoke $r0.<sortpom.util.XmlWriter: java.io.Writer append(char)>(l1);

        return $stack2;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        XmlWriter this;
        java.lang.CharSequence l1;
        int l2, l3;
        java.io.Writer $stack4;
        sortpom.util.XmlWriter $r0;

        this := @this: XmlWriter;

        l1 := @parameter0: java.lang.CharSequence;

        l2 := @parameter1: int;

        l3 := @parameter2: int;

        $r0 = (sortpom.util.XmlWriter) this;

        $stack4 = virtualinvoke $r0.<sortpom.util.XmlWriter: java.io.Writer append(java.lang.CharSequence,int,int)>(l1, l2, l3);

        return $stack4;
    }

    public volatile java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        XmlWriter this;
        java.lang.CharSequence l1;
        java.io.Writer $stack2;
        sortpom.util.XmlWriter $r0;

        this := @this: XmlWriter;

        l1 := @parameter0: java.lang.CharSequence;

        $r0 = (sortpom.util.XmlWriter) this;

        $stack2 = virtualinvoke $r0.<sortpom.util.XmlWriter: java.io.Writer append(java.lang.CharSequence)>(l1);

        return $stack2;
    }
}
