class Xpp3DomAttributeIterator extends java.lang.Object implements org.apache.commons.jxpath.ri.model.NodeIterator
{
    private org.apache.commons.jxpath.ri.model.NodePointer parent;
    private org.codehaus.plexus.util.xml.Xpp3Dom node;
    private java.util.List attributes;
    private java.util.Map$Entry attribute;
    private int position;

    public void <init>(org.apache.commons.jxpath.ri.model.NodePointer, org.apache.commons.jxpath.ri.QName)
    {
        Xpp3DomAttributeIterator this;
        org.apache.commons.jxpath.ri.model.NodePointer parent;
        java.lang.Object $stack9;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack10, $stack12, $stack18;
        java.lang.String[] l4;
        int l5, l6;
        java.util.Set $stack15;
        java.lang.String name, $stack16, value, $stack23, $stack24;
        org.apache.commons.jxpath.ri.QName qname;
        boolean $stack17, $stack25;
        java.util.LinkedHashMap $u0;
        java.util.ArrayList $u1;
        org.apache.maven.project.harness.Xpp3DomAttributeIterator $r0, $r1, $r2, $r3, $r4;

        this := @this: Xpp3DomAttributeIterator;

        parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer;

        qname := @parameter1: org.apache.commons.jxpath.ri.QName;

        specialinvoke this.<java.lang.Object: void <init>()>();

        $r0 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $r0.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent> = parent;

        $stack9 = virtualinvoke parent.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getNode()>();

        $stack10 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack9;

        $r1 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $r1.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: org.codehaus.plexus.util.xml.Xpp3Dom node> = $stack10;

        $u0 = new java.util.LinkedHashMap;

        specialinvoke $u0.<java.util.LinkedHashMap: void <init>()>();

        $r2 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack12 = $r2.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: org.codehaus.plexus.util.xml.Xpp3Dom node>;

        l4 = virtualinvoke $stack12.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String[] getAttributeNames()>();

        l5 = lengthof l4;

        l6 = 0;

     label1:
        if l6 >= l5 goto label4;

        name = l4[l6];

        $stack16 = virtualinvoke qname.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>();

        $stack17 = virtualinvoke name.<java.lang.String: boolean equals(java.lang.Object)>($stack16);

        if $stack17 != 0 goto label2;

        $stack23 = "*";

        $stack24 = virtualinvoke qname.<org.apache.commons.jxpath.ri.QName: java.lang.String getName()>();

        $stack25 = virtualinvoke $stack23.<java.lang.String: boolean equals(java.lang.Object)>($stack24);

        if $stack25 == 0 goto label3;

     label2:
        $r3 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack18 = $r3.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: org.codehaus.plexus.util.xml.Xpp3Dom node>;

        value = virtualinvoke $stack18.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getAttribute(java.lang.String)>(name);

        interfaceinvoke $u0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(name, value);

     label3:
        l6 = l6 + 1;

        goto label1;

     label4:
        $u1 = new java.util.ArrayList;

        $stack15 = interfaceinvoke $u0.<java.util.Map: java.util.Set entrySet()>();

        specialinvoke $u1.<java.util.ArrayList: void <init>(java.util.Collection)>($stack15);

        $r4 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $r4.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: java.util.List attributes> = $u1;

        return;
    }

    public org.apache.commons.jxpath.ri.model.NodePointer getNodePointer()
    {
        Xpp3DomAttributeIterator this;
        int $stack1;
        java.util.Map$Entry $stack2, $stack4;
        org.apache.commons.jxpath.ri.model.NodePointer $stack5, $r5;
        org.apache.maven.project.harness.Xpp3DomAttributePointer $stack3, $u0;
        org.apache.maven.project.harness.Xpp3DomAttributeIterator $r0, $r1, $r2, $r3, $r4;

        this := @this: Xpp3DomAttributeIterator;

        $r0 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack1 = $r0.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: int position>;

        if $stack1 != 0 goto label1;

        $r1 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        virtualinvoke $r1.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: boolean setPosition(int)>(1);

     label1:
        $r2 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack2 = $r2.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: java.util.Map$Entry attribute>;

        if $stack2 != null goto label2;

        $stack3 = null;

        goto label3;

     label2:
        $u0 = new org.apache.maven.project.harness.Xpp3DomAttributePointer;

        $stack3 = $u0;

        $r3 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack5 = $r3.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: org.apache.commons.jxpath.ri.model.NodePointer parent>;

        $r4 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack4 = $r4.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: java.util.Map$Entry attribute>;

        specialinvoke $u0.<org.apache.maven.project.harness.Xpp3DomAttributePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,java.util.Map$Entry)>($stack5, $stack4);

     label3:
        $r5 = (org.apache.commons.jxpath.ri.model.NodePointer) $stack3;

        return $r5;
    }

    public int getPosition()
    {
        Xpp3DomAttributeIterator this;
        int $stack1;
        org.apache.maven.project.harness.Xpp3DomAttributeIterator $r0;

        this := @this: Xpp3DomAttributeIterator;

        $r0 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack1 = $r0.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: int position>;

        return $stack1;
    }

    public boolean setPosition(int)
    {
        Xpp3DomAttributeIterator this;
        int position, $stack5, $stack9;
        java.util.List $stack4, $stack10;
        java.lang.Object $stack11;
        java.util.Map$Entry $stack6, $stack2;
        boolean $stack3;
        org.apache.maven.project.harness.Xpp3DomAttributeIterator $r0, $r1, $r2, $r3, $r4;

        this := @this: Xpp3DomAttributeIterator;

        position := @parameter0: int;

        $r0 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $r0.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: int position> = position;

        if position <= 0 goto label1;

        $r1 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack4 = $r1.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: java.util.List attributes>;

        $stack5 = interfaceinvoke $stack4.<java.util.List: int size()>();

        if position > $stack5 goto label1;

        $r2 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack10 = $r2.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: java.util.List attributes>;

        $stack9 = position - 1;

        $stack11 = interfaceinvoke $stack10.<java.util.List: java.lang.Object get(int)>($stack9);

        $stack6 = (java.util.Map$Entry) $stack11;

        goto label2;

     label1:
        $stack6 = null;

     label2:
        $r3 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $r3.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: java.util.Map$Entry attribute> = $stack6;

        $r4 = (org.apache.maven.project.harness.Xpp3DomAttributeIterator) this;

        $stack2 = $r4.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: java.util.Map$Entry attribute>;

        if $stack2 == null goto label3;

        $stack3 = 1;

        goto label4;

     label3:
        $stack3 = 0;

     label4:
        return $stack3;
    }
}
