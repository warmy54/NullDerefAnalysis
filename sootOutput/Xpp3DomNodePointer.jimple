class Xpp3DomNodePointer extends org.apache.commons.jxpath.ri.model.NodePointer
{
    private org.codehaus.plexus.util.xml.Xpp3Dom node;

    public void <init>(org.codehaus.plexus.util.xml.Xpp3Dom)
    {
        Xpp3DomNodePointer this;
        org.codehaus.plexus.util.xml.Xpp3Dom node;
        org.apache.maven.project.harness.Xpp3DomNodePointer $r0;

        this := @this: Xpp3DomNodePointer;

        node := @parameter0: org.codehaus.plexus.util.xml.Xpp3Dom;

        specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(null);

        $r0 = (org.apache.maven.project.harness.Xpp3DomNodePointer) this;

        $r0.<org.apache.maven.project.harness.Xpp3DomNodePointer: org.codehaus.plexus.util.xml.Xpp3Dom node> = node;

        return;
    }

    public void <init>(org.apache.commons.jxpath.ri.model.NodePointer, org.codehaus.plexus.util.xml.Xpp3Dom)
    {
        Xpp3DomNodePointer this;
        org.apache.commons.jxpath.ri.model.NodePointer parent;
        org.codehaus.plexus.util.xml.Xpp3Dom node;
        org.apache.maven.project.harness.Xpp3DomNodePointer $r0;

        this := @this: Xpp3DomNodePointer;

        parent := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer;

        node := @parameter1: org.codehaus.plexus.util.xml.Xpp3Dom;

        specialinvoke this.<org.apache.commons.jxpath.ri.model.NodePointer: void <init>(org.apache.commons.jxpath.ri.model.NodePointer)>(parent);

        $r0 = (org.apache.maven.project.harness.Xpp3DomNodePointer) this;

        $r0.<org.apache.maven.project.harness.Xpp3DomNodePointer: org.codehaus.plexus.util.xml.Xpp3Dom node> = node;

        return;
    }

    public int compareChildNodePointers(org.apache.commons.jxpath.ri.model.NodePointer, org.apache.commons.jxpath.ri.model.NodePointer)
    {
        org.apache.commons.jxpath.ri.model.NodePointer pointer1, pointer2;
        java.lang.Object $stack7, $stack8;
        org.codehaus.plexus.util.xml.Xpp3Dom node1, node2, $stack9, $stack11, child;
        Xpp3DomNodePointer this;
        int $stack10, i;
        org.apache.maven.project.harness.Xpp3DomNodePointer $r0, $r1;

        this := @this: Xpp3DomNodePointer;

        pointer1 := @parameter0: org.apache.commons.jxpath.ri.model.NodePointer;

        pointer2 := @parameter1: org.apache.commons.jxpath.ri.model.NodePointer;

        $stack7 = virtualinvoke pointer1.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getBaseValue()>();

        node1 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack7;

        $stack8 = virtualinvoke pointer2.<org.apache.commons.jxpath.ri.model.NodePointer: java.lang.Object getBaseValue()>();

        node2 = (org.codehaus.plexus.util.xml.Xpp3Dom) $stack8;

        if node1 != node2 goto label1;

        return 0;

     label1:
        i = 0;

     label2:
        $r0 = (org.apache.maven.project.harness.Xpp3DomNodePointer) this;

        $stack9 = $r0.<org.apache.maven.project.harness.Xpp3DomNodePointer: org.codehaus.plexus.util.xml.Xpp3Dom node>;

        $stack10 = virtualinvoke $stack9.<org.codehaus.plexus.util.xml.Xpp3Dom: int getChildCount()>();

        if i >= $stack10 goto label5;

        $r1 = (org.apache.maven.project.harness.Xpp3DomNodePointer) this;

        $stack11 = $r1.<org.apache.maven.project.harness.Xpp3DomNodePointer: org.codehaus.plexus.util.xml.Xpp3Dom node>;

        child = virtualinvoke $stack11.<org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom getChild(int)>(i);

        if child != node1 goto label3;

        return -1;

     label3:
        if child != node2 goto label4;

        return 1;

     label4:
        i = i + 1;

        goto label2;

     label5:
        return 0;
    }

    public java.lang.Object getValue()
    {
        Xpp3DomNodePointer this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack1;
        java.lang.Object $stack2;
        org.apache.maven.project.harness.Xpp3DomNodePointer $r0;

        this := @this: Xpp3DomNodePointer;

        $r0 = (org.apache.maven.project.harness.Xpp3DomNodePointer) this;

        $stack1 = $r0.<org.apache.maven.project.harness.Xpp3DomNodePointer: org.codehaus.plexus.util.xml.Xpp3Dom node>;

        $stack2 = staticinvoke <org.apache.maven.project.harness.Xpp3DomNodePointer: java.lang.Object getValue(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack1);

        return $stack2;
    }

    private static java.lang.Object getValue(org.codehaus.plexus.util.xml.Xpp3Dom)
    {
        org.codehaus.plexus.util.xml.Xpp3Dom node, $stack6;
        java.lang.String $stack3, $stack11;
        java.util.ArrayList $stack4;
        int $stack5, i;
        java.lang.Object $stack7;

        node := @parameter0: org.codehaus.plexus.util.xml.Xpp3Dom;

        $stack3 = virtualinvoke node.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getValue()>();

        if $stack3 == null goto label1;

        $stack11 = virtualinvoke node.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getValue()>();

        return $stack11;

     label1:
        $stack4 = new java.util.ArrayList;

        specialinvoke $stack4.<java.util.ArrayList: void <init>()>();

        i = 0;

     label2:
        $stack5 = virtualinvoke node.<org.codehaus.plexus.util.xml.Xpp3Dom: int getChildCount()>();

        if i >= $stack5 goto label3;

        $stack6 = virtualinvoke node.<org.codehaus.plexus.util.xml.Xpp3Dom: org.codehaus.plexus.util.xml.Xpp3Dom getChild(int)>(i);

        $stack7 = staticinvoke <org.apache.maven.project.harness.Xpp3DomNodePointer: java.lang.Object getValue(org.codehaus.plexus.util.xml.Xpp3Dom)>($stack6);

        interfaceinvoke $stack4.<java.util.List: boolean add(java.lang.Object)>($stack7);

        i = i + 1;

        goto label2;

     label3:
        return $stack4;
    }

    public java.lang.Object getBaseValue()
    {
        Xpp3DomNodePointer this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack1;
        org.apache.maven.project.harness.Xpp3DomNodePointer $r0;

        this := @this: Xpp3DomNodePointer;

        $r0 = (org.apache.maven.project.harness.Xpp3DomNodePointer) this;

        $stack1 = $r0.<org.apache.maven.project.harness.Xpp3DomNodePointer: org.codehaus.plexus.util.xml.Xpp3Dom node>;

        return $stack1;
    }

    public java.lang.Object getImmediateNode()
    {
        Xpp3DomNodePointer this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack1;
        org.apache.maven.project.harness.Xpp3DomNodePointer $r0;

        this := @this: Xpp3DomNodePointer;

        $r0 = (org.apache.maven.project.harness.Xpp3DomNodePointer) this;

        $stack1 = $r0.<org.apache.maven.project.harness.Xpp3DomNodePointer: org.codehaus.plexus.util.xml.Xpp3Dom node>;

        return $stack1;
    }

    public int getLength()
    {
        Xpp3DomNodePointer this;

        this := @this: Xpp3DomNodePointer;

        return 1;
    }

    public org.apache.commons.jxpath.ri.QName getName()
    {
        Xpp3DomNodePointer this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack2;
        java.lang.String $stack4;
        org.apache.commons.jxpath.ri.QName $u0;
        org.apache.maven.project.harness.Xpp3DomNodePointer $r0;

        this := @this: Xpp3DomNodePointer;

        $u0 = new org.apache.commons.jxpath.ri.QName;

        $r0 = (org.apache.maven.project.harness.Xpp3DomNodePointer) this;

        $stack2 = $r0.<org.apache.maven.project.harness.Xpp3DomNodePointer: org.codehaus.plexus.util.xml.Xpp3Dom node>;

        $stack4 = virtualinvoke $stack2.<org.codehaus.plexus.util.xml.Xpp3Dom: java.lang.String getName()>();

        specialinvoke $u0.<org.apache.commons.jxpath.ri.QName: void <init>(java.lang.String,java.lang.String)>(null, $stack4);

        return $u0;
    }

    public boolean isCollection()
    {
        Xpp3DomNodePointer this;

        this := @this: Xpp3DomNodePointer;

        return 0;
    }

    public boolean isLeaf()
    {
        Xpp3DomNodePointer this;
        org.codehaus.plexus.util.xml.Xpp3Dom $stack1;
        int $stack2;
        boolean $stack3;
        org.apache.maven.project.harness.Xpp3DomNodePointer $r0;

        this := @this: Xpp3DomNodePointer;

        $r0 = (org.apache.maven.project.harness.Xpp3DomNodePointer) this;

        $stack1 = $r0.<org.apache.maven.project.harness.Xpp3DomNodePointer: org.codehaus.plexus.util.xml.Xpp3Dom node>;

        $stack2 = virtualinvoke $stack1.<org.codehaus.plexus.util.xml.Xpp3Dom: int getChildCount()>();

        if $stack2 > 0 goto label1;

        $stack3 = 1;

        goto label2;

     label1:
        $stack3 = 0;

     label2:
        return $stack3;
    }

    public void setValue(java.lang.Object)
    {
        java.lang.UnsupportedOperationException $stack2;
        Xpp3DomNodePointer this;
        java.lang.Object value;

        this := @this: Xpp3DomNodePointer;

        value := @parameter0: java.lang.Object;

        $stack2 = new java.lang.UnsupportedOperationException;

        specialinvoke $stack2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $stack2;
    }

    public org.apache.commons.jxpath.ri.model.NodeIterator childIterator(org.apache.commons.jxpath.ri.compiler.NodeTest, boolean, org.apache.commons.jxpath.ri.model.NodePointer)
    {
        Xpp3DomNodePointer this;
        org.apache.commons.jxpath.ri.compiler.NodeTest test;
        boolean reverse;
        org.apache.commons.jxpath.ri.model.NodePointer startWith;
        org.apache.maven.project.harness.Xpp3DomNodeIterator $u0;
        org.apache.commons.jxpath.ri.model.NodeIterator $r0;

        this := @this: Xpp3DomNodePointer;

        test := @parameter0: org.apache.commons.jxpath.ri.compiler.NodeTest;

        reverse := @parameter1: boolean;

        startWith := @parameter2: org.apache.commons.jxpath.ri.model.NodePointer;

        $u0 = new org.apache.maven.project.harness.Xpp3DomNodeIterator;

        specialinvoke $u0.<org.apache.maven.project.harness.Xpp3DomNodeIterator: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.compiler.NodeTest,boolean,org.apache.commons.jxpath.ri.model.NodePointer)>(this, test, reverse, startWith);

        $r0 = (org.apache.commons.jxpath.ri.model.NodeIterator) $u0;

        return $r0;
    }

    public org.apache.commons.jxpath.ri.model.NodeIterator attributeIterator(org.apache.commons.jxpath.ri.QName)
    {
        Xpp3DomNodePointer this;
        org.apache.commons.jxpath.ri.QName qname;
        org.apache.maven.project.harness.Xpp3DomAttributeIterator $u0;
        org.apache.commons.jxpath.ri.model.NodeIterator $r0;

        this := @this: Xpp3DomNodePointer;

        qname := @parameter0: org.apache.commons.jxpath.ri.QName;

        $u0 = new org.apache.maven.project.harness.Xpp3DomAttributeIterator;

        specialinvoke $u0.<org.apache.maven.project.harness.Xpp3DomAttributeIterator: void <init>(org.apache.commons.jxpath.ri.model.NodePointer,org.apache.commons.jxpath.ri.QName)>(this, qname);

        $r0 = (org.apache.commons.jxpath.ri.model.NodeIterator) $u0;

        return $r0;
    }
}
